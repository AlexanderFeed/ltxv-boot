#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ merge_audio_files
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_merge_audio.py <–ø—É—Ç—å_–∫_–ø–∞–ø–∫–µ_—Å_–∞—É–¥–∏–æ>
"""

import sys
import os
import re
from pathlib import Path
from pydub import AudioSegment


def extract_number(filename):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    match = re.search(r"(\d+)", filename)
    return int(match.group(1)) if match else -1


def merge_audio_files(audio_dir: Path, output_filename: str = "merged_output.mp3") -> str:
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª"""
    if not audio_dir.exists():
        raise FileNotFoundError(f"–ü–∞–ø–∫–∞ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {audio_dir}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –Ω–æ–º–µ—Ä—É
    files = sorted(
        [f for f in os.listdir(audio_dir) if f.endswith(".mp3")],
        key=extract_number
    )
    
    if not files:
        raise FileNotFoundError(f"–ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: {audio_dir}")
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(files)} –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤:")
    for i, filename in enumerate(files, 1):
        print(f"  {i}. {filename}")
    
    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
    combined = AudioSegment.empty()
    for filename in files:
        file_path = audio_dir / filename
        print(f"üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {filename}")
        audio = AudioSegment.from_file(str(file_path))
        combined += audio
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    output_path = audio_dir / output_filename
    combined.export(str(output_path), format="mp3", bitrate="192k")
    
    print(f"‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–æ {len(files)} —Ñ–∞–π–ª–æ–≤ –≤ {output_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞: {output_path.stat().st_size / 1024 / 1024:.2f} –ú–ë")
    return str(output_path)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) != 2:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_merge_audio.py <–ø—É—Ç—å_–∫_–ø–∞–ø–∫–µ>")
        print("–ü—Ä–∏–º–µ—Ä: python3 -m autovid.backend.tests.test_merge_audio assets/audio/123")
        sys.exit(1)
    
    audio_dir_path = Path(sys.argv[1])
    
    try:
        print(f"üöÄ –ù–∞—á–∏–Ω–∞—é –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏: {audio_dir_path}")
        result_path = merge_audio_files(audio_dir_path)
        print(f"üéâ –£—Å–ø–µ—à–Ω–æ! –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {result_path}")
        
    except FileNotFoundError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main() 