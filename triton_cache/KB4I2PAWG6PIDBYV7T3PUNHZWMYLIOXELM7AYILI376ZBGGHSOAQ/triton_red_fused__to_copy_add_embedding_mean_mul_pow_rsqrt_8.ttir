#loc = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)
#loc1 = loc(unknown)
#loc46 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:27)
#loc72 = loc(callsite(#loc1 at #loc46))
module {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<1x1xi64> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %cst_0 = arith.constant dense<32128> : tensor<1x1xi64> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x1xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = tt.addptr %arg1, %0 : !tt.ptr<i64>, i32 loc(#loc6)
    %6 = tt.splat %5 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc6)
    %7 = tt.load %6, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<i64>> loc(#loc7)
    %8 = scf.for %arg9 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg10 = %cst_6) -> (tensor<1x2048xf32>)  : i32 {
      %11 = tt.splat %arg9 : i32 -> tensor<1x2048xi32> loc(#loc9)
      %12 = arith.addi %11, %4 : tensor<1x2048xi32> loc(#loc9)
      %13 = arith.cmpi slt, %12, %cst_5 : tensor<1x2048xi32> loc(#loc10)
      %14 = arith.muli %0, %c4096_i32 : i32 loc(#loc11)
      %15 = tt.splat %14 : i32 -> tensor<1x2048xi32> loc(#loc69)
      %16 = arith.addi %12, %15 : tensor<1x2048xi32> loc(#loc12)
      %17 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc13)
      %18 = tt.addptr %17, %16 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc13)
      %19 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc70)
      %20 = arith.andi %19, %13 : tensor<1x2048xi1> loc(#loc14)
      %21 = tt.load %18, %20, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc15)
      %22 = arith.extf %21 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc16)
      %23 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc17)
      %24 = tt.addptr %23, %16 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc17)
      %25 = tt.load %24, %20, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc18)
      %26 = arith.extf %25 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc19)
      %27 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc20)
      %28 = tt.addptr %27, %16 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc20)
      %29 = tt.load %28, %20, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc21)
      %30 = arith.extf %29 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc22)
      %31 = arith.addi %7, %cst_0 : tensor<1x1xi64> loc(#loc23)
      %32 = arith.cmpi slt, %7, %cst_1 : tensor<1x1xi64> loc(#loc24)
      %33 = arith.select %32, %31, %7 : tensor<1x1xi1>, tensor<1x1xi64> loc(#loc25)
      %34 = arith.cmpi sge, %33, %cst_1 : tensor<1x1xi64> loc(#loc26)
      %35 = arith.cmpi slt, %33, %cst_0 : tensor<1x1xi64> loc(#loc27)
      %36 = arith.andi %34, %35 : tensor<1x1xi1> loc(#loc28)
      %37 = arith.xori %1, %true : i1 loc(#loc29)
      %38 = tt.splat %37 : i1 -> tensor<1x1xi1> loc(#loc29)
      %39 = arith.ori %36, %38 : tensor<1x1xi1> loc(#loc30)
      %40 = tt.broadcast %39 : tensor<1x1xi1> -> tensor<1x2048xi1> loc(#loc30)
      tt.assert %40, "index out of bounds: 0 <= tmp4 < 32128" : tensor<1x2048xi1> loc(#loc31)
      %41 = arith.muli %33, %cst : tensor<1x1xi64> loc(#loc32)
      %42 = tt.broadcast %41 : tensor<1x1xi64> -> tensor<1x2048xi64> loc(#loc32)
      %43 = arith.extsi %12 : tensor<1x2048xi32> to tensor<1x2048xi64> loc(#loc33)
      %44 = arith.addi %43, %42 : tensor<1x2048xi64> loc(#loc33)
      %45 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc34)
      %46 = tt.addptr %45, %44 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi64> loc(#loc34)
      %47 = tt.load %46, %20, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc35)
      %48 = arith.extf %47 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc36)
      %49 = arith.addf %48, %22 : tensor<1x2048xf32> loc(#loc37)
      %50 = arith.addf %49, %26 : tensor<1x2048xf32> loc(#loc38)
      %51 = arith.addf %50, %30 : tensor<1x2048xf32> loc(#loc39)
      %52 = arith.mulf %51, %51 : tensor<1x2048xf32> loc(#loc40)
      %53 = arith.addf %arg10, %52 : tensor<1x2048xf32> loc(#loc41)
      %54 = arith.select %20, %53, %arg10 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc42)
      %55 = arith.truncf %51 : tensor<1x2048xf32> to tensor<1x2048xbf16> loc(#loc43)
      tt.store %18, %55, %20 : tensor<1x2048x!tt.ptr<bf16>> loc(#loc43)
      scf.yield %54 : tensor<1x2048xf32> loc(#loc44)
    } loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc46)), %arg10: f32 loc(callsite(#loc1 at #loc46))):
      %11 = arith.addf %arg9, %arg10 : f32 loc(#loc76)
      tt.reduce.return %11 : f32 loc(#loc71)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc71)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc48)
    scf.for %arg9 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %11 = tt.splat %arg9 : i32 -> tensor<1x2048xi32> loc(#loc50)
      %12 = arith.addi %11, %4 : tensor<1x2048xi32> loc(#loc50)
      %13 = arith.cmpi slt, %12, %cst_5 : tensor<1x2048xi32> loc(#loc51)
      %14 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc52)
      %15 = tt.addptr %14, %12 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc52)
      %16 = tt.load %15, %13, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc53)
      %17 = arith.extf %16 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc54)
      %18 = arith.muli %0, %c4096_i32 : i32 loc(#loc55)
      %19 = tt.splat %18 : i32 -> tensor<1x2048xi32> loc(#loc74)
      %20 = arith.addi %12, %19 : tensor<1x2048xi32> loc(#loc56)
      %21 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc57)
      %22 = tt.addptr %21, %20 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc57)
      %23 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc75)
      %24 = arith.andi %23, %13 : tensor<1x2048xi1> loc(#loc58)
      %25 = tt.load %22, %24, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc59)
      %26 = arith.extf %25 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc60)
      %27 = arith.divf %10, %cst_4 : tensor<1x1xf32> loc(#loc61)
      %28 = arith.addf %27, %cst_3 : tensor<1x1xf32> loc(#loc62)
      %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc63)
      %30 = tt.broadcast %29 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc64)
      %31 = arith.mulf %26, %30 : tensor<1x2048xf32> loc(#loc64)
      %32 = arith.mulf %17, %31 : tensor<1x2048xf32> loc(#loc65)
      %33 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc66)
      %34 = tt.addptr %33, %20 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc66)
      %35 = arith.truncf %32 : tensor<1x2048xf32> to tensor<1x2048xbf16> loc(#loc67)
      tt.store %34, %35, %24 : tensor<1x2048x!tt.ptr<bf16>> loc(#loc67)
    } loc(#loc49)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":26:27)
#loc5 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":26:37)
#loc6 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:30)
#loc7 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:35)
#loc8 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":31:40)
#loc9 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":32:31)
#loc10 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":33:29)
#loc11 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:50)
#loc12 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:45)
#loc13 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:38)
#loc14 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:63)
#loc15 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:55)
#loc16 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:117)
#loc17 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:34)
#loc18 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:51)
#loc19 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:113)
#loc20 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:35)
#loc21 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:52)
#loc22 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:114)
#loc23 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":41:22)
#loc24 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":42:22)
#loc25 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":43:36)
#loc26 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:32)
#loc27 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:48)
#loc28 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:41)
#loc29 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:60)
#loc30 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:58)
#loc31 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:68)
#loc32 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:46)
#loc33 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:41)
#loc34 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:34)
#loc35 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:53)
#loc36 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:115)
#loc37 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":46:22)
#loc38 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":47:23)
#loc39 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":48:24)
#loc40 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":50:24)
#loc41 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":52:25)
#loc42 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":53:50)
#loc43 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:56)
#loc44 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:8)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc48 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:30)
#loc49 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:40)
#loc50 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":57:31)
#loc51 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":58:29)
#loc52 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:35)
#loc53 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:42)
#loc54 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:95)
#loc55 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:51)
#loc56 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:46)
#loc57 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:39)
#loc58 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:64)
#loc59 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:56)
#loc60 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:118)
#loc61 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":66:25)
#loc62 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":68:24)
#loc63 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":69:32)
#loc64 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":70:24)
#loc65 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":72:24)
#loc66 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:29)
#loc67 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:53)
#loc68 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:4)
#loc69 = loc(fused[#loc12, #loc11])
#loc70 = loc(fused[#loc14, #loc3])
#loc71 = loc(callsite(#loc45 at #loc46))
#loc73 = loc(callsite(#loc47 at #loc45))
#loc74 = loc(fused[#loc56, #loc55])
#loc75 = loc(fused[#loc58, #loc3])
#loc76 = loc(callsite(#loc73 at #loc46))
