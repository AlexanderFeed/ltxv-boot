//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<37>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<181>;
	.reg .b64 	%rd<24>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd15, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r64, %tid.x;
	ld.param.u64 	%rd16, [triton_red_fused_addmm_0_param_2];
	bfe.u32 	%r65, %r64, 7, 1;
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r66, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r67, %r66, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r68, %r65, %r67;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r68, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	shl.b32 	%r69, %r64, 1;
	and.b32  	%r70, %r69, 510;
	shl.b32 	%r71, %r64, 2;
	and.b32  	%r72, %r71, 508;
	shl.b32 	%r73, %r72, 2;
	mov.u32 	%r74, global_smem;
	add.s32 	%r75, %r74, %r73;
	shl.b32 	%r76, %r70, 2;
	add.s32 	%r7, %r74, %r76;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r77, %r68, 3072;
	or.b32  	%r78, %r77, %r72;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd17, %r70, 2;
	add.s64 	%rd1, %rd14, %rd17;
	mov.b32 	%r2, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r1, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd18, %r78, 2;
	add.s64 	%rd2, %rd15, %rd18;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r3, %r2;
	mov.u32 %r4, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r3, %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.f32 	%f3, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f4, %f3, %f1;
	sub.f32 	%f5, %f3, %f2;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f4, 0f3FB8AA3B;
	ex2.approx.f32 	%f7, %f6;
	mul.f32 	%f8, %f5, 0f3FB8AA3B;
	ex2.approx.f32 	%f9, %f8;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f10, %f7, 0f3F800000;
	add.f32 	%f11, %f9, 0f3F800000;
	mov.f32 	%f12, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f13, %f12, %f10;
	div.full.f32 	%f14, %f12, %f11;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f15, %f13, %f1;
	mul.f32 	%f16, %f14, %f2;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r8, %f15;
	mov.b32 	%r9, %f16;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r8, %r9 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs3, %rs4}, %r3;
	cvt.f32.bf16 	%f17, %rs3;
	cvt.f32.bf16 	%f18, %rs4;
	mov.b32 	{%rs5, %rs6}, %r4;
	cvt.f32.bf16 	%f19, %rs5;
	cvt.f32.bf16 	%f20, %rs6;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f21, %f22, %f23, %f24}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f25, %f24, %f20, 0f00000000;
	fma.rn.f32 	%f26, %f23, %f19, 0f00000000;
	fma.rn.f32 	%f27, %f22, %f18, 0f00000000;
	fma.rn.f32 	%f28, %f21, %f17, 0f00000000;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 1024;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r10, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs7, %rs8}, %r10;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f29, %rs7;
	cvt.f32.bf16 	%f30, %rs8;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	add.s64 	%rd4, %rd2, 1024;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r12, %r2;
	mov.u32 %r13, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	// end inline asm
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f31, %f3, %f29;
	sub.f32 	%f32, %f3, %f30;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f33, %f31, 0f3FB8AA3B;
	ex2.approx.f32 	%f34, %f33;
	mul.f32 	%f35, %f32, 0f3FB8AA3B;
	ex2.approx.f32 	%f36, %f35;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f37, %f34, 0f3F800000;
	add.f32 	%f38, %f36, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f39, %f12, %f37;
	div.full.f32 	%f40, %f12, %f38;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f41, %f39, %f29;
	mul.f32 	%f42, %f40, %f30;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r17, %f41;
	mov.b32 	%r18, %f42;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r17, %r18 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs9, %rs10}, %r13;
	cvt.f32.bf16 	%f43, %rs10;
	cvt.f32.bf16 	%f44, %rs9;
	mov.b32 	{%rs11, %rs12}, %r12;
	cvt.f32.bf16 	%f45, %rs12;
	cvt.f32.bf16 	%f46, %rs11;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f47, %f48, %f49, %f50}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f51, %f47, %f46, %f28;
	fma.rn.f32 	%f52, %f48, %f45, %f27;
	fma.rn.f32 	%f53, %f49, %f44, %f26;
	fma.rn.f32 	%f54, %f50, %f43, %f25;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd5, %rd1, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r19, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs13, %rs14}, %r19;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f55, %rs13;
	cvt.f32.bf16 	%f56, %rs14;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r79, %r78, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd19, %r79, 2;
	add.s64 	%rd6, %rd15, %rd19;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r21, %r2;
	mov.u32 %r22, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r21, %r22 }, [ %rd6 + 0 ];
	// end inline asm
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f57, %f3, %f55;
	sub.f32 	%f58, %f3, %f56;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f59, %f57, 0f3FB8AA3B;
	ex2.approx.f32 	%f60, %f59;
	mul.f32 	%f61, %f58, 0f3FB8AA3B;
	ex2.approx.f32 	%f62, %f61;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f63, %f60, 0f3F800000;
	add.f32 	%f64, %f62, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f65, %f12, %f63;
	div.full.f32 	%f66, %f12, %f64;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f67, %f65, %f55;
	mul.f32 	%f68, %f66, %f56;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r26, %f67;
	mov.b32 	%r27, %f68;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r26, %r27 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs15, %rs16}, %r21;
	cvt.f32.bf16 	%f69, %rs15;
	cvt.f32.bf16 	%f70, %rs16;
	mov.b32 	{%rs17, %rs18}, %r22;
	cvt.f32.bf16 	%f71, %rs17;
	cvt.f32.bf16 	%f72, %rs18;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f73, %f74, %f75, %f76}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f77, %f76, %f72, %f54;
	fma.rn.f32 	%f78, %f75, %f71, %f53;
	fma.rn.f32 	%f79, %f74, %f70, %f52;
	fma.rn.f32 	%f80, %f73, %f69, %f51;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd7, %rd1, 3072;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r28, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs19, %rs20}, %r28;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f81, %rs19;
	cvt.f32.bf16 	%f82, %rs20;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r80, %r78, 1536;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd20, %r80, 2;
	add.s64 	%rd8, %rd15, %rd20;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r30, %r2;
	mov.u32 %r31, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r30, %r31 }, [ %rd8 + 0 ];
	// end inline asm
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f83, %f3, %f81;
	sub.f32 	%f84, %f3, %f82;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f85, %f83, 0f3FB8AA3B;
	ex2.approx.f32 	%f86, %f85;
	mul.f32 	%f87, %f84, 0f3FB8AA3B;
	ex2.approx.f32 	%f88, %f87;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f89, %f86, 0f3F800000;
	add.f32 	%f90, %f88, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f91, %f12, %f89;
	div.full.f32 	%f92, %f12, %f90;
$L__tmp8:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f93, %f91, %f81;
	mul.f32 	%f94, %f92, %f82;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r35, %f93;
	mov.b32 	%r36, %f94;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r35, %r36 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs21, %rs22}, %r31;
	cvt.f32.bf16 	%f95, %rs22;
	cvt.f32.bf16 	%f96, %rs21;
	mov.b32 	{%rs23, %rs24}, %r30;
	cvt.f32.bf16 	%f97, %rs24;
	cvt.f32.bf16 	%f98, %rs23;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f99, %f100, %f101, %f102}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f103, %f99, %f98, %f80;
	fma.rn.f32 	%f104, %f100, %f97, %f79;
	fma.rn.f32 	%f105, %f101, %f96, %f78;
	fma.rn.f32 	%f106, %f102, %f95, %f77;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd9, %rd1, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r37, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r37;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f107, %rs25;
	cvt.f32.bf16 	%f108, %rs26;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r81, %r78, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd21, %r81, 2;
	add.s64 	%rd10, %rd15, %rd21;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r39, %r2;
	mov.u32 %r40, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r39, %r40 }, [ %rd10 + 0 ];
	// end inline asm
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f109, %f3, %f107;
	sub.f32 	%f110, %f3, %f108;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f111, %f109, 0f3FB8AA3B;
	ex2.approx.f32 	%f112, %f111;
	mul.f32 	%f113, %f110, 0f3FB8AA3B;
	ex2.approx.f32 	%f114, %f113;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f115, %f112, 0f3F800000;
	add.f32 	%f116, %f114, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f117, %f12, %f115;
	div.full.f32 	%f118, %f12, %f116;
$L__tmp10:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f119, %f117, %f107;
	mul.f32 	%f120, %f118, %f108;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r44, %f119;
	mov.b32 	%r45, %f120;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r44, %r45 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs27, %rs28}, %r39;
	cvt.f32.bf16 	%f121, %rs27;
	cvt.f32.bf16 	%f122, %rs28;
	mov.b32 	{%rs29, %rs30}, %r40;
	cvt.f32.bf16 	%f123, %rs29;
	cvt.f32.bf16 	%f124, %rs30;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f125, %f126, %f127, %f128}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f129, %f128, %f124, %f106;
	fma.rn.f32 	%f130, %f127, %f123, %f105;
	fma.rn.f32 	%f131, %f126, %f122, %f104;
	fma.rn.f32 	%f132, %f125, %f121, %f103;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd11, %rd1, 5120;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r46, %r2;
	@%p1 ld.global.L1::evict_last.b32 { %r46 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs31, %rs32}, %r46;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f133, %rs31;
	cvt.f32.bf16 	%f134, %rs32;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r82, %r78, 2560;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd22, %r82, 2;
	add.s64 	%rd12, %rd15, %rd22;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r48, %r2;
	mov.u32 %r49, %r2;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r48, %r49 }, [ %rd12 + 0 ];
	// end inline asm
$L__tmp11:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f135, %f3, %f133;
	sub.f32 	%f136, %f3, %f134;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f137, %f135, 0f3FB8AA3B;
	ex2.approx.f32 	%f138, %f137;
	mul.f32 	%f139, %f136, 0f3FB8AA3B;
	ex2.approx.f32 	%f140, %f139;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f141, %f138, 0f3F800000;
	add.f32 	%f142, %f140, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f143, %f12, %f141;
	div.full.f32 	%f144, %f12, %f142;
$L__tmp12:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f145, %f143, %f133;
	mul.f32 	%f146, %f144, %f134;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r53, %f145;
	mov.b32 	%r54, %f146;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r7 + 0 ], { %r53, %r54 };
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs33, %rs34}, %r49;
	cvt.f32.bf16 	%f147, %rs34;
	cvt.f32.bf16 	%f148, %rs33;
	mov.b32 	{%rs35, %rs36}, %r48;
	cvt.f32.bf16 	%f149, %rs36;
	cvt.f32.bf16 	%f150, %rs35;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f151, %f152, %f153, %f154}, [%r75];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f155, %f151, %f150, %f132;
	fma.rn.f32 	%f156, %f152, %f149, %f131;
	fma.rn.f32 	%f157, %f153, %f148, %f130;
	fma.rn.f32 	%f158, %f154, %f147, %f129;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f159, %f158, 0f00000000, %p2;
	selp.f32 	%f160, %f157, 0f00000000, %p2;
	selp.f32 	%f161, %f156, 0f00000000, %p2;
	selp.f32 	%f162, %f155, 0f00000000, %p2;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r83, %r64, 1;
	and.b32  	%r84, %r64, 31;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r85, %r67, %r83;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p24, %r85, 9216;
$L__tmp13:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f163, %f162, %f161;
	add.f32 	%f164, %f160, %f163;
	add.f32 	%f165, %f159, %f164;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r86, %f165;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f166, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r88, %f167;
	shfl.sync.bfly.b32	%r89, %r88, 8, 31, -1;
	mov.b32 	%f168, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f169, %f167, %f168;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r90, %f169;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f170, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f171, %f169, %f170;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r92, %f171;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f172, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f173, %f171, %f172;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r94, %f173;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f174, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f175, %f173, %f174;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p19, %r84, 0;
	shr.u32 	%r96, %r64, 3;
	and.b32  	%r97, %r96, 12;
	shl.b32 	%r98, %r65, 4;
	or.b32  	%r99, %r98, %r97;
	add.s32 	%r55, %r74, %r99;
	mov.b32 	%r56, %f175;
	// begin inline asm
	@%p19 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r64, 8;
	add.s32 	%r58, %r74, %r71;
	// begin inline asm
	@%p20 ld.shared.b32 %r57, [ %r58 + 0 ];
	// end inline asm
	mov.b32 	%f176, %r57;
	shfl.sync.bfly.b32	%r100, %r57, 2, 31, -1;
	mov.b32 	%f177, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f178, %f176, %f177;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r101, %f178;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f179, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f180, %f178, %f179;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r103, %r64, 3;
	setp.eq.s32 	%p25, %r103, 0;
	and.pred  	%p21, %p20, %p25;
	mov.b32 	%r60, %f180;
	// begin inline asm
	@%p21 st.shared.b32 [ %r58 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r104, %r74, %r98;
	ld.shared.u32 	%r62, [%r104];
$L__tmp14:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	mad.lo.s32 	%r61, %r65, -12, %r104;
	// begin inline asm
	@%p1 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r105, %r83, 2;
	add.s32 	%r106, %r74, %r105;
	ld.shared.u32 	%r63, [%r106];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd23, %r85, 4;
	add.s64 	%rd13, %rd16, %rd23;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r107, %r64, 254;
	setp.eq.s32 	%p26, %r107, 0;
	and.pred  	%p23, %p26, %p24;
	// begin inline asm
	@%p23 st.global.b32 [ %rd13 + 0 ], { %r63 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
