//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<100>;
	.reg .b64 	%rd<24>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd15, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r34, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r35, %r34, 1;
	ld.param.u64 	%rd16, [triton_red_fused_addmm_0_param_2];
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r36, %tid.x;
	bfe.u32 	%r37, %r36, 8, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r38, %r37, %r35;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r38, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	shl.b32 	%r39, %r36, 1;
	and.b32  	%r40, %r39, 510;
	and.b32  	%r41, %r36, 511;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r42, %r38, 3072;
	or.b32  	%r43, %r42, %r40;
	shl.b32 	%r44, %r41, 2;
	mov.u32 	%r45, global_smem;
	add.s32 	%r3, %r45, %r44;
	shl.b32 	%r46, %r40, 2;
	add.s32 	%r47, %r45, %r46;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd17, %r41, 2;
	add.s64 	%rd1, %rd14, %rd17;
	mov.b16 	%rs2, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd18, %r43, 2;
	add.s64 	%rd2, %rd15, %rd18;
	mov.b32 	%r2, 0;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r1, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r1 }, [ %rd2 + 0 ];
	// end inline asm
	mov.f32 	%f2, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f3, %f2, %f1;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	ex2.approx.f32 	%f5, %f4;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f6, %f5, 0f3F800000;
	mov.f32 	%f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f8, %f7, %f6;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f9, %f8, %f1;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r4, %f9;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r4;
	// end inline asm
	bar.sync 	0;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	add.s64 	%rd4, %rd2, 1024;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd5, %rd1, 2048;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r48, %r43, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd19, %r48, 2;
	add.s64 	%rd6, %rd15, %rd19;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd7, %rd1, 3072;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r49, %r43, 1536;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd20, %r49, 2;
	add.s64 	%rd8, %rd15, %rd20;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd9, %rd1, 4096;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r50, %r43, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd21, %r50, 2;
	add.s64 	%rd10, %rd15, %rd21;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd11, %rd1, 5120;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r51, %r43, 2560;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd22, %r51, 2;
	add.s64 	%rd12, %rd15, %rd22;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs13, %rs14}, %r1;
	cvt.f32.bf16 	%f10, %rs14;
	cvt.f32.bf16 	%f11, %rs13;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v2.f32 	{%f12, %f13}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f14, %f12, %f11, 0f00000000;
	fma.rn.f32 	%f15, %f13, %f10, 0f00000000;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f16, %rs3;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r5, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs15, %rs16}, %r5;
	cvt.f32.bf16 	%f17, %rs15;
	cvt.f32.bf16 	%f18, %rs16;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f19, %f2, %f16;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f20, %f19, 0f3FB8AA3B;
	ex2.approx.f32 	%f21, %f20;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f22, %f21, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f23, %f7, %f22;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f24, %f23, %f16;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r8, %f24;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f25, %f26}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f27, %f26, %f18, %f15;
	fma.rn.f32 	%f28, %f25, %f17, %f14;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f29, %rs5;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r9, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs17, %rs18}, %r9;
	cvt.f32.bf16 	%f30, %rs18;
	cvt.f32.bf16 	%f31, %rs17;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f32, %f2, %f29;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f33, %f32, 0f3FB8AA3B;
	ex2.approx.f32 	%f34, %f33;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f35, %f34, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f36, %f7, %f35;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f37, %f36, %f29;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r12, %f37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f38, %f39}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f40, %f38, %f31, %f28;
	fma.rn.f32 	%f41, %f39, %f30, %f27;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs7, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f42, %rs7;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r13, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs19, %rs20}, %r13;
	cvt.f32.bf16 	%f43, %rs19;
	cvt.f32.bf16 	%f44, %rs20;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f45, %f2, %f42;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f46, %f45, 0f3FB8AA3B;
	ex2.approx.f32 	%f47, %f46;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f48, %f47, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f49, %f7, %f48;
$L__tmp8:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f50, %f49, %f42;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r16, %f50;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f51, %f52}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f53, %f52, %f44, %f41;
	fma.rn.f32 	%f54, %f51, %f43, %f40;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs9, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f55, %rs9;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r17, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r17 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs21, %rs22}, %r17;
	cvt.f32.bf16 	%f56, %rs22;
	cvt.f32.bf16 	%f57, %rs21;
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f58, %f2, %f55;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f59, %f58, 0f3FB8AA3B;
	ex2.approx.f32 	%f60, %f59;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f61, %f60, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f62, %f7, %f61;
$L__tmp10:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f63, %f62, %f55;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r20, %f63;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f64, %f65}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f66, %f64, %f57, %f54;
	fma.rn.f32 	%f67, %f65, %f56, %f53;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs11, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f68, %rs11;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r21, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r21 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs23, %rs24}, %r21;
	cvt.f32.bf16 	%f69, %rs23;
	cvt.f32.bf16 	%f70, %rs24;
$L__tmp11:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f71, %f2, %f68;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f72, %f71, 0f3FB8AA3B;
	ex2.approx.f32 	%f73, %f72;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f74, %f73, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f75, %f7, %f74;
$L__tmp12:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f76, %f75, %f68;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r24, %f76;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f77, %f78}, [%r47];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f79, %f78, %f70, %f67;
	fma.rn.f32 	%f80, %f77, %f69, %f66;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r52, %r36, 1;
	and.b32  	%r53, %r36, 31;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r54, %r35, %r52;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p24, %r54, 9216;
$L__tmp13:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f80, %f79;
	selp.f32 	%f82, %f81, 0f00000000, %p2;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f82;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f83, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f84;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f85, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f86;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f87, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f88;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f89, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f90;
	shfl.sync.bfly.b32	%r64, %r63, 1, 31, -1;
	mov.b32 	%f91, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p19, %r53, 0;
	shr.u32 	%r65, %r36, 3;
	and.b32  	%r66, %r65, 28;
	shl.b32 	%r67, %r37, 5;
	or.b32  	%r68, %r67, %r66;
	add.s32 	%r25, %r45, %r68;
	mov.b32 	%r26, %f92;
	// begin inline asm
	@%p19 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r36, 16;
	shl.b32 	%r69, %r36, 2;
	add.s32 	%r28, %r45, %r69;
	// begin inline asm
	@%p20 ld.shared.b32 %r27, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f93, %r27;
	shfl.sync.bfly.b32	%r70, %r27, 4, 31, -1;
	mov.b32 	%f94, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r71, %f95;
	shfl.sync.bfly.b32	%r72, %r71, 2, 31, -1;
	mov.b32 	%f96, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r73, %f97;
	shfl.sync.bfly.b32	%r74, %r73, 1, 31, -1;
	mov.b32 	%f98, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r75, %r36, 7;
	setp.eq.s32 	%p25, %r75, 0;
	and.pred  	%p21, %p20, %p25;
	mov.b32 	%r30, %f99;
	// begin inline asm
	@%p21 st.shared.b32 [ %r28 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r76, %r45, %r67;
	ld.shared.u32 	%r32, [%r76];
$L__tmp14:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	mad.lo.s32 	%r31, %r37, -28, %r76;
	// begin inline asm
	@%p1 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r77, %r52, 2;
	add.s32 	%r78, %r45, %r77;
	ld.shared.u32 	%r33, [%r78];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd23, %r54, 4;
	add.s64 	%rd13, %rd16, %rd23;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r79, %r36, 510;
	setp.eq.s32 	%p26, %r79, 0;
	and.pred  	%p23, %p26, %p24;
	// begin inline asm
	@%p23 st.global.b32 [ %rd13 + 0 ], { %r33 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
