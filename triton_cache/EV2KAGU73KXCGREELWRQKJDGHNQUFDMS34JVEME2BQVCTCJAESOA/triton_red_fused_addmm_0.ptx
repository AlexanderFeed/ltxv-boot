//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_4,
	.param .u32 triton_red_fused_addmm_0_param_5,
	.param .u32 triton_red_fused_addmm_0_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_7
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<105>;
	.reg .f32 	%f<125>;
	.reg .b64 	%rd<14>;
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd7, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:28
	mov.u32 	%r44, %ctaid.x;
	.loc	1 23 33                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:33
	shl.b32 	%r45, %r44, 1;
	ld.param.u64 	%rd8, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd9, [triton_red_fused_addmm_0_param_3];
	.loc	1 24 44                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:44
	mov.u32 	%r46, %tid.x;
	ld.param.u64 	%rd10, [triton_red_fused_addmm_0_param_4];
	bfe.u32 	%r47, %r46, 9, 1;
	and.b32  	%r48, %r46, 31;
	and.b32  	%r49, %r46, 1;
	.loc	1 24 23                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:23
	or.b32  	%r50, %r47, %r45;
	or.b32  	%r51, %r45, %r49;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p15, %r50, 18432;
	setp.lt.s32 	%p16, %r51, 18432;
	.loc	1 26 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:26:37
	shl.b32 	%r52, %r46, 2;
	and.b32  	%r53, %r52, 4092;
	shl.b32 	%r54, %r46, 3;
	and.b32  	%r55, %r54, 4088;
	.loc	1 33 29                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:33:29
	setp.lt.u32 	%p1, %r53, 3072;
	setp.lt.u32 	%p17, %r55, 3072;
	.loc	1 37 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:34
	mul.wide.u32 	%rd11, %r53, 2;
	add.s64 	%rd1, %rd6, %rd11;
	mov.b32 	%r3, 0;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	mov.b32 	{%rs3, %rs4}, %r2;
	.loc	1 37 94                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:94
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
	.loc	1 38 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:41
	mad.lo.s32 	%r56, %r50, 3072, %r55;
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	mul.wide.s32 	%rd12, %r56, 2;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 38 59                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:59
	and.pred  	%p2, %p17, %p15;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	mov.u32 %r7, %r3;
	mov.u32 %r8, %r3;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r5;
	mov.b32 	{%rs7, %rs8}, %r6;
	mov.b32 	{%rs9, %rs10}, %r7;
	mov.b32 	{%rs11, %rs12}, %r8;
	.loc	1 38 113                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:113
	cvt.f32.bf16 	%f5, %rs5;
	cvt.f32.bf16 	%f6, %rs6;
	cvt.f32.bf16 	%f7, %rs7;
	cvt.f32.bf16 	%f8, %rs8;
	cvt.f32.bf16 	%f9, %rs9;
	cvt.f32.bf16 	%f10, %rs10;
	cvt.f32.bf16 	%f11, %rs11;
	cvt.f32.bf16 	%f12, %rs12;
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd3, %rd8, %rd12;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u32 %r13, %r3;
	mov.u32 %r14, %r3;
	mov.u32 %r15, %r3;
	mov.u32 %r16, %r3;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs13, %rs14}, %r13;
	mov.b32 	{%rs15, %rs16}, %r14;
	mov.b32 	{%rs17, %rs18}, %r15;
	mov.b32 	{%rs19, %rs20}, %r16;
	.loc	1 39 114                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:114
	cvt.f32.bf16 	%f13, %rs13;
	cvt.f32.bf16 	%f14, %rs14;
	cvt.f32.bf16 	%f15, %rs15;
	cvt.f32.bf16 	%f16, %rs16;
	cvt.f32.bf16 	%f17, %rs17;
	cvt.f32.bf16 	%f18, %rs18;
	cvt.f32.bf16 	%f19, %rs19;
	cvt.f32.bf16 	%f20, %rs20;
	mov.f32 	%f21, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f22, %f21, %f1;
	sub.f32 	%f23, %f21, %f2;
	sub.f32 	%f24, %f21, %f3;
	sub.f32 	%f25, %f21, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f26, %f22, 0f3FB8AA3B;
	ex2.approx.f32 	%f27, %f26;
	mul.f32 	%f28, %f23, 0f3FB8AA3B;
	ex2.approx.f32 	%f29, %f28;
	mul.f32 	%f30, %f24, 0f3FB8AA3B;
	ex2.approx.f32 	%f31, %f30;
	mul.f32 	%f32, %f25, 0f3FB8AA3B;
	ex2.approx.f32 	%f33, %f32;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f34, %f27, 0f3F800000;
	add.f32 	%f35, %f29, 0f3F800000;
	add.f32 	%f36, %f31, 0f3F800000;
	add.f32 	%f37, %f33, 0f3F800000;
	mov.f32 	%f38, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f39, %f38, %f34;
	div.full.f32 	%f40, %f38, %f35;
	div.full.f32 	%f41, %f38, %f36;
	div.full.f32 	%f42, %f38, %f37;
$L__tmp2:
	.loc	1 42 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:42:22
	mul.f32 	%f43, %f39, %f1;
	mul.f32 	%f44, %f40, %f2;
	mul.f32 	%f45, %f41, %f3;
	mul.f32 	%f46, %f42, %f4;
	.loc	1 46 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:46:22
	shl.b32 	%r57, %r53, 2;
	mov.u32 	%r58, global_smem;
	add.s32 	%r21, %r58, %r57;
	mov.b32 	%r22, %f43;
	mov.b32 	%r23, %f44;
	mov.b32 	%r24, %f45;
	mov.b32 	%r25, %f46;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v4.b32 [ %r21 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r59, %r55, 2;
	add.s32 	%r60, %r58, %r59;
	ld.shared.v4.f32 	{%f47, %f48, %f49, %f50}, [%r60];
	ld.shared.v4.f32 	{%f51, %f52, %f53, %f54}, [%r60+16];
	.loc	1 48 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:48:25
	fma.rn.f32 	%f55, %f47, %f5, 0f00000000;
	fma.rn.f32 	%f56, %f48, %f6, 0f00000000;
	fma.rn.f32 	%f57, %f49, %f7, 0f00000000;
	fma.rn.f32 	%f58, %f50, %f8, 0f00000000;
	fma.rn.f32 	%f59, %f51, %f9, 0f00000000;
	fma.rn.f32 	%f60, %f52, %f10, 0f00000000;
	fma.rn.f32 	%f61, %f53, %f11, 0f00000000;
	fma.rn.f32 	%f62, %f54, %f12, 0f00000000;
	.loc	1 53 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:53:25
	fma.rn.f32 	%f63, %f47, %f13, 0f00000000;
	fma.rn.f32 	%f64, %f48, %f14, 0f00000000;
	fma.rn.f32 	%f65, %f49, %f15, 0f00000000;
	fma.rn.f32 	%f66, %f50, %f16, 0f00000000;
	fma.rn.f32 	%f67, %f51, %f17, 0f00000000;
	fma.rn.f32 	%f68, %f52, %f18, 0f00000000;
	fma.rn.f32 	%f69, %f53, %f19, 0f00000000;
	fma.rn.f32 	%f70, %f54, %f20, 0f00000000;
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f55, %f56;
	add.f32 	%f72, %f57, %f71;
	add.f32 	%f73, %f58, %f72;
	add.f32 	%f74, %f59, %f73;
	add.f32 	%f75, %f60, %f74;
	add.f32 	%f76, %f61, %f75;
	add.f32 	%f77, %f62, %f76;
	selp.f32 	%f78, %f77, 0f00000000, %p2;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f78;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f79, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f80;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f81, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r65, %f82;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f83, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r67, %f84;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f85, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r69, %f86;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f87, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p5, %r48, 0;
	shr.u32 	%r71, %r46, 3;
	and.b32  	%r72, %r71, 60;
	shl.b32 	%r73, %r47, 6;
	or.b32  	%r74, %r73, %r72;
	add.s32 	%r26, %r58, %r74;
	mov.b32 	%r27, %f88;
	// begin inline asm
	@%p5 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r46, 32;
	add.s32 	%r29, %r58, %r52;
	// begin inline asm
	@%p6 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f89, %r28;
	shfl.sync.bfly.b32	%r75, %r28, 8, 31, -1;
	mov.b32 	%f90, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r76, %f91;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f92, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r78, %f93;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f94, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f95;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f96, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r82, %r46, 15;
	setp.eq.s32 	%p18, %r82, 0;
	and.pred  	%p7, %p6, %p18;
	mov.b32 	%r31, %f97;
	// begin inline asm
	@%p7 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r83, %r58, %r73;
	ld.shared.u32 	%r33, [%r83];
$L__tmp4:
	.loc	1 55 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:55:30
	bar.sync 	0;
	shl.b32 	%r84, %r47, 2;
	add.s32 	%r32, %r58, %r84;
	// begin inline asm
	@%p4 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r85, %r49, 2;
	add.s32 	%r86, %r58, %r85;
	ld.shared.u32 	%r42, [%r86];
$L__tmp5:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f63, %f64;
	add.f32 	%f99, %f65, %f98;
	add.f32 	%f100, %f66, %f99;
	add.f32 	%f101, %f67, %f100;
	add.f32 	%f102, %f68, %f101;
	add.f32 	%f103, %f69, %f102;
	add.f32 	%f104, %f70, %f103;
	selp.f32 	%f105, %f104, 0f00000000, %p2;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r87, %f105;
	shfl.sync.bfly.b32	%r88, %r87, 16, 31, -1;
	mov.b32 	%f106, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f105, %f106;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f107;
	shfl.sync.bfly.b32	%r90, %r89, 8, 31, -1;
	mov.b32 	%f108, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f109;
	shfl.sync.bfly.b32	%r92, %r91, 4, 31, -1;
	mov.b32 	%f110, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f111;
	shfl.sync.bfly.b32	%r94, %r93, 2, 31, -1;
	mov.b32 	%f112, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r95, %f113;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f114, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f115;
	// begin inline asm
	@%p5 st.shared.b32 [ %r26 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r36, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f116, %r36;
	shfl.sync.bfly.b32	%r97, %r36, 8, 31, -1;
	mov.b32 	%f117, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f118;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f119, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r100, %f120;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f121, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r102, %f122;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f123, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f124;
	// begin inline asm
	@%p7 st.shared.b32 [ %r29 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r41, [%r83];
$L__tmp6:
	.loc	1 56 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:56:30
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.b32 [ %r32 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r43, [%r86];
	.loc	1 57 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:25
	mul.wide.s32 	%rd13, %r51, 4;
	add.s64 	%rd4, %rd9, %rd13;
	.loc	1 57 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:37
	and.b32  	%r104, %r46, 1022;
	setp.eq.s32 	%p19, %r104, 0;
	and.pred  	%p13, %p19, %p16;
	// begin inline asm
	@%p13 st.global.b32 [ %rd4 + 0 ], { %r42 };
	// end inline asm
	.loc	1 58 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:25
	add.s64 	%rd5, %rd10, %rd13;
	.loc	1 58 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:37
	// begin inline asm
	@%p13 st.global.b32 [ %rd5 + 0 ], { %r43 };
	// end inline asm
	.loc	1 58 4                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 226                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 100
.b8 101
.b8 106
.b8 114
.b8 102
.b8 121
.b8 118
.b8 50
.b8 107
.b8 119
.b8 101
.b8 100
.b8 52
.b8 52
.b8 118
.b8 112
.b8 108
.b8 100
.b8 117
.b8 51
.b8 108
.b8 113
.b8 51
.b8 102
.b8 113
.b8 121
.b8 113
.b8 113
.b8 122
.b8 116
.b8 97
.b8 108
.b8 111
.b8 101
.b8 119
.b8 99
.b8 98
.b8 55
.b8 51
.b8 53
.b8 114
.b8 54
.b8 119
.b8 105
.b8 114
.b8 117
.b8 120
.b8 55
.b8 97
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 112
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
