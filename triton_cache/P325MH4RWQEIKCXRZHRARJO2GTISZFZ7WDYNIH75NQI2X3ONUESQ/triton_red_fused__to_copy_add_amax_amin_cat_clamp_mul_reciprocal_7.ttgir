#blocked = #ttg.blocked<{sizePerThread = [1, 16], threadsPerWarp = [1, 32], warpsPerCTA = [2, 8], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)
#loc1 = loc(unknown)
#loc51 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:40)
#loc55 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:40)
#loc113 = loc(callsite(#loc1 at #loc51))
#loc119 = loc(callsite(#loc1 at #loc55))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg4: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0x7F800000> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<5.000000e-01> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4.471500e-02> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.797884583> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1.000000e+00> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0.00787401571> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<1.000000e+00> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<9.99999974E-6> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-1.270000e+02> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<1.270000e+02> : tensor<2x4096xf32, #blocked> loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c15360_i32 = arith.constant 15360 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<2x4096xbf16, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<4112> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<4112> : tensor<2x1xi32, #blocked1> loc(#loc1)
    %cst_15 = arith.constant dense<15360> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<3072> : tensor<1x4096xi64, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<3072> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<12288> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<-3072> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<15360> : tensor<2x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c2_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<2x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<2x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<2x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<2x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_13 : tensor<2x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_14 : tensor<2x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 4096 : i32, start = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4096xi32, #blocked> loc(#loc7)
    %14 = arith.muli %8, %cst_17 : tensor<2x1xi32, #blocked> loc(#loc8)
    %15 = tt.broadcast %14 : tensor<2x1xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc9)
    %16 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<2x4096x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %17 = tt.broadcast %10 : tensor<2x1xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc11)
    %18 = arith.muli %8, %cst_18 : tensor<2x1xi32, #blocked> loc(#loc12)
    %19 = tt.broadcast %18 : tensor<2x1xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc13)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x4096x!tt.ptr<f32>, #blocked> loc(#loc14)
    %21:2 = scf.for %arg7 = %c0_i32 to %c15360_i32 step %c4096_i32 iter_args(%arg8 = %cst, %arg9 = %cst_0) -> (tensor<2x4096xf32, #blocked>, tensor<2x4096xf32, #blocked>)  : i32 {
      %59 = tt.splat %arg7 : i32 -> tensor<1x4096xi32, #blocked> loc(#loc16)
      %60 = arith.addi %59, %13 : tensor<1x4096xi32, #blocked> loc(#loc16)
      %61 = arith.cmpi slt, %60, %cst_15 : tensor<1x4096xi32, #blocked> loc(#loc17)
      %62 = arith.extsi %60 : tensor<1x4096xi32, #blocked> to tensor<1x4096xi64, #blocked> loc(#loc18)
      %63 = arith.cmpi slt, %62, %cst_16 : tensor<1x4096xi64, #blocked> loc(#loc18)
      %64 = tt.broadcast %60 : tensor<1x4096xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc9)
      %65 = arith.addi %15, %64 : tensor<2x4096xi32, #blocked> loc(#loc9)
      %66 = tt.addptr %16, %65 : tensor<2x4096x!tt.ptr<bf16>, #blocked>, tensor<2x4096xi32, #blocked> loc(#loc10)
      %67 = tt.broadcast %61 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc11)
      %68 = arith.andi %67, %17 : tensor<2x4096xi1, #blocked> loc(#loc11)
      %69 = tt.broadcast %63 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc19)
      %70 = arith.andi %68, %69 : tensor<2x4096xi1, #blocked> loc(#loc19)
      %71 = tt.load %66, %70, %cst_12 evictionPolicy = evict_last : tensor<2x4096x!tt.ptr<bf16>, #blocked> loc(#loc20)
      %72 = arith.extf %71 : tensor<2x4096xbf16, #blocked> to tensor<2x4096xf32, #blocked> loc(#loc21)
      %73 = arith.cmpi sge, %62, %cst_16 : tensor<1x4096xi64, #blocked> loc(#loc22)
      %74 = arith.addi %60, %cst_19 : tensor<1x4096xi32, #blocked> loc(#loc23)
      %75 = tt.broadcast %74 : tensor<1x4096xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc13)
      %76 = arith.addi %19, %75 : tensor<2x4096xi32, #blocked> loc(#loc13)
      %77 = tt.addptr %20, %76 : tensor<2x4096x!tt.ptr<f32>, #blocked>, tensor<2x4096xi32, #blocked> loc(#loc14)
      %78 = tt.broadcast %73 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc24)
      %79 = arith.andi %68, %78 : tensor<2x4096xi1, #blocked> loc(#loc24)
      %80 = tt.load %77, %79, %cst_1 evictionPolicy = evict_last : tensor<2x4096x!tt.ptr<f32>, #blocked> loc(#loc25)
      %81 = arith.mulf %80, %cst_2 : tensor<2x4096xf32, #blocked> loc(#loc26)
      %82 = arith.mulf %80, %80 : tensor<2x4096xf32, #blocked> loc(#loc27)
      %83 = arith.mulf %82, %80 : tensor<2x4096xf32, #blocked> loc(#loc28)
      %84 = arith.mulf %83, %cst_3 : tensor<2x4096xf32, #blocked> loc(#loc29)
      %85 = arith.addf %80, %84 : tensor<2x4096xf32, #blocked> loc(#loc30)
      %86 = arith.mulf %85, %cst_4 : tensor<2x4096xf32, #blocked> loc(#loc31)
      %87 = tt.extern_elementwise %86 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<2x4096xf32, #blocked>) -> tensor<2x4096xf32, #blocked> loc(#loc32)
      %88 = arith.addf %87, %cst_5 : tensor<2x4096xf32, #blocked> loc(#loc33)
      %89 = arith.mulf %81, %88 : tensor<2x4096xf32, #blocked> loc(#loc34)
      %90 = arith.select %78, %89, %cst_1 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc35)
      %91 = arith.select %69, %72, %90 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc36)
      %92 = arith.cmpf olt, %arg8, %91 : tensor<2x4096xf32, #blocked> loc(#loc104)
      %93 = arith.cmpf une, %arg8, %arg8 : tensor<2x4096xf32, #blocked> loc(#loc105)
      %94 = arith.ori %92, %93 : tensor<2x4096xi1, #blocked> loc(#loc106)
      %95 = arith.select %94, %arg8, %91 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc107)
      %96 = arith.select %68, %95, %arg8 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc42)
      %97 = arith.cmpf ogt, %arg9, %91 : tensor<2x4096xf32, #blocked> loc(#loc108)
      %98 = arith.cmpf une, %arg9, %arg9 : tensor<2x4096xf32, #blocked> loc(#loc109)
      %99 = arith.ori %97, %98 : tensor<2x4096xi1, #blocked> loc(#loc110)
      %100 = arith.select %99, %arg9, %91 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc111)
      %101 = arith.select %68, %100, %arg9 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc48)
      scf.yield %96, %101 : tensor<2x4096xf32, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc49)
    } loc(#loc15)
    %22 = "tt.reduce"(%21#0) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc51)), %arg8: f32 loc(callsite(#loc1 at #loc51))):
      %59 = arith.cmpf olt, %arg7, %arg8 : f32 loc(#loc148)
      %60 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc149)
      %61 = arith.ori %59, %60 : i1 loc(#loc150)
      %62 = arith.select %61, %arg7, %arg8 : f32 loc(#loc151)
      tt.reduce.return %62 : f32 loc(#loc112)
    }) : (tensor<2x4096xf32, #blocked>) -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc112)
    %23 = ttg.convert_layout %22 : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc52)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xf32, #blocked1> loc(#loc53)
    %25 = tt.expand_dims %22 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xf32, #blocked> loc(#loc53)
    %26 = "tt.reduce"(%21#1) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc55)), %arg8: f32 loc(callsite(#loc1 at #loc55))):
      %59 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc152)
      %60 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc153)
      %61 = arith.ori %59, %60 : i1 loc(#loc154)
      %62 = arith.select %61, %arg7, %arg8 : f32 loc(#loc155)
      tt.reduce.return %62 : f32 loc(#loc118)
    }) : (tensor<2x4096xf32, #blocked>) -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc118)
    %27 = ttg.convert_layout %26 : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc56)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xf32, #blocked1> loc(#loc57)
    %29 = tt.expand_dims %26 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xf32, #blocked> loc(#loc57)
    %30 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc58)
    %31 = tt.addptr %30, %9 : tensor<2x1x!tt.ptr<bf16>, #blocked1>, tensor<2x1xi32, #blocked1> loc(#loc58)
    %32 = arith.truncf %24 : tensor<2x1xf32, #blocked1> to tensor<2x1xbf16, #blocked1> loc(#loc52)
    tt.store %31, %32, %11 : tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc52)
    %33 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc59)
    %34 = tt.addptr %33, %9 : tensor<2x1x!tt.ptr<bf16>, #blocked1>, tensor<2x1xi32, #blocked1> loc(#loc59)
    %35 = arith.truncf %28 : tensor<2x1xf32, #blocked1> to tensor<2x1xbf16, #blocked1> loc(#loc56)
    tt.store %34, %35, %11 : tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc56)
    %36 = arith.cmpf olt, %25, %cst_6 : tensor<2x1xf32, #blocked> loc(#loc124)
    %37 = arith.cmpf une, %25, %25 : tensor<2x1xf32, #blocked> loc(#loc125)
    %38 = arith.ori %36, %37 : tensor<2x1xi1, #blocked> loc(#loc126)
    %39 = arith.select %38, %25, %cst_6 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc127)
    %40 = arith.subf %cst_6, %39 : tensor<2x1xf32, #blocked> loc(#loc61)
    %41 = arith.cmpf ogt, %29, %cst_6 : tensor<2x1xf32, #blocked> loc(#loc128)
    %42 = arith.cmpf une, %29, %29 : tensor<2x1xf32, #blocked> loc(#loc129)
    %43 = arith.ori %41, %42 : tensor<2x1xi1, #blocked> loc(#loc130)
    %44 = arith.select %43, %29, %cst_6 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc131)
    %45 = arith.cmpf ogt, %40, %44 : tensor<2x1xf32, #blocked> loc(#loc132)
    %46 = arith.cmpf une, %40, %40 : tensor<2x1xf32, #blocked> loc(#loc133)
    %47 = arith.ori %45, %46 : tensor<2x1xi1, #blocked> loc(#loc134)
    %48 = arith.select %47, %40, %44 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc135)
    %49 = arith.mulf %48, %cst_7 : tensor<2x1xf32, #blocked> loc(#loc64)
    %50 = arith.cmpf ogt, %49, %cst_9 : tensor<2x1xf32, #blocked> loc(#loc136)
    %51 = arith.cmpf une, %49, %49 : tensor<2x1xf32, #blocked> loc(#loc137)
    %52 = arith.ori %50, %51 : tensor<2x1xi1, #blocked> loc(#loc138)
    %53 = arith.select %52, %49, %cst_9 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc139)
    %54 = arith.divf %cst_8, %53 : tensor<2x1xf32, #blocked> loc(#loc66)
    %55 = tt.broadcast %54 : tensor<2x1xf32, #blocked> -> tensor<2x4096xf32, #blocked> loc(#loc67)
    %56 = arith.muli %8, %cst_20 : tensor<2x1xi32, #blocked> loc(#loc68)
    %57 = tt.broadcast %56 : tensor<2x1xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc69)
    %58 = tt.splat %arg4 : !tt.ptr<i8> -> tensor<2x4096x!tt.ptr<i8>, #blocked> loc(#loc70)
    scf.for %arg7 = %c0_i32 to %c15360_i32 step %c4096_i32  : i32 {
      %59 = tt.splat %arg7 : i32 -> tensor<1x4096xi32, #blocked> loc(#loc72)
      %60 = arith.addi %59, %13 : tensor<1x4096xi32, #blocked> loc(#loc72)
      %61 = arith.cmpi slt, %60, %cst_15 : tensor<1x4096xi32, #blocked> loc(#loc73)
      %62 = arith.extsi %60 : tensor<1x4096xi32, #blocked> to tensor<1x4096xi64, #blocked> loc(#loc74)
      %63 = arith.cmpi slt, %62, %cst_16 : tensor<1x4096xi64, #blocked> loc(#loc74)
      %64 = tt.broadcast %60 : tensor<1x4096xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc75)
      %65 = arith.addi %15, %64 : tensor<2x4096xi32, #blocked> loc(#loc75)
      %66 = tt.addptr %16, %65 : tensor<2x4096x!tt.ptr<bf16>, #blocked>, tensor<2x4096xi32, #blocked> loc(#loc76)
      %67 = tt.broadcast %61 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc77)
      %68 = arith.andi %67, %17 : tensor<2x4096xi1, #blocked> loc(#loc77)
      %69 = tt.broadcast %63 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc78)
      %70 = arith.andi %68, %69 : tensor<2x4096xi1, #blocked> loc(#loc78)
      %71 = tt.load %66, %70, %cst_12 evictionPolicy = evict_last : tensor<2x4096x!tt.ptr<bf16>, #blocked> loc(#loc79)
      %72 = arith.extf %71 : tensor<2x4096xbf16, #blocked> to tensor<2x4096xf32, #blocked> loc(#loc80)
      %73 = arith.cmpi sge, %62, %cst_16 : tensor<1x4096xi64, #blocked> loc(#loc81)
      %74 = arith.addi %60, %cst_19 : tensor<1x4096xi32, #blocked> loc(#loc82)
      %75 = tt.broadcast %74 : tensor<1x4096xi32, #blocked> -> tensor<2x4096xi32, #blocked> loc(#loc83)
      %76 = arith.addi %19, %75 : tensor<2x4096xi32, #blocked> loc(#loc83)
      %77 = tt.addptr %20, %76 : tensor<2x4096x!tt.ptr<f32>, #blocked>, tensor<2x4096xi32, #blocked> loc(#loc84)
      %78 = tt.broadcast %73 : tensor<1x4096xi1, #blocked> -> tensor<2x4096xi1, #blocked> loc(#loc85)
      %79 = arith.andi %68, %78 : tensor<2x4096xi1, #blocked> loc(#loc85)
      %80 = tt.load %77, %79, %cst_1 evictionPolicy = evict_last : tensor<2x4096x!tt.ptr<f32>, #blocked> loc(#loc86)
      %81 = arith.mulf %80, %cst_2 : tensor<2x4096xf32, #blocked> loc(#loc87)
      %82 = arith.mulf %80, %80 : tensor<2x4096xf32, #blocked> loc(#loc88)
      %83 = arith.mulf %82, %80 : tensor<2x4096xf32, #blocked> loc(#loc89)
      %84 = arith.mulf %83, %cst_3 : tensor<2x4096xf32, #blocked> loc(#loc90)
      %85 = arith.addf %80, %84 : tensor<2x4096xf32, #blocked> loc(#loc91)
      %86 = arith.mulf %85, %cst_4 : tensor<2x4096xf32, #blocked> loc(#loc92)
      %87 = tt.extern_elementwise %86 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<2x4096xf32, #blocked>) -> tensor<2x4096xf32, #blocked> loc(#loc93)
      %88 = arith.addf %87, %cst_5 : tensor<2x4096xf32, #blocked> loc(#loc94)
      %89 = arith.mulf %81, %88 : tensor<2x4096xf32, #blocked> loc(#loc95)
      %90 = arith.select %78, %89, %cst_1 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc96)
      %91 = arith.select %69, %72, %90 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc97)
      %92 = arith.mulf %91, %55 : tensor<2x4096xf32, #blocked> loc(#loc67)
      %93 = tt.extern_elementwise %92 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<2x4096xf32, #blocked>) -> tensor<2x4096xf32, #blocked> loc(#loc98)
      %94 = arith.cmpf ogt, %93, %cst_10 : tensor<2x4096xf32, #blocked> loc(#loc140)
      %95 = arith.cmpf une, %93, %93 : tensor<2x4096xf32, #blocked> loc(#loc141)
      %96 = arith.ori %94, %95 : tensor<2x4096xi1, #blocked> loc(#loc142)
      %97 = arith.select %96, %93, %cst_10 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc143)
      %98 = arith.cmpf olt, %97, %cst_11 : tensor<2x4096xf32, #blocked> loc(#loc144)
      %99 = arith.cmpf une, %97, %97 : tensor<2x4096xf32, #blocked> loc(#loc145)
      %100 = arith.ori %98, %99 : tensor<2x4096xi1, #blocked> loc(#loc146)
      %101 = arith.select %100, %97, %cst_11 : tensor<2x4096xi1, #blocked>, tensor<2x4096xf32, #blocked> loc(#loc147)
      %102 = arith.fptosi %101 : tensor<2x4096xf32, #blocked> to tensor<2x4096xi8, #blocked> loc(#loc101)
      %103 = arith.addi %64, %57 : tensor<2x4096xi32, #blocked> loc(#loc69)
      %104 = tt.addptr %58, %103 : tensor<2x4096x!tt.ptr<i8>, #blocked>, tensor<2x4096xi32, #blocked> loc(#loc70)
      tt.store %104, %102, %68 : tensor<2x4096x!tt.ptr<i8>, #blocked> loc(#loc102)
    } loc(#loc71)
    tt.return loc(#loc103)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:39)
#loc9 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:45)
#loc10 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:34)
#loc11 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:63)
#loc12 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:40)
#loc13 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:46)
#loc14 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:34)
#loc15 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":31:40)
#loc16 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":32:31)
#loc17 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":33:29)
#loc18 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":41:22)
#loc19 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:71)
#loc20 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:53)
#loc21 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:121)
#loc22 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":43:23)
#loc23 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:56)
#loc24 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:82)
#loc25 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:64)
#loc26 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":48:23)
#loc27 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":49:23)
#loc28 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":50:24)
#loc29 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":52:24)
#loc30 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":53:23)
#loc31 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":55:24)
#loc32 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":56:31)
#loc33 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":58:24)
#loc34 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":59:24)
#loc35 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":62:38)
#loc36 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":63:37)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc38 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":65:47)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc40 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc42 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":66:50)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc44 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":67:47)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc46 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc48 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:50)
#loc49 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:8)
#loc50 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc52 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:37)
#loc53 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:43)
#loc54 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc56 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:37)
#loc57 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:43)
#loc58 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:25)
#loc59 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:25)
#loc60 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":107:46)
#loc61 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":108:17)
#loc62 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":109:46)
#loc63 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":110:46)
#loc64 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":112:24)
#loc65 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":115:46)
#loc66 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":118:25)
#loc67 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":121:24)
#loc68 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:42)
#loc69 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:36)
#loc70 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:29)
#loc71 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:40)
#loc72 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":74:31)
#loc73 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":75:29)
#loc74 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":83:24)
#loc75 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:46)
#loc76 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:35)
#loc77 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:64)
#loc78 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:72)
#loc79 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:54)
#loc80 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:123)
#loc81 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":85:25)
#loc82 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:57)
#loc83 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:47)
#loc84 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:35)
#loc85 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:83)
#loc86 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:65)
#loc87 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":90:24)
#loc88 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":91:24)
#loc89 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":92:24)
#loc90 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":94:24)
#loc91 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":95:24)
#loc92 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":97:24)
#loc93 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":98:31)
#loc94 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":100:24)
#loc95 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":101:24)
#loc96 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":104:39)
#loc97 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":105:39)
#loc98 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":122:36)
#loc99 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":125:46)
#loc100 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":127:46)
#loc101 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":129:25)
#loc102 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:54)
#loc103 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:4)
#loc104 = loc(callsite(#loc37 at #loc38))
#loc105 = loc(callsite(#loc39 at #loc38))
#loc106 = loc(callsite(#loc40 at #loc38))
#loc107 = loc(callsite(#loc41 at #loc38))
#loc108 = loc(callsite(#loc43 at #loc44))
#loc109 = loc(callsite(#loc45 at #loc44))
#loc110 = loc(callsite(#loc46 at #loc44))
#loc111 = loc(callsite(#loc47 at #loc44))
#loc112 = loc(callsite(#loc50 at #loc51))
#loc114 = loc(callsite(#loc37 at #loc50))
#loc115 = loc(callsite(#loc39 at #loc50))
#loc116 = loc(callsite(#loc40 at #loc50))
#loc117 = loc(callsite(#loc41 at #loc50))
#loc118 = loc(callsite(#loc54 at #loc55))
#loc120 = loc(callsite(#loc43 at #loc54))
#loc121 = loc(callsite(#loc45 at #loc54))
#loc122 = loc(callsite(#loc46 at #loc54))
#loc123 = loc(callsite(#loc47 at #loc54))
#loc124 = loc(callsite(#loc37 at #loc60))
#loc125 = loc(callsite(#loc39 at #loc60))
#loc126 = loc(callsite(#loc40 at #loc60))
#loc127 = loc(callsite(#loc41 at #loc60))
#loc128 = loc(callsite(#loc43 at #loc62))
#loc129 = loc(callsite(#loc45 at #loc62))
#loc130 = loc(callsite(#loc46 at #loc62))
#loc131 = loc(callsite(#loc47 at #loc62))
#loc132 = loc(callsite(#loc43 at #loc63))
#loc133 = loc(callsite(#loc45 at #loc63))
#loc134 = loc(callsite(#loc46 at #loc63))
#loc135 = loc(callsite(#loc47 at #loc63))
#loc136 = loc(callsite(#loc43 at #loc65))
#loc137 = loc(callsite(#loc45 at #loc65))
#loc138 = loc(callsite(#loc46 at #loc65))
#loc139 = loc(callsite(#loc47 at #loc65))
#loc140 = loc(callsite(#loc43 at #loc99))
#loc141 = loc(callsite(#loc45 at #loc99))
#loc142 = loc(callsite(#loc46 at #loc99))
#loc143 = loc(callsite(#loc47 at #loc99))
#loc144 = loc(callsite(#loc37 at #loc100))
#loc145 = loc(callsite(#loc39 at #loc100))
#loc146 = loc(callsite(#loc40 at #loc100))
#loc147 = loc(callsite(#loc41 at #loc100))
#loc148 = loc(callsite(#loc114 at #loc51))
#loc149 = loc(callsite(#loc115 at #loc51))
#loc150 = loc(callsite(#loc116 at #loc51))
#loc151 = loc(callsite(#loc117 at #loc51))
#loc152 = loc(callsite(#loc120 at #loc55))
#loc153 = loc(callsite(#loc121 at #loc55))
#loc154 = loc(callsite(#loc122 at #loc55))
#loc155 = loc(callsite(#loc123 at #loc55))
