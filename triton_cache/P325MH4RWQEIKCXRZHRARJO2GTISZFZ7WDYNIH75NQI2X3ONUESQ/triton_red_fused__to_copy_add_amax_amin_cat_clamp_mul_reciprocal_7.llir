; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 1, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = lshr i32 %11, 8, !dbg !11
  %.lobit = and i32 %12, 1, !dbg !11
  %13 = and i32 %11, 31, !dbg !11
  %14 = or disjoint i32 %.lobit, %10, !dbg !12
  %15 = icmp slt i32 %14, 4112, !dbg !13
  %16 = shl i32 %11, 4, !dbg !14
  %17 = and i32 %16, 4080, !dbg !14
  %18 = or disjoint i32 %17, 4, !dbg !14
  %19 = or disjoint i32 %17, 8, !dbg !14
  %20 = or disjoint i32 %17, 12, !dbg !14
  %21 = mul i32 %14, 3072, !dbg !15
  %22 = mul i32 %14, 12288, !dbg !16
  %23 = add i32 %22, -3072
  %24 = add i32 %23, %18
  %25 = add i32 %23, %20
  %26 = zext nneg i32 %17 to i64, !dbg !17
  br label %27, !dbg !17

27:                                               ; preds = %8, %__nv_tanhf.exit591
  %indvars.iv = phi i64 [ 0, %8 ], [ %indvars.iv.next, %__nv_tanhf.exit591 ]
  %28 = phi <16 x float> [ splat (float 0xFFF0000000000000), %8 ], [ %797, %__nv_tanhf.exit591 ]
  %29 = phi <16 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %793, %__nv_tanhf.exit591 ]
  %30 = or disjoint i64 %indvars.iv, %26, !dbg !18
  %31 = icmp samesign ult i64 %30, 15360, !dbg !19
  %32 = icmp samesign ult i64 %30, 3072, !dbg !20
  %33 = trunc nuw nsw i64 %30 to i32, !dbg !21
  %34 = add i32 %21, %33, !dbg !21
  %35 = trunc i64 %indvars.iv to i32, !dbg !21
  %36 = or disjoint i32 %19, %35, !dbg !21
  %37 = add i32 %36, %21, !dbg !21
  %38 = sext i32 %34 to i64, !dbg !22
  %39 = getelementptr bfloat, ptr addrspace(1) %0, i64 %38, !dbg !22
  %40 = sext i32 %37 to i64, !dbg !22
  %41 = getelementptr bfloat, ptr addrspace(1) %0, i64 %40, !dbg !22
  %42 = and i1 %15, %31, !dbg !23
  %43 = and i1 %15, %32, !dbg !24
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %39, i1 %43) #5, !dbg !25
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !25
  %46 = bitcast i32 %45 to <2 x bfloat>, !dbg !25
  %47 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !25
  %48 = bitcast i32 %47 to <2 x bfloat>, !dbg !25
  %49 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !25
  %50 = bitcast i32 %49 to <2 x bfloat>, !dbg !25
  %51 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !25
  %52 = bitcast i32 %51 to <2 x bfloat>, !dbg !25
  %53 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %41, i1 %43) #5, !dbg !25
  %54 = extractvalue { i32, i32, i32, i32 } %53, 0, !dbg !25
  %55 = bitcast i32 %54 to <2 x bfloat>, !dbg !25
  %56 = extractvalue { i32, i32, i32, i32 } %53, 1, !dbg !25
  %57 = bitcast i32 %56 to <2 x bfloat>, !dbg !25
  %58 = extractvalue { i32, i32, i32, i32 } %53, 2, !dbg !25
  %59 = bitcast i32 %58 to <2 x bfloat>, !dbg !25
  %60 = extractvalue { i32, i32, i32, i32 } %53, 3, !dbg !25
  %61 = bitcast i32 %60 to <2 x bfloat>, !dbg !25
  %62 = shufflevector <2 x bfloat> %61, <2 x bfloat> %59, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %63 = shufflevector <2 x bfloat> %57, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %64 = shufflevector <16 x bfloat> %62, <16 x bfloat> %63, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %65 = shufflevector <2 x bfloat> %57, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %66 = shufflevector <16 x bfloat> %64, <16 x bfloat> %65, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %67 = shufflevector <2 x bfloat> %55, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %68 = shufflevector <16 x bfloat> %66, <16 x bfloat> %67, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %69 = shufflevector <2 x bfloat> %55, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %70 = shufflevector <16 x bfloat> %68, <16 x bfloat> %69, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %71 = shufflevector <2 x bfloat> %52, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %72 = shufflevector <16 x bfloat> %70, <16 x bfloat> %71, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %73 = shufflevector <2 x bfloat> %52, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %74 = shufflevector <16 x bfloat> %72, <16 x bfloat> %73, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %75 = shufflevector <2 x bfloat> %50, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %76 = shufflevector <16 x bfloat> %74, <16 x bfloat> %75, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %77 = shufflevector <2 x bfloat> %50, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %78 = shufflevector <16 x bfloat> %76, <16 x bfloat> %77, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %79 = shufflevector <2 x bfloat> %48, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %80 = shufflevector <16 x bfloat> %78, <16 x bfloat> %79, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 poison, i32 poison>, !dbg !26
  %81 = shufflevector <2 x bfloat> %48, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %82 = shufflevector <16 x bfloat> %80, <16 x bfloat> %81, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !26
  %83 = shufflevector <2 x bfloat> %46, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %84 = shufflevector <16 x bfloat> %82, <16 x bfloat> %83, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 17, i32 poison>, !dbg !26
  %85 = shufflevector <2 x bfloat> %46, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %86 = shufflevector <16 x bfloat> %84, <16 x bfloat> %85, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !26
  %87 = fpext <16 x bfloat> %86 to <16 x float>, !dbg !26
  %88 = icmp samesign ugt i64 %30, 3071, !dbg !27
  %89 = add i32 %23, %33, !dbg !28
  %90 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !28
  %91 = add i32 %24, %90, !dbg !28
  %92 = add i32 %23, %36, !dbg !28
  %93 = add i32 %25, %90, !dbg !28
  %94 = sext i32 %89 to i64, !dbg !29
  %95 = getelementptr float, ptr addrspace(1) %1, i64 %94, !dbg !29
  %96 = sext i32 %91 to i64, !dbg !29
  %97 = getelementptr float, ptr addrspace(1) %1, i64 %96, !dbg !29
  %98 = sext i32 %92 to i64, !dbg !29
  %99 = getelementptr float, ptr addrspace(1) %1, i64 %98, !dbg !29
  %100 = sext i32 %93 to i64, !dbg !29
  %101 = getelementptr float, ptr addrspace(1) %1, i64 %100, !dbg !29
  %102 = and i1 %88, %42, !dbg !30
  %103 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %95, i1 %102) #5, !dbg !31
  %104 = extractvalue { i32, i32, i32, i32 } %103, 0, !dbg !31
  %105 = extractvalue { i32, i32, i32, i32 } %103, 1, !dbg !31
  %106 = extractvalue { i32, i32, i32, i32 } %103, 2, !dbg !31
  %107 = extractvalue { i32, i32, i32, i32 } %103, 3, !dbg !31
  %108 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %97, i1 %102) #5, !dbg !31
  %109 = extractvalue { i32, i32, i32, i32 } %108, 0, !dbg !31
  %110 = extractvalue { i32, i32, i32, i32 } %108, 1, !dbg !31
  %111 = extractvalue { i32, i32, i32, i32 } %108, 2, !dbg !31
  %112 = extractvalue { i32, i32, i32, i32 } %108, 3, !dbg !31
  %113 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %99, i1 %102) #5, !dbg !31
  %114 = extractvalue { i32, i32, i32, i32 } %113, 0, !dbg !31
  %115 = extractvalue { i32, i32, i32, i32 } %113, 1, !dbg !31
  %116 = extractvalue { i32, i32, i32, i32 } %113, 2, !dbg !31
  %117 = extractvalue { i32, i32, i32, i32 } %113, 3, !dbg !31
  %118 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %101, i1 %102) #5, !dbg !31
  %119 = extractvalue { i32, i32, i32, i32 } %118, 0, !dbg !31
  %120 = extractvalue { i32, i32, i32, i32 } %118, 1, !dbg !31
  %121 = extractvalue { i32, i32, i32, i32 } %118, 2, !dbg !31
  %122 = extractvalue { i32, i32, i32, i32 } %118, 3, !dbg !31
  %123 = insertelement <16 x i32> poison, i32 %122, i64 0, !dbg !31
  %124 = insertelement <16 x i32> %123, i32 %121, i64 1, !dbg !31
  %125 = insertelement <16 x i32> %124, i32 %120, i64 2, !dbg !31
  %126 = insertelement <16 x i32> %125, i32 %119, i64 3, !dbg !31
  %127 = insertelement <16 x i32> %126, i32 %117, i64 4, !dbg !31
  %128 = insertelement <16 x i32> %127, i32 %116, i64 5, !dbg !31
  %129 = insertelement <16 x i32> %128, i32 %115, i64 6, !dbg !31
  %130 = insertelement <16 x i32> %129, i32 %114, i64 7, !dbg !31
  %131 = insertelement <16 x i32> %130, i32 %112, i64 8, !dbg !31
  %132 = insertelement <16 x i32> %131, i32 %111, i64 9, !dbg !31
  %133 = insertelement <16 x i32> %132, i32 %110, i64 10, !dbg !31
  %134 = insertelement <16 x i32> %133, i32 %109, i64 11, !dbg !31
  %135 = insertelement <16 x i32> %134, i32 %107, i64 12, !dbg !31
  %136 = insertelement <16 x i32> %135, i32 %106, i64 13, !dbg !31
  %137 = insertelement <16 x i32> %136, i32 %105, i64 14, !dbg !31
  %138 = insertelement <16 x i32> %137, i32 %104, i64 15, !dbg !31
  %139 = bitcast <16 x i32> %138 to <16 x float>, !dbg !31
  %140 = fmul <16 x float> %139, splat (float 5.000000e-01), !dbg !32
  %141 = bitcast i32 %104 to float, !dbg !33
  %142 = fmul float %141, %141, !dbg !33
  %143 = bitcast i32 %105 to float, !dbg !33
  %144 = fmul float %143, %143, !dbg !33
  %145 = bitcast i32 %106 to float, !dbg !33
  %146 = fmul float %145, %145, !dbg !33
  %147 = bitcast i32 %107 to float, !dbg !33
  %148 = fmul float %147, %147, !dbg !33
  %149 = bitcast i32 %109 to float, !dbg !33
  %150 = fmul float %149, %149, !dbg !33
  %151 = bitcast i32 %110 to float, !dbg !33
  %152 = fmul float %151, %151, !dbg !33
  %153 = bitcast i32 %111 to float, !dbg !33
  %154 = fmul float %153, %153, !dbg !33
  %155 = bitcast i32 %112 to float, !dbg !33
  %156 = fmul float %155, %155, !dbg !33
  %157 = bitcast i32 %114 to float, !dbg !33
  %158 = fmul float %157, %157, !dbg !33
  %159 = bitcast i32 %115 to float, !dbg !33
  %160 = fmul float %159, %159, !dbg !33
  %161 = bitcast i32 %116 to float, !dbg !33
  %162 = fmul float %161, %161, !dbg !33
  %163 = bitcast i32 %117 to float, !dbg !33
  %164 = fmul float %163, %163, !dbg !33
  %165 = bitcast i32 %119 to float, !dbg !33
  %166 = fmul float %165, %165, !dbg !33
  %167 = bitcast i32 %120 to float, !dbg !33
  %168 = fmul float %167, %167, !dbg !33
  %169 = bitcast i32 %121 to float, !dbg !33
  %170 = fmul float %169, %169, !dbg !33
  %171 = bitcast i32 %122 to float, !dbg !33
  %172 = fmul float %171, %171, !dbg !33
  %173 = fmul float %142, %141, !dbg !34
  %174 = fmul float %144, %143, !dbg !34
  %175 = fmul float %146, %145, !dbg !34
  %176 = fmul float %148, %147, !dbg !34
  %177 = fmul float %150, %149, !dbg !34
  %178 = fmul float %152, %151, !dbg !34
  %179 = fmul float %154, %153, !dbg !34
  %180 = fmul float %156, %155, !dbg !34
  %181 = fmul float %158, %157, !dbg !34
  %182 = fmul float %160, %159, !dbg !34
  %183 = fmul float %162, %161, !dbg !34
  %184 = fmul float %164, %163, !dbg !34
  %185 = fmul float %166, %165, !dbg !34
  %186 = fmul float %168, %167, !dbg !34
  %187 = fmul float %170, %169, !dbg !34
  %188 = fmul float %172, %171, !dbg !34
  %189 = fmul float %173, 0x3FA6E4E260000000, !dbg !35
  %190 = fmul float %174, 0x3FA6E4E260000000, !dbg !35
  %191 = fmul float %175, 0x3FA6E4E260000000, !dbg !35
  %192 = fmul float %176, 0x3FA6E4E260000000, !dbg !35
  %193 = fmul float %177, 0x3FA6E4E260000000, !dbg !35
  %194 = fmul float %178, 0x3FA6E4E260000000, !dbg !35
  %195 = fmul float %179, 0x3FA6E4E260000000, !dbg !35
  %196 = fmul float %180, 0x3FA6E4E260000000, !dbg !35
  %197 = fmul float %181, 0x3FA6E4E260000000, !dbg !35
  %198 = fmul float %182, 0x3FA6E4E260000000, !dbg !35
  %199 = fmul float %183, 0x3FA6E4E260000000, !dbg !35
  %200 = fmul float %184, 0x3FA6E4E260000000, !dbg !35
  %201 = fmul float %185, 0x3FA6E4E260000000, !dbg !35
  %202 = fmul float %186, 0x3FA6E4E260000000, !dbg !35
  %203 = fmul float %187, 0x3FA6E4E260000000, !dbg !35
  %204 = fmul float %188, 0x3FA6E4E260000000, !dbg !35
  %205 = fadd float %189, %141, !dbg !36
  %206 = fadd float %190, %143, !dbg !36
  %207 = fadd float %191, %145, !dbg !36
  %208 = fadd float %192, %147, !dbg !36
  %209 = fadd float %193, %149, !dbg !36
  %210 = fadd float %194, %151, !dbg !36
  %211 = fadd float %195, %153, !dbg !36
  %212 = fadd float %196, %155, !dbg !36
  %213 = fadd float %197, %157, !dbg !36
  %214 = fadd float %198, %159, !dbg !36
  %215 = fadd float %199, %161, !dbg !36
  %216 = fadd float %200, %163, !dbg !36
  %217 = fadd float %201, %165, !dbg !36
  %218 = fadd float %202, %167, !dbg !36
  %219 = fadd float %203, %169, !dbg !36
  %220 = fadd float %204, %171, !dbg !36
  %221 = fmul float %205, 0x3FE9884540000000, !dbg !37
  %222 = fmul float %206, 0x3FE9884540000000, !dbg !37
  %223 = fmul float %207, 0x3FE9884540000000, !dbg !37
  %224 = fmul float %208, 0x3FE9884540000000, !dbg !37
  %225 = fmul float %209, 0x3FE9884540000000, !dbg !37
  %226 = fmul float %210, 0x3FE9884540000000, !dbg !37
  %227 = fmul float %211, 0x3FE9884540000000, !dbg !37
  %228 = fmul float %212, 0x3FE9884540000000, !dbg !37
  %229 = fmul float %213, 0x3FE9884540000000, !dbg !37
  %230 = fmul float %214, 0x3FE9884540000000, !dbg !37
  %231 = fmul float %215, 0x3FE9884540000000, !dbg !37
  %232 = fmul float %216, 0x3FE9884540000000, !dbg !37
  %233 = fmul float %217, 0x3FE9884540000000, !dbg !37
  %234 = fmul float %218, 0x3FE9884540000000, !dbg !37
  %235 = fmul float %219, 0x3FE9884540000000, !dbg !37
  %236 = fmul float %220, 0x3FE9884540000000, !dbg !37
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i288 = icmp eq i32 %237, 0, !dbg !38
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %221) #5, !dbg !38
  %239 = tail call float @llvm.nvvm.fabs.f(float %221) #5, !dbg !38
  %.01.i289 = select i1 %.not.i288, float %239, float %238, !dbg !38
  %240 = fcmp ult float %.01.i289, 0x3FE3333340000000, !dbg !38
  br i1 %240, label %__internal_fmad.exit3.i295, label %__internal_fmad.exit1.i290, !dbg !38

__internal_fmad.exit1.i290:                       ; preds = %27
  %241 = fmul float %.01.i289, 0x4007154760000000, !dbg !38
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %241) #5, !dbg !38
  %243 = fadd float %242, 1.000000e+00, !dbg !38
  %244 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %243) #6, !dbg !38, !srcloc !39
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i291 = icmp eq i32 %245, 0, !dbg !38
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i292 = select i1 %.not6.i291, float %247, float %246, !dbg !38
  %248 = fcmp oge float %.01.i289, 0x4022059680000000, !dbg !38
  %s.0.i293 = select i1 %248, float 1.000000e+00, float %.03.i292, !dbg !38
  %249 = bitcast float %s.0.i293 to i32, !dbg !38
  %250 = bitcast float %221 to i32, !dbg !38
  %251 = and i32 %250, -2147483648, !dbg !38
  %252 = or i32 %251, %249, !dbg !38
  %253 = bitcast i32 %252 to float, !dbg !38
  br label %__nv_tanhf.exit306, !dbg !38

__internal_fmad.exit3.i295:                       ; preds = %27
  %254 = fmul float %221, %221, !dbg !38
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i296 = icmp eq i32 %255, 0, !dbg !38
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #5, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i297 = select i1 %.not1.i296, float %257, float %256, !dbg !38
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i298 = icmp eq i32 %258, 0, !dbg !38
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i297, float %254, float 0x3FC10B2820000000) #5, !dbg !38
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i297, float %254, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i299 = select i1 %.not2.i298, float %260, float %259, !dbg !38
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i300 = icmp eq i32 %261, 0, !dbg !38
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i299, float %254, float 0xBFD5553DA0000000) #5, !dbg !38
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i299, float %254, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i301 = select i1 %.not3.i300, float %263, float %262, !dbg !38
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i302 = icmp eq i32 %264, 0, !dbg !38
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i301, float %254, float 0.000000e+00) #5, !dbg !38
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i301, float %254, float 0.000000e+00) #5, !dbg !38
  %.04.i303 = select i1 %.not4.i302, float %266, float %265, !dbg !38
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i304 = icmp eq i32 %267, 0, !dbg !38
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i303, float %221, float %221) #5, !dbg !38
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i303, float %221, float %221) #5, !dbg !38
  %.02.i305 = select i1 %.not5.i304, float %269, float %268, !dbg !38
  br label %__nv_tanhf.exit306, !dbg !38

__nv_tanhf.exit306:                               ; preds = %__internal_fmad.exit1.i290, %__internal_fmad.exit3.i295
  %s.1.i294 = phi float [ %253, %__internal_fmad.exit1.i290 ], [ %.02.i305, %__internal_fmad.exit3.i295 ], !dbg !38
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i307 = icmp eq i32 %270, 0, !dbg !38
  %271 = tail call float @llvm.nvvm.fabs.ftz.f(float %222) #5, !dbg !38
  %272 = tail call float @llvm.nvvm.fabs.f(float %222) #5, !dbg !38
  %.01.i308 = select i1 %.not.i307, float %272, float %271, !dbg !38
  %273 = fcmp ult float %.01.i308, 0x3FE3333340000000, !dbg !38
  br i1 %273, label %__internal_fmad.exit3.i314, label %__internal_fmad.exit1.i309, !dbg !38

__internal_fmad.exit1.i309:                       ; preds = %__nv_tanhf.exit306
  %274 = fmul float %.01.i308, 0x4007154760000000, !dbg !38
  %275 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %274) #5, !dbg !38
  %276 = fadd float %275, 1.000000e+00, !dbg !38
  %277 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %276) #6, !dbg !38, !srcloc !39
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i310 = icmp eq i32 %278, 0, !dbg !38
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i311 = select i1 %.not6.i310, float %280, float %279, !dbg !38
  %281 = fcmp oge float %.01.i308, 0x4022059680000000, !dbg !38
  %s.0.i312 = select i1 %281, float 1.000000e+00, float %.03.i311, !dbg !38
  %282 = bitcast float %s.0.i312 to i32, !dbg !38
  %283 = bitcast float %222 to i32, !dbg !38
  %284 = and i32 %283, -2147483648, !dbg !38
  %285 = or i32 %284, %282, !dbg !38
  %286 = bitcast i32 %285 to float, !dbg !38
  br label %__nv_tanhf.exit325, !dbg !38

__internal_fmad.exit3.i314:                       ; preds = %__nv_tanhf.exit306
  %287 = fmul float %222, %222, !dbg !38
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i315 = icmp eq i32 %288, 0, !dbg !38
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #5, !dbg !38
  %290 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i316 = select i1 %.not1.i315, float %290, float %289, !dbg !38
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i317 = icmp eq i32 %291, 0, !dbg !38
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i316, float %287, float 0x3FC10B2820000000) #5, !dbg !38
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i316, float %287, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i318 = select i1 %.not2.i317, float %293, float %292, !dbg !38
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i319 = icmp eq i32 %294, 0, !dbg !38
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i318, float %287, float 0xBFD5553DA0000000) #5, !dbg !38
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i318, float %287, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i320 = select i1 %.not3.i319, float %296, float %295, !dbg !38
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i321 = icmp eq i32 %297, 0, !dbg !38
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i320, float %287, float 0.000000e+00) #5, !dbg !38
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i320, float %287, float 0.000000e+00) #5, !dbg !38
  %.04.i322 = select i1 %.not4.i321, float %299, float %298, !dbg !38
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i323 = icmp eq i32 %300, 0, !dbg !38
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i322, float %222, float %222) #5, !dbg !38
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i322, float %222, float %222) #5, !dbg !38
  %.02.i324 = select i1 %.not5.i323, float %302, float %301, !dbg !38
  br label %__nv_tanhf.exit325, !dbg !38

__nv_tanhf.exit325:                               ; preds = %__internal_fmad.exit1.i309, %__internal_fmad.exit3.i314
  %s.1.i313 = phi float [ %286, %__internal_fmad.exit1.i309 ], [ %.02.i324, %__internal_fmad.exit3.i314 ], !dbg !38
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i326 = icmp eq i32 %303, 0, !dbg !38
  %304 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !38
  %305 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !38
  %.01.i327 = select i1 %.not.i326, float %305, float %304, !dbg !38
  %306 = fcmp ult float %.01.i327, 0x3FE3333340000000, !dbg !38
  br i1 %306, label %__internal_fmad.exit3.i333, label %__internal_fmad.exit1.i328, !dbg !38

__internal_fmad.exit1.i328:                       ; preds = %__nv_tanhf.exit325
  %307 = fmul float %.01.i327, 0x4007154760000000, !dbg !38
  %308 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %307) #5, !dbg !38
  %309 = fadd float %308, 1.000000e+00, !dbg !38
  %310 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %309) #6, !dbg !38, !srcloc !39
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i329 = icmp eq i32 %311, 0, !dbg !38
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %310, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i330 = select i1 %.not6.i329, float %313, float %312, !dbg !38
  %314 = fcmp oge float %.01.i327, 0x4022059680000000, !dbg !38
  %s.0.i331 = select i1 %314, float 1.000000e+00, float %.03.i330, !dbg !38
  %315 = bitcast float %s.0.i331 to i32, !dbg !38
  %316 = bitcast float %223 to i32, !dbg !38
  %317 = and i32 %316, -2147483648, !dbg !38
  %318 = or i32 %317, %315, !dbg !38
  %319 = bitcast i32 %318 to float, !dbg !38
  br label %__nv_tanhf.exit344, !dbg !38

__internal_fmad.exit3.i333:                       ; preds = %__nv_tanhf.exit325
  %320 = fmul float %223, %223, !dbg !38
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i334 = icmp eq i32 %321, 0, !dbg !38
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #5, !dbg !38
  %323 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i335 = select i1 %.not1.i334, float %323, float %322, !dbg !38
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i336 = icmp eq i32 %324, 0, !dbg !38
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i335, float %320, float 0x3FC10B2820000000) #5, !dbg !38
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i335, float %320, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i337 = select i1 %.not2.i336, float %326, float %325, !dbg !38
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i338 = icmp eq i32 %327, 0, !dbg !38
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i337, float %320, float 0xBFD5553DA0000000) #5, !dbg !38
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i337, float %320, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i339 = select i1 %.not3.i338, float %329, float %328, !dbg !38
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i340 = icmp eq i32 %330, 0, !dbg !38
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i339, float %320, float 0.000000e+00) #5, !dbg !38
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i339, float %320, float 0.000000e+00) #5, !dbg !38
  %.04.i341 = select i1 %.not4.i340, float %332, float %331, !dbg !38
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i342 = icmp eq i32 %333, 0, !dbg !38
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i341, float %223, float %223) #5, !dbg !38
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i341, float %223, float %223) #5, !dbg !38
  %.02.i343 = select i1 %.not5.i342, float %335, float %334, !dbg !38
  br label %__nv_tanhf.exit344, !dbg !38

__nv_tanhf.exit344:                               ; preds = %__internal_fmad.exit1.i328, %__internal_fmad.exit3.i333
  %s.1.i332 = phi float [ %319, %__internal_fmad.exit1.i328 ], [ %.02.i343, %__internal_fmad.exit3.i333 ], !dbg !38
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i345 = icmp eq i32 %336, 0, !dbg !38
  %337 = tail call float @llvm.nvvm.fabs.ftz.f(float %224) #5, !dbg !38
  %338 = tail call float @llvm.nvvm.fabs.f(float %224) #5, !dbg !38
  %.01.i346 = select i1 %.not.i345, float %338, float %337, !dbg !38
  %339 = fcmp ult float %.01.i346, 0x3FE3333340000000, !dbg !38
  br i1 %339, label %__internal_fmad.exit3.i352, label %__internal_fmad.exit1.i347, !dbg !38

__internal_fmad.exit1.i347:                       ; preds = %__nv_tanhf.exit344
  %340 = fmul float %.01.i346, 0x4007154760000000, !dbg !38
  %341 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %340) #5, !dbg !38
  %342 = fadd float %341, 1.000000e+00, !dbg !38
  %343 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %342) #6, !dbg !38, !srcloc !39
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i348 = icmp eq i32 %344, 0, !dbg !38
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %343, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %343, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i349 = select i1 %.not6.i348, float %346, float %345, !dbg !38
  %347 = fcmp oge float %.01.i346, 0x4022059680000000, !dbg !38
  %s.0.i350 = select i1 %347, float 1.000000e+00, float %.03.i349, !dbg !38
  %348 = bitcast float %s.0.i350 to i32, !dbg !38
  %349 = bitcast float %224 to i32, !dbg !38
  %350 = and i32 %349, -2147483648, !dbg !38
  %351 = or i32 %350, %348, !dbg !38
  %352 = bitcast i32 %351 to float, !dbg !38
  br label %__nv_tanhf.exit363, !dbg !38

__internal_fmad.exit3.i352:                       ; preds = %__nv_tanhf.exit344
  %353 = fmul float %224, %224, !dbg !38
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i353 = icmp eq i32 %354, 0, !dbg !38
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %353, float 0xBFAAC795C0000000) #5, !dbg !38
  %356 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %353, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i354 = select i1 %.not1.i353, float %356, float %355, !dbg !38
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i355 = icmp eq i32 %357, 0, !dbg !38
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i354, float %353, float 0x3FC10B2820000000) #5, !dbg !38
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i354, float %353, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i356 = select i1 %.not2.i355, float %359, float %358, !dbg !38
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i357 = icmp eq i32 %360, 0, !dbg !38
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i356, float %353, float 0xBFD5553DA0000000) #5, !dbg !38
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i356, float %353, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i358 = select i1 %.not3.i357, float %362, float %361, !dbg !38
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i359 = icmp eq i32 %363, 0, !dbg !38
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i358, float %353, float 0.000000e+00) #5, !dbg !38
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i358, float %353, float 0.000000e+00) #5, !dbg !38
  %.04.i360 = select i1 %.not4.i359, float %365, float %364, !dbg !38
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i361 = icmp eq i32 %366, 0, !dbg !38
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i360, float %224, float %224) #5, !dbg !38
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i360, float %224, float %224) #5, !dbg !38
  %.02.i362 = select i1 %.not5.i361, float %368, float %367, !dbg !38
  br label %__nv_tanhf.exit363, !dbg !38

__nv_tanhf.exit363:                               ; preds = %__internal_fmad.exit1.i347, %__internal_fmad.exit3.i352
  %s.1.i351 = phi float [ %352, %__internal_fmad.exit1.i347 ], [ %.02.i362, %__internal_fmad.exit3.i352 ], !dbg !38
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i364 = icmp eq i32 %369, 0, !dbg !38
  %370 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !38
  %371 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !38
  %.01.i365 = select i1 %.not.i364, float %371, float %370, !dbg !38
  %372 = fcmp ult float %.01.i365, 0x3FE3333340000000, !dbg !38
  br i1 %372, label %__internal_fmad.exit3.i371, label %__internal_fmad.exit1.i366, !dbg !38

__internal_fmad.exit1.i366:                       ; preds = %__nv_tanhf.exit363
  %373 = fmul float %.01.i365, 0x4007154760000000, !dbg !38
  %374 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %373) #5, !dbg !38
  %375 = fadd float %374, 1.000000e+00, !dbg !38
  %376 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %375) #6, !dbg !38, !srcloc !39
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i367 = icmp eq i32 %377, 0, !dbg !38
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %376, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %379 = tail call float @llvm.nvvm.fma.rn.f(float %376, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i368 = select i1 %.not6.i367, float %379, float %378, !dbg !38
  %380 = fcmp oge float %.01.i365, 0x4022059680000000, !dbg !38
  %s.0.i369 = select i1 %380, float 1.000000e+00, float %.03.i368, !dbg !38
  %381 = bitcast float %s.0.i369 to i32, !dbg !38
  %382 = bitcast float %225 to i32, !dbg !38
  %383 = and i32 %382, -2147483648, !dbg !38
  %384 = or i32 %383, %381, !dbg !38
  %385 = bitcast i32 %384 to float, !dbg !38
  br label %__nv_tanhf.exit382, !dbg !38

__internal_fmad.exit3.i371:                       ; preds = %__nv_tanhf.exit363
  %386 = fmul float %225, %225, !dbg !38
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i372 = icmp eq i32 %387, 0, !dbg !38
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %386, float 0xBFAAC795C0000000) #5, !dbg !38
  %389 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %386, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i373 = select i1 %.not1.i372, float %389, float %388, !dbg !38
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i374 = icmp eq i32 %390, 0, !dbg !38
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i373, float %386, float 0x3FC10B2820000000) #5, !dbg !38
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i373, float %386, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i375 = select i1 %.not2.i374, float %392, float %391, !dbg !38
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i376 = icmp eq i32 %393, 0, !dbg !38
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i375, float %386, float 0xBFD5553DA0000000) #5, !dbg !38
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i375, float %386, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i377 = select i1 %.not3.i376, float %395, float %394, !dbg !38
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i378 = icmp eq i32 %396, 0, !dbg !38
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i377, float %386, float 0.000000e+00) #5, !dbg !38
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i377, float %386, float 0.000000e+00) #5, !dbg !38
  %.04.i379 = select i1 %.not4.i378, float %398, float %397, !dbg !38
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i380 = icmp eq i32 %399, 0, !dbg !38
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i379, float %225, float %225) #5, !dbg !38
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i379, float %225, float %225) #5, !dbg !38
  %.02.i381 = select i1 %.not5.i380, float %401, float %400, !dbg !38
  br label %__nv_tanhf.exit382, !dbg !38

__nv_tanhf.exit382:                               ; preds = %__internal_fmad.exit1.i366, %__internal_fmad.exit3.i371
  %s.1.i370 = phi float [ %385, %__internal_fmad.exit1.i366 ], [ %.02.i381, %__internal_fmad.exit3.i371 ], !dbg !38
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i383 = icmp eq i32 %402, 0, !dbg !38
  %403 = tail call float @llvm.nvvm.fabs.ftz.f(float %226) #5, !dbg !38
  %404 = tail call float @llvm.nvvm.fabs.f(float %226) #5, !dbg !38
  %.01.i384 = select i1 %.not.i383, float %404, float %403, !dbg !38
  %405 = fcmp ult float %.01.i384, 0x3FE3333340000000, !dbg !38
  br i1 %405, label %__internal_fmad.exit3.i390, label %__internal_fmad.exit1.i385, !dbg !38

__internal_fmad.exit1.i385:                       ; preds = %__nv_tanhf.exit382
  %406 = fmul float %.01.i384, 0x4007154760000000, !dbg !38
  %407 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %406) #5, !dbg !38
  %408 = fadd float %407, 1.000000e+00, !dbg !38
  %409 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %408) #6, !dbg !38, !srcloc !39
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i386 = icmp eq i32 %410, 0, !dbg !38
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %409, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %409, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i387 = select i1 %.not6.i386, float %412, float %411, !dbg !38
  %413 = fcmp oge float %.01.i384, 0x4022059680000000, !dbg !38
  %s.0.i388 = select i1 %413, float 1.000000e+00, float %.03.i387, !dbg !38
  %414 = bitcast float %s.0.i388 to i32, !dbg !38
  %415 = bitcast float %226 to i32, !dbg !38
  %416 = and i32 %415, -2147483648, !dbg !38
  %417 = or i32 %416, %414, !dbg !38
  %418 = bitcast i32 %417 to float, !dbg !38
  br label %__nv_tanhf.exit401, !dbg !38

__internal_fmad.exit3.i390:                       ; preds = %__nv_tanhf.exit382
  %419 = fmul float %226, %226, !dbg !38
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i391 = icmp eq i32 %420, 0, !dbg !38
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %419, float 0xBFAAC795C0000000) #5, !dbg !38
  %422 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %419, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i392 = select i1 %.not1.i391, float %422, float %421, !dbg !38
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i393 = icmp eq i32 %423, 0, !dbg !38
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i392, float %419, float 0x3FC10B2820000000) #5, !dbg !38
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i392, float %419, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i394 = select i1 %.not2.i393, float %425, float %424, !dbg !38
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i395 = icmp eq i32 %426, 0, !dbg !38
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i394, float %419, float 0xBFD5553DA0000000) #5, !dbg !38
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i394, float %419, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i396 = select i1 %.not3.i395, float %428, float %427, !dbg !38
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i397 = icmp eq i32 %429, 0, !dbg !38
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i396, float %419, float 0.000000e+00) #5, !dbg !38
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i396, float %419, float 0.000000e+00) #5, !dbg !38
  %.04.i398 = select i1 %.not4.i397, float %431, float %430, !dbg !38
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i399 = icmp eq i32 %432, 0, !dbg !38
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i398, float %226, float %226) #5, !dbg !38
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i398, float %226, float %226) #5, !dbg !38
  %.02.i400 = select i1 %.not5.i399, float %434, float %433, !dbg !38
  br label %__nv_tanhf.exit401, !dbg !38

__nv_tanhf.exit401:                               ; preds = %__internal_fmad.exit1.i385, %__internal_fmad.exit3.i390
  %s.1.i389 = phi float [ %418, %__internal_fmad.exit1.i385 ], [ %.02.i400, %__internal_fmad.exit3.i390 ], !dbg !38
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i402 = icmp eq i32 %435, 0, !dbg !38
  %436 = tail call float @llvm.nvvm.fabs.ftz.f(float %227) #5, !dbg !38
  %437 = tail call float @llvm.nvvm.fabs.f(float %227) #5, !dbg !38
  %.01.i403 = select i1 %.not.i402, float %437, float %436, !dbg !38
  %438 = fcmp ult float %.01.i403, 0x3FE3333340000000, !dbg !38
  br i1 %438, label %__internal_fmad.exit3.i409, label %__internal_fmad.exit1.i404, !dbg !38

__internal_fmad.exit1.i404:                       ; preds = %__nv_tanhf.exit401
  %439 = fmul float %.01.i403, 0x4007154760000000, !dbg !38
  %440 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %439) #5, !dbg !38
  %441 = fadd float %440, 1.000000e+00, !dbg !38
  %442 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %441) #6, !dbg !38, !srcloc !39
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i405 = icmp eq i32 %443, 0, !dbg !38
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %442, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %445 = tail call float @llvm.nvvm.fma.rn.f(float %442, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i406 = select i1 %.not6.i405, float %445, float %444, !dbg !38
  %446 = fcmp oge float %.01.i403, 0x4022059680000000, !dbg !38
  %s.0.i407 = select i1 %446, float 1.000000e+00, float %.03.i406, !dbg !38
  %447 = bitcast float %s.0.i407 to i32, !dbg !38
  %448 = bitcast float %227 to i32, !dbg !38
  %449 = and i32 %448, -2147483648, !dbg !38
  %450 = or i32 %449, %447, !dbg !38
  %451 = bitcast i32 %450 to float, !dbg !38
  br label %__nv_tanhf.exit420, !dbg !38

__internal_fmad.exit3.i409:                       ; preds = %__nv_tanhf.exit401
  %452 = fmul float %227, %227, !dbg !38
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i410 = icmp eq i32 %453, 0, !dbg !38
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %452, float 0xBFAAC795C0000000) #5, !dbg !38
  %455 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %452, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i411 = select i1 %.not1.i410, float %455, float %454, !dbg !38
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i412 = icmp eq i32 %456, 0, !dbg !38
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i411, float %452, float 0x3FC10B2820000000) #5, !dbg !38
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i411, float %452, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i413 = select i1 %.not2.i412, float %458, float %457, !dbg !38
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i414 = icmp eq i32 %459, 0, !dbg !38
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i413, float %452, float 0xBFD5553DA0000000) #5, !dbg !38
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i413, float %452, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i415 = select i1 %.not3.i414, float %461, float %460, !dbg !38
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i416 = icmp eq i32 %462, 0, !dbg !38
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i415, float %452, float 0.000000e+00) #5, !dbg !38
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i415, float %452, float 0.000000e+00) #5, !dbg !38
  %.04.i417 = select i1 %.not4.i416, float %464, float %463, !dbg !38
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i418 = icmp eq i32 %465, 0, !dbg !38
  %466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i417, float %227, float %227) #5, !dbg !38
  %467 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i417, float %227, float %227) #5, !dbg !38
  %.02.i419 = select i1 %.not5.i418, float %467, float %466, !dbg !38
  br label %__nv_tanhf.exit420, !dbg !38

__nv_tanhf.exit420:                               ; preds = %__internal_fmad.exit1.i404, %__internal_fmad.exit3.i409
  %s.1.i408 = phi float [ %451, %__internal_fmad.exit1.i404 ], [ %.02.i419, %__internal_fmad.exit3.i409 ], !dbg !38
  %468 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i421 = icmp eq i32 %468, 0, !dbg !38
  %469 = tail call float @llvm.nvvm.fabs.ftz.f(float %228) #5, !dbg !38
  %470 = tail call float @llvm.nvvm.fabs.f(float %228) #5, !dbg !38
  %.01.i422 = select i1 %.not.i421, float %470, float %469, !dbg !38
  %471 = fcmp ult float %.01.i422, 0x3FE3333340000000, !dbg !38
  br i1 %471, label %__internal_fmad.exit3.i428, label %__internal_fmad.exit1.i423, !dbg !38

__internal_fmad.exit1.i423:                       ; preds = %__nv_tanhf.exit420
  %472 = fmul float %.01.i422, 0x4007154760000000, !dbg !38
  %473 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %472) #5, !dbg !38
  %474 = fadd float %473, 1.000000e+00, !dbg !38
  %475 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %474) #6, !dbg !38, !srcloc !39
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i424 = icmp eq i32 %476, 0, !dbg !38
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %475, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %475, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i425 = select i1 %.not6.i424, float %478, float %477, !dbg !38
  %479 = fcmp oge float %.01.i422, 0x4022059680000000, !dbg !38
  %s.0.i426 = select i1 %479, float 1.000000e+00, float %.03.i425, !dbg !38
  %480 = bitcast float %s.0.i426 to i32, !dbg !38
  %481 = bitcast float %228 to i32, !dbg !38
  %482 = and i32 %481, -2147483648, !dbg !38
  %483 = or i32 %482, %480, !dbg !38
  %484 = bitcast i32 %483 to float, !dbg !38
  br label %__nv_tanhf.exit439, !dbg !38

__internal_fmad.exit3.i428:                       ; preds = %__nv_tanhf.exit420
  %485 = fmul float %228, %228, !dbg !38
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i429 = icmp eq i32 %486, 0, !dbg !38
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %485, float 0xBFAAC795C0000000) #5, !dbg !38
  %488 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %485, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i430 = select i1 %.not1.i429, float %488, float %487, !dbg !38
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i431 = icmp eq i32 %489, 0, !dbg !38
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i430, float %485, float 0x3FC10B2820000000) #5, !dbg !38
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i430, float %485, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i432 = select i1 %.not2.i431, float %491, float %490, !dbg !38
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i433 = icmp eq i32 %492, 0, !dbg !38
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i432, float %485, float 0xBFD5553DA0000000) #5, !dbg !38
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i432, float %485, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i434 = select i1 %.not3.i433, float %494, float %493, !dbg !38
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i435 = icmp eq i32 %495, 0, !dbg !38
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i434, float %485, float 0.000000e+00) #5, !dbg !38
  %497 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i434, float %485, float 0.000000e+00) #5, !dbg !38
  %.04.i436 = select i1 %.not4.i435, float %497, float %496, !dbg !38
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i437 = icmp eq i32 %498, 0, !dbg !38
  %499 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i436, float %228, float %228) #5, !dbg !38
  %500 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i436, float %228, float %228) #5, !dbg !38
  %.02.i438 = select i1 %.not5.i437, float %500, float %499, !dbg !38
  br label %__nv_tanhf.exit439, !dbg !38

__nv_tanhf.exit439:                               ; preds = %__internal_fmad.exit1.i423, %__internal_fmad.exit3.i428
  %s.1.i427 = phi float [ %484, %__internal_fmad.exit1.i423 ], [ %.02.i438, %__internal_fmad.exit3.i428 ], !dbg !38
  %501 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i440 = icmp eq i32 %501, 0, !dbg !38
  %502 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #5, !dbg !38
  %503 = tail call float @llvm.nvvm.fabs.f(float %229) #5, !dbg !38
  %.01.i441 = select i1 %.not.i440, float %503, float %502, !dbg !38
  %504 = fcmp ult float %.01.i441, 0x3FE3333340000000, !dbg !38
  br i1 %504, label %__internal_fmad.exit3.i447, label %__internal_fmad.exit1.i442, !dbg !38

__internal_fmad.exit1.i442:                       ; preds = %__nv_tanhf.exit439
  %505 = fmul float %.01.i441, 0x4007154760000000, !dbg !38
  %506 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %505) #5, !dbg !38
  %507 = fadd float %506, 1.000000e+00, !dbg !38
  %508 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %507) #6, !dbg !38, !srcloc !39
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i443 = icmp eq i32 %509, 0, !dbg !38
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %508, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %511 = tail call float @llvm.nvvm.fma.rn.f(float %508, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i444 = select i1 %.not6.i443, float %511, float %510, !dbg !38
  %512 = fcmp oge float %.01.i441, 0x4022059680000000, !dbg !38
  %s.0.i445 = select i1 %512, float 1.000000e+00, float %.03.i444, !dbg !38
  %513 = bitcast float %s.0.i445 to i32, !dbg !38
  %514 = bitcast float %229 to i32, !dbg !38
  %515 = and i32 %514, -2147483648, !dbg !38
  %516 = or i32 %515, %513, !dbg !38
  %517 = bitcast i32 %516 to float, !dbg !38
  br label %__nv_tanhf.exit458, !dbg !38

__internal_fmad.exit3.i447:                       ; preds = %__nv_tanhf.exit439
  %518 = fmul float %229, %229, !dbg !38
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i448 = icmp eq i32 %519, 0, !dbg !38
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %518, float 0xBFAAC795C0000000) #5, !dbg !38
  %521 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %518, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i449 = select i1 %.not1.i448, float %521, float %520, !dbg !38
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i450 = icmp eq i32 %522, 0, !dbg !38
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i449, float %518, float 0x3FC10B2820000000) #5, !dbg !38
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i449, float %518, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i451 = select i1 %.not2.i450, float %524, float %523, !dbg !38
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i452 = icmp eq i32 %525, 0, !dbg !38
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i451, float %518, float 0xBFD5553DA0000000) #5, !dbg !38
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i451, float %518, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i453 = select i1 %.not3.i452, float %527, float %526, !dbg !38
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i454 = icmp eq i32 %528, 0, !dbg !38
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i453, float %518, float 0.000000e+00) #5, !dbg !38
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i453, float %518, float 0.000000e+00) #5, !dbg !38
  %.04.i455 = select i1 %.not4.i454, float %530, float %529, !dbg !38
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i456 = icmp eq i32 %531, 0, !dbg !38
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i455, float %229, float %229) #5, !dbg !38
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i455, float %229, float %229) #5, !dbg !38
  %.02.i457 = select i1 %.not5.i456, float %533, float %532, !dbg !38
  br label %__nv_tanhf.exit458, !dbg !38

__nv_tanhf.exit458:                               ; preds = %__internal_fmad.exit1.i442, %__internal_fmad.exit3.i447
  %s.1.i446 = phi float [ %517, %__internal_fmad.exit1.i442 ], [ %.02.i457, %__internal_fmad.exit3.i447 ], !dbg !38
  %534 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i459 = icmp eq i32 %534, 0, !dbg !38
  %535 = tail call float @llvm.nvvm.fabs.ftz.f(float %230) #5, !dbg !38
  %536 = tail call float @llvm.nvvm.fabs.f(float %230) #5, !dbg !38
  %.01.i460 = select i1 %.not.i459, float %536, float %535, !dbg !38
  %537 = fcmp ult float %.01.i460, 0x3FE3333340000000, !dbg !38
  br i1 %537, label %__internal_fmad.exit3.i466, label %__internal_fmad.exit1.i461, !dbg !38

__internal_fmad.exit1.i461:                       ; preds = %__nv_tanhf.exit458
  %538 = fmul float %.01.i460, 0x4007154760000000, !dbg !38
  %539 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %538) #5, !dbg !38
  %540 = fadd float %539, 1.000000e+00, !dbg !38
  %541 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %540) #6, !dbg !38, !srcloc !39
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i462 = icmp eq i32 %542, 0, !dbg !38
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %541, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %541, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i463 = select i1 %.not6.i462, float %544, float %543, !dbg !38
  %545 = fcmp oge float %.01.i460, 0x4022059680000000, !dbg !38
  %s.0.i464 = select i1 %545, float 1.000000e+00, float %.03.i463, !dbg !38
  %546 = bitcast float %s.0.i464 to i32, !dbg !38
  %547 = bitcast float %230 to i32, !dbg !38
  %548 = and i32 %547, -2147483648, !dbg !38
  %549 = or i32 %548, %546, !dbg !38
  %550 = bitcast i32 %549 to float, !dbg !38
  br label %__nv_tanhf.exit477, !dbg !38

__internal_fmad.exit3.i466:                       ; preds = %__nv_tanhf.exit458
  %551 = fmul float %230, %230, !dbg !38
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i467 = icmp eq i32 %552, 0, !dbg !38
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %551, float 0xBFAAC795C0000000) #5, !dbg !38
  %554 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %551, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i468 = select i1 %.not1.i467, float %554, float %553, !dbg !38
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i469 = icmp eq i32 %555, 0, !dbg !38
  %556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i468, float %551, float 0x3FC10B2820000000) #5, !dbg !38
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i468, float %551, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i470 = select i1 %.not2.i469, float %557, float %556, !dbg !38
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i471 = icmp eq i32 %558, 0, !dbg !38
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i470, float %551, float 0xBFD5553DA0000000) #5, !dbg !38
  %560 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i470, float %551, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i472 = select i1 %.not3.i471, float %560, float %559, !dbg !38
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i473 = icmp eq i32 %561, 0, !dbg !38
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i472, float %551, float 0.000000e+00) #5, !dbg !38
  %563 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i472, float %551, float 0.000000e+00) #5, !dbg !38
  %.04.i474 = select i1 %.not4.i473, float %563, float %562, !dbg !38
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i475 = icmp eq i32 %564, 0, !dbg !38
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i474, float %230, float %230) #5, !dbg !38
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i474, float %230, float %230) #5, !dbg !38
  %.02.i476 = select i1 %.not5.i475, float %566, float %565, !dbg !38
  br label %__nv_tanhf.exit477, !dbg !38

__nv_tanhf.exit477:                               ; preds = %__internal_fmad.exit1.i461, %__internal_fmad.exit3.i466
  %s.1.i465 = phi float [ %550, %__internal_fmad.exit1.i461 ], [ %.02.i476, %__internal_fmad.exit3.i466 ], !dbg !38
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i478 = icmp eq i32 %567, 0, !dbg !38
  %568 = tail call float @llvm.nvvm.fabs.ftz.f(float %231) #5, !dbg !38
  %569 = tail call float @llvm.nvvm.fabs.f(float %231) #5, !dbg !38
  %.01.i479 = select i1 %.not.i478, float %569, float %568, !dbg !38
  %570 = fcmp ult float %.01.i479, 0x3FE3333340000000, !dbg !38
  br i1 %570, label %__internal_fmad.exit3.i485, label %__internal_fmad.exit1.i480, !dbg !38

__internal_fmad.exit1.i480:                       ; preds = %__nv_tanhf.exit477
  %571 = fmul float %.01.i479, 0x4007154760000000, !dbg !38
  %572 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %571) #5, !dbg !38
  %573 = fadd float %572, 1.000000e+00, !dbg !38
  %574 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %573) #6, !dbg !38, !srcloc !39
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i481 = icmp eq i32 %575, 0, !dbg !38
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %574, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %577 = tail call float @llvm.nvvm.fma.rn.f(float %574, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i482 = select i1 %.not6.i481, float %577, float %576, !dbg !38
  %578 = fcmp oge float %.01.i479, 0x4022059680000000, !dbg !38
  %s.0.i483 = select i1 %578, float 1.000000e+00, float %.03.i482, !dbg !38
  %579 = bitcast float %s.0.i483 to i32, !dbg !38
  %580 = bitcast float %231 to i32, !dbg !38
  %581 = and i32 %580, -2147483648, !dbg !38
  %582 = or i32 %581, %579, !dbg !38
  %583 = bitcast i32 %582 to float, !dbg !38
  br label %__nv_tanhf.exit496, !dbg !38

__internal_fmad.exit3.i485:                       ; preds = %__nv_tanhf.exit477
  %584 = fmul float %231, %231, !dbg !38
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i486 = icmp eq i32 %585, 0, !dbg !38
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %584, float 0xBFAAC795C0000000) #5, !dbg !38
  %587 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %584, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i487 = select i1 %.not1.i486, float %587, float %586, !dbg !38
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i488 = icmp eq i32 %588, 0, !dbg !38
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i487, float %584, float 0x3FC10B2820000000) #5, !dbg !38
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i487, float %584, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i489 = select i1 %.not2.i488, float %590, float %589, !dbg !38
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i490 = icmp eq i32 %591, 0, !dbg !38
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i489, float %584, float 0xBFD5553DA0000000) #5, !dbg !38
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i489, float %584, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i491 = select i1 %.not3.i490, float %593, float %592, !dbg !38
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i492 = icmp eq i32 %594, 0, !dbg !38
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i491, float %584, float 0.000000e+00) #5, !dbg !38
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i491, float %584, float 0.000000e+00) #5, !dbg !38
  %.04.i493 = select i1 %.not4.i492, float %596, float %595, !dbg !38
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i494 = icmp eq i32 %597, 0, !dbg !38
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i493, float %231, float %231) #5, !dbg !38
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i493, float %231, float %231) #5, !dbg !38
  %.02.i495 = select i1 %.not5.i494, float %599, float %598, !dbg !38
  br label %__nv_tanhf.exit496, !dbg !38

__nv_tanhf.exit496:                               ; preds = %__internal_fmad.exit1.i480, %__internal_fmad.exit3.i485
  %s.1.i484 = phi float [ %583, %__internal_fmad.exit1.i480 ], [ %.02.i495, %__internal_fmad.exit3.i485 ], !dbg !38
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i497 = icmp eq i32 %600, 0, !dbg !38
  %601 = tail call float @llvm.nvvm.fabs.ftz.f(float %232) #5, !dbg !38
  %602 = tail call float @llvm.nvvm.fabs.f(float %232) #5, !dbg !38
  %.01.i498 = select i1 %.not.i497, float %602, float %601, !dbg !38
  %603 = fcmp ult float %.01.i498, 0x3FE3333340000000, !dbg !38
  br i1 %603, label %__internal_fmad.exit3.i504, label %__internal_fmad.exit1.i499, !dbg !38

__internal_fmad.exit1.i499:                       ; preds = %__nv_tanhf.exit496
  %604 = fmul float %.01.i498, 0x4007154760000000, !dbg !38
  %605 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %604) #5, !dbg !38
  %606 = fadd float %605, 1.000000e+00, !dbg !38
  %607 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %606) #6, !dbg !38, !srcloc !39
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i500 = icmp eq i32 %608, 0, !dbg !38
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %607, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %610 = tail call float @llvm.nvvm.fma.rn.f(float %607, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i501 = select i1 %.not6.i500, float %610, float %609, !dbg !38
  %611 = fcmp oge float %.01.i498, 0x4022059680000000, !dbg !38
  %s.0.i502 = select i1 %611, float 1.000000e+00, float %.03.i501, !dbg !38
  %612 = bitcast float %s.0.i502 to i32, !dbg !38
  %613 = bitcast float %232 to i32, !dbg !38
  %614 = and i32 %613, -2147483648, !dbg !38
  %615 = or i32 %614, %612, !dbg !38
  %616 = bitcast i32 %615 to float, !dbg !38
  br label %__nv_tanhf.exit515, !dbg !38

__internal_fmad.exit3.i504:                       ; preds = %__nv_tanhf.exit496
  %617 = fmul float %232, %232, !dbg !38
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i505 = icmp eq i32 %618, 0, !dbg !38
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %617, float 0xBFAAC795C0000000) #5, !dbg !38
  %620 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %617, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i506 = select i1 %.not1.i505, float %620, float %619, !dbg !38
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i507 = icmp eq i32 %621, 0, !dbg !38
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i506, float %617, float 0x3FC10B2820000000) #5, !dbg !38
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i506, float %617, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i508 = select i1 %.not2.i507, float %623, float %622, !dbg !38
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i509 = icmp eq i32 %624, 0, !dbg !38
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i508, float %617, float 0xBFD5553DA0000000) #5, !dbg !38
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i508, float %617, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i510 = select i1 %.not3.i509, float %626, float %625, !dbg !38
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i511 = icmp eq i32 %627, 0, !dbg !38
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i510, float %617, float 0.000000e+00) #5, !dbg !38
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i510, float %617, float 0.000000e+00) #5, !dbg !38
  %.04.i512 = select i1 %.not4.i511, float %629, float %628, !dbg !38
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i513 = icmp eq i32 %630, 0, !dbg !38
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i512, float %232, float %232) #5, !dbg !38
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i512, float %232, float %232) #5, !dbg !38
  %.02.i514 = select i1 %.not5.i513, float %632, float %631, !dbg !38
  br label %__nv_tanhf.exit515, !dbg !38

__nv_tanhf.exit515:                               ; preds = %__internal_fmad.exit1.i499, %__internal_fmad.exit3.i504
  %s.1.i503 = phi float [ %616, %__internal_fmad.exit1.i499 ], [ %.02.i514, %__internal_fmad.exit3.i504 ], !dbg !38
  %633 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i516 = icmp eq i32 %633, 0, !dbg !38
  %634 = tail call float @llvm.nvvm.fabs.ftz.f(float %233) #5, !dbg !38
  %635 = tail call float @llvm.nvvm.fabs.f(float %233) #5, !dbg !38
  %.01.i517 = select i1 %.not.i516, float %635, float %634, !dbg !38
  %636 = fcmp ult float %.01.i517, 0x3FE3333340000000, !dbg !38
  br i1 %636, label %__internal_fmad.exit3.i523, label %__internal_fmad.exit1.i518, !dbg !38

__internal_fmad.exit1.i518:                       ; preds = %__nv_tanhf.exit515
  %637 = fmul float %.01.i517, 0x4007154760000000, !dbg !38
  %638 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %637) #5, !dbg !38
  %639 = fadd float %638, 1.000000e+00, !dbg !38
  %640 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %639) #6, !dbg !38, !srcloc !39
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i519 = icmp eq i32 %641, 0, !dbg !38
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %640, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %643 = tail call float @llvm.nvvm.fma.rn.f(float %640, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i520 = select i1 %.not6.i519, float %643, float %642, !dbg !38
  %644 = fcmp oge float %.01.i517, 0x4022059680000000, !dbg !38
  %s.0.i521 = select i1 %644, float 1.000000e+00, float %.03.i520, !dbg !38
  %645 = bitcast float %s.0.i521 to i32, !dbg !38
  %646 = bitcast float %233 to i32, !dbg !38
  %647 = and i32 %646, -2147483648, !dbg !38
  %648 = or i32 %647, %645, !dbg !38
  %649 = bitcast i32 %648 to float, !dbg !38
  br label %__nv_tanhf.exit534, !dbg !38

__internal_fmad.exit3.i523:                       ; preds = %__nv_tanhf.exit515
  %650 = fmul float %233, %233, !dbg !38
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i524 = icmp eq i32 %651, 0, !dbg !38
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %650, float 0xBFAAC795C0000000) #5, !dbg !38
  %653 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %650, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i525 = select i1 %.not1.i524, float %653, float %652, !dbg !38
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i526 = icmp eq i32 %654, 0, !dbg !38
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i525, float %650, float 0x3FC10B2820000000) #5, !dbg !38
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i525, float %650, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i527 = select i1 %.not2.i526, float %656, float %655, !dbg !38
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i528 = icmp eq i32 %657, 0, !dbg !38
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i527, float %650, float 0xBFD5553DA0000000) #5, !dbg !38
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i527, float %650, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i529 = select i1 %.not3.i528, float %659, float %658, !dbg !38
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i530 = icmp eq i32 %660, 0, !dbg !38
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i529, float %650, float 0.000000e+00) #5, !dbg !38
  %662 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i529, float %650, float 0.000000e+00) #5, !dbg !38
  %.04.i531 = select i1 %.not4.i530, float %662, float %661, !dbg !38
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i532 = icmp eq i32 %663, 0, !dbg !38
  %664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i531, float %233, float %233) #5, !dbg !38
  %665 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i531, float %233, float %233) #5, !dbg !38
  %.02.i533 = select i1 %.not5.i532, float %665, float %664, !dbg !38
  br label %__nv_tanhf.exit534, !dbg !38

__nv_tanhf.exit534:                               ; preds = %__internal_fmad.exit1.i518, %__internal_fmad.exit3.i523
  %s.1.i522 = phi float [ %649, %__internal_fmad.exit1.i518 ], [ %.02.i533, %__internal_fmad.exit3.i523 ], !dbg !38
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i535 = icmp eq i32 %666, 0, !dbg !38
  %667 = tail call float @llvm.nvvm.fabs.ftz.f(float %234) #5, !dbg !38
  %668 = tail call float @llvm.nvvm.fabs.f(float %234) #5, !dbg !38
  %.01.i536 = select i1 %.not.i535, float %668, float %667, !dbg !38
  %669 = fcmp ult float %.01.i536, 0x3FE3333340000000, !dbg !38
  br i1 %669, label %__internal_fmad.exit3.i542, label %__internal_fmad.exit1.i537, !dbg !38

__internal_fmad.exit1.i537:                       ; preds = %__nv_tanhf.exit534
  %670 = fmul float %.01.i536, 0x4007154760000000, !dbg !38
  %671 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %670) #5, !dbg !38
  %672 = fadd float %671, 1.000000e+00, !dbg !38
  %673 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %672) #6, !dbg !38, !srcloc !39
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i538 = icmp eq i32 %674, 0, !dbg !38
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %673, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %676 = tail call float @llvm.nvvm.fma.rn.f(float %673, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i539 = select i1 %.not6.i538, float %676, float %675, !dbg !38
  %677 = fcmp oge float %.01.i536, 0x4022059680000000, !dbg !38
  %s.0.i540 = select i1 %677, float 1.000000e+00, float %.03.i539, !dbg !38
  %678 = bitcast float %s.0.i540 to i32, !dbg !38
  %679 = bitcast float %234 to i32, !dbg !38
  %680 = and i32 %679, -2147483648, !dbg !38
  %681 = or i32 %680, %678, !dbg !38
  %682 = bitcast i32 %681 to float, !dbg !38
  br label %__nv_tanhf.exit553, !dbg !38

__internal_fmad.exit3.i542:                       ; preds = %__nv_tanhf.exit534
  %683 = fmul float %234, %234, !dbg !38
  %684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i543 = icmp eq i32 %684, 0, !dbg !38
  %685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %683, float 0xBFAAC795C0000000) #5, !dbg !38
  %686 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %683, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i544 = select i1 %.not1.i543, float %686, float %685, !dbg !38
  %687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i545 = icmp eq i32 %687, 0, !dbg !38
  %688 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i544, float %683, float 0x3FC10B2820000000) #5, !dbg !38
  %689 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i544, float %683, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i546 = select i1 %.not2.i545, float %689, float %688, !dbg !38
  %690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i547 = icmp eq i32 %690, 0, !dbg !38
  %691 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i546, float %683, float 0xBFD5553DA0000000) #5, !dbg !38
  %692 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i546, float %683, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i548 = select i1 %.not3.i547, float %692, float %691, !dbg !38
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i549 = icmp eq i32 %693, 0, !dbg !38
  %694 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i548, float %683, float 0.000000e+00) #5, !dbg !38
  %695 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i548, float %683, float 0.000000e+00) #5, !dbg !38
  %.04.i550 = select i1 %.not4.i549, float %695, float %694, !dbg !38
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i551 = icmp eq i32 %696, 0, !dbg !38
  %697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i550, float %234, float %234) #5, !dbg !38
  %698 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i550, float %234, float %234) #5, !dbg !38
  %.02.i552 = select i1 %.not5.i551, float %698, float %697, !dbg !38
  br label %__nv_tanhf.exit553, !dbg !38

__nv_tanhf.exit553:                               ; preds = %__internal_fmad.exit1.i537, %__internal_fmad.exit3.i542
  %s.1.i541 = phi float [ %682, %__internal_fmad.exit1.i537 ], [ %.02.i552, %__internal_fmad.exit3.i542 ], !dbg !38
  %699 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i554 = icmp eq i32 %699, 0, !dbg !38
  %700 = tail call float @llvm.nvvm.fabs.ftz.f(float %235) #5, !dbg !38
  %701 = tail call float @llvm.nvvm.fabs.f(float %235) #5, !dbg !38
  %.01.i555 = select i1 %.not.i554, float %701, float %700, !dbg !38
  %702 = fcmp ult float %.01.i555, 0x3FE3333340000000, !dbg !38
  br i1 %702, label %__internal_fmad.exit3.i561, label %__internal_fmad.exit1.i556, !dbg !38

__internal_fmad.exit1.i556:                       ; preds = %__nv_tanhf.exit553
  %703 = fmul float %.01.i555, 0x4007154760000000, !dbg !38
  %704 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %703) #5, !dbg !38
  %705 = fadd float %704, 1.000000e+00, !dbg !38
  %706 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %705) #6, !dbg !38, !srcloc !39
  %707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i557 = icmp eq i32 %707, 0, !dbg !38
  %708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %706, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %709 = tail call float @llvm.nvvm.fma.rn.f(float %706, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i558 = select i1 %.not6.i557, float %709, float %708, !dbg !38
  %710 = fcmp oge float %.01.i555, 0x4022059680000000, !dbg !38
  %s.0.i559 = select i1 %710, float 1.000000e+00, float %.03.i558, !dbg !38
  %711 = bitcast float %s.0.i559 to i32, !dbg !38
  %712 = bitcast float %235 to i32, !dbg !38
  %713 = and i32 %712, -2147483648, !dbg !38
  %714 = or i32 %713, %711, !dbg !38
  %715 = bitcast i32 %714 to float, !dbg !38
  br label %__nv_tanhf.exit572, !dbg !38

__internal_fmad.exit3.i561:                       ; preds = %__nv_tanhf.exit553
  %716 = fmul float %235, %235, !dbg !38
  %717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i562 = icmp eq i32 %717, 0, !dbg !38
  %718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %716, float 0xBFAAC795C0000000) #5, !dbg !38
  %719 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %716, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i563 = select i1 %.not1.i562, float %719, float %718, !dbg !38
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i564 = icmp eq i32 %720, 0, !dbg !38
  %721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i563, float %716, float 0x3FC10B2820000000) #5, !dbg !38
  %722 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i563, float %716, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i565 = select i1 %.not2.i564, float %722, float %721, !dbg !38
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i566 = icmp eq i32 %723, 0, !dbg !38
  %724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i565, float %716, float 0xBFD5553DA0000000) #5, !dbg !38
  %725 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i565, float %716, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i567 = select i1 %.not3.i566, float %725, float %724, !dbg !38
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i568 = icmp eq i32 %726, 0, !dbg !38
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i567, float %716, float 0.000000e+00) #5, !dbg !38
  %728 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i567, float %716, float 0.000000e+00) #5, !dbg !38
  %.04.i569 = select i1 %.not4.i568, float %728, float %727, !dbg !38
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i570 = icmp eq i32 %729, 0, !dbg !38
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i569, float %235, float %235) #5, !dbg !38
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i569, float %235, float %235) #5, !dbg !38
  %.02.i571 = select i1 %.not5.i570, float %731, float %730, !dbg !38
  br label %__nv_tanhf.exit572, !dbg !38

__nv_tanhf.exit572:                               ; preds = %__internal_fmad.exit1.i556, %__internal_fmad.exit3.i561
  %s.1.i560 = phi float [ %715, %__internal_fmad.exit1.i556 ], [ %.02.i571, %__internal_fmad.exit3.i561 ], !dbg !38
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i573 = icmp eq i32 %732, 0, !dbg !38
  %733 = tail call float @llvm.nvvm.fabs.ftz.f(float %236) #5, !dbg !38
  %734 = tail call float @llvm.nvvm.fabs.f(float %236) #5, !dbg !38
  %.01.i574 = select i1 %.not.i573, float %734, float %733, !dbg !38
  %735 = fcmp ult float %.01.i574, 0x3FE3333340000000, !dbg !38
  br i1 %735, label %__internal_fmad.exit3.i580, label %__internal_fmad.exit1.i575, !dbg !38

__internal_fmad.exit1.i575:                       ; preds = %__nv_tanhf.exit572
  %736 = fmul float %.01.i574, 0x4007154760000000, !dbg !38
  %737 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %736) #5, !dbg !38
  %738 = fadd float %737, 1.000000e+00, !dbg !38
  %739 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %738) #6, !dbg !38, !srcloc !39
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i576 = icmp eq i32 %740, 0, !dbg !38
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %739, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %742 = tail call float @llvm.nvvm.fma.rn.f(float %739, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i577 = select i1 %.not6.i576, float %742, float %741, !dbg !38
  %743 = fcmp oge float %.01.i574, 0x4022059680000000, !dbg !38
  %s.0.i578 = select i1 %743, float 1.000000e+00, float %.03.i577, !dbg !38
  %744 = bitcast float %s.0.i578 to i32, !dbg !38
  %745 = bitcast float %236 to i32, !dbg !38
  %746 = and i32 %745, -2147483648, !dbg !38
  %747 = or i32 %746, %744, !dbg !38
  %748 = bitcast i32 %747 to float, !dbg !38
  br label %__nv_tanhf.exit591, !dbg !38

__internal_fmad.exit3.i580:                       ; preds = %__nv_tanhf.exit572
  %749 = fmul float %236, %236, !dbg !38
  %750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i581 = icmp eq i32 %750, 0, !dbg !38
  %751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %749, float 0xBFAAC795C0000000) #5, !dbg !38
  %752 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %749, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i582 = select i1 %.not1.i581, float %752, float %751, !dbg !38
  %753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i583 = icmp eq i32 %753, 0, !dbg !38
  %754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i582, float %749, float 0x3FC10B2820000000) #5, !dbg !38
  %755 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i582, float %749, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i584 = select i1 %.not2.i583, float %755, float %754, !dbg !38
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i585 = icmp eq i32 %756, 0, !dbg !38
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i584, float %749, float 0xBFD5553DA0000000) #5, !dbg !38
  %758 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i584, float %749, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i586 = select i1 %.not3.i585, float %758, float %757, !dbg !38
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i587 = icmp eq i32 %759, 0, !dbg !38
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i586, float %749, float 0.000000e+00) #5, !dbg !38
  %761 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i586, float %749, float 0.000000e+00) #5, !dbg !38
  %.04.i588 = select i1 %.not4.i587, float %761, float %760, !dbg !38
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i589 = icmp eq i32 %762, 0, !dbg !38
  %763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i588, float %236, float %236) #5, !dbg !38
  %764 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i588, float %236, float %236) #5, !dbg !38
  %.02.i590 = select i1 %.not5.i589, float %764, float %763, !dbg !38
  br label %__nv_tanhf.exit591, !dbg !38

__nv_tanhf.exit591:                               ; preds = %__internal_fmad.exit1.i575, %__internal_fmad.exit3.i580
  %s.1.i579 = phi float [ %748, %__internal_fmad.exit1.i575 ], [ %.02.i590, %__internal_fmad.exit3.i580 ], !dbg !38
  %765 = insertelement <16 x float> poison, float %s.1.i579, i64 0, !dbg !40
  %766 = insertelement <16 x float> %765, float %s.1.i560, i64 1, !dbg !40
  %767 = insertelement <16 x float> %766, float %s.1.i541, i64 2, !dbg !40
  %768 = insertelement <16 x float> %767, float %s.1.i522, i64 3, !dbg !40
  %769 = insertelement <16 x float> %768, float %s.1.i503, i64 4, !dbg !40
  %770 = insertelement <16 x float> %769, float %s.1.i484, i64 5, !dbg !40
  %771 = insertelement <16 x float> %770, float %s.1.i465, i64 6, !dbg !40
  %772 = insertelement <16 x float> %771, float %s.1.i446, i64 7, !dbg !40
  %773 = insertelement <16 x float> %772, float %s.1.i427, i64 8, !dbg !40
  %774 = insertelement <16 x float> %773, float %s.1.i408, i64 9, !dbg !40
  %775 = insertelement <16 x float> %774, float %s.1.i389, i64 10, !dbg !40
  %776 = insertelement <16 x float> %775, float %s.1.i370, i64 11, !dbg !40
  %777 = insertelement <16 x float> %776, float %s.1.i351, i64 12, !dbg !40
  %778 = insertelement <16 x float> %777, float %s.1.i332, i64 13, !dbg !40
  %779 = insertelement <16 x float> %778, float %s.1.i313, i64 14, !dbg !40
  %780 = insertelement <16 x float> %779, float %s.1.i294, i64 15, !dbg !40
  %781 = fadd <16 x float> %780, splat (float 1.000000e+00), !dbg !40
  %782 = fcmp uno <16 x float> %29, zeroinitializer, !dbg !41
  %783 = fcmp uno <16 x float> %28, zeroinitializer, !dbg !45
  %784 = fmul <16 x float> %140, %781, !dbg !47
  %785 = insertelement <16 x i1> poison, i1 %32, i64 0, !dbg !48
  %786 = shufflevector <16 x i1> %785, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !48
  %787 = select <16 x i1> %786, <16 x float> %87, <16 x float> %784, !dbg !48
  %788 = fcmp olt <16 x float> %29, %787, !dbg !49
  %789 = or <16 x i1> %782, %788, !dbg !50
  %790 = select <16 x i1> %789, <16 x float> %29, <16 x float> %787, !dbg !51
  %791 = insertelement <16 x i1> poison, i1 %42, i64 0, !dbg !52
  %792 = shufflevector <16 x i1> %791, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !52
  %793 = select <16 x i1> %792, <16 x float> %790, <16 x float> %29, !dbg !52
  %794 = fcmp ogt <16 x float> %28, %787, !dbg !53
  %795 = or <16 x i1> %783, %794, !dbg !54
  %796 = select <16 x i1> %795, <16 x float> %28, <16 x float> %787, !dbg !55
  %797 = select <16 x i1> %792, <16 x float> %796, <16 x float> %28, !dbg !56
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4096, !dbg !17
  %798 = icmp samesign ult i64 %indvars.iv, 11264, !dbg !17
  br i1 %798, label %27, label %799, !dbg !17

799:                                              ; preds = %__nv_tanhf.exit591
  %800 = lshr i32 %11, 5, !dbg !11
  %801 = and i32 %11, 1, !dbg !11
  %802 = or disjoint i32 %10, %801, !dbg !12
  %803 = icmp slt i32 %802, 4112, !dbg !13
  %804 = extractelement <16 x float> %793, i64 14, !dbg !57
  %805 = extractelement <16 x float> %793, i64 15, !dbg !57
  %806 = fcmp olt float %805, %804, !dbg !57
  %807 = fcmp uno float %805, 0.000000e+00, !dbg !60
  %808 = or i1 %806, %807, !dbg !61
  %809 = select i1 %808, float %805, float %804, !dbg !62
  %810 = extractelement <16 x float> %793, i64 13, !dbg !57
  %811 = fcmp olt float %809, %810, !dbg !57
  %812 = fcmp uno float %809, 0.000000e+00, !dbg !60
  %813 = or i1 %811, %812, !dbg !61
  %814 = select i1 %813, float %809, float %810, !dbg !62
  %815 = extractelement <16 x float> %793, i64 12, !dbg !57
  %816 = fcmp olt float %814, %815, !dbg !57
  %817 = fcmp uno float %814, 0.000000e+00, !dbg !60
  %818 = or i1 %816, %817, !dbg !61
  %819 = select i1 %818, float %814, float %815, !dbg !62
  %820 = extractelement <16 x float> %793, i64 11, !dbg !57
  %821 = fcmp olt float %819, %820, !dbg !57
  %822 = fcmp uno float %819, 0.000000e+00, !dbg !60
  %823 = or i1 %821, %822, !dbg !61
  %824 = select i1 %823, float %819, float %820, !dbg !62
  %825 = extractelement <16 x float> %793, i64 10, !dbg !57
  %826 = fcmp olt float %824, %825, !dbg !57
  %827 = fcmp uno float %824, 0.000000e+00, !dbg !60
  %828 = or i1 %826, %827, !dbg !61
  %829 = select i1 %828, float %824, float %825, !dbg !62
  %830 = extractelement <16 x float> %793, i64 9, !dbg !57
  %831 = fcmp olt float %829, %830, !dbg !57
  %832 = fcmp uno float %829, 0.000000e+00, !dbg !60
  %833 = or i1 %831, %832, !dbg !61
  %834 = select i1 %833, float %829, float %830, !dbg !62
  %835 = extractelement <16 x float> %793, i64 8, !dbg !57
  %836 = fcmp olt float %834, %835, !dbg !57
  %837 = fcmp uno float %834, 0.000000e+00, !dbg !60
  %838 = or i1 %836, %837, !dbg !61
  %839 = select i1 %838, float %834, float %835, !dbg !62
  %840 = extractelement <16 x float> %793, i64 7, !dbg !57
  %841 = fcmp olt float %839, %840, !dbg !57
  %842 = fcmp uno float %839, 0.000000e+00, !dbg !60
  %843 = or i1 %841, %842, !dbg !61
  %844 = select i1 %843, float %839, float %840, !dbg !62
  %845 = extractelement <16 x float> %793, i64 6, !dbg !57
  %846 = fcmp olt float %844, %845, !dbg !57
  %847 = fcmp uno float %844, 0.000000e+00, !dbg !60
  %848 = or i1 %846, %847, !dbg !61
  %849 = select i1 %848, float %844, float %845, !dbg !62
  %850 = extractelement <16 x float> %793, i64 5, !dbg !57
  %851 = fcmp olt float %849, %850, !dbg !57
  %852 = fcmp uno float %849, 0.000000e+00, !dbg !60
  %853 = or i1 %851, %852, !dbg !61
  %854 = select i1 %853, float %849, float %850, !dbg !62
  %855 = extractelement <16 x float> %793, i64 4, !dbg !57
  %856 = fcmp olt float %854, %855, !dbg !57
  %857 = fcmp uno float %854, 0.000000e+00, !dbg !60
  %858 = or i1 %856, %857, !dbg !61
  %859 = select i1 %858, float %854, float %855, !dbg !62
  %860 = extractelement <16 x float> %793, i64 3, !dbg !57
  %861 = fcmp olt float %859, %860, !dbg !57
  %862 = fcmp uno float %859, 0.000000e+00, !dbg !60
  %863 = or i1 %861, %862, !dbg !61
  %864 = select i1 %863, float %859, float %860, !dbg !62
  %865 = extractelement <16 x float> %793, i64 2, !dbg !57
  %866 = fcmp olt float %864, %865, !dbg !57
  %867 = fcmp uno float %864, 0.000000e+00, !dbg !60
  %868 = or i1 %866, %867, !dbg !61
  %869 = select i1 %868, float %864, float %865, !dbg !62
  %870 = extractelement <16 x float> %793, i64 1, !dbg !57
  %871 = fcmp olt float %869, %870, !dbg !57
  %872 = fcmp uno float %869, 0.000000e+00, !dbg !60
  %873 = or i1 %871, %872, !dbg !61
  %874 = select i1 %873, float %869, float %870, !dbg !62
  %875 = extractelement <16 x float> %793, i64 0, !dbg !57
  %876 = fcmp olt float %874, %875, !dbg !57
  %877 = fcmp uno float %874, 0.000000e+00, !dbg !60
  %878 = or i1 %876, %877, !dbg !61
  %879 = select i1 %878, float %874, float %875, !dbg !62
  %880 = bitcast float %879 to i32, !dbg !63
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 16, i32 31), !dbg !63
  %882 = bitcast i32 %881 to float, !dbg !63
  %883 = fcmp olt float %879, %882, !dbg !57
  %884 = fcmp uno float %879, 0.000000e+00, !dbg !60
  %885 = or i1 %884, %883, !dbg !61
  %886 = select i1 %885, float %879, float %882, !dbg !62
  %887 = bitcast float %886 to i32, !dbg !63
  %888 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %887, i32 8, i32 31), !dbg !63
  %889 = bitcast i32 %888 to float, !dbg !63
  %890 = fcmp olt float %886, %889, !dbg !57
  %891 = fcmp uno float %886, 0.000000e+00, !dbg !60
  %892 = or i1 %890, %891, !dbg !61
  %893 = select i1 %892, float %886, float %889, !dbg !62
  %894 = bitcast float %893 to i32, !dbg !63
  %895 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %894, i32 4, i32 31), !dbg !63
  %896 = bitcast i32 %895 to float, !dbg !63
  %897 = fcmp olt float %893, %896, !dbg !57
  %898 = fcmp uno float %893, 0.000000e+00, !dbg !60
  %899 = or i1 %897, %898, !dbg !61
  %900 = select i1 %899, float %893, float %896, !dbg !62
  %901 = bitcast float %900 to i32, !dbg !63
  %902 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %901, i32 2, i32 31), !dbg !63
  %903 = bitcast i32 %902 to float, !dbg !63
  %904 = fcmp olt float %900, %903, !dbg !57
  %905 = fcmp uno float %900, 0.000000e+00, !dbg !60
  %906 = or i1 %904, %905, !dbg !61
  %907 = select i1 %906, float %900, float %903, !dbg !62
  %908 = bitcast float %907 to i32, !dbg !63
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 1, i32 31), !dbg !63
  %910 = bitcast i32 %909 to float, !dbg !63
  %911 = fcmp olt float %907, %910, !dbg !57
  %912 = fcmp uno float %907, 0.000000e+00, !dbg !60
  %913 = or i1 %911, %912, !dbg !61
  %914 = and i32 %800, 7, !dbg !63
  %915 = icmp eq i32 %13, 0, !dbg !63
  %916 = shl nuw nsw i32 %.lobit, 3, !dbg !63
  %917 = or disjoint i32 %916, %914, !dbg !63
  %918 = getelementptr float, ptr addrspace(3) @global_smem, i32 %917, !dbg !63
  %919 = select i1 %913, i32 %908, i32 %909, !dbg !62
  %920 = insertelement <1 x i32> poison, i32 %919, i64 0, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %918, <1 x i32> %920, i1 %915) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %921 = icmp slt i32 %11, 16, !dbg !63
  %922 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !63
  %923 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %922, i1 %921) #5, !dbg !63
  %924 = bitcast i32 %923 to float, !dbg !63
  %925 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %923, i32 4, i32 31), !dbg !63
  %926 = bitcast i32 %925 to float, !dbg !63
  %927 = fcmp olt float %924, %926, !dbg !57
  %928 = fcmp uno float %924, 0.000000e+00, !dbg !60
  %929 = or i1 %928, %927, !dbg !61
  %930 = select i1 %929, float %924, float %926, !dbg !62
  %931 = bitcast float %930 to i32, !dbg !63
  %932 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %931, i32 2, i32 31), !dbg !63
  %933 = bitcast i32 %932 to float, !dbg !63
  %934 = fcmp olt float %930, %933, !dbg !57
  %935 = fcmp uno float %930, 0.000000e+00, !dbg !60
  %936 = or i1 %934, %935, !dbg !61
  %937 = select i1 %936, float %930, float %933, !dbg !62
  %938 = bitcast float %937 to i32, !dbg !63
  %939 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %938, i32 1, i32 31), !dbg !63
  %940 = bitcast i32 %939 to float, !dbg !63
  %941 = fcmp olt float %937, %940, !dbg !57
  %942 = fcmp uno float %937, 0.000000e+00, !dbg !60
  %943 = or i1 %941, %942, !dbg !61
  %944 = and i32 %11, 7, !dbg !63
  %945 = icmp eq i32 %944, 0, !dbg !63
  %946 = and i1 %921, %945, !dbg !63
  %947 = select i1 %943, i32 %938, i32 %939, !dbg !62
  %948 = insertelement <1 x i32> poison, i32 %947, i64 0, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %922, <1 x i32> %948, i1 %946) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %949 = getelementptr float, ptr addrspace(3) @global_smem, i32 %916, !dbg !63
  %950 = load float, ptr addrspace(3) %949, align 16, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %951 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %.lobit, !dbg !64
  %952 = bitcast float %950 to <1 x i32>, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %951, <1 x i32> %952, i1 true) #5, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %953 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %801, !dbg !64
  %954 = load float, ptr addrspace(3) %953, align 4, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %955 = extractelement <16 x float> %797, i64 14, !dbg !67
  %956 = extractelement <16 x float> %797, i64 15, !dbg !67
  %957 = fcmp ogt float %956, %955, !dbg !67
  %958 = fcmp uno float %956, 0.000000e+00, !dbg !68
  %959 = or i1 %957, %958, !dbg !69
  %960 = select i1 %959, float %956, float %955, !dbg !70
  %961 = extractelement <16 x float> %797, i64 13, !dbg !67
  %962 = fcmp ogt float %960, %961, !dbg !67
  %963 = fcmp uno float %960, 0.000000e+00, !dbg !68
  %964 = or i1 %962, %963, !dbg !69
  %965 = select i1 %964, float %960, float %961, !dbg !70
  %966 = extractelement <16 x float> %797, i64 12, !dbg !67
  %967 = fcmp ogt float %965, %966, !dbg !67
  %968 = fcmp uno float %965, 0.000000e+00, !dbg !68
  %969 = or i1 %967, %968, !dbg !69
  %970 = select i1 %969, float %965, float %966, !dbg !70
  %971 = extractelement <16 x float> %797, i64 11, !dbg !67
  %972 = fcmp ogt float %970, %971, !dbg !67
  %973 = fcmp uno float %970, 0.000000e+00, !dbg !68
  %974 = or i1 %972, %973, !dbg !69
  %975 = select i1 %974, float %970, float %971, !dbg !70
  %976 = extractelement <16 x float> %797, i64 10, !dbg !67
  %977 = fcmp ogt float %975, %976, !dbg !67
  %978 = fcmp uno float %975, 0.000000e+00, !dbg !68
  %979 = or i1 %977, %978, !dbg !69
  %980 = select i1 %979, float %975, float %976, !dbg !70
  %981 = extractelement <16 x float> %797, i64 9, !dbg !67
  %982 = fcmp ogt float %980, %981, !dbg !67
  %983 = fcmp uno float %980, 0.000000e+00, !dbg !68
  %984 = or i1 %982, %983, !dbg !69
  %985 = select i1 %984, float %980, float %981, !dbg !70
  %986 = extractelement <16 x float> %797, i64 8, !dbg !67
  %987 = fcmp ogt float %985, %986, !dbg !67
  %988 = fcmp uno float %985, 0.000000e+00, !dbg !68
  %989 = or i1 %987, %988, !dbg !69
  %990 = select i1 %989, float %985, float %986, !dbg !70
  %991 = extractelement <16 x float> %797, i64 7, !dbg !67
  %992 = fcmp ogt float %990, %991, !dbg !67
  %993 = fcmp uno float %990, 0.000000e+00, !dbg !68
  %994 = or i1 %992, %993, !dbg !69
  %995 = select i1 %994, float %990, float %991, !dbg !70
  %996 = extractelement <16 x float> %797, i64 6, !dbg !67
  %997 = fcmp ogt float %995, %996, !dbg !67
  %998 = fcmp uno float %995, 0.000000e+00, !dbg !68
  %999 = or i1 %997, %998, !dbg !69
  %1000 = select i1 %999, float %995, float %996, !dbg !70
  %1001 = extractelement <16 x float> %797, i64 5, !dbg !67
  %1002 = fcmp ogt float %1000, %1001, !dbg !67
  %1003 = fcmp uno float %1000, 0.000000e+00, !dbg !68
  %1004 = or i1 %1002, %1003, !dbg !69
  %1005 = select i1 %1004, float %1000, float %1001, !dbg !70
  %1006 = extractelement <16 x float> %797, i64 4, !dbg !67
  %1007 = fcmp ogt float %1005, %1006, !dbg !67
  %1008 = fcmp uno float %1005, 0.000000e+00, !dbg !68
  %1009 = or i1 %1007, %1008, !dbg !69
  %1010 = select i1 %1009, float %1005, float %1006, !dbg !70
  %1011 = extractelement <16 x float> %797, i64 3, !dbg !67
  %1012 = fcmp ogt float %1010, %1011, !dbg !67
  %1013 = fcmp uno float %1010, 0.000000e+00, !dbg !68
  %1014 = or i1 %1012, %1013, !dbg !69
  %1015 = select i1 %1014, float %1010, float %1011, !dbg !70
  %1016 = extractelement <16 x float> %797, i64 2, !dbg !67
  %1017 = fcmp ogt float %1015, %1016, !dbg !67
  %1018 = fcmp uno float %1015, 0.000000e+00, !dbg !68
  %1019 = or i1 %1017, %1018, !dbg !69
  %1020 = select i1 %1019, float %1015, float %1016, !dbg !70
  %1021 = extractelement <16 x float> %797, i64 1, !dbg !67
  %1022 = fcmp ogt float %1020, %1021, !dbg !67
  %1023 = fcmp uno float %1020, 0.000000e+00, !dbg !68
  %1024 = or i1 %1022, %1023, !dbg !69
  %1025 = select i1 %1024, float %1020, float %1021, !dbg !70
  %1026 = extractelement <16 x float> %797, i64 0, !dbg !67
  %1027 = fcmp ogt float %1025, %1026, !dbg !67
  %1028 = fcmp uno float %1025, 0.000000e+00, !dbg !68
  %1029 = or i1 %1027, %1028, !dbg !69
  %1030 = select i1 %1029, float %1025, float %1026, !dbg !70
  %1031 = bitcast float %1030 to i32, !dbg !65
  %1032 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1031, i32 16, i32 31), !dbg !65
  %1033 = bitcast i32 %1032 to float, !dbg !65
  %1034 = fcmp ogt float %1030, %1033, !dbg !67
  %1035 = fcmp uno float %1030, 0.000000e+00, !dbg !68
  %1036 = or i1 %1035, %1034, !dbg !69
  %1037 = select i1 %1036, float %1030, float %1033, !dbg !70
  %1038 = bitcast float %1037 to i32, !dbg !65
  %1039 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1038, i32 8, i32 31), !dbg !65
  %1040 = bitcast i32 %1039 to float, !dbg !65
  %1041 = fcmp ogt float %1037, %1040, !dbg !67
  %1042 = fcmp uno float %1037, 0.000000e+00, !dbg !68
  %1043 = or i1 %1041, %1042, !dbg !69
  %1044 = select i1 %1043, float %1037, float %1040, !dbg !70
  %1045 = bitcast float %1044 to i32, !dbg !65
  %1046 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1045, i32 4, i32 31), !dbg !65
  %1047 = bitcast i32 %1046 to float, !dbg !65
  %1048 = fcmp ogt float %1044, %1047, !dbg !67
  %1049 = fcmp uno float %1044, 0.000000e+00, !dbg !68
  %1050 = or i1 %1048, %1049, !dbg !69
  %1051 = select i1 %1050, float %1044, float %1047, !dbg !70
  %1052 = bitcast float %1051 to i32, !dbg !65
  %1053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1052, i32 2, i32 31), !dbg !65
  %1054 = bitcast i32 %1053 to float, !dbg !65
  %1055 = fcmp ogt float %1051, %1054, !dbg !67
  %1056 = fcmp uno float %1051, 0.000000e+00, !dbg !68
  %1057 = or i1 %1055, %1056, !dbg !69
  %1058 = select i1 %1057, float %1051, float %1054, !dbg !70
  %1059 = bitcast float %1058 to i32, !dbg !65
  %1060 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1059, i32 1, i32 31), !dbg !65
  %1061 = bitcast i32 %1060 to float, !dbg !65
  %1062 = fcmp ogt float %1058, %1061, !dbg !67
  %1063 = fcmp uno float %1058, 0.000000e+00, !dbg !68
  %1064 = or i1 %1062, %1063, !dbg !69
  %1065 = select i1 %1064, i32 %1059, i32 %1060, !dbg !70
  %1066 = insertelement <1 x i32> poison, i32 %1065, i64 0, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %918, <1 x i32> %1066, i1 %915) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1067 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %922, i1 %921) #5, !dbg !65
  %1068 = bitcast i32 %1067 to float, !dbg !65
  %1069 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1067, i32 4, i32 31), !dbg !65
  %1070 = bitcast i32 %1069 to float, !dbg !65
  %1071 = fcmp ogt float %1068, %1070, !dbg !67
  %1072 = fcmp uno float %1068, 0.000000e+00, !dbg !68
  %1073 = or i1 %1072, %1071, !dbg !69
  %1074 = select i1 %1073, float %1068, float %1070, !dbg !70
  %1075 = bitcast float %1074 to i32, !dbg !65
  %1076 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1075, i32 2, i32 31), !dbg !65
  %1077 = bitcast i32 %1076 to float, !dbg !65
  %1078 = fcmp ogt float %1074, %1077, !dbg !67
  %1079 = fcmp uno float %1074, 0.000000e+00, !dbg !68
  %1080 = or i1 %1078, %1079, !dbg !69
  %1081 = select i1 %1080, float %1074, float %1077, !dbg !70
  %1082 = bitcast float %1081 to i32, !dbg !65
  %1083 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1082, i32 1, i32 31), !dbg !65
  %1084 = bitcast i32 %1083 to float, !dbg !65
  %1085 = fcmp ogt float %1081, %1084, !dbg !67
  %1086 = fcmp uno float %1081, 0.000000e+00, !dbg !68
  %1087 = or i1 %1085, %1086, !dbg !69
  %1088 = select i1 %1087, i32 %1082, i32 %1083, !dbg !70
  %1089 = insertelement <1 x i32> poison, i32 %1088, i64 0, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %922, <1 x i32> %1089, i1 %946) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1090 = load float, ptr addrspace(3) %949, align 16, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1091 = bitcast float %1090 to <1 x i32>, !dbg !71
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %951, <1 x i32> %1091, i1 true) #5, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1092 = load float, ptr addrspace(3) %953, align 4, !dbg !71
  %1093 = sext i32 %802 to i64, !dbg !72
  %1094 = getelementptr bfloat, ptr addrspace(1) %2, i64 %1093, !dbg !72
  %1095 = fptrunc float %954 to bfloat, !dbg !64
  %1096 = and i32 %11, 510, !dbg !64
  %1097 = icmp eq i32 %1096, 0, !dbg !64
  %1098 = bitcast bfloat %1095 to i16, !dbg !64
  %1099 = and i1 %1097, %803, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1098, ptr addrspace(1) %1094, i1 %1099) #5, !dbg !64
  %1100 = getelementptr bfloat, ptr addrspace(1) %3, i64 %1093, !dbg !73
  %1101 = fptrunc float %1092 to bfloat, !dbg !71
  %1102 = bitcast bfloat %1101 to i16, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1102, ptr addrspace(1) %1100, i1 %1099) #5, !dbg !71
  %.inv = fcmp oge float %950, 0.000000e+00, !dbg !74
  %1103 = select i1 %.inv, float 0.000000e+00, float %950, !dbg !74
  %1104 = fsub float 0.000000e+00, %1103, !dbg !76
  %.inv2 = fcmp ole float %1090, 0.000000e+00, !dbg !77
  %1105 = select i1 %.inv2, float 0.000000e+00, float %1090, !dbg !77
  %1106 = fcmp ogt float %1104, %1105, !dbg !79
  %1107 = fcmp uno float %1104, 0.000000e+00, !dbg !81
  %1108 = or i1 %1107, %1106, !dbg !82
  %1109 = select i1 %1108, float %1104, float %1105, !dbg !83
  %1110 = fmul float %1109, 0x3F80204080000000, !dbg !84
  %1111 = fcmp ogt float %1110, 0x3EE4F8B580000000, !dbg !85
  %1112 = fcmp uno float %1110, 0.000000e+00, !dbg !87
  %1113 = or i1 %1111, %1112, !dbg !88
  %1114 = select i1 %1113, float %1110, float 0x3EE4F8B580000000, !dbg !89
  %1115 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %1114), !dbg !90
  %1116 = mul i32 %14, 15360, !dbg !91
  br label %1117, !dbg !92

1117:                                             ; preds = %799, %__nv_tanhf.exit287
  %indvars.iv624 = phi i64 [ 0, %799 ], [ %indvars.iv.next625, %__nv_tanhf.exit287 ]
  %1118 = or disjoint i64 %indvars.iv624, %26, !dbg !93
  %1119 = icmp samesign ult i64 %1118, 15360, !dbg !94
  %1120 = icmp samesign ult i64 %1118, 3072, !dbg !95
  %1121 = trunc nuw nsw i64 %1118 to i32, !dbg !96
  %1122 = add i32 %21, %1121, !dbg !96
  %1123 = trunc i64 %indvars.iv624 to i32, !dbg !96
  %1124 = or disjoint i32 %19, %1123, !dbg !96
  %1125 = add i32 %1124, %21, !dbg !96
  %1126 = sext i32 %1122 to i64, !dbg !97
  %1127 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1126, !dbg !97
  %1128 = sext i32 %1125 to i64, !dbg !97
  %1129 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1128, !dbg !97
  %1130 = and i1 %15, %1119, !dbg !98
  %1131 = and i1 %15, %1120, !dbg !99
  %1132 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1127, i1 %1131) #5, !dbg !100
  %1133 = extractvalue { i32, i32, i32, i32 } %1132, 0, !dbg !100
  %1134 = bitcast i32 %1133 to <2 x bfloat>, !dbg !100
  %1135 = extractvalue { i32, i32, i32, i32 } %1132, 1, !dbg !100
  %1136 = bitcast i32 %1135 to <2 x bfloat>, !dbg !100
  %1137 = extractvalue { i32, i32, i32, i32 } %1132, 2, !dbg !100
  %1138 = bitcast i32 %1137 to <2 x bfloat>, !dbg !100
  %1139 = extractvalue { i32, i32, i32, i32 } %1132, 3, !dbg !100
  %1140 = bitcast i32 %1139 to <2 x bfloat>, !dbg !100
  %1141 = extractelement <2 x bfloat> %1134, i64 0, !dbg !100
  %1142 = extractelement <2 x bfloat> %1134, i64 1, !dbg !100
  %1143 = extractelement <2 x bfloat> %1136, i64 0, !dbg !100
  %1144 = extractelement <2 x bfloat> %1136, i64 1, !dbg !100
  %1145 = extractelement <2 x bfloat> %1138, i64 0, !dbg !100
  %1146 = extractelement <2 x bfloat> %1138, i64 1, !dbg !100
  %1147 = extractelement <2 x bfloat> %1140, i64 0, !dbg !100
  %1148 = extractelement <2 x bfloat> %1140, i64 1, !dbg !100
  %1149 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1129, i1 %1131) #5, !dbg !100
  %1150 = extractvalue { i32, i32, i32, i32 } %1149, 0, !dbg !100
  %1151 = bitcast i32 %1150 to <2 x bfloat>, !dbg !100
  %1152 = extractvalue { i32, i32, i32, i32 } %1149, 1, !dbg !100
  %1153 = bitcast i32 %1152 to <2 x bfloat>, !dbg !100
  %1154 = extractvalue { i32, i32, i32, i32 } %1149, 2, !dbg !100
  %1155 = bitcast i32 %1154 to <2 x bfloat>, !dbg !100
  %1156 = extractvalue { i32, i32, i32, i32 } %1149, 3, !dbg !100
  %1157 = bitcast i32 %1156 to <2 x bfloat>, !dbg !100
  %1158 = extractelement <2 x bfloat> %1151, i64 0, !dbg !100
  %1159 = extractelement <2 x bfloat> %1151, i64 1, !dbg !100
  %1160 = extractelement <2 x bfloat> %1153, i64 0, !dbg !100
  %1161 = extractelement <2 x bfloat> %1153, i64 1, !dbg !100
  %1162 = extractelement <2 x bfloat> %1155, i64 0, !dbg !100
  %1163 = extractelement <2 x bfloat> %1155, i64 1, !dbg !100
  %1164 = extractelement <2 x bfloat> %1157, i64 0, !dbg !100
  %1165 = extractelement <2 x bfloat> %1157, i64 1, !dbg !100
  %1166 = fpext bfloat %1141 to float, !dbg !101
  %1167 = fpext bfloat %1142 to float, !dbg !101
  %1168 = fpext bfloat %1143 to float, !dbg !101
  %1169 = fpext bfloat %1144 to float, !dbg !101
  %1170 = fpext bfloat %1145 to float, !dbg !101
  %1171 = fpext bfloat %1146 to float, !dbg !101
  %1172 = fpext bfloat %1147 to float, !dbg !101
  %1173 = fpext bfloat %1148 to float, !dbg !101
  %1174 = fpext bfloat %1158 to float, !dbg !101
  %1175 = fpext bfloat %1159 to float, !dbg !101
  %1176 = fpext bfloat %1160 to float, !dbg !101
  %1177 = fpext bfloat %1161 to float, !dbg !101
  %1178 = fpext bfloat %1162 to float, !dbg !101
  %1179 = fpext bfloat %1163 to float, !dbg !101
  %1180 = fpext bfloat %1164 to float, !dbg !101
  %1181 = fpext bfloat %1165 to float, !dbg !101
  %1182 = icmp samesign ugt i64 %1118, 3071, !dbg !102
  %1183 = add i32 %23, %1121, !dbg !103
  %1184 = trunc nuw nsw i64 %indvars.iv624 to i32, !dbg !103
  %1185 = add i32 %24, %1184, !dbg !103
  %1186 = add i32 %23, %1124, !dbg !103
  %1187 = add i32 %25, %1184, !dbg !103
  %1188 = sext i32 %1183 to i64, !dbg !104
  %1189 = getelementptr float, ptr addrspace(1) %1, i64 %1188, !dbg !104
  %1190 = sext i32 %1185 to i64, !dbg !104
  %1191 = getelementptr float, ptr addrspace(1) %1, i64 %1190, !dbg !104
  %1192 = sext i32 %1186 to i64, !dbg !104
  %1193 = getelementptr float, ptr addrspace(1) %1, i64 %1192, !dbg !104
  %1194 = sext i32 %1187 to i64, !dbg !104
  %1195 = getelementptr float, ptr addrspace(1) %1, i64 %1194, !dbg !104
  %1196 = and i1 %1182, %1130, !dbg !105
  %1197 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1189, i1 %1196) #5, !dbg !106
  %1198 = extractvalue { i32, i32, i32, i32 } %1197, 0, !dbg !106
  %1199 = extractvalue { i32, i32, i32, i32 } %1197, 1, !dbg !106
  %1200 = extractvalue { i32, i32, i32, i32 } %1197, 2, !dbg !106
  %1201 = extractvalue { i32, i32, i32, i32 } %1197, 3, !dbg !106
  %1202 = bitcast i32 %1198 to float, !dbg !106
  %1203 = bitcast i32 %1199 to float, !dbg !106
  %1204 = bitcast i32 %1200 to float, !dbg !106
  %1205 = bitcast i32 %1201 to float, !dbg !106
  %1206 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1191, i1 %1196) #5, !dbg !106
  %1207 = extractvalue { i32, i32, i32, i32 } %1206, 0, !dbg !106
  %1208 = extractvalue { i32, i32, i32, i32 } %1206, 1, !dbg !106
  %1209 = extractvalue { i32, i32, i32, i32 } %1206, 2, !dbg !106
  %1210 = extractvalue { i32, i32, i32, i32 } %1206, 3, !dbg !106
  %1211 = bitcast i32 %1207 to float, !dbg !106
  %1212 = bitcast i32 %1208 to float, !dbg !106
  %1213 = bitcast i32 %1209 to float, !dbg !106
  %1214 = bitcast i32 %1210 to float, !dbg !106
  %1215 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1193, i1 %1196) #5, !dbg !106
  %1216 = extractvalue { i32, i32, i32, i32 } %1215, 0, !dbg !106
  %1217 = extractvalue { i32, i32, i32, i32 } %1215, 1, !dbg !106
  %1218 = extractvalue { i32, i32, i32, i32 } %1215, 2, !dbg !106
  %1219 = extractvalue { i32, i32, i32, i32 } %1215, 3, !dbg !106
  %1220 = bitcast i32 %1216 to float, !dbg !106
  %1221 = bitcast i32 %1217 to float, !dbg !106
  %1222 = bitcast i32 %1218 to float, !dbg !106
  %1223 = bitcast i32 %1219 to float, !dbg !106
  %1224 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1195, i1 %1196) #5, !dbg !106
  %1225 = extractvalue { i32, i32, i32, i32 } %1224, 0, !dbg !106
  %1226 = extractvalue { i32, i32, i32, i32 } %1224, 1, !dbg !106
  %1227 = extractvalue { i32, i32, i32, i32 } %1224, 2, !dbg !106
  %1228 = extractvalue { i32, i32, i32, i32 } %1224, 3, !dbg !106
  %1229 = bitcast i32 %1225 to float, !dbg !106
  %1230 = bitcast i32 %1226 to float, !dbg !106
  %1231 = bitcast i32 %1227 to float, !dbg !106
  %1232 = bitcast i32 %1228 to float, !dbg !106
  %1233 = fmul float %1202, 5.000000e-01, !dbg !107
  %1234 = fmul float %1203, 5.000000e-01, !dbg !107
  %1235 = fmul float %1204, 5.000000e-01, !dbg !107
  %1236 = fmul float %1205, 5.000000e-01, !dbg !107
  %1237 = fmul float %1211, 5.000000e-01, !dbg !107
  %1238 = fmul float %1212, 5.000000e-01, !dbg !107
  %1239 = fmul float %1213, 5.000000e-01, !dbg !107
  %1240 = fmul float %1214, 5.000000e-01, !dbg !107
  %1241 = fmul float %1220, 5.000000e-01, !dbg !107
  %1242 = fmul float %1221, 5.000000e-01, !dbg !107
  %1243 = fmul float %1222, 5.000000e-01, !dbg !107
  %1244 = fmul float %1223, 5.000000e-01, !dbg !107
  %1245 = fmul float %1229, 5.000000e-01, !dbg !107
  %1246 = fmul float %1230, 5.000000e-01, !dbg !107
  %1247 = fmul float %1231, 5.000000e-01, !dbg !107
  %1248 = fmul float %1232, 5.000000e-01, !dbg !107
  %1249 = fmul float %1202, %1202, !dbg !108
  %1250 = fmul float %1203, %1203, !dbg !108
  %1251 = fmul float %1204, %1204, !dbg !108
  %1252 = fmul float %1205, %1205, !dbg !108
  %1253 = fmul float %1211, %1211, !dbg !108
  %1254 = fmul float %1212, %1212, !dbg !108
  %1255 = fmul float %1213, %1213, !dbg !108
  %1256 = fmul float %1214, %1214, !dbg !108
  %1257 = fmul float %1220, %1220, !dbg !108
  %1258 = fmul float %1221, %1221, !dbg !108
  %1259 = fmul float %1222, %1222, !dbg !108
  %1260 = fmul float %1223, %1223, !dbg !108
  %1261 = fmul float %1229, %1229, !dbg !108
  %1262 = fmul float %1230, %1230, !dbg !108
  %1263 = fmul float %1231, %1231, !dbg !108
  %1264 = fmul float %1232, %1232, !dbg !108
  %1265 = fmul float %1249, %1202, !dbg !109
  %1266 = fmul float %1250, %1203, !dbg !109
  %1267 = fmul float %1251, %1204, !dbg !109
  %1268 = fmul float %1252, %1205, !dbg !109
  %1269 = fmul float %1253, %1211, !dbg !109
  %1270 = fmul float %1254, %1212, !dbg !109
  %1271 = fmul float %1255, %1213, !dbg !109
  %1272 = fmul float %1256, %1214, !dbg !109
  %1273 = fmul float %1257, %1220, !dbg !109
  %1274 = fmul float %1258, %1221, !dbg !109
  %1275 = fmul float %1259, %1222, !dbg !109
  %1276 = fmul float %1260, %1223, !dbg !109
  %1277 = fmul float %1261, %1229, !dbg !109
  %1278 = fmul float %1262, %1230, !dbg !109
  %1279 = fmul float %1263, %1231, !dbg !109
  %1280 = fmul float %1264, %1232, !dbg !109
  %1281 = fmul float %1265, 0x3FA6E4E260000000, !dbg !110
  %1282 = fmul float %1266, 0x3FA6E4E260000000, !dbg !110
  %1283 = fmul float %1267, 0x3FA6E4E260000000, !dbg !110
  %1284 = fmul float %1268, 0x3FA6E4E260000000, !dbg !110
  %1285 = fmul float %1269, 0x3FA6E4E260000000, !dbg !110
  %1286 = fmul float %1270, 0x3FA6E4E260000000, !dbg !110
  %1287 = fmul float %1271, 0x3FA6E4E260000000, !dbg !110
  %1288 = fmul float %1272, 0x3FA6E4E260000000, !dbg !110
  %1289 = fmul float %1273, 0x3FA6E4E260000000, !dbg !110
  %1290 = fmul float %1274, 0x3FA6E4E260000000, !dbg !110
  %1291 = fmul float %1275, 0x3FA6E4E260000000, !dbg !110
  %1292 = fmul float %1276, 0x3FA6E4E260000000, !dbg !110
  %1293 = fmul float %1277, 0x3FA6E4E260000000, !dbg !110
  %1294 = fmul float %1278, 0x3FA6E4E260000000, !dbg !110
  %1295 = fmul float %1279, 0x3FA6E4E260000000, !dbg !110
  %1296 = fmul float %1280, 0x3FA6E4E260000000, !dbg !110
  %1297 = fadd float %1281, %1202, !dbg !111
  %1298 = fadd float %1282, %1203, !dbg !111
  %1299 = fadd float %1283, %1204, !dbg !111
  %1300 = fadd float %1284, %1205, !dbg !111
  %1301 = fadd float %1285, %1211, !dbg !111
  %1302 = fadd float %1286, %1212, !dbg !111
  %1303 = fadd float %1287, %1213, !dbg !111
  %1304 = fadd float %1288, %1214, !dbg !111
  %1305 = fadd float %1289, %1220, !dbg !111
  %1306 = fadd float %1290, %1221, !dbg !111
  %1307 = fadd float %1291, %1222, !dbg !111
  %1308 = fadd float %1292, %1223, !dbg !111
  %1309 = fadd float %1293, %1229, !dbg !111
  %1310 = fadd float %1294, %1230, !dbg !111
  %1311 = fadd float %1295, %1231, !dbg !111
  %1312 = fadd float %1296, %1232, !dbg !111
  %1313 = fmul float %1297, 0x3FE9884540000000, !dbg !112
  %1314 = fmul float %1298, 0x3FE9884540000000, !dbg !112
  %1315 = fmul float %1299, 0x3FE9884540000000, !dbg !112
  %1316 = fmul float %1300, 0x3FE9884540000000, !dbg !112
  %1317 = fmul float %1301, 0x3FE9884540000000, !dbg !112
  %1318 = fmul float %1302, 0x3FE9884540000000, !dbg !112
  %1319 = fmul float %1303, 0x3FE9884540000000, !dbg !112
  %1320 = fmul float %1304, 0x3FE9884540000000, !dbg !112
  %1321 = fmul float %1305, 0x3FE9884540000000, !dbg !112
  %1322 = fmul float %1306, 0x3FE9884540000000, !dbg !112
  %1323 = fmul float %1307, 0x3FE9884540000000, !dbg !112
  %1324 = fmul float %1308, 0x3FE9884540000000, !dbg !112
  %1325 = fmul float %1309, 0x3FE9884540000000, !dbg !112
  %1326 = fmul float %1310, 0x3FE9884540000000, !dbg !112
  %1327 = fmul float %1311, 0x3FE9884540000000, !dbg !112
  %1328 = fmul float %1312, 0x3FE9884540000000, !dbg !112
  %1329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i = icmp eq i32 %1329, 0, !dbg !113
  %1330 = tail call float @llvm.nvvm.fabs.ftz.f(float %1313) #5, !dbg !113
  %1331 = tail call float @llvm.nvvm.fabs.f(float %1313) #5, !dbg !113
  %.01.i = select i1 %.not.i, float %1331, float %1330, !dbg !113
  %1332 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !113
  br i1 %1332, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !113

__internal_fmad.exit1.i:                          ; preds = %1117
  %1333 = fmul float %.01.i, 0x4007154760000000, !dbg !113
  %1334 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1333) #5, !dbg !113
  %1335 = fadd float %1334, 1.000000e+00, !dbg !113
  %1336 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1335) #6, !dbg !113, !srcloc !39
  %1337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i = icmp eq i32 %1337, 0, !dbg !113
  %1338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1336, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1339 = tail call float @llvm.nvvm.fma.rn.f(float %1336, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i = select i1 %.not6.i, float %1339, float %1338, !dbg !113
  %1340 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !113
  %s.0.i = select i1 %1340, float 1.000000e+00, float %.03.i, !dbg !113
  %1341 = bitcast float %s.0.i to i32, !dbg !113
  %1342 = bitcast float %1313 to i32, !dbg !113
  %1343 = and i32 %1342, -2147483648, !dbg !113
  %1344 = or i32 %1343, %1341, !dbg !113
  %1345 = bitcast i32 %1344 to float, !dbg !113
  br label %__nv_tanhf.exit, !dbg !113

__internal_fmad.exit3.i:                          ; preds = %1117
  %1346 = fmul float %1313, %1313, !dbg !113
  %1347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i = icmp eq i32 %1347, 0, !dbg !113
  %1348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1346, float 0xBFAAC795C0000000) #5, !dbg !113
  %1349 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1346, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i = select i1 %.not1.i, float %1349, float %1348, !dbg !113
  %1350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i = icmp eq i32 %1350, 0, !dbg !113
  %1351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %1346, float 0x3FC10B2820000000) #5, !dbg !113
  %1352 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %1346, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i = select i1 %.not2.i, float %1352, float %1351, !dbg !113
  %1353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i = icmp eq i32 %1353, 0, !dbg !113
  %1354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %1346, float 0xBFD5553DA0000000) #5, !dbg !113
  %1355 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %1346, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i = select i1 %.not3.i, float %1355, float %1354, !dbg !113
  %1356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i = icmp eq i32 %1356, 0, !dbg !113
  %1357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %1346, float 0.000000e+00) #5, !dbg !113
  %1358 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %1346, float 0.000000e+00) #5, !dbg !113
  %.04.i = select i1 %.not4.i, float %1358, float %1357, !dbg !113
  %1359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i = icmp eq i32 %1359, 0, !dbg !113
  %1360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %1313, float %1313) #5, !dbg !113
  %1361 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %1313, float %1313) #5, !dbg !113
  %.02.i = select i1 %.not5.i, float %1361, float %1360, !dbg !113
  br label %__nv_tanhf.exit, !dbg !113

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %1345, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !113
  %1362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i3 = icmp eq i32 %1362, 0, !dbg !113
  %1363 = tail call float @llvm.nvvm.fabs.ftz.f(float %1314) #5, !dbg !113
  %1364 = tail call float @llvm.nvvm.fabs.f(float %1314) #5, !dbg !113
  %.01.i4 = select i1 %.not.i3, float %1364, float %1363, !dbg !113
  %1365 = fcmp ult float %.01.i4, 0x3FE3333340000000, !dbg !113
  br i1 %1365, label %__internal_fmad.exit3.i10, label %__internal_fmad.exit1.i5, !dbg !113

__internal_fmad.exit1.i5:                         ; preds = %__nv_tanhf.exit
  %1366 = fmul float %.01.i4, 0x4007154760000000, !dbg !113
  %1367 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1366) #5, !dbg !113
  %1368 = fadd float %1367, 1.000000e+00, !dbg !113
  %1369 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1368) #6, !dbg !113, !srcloc !39
  %1370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i6 = icmp eq i32 %1370, 0, !dbg !113
  %1371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1369, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1372 = tail call float @llvm.nvvm.fma.rn.f(float %1369, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i7 = select i1 %.not6.i6, float %1372, float %1371, !dbg !113
  %1373 = fcmp oge float %.01.i4, 0x4022059680000000, !dbg !113
  %s.0.i8 = select i1 %1373, float 1.000000e+00, float %.03.i7, !dbg !113
  %1374 = bitcast float %s.0.i8 to i32, !dbg !113
  %1375 = bitcast float %1314 to i32, !dbg !113
  %1376 = and i32 %1375, -2147483648, !dbg !113
  %1377 = or i32 %1376, %1374, !dbg !113
  %1378 = bitcast i32 %1377 to float, !dbg !113
  br label %__nv_tanhf.exit21, !dbg !113

__internal_fmad.exit3.i10:                        ; preds = %__nv_tanhf.exit
  %1379 = fmul float %1314, %1314, !dbg !113
  %1380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i11 = icmp eq i32 %1380, 0, !dbg !113
  %1381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1379, float 0xBFAAC795C0000000) #5, !dbg !113
  %1382 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1379, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i12 = select i1 %.not1.i11, float %1382, float %1381, !dbg !113
  %1383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i13 = icmp eq i32 %1383, 0, !dbg !113
  %1384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i12, float %1379, float 0x3FC10B2820000000) #5, !dbg !113
  %1385 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i12, float %1379, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i14 = select i1 %.not2.i13, float %1385, float %1384, !dbg !113
  %1386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i15 = icmp eq i32 %1386, 0, !dbg !113
  %1387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %1379, float 0xBFD5553DA0000000) #5, !dbg !113
  %1388 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %1379, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i16 = select i1 %.not3.i15, float %1388, float %1387, !dbg !113
  %1389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i17 = icmp eq i32 %1389, 0, !dbg !113
  %1390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i16, float %1379, float 0.000000e+00) #5, !dbg !113
  %1391 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i16, float %1379, float 0.000000e+00) #5, !dbg !113
  %.04.i18 = select i1 %.not4.i17, float %1391, float %1390, !dbg !113
  %1392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i19 = icmp eq i32 %1392, 0, !dbg !113
  %1393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %1314, float %1314) #5, !dbg !113
  %1394 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %1314, float %1314) #5, !dbg !113
  %.02.i20 = select i1 %.not5.i19, float %1394, float %1393, !dbg !113
  br label %__nv_tanhf.exit21, !dbg !113

__nv_tanhf.exit21:                                ; preds = %__internal_fmad.exit1.i5, %__internal_fmad.exit3.i10
  %s.1.i9 = phi float [ %1378, %__internal_fmad.exit1.i5 ], [ %.02.i20, %__internal_fmad.exit3.i10 ], !dbg !113
  %1395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i22 = icmp eq i32 %1395, 0, !dbg !113
  %1396 = tail call float @llvm.nvvm.fabs.ftz.f(float %1315) #5, !dbg !113
  %1397 = tail call float @llvm.nvvm.fabs.f(float %1315) #5, !dbg !113
  %.01.i23 = select i1 %.not.i22, float %1397, float %1396, !dbg !113
  %1398 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !113
  br i1 %1398, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !113

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit21
  %1399 = fmul float %.01.i23, 0x4007154760000000, !dbg !113
  %1400 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1399) #5, !dbg !113
  %1401 = fadd float %1400, 1.000000e+00, !dbg !113
  %1402 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1401) #6, !dbg !113, !srcloc !39
  %1403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i25 = icmp eq i32 %1403, 0, !dbg !113
  %1404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1402, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1405 = tail call float @llvm.nvvm.fma.rn.f(float %1402, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i26 = select i1 %.not6.i25, float %1405, float %1404, !dbg !113
  %1406 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !113
  %s.0.i27 = select i1 %1406, float 1.000000e+00, float %.03.i26, !dbg !113
  %1407 = bitcast float %s.0.i27 to i32, !dbg !113
  %1408 = bitcast float %1315 to i32, !dbg !113
  %1409 = and i32 %1408, -2147483648, !dbg !113
  %1410 = or i32 %1409, %1407, !dbg !113
  %1411 = bitcast i32 %1410 to float, !dbg !113
  br label %__nv_tanhf.exit40, !dbg !113

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit21
  %1412 = fmul float %1315, %1315, !dbg !113
  %1413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i30 = icmp eq i32 %1413, 0, !dbg !113
  %1414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1412, float 0xBFAAC795C0000000) #5, !dbg !113
  %1415 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1412, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i31 = select i1 %.not1.i30, float %1415, float %1414, !dbg !113
  %1416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i32 = icmp eq i32 %1416, 0, !dbg !113
  %1417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %1412, float 0x3FC10B2820000000) #5, !dbg !113
  %1418 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %1412, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i33 = select i1 %.not2.i32, float %1418, float %1417, !dbg !113
  %1419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i34 = icmp eq i32 %1419, 0, !dbg !113
  %1420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %1412, float 0xBFD5553DA0000000) #5, !dbg !113
  %1421 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %1412, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i35 = select i1 %.not3.i34, float %1421, float %1420, !dbg !113
  %1422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i36 = icmp eq i32 %1422, 0, !dbg !113
  %1423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %1412, float 0.000000e+00) #5, !dbg !113
  %1424 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %1412, float 0.000000e+00) #5, !dbg !113
  %.04.i37 = select i1 %.not4.i36, float %1424, float %1423, !dbg !113
  %1425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i38 = icmp eq i32 %1425, 0, !dbg !113
  %1426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %1315, float %1315) #5, !dbg !113
  %1427 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %1315, float %1315) #5, !dbg !113
  %.02.i39 = select i1 %.not5.i38, float %1427, float %1426, !dbg !113
  br label %__nv_tanhf.exit40, !dbg !113

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %1411, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !113
  %1428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i41 = icmp eq i32 %1428, 0, !dbg !113
  %1429 = tail call float @llvm.nvvm.fabs.ftz.f(float %1316) #5, !dbg !113
  %1430 = tail call float @llvm.nvvm.fabs.f(float %1316) #5, !dbg !113
  %.01.i42 = select i1 %.not.i41, float %1430, float %1429, !dbg !113
  %1431 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !113
  br i1 %1431, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !113

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %1432 = fmul float %.01.i42, 0x4007154760000000, !dbg !113
  %1433 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1432) #5, !dbg !113
  %1434 = fadd float %1433, 1.000000e+00, !dbg !113
  %1435 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1434) #6, !dbg !113, !srcloc !39
  %1436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i44 = icmp eq i32 %1436, 0, !dbg !113
  %1437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1435, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1438 = tail call float @llvm.nvvm.fma.rn.f(float %1435, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i45 = select i1 %.not6.i44, float %1438, float %1437, !dbg !113
  %1439 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !113
  %s.0.i46 = select i1 %1439, float 1.000000e+00, float %.03.i45, !dbg !113
  %1440 = bitcast float %s.0.i46 to i32, !dbg !113
  %1441 = bitcast float %1316 to i32, !dbg !113
  %1442 = and i32 %1441, -2147483648, !dbg !113
  %1443 = or i32 %1442, %1440, !dbg !113
  %1444 = bitcast i32 %1443 to float, !dbg !113
  br label %__nv_tanhf.exit59, !dbg !113

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %1445 = fmul float %1316, %1316, !dbg !113
  %1446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i49 = icmp eq i32 %1446, 0, !dbg !113
  %1447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1445, float 0xBFAAC795C0000000) #5, !dbg !113
  %1448 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1445, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i50 = select i1 %.not1.i49, float %1448, float %1447, !dbg !113
  %1449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i51 = icmp eq i32 %1449, 0, !dbg !113
  %1450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %1445, float 0x3FC10B2820000000) #5, !dbg !113
  %1451 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %1445, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i52 = select i1 %.not2.i51, float %1451, float %1450, !dbg !113
  %1452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i53 = icmp eq i32 %1452, 0, !dbg !113
  %1453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %1445, float 0xBFD5553DA0000000) #5, !dbg !113
  %1454 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %1445, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i54 = select i1 %.not3.i53, float %1454, float %1453, !dbg !113
  %1455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i55 = icmp eq i32 %1455, 0, !dbg !113
  %1456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %1445, float 0.000000e+00) #5, !dbg !113
  %1457 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %1445, float 0.000000e+00) #5, !dbg !113
  %.04.i56 = select i1 %.not4.i55, float %1457, float %1456, !dbg !113
  %1458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i57 = icmp eq i32 %1458, 0, !dbg !113
  %1459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %1316, float %1316) #5, !dbg !113
  %1460 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %1316, float %1316) #5, !dbg !113
  %.02.i58 = select i1 %.not5.i57, float %1460, float %1459, !dbg !113
  br label %__nv_tanhf.exit59, !dbg !113

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %1444, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !113
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i60 = icmp eq i32 %1461, 0, !dbg !113
  %1462 = tail call float @llvm.nvvm.fabs.ftz.f(float %1317) #5, !dbg !113
  %1463 = tail call float @llvm.nvvm.fabs.f(float %1317) #5, !dbg !113
  %.01.i61 = select i1 %.not.i60, float %1463, float %1462, !dbg !113
  %1464 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !113
  br i1 %1464, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !113

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %1465 = fmul float %.01.i61, 0x4007154760000000, !dbg !113
  %1466 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1465) #5, !dbg !113
  %1467 = fadd float %1466, 1.000000e+00, !dbg !113
  %1468 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1467) #6, !dbg !113, !srcloc !39
  %1469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i63 = icmp eq i32 %1469, 0, !dbg !113
  %1470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1468, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1471 = tail call float @llvm.nvvm.fma.rn.f(float %1468, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i64 = select i1 %.not6.i63, float %1471, float %1470, !dbg !113
  %1472 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !113
  %s.0.i65 = select i1 %1472, float 1.000000e+00, float %.03.i64, !dbg !113
  %1473 = bitcast float %s.0.i65 to i32, !dbg !113
  %1474 = bitcast float %1317 to i32, !dbg !113
  %1475 = and i32 %1474, -2147483648, !dbg !113
  %1476 = or i32 %1475, %1473, !dbg !113
  %1477 = bitcast i32 %1476 to float, !dbg !113
  br label %__nv_tanhf.exit78, !dbg !113

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %1478 = fmul float %1317, %1317, !dbg !113
  %1479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i68 = icmp eq i32 %1479, 0, !dbg !113
  %1480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1478, float 0xBFAAC795C0000000) #5, !dbg !113
  %1481 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1478, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i69 = select i1 %.not1.i68, float %1481, float %1480, !dbg !113
  %1482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i70 = icmp eq i32 %1482, 0, !dbg !113
  %1483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %1478, float 0x3FC10B2820000000) #5, !dbg !113
  %1484 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %1478, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i71 = select i1 %.not2.i70, float %1484, float %1483, !dbg !113
  %1485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i72 = icmp eq i32 %1485, 0, !dbg !113
  %1486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %1478, float 0xBFD5553DA0000000) #5, !dbg !113
  %1487 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %1478, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i73 = select i1 %.not3.i72, float %1487, float %1486, !dbg !113
  %1488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i74 = icmp eq i32 %1488, 0, !dbg !113
  %1489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %1478, float 0.000000e+00) #5, !dbg !113
  %1490 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %1478, float 0.000000e+00) #5, !dbg !113
  %.04.i75 = select i1 %.not4.i74, float %1490, float %1489, !dbg !113
  %1491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i76 = icmp eq i32 %1491, 0, !dbg !113
  %1492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %1317, float %1317) #5, !dbg !113
  %1493 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %1317, float %1317) #5, !dbg !113
  %.02.i77 = select i1 %.not5.i76, float %1493, float %1492, !dbg !113
  br label %__nv_tanhf.exit78, !dbg !113

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %1477, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !113
  %1494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i79 = icmp eq i32 %1494, 0, !dbg !113
  %1495 = tail call float @llvm.nvvm.fabs.ftz.f(float %1318) #5, !dbg !113
  %1496 = tail call float @llvm.nvvm.fabs.f(float %1318) #5, !dbg !113
  %.01.i80 = select i1 %.not.i79, float %1496, float %1495, !dbg !113
  %1497 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !113
  br i1 %1497, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !113

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %1498 = fmul float %.01.i80, 0x4007154760000000, !dbg !113
  %1499 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1498) #5, !dbg !113
  %1500 = fadd float %1499, 1.000000e+00, !dbg !113
  %1501 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1500) #6, !dbg !113, !srcloc !39
  %1502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i82 = icmp eq i32 %1502, 0, !dbg !113
  %1503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1501, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1504 = tail call float @llvm.nvvm.fma.rn.f(float %1501, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i83 = select i1 %.not6.i82, float %1504, float %1503, !dbg !113
  %1505 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !113
  %s.0.i84 = select i1 %1505, float 1.000000e+00, float %.03.i83, !dbg !113
  %1506 = bitcast float %s.0.i84 to i32, !dbg !113
  %1507 = bitcast float %1318 to i32, !dbg !113
  %1508 = and i32 %1507, -2147483648, !dbg !113
  %1509 = or i32 %1508, %1506, !dbg !113
  %1510 = bitcast i32 %1509 to float, !dbg !113
  br label %__nv_tanhf.exit97, !dbg !113

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %1511 = fmul float %1318, %1318, !dbg !113
  %1512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i87 = icmp eq i32 %1512, 0, !dbg !113
  %1513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1511, float 0xBFAAC795C0000000) #5, !dbg !113
  %1514 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1511, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i88 = select i1 %.not1.i87, float %1514, float %1513, !dbg !113
  %1515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i89 = icmp eq i32 %1515, 0, !dbg !113
  %1516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %1511, float 0x3FC10B2820000000) #5, !dbg !113
  %1517 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %1511, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i90 = select i1 %.not2.i89, float %1517, float %1516, !dbg !113
  %1518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i91 = icmp eq i32 %1518, 0, !dbg !113
  %1519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %1511, float 0xBFD5553DA0000000) #5, !dbg !113
  %1520 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %1511, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i92 = select i1 %.not3.i91, float %1520, float %1519, !dbg !113
  %1521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i93 = icmp eq i32 %1521, 0, !dbg !113
  %1522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %1511, float 0.000000e+00) #5, !dbg !113
  %1523 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %1511, float 0.000000e+00) #5, !dbg !113
  %.04.i94 = select i1 %.not4.i93, float %1523, float %1522, !dbg !113
  %1524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i95 = icmp eq i32 %1524, 0, !dbg !113
  %1525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %1318, float %1318) #5, !dbg !113
  %1526 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %1318, float %1318) #5, !dbg !113
  %.02.i96 = select i1 %.not5.i95, float %1526, float %1525, !dbg !113
  br label %__nv_tanhf.exit97, !dbg !113

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %1510, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !113
  %1527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i98 = icmp eq i32 %1527, 0, !dbg !113
  %1528 = tail call float @llvm.nvvm.fabs.ftz.f(float %1319) #5, !dbg !113
  %1529 = tail call float @llvm.nvvm.fabs.f(float %1319) #5, !dbg !113
  %.01.i99 = select i1 %.not.i98, float %1529, float %1528, !dbg !113
  %1530 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !113
  br i1 %1530, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !113

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %1531 = fmul float %.01.i99, 0x4007154760000000, !dbg !113
  %1532 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1531) #5, !dbg !113
  %1533 = fadd float %1532, 1.000000e+00, !dbg !113
  %1534 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1533) #6, !dbg !113, !srcloc !39
  %1535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i101 = icmp eq i32 %1535, 0, !dbg !113
  %1536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1534, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1537 = tail call float @llvm.nvvm.fma.rn.f(float %1534, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i102 = select i1 %.not6.i101, float %1537, float %1536, !dbg !113
  %1538 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !113
  %s.0.i103 = select i1 %1538, float 1.000000e+00, float %.03.i102, !dbg !113
  %1539 = bitcast float %s.0.i103 to i32, !dbg !113
  %1540 = bitcast float %1319 to i32, !dbg !113
  %1541 = and i32 %1540, -2147483648, !dbg !113
  %1542 = or i32 %1541, %1539, !dbg !113
  %1543 = bitcast i32 %1542 to float, !dbg !113
  br label %__nv_tanhf.exit116, !dbg !113

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %1544 = fmul float %1319, %1319, !dbg !113
  %1545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i106 = icmp eq i32 %1545, 0, !dbg !113
  %1546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1544, float 0xBFAAC795C0000000) #5, !dbg !113
  %1547 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1544, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i107 = select i1 %.not1.i106, float %1547, float %1546, !dbg !113
  %1548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i108 = icmp eq i32 %1548, 0, !dbg !113
  %1549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %1544, float 0x3FC10B2820000000) #5, !dbg !113
  %1550 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %1544, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i109 = select i1 %.not2.i108, float %1550, float %1549, !dbg !113
  %1551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i110 = icmp eq i32 %1551, 0, !dbg !113
  %1552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %1544, float 0xBFD5553DA0000000) #5, !dbg !113
  %1553 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %1544, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i111 = select i1 %.not3.i110, float %1553, float %1552, !dbg !113
  %1554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i112 = icmp eq i32 %1554, 0, !dbg !113
  %1555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %1544, float 0.000000e+00) #5, !dbg !113
  %1556 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %1544, float 0.000000e+00) #5, !dbg !113
  %.04.i113 = select i1 %.not4.i112, float %1556, float %1555, !dbg !113
  %1557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i114 = icmp eq i32 %1557, 0, !dbg !113
  %1558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %1319, float %1319) #5, !dbg !113
  %1559 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %1319, float %1319) #5, !dbg !113
  %.02.i115 = select i1 %.not5.i114, float %1559, float %1558, !dbg !113
  br label %__nv_tanhf.exit116, !dbg !113

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %1543, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !113
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i117 = icmp eq i32 %1560, 0, !dbg !113
  %1561 = tail call float @llvm.nvvm.fabs.ftz.f(float %1320) #5, !dbg !113
  %1562 = tail call float @llvm.nvvm.fabs.f(float %1320) #5, !dbg !113
  %.01.i118 = select i1 %.not.i117, float %1562, float %1561, !dbg !113
  %1563 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !113
  br i1 %1563, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !113

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %1564 = fmul float %.01.i118, 0x4007154760000000, !dbg !113
  %1565 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1564) #5, !dbg !113
  %1566 = fadd float %1565, 1.000000e+00, !dbg !113
  %1567 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1566) #6, !dbg !113, !srcloc !39
  %1568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i120 = icmp eq i32 %1568, 0, !dbg !113
  %1569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1567, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1570 = tail call float @llvm.nvvm.fma.rn.f(float %1567, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i121 = select i1 %.not6.i120, float %1570, float %1569, !dbg !113
  %1571 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !113
  %s.0.i122 = select i1 %1571, float 1.000000e+00, float %.03.i121, !dbg !113
  %1572 = bitcast float %s.0.i122 to i32, !dbg !113
  %1573 = bitcast float %1320 to i32, !dbg !113
  %1574 = and i32 %1573, -2147483648, !dbg !113
  %1575 = or i32 %1574, %1572, !dbg !113
  %1576 = bitcast i32 %1575 to float, !dbg !113
  br label %__nv_tanhf.exit135, !dbg !113

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %1577 = fmul float %1320, %1320, !dbg !113
  %1578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i125 = icmp eq i32 %1578, 0, !dbg !113
  %1579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1577, float 0xBFAAC795C0000000) #5, !dbg !113
  %1580 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1577, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i126 = select i1 %.not1.i125, float %1580, float %1579, !dbg !113
  %1581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i127 = icmp eq i32 %1581, 0, !dbg !113
  %1582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %1577, float 0x3FC10B2820000000) #5, !dbg !113
  %1583 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %1577, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i128 = select i1 %.not2.i127, float %1583, float %1582, !dbg !113
  %1584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i129 = icmp eq i32 %1584, 0, !dbg !113
  %1585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %1577, float 0xBFD5553DA0000000) #5, !dbg !113
  %1586 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %1577, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i130 = select i1 %.not3.i129, float %1586, float %1585, !dbg !113
  %1587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i131 = icmp eq i32 %1587, 0, !dbg !113
  %1588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %1577, float 0.000000e+00) #5, !dbg !113
  %1589 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %1577, float 0.000000e+00) #5, !dbg !113
  %.04.i132 = select i1 %.not4.i131, float %1589, float %1588, !dbg !113
  %1590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i133 = icmp eq i32 %1590, 0, !dbg !113
  %1591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %1320, float %1320) #5, !dbg !113
  %1592 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %1320, float %1320) #5, !dbg !113
  %.02.i134 = select i1 %.not5.i133, float %1592, float %1591, !dbg !113
  br label %__nv_tanhf.exit135, !dbg !113

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %1576, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !113
  %1593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i136 = icmp eq i32 %1593, 0, !dbg !113
  %1594 = tail call float @llvm.nvvm.fabs.ftz.f(float %1321) #5, !dbg !113
  %1595 = tail call float @llvm.nvvm.fabs.f(float %1321) #5, !dbg !113
  %.01.i137 = select i1 %.not.i136, float %1595, float %1594, !dbg !113
  %1596 = fcmp ult float %.01.i137, 0x3FE3333340000000, !dbg !113
  br i1 %1596, label %__internal_fmad.exit3.i143, label %__internal_fmad.exit1.i138, !dbg !113

__internal_fmad.exit1.i138:                       ; preds = %__nv_tanhf.exit135
  %1597 = fmul float %.01.i137, 0x4007154760000000, !dbg !113
  %1598 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1597) #5, !dbg !113
  %1599 = fadd float %1598, 1.000000e+00, !dbg !113
  %1600 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1599) #6, !dbg !113, !srcloc !39
  %1601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i139 = icmp eq i32 %1601, 0, !dbg !113
  %1602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1600, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1603 = tail call float @llvm.nvvm.fma.rn.f(float %1600, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i140 = select i1 %.not6.i139, float %1603, float %1602, !dbg !113
  %1604 = fcmp oge float %.01.i137, 0x4022059680000000, !dbg !113
  %s.0.i141 = select i1 %1604, float 1.000000e+00, float %.03.i140, !dbg !113
  %1605 = bitcast float %s.0.i141 to i32, !dbg !113
  %1606 = bitcast float %1321 to i32, !dbg !113
  %1607 = and i32 %1606, -2147483648, !dbg !113
  %1608 = or i32 %1607, %1605, !dbg !113
  %1609 = bitcast i32 %1608 to float, !dbg !113
  br label %__nv_tanhf.exit154, !dbg !113

__internal_fmad.exit3.i143:                       ; preds = %__nv_tanhf.exit135
  %1610 = fmul float %1321, %1321, !dbg !113
  %1611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i144 = icmp eq i32 %1611, 0, !dbg !113
  %1612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1610, float 0xBFAAC795C0000000) #5, !dbg !113
  %1613 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1610, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i145 = select i1 %.not1.i144, float %1613, float %1612, !dbg !113
  %1614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i146 = icmp eq i32 %1614, 0, !dbg !113
  %1615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %1610, float 0x3FC10B2820000000) #5, !dbg !113
  %1616 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %1610, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i147 = select i1 %.not2.i146, float %1616, float %1615, !dbg !113
  %1617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i148 = icmp eq i32 %1617, 0, !dbg !113
  %1618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i147, float %1610, float 0xBFD5553DA0000000) #5, !dbg !113
  %1619 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i147, float %1610, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i149 = select i1 %.not3.i148, float %1619, float %1618, !dbg !113
  %1620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i150 = icmp eq i32 %1620, 0, !dbg !113
  %1621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %1610, float 0.000000e+00) #5, !dbg !113
  %1622 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %1610, float 0.000000e+00) #5, !dbg !113
  %.04.i151 = select i1 %.not4.i150, float %1622, float %1621, !dbg !113
  %1623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i152 = icmp eq i32 %1623, 0, !dbg !113
  %1624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i151, float %1321, float %1321) #5, !dbg !113
  %1625 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i151, float %1321, float %1321) #5, !dbg !113
  %.02.i153 = select i1 %.not5.i152, float %1625, float %1624, !dbg !113
  br label %__nv_tanhf.exit154, !dbg !113

__nv_tanhf.exit154:                               ; preds = %__internal_fmad.exit1.i138, %__internal_fmad.exit3.i143
  %s.1.i142 = phi float [ %1609, %__internal_fmad.exit1.i138 ], [ %.02.i153, %__internal_fmad.exit3.i143 ], !dbg !113
  %1626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i155 = icmp eq i32 %1626, 0, !dbg !113
  %1627 = tail call float @llvm.nvvm.fabs.ftz.f(float %1322) #5, !dbg !113
  %1628 = tail call float @llvm.nvvm.fabs.f(float %1322) #5, !dbg !113
  %.01.i156 = select i1 %.not.i155, float %1628, float %1627, !dbg !113
  %1629 = fcmp ult float %.01.i156, 0x3FE3333340000000, !dbg !113
  br i1 %1629, label %__internal_fmad.exit3.i162, label %__internal_fmad.exit1.i157, !dbg !113

__internal_fmad.exit1.i157:                       ; preds = %__nv_tanhf.exit154
  %1630 = fmul float %.01.i156, 0x4007154760000000, !dbg !113
  %1631 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1630) #5, !dbg !113
  %1632 = fadd float %1631, 1.000000e+00, !dbg !113
  %1633 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1632) #6, !dbg !113, !srcloc !39
  %1634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i158 = icmp eq i32 %1634, 0, !dbg !113
  %1635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1633, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1636 = tail call float @llvm.nvvm.fma.rn.f(float %1633, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i159 = select i1 %.not6.i158, float %1636, float %1635, !dbg !113
  %1637 = fcmp oge float %.01.i156, 0x4022059680000000, !dbg !113
  %s.0.i160 = select i1 %1637, float 1.000000e+00, float %.03.i159, !dbg !113
  %1638 = bitcast float %s.0.i160 to i32, !dbg !113
  %1639 = bitcast float %1322 to i32, !dbg !113
  %1640 = and i32 %1639, -2147483648, !dbg !113
  %1641 = or i32 %1640, %1638, !dbg !113
  %1642 = bitcast i32 %1641 to float, !dbg !113
  br label %__nv_tanhf.exit173, !dbg !113

__internal_fmad.exit3.i162:                       ; preds = %__nv_tanhf.exit154
  %1643 = fmul float %1322, %1322, !dbg !113
  %1644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i163 = icmp eq i32 %1644, 0, !dbg !113
  %1645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1643, float 0xBFAAC795C0000000) #5, !dbg !113
  %1646 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1643, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i164 = select i1 %.not1.i163, float %1646, float %1645, !dbg !113
  %1647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i165 = icmp eq i32 %1647, 0, !dbg !113
  %1648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i164, float %1643, float 0x3FC10B2820000000) #5, !dbg !113
  %1649 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i164, float %1643, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i166 = select i1 %.not2.i165, float %1649, float %1648, !dbg !113
  %1650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i167 = icmp eq i32 %1650, 0, !dbg !113
  %1651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %1643, float 0xBFD5553DA0000000) #5, !dbg !113
  %1652 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %1643, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i168 = select i1 %.not3.i167, float %1652, float %1651, !dbg !113
  %1653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i169 = icmp eq i32 %1653, 0, !dbg !113
  %1654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %1643, float 0.000000e+00) #5, !dbg !113
  %1655 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %1643, float 0.000000e+00) #5, !dbg !113
  %.04.i170 = select i1 %.not4.i169, float %1655, float %1654, !dbg !113
  %1656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i171 = icmp eq i32 %1656, 0, !dbg !113
  %1657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i170, float %1322, float %1322) #5, !dbg !113
  %1658 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i170, float %1322, float %1322) #5, !dbg !113
  %.02.i172 = select i1 %.not5.i171, float %1658, float %1657, !dbg !113
  br label %__nv_tanhf.exit173, !dbg !113

__nv_tanhf.exit173:                               ; preds = %__internal_fmad.exit1.i157, %__internal_fmad.exit3.i162
  %s.1.i161 = phi float [ %1642, %__internal_fmad.exit1.i157 ], [ %.02.i172, %__internal_fmad.exit3.i162 ], !dbg !113
  %1659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i174 = icmp eq i32 %1659, 0, !dbg !113
  %1660 = tail call float @llvm.nvvm.fabs.ftz.f(float %1323) #5, !dbg !113
  %1661 = tail call float @llvm.nvvm.fabs.f(float %1323) #5, !dbg !113
  %.01.i175 = select i1 %.not.i174, float %1661, float %1660, !dbg !113
  %1662 = fcmp ult float %.01.i175, 0x3FE3333340000000, !dbg !113
  br i1 %1662, label %__internal_fmad.exit3.i181, label %__internal_fmad.exit1.i176, !dbg !113

__internal_fmad.exit1.i176:                       ; preds = %__nv_tanhf.exit173
  %1663 = fmul float %.01.i175, 0x4007154760000000, !dbg !113
  %1664 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1663) #5, !dbg !113
  %1665 = fadd float %1664, 1.000000e+00, !dbg !113
  %1666 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1665) #6, !dbg !113, !srcloc !39
  %1667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i177 = icmp eq i32 %1667, 0, !dbg !113
  %1668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1666, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1669 = tail call float @llvm.nvvm.fma.rn.f(float %1666, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i178 = select i1 %.not6.i177, float %1669, float %1668, !dbg !113
  %1670 = fcmp oge float %.01.i175, 0x4022059680000000, !dbg !113
  %s.0.i179 = select i1 %1670, float 1.000000e+00, float %.03.i178, !dbg !113
  %1671 = bitcast float %s.0.i179 to i32, !dbg !113
  %1672 = bitcast float %1323 to i32, !dbg !113
  %1673 = and i32 %1672, -2147483648, !dbg !113
  %1674 = or i32 %1673, %1671, !dbg !113
  %1675 = bitcast i32 %1674 to float, !dbg !113
  br label %__nv_tanhf.exit192, !dbg !113

__internal_fmad.exit3.i181:                       ; preds = %__nv_tanhf.exit173
  %1676 = fmul float %1323, %1323, !dbg !113
  %1677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i182 = icmp eq i32 %1677, 0, !dbg !113
  %1678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1676, float 0xBFAAC795C0000000) #5, !dbg !113
  %1679 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1676, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i183 = select i1 %.not1.i182, float %1679, float %1678, !dbg !113
  %1680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i184 = icmp eq i32 %1680, 0, !dbg !113
  %1681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i183, float %1676, float 0x3FC10B2820000000) #5, !dbg !113
  %1682 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i183, float %1676, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i185 = select i1 %.not2.i184, float %1682, float %1681, !dbg !113
  %1683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i186 = icmp eq i32 %1683, 0, !dbg !113
  %1684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i185, float %1676, float 0xBFD5553DA0000000) #5, !dbg !113
  %1685 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i185, float %1676, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i187 = select i1 %.not3.i186, float %1685, float %1684, !dbg !113
  %1686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i188 = icmp eq i32 %1686, 0, !dbg !113
  %1687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %1676, float 0.000000e+00) #5, !dbg !113
  %1688 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %1676, float 0.000000e+00) #5, !dbg !113
  %.04.i189 = select i1 %.not4.i188, float %1688, float %1687, !dbg !113
  %1689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i190 = icmp eq i32 %1689, 0, !dbg !113
  %1690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i189, float %1323, float %1323) #5, !dbg !113
  %1691 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i189, float %1323, float %1323) #5, !dbg !113
  %.02.i191 = select i1 %.not5.i190, float %1691, float %1690, !dbg !113
  br label %__nv_tanhf.exit192, !dbg !113

__nv_tanhf.exit192:                               ; preds = %__internal_fmad.exit1.i176, %__internal_fmad.exit3.i181
  %s.1.i180 = phi float [ %1675, %__internal_fmad.exit1.i176 ], [ %.02.i191, %__internal_fmad.exit3.i181 ], !dbg !113
  %1692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i193 = icmp eq i32 %1692, 0, !dbg !113
  %1693 = tail call float @llvm.nvvm.fabs.ftz.f(float %1324) #5, !dbg !113
  %1694 = tail call float @llvm.nvvm.fabs.f(float %1324) #5, !dbg !113
  %.01.i194 = select i1 %.not.i193, float %1694, float %1693, !dbg !113
  %1695 = fcmp ult float %.01.i194, 0x3FE3333340000000, !dbg !113
  br i1 %1695, label %__internal_fmad.exit3.i200, label %__internal_fmad.exit1.i195, !dbg !113

__internal_fmad.exit1.i195:                       ; preds = %__nv_tanhf.exit192
  %1696 = fmul float %.01.i194, 0x4007154760000000, !dbg !113
  %1697 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1696) #5, !dbg !113
  %1698 = fadd float %1697, 1.000000e+00, !dbg !113
  %1699 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1698) #6, !dbg !113, !srcloc !39
  %1700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i196 = icmp eq i32 %1700, 0, !dbg !113
  %1701 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1699, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1702 = tail call float @llvm.nvvm.fma.rn.f(float %1699, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i197 = select i1 %.not6.i196, float %1702, float %1701, !dbg !113
  %1703 = fcmp oge float %.01.i194, 0x4022059680000000, !dbg !113
  %s.0.i198 = select i1 %1703, float 1.000000e+00, float %.03.i197, !dbg !113
  %1704 = bitcast float %s.0.i198 to i32, !dbg !113
  %1705 = bitcast float %1324 to i32, !dbg !113
  %1706 = and i32 %1705, -2147483648, !dbg !113
  %1707 = or i32 %1706, %1704, !dbg !113
  %1708 = bitcast i32 %1707 to float, !dbg !113
  br label %__nv_tanhf.exit211, !dbg !113

__internal_fmad.exit3.i200:                       ; preds = %__nv_tanhf.exit192
  %1709 = fmul float %1324, %1324, !dbg !113
  %1710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i201 = icmp eq i32 %1710, 0, !dbg !113
  %1711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1709, float 0xBFAAC795C0000000) #5, !dbg !113
  %1712 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1709, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i202 = select i1 %.not1.i201, float %1712, float %1711, !dbg !113
  %1713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i203 = icmp eq i32 %1713, 0, !dbg !113
  %1714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i202, float %1709, float 0x3FC10B2820000000) #5, !dbg !113
  %1715 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i202, float %1709, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i204 = select i1 %.not2.i203, float %1715, float %1714, !dbg !113
  %1716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i205 = icmp eq i32 %1716, 0, !dbg !113
  %1717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i204, float %1709, float 0xBFD5553DA0000000) #5, !dbg !113
  %1718 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i204, float %1709, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i206 = select i1 %.not3.i205, float %1718, float %1717, !dbg !113
  %1719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i207 = icmp eq i32 %1719, 0, !dbg !113
  %1720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i206, float %1709, float 0.000000e+00) #5, !dbg !113
  %1721 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i206, float %1709, float 0.000000e+00) #5, !dbg !113
  %.04.i208 = select i1 %.not4.i207, float %1721, float %1720, !dbg !113
  %1722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i209 = icmp eq i32 %1722, 0, !dbg !113
  %1723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i208, float %1324, float %1324) #5, !dbg !113
  %1724 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i208, float %1324, float %1324) #5, !dbg !113
  %.02.i210 = select i1 %.not5.i209, float %1724, float %1723, !dbg !113
  br label %__nv_tanhf.exit211, !dbg !113

__nv_tanhf.exit211:                               ; preds = %__internal_fmad.exit1.i195, %__internal_fmad.exit3.i200
  %s.1.i199 = phi float [ %1708, %__internal_fmad.exit1.i195 ], [ %.02.i210, %__internal_fmad.exit3.i200 ], !dbg !113
  %1725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i212 = icmp eq i32 %1725, 0, !dbg !113
  %1726 = tail call float @llvm.nvvm.fabs.ftz.f(float %1325) #5, !dbg !113
  %1727 = tail call float @llvm.nvvm.fabs.f(float %1325) #5, !dbg !113
  %.01.i213 = select i1 %.not.i212, float %1727, float %1726, !dbg !113
  %1728 = fcmp ult float %.01.i213, 0x3FE3333340000000, !dbg !113
  br i1 %1728, label %__internal_fmad.exit3.i219, label %__internal_fmad.exit1.i214, !dbg !113

__internal_fmad.exit1.i214:                       ; preds = %__nv_tanhf.exit211
  %1729 = fmul float %.01.i213, 0x4007154760000000, !dbg !113
  %1730 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1729) #5, !dbg !113
  %1731 = fadd float %1730, 1.000000e+00, !dbg !113
  %1732 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1731) #6, !dbg !113, !srcloc !39
  %1733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i215 = icmp eq i32 %1733, 0, !dbg !113
  %1734 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1732, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1735 = tail call float @llvm.nvvm.fma.rn.f(float %1732, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i216 = select i1 %.not6.i215, float %1735, float %1734, !dbg !113
  %1736 = fcmp oge float %.01.i213, 0x4022059680000000, !dbg !113
  %s.0.i217 = select i1 %1736, float 1.000000e+00, float %.03.i216, !dbg !113
  %1737 = bitcast float %s.0.i217 to i32, !dbg !113
  %1738 = bitcast float %1325 to i32, !dbg !113
  %1739 = and i32 %1738, -2147483648, !dbg !113
  %1740 = or i32 %1739, %1737, !dbg !113
  %1741 = bitcast i32 %1740 to float, !dbg !113
  br label %__nv_tanhf.exit230, !dbg !113

__internal_fmad.exit3.i219:                       ; preds = %__nv_tanhf.exit211
  %1742 = fmul float %1325, %1325, !dbg !113
  %1743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i220 = icmp eq i32 %1743, 0, !dbg !113
  %1744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1742, float 0xBFAAC795C0000000) #5, !dbg !113
  %1745 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1742, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i221 = select i1 %.not1.i220, float %1745, float %1744, !dbg !113
  %1746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i222 = icmp eq i32 %1746, 0, !dbg !113
  %1747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i221, float %1742, float 0x3FC10B2820000000) #5, !dbg !113
  %1748 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i221, float %1742, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i223 = select i1 %.not2.i222, float %1748, float %1747, !dbg !113
  %1749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i224 = icmp eq i32 %1749, 0, !dbg !113
  %1750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i223, float %1742, float 0xBFD5553DA0000000) #5, !dbg !113
  %1751 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i223, float %1742, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i225 = select i1 %.not3.i224, float %1751, float %1750, !dbg !113
  %1752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i226 = icmp eq i32 %1752, 0, !dbg !113
  %1753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %1742, float 0.000000e+00) #5, !dbg !113
  %1754 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %1742, float 0.000000e+00) #5, !dbg !113
  %.04.i227 = select i1 %.not4.i226, float %1754, float %1753, !dbg !113
  %1755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i228 = icmp eq i32 %1755, 0, !dbg !113
  %1756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i227, float %1325, float %1325) #5, !dbg !113
  %1757 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i227, float %1325, float %1325) #5, !dbg !113
  %.02.i229 = select i1 %.not5.i228, float %1757, float %1756, !dbg !113
  br label %__nv_tanhf.exit230, !dbg !113

__nv_tanhf.exit230:                               ; preds = %__internal_fmad.exit1.i214, %__internal_fmad.exit3.i219
  %s.1.i218 = phi float [ %1741, %__internal_fmad.exit1.i214 ], [ %.02.i229, %__internal_fmad.exit3.i219 ], !dbg !113
  %1758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i231 = icmp eq i32 %1758, 0, !dbg !113
  %1759 = tail call float @llvm.nvvm.fabs.ftz.f(float %1326) #5, !dbg !113
  %1760 = tail call float @llvm.nvvm.fabs.f(float %1326) #5, !dbg !113
  %.01.i232 = select i1 %.not.i231, float %1760, float %1759, !dbg !113
  %1761 = fcmp ult float %.01.i232, 0x3FE3333340000000, !dbg !113
  br i1 %1761, label %__internal_fmad.exit3.i238, label %__internal_fmad.exit1.i233, !dbg !113

__internal_fmad.exit1.i233:                       ; preds = %__nv_tanhf.exit230
  %1762 = fmul float %.01.i232, 0x4007154760000000, !dbg !113
  %1763 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1762) #5, !dbg !113
  %1764 = fadd float %1763, 1.000000e+00, !dbg !113
  %1765 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1764) #6, !dbg !113, !srcloc !39
  %1766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i234 = icmp eq i32 %1766, 0, !dbg !113
  %1767 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1765, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1768 = tail call float @llvm.nvvm.fma.rn.f(float %1765, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i235 = select i1 %.not6.i234, float %1768, float %1767, !dbg !113
  %1769 = fcmp oge float %.01.i232, 0x4022059680000000, !dbg !113
  %s.0.i236 = select i1 %1769, float 1.000000e+00, float %.03.i235, !dbg !113
  %1770 = bitcast float %s.0.i236 to i32, !dbg !113
  %1771 = bitcast float %1326 to i32, !dbg !113
  %1772 = and i32 %1771, -2147483648, !dbg !113
  %1773 = or i32 %1772, %1770, !dbg !113
  %1774 = bitcast i32 %1773 to float, !dbg !113
  br label %__nv_tanhf.exit249, !dbg !113

__internal_fmad.exit3.i238:                       ; preds = %__nv_tanhf.exit230
  %1775 = fmul float %1326, %1326, !dbg !113
  %1776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i239 = icmp eq i32 %1776, 0, !dbg !113
  %1777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1775, float 0xBFAAC795C0000000) #5, !dbg !113
  %1778 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1775, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i240 = select i1 %.not1.i239, float %1778, float %1777, !dbg !113
  %1779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i241 = icmp eq i32 %1779, 0, !dbg !113
  %1780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i240, float %1775, float 0x3FC10B2820000000) #5, !dbg !113
  %1781 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i240, float %1775, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i242 = select i1 %.not2.i241, float %1781, float %1780, !dbg !113
  %1782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i243 = icmp eq i32 %1782, 0, !dbg !113
  %1783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i242, float %1775, float 0xBFD5553DA0000000) #5, !dbg !113
  %1784 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i242, float %1775, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i244 = select i1 %.not3.i243, float %1784, float %1783, !dbg !113
  %1785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i245 = icmp eq i32 %1785, 0, !dbg !113
  %1786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i244, float %1775, float 0.000000e+00) #5, !dbg !113
  %1787 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i244, float %1775, float 0.000000e+00) #5, !dbg !113
  %.04.i246 = select i1 %.not4.i245, float %1787, float %1786, !dbg !113
  %1788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i247 = icmp eq i32 %1788, 0, !dbg !113
  %1789 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i246, float %1326, float %1326) #5, !dbg !113
  %1790 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i246, float %1326, float %1326) #5, !dbg !113
  %.02.i248 = select i1 %.not5.i247, float %1790, float %1789, !dbg !113
  br label %__nv_tanhf.exit249, !dbg !113

__nv_tanhf.exit249:                               ; preds = %__internal_fmad.exit1.i233, %__internal_fmad.exit3.i238
  %s.1.i237 = phi float [ %1774, %__internal_fmad.exit1.i233 ], [ %.02.i248, %__internal_fmad.exit3.i238 ], !dbg !113
  %1791 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i250 = icmp eq i32 %1791, 0, !dbg !113
  %1792 = tail call float @llvm.nvvm.fabs.ftz.f(float %1327) #5, !dbg !113
  %1793 = tail call float @llvm.nvvm.fabs.f(float %1327) #5, !dbg !113
  %.01.i251 = select i1 %.not.i250, float %1793, float %1792, !dbg !113
  %1794 = fcmp ult float %.01.i251, 0x3FE3333340000000, !dbg !113
  br i1 %1794, label %__internal_fmad.exit3.i257, label %__internal_fmad.exit1.i252, !dbg !113

__internal_fmad.exit1.i252:                       ; preds = %__nv_tanhf.exit249
  %1795 = fmul float %.01.i251, 0x4007154760000000, !dbg !113
  %1796 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1795) #5, !dbg !113
  %1797 = fadd float %1796, 1.000000e+00, !dbg !113
  %1798 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1797) #6, !dbg !113, !srcloc !39
  %1799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i253 = icmp eq i32 %1799, 0, !dbg !113
  %1800 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1798, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1801 = tail call float @llvm.nvvm.fma.rn.f(float %1798, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i254 = select i1 %.not6.i253, float %1801, float %1800, !dbg !113
  %1802 = fcmp oge float %.01.i251, 0x4022059680000000, !dbg !113
  %s.0.i255 = select i1 %1802, float 1.000000e+00, float %.03.i254, !dbg !113
  %1803 = bitcast float %s.0.i255 to i32, !dbg !113
  %1804 = bitcast float %1327 to i32, !dbg !113
  %1805 = and i32 %1804, -2147483648, !dbg !113
  %1806 = or i32 %1805, %1803, !dbg !113
  %1807 = bitcast i32 %1806 to float, !dbg !113
  br label %__nv_tanhf.exit268, !dbg !113

__internal_fmad.exit3.i257:                       ; preds = %__nv_tanhf.exit249
  %1808 = fmul float %1327, %1327, !dbg !113
  %1809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i258 = icmp eq i32 %1809, 0, !dbg !113
  %1810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1808, float 0xBFAAC795C0000000) #5, !dbg !113
  %1811 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1808, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i259 = select i1 %.not1.i258, float %1811, float %1810, !dbg !113
  %1812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i260 = icmp eq i32 %1812, 0, !dbg !113
  %1813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i259, float %1808, float 0x3FC10B2820000000) #5, !dbg !113
  %1814 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i259, float %1808, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i261 = select i1 %.not2.i260, float %1814, float %1813, !dbg !113
  %1815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i262 = icmp eq i32 %1815, 0, !dbg !113
  %1816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float %1808, float 0xBFD5553DA0000000) #5, !dbg !113
  %1817 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float %1808, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i263 = select i1 %.not3.i262, float %1817, float %1816, !dbg !113
  %1818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i264 = icmp eq i32 %1818, 0, !dbg !113
  %1819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i263, float %1808, float 0.000000e+00) #5, !dbg !113
  %1820 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i263, float %1808, float 0.000000e+00) #5, !dbg !113
  %.04.i265 = select i1 %.not4.i264, float %1820, float %1819, !dbg !113
  %1821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i266 = icmp eq i32 %1821, 0, !dbg !113
  %1822 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i265, float %1327, float %1327) #5, !dbg !113
  %1823 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i265, float %1327, float %1327) #5, !dbg !113
  %.02.i267 = select i1 %.not5.i266, float %1823, float %1822, !dbg !113
  br label %__nv_tanhf.exit268, !dbg !113

__nv_tanhf.exit268:                               ; preds = %__internal_fmad.exit1.i252, %__internal_fmad.exit3.i257
  %s.1.i256 = phi float [ %1807, %__internal_fmad.exit1.i252 ], [ %.02.i267, %__internal_fmad.exit3.i257 ], !dbg !113
  %1824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i269 = icmp eq i32 %1824, 0, !dbg !113
  %1825 = tail call float @llvm.nvvm.fabs.ftz.f(float %1328) #5, !dbg !113
  %1826 = tail call float @llvm.nvvm.fabs.f(float %1328) #5, !dbg !113
  %.01.i270 = select i1 %.not.i269, float %1826, float %1825, !dbg !113
  %1827 = fcmp ult float %.01.i270, 0x3FE3333340000000, !dbg !113
  br i1 %1827, label %__internal_fmad.exit3.i276, label %__internal_fmad.exit1.i271, !dbg !113

__internal_fmad.exit1.i271:                       ; preds = %__nv_tanhf.exit268
  %1828 = fmul float %.01.i270, 0x4007154760000000, !dbg !113
  %1829 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1828) #5, !dbg !113
  %1830 = fadd float %1829, 1.000000e+00, !dbg !113
  %1831 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1830) #6, !dbg !113, !srcloc !39
  %1832 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i272 = icmp eq i32 %1832, 0, !dbg !113
  %1833 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1831, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1834 = tail call float @llvm.nvvm.fma.rn.f(float %1831, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i273 = select i1 %.not6.i272, float %1834, float %1833, !dbg !113
  %1835 = fcmp oge float %.01.i270, 0x4022059680000000, !dbg !113
  %s.0.i274 = select i1 %1835, float 1.000000e+00, float %.03.i273, !dbg !113
  %1836 = bitcast float %s.0.i274 to i32, !dbg !113
  %1837 = bitcast float %1328 to i32, !dbg !113
  %1838 = and i32 %1837, -2147483648, !dbg !113
  %1839 = or i32 %1838, %1836, !dbg !113
  %1840 = bitcast i32 %1839 to float, !dbg !113
  br label %__nv_tanhf.exit287, !dbg !113

__internal_fmad.exit3.i276:                       ; preds = %__nv_tanhf.exit268
  %1841 = fmul float %1328, %1328, !dbg !113
  %1842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i277 = icmp eq i32 %1842, 0, !dbg !113
  %1843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1841, float 0xBFAAC795C0000000) #5, !dbg !113
  %1844 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1841, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i278 = select i1 %.not1.i277, float %1844, float %1843, !dbg !113
  %1845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i279 = icmp eq i32 %1845, 0, !dbg !113
  %1846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i278, float %1841, float 0x3FC10B2820000000) #5, !dbg !113
  %1847 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i278, float %1841, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i280 = select i1 %.not2.i279, float %1847, float %1846, !dbg !113
  %1848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i281 = icmp eq i32 %1848, 0, !dbg !113
  %1849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i280, float %1841, float 0xBFD5553DA0000000) #5, !dbg !113
  %1850 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i280, float %1841, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i282 = select i1 %.not3.i281, float %1850, float %1849, !dbg !113
  %1851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i283 = icmp eq i32 %1851, 0, !dbg !113
  %1852 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i282, float %1841, float 0.000000e+00) #5, !dbg !113
  %1853 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i282, float %1841, float 0.000000e+00) #5, !dbg !113
  %.04.i284 = select i1 %.not4.i283, float %1853, float %1852, !dbg !113
  %1854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i285 = icmp eq i32 %1854, 0, !dbg !113
  %1855 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i284, float %1328, float %1328) #5, !dbg !113
  %1856 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i284, float %1328, float %1328) #5, !dbg !113
  %.02.i286 = select i1 %.not5.i285, float %1856, float %1855, !dbg !113
  br label %__nv_tanhf.exit287, !dbg !113

__nv_tanhf.exit287:                               ; preds = %__internal_fmad.exit1.i271, %__internal_fmad.exit3.i276
  %s.1.i275 = phi float [ %1840, %__internal_fmad.exit1.i271 ], [ %.02.i286, %__internal_fmad.exit3.i276 ], !dbg !113
  %1857 = fadd float %s.1.i, 1.000000e+00, !dbg !114
  %1858 = fadd float %s.1.i9, 1.000000e+00, !dbg !114
  %1859 = fadd float %s.1.i28, 1.000000e+00, !dbg !114
  %1860 = fadd float %s.1.i47, 1.000000e+00, !dbg !114
  %1861 = fadd float %s.1.i66, 1.000000e+00, !dbg !114
  %1862 = fadd float %s.1.i85, 1.000000e+00, !dbg !114
  %1863 = fadd float %s.1.i104, 1.000000e+00, !dbg !114
  %1864 = fadd float %s.1.i123, 1.000000e+00, !dbg !114
  %1865 = fadd float %s.1.i142, 1.000000e+00, !dbg !114
  %1866 = fadd float %s.1.i161, 1.000000e+00, !dbg !114
  %1867 = fadd float %s.1.i180, 1.000000e+00, !dbg !114
  %1868 = fadd float %s.1.i199, 1.000000e+00, !dbg !114
  %1869 = fadd float %s.1.i218, 1.000000e+00, !dbg !114
  %1870 = fadd float %s.1.i237, 1.000000e+00, !dbg !114
  %1871 = fadd float %s.1.i256, 1.000000e+00, !dbg !114
  %1872 = fadd float %s.1.i275, 1.000000e+00, !dbg !114
  %1873 = fmul float %1233, %1857, !dbg !115
  %1874 = fmul float %1234, %1858, !dbg !115
  %1875 = fmul float %1235, %1859, !dbg !115
  %1876 = fmul float %1236, %1860, !dbg !115
  %1877 = fmul float %1237, %1861, !dbg !115
  %1878 = fmul float %1238, %1862, !dbg !115
  %1879 = fmul float %1239, %1863, !dbg !115
  %1880 = fmul float %1240, %1864, !dbg !115
  %1881 = fmul float %1241, %1865, !dbg !115
  %1882 = fmul float %1242, %1866, !dbg !115
  %1883 = fmul float %1243, %1867, !dbg !115
  %1884 = fmul float %1244, %1868, !dbg !115
  %1885 = fmul float %1245, %1869, !dbg !115
  %1886 = fmul float %1246, %1870, !dbg !115
  %1887 = fmul float %1247, %1871, !dbg !115
  %1888 = fmul float %1248, %1872, !dbg !115
  %1889 = select i1 %1120, float %1166, float %1873, !dbg !116
  %1890 = select i1 %1120, float %1167, float %1874, !dbg !116
  %1891 = select i1 %1120, float %1168, float %1875, !dbg !116
  %1892 = select i1 %1120, float %1169, float %1876, !dbg !116
  %1893 = select i1 %1120, float %1170, float %1877, !dbg !116
  %1894 = select i1 %1120, float %1171, float %1878, !dbg !116
  %1895 = select i1 %1120, float %1172, float %1879, !dbg !116
  %1896 = select i1 %1120, float %1173, float %1880, !dbg !116
  %1897 = select i1 %1120, float %1174, float %1881, !dbg !116
  %1898 = select i1 %1120, float %1175, float %1882, !dbg !116
  %1899 = select i1 %1120, float %1176, float %1883, !dbg !116
  %1900 = select i1 %1120, float %1177, float %1884, !dbg !116
  %1901 = select i1 %1120, float %1178, float %1885, !dbg !116
  %1902 = select i1 %1120, float %1179, float %1886, !dbg !116
  %1903 = select i1 %1120, float %1180, float %1887, !dbg !116
  %1904 = select i1 %1120, float %1181, float %1888, !dbg !116
  %1905 = fmul float %1115, %1889, !dbg !117
  %1906 = fmul float %1115, %1890, !dbg !117
  %1907 = fmul float %1115, %1891, !dbg !117
  %1908 = fmul float %1115, %1892, !dbg !117
  %1909 = fmul float %1115, %1893, !dbg !117
  %1910 = fmul float %1115, %1894, !dbg !117
  %1911 = fmul float %1115, %1895, !dbg !117
  %1912 = fmul float %1115, %1896, !dbg !117
  %1913 = fmul float %1115, %1897, !dbg !117
  %1914 = fmul float %1115, %1898, !dbg !117
  %1915 = fmul float %1115, %1899, !dbg !117
  %1916 = fmul float %1115, %1900, !dbg !117
  %1917 = fmul float %1115, %1901, !dbg !117
  %1918 = fmul float %1115, %1902, !dbg !117
  %1919 = fmul float %1115, %1903, !dbg !117
  %1920 = fmul float %1115, %1904, !dbg !117
  %1921 = tail call float @llvm.nvvm.round.f(float %1905) #5, !dbg !118
  %1922 = tail call float @llvm.nvvm.round.f(float %1906) #5, !dbg !118
  %1923 = tail call float @llvm.nvvm.round.f(float %1907) #5, !dbg !118
  %1924 = tail call float @llvm.nvvm.round.f(float %1908) #5, !dbg !118
  %1925 = tail call float @llvm.nvvm.round.f(float %1909) #5, !dbg !118
  %1926 = tail call float @llvm.nvvm.round.f(float %1910) #5, !dbg !118
  %1927 = tail call float @llvm.nvvm.round.f(float %1911) #5, !dbg !118
  %1928 = tail call float @llvm.nvvm.round.f(float %1912) #5, !dbg !118
  %1929 = tail call float @llvm.nvvm.round.f(float %1913) #5, !dbg !118
  %1930 = tail call float @llvm.nvvm.round.f(float %1914) #5, !dbg !118
  %1931 = tail call float @llvm.nvvm.round.f(float %1915) #5, !dbg !118
  %1932 = tail call float @llvm.nvvm.round.f(float %1916) #5, !dbg !118
  %1933 = tail call float @llvm.nvvm.round.f(float %1917) #5, !dbg !118
  %1934 = tail call float @llvm.nvvm.round.f(float %1918) #5, !dbg !118
  %1935 = tail call float @llvm.nvvm.round.f(float %1919) #5, !dbg !118
  %1936 = tail call float @llvm.nvvm.round.f(float %1920) #5, !dbg !118
  %1937 = insertelement <4 x float> poison, float %1921, i64 0, !dbg !119
  %1938 = insertelement <4 x float> %1937, float %1922, i64 1, !dbg !119
  %1939 = insertelement <4 x float> %1938, float %1923, i64 2, !dbg !119
  %1940 = insertelement <4 x float> %1939, float %1924, i64 3, !dbg !119
  %1941 = fcmp ogt <4 x float> %1940, splat (float -1.270000e+02), !dbg !119
  %1942 = fcmp uno <4 x float> %1940, zeroinitializer, !dbg !121
  %1943 = or <4 x i1> %1941, %1942, !dbg !122
  %1944 = select <4 x i1> %1943, <4 x float> %1940, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1945 = fcmp olt <4 x float> %1944, splat (float 1.270000e+02), !dbg !124
  %1946 = fcmp uno <4 x float> %1944, zeroinitializer, !dbg !126
  %1947 = or <4 x i1> %1945, %1946, !dbg !127
  %1948 = fptosi <4 x float> %1944 to <4 x i8>, !dbg !128
  %1949 = select <4 x i1> %1947, <4 x i8> %1948, <4 x i8> splat (i8 127), !dbg !129
  %1950 = insertelement <4 x float> poison, float %1925, i64 0, !dbg !119
  %1951 = insertelement <4 x float> %1950, float %1926, i64 1, !dbg !119
  %1952 = insertelement <4 x float> %1951, float %1927, i64 2, !dbg !119
  %1953 = insertelement <4 x float> %1952, float %1928, i64 3, !dbg !119
  %1954 = fcmp ogt <4 x float> %1953, splat (float -1.270000e+02), !dbg !119
  %1955 = fcmp uno <4 x float> %1953, zeroinitializer, !dbg !121
  %1956 = or <4 x i1> %1954, %1955, !dbg !122
  %1957 = select <4 x i1> %1956, <4 x float> %1953, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1958 = fcmp olt <4 x float> %1957, splat (float 1.270000e+02), !dbg !124
  %1959 = fcmp uno <4 x float> %1957, zeroinitializer, !dbg !126
  %1960 = or <4 x i1> %1958, %1959, !dbg !127
  %1961 = fptosi <4 x float> %1957 to <4 x i8>, !dbg !128
  %1962 = select <4 x i1> %1960, <4 x i8> %1961, <4 x i8> splat (i8 127), !dbg !129
  %1963 = insertelement <4 x float> poison, float %1929, i64 0, !dbg !119
  %1964 = insertelement <4 x float> %1963, float %1930, i64 1, !dbg !119
  %1965 = insertelement <4 x float> %1964, float %1931, i64 2, !dbg !119
  %1966 = insertelement <4 x float> %1965, float %1932, i64 3, !dbg !119
  %1967 = fcmp ogt <4 x float> %1966, splat (float -1.270000e+02), !dbg !119
  %1968 = fcmp uno <4 x float> %1966, zeroinitializer, !dbg !121
  %1969 = or <4 x i1> %1967, %1968, !dbg !122
  %1970 = select <4 x i1> %1969, <4 x float> %1966, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1971 = fcmp olt <4 x float> %1970, splat (float 1.270000e+02), !dbg !124
  %1972 = fcmp uno <4 x float> %1970, zeroinitializer, !dbg !126
  %1973 = or <4 x i1> %1971, %1972, !dbg !127
  %1974 = fptosi <4 x float> %1970 to <4 x i8>, !dbg !128
  %1975 = select <4 x i1> %1973, <4 x i8> %1974, <4 x i8> splat (i8 127), !dbg !129
  %1976 = insertelement <4 x float> poison, float %1933, i64 0, !dbg !119
  %1977 = insertelement <4 x float> %1976, float %1934, i64 1, !dbg !119
  %1978 = insertelement <4 x float> %1977, float %1935, i64 2, !dbg !119
  %1979 = insertelement <4 x float> %1978, float %1936, i64 3, !dbg !119
  %1980 = fcmp ogt <4 x float> %1979, splat (float -1.270000e+02), !dbg !119
  %1981 = fcmp uno <4 x float> %1979, zeroinitializer, !dbg !121
  %1982 = or <4 x i1> %1980, %1981, !dbg !122
  %1983 = select <4 x i1> %1982, <4 x float> %1979, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1984 = fcmp olt <4 x float> %1983, splat (float 1.270000e+02), !dbg !124
  %1985 = fcmp uno <4 x float> %1983, zeroinitializer, !dbg !126
  %1986 = or <4 x i1> %1984, %1985, !dbg !127
  %1987 = fptosi <4 x float> %1983 to <4 x i8>, !dbg !128
  %1988 = select <4 x i1> %1986, <4 x i8> %1987, <4 x i8> splat (i8 127), !dbg !129
  %1989 = add i32 %1116, %1121, !dbg !130
  %1990 = sext i32 %1989 to i64, !dbg !131
  %1991 = getelementptr i8, ptr addrspace(1) %4, i64 %1990, !dbg !131
  %1992 = bitcast <4 x i8> %1949 to i32, !dbg !132
  %1993 = bitcast <4 x i8> %1962 to i32, !dbg !132
  %1994 = bitcast <4 x i8> %1975 to i32, !dbg !132
  %1995 = bitcast <4 x i8> %1988 to i32, !dbg !132
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1992, i32 %1993, i32 %1994, i32 %1995, ptr addrspace(1) %1991, i1 %1130) #5, !dbg !132
  %indvars.iv.next625 = add nuw nsw i64 %indvars.iv624, 4096, !dbg !92
  %1996 = icmp samesign ult i64 %indvars.iv624, 11264, !dbg !92
  br i1 %1996, label %1117, label %1997, !dbg !92

1997:                                             ; preds = %__nv_tanhf.exit287
  ret void, !dbg !133
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 42, column: 39, scope: !6)
!16 = !DILocation(line: 46, column: 40, scope: !6)
!17 = !DILocation(line: 31, column: 40, scope: !6)
!18 = !DILocation(line: 32, column: 31, scope: !6)
!19 = !DILocation(line: 33, column: 29, scope: !6)
!20 = !DILocation(line: 41, column: 22, scope: !6)
!21 = !DILocation(line: 42, column: 45, scope: !6)
!22 = !DILocation(line: 42, column: 34, scope: !6)
!23 = !DILocation(line: 42, column: 63, scope: !6)
!24 = !DILocation(line: 42, column: 71, scope: !6)
!25 = !DILocation(line: 42, column: 53, scope: !6)
!26 = !DILocation(line: 42, column: 121, scope: !6)
!27 = !DILocation(line: 43, column: 23, scope: !6)
!28 = !DILocation(line: 46, column: 46, scope: !6)
!29 = !DILocation(line: 46, column: 34, scope: !6)
!30 = !DILocation(line: 46, column: 82, scope: !6)
!31 = !DILocation(line: 46, column: 64, scope: !6)
!32 = !DILocation(line: 48, column: 23, scope: !6)
!33 = !DILocation(line: 49, column: 23, scope: !6)
!34 = !DILocation(line: 50, column: 24, scope: !6)
!35 = !DILocation(line: 52, column: 24, scope: !6)
!36 = !DILocation(line: 53, column: 23, scope: !6)
!37 = !DILocation(line: 55, column: 24, scope: !6)
!38 = !DILocation(line: 56, column: 31, scope: !6)
!39 = !{i32 21046}
!40 = !DILocation(line: 58, column: 24, scope: !6)
!41 = !DILocation(line: 96, column: 21, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !6, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!44 = !DILocation(line: 65, column: 47, scope: !6)
!45 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !46)
!46 = !DILocation(line: 67, column: 47, scope: !6)
!47 = !DILocation(line: 59, column: 24, scope: !6)
!48 = !DILocation(line: 63, column: 37, scope: !6)
!49 = !DILocation(line: 94, column: 15, scope: !42, inlinedAt: !44)
!50 = !DILocation(line: 96, column: 16, scope: !42, inlinedAt: !44)
!51 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !44)
!52 = !DILocation(line: 66, column: 50, scope: !6)
!53 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !46)
!54 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !46)
!55 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !46)
!56 = !DILocation(line: 68, column: 50, scope: !6)
!57 = !DILocation(line: 94, column: 15, scope: !58, inlinedAt: !59)
!58 = distinct !DILexicalBlockFile(scope: !42, file: !43, discriminator: 0)
!59 = !DILocation(line: 69, column: 40, scope: !6)
!60 = !DILocation(line: 96, column: 21, scope: !58, inlinedAt: !59)
!61 = !DILocation(line: 96, column: 16, scope: !58, inlinedAt: !59)
!62 = !DILocation(line: 97, column: 29, scope: !58, inlinedAt: !59)
!63 = !DILocation(line: 110, column: 29, scope: !42, inlinedAt: !59)
!64 = !DILocation(line: 71, column: 37, scope: !6)
!65 = !DILocation(line: 115, column: 29, scope: !42, inlinedAt: !66)
!66 = !DILocation(line: 70, column: 40, scope: !6)
!67 = !DILocation(line: 102, column: 15, scope: !58, inlinedAt: !66)
!68 = !DILocation(line: 104, column: 21, scope: !58, inlinedAt: !66)
!69 = !DILocation(line: 104, column: 16, scope: !58, inlinedAt: !66)
!70 = !DILocation(line: 105, column: 29, scope: !58, inlinedAt: !66)
!71 = !DILocation(line: 72, column: 37, scope: !6)
!72 = !DILocation(line: 71, column: 25, scope: !6)
!73 = !DILocation(line: 72, column: 25, scope: !6)
!74 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !75)
!75 = !DILocation(line: 107, column: 46, scope: !6)
!76 = !DILocation(line: 108, column: 17, scope: !6)
!77 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !78)
!78 = !DILocation(line: 109, column: 46, scope: !6)
!79 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !80)
!80 = !DILocation(line: 110, column: 46, scope: !6)
!81 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !80)
!82 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !80)
!83 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !80)
!84 = !DILocation(line: 112, column: 24, scope: !6)
!85 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !86)
!86 = !DILocation(line: 115, column: 46, scope: !6)
!87 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !86)
!88 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !86)
!89 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !86)
!90 = !DILocation(line: 118, column: 25, scope: !6)
!91 = !DILocation(line: 130, column: 42, scope: !6)
!92 = !DILocation(line: 73, column: 40, scope: !6)
!93 = !DILocation(line: 74, column: 31, scope: !6)
!94 = !DILocation(line: 75, column: 29, scope: !6)
!95 = !DILocation(line: 83, column: 24, scope: !6)
!96 = !DILocation(line: 84, column: 46, scope: !6)
!97 = !DILocation(line: 84, column: 35, scope: !6)
!98 = !DILocation(line: 84, column: 64, scope: !6)
!99 = !DILocation(line: 84, column: 72, scope: !6)
!100 = !DILocation(line: 84, column: 54, scope: !6)
!101 = !DILocation(line: 84, column: 123, scope: !6)
!102 = !DILocation(line: 85, column: 25, scope: !6)
!103 = !DILocation(line: 88, column: 47, scope: !6)
!104 = !DILocation(line: 88, column: 35, scope: !6)
!105 = !DILocation(line: 88, column: 83, scope: !6)
!106 = !DILocation(line: 88, column: 65, scope: !6)
!107 = !DILocation(line: 90, column: 24, scope: !6)
!108 = !DILocation(line: 91, column: 24, scope: !6)
!109 = !DILocation(line: 92, column: 24, scope: !6)
!110 = !DILocation(line: 94, column: 24, scope: !6)
!111 = !DILocation(line: 95, column: 24, scope: !6)
!112 = !DILocation(line: 97, column: 24, scope: !6)
!113 = !DILocation(line: 98, column: 31, scope: !6)
!114 = !DILocation(line: 100, column: 24, scope: !6)
!115 = !DILocation(line: 101, column: 24, scope: !6)
!116 = !DILocation(line: 105, column: 39, scope: !6)
!117 = !DILocation(line: 121, column: 24, scope: !6)
!118 = !DILocation(line: 122, column: 36, scope: !6)
!119 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !120)
!120 = !DILocation(line: 125, column: 46, scope: !6)
!121 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !120)
!122 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !120)
!123 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !120)
!124 = !DILocation(line: 94, column: 15, scope: !42, inlinedAt: !125)
!125 = !DILocation(line: 127, column: 46, scope: !6)
!126 = !DILocation(line: 96, column: 21, scope: !42, inlinedAt: !125)
!127 = !DILocation(line: 96, column: 16, scope: !42, inlinedAt: !125)
!128 = !DILocation(line: 129, column: 25, scope: !6)
!129 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !125)
!130 = !DILocation(line: 130, column: 36, scope: !6)
!131 = !DILocation(line: 130, column: 29, scope: !6)
!132 = !DILocation(line: 130, column: 54, scope: !6)
!133 = !DILocation(line: 73, column: 4, scope: !6)
