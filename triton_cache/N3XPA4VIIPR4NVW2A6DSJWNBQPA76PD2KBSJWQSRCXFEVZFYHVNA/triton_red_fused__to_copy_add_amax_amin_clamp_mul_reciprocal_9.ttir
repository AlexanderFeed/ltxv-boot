#loc = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)
#loc1 = loc(unknown)
#loc34 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:38)
#loc37 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:38)
#loc85 = loc(callsite(#loc1 at #loc34))
#loc91 = loc(callsite(#loc1 at #loc37))
module {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_reciprocal_9(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)) attributes {noinline = false} {
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c3600_i32 = arith.constant 3600 : i32 loc(#loc1)
    %cst = arith.constant dense<1.270000e+02> : tensor<1x2048xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<0.00787401571> : tensor<1x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<526336> : tensor<1x2048xi32> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<1x2048xi32> loc(#loc1)
    %cst_8 = arith.constant dense<3072> : tensor<1x2048xi32> loc(#loc1)
    %cst_9 = arith.constant dense<0xFF800000> : tensor<1x2048xf32> loc(#loc1)
    %cst_10 = arith.constant dense<0x7F800000> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c3600_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5:2 = scf.for %arg6 = %c0_i32 to %c3072_i32 step %c2048_i32 iter_args(%arg7 = %cst_10, %arg8 = %cst_9) -> (tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %16 = tt.splat %arg6 : i32 -> tensor<1x2048xi32> loc(#loc7)
      %17 = arith.addi %16, %4 : tensor<1x2048xi32> loc(#loc7)
      %18 = arith.cmpi slt, %17, %cst_8 : tensor<1x2048xi32> loc(#loc8)
      %19 = arith.muli %0, %c128_i32 : i32 loc(#loc9)
      %20 = arith.addi %19, %c65536_i32 : i32 loc(#loc10)
      %21 = arith.divsi %17, %cst_7 : tensor<1x2048xi32> loc(#loc11)
      %22 = arith.muli %21, %cst_6 : tensor<1x2048xi32> loc(#loc12)
      %23 = tt.splat %20 : i32 -> tensor<1x2048xi32> loc(#loc74)
      %24 = arith.addi %23, %22 : tensor<1x2048xi32> loc(#loc13)
      %25 = arith.remsi %17, %cst_7 : tensor<1x2048xi32> loc(#loc14)
      %26 = arith.addi %24, %25 : tensor<1x2048xi32> loc(#loc15)
      %27 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc16)
      %28 = tt.addptr %27, %26 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc16)
      %29 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc75)
      %30 = arith.andi %29, %18 : tensor<1x2048xi1> loc(#loc17)
      %31 = tt.load %28, %30, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc18)
      %32 = arith.extf %31 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc19)
      %33 = arith.cmpf olt, %arg7, %32 : tensor<1x2048xf32> loc(#loc76)
      %34 = arith.cmpf une, %arg7, %arg7 : tensor<1x2048xf32> loc(#loc77)
      %35 = arith.ori %33, %34 : tensor<1x2048xi1> loc(#loc78)
      %36 = arith.select %35, %arg7, %32 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc79)
      %37 = arith.select %30, %36, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc25)
      %38 = arith.cmpf ogt, %arg8, %32 : tensor<1x2048xf32> loc(#loc80)
      %39 = arith.cmpf une, %arg8, %arg8 : tensor<1x2048xf32> loc(#loc81)
      %40 = arith.ori %38, %39 : tensor<1x2048xi1> loc(#loc82)
      %41 = arith.select %40, %arg8, %32 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc83)
      %42 = arith.select %30, %41, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc31)
      scf.yield %37, %42 : tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc32)
    } loc(#loc6)
    %6 = "tt.reduce"(%5#0) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc34)), %arg7: f32 loc(callsite(#loc1 at #loc34))):
      %16 = arith.cmpf olt, %arg6, %arg7 : f32 loc(#loc123)
      %17 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc124)
      %18 = arith.ori %16, %17 : i1 loc(#loc125)
      %19 = arith.select %18, %arg6, %arg7 : f32 loc(#loc126)
      tt.reduce.return %19 : f32 loc(#loc84)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc84)
    %7 = tt.expand_dims %6 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc35)
    %8 = "tt.reduce"(%5#1) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc37)), %arg7: f32 loc(callsite(#loc1 at #loc37))):
      %16 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc127)
      %17 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc128)
      %18 = arith.ori %16, %17 : i1 loc(#loc129)
      %19 = arith.select %18, %arg6, %arg7 : f32 loc(#loc130)
      tt.reduce.return %19 : f32 loc(#loc90)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc90)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc38)
    %10 = tt.addptr %arg1, %0 : !tt.ptr<bf16>, i32 loc(#loc39)
    %11 = tt.splat %10 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc39)
    %12 = arith.truncf %7 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc40)
    tt.store %11, %12, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc40)
    %13 = tt.addptr %arg2, %0 : !tt.ptr<bf16>, i32 loc(#loc41)
    %14 = tt.splat %13 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc41)
    %15 = arith.truncf %9 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc42)
    tt.store %14, %15, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc42)
    scf.for %arg6 = %c0_i32 to %c3072_i32 step %c2048_i32  : i32 {
      %16 = tt.splat %arg6 : i32 -> tensor<1x2048xi32> loc(#loc44)
      %17 = arith.addi %16, %4 : tensor<1x2048xi32> loc(#loc44)
      %18 = arith.cmpi slt, %17, %cst_8 : tensor<1x2048xi32> loc(#loc45)
      %19 = arith.muli %0, %c128_i32 : i32 loc(#loc46)
      %20 = arith.addi %19, %c65536_i32 : i32 loc(#loc47)
      %21 = arith.divsi %17, %cst_7 : tensor<1x2048xi32> loc(#loc48)
      %22 = arith.muli %21, %cst_6 : tensor<1x2048xi32> loc(#loc49)
      %23 = tt.splat %20 : i32 -> tensor<1x2048xi32> loc(#loc96)
      %24 = arith.addi %23, %22 : tensor<1x2048xi32> loc(#loc50)
      %25 = arith.remsi %17, %cst_7 : tensor<1x2048xi32> loc(#loc51)
      %26 = arith.addi %24, %25 : tensor<1x2048xi32> loc(#loc52)
      %27 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc53)
      %28 = tt.addptr %27, %26 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc53)
      %29 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc97)
      %30 = arith.andi %29, %18 : tensor<1x2048xi1> loc(#loc54)
      %31 = tt.load %28, %30, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc55)
      %32 = arith.extf %31 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc56)
      %33 = arith.cmpf olt, %7, %cst_5 : tensor<1x1xf32> loc(#loc98)
      %34 = arith.cmpf une, %7, %7 : tensor<1x1xf32> loc(#loc99)
      %35 = arith.ori %33, %34 : tensor<1x1xi1> loc(#loc100)
      %36 = arith.select %35, %7, %cst_5 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc101)
      %37 = arith.subf %cst_5, %36 : tensor<1x1xf32> loc(#loc58)
      %38 = arith.cmpf ogt, %9, %cst_5 : tensor<1x1xf32> loc(#loc102)
      %39 = arith.cmpf une, %9, %9 : tensor<1x1xf32> loc(#loc103)
      %40 = arith.ori %38, %39 : tensor<1x1xi1> loc(#loc104)
      %41 = arith.select %40, %9, %cst_5 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc105)
      %42 = arith.cmpf ogt, %37, %41 : tensor<1x1xf32> loc(#loc106)
      %43 = arith.cmpf une, %37, %37 : tensor<1x1xf32> loc(#loc107)
      %44 = arith.ori %42, %43 : tensor<1x1xi1> loc(#loc108)
      %45 = arith.select %44, %37, %41 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc109)
      %46 = arith.mulf %45, %cst_4 : tensor<1x1xf32> loc(#loc61)
      %47 = arith.cmpf ogt, %46, %cst_1 : tensor<1x1xf32> loc(#loc110)
      %48 = arith.cmpf une, %46, %46 : tensor<1x1xf32> loc(#loc111)
      %49 = arith.ori %47, %48 : tensor<1x1xi1> loc(#loc112)
      %50 = arith.select %49, %46, %cst_1 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc113)
      %51 = arith.divf %cst_2, %50 : tensor<1x1xf32> loc(#loc63)
      %52 = tt.broadcast %51 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc64)
      %53 = arith.mulf %32, %52 : tensor<1x2048xf32> loc(#loc64)
      %54 = tt.extern_elementwise %53 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x2048xf32>) -> tensor<1x2048xf32> loc(#loc65)
      %55 = arith.cmpf ogt, %54, %cst_0 : tensor<1x2048xf32> loc(#loc114)
      %56 = arith.cmpf une, %54, %54 : tensor<1x2048xf32> loc(#loc115)
      %57 = arith.ori %55, %56 : tensor<1x2048xi1> loc(#loc116)
      %58 = arith.select %57, %54, %cst_0 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc117)
      %59 = arith.cmpf olt, %58, %cst : tensor<1x2048xf32> loc(#loc118)
      %60 = arith.cmpf une, %58, %58 : tensor<1x2048xf32> loc(#loc119)
      %61 = arith.ori %59, %60 : tensor<1x2048xi1> loc(#loc120)
      %62 = arith.select %61, %58, %cst : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc121)
      %63 = arith.fptosi %62 : tensor<1x2048xf32> to tensor<1x2048xi8> loc(#loc68)
      %64 = arith.muli %0, %c3072_i32 : i32 loc(#loc69)
      %65 = tt.splat %64 : i32 -> tensor<1x2048xi32> loc(#loc122)
      %66 = arith.addi %17, %65 : tensor<1x2048xi32> loc(#loc70)
      %67 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<1x2048x!tt.ptr<i8>> loc(#loc71)
      %68 = tt.addptr %67, %66 : tensor<1x2048x!tt.ptr<i8>>, tensor<1x2048xi32> loc(#loc71)
      tt.store %68, %63, %30 : tensor<1x2048x!tt.ptr<i8>> loc(#loc72)
    } loc(#loc43)
    tt.return loc(#loc73)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":26:27)
#loc5 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":26:37)
#loc6 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":31:40)
#loc7 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":32:31)
#loc8 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":33:29)
#loc9 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:46)
#loc10 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:42)
#loc11 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:67)
#loc12 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:59)
#loc13 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:51)
#loc14 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:83)
#loc15 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:76)
#loc16 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:34)
#loc17 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:99)
#loc18 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:91)
#loc19 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:152)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc21 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":39:45)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc25 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":40:48)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc27 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":41:45)
#loc28 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc30 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc31 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:48)
#loc32 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:8)
#loc33 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc35 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:41)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc38 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:41)
#loc39 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:25)
#loc40 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:36)
#loc41 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:25)
#loc42 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:36)
#loc43 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:40)
#loc44 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":48:31)
#loc45 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":49:29)
#loc46 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:46)
#loc47 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:42)
#loc48 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:67)
#loc49 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:59)
#loc50 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:51)
#loc51 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:83)
#loc52 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:76)
#loc53 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:34)
#loc54 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:99)
#loc55 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:91)
#loc56 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:153)
#loc57 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":55:44)
#loc58 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":56:16)
#loc59 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":57:45)
#loc60 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":58:45)
#loc61 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":60:24)
#loc62 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":63:46)
#loc63 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":66:25)
#loc64 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":69:23)
#loc65 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":70:36)
#loc66 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":73:46)
#loc67 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":75:46)
#loc68 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":77:25)
#loc69 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:41)
#loc70 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:36)
#loc71 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:29)
#loc72 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:53)
#loc73 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:4)
#loc74 = loc(fused[#loc13, #loc10])
#loc75 = loc(fused[#loc17, #loc3])
#loc76 = loc(callsite(#loc20 at #loc21))
#loc77 = loc(callsite(#loc22 at #loc21))
#loc78 = loc(callsite(#loc23 at #loc21))
#loc79 = loc(callsite(#loc24 at #loc21))
#loc80 = loc(callsite(#loc26 at #loc27))
#loc81 = loc(callsite(#loc28 at #loc27))
#loc82 = loc(callsite(#loc29 at #loc27))
#loc83 = loc(callsite(#loc30 at #loc27))
#loc84 = loc(callsite(#loc33 at #loc34))
#loc86 = loc(callsite(#loc20 at #loc33))
#loc87 = loc(callsite(#loc22 at #loc33))
#loc88 = loc(callsite(#loc23 at #loc33))
#loc89 = loc(callsite(#loc24 at #loc33))
#loc90 = loc(callsite(#loc36 at #loc37))
#loc92 = loc(callsite(#loc26 at #loc36))
#loc93 = loc(callsite(#loc28 at #loc36))
#loc94 = loc(callsite(#loc29 at #loc36))
#loc95 = loc(callsite(#loc30 at #loc36))
#loc96 = loc(fused[#loc50, #loc47])
#loc97 = loc(fused[#loc54, #loc3])
#loc98 = loc(callsite(#loc20 at #loc57))
#loc99 = loc(callsite(#loc22 at #loc57))
#loc100 = loc(callsite(#loc23 at #loc57))
#loc101 = loc(callsite(#loc24 at #loc57))
#loc102 = loc(callsite(#loc26 at #loc59))
#loc103 = loc(callsite(#loc28 at #loc59))
#loc104 = loc(callsite(#loc29 at #loc59))
#loc105 = loc(callsite(#loc30 at #loc59))
#loc106 = loc(callsite(#loc26 at #loc60))
#loc107 = loc(callsite(#loc28 at #loc60))
#loc108 = loc(callsite(#loc29 at #loc60))
#loc109 = loc(callsite(#loc30 at #loc60))
#loc110 = loc(callsite(#loc26 at #loc62))
#loc111 = loc(callsite(#loc28 at #loc62))
#loc112 = loc(callsite(#loc29 at #loc62))
#loc113 = loc(callsite(#loc30 at #loc62))
#loc114 = loc(callsite(#loc26 at #loc66))
#loc115 = loc(callsite(#loc28 at #loc66))
#loc116 = loc(callsite(#loc29 at #loc66))
#loc117 = loc(callsite(#loc30 at #loc66))
#loc118 = loc(callsite(#loc20 at #loc67))
#loc119 = loc(callsite(#loc22 at #loc67))
#loc120 = loc(callsite(#loc23 at #loc67))
#loc121 = loc(callsite(#loc24 at #loc67))
#loc122 = loc(fused[#loc70, #loc69])
#loc123 = loc(callsite(#loc86 at #loc34))
#loc124 = loc(callsite(#loc87 at #loc34))
#loc125 = loc(callsite(#loc88 at #loc34))
#loc126 = loc(callsite(#loc89 at #loc34))
#loc127 = loc(callsite(#loc92 at #loc37))
#loc128 = loc(callsite(#loc93 at #loc37))
#loc129 = loc(callsite(#loc94 at #loc37))
#loc130 = loc(callsite(#loc95 at #loc37))
