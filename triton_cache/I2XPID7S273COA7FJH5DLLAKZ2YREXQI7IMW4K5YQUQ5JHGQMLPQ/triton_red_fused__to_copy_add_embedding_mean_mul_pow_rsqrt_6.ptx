//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 55, 47, 99, 118, 55, 108, 111, 108, 98, 122, 114, 111, 50, 109, 120, 117, 102, 105, 120, 113, 111, 53, 120, 102, 102, 99, 106, 102, 116, 97, 51, 103, 97, 101, 52, 110, 104, 109, 109, 121, 117, 55, 122, 50, 107, 98, 112, 105, 50, 52, 119, 99, 108, 121, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_7,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_9
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b16 	%rs<49>;
	.reg .b32 	%r<98>;
	.reg .f32 	%f<125>;
	.reg .b64 	%rd<57>;
	.loc	1 18 0                          // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:18:0

// %bb.0:
	ld.param.u64 	%rd23, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_0];
$L__tmp0:
	.loc	1 23 28                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:23:28
	mov.u32 	%r1, %ctaid.x;
	ld.param.u64 	%rd24, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_1];
	.loc	1 25 21                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:25:21
	setp.gt.s32 	%p9, %r1, 511;
	setp.lt.s32 	%p8, %r1, 512;
	.loc	1 26 37                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:26:37
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd25, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_3];
	shl.b32 	%r21, %r2, 2;
	ld.param.u64 	%rd26, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_4];
	and.b32  	%r22, %r21, 2044;
	.loc	1 29 30                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:29:30
	mul.wide.s32 	%rd27, %r1, 8;
	add.s64 	%rd11, %rd24, %rd27;
	.loc	1 29 35                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:29:35
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 50                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:50
	shl.b32 	%r23, %r1, 12;
	.loc	1 41 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:41:22
	add.s64 	%rd28, %rd18, 32128;
	.loc	1 42 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:42:22
	setp.lt.s64 	%p10, %rd18, 0;
	.loc	1 43 36                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:43:36
	selp.b64 	%rd29, %rd28, %rd18, %p10;
	.loc	1 44 41                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:44:41
	setp.lt.u64 	%p11, %rd29, 32128;
	.loc	1 31 40                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:31:40
	or.b32  	%r24, %r22, %r23;
	.loc	1 37 38                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:38
	mul.wide.s32 	%rd30, %r24, 2;
	add.s64 	%rd20, %rd23, %rd30;
	mov.b32 	%r20, 0;
	.loc	1 37 55                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:55
	// begin inline asm
	mov.u32 %r9, %r20;
	mov.u32 %r10, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r9, %r10 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:34
	add.s64 	%rd21, %rd25, %rd30;
	.loc	1 38 51                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:51
	// begin inline asm
	mov.u32 %r13, %r20;
	mov.u32 %r14, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r13, %r14 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:35
	add.s64 	%rd22, %rd26, %rd30;
	.loc	1 39 52                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:52
	// begin inline asm
	mov.u32 %r17, %r20;
	mov.u32 %r18, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r17, %r18 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 44 68                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:44:68
	or.pred  	%p12, %p9, %p11;
	@%p12 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_rsqrtf.exit
	.loc	1 0 68                          // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:0:68
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_6];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_5];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_6_param_2];
	cvt.u64.u32 	%rd2, %r22;
	cvt.s64.s32 	%rd3, %r24;
	.loc	1 42 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:42:22
	setp.lt.s64 	%p29, %rd16, 0;
	.loc	1 45 46                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:46
	shl.b64 	%rd44, %rd16, 12;
	add.s64 	%rd45, %rd44, 131596288;
	selp.b64 	%rd46, %rd45, %rd44, %p29;
	shl.b64 	%rd47, %rd46, 1;
	add.s64 	%rd48, %rd7, %rd47;
	.loc	1 26 37                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:26:37
	and.b32  	%r75, %r2, 31;
	.loc	1 44 68                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:44:68
	bar.sync 	0;
	.loc	1 45 34                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:34
	shl.b64 	%rd49, %rd2, 1;
	add.s64 	%rd31, %rd48, %rd49;
	.loc	1 45 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:53
	// begin inline asm
	mov.u32 %r25, %r20;
	mov.u32 %r26, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r25, %r26 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 39 114                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:114
	mov.b32 	{%rs1, %rs2}, %r17;
	cvt.f32.bf16 	%f1, %rs2;
	cvt.f32.bf16 	%f2, %rs1;
	.loc	1 38 113                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:113
	mov.b32 	{%rs3, %rs4}, %r13;
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
	.loc	1 37 117                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:117
	mov.b32 	{%rs5, %rs6}, %r9;
	cvt.f32.bf16 	%f5, %rs6;
	cvt.f32.bf16 	%f6, %rs5;
	.loc	1 45 115                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:115
	mov.b32 	{%rs7, %rs8}, %r25;
	cvt.f32.bf16 	%f7, %rs8;
	cvt.f32.bf16 	%f8, %rs7;
	.loc	1 46 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:46:22
	add.f32 	%f9, %f6, %f8;
	add.f32 	%f10, %f5, %f7;
	.loc	1 47 23                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:47:23
	add.f32 	%f11, %f10, %f4;
	add.f32 	%f12, %f9, %f3;
	.loc	1 48 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:48:24
	add.f32 	%f13, %f12, %f2;
	add.f32 	%f14, %f11, %f1;
	.loc	1 54 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:54:56
	cvt.rn.bf16x2.f32 	%r29, %f14, %f13;
	.loc	1 39 114                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:114
	mov.b32 	{%rs9, %rs10}, %r18;
	cvt.f32.bf16 	%f15, %rs10;
	cvt.f32.bf16 	%f16, %rs9;
	.loc	1 38 113                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:113
	mov.b32 	{%rs11, %rs12}, %r14;
	cvt.f32.bf16 	%f17, %rs11;
	cvt.f32.bf16 	%f18, %rs12;
	.loc	1 37 117                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:117
	mov.b32 	{%rs13, %rs14}, %r10;
	cvt.f32.bf16 	%f19, %rs14;
	cvt.f32.bf16 	%f20, %rs13;
	.loc	1 45 115                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:115
	mov.b32 	{%rs15, %rs16}, %r26;
	cvt.f32.bf16 	%f21, %rs16;
	cvt.f32.bf16 	%f22, %rs15;
	.loc	1 46 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:46:22
	add.f32 	%f23, %f20, %f22;
	add.f32 	%f24, %f19, %f21;
	.loc	1 47 23                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:47:23
	add.f32 	%f25, %f24, %f18;
	add.f32 	%f26, %f23, %f17;
	.loc	1 48 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:48:24
	add.f32 	%f27, %f26, %f16;
	add.f32 	%f28, %f25, %f15;
	.loc	1 54 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:54:56
	cvt.rn.bf16x2.f32 	%r30, %f28, %f27;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd20 + 0 ], { %r29, %r30 };
	// end inline asm
	.loc	1 37 38                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:38
	add.s64 	%rd33, %rd20, 4096;
	.loc	1 37 55                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:55
	// begin inline asm
	mov.u32 %r31, %r20;
	mov.u32 %r32, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r31, %r32 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:34
	add.s64 	%rd34, %rd21, 4096;
	.loc	1 38 51                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:51
	// begin inline asm
	mov.u32 %r35, %r20;
	mov.u32 %r36, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r35, %r36 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:35
	add.s64 	%rd35, %rd22, 4096;
	.loc	1 39 52                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:52
	// begin inline asm
	mov.u32 %r39, %r20;
	mov.u32 %r40, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r39, %r40 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 44 68                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:44:68
	bar.sync 	0;
	.loc	1 45 34                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:34
	add.s64 	%rd36, %rd31, 4096;
	.loc	1 45 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:53
	// begin inline asm
	mov.u32 %r43, %r20;
	mov.u32 %r44, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r43, %r44 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 39 114                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:114
	mov.b32 	{%rs17, %rs18}, %r39;
	cvt.f32.bf16 	%f29, %rs17;
	cvt.f32.bf16 	%f30, %rs18;
	.loc	1 38 113                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:113
	mov.b32 	{%rs19, %rs20}, %r35;
	cvt.f32.bf16 	%f31, %rs20;
	cvt.f32.bf16 	%f32, %rs19;
	.loc	1 37 117                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:117
	mov.b32 	{%rs21, %rs22}, %r31;
	cvt.f32.bf16 	%f33, %rs21;
	cvt.f32.bf16 	%f34, %rs22;
	.loc	1 45 115                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:115
	mov.b32 	{%rs23, %rs24}, %r43;
	cvt.f32.bf16 	%f35, %rs23;
	cvt.f32.bf16 	%f36, %rs24;
	.loc	1 46 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:46:22
	add.f32 	%f37, %f34, %f36;
	add.f32 	%f38, %f33, %f35;
	.loc	1 47 23                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:47:23
	add.f32 	%f39, %f38, %f32;
	add.f32 	%f40, %f37, %f31;
	.loc	1 48 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:48:24
	add.f32 	%f41, %f40, %f30;
	add.f32 	%f42, %f39, %f29;
	.loc	1 50 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:50:24
	mul.f32 	%f43, %f42, %f42;
	mul.f32 	%f44, %f41, %f41;
	.loc	1 52 25                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:52:25
	fma.rn.f32 	%f45, %f14, %f14, %f44;
	fma.rn.f32 	%f46, %f13, %f13, %f43;
	.loc	1 54 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:54:56
	cvt.rn.bf16x2.f32 	%r47, %f41, %f42;
	.loc	1 39 114                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:39:114
	mov.b32 	{%rs25, %rs26}, %r40;
	cvt.f32.bf16 	%f47, %rs25;
	cvt.f32.bf16 	%f48, %rs26;
	.loc	1 38 113                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:38:113
	mov.b32 	{%rs27, %rs28}, %r36;
	cvt.f32.bf16 	%f49, %rs28;
	cvt.f32.bf16 	%f50, %rs27;
	.loc	1 37 117                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:37:117
	mov.b32 	{%rs29, %rs30}, %r32;
	cvt.f32.bf16 	%f51, %rs29;
	cvt.f32.bf16 	%f52, %rs30;
	.loc	1 45 115                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:45:115
	mov.b32 	{%rs31, %rs32}, %r44;
	cvt.f32.bf16 	%f53, %rs31;
	cvt.f32.bf16 	%f54, %rs32;
	.loc	1 46 22                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:46:22
	add.f32 	%f55, %f52, %f54;
	add.f32 	%f56, %f51, %f53;
	.loc	1 47 23                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:47:23
	add.f32 	%f57, %f56, %f50;
	add.f32 	%f58, %f55, %f49;
	.loc	1 48 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:48:24
	add.f32 	%f59, %f58, %f48;
	add.f32 	%f60, %f57, %f47;
	.loc	1 50 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:50:24
	mul.f32 	%f61, %f60, %f60;
	mul.f32 	%f62, %f59, %f59;
	.loc	1 52 25                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:52:25
	fma.rn.f32 	%f63, %f28, %f28, %f62;
	fma.rn.f32 	%f64, %f27, %f27, %f61;
	.loc	1 54 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:54:56
	cvt.rn.bf16x2.f32 	%r48, %f59, %f60;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd33 + 0 ], { %r47, %r48 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f46, %f45;
	add.f32 	%f66, %f64, %f65;
	add.f32 	%f67, %f63, %f66;
	selp.f32 	%f68, %f67, 0f00000000, %p8;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r76, %f68;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f69, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r78, %f70;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f71, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f72;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f73, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r82, %f74;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f75, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r84, %f76;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f77, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p20, %r75, 0;
	shr.u32 	%r86, %r2, 3;
	and.b32  	%r87, %r86, 60;
	mov.u32 	%r88, global_smem;
	add.s32 	%r49, %r88, %r87;
	mov.b32 	%r50, %f78;
	// begin inline asm
	@%p20 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p21, %r2, 16;
	add.s32 	%r52, %r88, %r21;
	// begin inline asm
	@%p21 ld.shared.b32 %r51, [ %r52 + 0 ];
	// end inline asm
	mov.b32 	%f79, %r51;
	shfl.sync.bfly.b32	%r90, %r51, 8, 31, -1;
	mov.b32 	%f80, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f81;
	shfl.sync.bfly.b32	%r92, %r91, 4, 31, -1;
	mov.b32 	%f82, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f83;
	shfl.sync.bfly.b32	%r94, %r93, 2, 31, -1;
	mov.b32 	%f84, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r95, %f85;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f86, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r97, %r2, 15;
	setp.eq.s32 	%p30, %r97, 0;
	and.pred  	%p22, %p21, %p30;
	mov.b32 	%r54, %f87;
	// begin inline asm
	@%p22 st.shared.b32 [ %r52 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f88, [global_smem];
	mov.f32 	%f89, 0f45800000;
$L__tmp2:
	.loc	1 66 25                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:66:25
	div.full.f32 	%f90, %f88, %f89;
	.loc	1 68 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:68:24
	add.f32 	%f91, %f90, 0f358637BD;
	.loc	1 69 32                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:69:32
	rsqrt.approx.ftz.f32 	%f92, %f91;
	.loc	1 62 35                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:35
	add.s64 	%rd38, %rd8, %rd49;
	mov.pred 	%p23, -1;
	.loc	1 62 42                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:42
	// begin inline asm
	mov.u32 %r55, %r20;
	mov.u32 %r56, %r20;
	@%p23 ld.global.L1::evict_last.v2.b32 { %r55, %r56 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 63 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:56
	// begin inline asm
	mov.u32 %r59, %r20;
	mov.u32 %r60, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r59, %r60 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 73 29                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:29
	shl.b64 	%rd50, %rd3, 1;
	add.s64 	%rd40, %rd9, %rd50;
	.loc	1 62 95                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:95
	mov.b32 	{%rs33, %rs34}, %r55;
	cvt.f32.bf16 	%f93, %rs34;
	cvt.f32.bf16 	%f94, %rs33;
	.loc	1 63 118                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:118
	mov.b32 	{%rs35, %rs36}, %r59;
	cvt.f32.bf16 	%f95, %rs35;
	cvt.f32.bf16 	%f96, %rs36;
	.loc	1 70 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:70:24
	mul.f32 	%f97, %f92, %f96;
	mul.f32 	%f98, %f92, %f95;
	.loc	1 72 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:72:24
	mul.f32 	%f99, %f98, %f94;
	mul.f32 	%f100, %f97, %f93;
	.loc	1 73 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:53
	cvt.rn.bf16x2.f32 	%r63, %f100, %f99;
	.loc	1 62 95                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:95
	mov.b32 	{%rs37, %rs38}, %r56;
	cvt.f32.bf16 	%f101, %rs38;
	cvt.f32.bf16 	%f102, %rs37;
	.loc	1 63 118                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:118
	mov.b32 	{%rs39, %rs40}, %r60;
	cvt.f32.bf16 	%f103, %rs39;
	cvt.f32.bf16 	%f104, %rs40;
	.loc	1 70 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:70:24
	mul.f32 	%f105, %f92, %f104;
	mul.f32 	%f106, %f92, %f103;
	.loc	1 72 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:72:24
	mul.f32 	%f107, %f106, %f102;
	mul.f32 	%f108, %f105, %f101;
	.loc	1 73 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:53
	cvt.rn.bf16x2.f32 	%r64, %f108, %f107;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd40 + 0 ], { %r63, %r64 };
	// end inline asm
	.loc	1 62 35                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:35
	add.s64 	%rd41, %rd38, 4096;
	.loc	1 62 42                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:42
	// begin inline asm
	mov.u32 %r65, %r20;
	mov.u32 %r66, %r20;
	@%p23 ld.global.L1::evict_last.v2.b32 { %r65, %r66 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 63 56                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:56
	// begin inline asm
	mov.u32 %r69, %r20;
	mov.u32 %r70, %r20;
	@%p8 ld.global.L1::evict_first.v2.b32 { %r69, %r70 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 73 29                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:29
	add.s64 	%rd43, %rd40, 4096;
	.loc	1 62 95                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:95
	mov.b32 	{%rs41, %rs42}, %r65;
	cvt.f32.bf16 	%f109, %rs42;
	cvt.f32.bf16 	%f110, %rs41;
	.loc	1 63 118                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:118
	mov.b32 	{%rs43, %rs44}, %r69;
	cvt.f32.bf16 	%f111, %rs43;
	cvt.f32.bf16 	%f112, %rs44;
	.loc	1 70 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:70:24
	mul.f32 	%f113, %f92, %f112;
	mul.f32 	%f114, %f92, %f111;
	.loc	1 72 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:72:24
	mul.f32 	%f115, %f114, %f110;
	mul.f32 	%f116, %f113, %f109;
	.loc	1 73 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:53
	cvt.rn.bf16x2.f32 	%r73, %f116, %f115;
	.loc	1 62 95                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:62:95
	mov.b32 	{%rs45, %rs46}, %r66;
	cvt.f32.bf16 	%f117, %rs46;
	cvt.f32.bf16 	%f118, %rs45;
	.loc	1 63 118                        // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:63:118
	mov.b32 	{%rs47, %rs48}, %r70;
	cvt.f32.bf16 	%f119, %rs47;
	cvt.f32.bf16 	%f120, %rs48;
	.loc	1 70 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:70:24
	mul.f32 	%f121, %f92, %f120;
	mul.f32 	%f122, %f92, %f119;
	.loc	1 72 24                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:72:24
	mul.f32 	%f123, %f122, %f118;
	mul.f32 	%f124, %f121, %f117;
	.loc	1 73 53                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:73:53
	cvt.rn.bf16x2.f32 	%r74, %f124, %f123;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd43 + 0 ], { %r73, %r74 };
	// end inline asm
	.loc	1 56 4                          // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:56:4
	ret;
$L__BB0_1:
	.loc	1 44 68                         // cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py:44:68
	mov.u64 	%rd51, assertMessage_0;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, assertFile_0;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, assertFunc_0;
	cvta.global.u64 	%rd56, %rd55;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd52;
	.param .b64 param1;
	st.param.b64 	[param1], %rd54;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd56;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/v7/cv7lolbzro2mxufixqo5xffcjfta3gae4nhmmyu7z2kbpi24wcly.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 55
.b8 108
.b8 111
.b8 108
.b8 98
.b8 122
.b8 114
.b8 111
.b8 50
.b8 109
.b8 120
.b8 117
.b8 102
.b8 105
.b8 120
.b8 113
.b8 111
.b8 53
.b8 120
.b8 102
.b8 102
.b8 99
.b8 106
.b8 102
.b8 116
.b8 97
.b8 51
.b8 103
.b8 97
.b8 101
.b8 52
.b8 110
.b8 104
.b8 109
.b8 109
.b8 121
.b8 117
.b8 55
.b8 122
.b8 50
.b8 107
.b8 98
.b8 112
.b8 105
.b8 50
.b8 52
.b8 119
.b8 99
.b8 108
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 118
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
