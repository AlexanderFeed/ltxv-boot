; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9, i32 %10, ptr addrspace(1) readnone captures(none) %11) local_unnamed_addr !dbg !6 {
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %14 = shl i32 %13, 1, !dbg !10
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %16 = and i32 %15, 1, !dbg !11
  %17 = or disjoint i32 %14, 1, !dbg !12
  %18 = or disjoint i32 %14, %16, !dbg !12
  %19 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !13
  %20 = insertelement <2 x i32> %19, i32 %14, i64 1, !dbg !13
  %21 = icmp slt <2 x i32> %20, splat (i32 512), !dbg !13
  %22 = shufflevector <2 x i1> %21, <2 x i1> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !13
  %23 = icmp slt i32 %18, 512, !dbg !13
  %24 = shl i32 %15, 3, !dbg !14
  %25 = and i32 %24, 4088, !dbg !14
  %26 = or disjoint i32 %25, 4096, !dbg !14
  %27 = shl i32 %15, 4, !dbg !14
  %28 = and i32 %27, 8176, !dbg !14
  %29 = or disjoint i32 %28, 4, !dbg !14
  %30 = or disjoint i32 %28, 8, !dbg !14
  %31 = or disjoint i32 %28, 12, !dbg !14
  %32 = shl i32 %15, 2, !dbg !14
  %33 = and i32 %32, 2044, !dbg !14
  %34 = or disjoint i32 %33, 2048, !dbg !14
  %35 = sext i32 %14 to i64, !dbg !15
  %36 = getelementptr bfloat, ptr addrspace(1) %1, i64 %35, !dbg !15
  %37 = sext i32 %17 to i64, !dbg !15
  %38 = getelementptr bfloat, ptr addrspace(1) %1, i64 %37, !dbg !15
  %39 = extractelement <2 x i1> %21, i64 1, !dbg !16
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %41 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %42 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %43 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %44 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %45 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %46 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %47 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %48 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %49 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %50 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %51 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %52 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %53 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %54 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %55 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %36, i1 %39) #5, !dbg !17
  %56 = bitcast i16 %55 to bfloat, !dbg !17
  %57 = extractelement <2 x i1> %21, i64 0, !dbg !16
  %58 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %59 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %60 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %61 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %62 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %63 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %64 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %65 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %66 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %67 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %68 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %69 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %70 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %71 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %72 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %73 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %38, i1 %57) #5, !dbg !17
  %74 = bitcast i16 %73 to bfloat, !dbg !17
  %75 = getelementptr bfloat, ptr addrspace(1) %2, i64 %35, !dbg !18
  %76 = getelementptr bfloat, ptr addrspace(1) %2, i64 %37, !dbg !18
  %77 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %78 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %79 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %80 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %81 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %82 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %83 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %84 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %85 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %86 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %87 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %88 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %89 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %90 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %91 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %92 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 %39) #5, !dbg !16
  %93 = bitcast i16 %92 to bfloat, !dbg !16
  %94 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %95 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %96 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %97 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %98 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %99 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %100 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %101 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %102 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %103 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %104 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %105 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %106 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %107 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %108 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %109 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %76, i1 %57) #5, !dbg !16
  %110 = bitcast i16 %109 to bfloat, !dbg !16
  %111 = mul i32 %13, 24576, !dbg !19
  %112 = mul i32 %17, 12288, !dbg !19
  %.inv = fcmp oge bfloat %56, 0xR0000, !dbg !20
  %113 = select i1 %.inv, bfloat 0xR0000, bfloat %56, !dbg !20
  %114 = fpext bfloat %113 to float, !dbg !20
  %.inv2 = fcmp oge bfloat %74, 0xR0000, !dbg !20
  %115 = select i1 %.inv2, bfloat 0xR0000, bfloat %74, !dbg !20
  %116 = fpext bfloat %115 to float, !dbg !20
  %117 = fsub float 0.000000e+00, %114, !dbg !24
  %118 = fsub float 0.000000e+00, %116, !dbg !24
  %.inv3 = fcmp ole bfloat %93, 0xR0000, !dbg !25
  %119 = select i1 %.inv3, bfloat 0xR0000, bfloat %93, !dbg !25
  %120 = fpext bfloat %119 to float, !dbg !25
  %.inv4 = fcmp ole bfloat %110, 0xR0000, !dbg !25
  %121 = select i1 %.inv4, bfloat 0xR0000, bfloat %110, !dbg !25
  %122 = fpext bfloat %121 to float, !dbg !25
  %123 = fcmp ogt float %117, %120, !dbg !27
  %124 = fcmp ogt float %118, %122, !dbg !27
  %125 = fcmp uno float %117, 0.000000e+00, !dbg !29
  %126 = fcmp uno float %118, 0.000000e+00, !dbg !29
  %127 = or i1 %125, %123, !dbg !30
  %128 = or i1 %126, %124, !dbg !30
  %129 = select i1 %127, float %117, float %120, !dbg !31
  %130 = select i1 %128, float %118, float %122, !dbg !31
  %131 = fmul float %129, 0x3F80204080000000, !dbg !32
  %132 = fmul float %130, 0x3F80204080000000, !dbg !32
  %133 = fcmp ogt float %131, 0x3EE4F8B580000000, !dbg !33
  %134 = fcmp ogt float %132, 0x3EE4F8B580000000, !dbg !33
  %135 = fcmp uno float %131, 0.000000e+00, !dbg !35
  %136 = fcmp uno float %132, 0.000000e+00, !dbg !35
  %137 = or i1 %133, %135, !dbg !36
  %138 = or i1 %134, %136, !dbg !36
  %139 = select i1 %137, float %131, float 0x3EE4F8B580000000, !dbg !37
  %140 = select i1 %138, float %132, float 0x3EE4F8B580000000, !dbg !37
  %141 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %28
  %142 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %29
  %143 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %30
  %144 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %31
  %145 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %25
  %146 = or disjoint i32 %25, 4
  %147 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %146
  %148 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %26
  %149 = or disjoint i32 %25, 4100
  %150 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %149
  %151 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %33
  %152 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %34
  %153 = zext nneg i32 %33 to i64, !dbg !38
  %154 = zext nneg i32 %28 to i64, !dbg !38
  %155 = zext nneg i32 %26 to i64, !dbg !38
  %156 = zext nneg i32 %25 to i64, !dbg !38
  %157 = getelementptr inbounds nuw i8, ptr addrspace(3) %145, i32 4
  %158 = getelementptr inbounds nuw i8, ptr addrspace(3) %145, i32 8
  %159 = getelementptr inbounds nuw i8, ptr addrspace(3) %147, i32 8
  %160 = getelementptr inbounds nuw i8, ptr addrspace(3) %148, i32 8
  %161 = getelementptr inbounds nuw i8, ptr addrspace(3) %150, i32 8
  %162 = shufflevector <2 x i1> %21, <2 x i1> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison>, !dbg !39
  %163 = shufflevector <2 x i1> %21, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  br label %164, !dbg !38

164:                                              ; preds = %12, %__nv_tanhf.exit1299
  %165 = phi i1 [ true, %12 ], [ false, %__nv_tanhf.exit1299 ]
  %indvars.iv = phi i64 [ 0, %12 ], [ 8192, %__nv_tanhf.exit1299 ]
  %166 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %12 ], [ %1857, %__nv_tanhf.exit1299 ]
  %167 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %12 ], [ %1858, %__nv_tanhf.exit1299 ]
  %168 = phi <16 x float> [ splat (float 0x7FF0000000000000), %12 ], [ %1808, %__nv_tanhf.exit1299 ]
  %169 = phi <16 x float> [ splat (float 0xFFF0000000000000), %12 ], [ %1859, %__nv_tanhf.exit1299 ]
  %170 = phi <8 x float> [ splat (float 0xFFF0000000000000), %12 ], [ %1856, %__nv_tanhf.exit1299 ]
  %171 = phi <16 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %12 ], [ %1853, %__nv_tanhf.exit1299 ]
  %172 = or disjoint i64 %indvars.iv, %156, !dbg !41
  %173 = or disjoint i64 %indvars.iv, %155, !dbg !41
  %174 = or disjoint i64 %indvars.iv, %154, !dbg !41
  %175 = or disjoint i64 %indvars.iv, %153, !dbg !41
  %176 = or disjoint i64 %175, 4096, !dbg !41
  %177 = or disjoint i64 %175, 6144, !dbg !41
  %178 = icmp samesign ult i64 %173, 12288, !dbg !42
  %179 = icmp samesign ult i64 %174, 12288, !dbg !42
  %180 = icmp samesign ult i64 %176, 12288, !dbg !42
  %181 = icmp samesign ult i64 %177, 12288, !dbg !42
  %182 = trunc nuw nsw i64 %174 to i32, !dbg !43
  %183 = add i32 %111, %182, !dbg !43
  %184 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !43
  %185 = or disjoint i32 %29, %184, !dbg !43
  %186 = add i32 %185, %111, !dbg !43
  %187 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !43
  %188 = or disjoint i32 %30, %187, !dbg !43
  %189 = add i32 %188, %111, !dbg !43
  %190 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !43
  %191 = or disjoint i32 %31, %190, !dbg !43
  %192 = add i32 %191, %111, !dbg !43
  %193 = add i32 %112, %182, !dbg !43
  %194 = add i32 %185, %112, !dbg !43
  %195 = add i32 %188, %112, !dbg !43
  %196 = add i32 %191, %112, !dbg !43
  %197 = trunc nuw nsw i64 %175 to i32, !dbg !43
  %198 = add i32 %111, %197, !dbg !43
  %199 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !43
  %200 = or disjoint i32 %34, %199, !dbg !43
  %201 = add i32 %200, %111, !dbg !43
  %202 = trunc nuw nsw i64 %176 to i32, !dbg !43
  %203 = add i32 %111, %202, !dbg !43
  %204 = trunc nuw nsw i64 %177 to i32, !dbg !43
  %205 = add i32 %111, %204, !dbg !43
  %206 = add i32 %112, %197, !dbg !43
  %207 = add i32 %200, %112, !dbg !43
  %208 = add i32 %112, %202, !dbg !43
  %209 = add i32 %112, %204, !dbg !43
  %210 = sext i32 %183 to i64, !dbg !44
  %211 = getelementptr i32, ptr addrspace(1) %0, i64 %210, !dbg !44
  %212 = sext i32 %186 to i64, !dbg !44
  %213 = getelementptr i32, ptr addrspace(1) %0, i64 %212, !dbg !44
  %214 = sext i32 %189 to i64, !dbg !44
  %215 = getelementptr i32, ptr addrspace(1) %0, i64 %214, !dbg !44
  %216 = sext i32 %192 to i64, !dbg !44
  %217 = getelementptr i32, ptr addrspace(1) %0, i64 %216, !dbg !44
  %218 = sext i32 %193 to i64, !dbg !44
  %219 = getelementptr i32, ptr addrspace(1) %0, i64 %218, !dbg !44
  %220 = sext i32 %194 to i64, !dbg !44
  %221 = getelementptr i32, ptr addrspace(1) %0, i64 %220, !dbg !44
  %222 = sext i32 %195 to i64, !dbg !44
  %223 = getelementptr i32, ptr addrspace(1) %0, i64 %222, !dbg !44
  %224 = sext i32 %196 to i64, !dbg !44
  %225 = getelementptr i32, ptr addrspace(1) %0, i64 %224, !dbg !44
  %226 = and i1 %39, %178, !dbg !45
  %227 = and i1 %57, %178, !dbg !45
  %228 = and i1 %39, %179, !dbg !45
  %229 = and i1 %39, %180, !dbg !45
  %230 = and i1 %39, %181, !dbg !45
  %231 = and i1 %57, %180, !dbg !45
  %232 = and i1 %57, %181, !dbg !45
  %233 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %211, i1 %228) #5, !dbg !46
  %234 = extractvalue { i32, i32, i32, i32 } %233, 0, !dbg !46
  %235 = extractvalue { i32, i32, i32, i32 } %233, 1, !dbg !46
  %236 = extractvalue { i32, i32, i32, i32 } %233, 2, !dbg !46
  %237 = extractvalue { i32, i32, i32, i32 } %233, 3, !dbg !46
  %238 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %213, i1 %228) #5, !dbg !46
  %239 = extractvalue { i32, i32, i32, i32 } %238, 0, !dbg !46
  %240 = extractvalue { i32, i32, i32, i32 } %238, 1, !dbg !46
  %241 = extractvalue { i32, i32, i32, i32 } %238, 2, !dbg !46
  %242 = extractvalue { i32, i32, i32, i32 } %238, 3, !dbg !46
  %243 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %215, i1 %228) #5, !dbg !46
  %244 = extractvalue { i32, i32, i32, i32 } %243, 0, !dbg !46
  %245 = extractvalue { i32, i32, i32, i32 } %243, 1, !dbg !46
  %246 = extractvalue { i32, i32, i32, i32 } %243, 2, !dbg !46
  %247 = extractvalue { i32, i32, i32, i32 } %243, 3, !dbg !46
  %248 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %217, i1 %228) #5, !dbg !46
  %249 = extractvalue { i32, i32, i32, i32 } %248, 0, !dbg !46
  %250 = extractvalue { i32, i32, i32, i32 } %248, 1, !dbg !46
  %251 = extractvalue { i32, i32, i32, i32 } %248, 2, !dbg !46
  %252 = extractvalue { i32, i32, i32, i32 } %248, 3, !dbg !46
  %253 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %219, i1 %228) #5, !dbg !46
  %254 = extractvalue { i32, i32, i32, i32 } %253, 0, !dbg !46
  %255 = extractvalue { i32, i32, i32, i32 } %253, 1, !dbg !46
  %256 = extractvalue { i32, i32, i32, i32 } %253, 2, !dbg !46
  %257 = extractvalue { i32, i32, i32, i32 } %253, 3, !dbg !46
  %258 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %221, i1 %228) #5, !dbg !46
  %259 = extractvalue { i32, i32, i32, i32 } %258, 0, !dbg !46
  %260 = extractvalue { i32, i32, i32, i32 } %258, 1, !dbg !46
  %261 = extractvalue { i32, i32, i32, i32 } %258, 2, !dbg !46
  %262 = extractvalue { i32, i32, i32, i32 } %258, 3, !dbg !46
  %263 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %223, i1 %228) #5, !dbg !46
  %264 = extractvalue { i32, i32, i32, i32 } %263, 0, !dbg !46
  %265 = extractvalue { i32, i32, i32, i32 } %263, 1, !dbg !46
  %266 = extractvalue { i32, i32, i32, i32 } %263, 2, !dbg !46
  %267 = extractvalue { i32, i32, i32, i32 } %263, 3, !dbg !46
  %268 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %225, i1 %228) #5, !dbg !46
  %269 = extractvalue { i32, i32, i32, i32 } %268, 0, !dbg !46
  %270 = extractvalue { i32, i32, i32, i32 } %268, 1, !dbg !46
  %271 = extractvalue { i32, i32, i32, i32 } %268, 2, !dbg !46
  %272 = extractvalue { i32, i32, i32, i32 } %268, 3, !dbg !46
  %273 = getelementptr bfloat, ptr addrspace(1) %3, i64 %172, !dbg !47
  %274 = getelementptr bfloat, ptr addrspace(1) %3, i64 %173, !dbg !47
  %275 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %273, i1 true) #5, !dbg !48
  %276 = extractvalue { i32, i32, i32, i32 } %275, 0, !dbg !48
  %277 = bitcast i32 %276 to <2 x bfloat>, !dbg !48
  %278 = extractvalue { i32, i32, i32, i32 } %275, 1, !dbg !48
  %279 = bitcast i32 %278 to <2 x bfloat>, !dbg !48
  %280 = extractvalue { i32, i32, i32, i32 } %275, 2, !dbg !48
  %281 = bitcast i32 %280 to <2 x bfloat>, !dbg !48
  %282 = extractvalue { i32, i32, i32, i32 } %275, 3, !dbg !48
  %283 = bitcast i32 %282 to <2 x bfloat>, !dbg !48
  %284 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %274, i1 %178) #5, !dbg !48
  %285 = extractvalue { i32, i32, i32, i32 } %284, 0, !dbg !48
  %286 = bitcast i32 %285 to <2 x bfloat>, !dbg !48
  %287 = extractvalue { i32, i32, i32, i32 } %284, 1, !dbg !48
  %288 = bitcast i32 %287 to <2 x bfloat>, !dbg !48
  %289 = extractvalue { i32, i32, i32, i32 } %284, 2, !dbg !48
  %290 = bitcast i32 %289 to <2 x bfloat>, !dbg !48
  %291 = extractvalue { i32, i32, i32, i32 } %284, 3, !dbg !48
  %292 = bitcast i32 %291 to <2 x bfloat>, !dbg !48
  %293 = getelementptr bfloat, ptr addrspace(1) %4, i64 %172, !dbg !49
  %294 = getelementptr bfloat, ptr addrspace(1) %4, i64 %173, !dbg !49
  %295 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %293, i1 true) #5, !dbg !50
  %296 = extractvalue { i32, i32, i32, i32 } %295, 0, !dbg !50
  %297 = bitcast i32 %296 to <2 x bfloat>, !dbg !50
  %298 = extractvalue { i32, i32, i32, i32 } %295, 1, !dbg !50
  %299 = bitcast i32 %298 to <2 x bfloat>, !dbg !50
  %300 = extractvalue { i32, i32, i32, i32 } %295, 2, !dbg !50
  %301 = bitcast i32 %300 to <2 x bfloat>, !dbg !50
  %302 = extractvalue { i32, i32, i32, i32 } %295, 3, !dbg !50
  %303 = bitcast i32 %302 to <2 x bfloat>, !dbg !50
  %304 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %294, i1 %178) #5, !dbg !50
  %305 = extractvalue { i32, i32, i32, i32 } %304, 0, !dbg !50
  %306 = bitcast i32 %305 to <2 x bfloat>, !dbg !50
  %307 = extractvalue { i32, i32, i32, i32 } %304, 1, !dbg !50
  %308 = bitcast i32 %307 to <2 x bfloat>, !dbg !50
  %309 = extractvalue { i32, i32, i32, i32 } %304, 2, !dbg !50
  %310 = bitcast i32 %309 to <2 x bfloat>, !dbg !50
  %311 = extractvalue { i32, i32, i32, i32 } %304, 3, !dbg !50
  %312 = bitcast i32 %311 to <2 x bfloat>, !dbg !50
  %313 = sitofp i32 %234 to float, !dbg !51
  %314 = sitofp i32 %235 to float, !dbg !51
  %315 = sitofp i32 %236 to float, !dbg !51
  %316 = sitofp i32 %237 to float, !dbg !51
  %317 = sitofp i32 %239 to float, !dbg !51
  %318 = sitofp i32 %240 to float, !dbg !51
  %319 = sitofp i32 %241 to float, !dbg !51
  %320 = sitofp i32 %242 to float, !dbg !51
  %321 = sitofp i32 %244 to float, !dbg !51
  %322 = sitofp i32 %245 to float, !dbg !51
  %323 = sitofp i32 %246 to float, !dbg !51
  %324 = sitofp i32 %247 to float, !dbg !51
  %325 = sitofp i32 %249 to float, !dbg !51
  %326 = sitofp i32 %250 to float, !dbg !51
  %327 = sitofp i32 %251 to float, !dbg !51
  %328 = sitofp i32 %252 to float, !dbg !51
  %329 = sitofp i32 %254 to float, !dbg !51
  %330 = sitofp i32 %255 to float, !dbg !51
  %331 = sitofp i32 %256 to float, !dbg !51
  %332 = sitofp i32 %257 to float, !dbg !51
  %333 = sitofp i32 %259 to float, !dbg !51
  %334 = sitofp i32 %260 to float, !dbg !51
  %335 = sitofp i32 %261 to float, !dbg !51
  %336 = sitofp i32 %262 to float, !dbg !51
  %337 = sitofp i32 %264 to float, !dbg !51
  %338 = sitofp i32 %265 to float, !dbg !51
  %339 = sitofp i32 %266 to float, !dbg !51
  %340 = sitofp i32 %267 to float, !dbg !51
  %341 = sitofp i32 %269 to float, !dbg !51
  %342 = sitofp i32 %270 to float, !dbg !51
  %343 = sitofp i32 %271 to float, !dbg !51
  %344 = sitofp i32 %272 to float, !dbg !51
  %345 = fmul float %139, %313, !dbg !52
  %346 = fmul float %139, %314, !dbg !52
  %347 = fmul float %139, %315, !dbg !52
  %348 = fmul float %139, %316, !dbg !52
  %349 = fmul float %139, %317, !dbg !52
  %350 = fmul float %139, %318, !dbg !52
  %351 = fmul float %139, %319, !dbg !52
  %352 = fmul float %139, %320, !dbg !52
  %353 = fmul float %139, %321, !dbg !52
  %354 = fmul float %139, %322, !dbg !52
  %355 = fmul float %139, %323, !dbg !52
  %356 = fmul float %139, %324, !dbg !52
  %357 = fmul float %139, %325, !dbg !52
  %358 = fmul float %139, %326, !dbg !52
  %359 = fmul float %139, %327, !dbg !52
  %360 = fmul float %139, %328, !dbg !52
  %361 = fmul float %140, %329, !dbg !52
  %362 = fmul float %140, %330, !dbg !52
  %363 = fmul float %140, %331, !dbg !52
  %364 = fmul float %140, %332, !dbg !52
  %365 = fmul float %140, %333, !dbg !52
  %366 = fmul float %140, %334, !dbg !52
  %367 = fmul float %140, %335, !dbg !52
  %368 = fmul float %140, %336, !dbg !52
  %369 = fmul float %140, %337, !dbg !52
  %370 = fmul float %140, %338, !dbg !52
  %371 = fmul float %140, %339, !dbg !52
  %372 = fmul float %140, %340, !dbg !52
  %373 = fmul float %140, %341, !dbg !52
  %374 = fmul float %140, %342, !dbg !52
  %375 = fmul float %140, %343, !dbg !52
  %376 = fmul float %140, %344, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %377 = bitcast float %345 to i32, !dbg !52
  %378 = bitcast float %346 to i32, !dbg !52
  %379 = bitcast float %347 to i32, !dbg !52
  %380 = bitcast float %348 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %141, i32 %377, i32 %378, i32 %379, i32 %380, i1 true) #5, !dbg !52
  %381 = bitcast float %349 to i32, !dbg !52
  %382 = bitcast float %350 to i32, !dbg !52
  %383 = bitcast float %351 to i32, !dbg !52
  %384 = bitcast float %352 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %142, i32 %381, i32 %382, i32 %383, i32 %384, i1 true) #5, !dbg !52
  %385 = bitcast float %353 to i32, !dbg !52
  %386 = bitcast float %354 to i32, !dbg !52
  %387 = bitcast float %355 to i32, !dbg !52
  %388 = bitcast float %356 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %143, i32 %385, i32 %386, i32 %387, i32 %388, i1 true) #5, !dbg !52
  %389 = bitcast float %357 to i32, !dbg !52
  %390 = bitcast float %358 to i32, !dbg !52
  %391 = bitcast float %359 to i32, !dbg !52
  %392 = bitcast float %360 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %144, i32 %389, i32 %390, i32 %391, i32 %392, i1 true) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %393 = load float, ptr addrspace(3) %145, align 16, !dbg !52
  %394 = load float, ptr addrspace(3) %157, align 4, !dbg !52
  %395 = bitcast float %361 to i32, !dbg !52
  %396 = bitcast float %362 to i32, !dbg !52
  %397 = bitcast float %363 to i32, !dbg !52
  %398 = bitcast float %364 to i32, !dbg !52
  %399 = bitcast float %365 to i32, !dbg !52
  %400 = bitcast float %366 to i32, !dbg !52
  %401 = bitcast float %367 to i32, !dbg !52
  %402 = bitcast float %368 to i32, !dbg !52
  %403 = bitcast float %369 to i32, !dbg !52
  %404 = bitcast float %370 to i32, !dbg !52
  %405 = bitcast float %371 to i32, !dbg !52
  %406 = bitcast float %372 to i32, !dbg !52
  %407 = bitcast float %373 to i32, !dbg !52
  %408 = bitcast float %374 to i32, !dbg !52
  %409 = bitcast float %375 to i32, !dbg !52
  %410 = bitcast float %376 to i32, !dbg !52
  %411 = fpext <2 x bfloat> %277 to <2 x float>, !dbg !53
  %412 = shufflevector <2 x float> %411, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>, !dbg !53
  %413 = fpext <2 x bfloat> %297 to <2 x float>, !dbg !54
  %414 = shufflevector <2 x float> %413, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>, !dbg !54
  %415 = shufflevector <2 x bfloat> %292, <2 x bfloat> %290, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 1, i32 0>, !dbg !53
  %416 = shufflevector <2 x bfloat> %288, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %417 = shufflevector <16 x bfloat> %415, <16 x bfloat> %416, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %418 = shufflevector <2 x bfloat> %288, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %419 = shufflevector <16 x bfloat> %417, <16 x bfloat> %418, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %420 = shufflevector <2 x bfloat> %286, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %421 = shufflevector <16 x bfloat> %419, <16 x bfloat> %420, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %422 = shufflevector <2 x bfloat> %286, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %423 = shufflevector <16 x bfloat> %421, <16 x bfloat> %422, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %424 = shufflevector <2 x bfloat> %283, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %425 = shufflevector <16 x bfloat> %423, <16 x bfloat> %424, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %426 = shufflevector <2 x bfloat> %283, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %427 = shufflevector <16 x bfloat> %425, <16 x bfloat> %426, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %428 = shufflevector <2 x bfloat> %281, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %429 = shufflevector <16 x bfloat> %427, <16 x bfloat> %428, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %430 = shufflevector <2 x bfloat> %281, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %431 = shufflevector <16 x bfloat> %429, <16 x bfloat> %430, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 14, i32 15>, !dbg !53
  %432 = shufflevector <2 x bfloat> %279, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %433 = shufflevector <16 x bfloat> %431, <16 x bfloat> %432, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 14, i32 15>, !dbg !53
  %434 = shufflevector <2 x bfloat> %279, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !53
  %435 = shufflevector <16 x bfloat> %433, <16 x bfloat> %434, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 14, i32 15>, !dbg !53
  %436 = fpext <16 x bfloat> %435 to <16 x float>, !dbg !53
  %437 = shufflevector <2 x bfloat> %312, <2 x bfloat> %310, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 1, i32 0>, !dbg !54
  %438 = shufflevector <2 x bfloat> %308, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %439 = shufflevector <16 x bfloat> %437, <16 x bfloat> %438, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %440 = shufflevector <2 x bfloat> %308, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %441 = shufflevector <16 x bfloat> %439, <16 x bfloat> %440, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %442 = shufflevector <2 x bfloat> %306, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %443 = shufflevector <16 x bfloat> %441, <16 x bfloat> %442, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %444 = shufflevector <2 x bfloat> %306, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %445 = shufflevector <16 x bfloat> %443, <16 x bfloat> %444, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %446 = shufflevector <2 x bfloat> %303, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %447 = shufflevector <16 x bfloat> %445, <16 x bfloat> %446, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %448 = shufflevector <2 x bfloat> %303, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %449 = shufflevector <16 x bfloat> %447, <16 x bfloat> %448, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %450 = shufflevector <2 x bfloat> %301, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %451 = shufflevector <16 x bfloat> %449, <16 x bfloat> %450, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %452 = shufflevector <2 x bfloat> %301, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %453 = shufflevector <16 x bfloat> %451, <16 x bfloat> %452, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 14, i32 15>, !dbg !54
  %454 = shufflevector <2 x bfloat> %299, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %455 = shufflevector <16 x bfloat> %453, <16 x bfloat> %454, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 14, i32 15>, !dbg !54
  %456 = shufflevector <2 x bfloat> %299, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !54
  %457 = shufflevector <16 x bfloat> %455, <16 x bfloat> %456, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 14, i32 15>, !dbg !54
  %458 = fpext <16 x bfloat> %457 to <16 x float>, !dbg !54
  %459 = load <2 x float>, ptr addrspace(3) %161, align 8, !dbg !52
  %460 = shufflevector <2 x float> %459, <2 x float> poison, <2 x i32> <i32 1, i32 0>, !dbg !52
  %461 = load <4 x float>, ptr addrspace(3) %158, align 8, !dbg !52
  %462 = shufflevector <4 x float> %461, <4 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !52
  %463 = shufflevector <16 x float> %436, <16 x float> poison, <4 x i32> <i32 10, i32 11, i32 12, i32 13>, !dbg !55
  %464 = fmul <4 x float> %462, %463, !dbg !55
  %465 = shufflevector <16 x float> %458, <16 x float> poison, <4 x i32> <i32 10, i32 11, i32 12, i32 13>, !dbg !56
  %466 = fadd <4 x float> %464, %465, !dbg !56
  %467 = load <2 x float>, ptr addrspace(3) %159, align 8, !dbg !52
  %468 = shufflevector <2 x float> %467, <2 x float> poison, <2 x i32> <i32 1, i32 0>, !dbg !52
  %469 = load <2 x float>, ptr addrspace(3) %148, align 16, !dbg !52
  %470 = shufflevector <2 x float> %469, <2 x float> poison, <2 x i32> <i32 1, i32 0>, !dbg !52
  %471 = load <4 x float>, ptr addrspace(3) %160, align 8, !dbg !52
  %472 = shufflevector <4 x float> %471, <4 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !52
  %473 = shufflevector <2 x bfloat> %290, <2 x bfloat> %288, <4 x i32> <i32 1, i32 0, i32 3, i32 2>, !dbg !53
  %474 = fpext <4 x bfloat> %473 to <4 x float>, !dbg !53
  %475 = shufflevector <2 x bfloat> %310, <2 x bfloat> %308, <4 x i32> <i32 1, i32 0, i32 3, i32 2>, !dbg !54
  %476 = fpext <4 x bfloat> %475 to <4 x float>, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %141, i32 %395, i32 %396, i32 %397, i32 %398, i1 true) #5, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %142, i32 %399, i32 %400, i32 %401, i32 %402, i1 true) #5, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %143, i32 %403, i32 %404, i32 %405, i32 %406, i1 true) #5, !dbg !52
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %144, i32 %407, i32 %408, i32 %409, i32 %410, i1 true) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %477 = load <2 x float>, ptr addrspace(3) %158, align 8, !dbg !52
  %478 = shufflevector <2 x float> %477, <2 x float> poison, <2 x i32> <i32 1, i32 0>, !dbg !52
  %479 = load <4 x float>, ptr addrspace(3) %147, align 16, !dbg !52
  %480 = shufflevector <4 x float> %479, <4 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !52
  %481 = load <8 x float>, ptr addrspace(3) %148, align 16, !dbg !52
  %482 = shufflevector <8 x float> %481, <8 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>, !dbg !52
  %483 = shufflevector <4 x float> %472, <4 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %484 = shufflevector <2 x float> %470, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %485 = shufflevector <8 x float> %483, <8 x float> %484, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !55
  %486 = shufflevector <2 x float> %468, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %487 = shufflevector <8 x float> %485, <8 x float> %486, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !55
  %488 = shufflevector <16 x float> %436, <16 x float> poison, <4 x i32> <i32 6, i32 7, i32 8, i32 9>, !dbg !55
  %489 = shufflevector <4 x float> %474, <4 x float> %488, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !55
  %490 = fmul <8 x float> %487, %489, !dbg !55
  %491 = shufflevector <8 x float> %482, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %492 = shufflevector <4 x float> %480, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %493 = shufflevector <16 x float> %491, <16 x float> %492, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %494 = shufflevector <2 x float> %478, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %495 = shufflevector <16 x float> %493, <16 x float> %494, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 17, i32 poison, i32 poison>, !dbg !55
  %496 = shufflevector <2 x float> %460, <2 x float> poison, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %497 = shufflevector <16 x float> %495, <16 x float> %496, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 17>, !dbg !55
  %498 = fmul <16 x float> %497, %436, !dbg !55
  %499 = shufflevector <16 x float> %458, <16 x float> poison, <4 x i32> <i32 6, i32 7, i32 8, i32 9>, !dbg !56
  %500 = shufflevector <4 x float> %476, <4 x float> %499, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !56
  %501 = fadd <8 x float> %490, %500, !dbg !56
  %502 = load <2 x float>, ptr addrspace(3) %145, align 16, !dbg !52
  %503 = shufflevector <2 x float> %502, <2 x float> poison, <4 x i32> <i32 0, i32 poison, i32 1, i32 poison>, !dbg !55
  %504 = insertelement <4 x float> %503, float %393, i64 1, !dbg !55
  %505 = insertelement <4 x float> %504, float %394, i64 3, !dbg !55
  %506 = fmul <4 x float> %505, %412, !dbg !55
  %507 = fadd <4 x float> %506, %414, !dbg !56
  %508 = fadd <16 x float> %498, %458, !dbg !56
  %509 = fmul <4 x float> %466, splat (float 5.000000e-01), !dbg !57
  %510 = fmul <8 x float> %501, splat (float 5.000000e-01), !dbg !57
  %511 = fmul <4 x float> %507, splat (float 5.000000e-01), !dbg !57
  %512 = fmul <16 x float> %508, splat (float 5.000000e-01), !dbg !57
  %513 = extractelement <4 x float> %507, i64 1, !dbg !58
  %514 = fmul float %513, %513, !dbg !59
  %515 = extractelement <4 x float> %507, i64 3, !dbg !58
  %516 = fmul float %515, %515, !dbg !59
  %517 = extractelement <4 x float> %466, i64 3, !dbg !58
  %518 = fmul float %517, %517, !dbg !59
  %519 = extractelement <4 x float> %466, i64 2, !dbg !58
  %520 = fmul float %519, %519, !dbg !59
  %521 = extractelement <4 x float> %466, i64 1, !dbg !58
  %522 = fmul float %521, %521, !dbg !59
  %523 = extractelement <4 x float> %466, i64 0, !dbg !58
  %524 = fmul float %523, %523, !dbg !59
  %525 = extractelement <8 x float> %501, i64 7, !dbg !58
  %526 = fmul float %525, %525, !dbg !59
  %527 = extractelement <8 x float> %501, i64 6, !dbg !58
  %528 = fmul float %527, %527, !dbg !59
  %529 = extractelement <8 x float> %501, i64 5, !dbg !58
  %530 = fmul float %529, %529, !dbg !59
  %531 = extractelement <8 x float> %501, i64 4, !dbg !58
  %532 = fmul float %531, %531, !dbg !59
  %533 = extractelement <8 x float> %501, i64 3, !dbg !58
  %534 = fmul float %533, %533, !dbg !59
  %535 = extractelement <8 x float> %501, i64 2, !dbg !58
  %536 = fmul float %535, %535, !dbg !59
  %537 = extractelement <8 x float> %501, i64 1, !dbg !58
  %538 = fmul float %537, %537, !dbg !59
  %539 = extractelement <8 x float> %501, i64 0, !dbg !58
  %540 = fmul float %539, %539, !dbg !59
  %541 = extractelement <16 x float> %508, i64 15, !dbg !58
  %542 = fmul float %541, %541, !dbg !59
  %543 = extractelement <16 x float> %508, i64 14, !dbg !58
  %544 = fmul float %543, %543, !dbg !59
  %545 = extractelement <4 x float> %507, i64 0, !dbg !58
  %546 = fmul float %545, %545, !dbg !59
  %547 = extractelement <4 x float> %507, i64 2, !dbg !58
  %548 = fmul float %547, %547, !dbg !59
  %549 = extractelement <16 x float> %508, i64 13, !dbg !58
  %550 = fmul float %549, %549, !dbg !59
  %551 = extractelement <16 x float> %508, i64 12, !dbg !58
  %552 = fmul float %551, %551, !dbg !59
  %553 = extractelement <16 x float> %508, i64 11, !dbg !58
  %554 = fmul float %553, %553, !dbg !59
  %555 = extractelement <16 x float> %508, i64 10, !dbg !58
  %556 = fmul float %555, %555, !dbg !59
  %557 = extractelement <16 x float> %508, i64 9, !dbg !58
  %558 = fmul float %557, %557, !dbg !59
  %559 = extractelement <16 x float> %508, i64 8, !dbg !58
  %560 = fmul float %559, %559, !dbg !59
  %561 = extractelement <16 x float> %508, i64 7, !dbg !58
  %562 = fmul float %561, %561, !dbg !59
  %563 = extractelement <16 x float> %508, i64 6, !dbg !58
  %564 = fmul float %563, %563, !dbg !59
  %565 = extractelement <16 x float> %508, i64 5, !dbg !58
  %566 = fmul float %565, %565, !dbg !59
  %567 = extractelement <16 x float> %508, i64 4, !dbg !58
  %568 = fmul float %567, %567, !dbg !59
  %569 = extractelement <16 x float> %508, i64 3, !dbg !58
  %570 = fmul float %569, %569, !dbg !59
  %571 = extractelement <16 x float> %508, i64 2, !dbg !58
  %572 = fmul float %571, %571, !dbg !59
  %573 = extractelement <16 x float> %508, i64 1, !dbg !58
  %574 = fmul float %573, %573, !dbg !59
  %575 = extractelement <16 x float> %508, i64 0, !dbg !58
  %576 = fmul float %575, %575, !dbg !59
  %577 = fmul float %513, %514, !dbg !60
  %578 = fmul float %515, %516, !dbg !60
  %579 = fmul float %517, %518, !dbg !60
  %580 = fmul float %519, %520, !dbg !60
  %581 = fmul float %521, %522, !dbg !60
  %582 = fmul float %523, %524, !dbg !60
  %583 = fmul float %525, %526, !dbg !60
  %584 = fmul float %527, %528, !dbg !60
  %585 = fmul float %529, %530, !dbg !60
  %586 = fmul float %531, %532, !dbg !60
  %587 = fmul float %533, %534, !dbg !60
  %588 = fmul float %535, %536, !dbg !60
  %589 = fmul float %537, %538, !dbg !60
  %590 = fmul float %539, %540, !dbg !60
  %591 = fmul float %541, %542, !dbg !60
  %592 = fmul float %543, %544, !dbg !60
  %593 = fmul float %545, %546, !dbg !60
  %594 = fmul float %547, %548, !dbg !60
  %595 = fmul float %549, %550, !dbg !60
  %596 = fmul float %551, %552, !dbg !60
  %597 = fmul float %553, %554, !dbg !60
  %598 = fmul float %555, %556, !dbg !60
  %599 = fmul float %557, %558, !dbg !60
  %600 = fmul float %559, %560, !dbg !60
  %601 = fmul float %561, %562, !dbg !60
  %602 = fmul float %563, %564, !dbg !60
  %603 = fmul float %565, %566, !dbg !60
  %604 = fmul float %567, %568, !dbg !60
  %605 = fmul float %569, %570, !dbg !60
  %606 = fmul float %571, %572, !dbg !60
  %607 = fmul float %573, %574, !dbg !60
  %608 = fmul float %575, %576, !dbg !60
  %609 = fmul float %577, 0x3FA6E4E260000000, !dbg !61
  %610 = fmul float %578, 0x3FA6E4E260000000, !dbg !61
  %611 = fmul float %579, 0x3FA6E4E260000000, !dbg !61
  %612 = fmul float %580, 0x3FA6E4E260000000, !dbg !61
  %613 = fmul float %581, 0x3FA6E4E260000000, !dbg !61
  %614 = fmul float %582, 0x3FA6E4E260000000, !dbg !61
  %615 = fmul float %583, 0x3FA6E4E260000000, !dbg !61
  %616 = fmul float %584, 0x3FA6E4E260000000, !dbg !61
  %617 = fmul float %585, 0x3FA6E4E260000000, !dbg !61
  %618 = fmul float %586, 0x3FA6E4E260000000, !dbg !61
  %619 = fmul float %587, 0x3FA6E4E260000000, !dbg !61
  %620 = fmul float %588, 0x3FA6E4E260000000, !dbg !61
  %621 = fmul float %589, 0x3FA6E4E260000000, !dbg !61
  %622 = fmul float %590, 0x3FA6E4E260000000, !dbg !61
  %623 = fmul float %591, 0x3FA6E4E260000000, !dbg !61
  %624 = fmul float %592, 0x3FA6E4E260000000, !dbg !61
  %625 = fmul float %593, 0x3FA6E4E260000000, !dbg !61
  %626 = fmul float %594, 0x3FA6E4E260000000, !dbg !61
  %627 = fmul float %595, 0x3FA6E4E260000000, !dbg !61
  %628 = fmul float %596, 0x3FA6E4E260000000, !dbg !61
  %629 = fmul float %597, 0x3FA6E4E260000000, !dbg !61
  %630 = fmul float %598, 0x3FA6E4E260000000, !dbg !61
  %631 = fmul float %599, 0x3FA6E4E260000000, !dbg !61
  %632 = fmul float %600, 0x3FA6E4E260000000, !dbg !61
  %633 = fmul float %601, 0x3FA6E4E260000000, !dbg !61
  %634 = fmul float %602, 0x3FA6E4E260000000, !dbg !61
  %635 = fmul float %603, 0x3FA6E4E260000000, !dbg !61
  %636 = fmul float %604, 0x3FA6E4E260000000, !dbg !61
  %637 = fmul float %605, 0x3FA6E4E260000000, !dbg !61
  %638 = fmul float %606, 0x3FA6E4E260000000, !dbg !61
  %639 = fmul float %607, 0x3FA6E4E260000000, !dbg !61
  %640 = fmul float %608, 0x3FA6E4E260000000, !dbg !61
  %641 = fadd float %513, %609, !dbg !58
  %642 = fadd float %515, %610, !dbg !58
  %643 = fadd float %517, %611, !dbg !58
  %644 = fadd float %519, %612, !dbg !58
  %645 = fadd float %521, %613, !dbg !58
  %646 = fadd float %523, %614, !dbg !58
  %647 = fadd float %525, %615, !dbg !58
  %648 = fadd float %527, %616, !dbg !58
  %649 = fadd float %529, %617, !dbg !58
  %650 = fadd float %531, %618, !dbg !58
  %651 = fadd float %533, %619, !dbg !58
  %652 = fadd float %535, %620, !dbg !58
  %653 = fadd float %537, %621, !dbg !58
  %654 = fadd float %539, %622, !dbg !58
  %655 = fadd float %541, %623, !dbg !58
  %656 = fadd float %543, %624, !dbg !58
  %657 = fadd float %545, %625, !dbg !58
  %658 = fadd float %547, %626, !dbg !58
  %659 = fadd float %549, %627, !dbg !58
  %660 = fadd float %551, %628, !dbg !58
  %661 = fadd float %553, %629, !dbg !58
  %662 = fadd float %555, %630, !dbg !58
  %663 = fadd float %557, %631, !dbg !58
  %664 = fadd float %559, %632, !dbg !58
  %665 = fadd float %561, %633, !dbg !58
  %666 = fadd float %563, %634, !dbg !58
  %667 = fadd float %565, %635, !dbg !58
  %668 = fadd float %567, %636, !dbg !58
  %669 = fadd float %569, %637, !dbg !58
  %670 = fadd float %571, %638, !dbg !58
  %671 = fadd float %573, %639, !dbg !58
  %672 = fadd float %575, %640, !dbg !58
  %673 = fmul float %641, 0x3FE9884540000000, !dbg !62
  %674 = fmul float %642, 0x3FE9884540000000, !dbg !62
  %675 = fmul float %643, 0x3FE9884540000000, !dbg !62
  %676 = fmul float %644, 0x3FE9884540000000, !dbg !62
  %677 = fmul float %645, 0x3FE9884540000000, !dbg !62
  %678 = fmul float %646, 0x3FE9884540000000, !dbg !62
  %679 = fmul float %647, 0x3FE9884540000000, !dbg !62
  %680 = fmul float %648, 0x3FE9884540000000, !dbg !62
  %681 = fmul float %649, 0x3FE9884540000000, !dbg !62
  %682 = fmul float %650, 0x3FE9884540000000, !dbg !62
  %683 = fmul float %651, 0x3FE9884540000000, !dbg !62
  %684 = fmul float %652, 0x3FE9884540000000, !dbg !62
  %685 = fmul float %653, 0x3FE9884540000000, !dbg !62
  %686 = fmul float %654, 0x3FE9884540000000, !dbg !62
  %687 = fmul float %655, 0x3FE9884540000000, !dbg !62
  %688 = fmul float %656, 0x3FE9884540000000, !dbg !62
  %689 = fmul float %657, 0x3FE9884540000000, !dbg !62
  %690 = fmul float %658, 0x3FE9884540000000, !dbg !62
  %691 = fmul float %659, 0x3FE9884540000000, !dbg !62
  %692 = fmul float %660, 0x3FE9884540000000, !dbg !62
  %693 = fmul float %661, 0x3FE9884540000000, !dbg !62
  %694 = fmul float %662, 0x3FE9884540000000, !dbg !62
  %695 = fmul float %663, 0x3FE9884540000000, !dbg !62
  %696 = fmul float %664, 0x3FE9884540000000, !dbg !62
  %697 = fmul float %665, 0x3FE9884540000000, !dbg !62
  %698 = fmul float %666, 0x3FE9884540000000, !dbg !62
  %699 = fmul float %667, 0x3FE9884540000000, !dbg !62
  %700 = fmul float %668, 0x3FE9884540000000, !dbg !62
  %701 = fmul float %669, 0x3FE9884540000000, !dbg !62
  %702 = fmul float %670, 0x3FE9884540000000, !dbg !62
  %703 = fmul float %671, 0x3FE9884540000000, !dbg !62
  %704 = fmul float %672, 0x3FE9884540000000, !dbg !62
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i692 = icmp eq i32 %705, 0, !dbg !63
  %706 = tail call float @llvm.nvvm.fabs.ftz.f(float %673) #5, !dbg !63
  %707 = tail call float @llvm.nvvm.fabs.f(float %673) #5, !dbg !63
  %.01.i693 = select i1 %.not.i692, float %707, float %706, !dbg !63
  %708 = fcmp ult float %.01.i693, 0x3FE3333340000000, !dbg !63
  br i1 %708, label %__internal_fmad.exit3.i699, label %__internal_fmad.exit1.i694, !dbg !63

__internal_fmad.exit1.i694:                       ; preds = %164
  %709 = fmul float %.01.i693, 0x4007154760000000, !dbg !63
  %710 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %709) #5, !dbg !63
  %711 = fadd float %710, 1.000000e+00, !dbg !63
  %712 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %711) #6, !dbg !63, !srcloc !64
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i695 = icmp eq i32 %713, 0, !dbg !63
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %712, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %715 = tail call float @llvm.nvvm.fma.rn.f(float %712, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i696 = select i1 %.not6.i695, float %715, float %714, !dbg !63
  %716 = fcmp oge float %.01.i693, 0x4022059680000000, !dbg !63
  %s.0.i697 = select i1 %716, float 1.000000e+00, float %.03.i696, !dbg !63
  %717 = bitcast float %s.0.i697 to i32, !dbg !63
  %718 = bitcast float %673 to i32, !dbg !63
  %719 = and i32 %718, -2147483648, !dbg !63
  %720 = or i32 %719, %717, !dbg !63
  %721 = bitcast i32 %720 to float, !dbg !63
  br label %__nv_tanhf.exit710, !dbg !63

__internal_fmad.exit3.i699:                       ; preds = %164
  %722 = fmul float %673, %673, !dbg !63
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i700 = icmp eq i32 %723, 0, !dbg !63
  %724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %722, float 0xBFAAC795C0000000) #5, !dbg !63
  %725 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %722, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i701 = select i1 %.not1.i700, float %725, float %724, !dbg !63
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i702 = icmp eq i32 %726, 0, !dbg !63
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i701, float %722, float 0x3FC10B2820000000) #5, !dbg !63
  %728 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i701, float %722, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i703 = select i1 %.not2.i702, float %728, float %727, !dbg !63
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i704 = icmp eq i32 %729, 0, !dbg !63
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i703, float %722, float 0xBFD5553DA0000000) #5, !dbg !63
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i703, float %722, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i705 = select i1 %.not3.i704, float %731, float %730, !dbg !63
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i706 = icmp eq i32 %732, 0, !dbg !63
  %733 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i705, float %722, float 0.000000e+00) #5, !dbg !63
  %734 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i705, float %722, float 0.000000e+00) #5, !dbg !63
  %.04.i707 = select i1 %.not4.i706, float %734, float %733, !dbg !63
  %735 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i708 = icmp eq i32 %735, 0, !dbg !63
  %736 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i707, float %673, float %673) #5, !dbg !63
  %737 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i707, float %673, float %673) #5, !dbg !63
  %.02.i709 = select i1 %.not5.i708, float %737, float %736, !dbg !63
  br label %__nv_tanhf.exit710, !dbg !63

__nv_tanhf.exit710:                               ; preds = %__internal_fmad.exit1.i694, %__internal_fmad.exit3.i699
  %s.1.i698 = phi float [ %721, %__internal_fmad.exit1.i694 ], [ %.02.i709, %__internal_fmad.exit3.i699 ], !dbg !63
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i711 = icmp eq i32 %738, 0, !dbg !63
  %739 = tail call float @llvm.nvvm.fabs.ftz.f(float %674) #5, !dbg !63
  %740 = tail call float @llvm.nvvm.fabs.f(float %674) #5, !dbg !63
  %.01.i712 = select i1 %.not.i711, float %740, float %739, !dbg !63
  %741 = fcmp ult float %.01.i712, 0x3FE3333340000000, !dbg !63
  br i1 %741, label %__internal_fmad.exit3.i718, label %__internal_fmad.exit1.i713, !dbg !63

__internal_fmad.exit1.i713:                       ; preds = %__nv_tanhf.exit710
  %742 = fmul float %.01.i712, 0x4007154760000000, !dbg !63
  %743 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %742) #5, !dbg !63
  %744 = fadd float %743, 1.000000e+00, !dbg !63
  %745 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %744) #6, !dbg !63, !srcloc !64
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i714 = icmp eq i32 %746, 0, !dbg !63
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %745, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %745, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i715 = select i1 %.not6.i714, float %748, float %747, !dbg !63
  %749 = fcmp oge float %.01.i712, 0x4022059680000000, !dbg !63
  %s.0.i716 = select i1 %749, float 1.000000e+00, float %.03.i715, !dbg !63
  %750 = bitcast float %s.0.i716 to i32, !dbg !63
  %751 = bitcast float %674 to i32, !dbg !63
  %752 = and i32 %751, -2147483648, !dbg !63
  %753 = or i32 %752, %750, !dbg !63
  %754 = bitcast i32 %753 to float, !dbg !63
  br label %__nv_tanhf.exit729, !dbg !63

__internal_fmad.exit3.i718:                       ; preds = %__nv_tanhf.exit710
  %755 = fmul float %674, %674, !dbg !63
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i719 = icmp eq i32 %756, 0, !dbg !63
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %755, float 0xBFAAC795C0000000) #5, !dbg !63
  %758 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %755, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i720 = select i1 %.not1.i719, float %758, float %757, !dbg !63
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i721 = icmp eq i32 %759, 0, !dbg !63
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i720, float %755, float 0x3FC10B2820000000) #5, !dbg !63
  %761 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i720, float %755, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i722 = select i1 %.not2.i721, float %761, float %760, !dbg !63
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i723 = icmp eq i32 %762, 0, !dbg !63
  %763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i722, float %755, float 0xBFD5553DA0000000) #5, !dbg !63
  %764 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i722, float %755, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i724 = select i1 %.not3.i723, float %764, float %763, !dbg !63
  %765 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i725 = icmp eq i32 %765, 0, !dbg !63
  %766 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i724, float %755, float 0.000000e+00) #5, !dbg !63
  %767 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i724, float %755, float 0.000000e+00) #5, !dbg !63
  %.04.i726 = select i1 %.not4.i725, float %767, float %766, !dbg !63
  %768 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i727 = icmp eq i32 %768, 0, !dbg !63
  %769 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i726, float %674, float %674) #5, !dbg !63
  %770 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i726, float %674, float %674) #5, !dbg !63
  %.02.i728 = select i1 %.not5.i727, float %770, float %769, !dbg !63
  br label %__nv_tanhf.exit729, !dbg !63

__nv_tanhf.exit729:                               ; preds = %__internal_fmad.exit1.i713, %__internal_fmad.exit3.i718
  %s.1.i717 = phi float [ %754, %__internal_fmad.exit1.i713 ], [ %.02.i728, %__internal_fmad.exit3.i718 ], !dbg !63
  %771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i730 = icmp eq i32 %771, 0, !dbg !63
  %772 = tail call float @llvm.nvvm.fabs.ftz.f(float %675) #5, !dbg !63
  %773 = tail call float @llvm.nvvm.fabs.f(float %675) #5, !dbg !63
  %.01.i731 = select i1 %.not.i730, float %773, float %772, !dbg !63
  %774 = fcmp ult float %.01.i731, 0x3FE3333340000000, !dbg !63
  br i1 %774, label %__internal_fmad.exit3.i737, label %__internal_fmad.exit1.i732, !dbg !63

__internal_fmad.exit1.i732:                       ; preds = %__nv_tanhf.exit729
  %775 = fmul float %.01.i731, 0x4007154760000000, !dbg !63
  %776 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %775) #5, !dbg !63
  %777 = fadd float %776, 1.000000e+00, !dbg !63
  %778 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %777) #6, !dbg !63, !srcloc !64
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i733 = icmp eq i32 %779, 0, !dbg !63
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %778, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %778, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i734 = select i1 %.not6.i733, float %781, float %780, !dbg !63
  %782 = fcmp oge float %.01.i731, 0x4022059680000000, !dbg !63
  %s.0.i735 = select i1 %782, float 1.000000e+00, float %.03.i734, !dbg !63
  %783 = bitcast float %s.0.i735 to i32, !dbg !63
  %784 = bitcast float %675 to i32, !dbg !63
  %785 = and i32 %784, -2147483648, !dbg !63
  %786 = or i32 %785, %783, !dbg !63
  %787 = bitcast i32 %786 to float, !dbg !63
  br label %__nv_tanhf.exit748, !dbg !63

__internal_fmad.exit3.i737:                       ; preds = %__nv_tanhf.exit729
  %788 = fmul float %675, %675, !dbg !63
  %789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i738 = icmp eq i32 %789, 0, !dbg !63
  %790 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %788, float 0xBFAAC795C0000000) #5, !dbg !63
  %791 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %788, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i739 = select i1 %.not1.i738, float %791, float %790, !dbg !63
  %792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i740 = icmp eq i32 %792, 0, !dbg !63
  %793 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i739, float %788, float 0x3FC10B2820000000) #5, !dbg !63
  %794 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i739, float %788, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i741 = select i1 %.not2.i740, float %794, float %793, !dbg !63
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i742 = icmp eq i32 %795, 0, !dbg !63
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i741, float %788, float 0xBFD5553DA0000000) #5, !dbg !63
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i741, float %788, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i743 = select i1 %.not3.i742, float %797, float %796, !dbg !63
  %798 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i744 = icmp eq i32 %798, 0, !dbg !63
  %799 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i743, float %788, float 0.000000e+00) #5, !dbg !63
  %800 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i743, float %788, float 0.000000e+00) #5, !dbg !63
  %.04.i745 = select i1 %.not4.i744, float %800, float %799, !dbg !63
  %801 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i746 = icmp eq i32 %801, 0, !dbg !63
  %802 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i745, float %675, float %675) #5, !dbg !63
  %803 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i745, float %675, float %675) #5, !dbg !63
  %.02.i747 = select i1 %.not5.i746, float %803, float %802, !dbg !63
  br label %__nv_tanhf.exit748, !dbg !63

__nv_tanhf.exit748:                               ; preds = %__internal_fmad.exit1.i732, %__internal_fmad.exit3.i737
  %s.1.i736 = phi float [ %787, %__internal_fmad.exit1.i732 ], [ %.02.i747, %__internal_fmad.exit3.i737 ], !dbg !63
  %804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i749 = icmp eq i32 %804, 0, !dbg !63
  %805 = tail call float @llvm.nvvm.fabs.ftz.f(float %676) #5, !dbg !63
  %806 = tail call float @llvm.nvvm.fabs.f(float %676) #5, !dbg !63
  %.01.i750 = select i1 %.not.i749, float %806, float %805, !dbg !63
  %807 = fcmp ult float %.01.i750, 0x3FE3333340000000, !dbg !63
  br i1 %807, label %__internal_fmad.exit3.i756, label %__internal_fmad.exit1.i751, !dbg !63

__internal_fmad.exit1.i751:                       ; preds = %__nv_tanhf.exit748
  %808 = fmul float %.01.i750, 0x4007154760000000, !dbg !63
  %809 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %808) #5, !dbg !63
  %810 = fadd float %809, 1.000000e+00, !dbg !63
  %811 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %810) #6, !dbg !63, !srcloc !64
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i752 = icmp eq i32 %812, 0, !dbg !63
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %811, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %814 = tail call float @llvm.nvvm.fma.rn.f(float %811, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i753 = select i1 %.not6.i752, float %814, float %813, !dbg !63
  %815 = fcmp oge float %.01.i750, 0x4022059680000000, !dbg !63
  %s.0.i754 = select i1 %815, float 1.000000e+00, float %.03.i753, !dbg !63
  %816 = bitcast float %s.0.i754 to i32, !dbg !63
  %817 = bitcast float %676 to i32, !dbg !63
  %818 = and i32 %817, -2147483648, !dbg !63
  %819 = or i32 %818, %816, !dbg !63
  %820 = bitcast i32 %819 to float, !dbg !63
  br label %__nv_tanhf.exit767, !dbg !63

__internal_fmad.exit3.i756:                       ; preds = %__nv_tanhf.exit748
  %821 = fmul float %676, %676, !dbg !63
  %822 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i757 = icmp eq i32 %822, 0, !dbg !63
  %823 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %821, float 0xBFAAC795C0000000) #5, !dbg !63
  %824 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %821, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i758 = select i1 %.not1.i757, float %824, float %823, !dbg !63
  %825 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i759 = icmp eq i32 %825, 0, !dbg !63
  %826 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i758, float %821, float 0x3FC10B2820000000) #5, !dbg !63
  %827 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i758, float %821, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i760 = select i1 %.not2.i759, float %827, float %826, !dbg !63
  %828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i761 = icmp eq i32 %828, 0, !dbg !63
  %829 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i760, float %821, float 0xBFD5553DA0000000) #5, !dbg !63
  %830 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i760, float %821, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i762 = select i1 %.not3.i761, float %830, float %829, !dbg !63
  %831 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i763 = icmp eq i32 %831, 0, !dbg !63
  %832 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i762, float %821, float 0.000000e+00) #5, !dbg !63
  %833 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i762, float %821, float 0.000000e+00) #5, !dbg !63
  %.04.i764 = select i1 %.not4.i763, float %833, float %832, !dbg !63
  %834 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i765 = icmp eq i32 %834, 0, !dbg !63
  %835 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i764, float %676, float %676) #5, !dbg !63
  %836 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i764, float %676, float %676) #5, !dbg !63
  %.02.i766 = select i1 %.not5.i765, float %836, float %835, !dbg !63
  br label %__nv_tanhf.exit767, !dbg !63

__nv_tanhf.exit767:                               ; preds = %__internal_fmad.exit1.i751, %__internal_fmad.exit3.i756
  %s.1.i755 = phi float [ %820, %__internal_fmad.exit1.i751 ], [ %.02.i766, %__internal_fmad.exit3.i756 ], !dbg !63
  %837 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i768 = icmp eq i32 %837, 0, !dbg !63
  %838 = tail call float @llvm.nvvm.fabs.ftz.f(float %677) #5, !dbg !63
  %839 = tail call float @llvm.nvvm.fabs.f(float %677) #5, !dbg !63
  %.01.i769 = select i1 %.not.i768, float %839, float %838, !dbg !63
  %840 = fcmp ult float %.01.i769, 0x3FE3333340000000, !dbg !63
  br i1 %840, label %__internal_fmad.exit3.i775, label %__internal_fmad.exit1.i770, !dbg !63

__internal_fmad.exit1.i770:                       ; preds = %__nv_tanhf.exit767
  %841 = fmul float %.01.i769, 0x4007154760000000, !dbg !63
  %842 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %841) #5, !dbg !63
  %843 = fadd float %842, 1.000000e+00, !dbg !63
  %844 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %843) #6, !dbg !63, !srcloc !64
  %845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i771 = icmp eq i32 %845, 0, !dbg !63
  %846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %844, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %847 = tail call float @llvm.nvvm.fma.rn.f(float %844, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i772 = select i1 %.not6.i771, float %847, float %846, !dbg !63
  %848 = fcmp oge float %.01.i769, 0x4022059680000000, !dbg !63
  %s.0.i773 = select i1 %848, float 1.000000e+00, float %.03.i772, !dbg !63
  %849 = bitcast float %s.0.i773 to i32, !dbg !63
  %850 = bitcast float %677 to i32, !dbg !63
  %851 = and i32 %850, -2147483648, !dbg !63
  %852 = or i32 %851, %849, !dbg !63
  %853 = bitcast i32 %852 to float, !dbg !63
  br label %__nv_tanhf.exit786, !dbg !63

__internal_fmad.exit3.i775:                       ; preds = %__nv_tanhf.exit767
  %854 = fmul float %677, %677, !dbg !63
  %855 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i776 = icmp eq i32 %855, 0, !dbg !63
  %856 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %854, float 0xBFAAC795C0000000) #5, !dbg !63
  %857 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %854, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i777 = select i1 %.not1.i776, float %857, float %856, !dbg !63
  %858 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i778 = icmp eq i32 %858, 0, !dbg !63
  %859 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i777, float %854, float 0x3FC10B2820000000) #5, !dbg !63
  %860 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i777, float %854, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i779 = select i1 %.not2.i778, float %860, float %859, !dbg !63
  %861 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i780 = icmp eq i32 %861, 0, !dbg !63
  %862 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i779, float %854, float 0xBFD5553DA0000000) #5, !dbg !63
  %863 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i779, float %854, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i781 = select i1 %.not3.i780, float %863, float %862, !dbg !63
  %864 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i782 = icmp eq i32 %864, 0, !dbg !63
  %865 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i781, float %854, float 0.000000e+00) #5, !dbg !63
  %866 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i781, float %854, float 0.000000e+00) #5, !dbg !63
  %.04.i783 = select i1 %.not4.i782, float %866, float %865, !dbg !63
  %867 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i784 = icmp eq i32 %867, 0, !dbg !63
  %868 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i783, float %677, float %677) #5, !dbg !63
  %869 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i783, float %677, float %677) #5, !dbg !63
  %.02.i785 = select i1 %.not5.i784, float %869, float %868, !dbg !63
  br label %__nv_tanhf.exit786, !dbg !63

__nv_tanhf.exit786:                               ; preds = %__internal_fmad.exit1.i770, %__internal_fmad.exit3.i775
  %s.1.i774 = phi float [ %853, %__internal_fmad.exit1.i770 ], [ %.02.i785, %__internal_fmad.exit3.i775 ], !dbg !63
  %870 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i787 = icmp eq i32 %870, 0, !dbg !63
  %871 = tail call float @llvm.nvvm.fabs.ftz.f(float %678) #5, !dbg !63
  %872 = tail call float @llvm.nvvm.fabs.f(float %678) #5, !dbg !63
  %.01.i788 = select i1 %.not.i787, float %872, float %871, !dbg !63
  %873 = fcmp ult float %.01.i788, 0x3FE3333340000000, !dbg !63
  br i1 %873, label %__internal_fmad.exit3.i794, label %__internal_fmad.exit1.i789, !dbg !63

__internal_fmad.exit1.i789:                       ; preds = %__nv_tanhf.exit786
  %874 = fmul float %.01.i788, 0x4007154760000000, !dbg !63
  %875 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %874) #5, !dbg !63
  %876 = fadd float %875, 1.000000e+00, !dbg !63
  %877 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %876) #6, !dbg !63, !srcloc !64
  %878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i790 = icmp eq i32 %878, 0, !dbg !63
  %879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %877, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %880 = tail call float @llvm.nvvm.fma.rn.f(float %877, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i791 = select i1 %.not6.i790, float %880, float %879, !dbg !63
  %881 = fcmp oge float %.01.i788, 0x4022059680000000, !dbg !63
  %s.0.i792 = select i1 %881, float 1.000000e+00, float %.03.i791, !dbg !63
  %882 = bitcast float %s.0.i792 to i32, !dbg !63
  %883 = bitcast float %678 to i32, !dbg !63
  %884 = and i32 %883, -2147483648, !dbg !63
  %885 = or i32 %884, %882, !dbg !63
  %886 = bitcast i32 %885 to float, !dbg !63
  br label %__nv_tanhf.exit805, !dbg !63

__internal_fmad.exit3.i794:                       ; preds = %__nv_tanhf.exit786
  %887 = fmul float %678, %678, !dbg !63
  %888 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i795 = icmp eq i32 %888, 0, !dbg !63
  %889 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %887, float 0xBFAAC795C0000000) #5, !dbg !63
  %890 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %887, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i796 = select i1 %.not1.i795, float %890, float %889, !dbg !63
  %891 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i797 = icmp eq i32 %891, 0, !dbg !63
  %892 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i796, float %887, float 0x3FC10B2820000000) #5, !dbg !63
  %893 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i796, float %887, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i798 = select i1 %.not2.i797, float %893, float %892, !dbg !63
  %894 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i799 = icmp eq i32 %894, 0, !dbg !63
  %895 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i798, float %887, float 0xBFD5553DA0000000) #5, !dbg !63
  %896 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i798, float %887, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i800 = select i1 %.not3.i799, float %896, float %895, !dbg !63
  %897 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i801 = icmp eq i32 %897, 0, !dbg !63
  %898 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i800, float %887, float 0.000000e+00) #5, !dbg !63
  %899 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i800, float %887, float 0.000000e+00) #5, !dbg !63
  %.04.i802 = select i1 %.not4.i801, float %899, float %898, !dbg !63
  %900 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i803 = icmp eq i32 %900, 0, !dbg !63
  %901 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i802, float %678, float %678) #5, !dbg !63
  %902 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i802, float %678, float %678) #5, !dbg !63
  %.02.i804 = select i1 %.not5.i803, float %902, float %901, !dbg !63
  br label %__nv_tanhf.exit805, !dbg !63

__nv_tanhf.exit805:                               ; preds = %__internal_fmad.exit1.i789, %__internal_fmad.exit3.i794
  %s.1.i793 = phi float [ %886, %__internal_fmad.exit1.i789 ], [ %.02.i804, %__internal_fmad.exit3.i794 ], !dbg !63
  %903 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i806 = icmp eq i32 %903, 0, !dbg !63
  %904 = tail call float @llvm.nvvm.fabs.ftz.f(float %679) #5, !dbg !63
  %905 = tail call float @llvm.nvvm.fabs.f(float %679) #5, !dbg !63
  %.01.i807 = select i1 %.not.i806, float %905, float %904, !dbg !63
  %906 = fcmp ult float %.01.i807, 0x3FE3333340000000, !dbg !63
  br i1 %906, label %__internal_fmad.exit3.i813, label %__internal_fmad.exit1.i808, !dbg !63

__internal_fmad.exit1.i808:                       ; preds = %__nv_tanhf.exit805
  %907 = fmul float %.01.i807, 0x4007154760000000, !dbg !63
  %908 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %907) #5, !dbg !63
  %909 = fadd float %908, 1.000000e+00, !dbg !63
  %910 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %909) #6, !dbg !63, !srcloc !64
  %911 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i809 = icmp eq i32 %911, 0, !dbg !63
  %912 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %910, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %913 = tail call float @llvm.nvvm.fma.rn.f(float %910, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i810 = select i1 %.not6.i809, float %913, float %912, !dbg !63
  %914 = fcmp oge float %.01.i807, 0x4022059680000000, !dbg !63
  %s.0.i811 = select i1 %914, float 1.000000e+00, float %.03.i810, !dbg !63
  %915 = bitcast float %s.0.i811 to i32, !dbg !63
  %916 = bitcast float %679 to i32, !dbg !63
  %917 = and i32 %916, -2147483648, !dbg !63
  %918 = or i32 %917, %915, !dbg !63
  %919 = bitcast i32 %918 to float, !dbg !63
  br label %__nv_tanhf.exit824, !dbg !63

__internal_fmad.exit3.i813:                       ; preds = %__nv_tanhf.exit805
  %920 = fmul float %679, %679, !dbg !63
  %921 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i814 = icmp eq i32 %921, 0, !dbg !63
  %922 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %920, float 0xBFAAC795C0000000) #5, !dbg !63
  %923 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %920, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i815 = select i1 %.not1.i814, float %923, float %922, !dbg !63
  %924 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i816 = icmp eq i32 %924, 0, !dbg !63
  %925 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i815, float %920, float 0x3FC10B2820000000) #5, !dbg !63
  %926 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i815, float %920, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i817 = select i1 %.not2.i816, float %926, float %925, !dbg !63
  %927 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i818 = icmp eq i32 %927, 0, !dbg !63
  %928 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i817, float %920, float 0xBFD5553DA0000000) #5, !dbg !63
  %929 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i817, float %920, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i819 = select i1 %.not3.i818, float %929, float %928, !dbg !63
  %930 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i820 = icmp eq i32 %930, 0, !dbg !63
  %931 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i819, float %920, float 0.000000e+00) #5, !dbg !63
  %932 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i819, float %920, float 0.000000e+00) #5, !dbg !63
  %.04.i821 = select i1 %.not4.i820, float %932, float %931, !dbg !63
  %933 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i822 = icmp eq i32 %933, 0, !dbg !63
  %934 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i821, float %679, float %679) #5, !dbg !63
  %935 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i821, float %679, float %679) #5, !dbg !63
  %.02.i823 = select i1 %.not5.i822, float %935, float %934, !dbg !63
  br label %__nv_tanhf.exit824, !dbg !63

__nv_tanhf.exit824:                               ; preds = %__internal_fmad.exit1.i808, %__internal_fmad.exit3.i813
  %s.1.i812 = phi float [ %919, %__internal_fmad.exit1.i808 ], [ %.02.i823, %__internal_fmad.exit3.i813 ], !dbg !63
  %936 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i825 = icmp eq i32 %936, 0, !dbg !63
  %937 = tail call float @llvm.nvvm.fabs.ftz.f(float %680) #5, !dbg !63
  %938 = tail call float @llvm.nvvm.fabs.f(float %680) #5, !dbg !63
  %.01.i826 = select i1 %.not.i825, float %938, float %937, !dbg !63
  %939 = fcmp ult float %.01.i826, 0x3FE3333340000000, !dbg !63
  br i1 %939, label %__internal_fmad.exit3.i832, label %__internal_fmad.exit1.i827, !dbg !63

__internal_fmad.exit1.i827:                       ; preds = %__nv_tanhf.exit824
  %940 = fmul float %.01.i826, 0x4007154760000000, !dbg !63
  %941 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %940) #5, !dbg !63
  %942 = fadd float %941, 1.000000e+00, !dbg !63
  %943 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %942) #6, !dbg !63, !srcloc !64
  %944 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i828 = icmp eq i32 %944, 0, !dbg !63
  %945 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %943, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %946 = tail call float @llvm.nvvm.fma.rn.f(float %943, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i829 = select i1 %.not6.i828, float %946, float %945, !dbg !63
  %947 = fcmp oge float %.01.i826, 0x4022059680000000, !dbg !63
  %s.0.i830 = select i1 %947, float 1.000000e+00, float %.03.i829, !dbg !63
  %948 = bitcast float %s.0.i830 to i32, !dbg !63
  %949 = bitcast float %680 to i32, !dbg !63
  %950 = and i32 %949, -2147483648, !dbg !63
  %951 = or i32 %950, %948, !dbg !63
  %952 = bitcast i32 %951 to float, !dbg !63
  br label %__nv_tanhf.exit843, !dbg !63

__internal_fmad.exit3.i832:                       ; preds = %__nv_tanhf.exit824
  %953 = fmul float %680, %680, !dbg !63
  %954 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i833 = icmp eq i32 %954, 0, !dbg !63
  %955 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %953, float 0xBFAAC795C0000000) #5, !dbg !63
  %956 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %953, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i834 = select i1 %.not1.i833, float %956, float %955, !dbg !63
  %957 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i835 = icmp eq i32 %957, 0, !dbg !63
  %958 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i834, float %953, float 0x3FC10B2820000000) #5, !dbg !63
  %959 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i834, float %953, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i836 = select i1 %.not2.i835, float %959, float %958, !dbg !63
  %960 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i837 = icmp eq i32 %960, 0, !dbg !63
  %961 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i836, float %953, float 0xBFD5553DA0000000) #5, !dbg !63
  %962 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i836, float %953, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i838 = select i1 %.not3.i837, float %962, float %961, !dbg !63
  %963 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i839 = icmp eq i32 %963, 0, !dbg !63
  %964 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i838, float %953, float 0.000000e+00) #5, !dbg !63
  %965 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i838, float %953, float 0.000000e+00) #5, !dbg !63
  %.04.i840 = select i1 %.not4.i839, float %965, float %964, !dbg !63
  %966 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i841 = icmp eq i32 %966, 0, !dbg !63
  %967 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i840, float %680, float %680) #5, !dbg !63
  %968 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i840, float %680, float %680) #5, !dbg !63
  %.02.i842 = select i1 %.not5.i841, float %968, float %967, !dbg !63
  br label %__nv_tanhf.exit843, !dbg !63

__nv_tanhf.exit843:                               ; preds = %__internal_fmad.exit1.i827, %__internal_fmad.exit3.i832
  %s.1.i831 = phi float [ %952, %__internal_fmad.exit1.i827 ], [ %.02.i842, %__internal_fmad.exit3.i832 ], !dbg !63
  %969 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i844 = icmp eq i32 %969, 0, !dbg !63
  %970 = tail call float @llvm.nvvm.fabs.ftz.f(float %681) #5, !dbg !63
  %971 = tail call float @llvm.nvvm.fabs.f(float %681) #5, !dbg !63
  %.01.i845 = select i1 %.not.i844, float %971, float %970, !dbg !63
  %972 = fcmp ult float %.01.i845, 0x3FE3333340000000, !dbg !63
  br i1 %972, label %__internal_fmad.exit3.i851, label %__internal_fmad.exit1.i846, !dbg !63

__internal_fmad.exit1.i846:                       ; preds = %__nv_tanhf.exit843
  %973 = fmul float %.01.i845, 0x4007154760000000, !dbg !63
  %974 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %973) #5, !dbg !63
  %975 = fadd float %974, 1.000000e+00, !dbg !63
  %976 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %975) #6, !dbg !63, !srcloc !64
  %977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i847 = icmp eq i32 %977, 0, !dbg !63
  %978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %976, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %979 = tail call float @llvm.nvvm.fma.rn.f(float %976, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i848 = select i1 %.not6.i847, float %979, float %978, !dbg !63
  %980 = fcmp oge float %.01.i845, 0x4022059680000000, !dbg !63
  %s.0.i849 = select i1 %980, float 1.000000e+00, float %.03.i848, !dbg !63
  %981 = bitcast float %s.0.i849 to i32, !dbg !63
  %982 = bitcast float %681 to i32, !dbg !63
  %983 = and i32 %982, -2147483648, !dbg !63
  %984 = or i32 %983, %981, !dbg !63
  %985 = bitcast i32 %984 to float, !dbg !63
  br label %__nv_tanhf.exit862, !dbg !63

__internal_fmad.exit3.i851:                       ; preds = %__nv_tanhf.exit843
  %986 = fmul float %681, %681, !dbg !63
  %987 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i852 = icmp eq i32 %987, 0, !dbg !63
  %988 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %986, float 0xBFAAC795C0000000) #5, !dbg !63
  %989 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %986, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i853 = select i1 %.not1.i852, float %989, float %988, !dbg !63
  %990 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i854 = icmp eq i32 %990, 0, !dbg !63
  %991 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i853, float %986, float 0x3FC10B2820000000) #5, !dbg !63
  %992 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i853, float %986, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i855 = select i1 %.not2.i854, float %992, float %991, !dbg !63
  %993 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i856 = icmp eq i32 %993, 0, !dbg !63
  %994 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i855, float %986, float 0xBFD5553DA0000000) #5, !dbg !63
  %995 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i855, float %986, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i857 = select i1 %.not3.i856, float %995, float %994, !dbg !63
  %996 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i858 = icmp eq i32 %996, 0, !dbg !63
  %997 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i857, float %986, float 0.000000e+00) #5, !dbg !63
  %998 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i857, float %986, float 0.000000e+00) #5, !dbg !63
  %.04.i859 = select i1 %.not4.i858, float %998, float %997, !dbg !63
  %999 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i860 = icmp eq i32 %999, 0, !dbg !63
  %1000 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i859, float %681, float %681) #5, !dbg !63
  %1001 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i859, float %681, float %681) #5, !dbg !63
  %.02.i861 = select i1 %.not5.i860, float %1001, float %1000, !dbg !63
  br label %__nv_tanhf.exit862, !dbg !63

__nv_tanhf.exit862:                               ; preds = %__internal_fmad.exit1.i846, %__internal_fmad.exit3.i851
  %s.1.i850 = phi float [ %985, %__internal_fmad.exit1.i846 ], [ %.02.i861, %__internal_fmad.exit3.i851 ], !dbg !63
  %1002 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i863 = icmp eq i32 %1002, 0, !dbg !63
  %1003 = tail call float @llvm.nvvm.fabs.ftz.f(float %682) #5, !dbg !63
  %1004 = tail call float @llvm.nvvm.fabs.f(float %682) #5, !dbg !63
  %.01.i864 = select i1 %.not.i863, float %1004, float %1003, !dbg !63
  %1005 = fcmp ult float %.01.i864, 0x3FE3333340000000, !dbg !63
  br i1 %1005, label %__internal_fmad.exit3.i870, label %__internal_fmad.exit1.i865, !dbg !63

__internal_fmad.exit1.i865:                       ; preds = %__nv_tanhf.exit862
  %1006 = fmul float %.01.i864, 0x4007154760000000, !dbg !63
  %1007 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1006) #5, !dbg !63
  %1008 = fadd float %1007, 1.000000e+00, !dbg !63
  %1009 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1008) #6, !dbg !63, !srcloc !64
  %1010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i866 = icmp eq i32 %1010, 0, !dbg !63
  %1011 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1009, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1012 = tail call float @llvm.nvvm.fma.rn.f(float %1009, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i867 = select i1 %.not6.i866, float %1012, float %1011, !dbg !63
  %1013 = fcmp oge float %.01.i864, 0x4022059680000000, !dbg !63
  %s.0.i868 = select i1 %1013, float 1.000000e+00, float %.03.i867, !dbg !63
  %1014 = bitcast float %s.0.i868 to i32, !dbg !63
  %1015 = bitcast float %682 to i32, !dbg !63
  %1016 = and i32 %1015, -2147483648, !dbg !63
  %1017 = or i32 %1016, %1014, !dbg !63
  %1018 = bitcast i32 %1017 to float, !dbg !63
  br label %__nv_tanhf.exit881, !dbg !63

__internal_fmad.exit3.i870:                       ; preds = %__nv_tanhf.exit862
  %1019 = fmul float %682, %682, !dbg !63
  %1020 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i871 = icmp eq i32 %1020, 0, !dbg !63
  %1021 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1019, float 0xBFAAC795C0000000) #5, !dbg !63
  %1022 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1019, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i872 = select i1 %.not1.i871, float %1022, float %1021, !dbg !63
  %1023 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i873 = icmp eq i32 %1023, 0, !dbg !63
  %1024 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i872, float %1019, float 0x3FC10B2820000000) #5, !dbg !63
  %1025 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i872, float %1019, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i874 = select i1 %.not2.i873, float %1025, float %1024, !dbg !63
  %1026 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i875 = icmp eq i32 %1026, 0, !dbg !63
  %1027 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i874, float %1019, float 0xBFD5553DA0000000) #5, !dbg !63
  %1028 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i874, float %1019, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i876 = select i1 %.not3.i875, float %1028, float %1027, !dbg !63
  %1029 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i877 = icmp eq i32 %1029, 0, !dbg !63
  %1030 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i876, float %1019, float 0.000000e+00) #5, !dbg !63
  %1031 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i876, float %1019, float 0.000000e+00) #5, !dbg !63
  %.04.i878 = select i1 %.not4.i877, float %1031, float %1030, !dbg !63
  %1032 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i879 = icmp eq i32 %1032, 0, !dbg !63
  %1033 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i878, float %682, float %682) #5, !dbg !63
  %1034 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i878, float %682, float %682) #5, !dbg !63
  %.02.i880 = select i1 %.not5.i879, float %1034, float %1033, !dbg !63
  br label %__nv_tanhf.exit881, !dbg !63

__nv_tanhf.exit881:                               ; preds = %__internal_fmad.exit1.i865, %__internal_fmad.exit3.i870
  %s.1.i869 = phi float [ %1018, %__internal_fmad.exit1.i865 ], [ %.02.i880, %__internal_fmad.exit3.i870 ], !dbg !63
  %1035 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i882 = icmp eq i32 %1035, 0, !dbg !63
  %1036 = tail call float @llvm.nvvm.fabs.ftz.f(float %683) #5, !dbg !63
  %1037 = tail call float @llvm.nvvm.fabs.f(float %683) #5, !dbg !63
  %.01.i883 = select i1 %.not.i882, float %1037, float %1036, !dbg !63
  %1038 = fcmp ult float %.01.i883, 0x3FE3333340000000, !dbg !63
  br i1 %1038, label %__internal_fmad.exit3.i889, label %__internal_fmad.exit1.i884, !dbg !63

__internal_fmad.exit1.i884:                       ; preds = %__nv_tanhf.exit881
  %1039 = fmul float %.01.i883, 0x4007154760000000, !dbg !63
  %1040 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1039) #5, !dbg !63
  %1041 = fadd float %1040, 1.000000e+00, !dbg !63
  %1042 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1041) #6, !dbg !63, !srcloc !64
  %1043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i885 = icmp eq i32 %1043, 0, !dbg !63
  %1044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1042, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1045 = tail call float @llvm.nvvm.fma.rn.f(float %1042, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i886 = select i1 %.not6.i885, float %1045, float %1044, !dbg !63
  %1046 = fcmp oge float %.01.i883, 0x4022059680000000, !dbg !63
  %s.0.i887 = select i1 %1046, float 1.000000e+00, float %.03.i886, !dbg !63
  %1047 = bitcast float %s.0.i887 to i32, !dbg !63
  %1048 = bitcast float %683 to i32, !dbg !63
  %1049 = and i32 %1048, -2147483648, !dbg !63
  %1050 = or i32 %1049, %1047, !dbg !63
  %1051 = bitcast i32 %1050 to float, !dbg !63
  br label %__nv_tanhf.exit900, !dbg !63

__internal_fmad.exit3.i889:                       ; preds = %__nv_tanhf.exit881
  %1052 = fmul float %683, %683, !dbg !63
  %1053 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i890 = icmp eq i32 %1053, 0, !dbg !63
  %1054 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1052, float 0xBFAAC795C0000000) #5, !dbg !63
  %1055 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1052, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i891 = select i1 %.not1.i890, float %1055, float %1054, !dbg !63
  %1056 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i892 = icmp eq i32 %1056, 0, !dbg !63
  %1057 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i891, float %1052, float 0x3FC10B2820000000) #5, !dbg !63
  %1058 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i891, float %1052, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i893 = select i1 %.not2.i892, float %1058, float %1057, !dbg !63
  %1059 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i894 = icmp eq i32 %1059, 0, !dbg !63
  %1060 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i893, float %1052, float 0xBFD5553DA0000000) #5, !dbg !63
  %1061 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i893, float %1052, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i895 = select i1 %.not3.i894, float %1061, float %1060, !dbg !63
  %1062 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i896 = icmp eq i32 %1062, 0, !dbg !63
  %1063 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i895, float %1052, float 0.000000e+00) #5, !dbg !63
  %1064 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i895, float %1052, float 0.000000e+00) #5, !dbg !63
  %.04.i897 = select i1 %.not4.i896, float %1064, float %1063, !dbg !63
  %1065 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i898 = icmp eq i32 %1065, 0, !dbg !63
  %1066 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i897, float %683, float %683) #5, !dbg !63
  %1067 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i897, float %683, float %683) #5, !dbg !63
  %.02.i899 = select i1 %.not5.i898, float %1067, float %1066, !dbg !63
  br label %__nv_tanhf.exit900, !dbg !63

__nv_tanhf.exit900:                               ; preds = %__internal_fmad.exit1.i884, %__internal_fmad.exit3.i889
  %s.1.i888 = phi float [ %1051, %__internal_fmad.exit1.i884 ], [ %.02.i899, %__internal_fmad.exit3.i889 ], !dbg !63
  %1068 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i901 = icmp eq i32 %1068, 0, !dbg !63
  %1069 = tail call float @llvm.nvvm.fabs.ftz.f(float %684) #5, !dbg !63
  %1070 = tail call float @llvm.nvvm.fabs.f(float %684) #5, !dbg !63
  %.01.i902 = select i1 %.not.i901, float %1070, float %1069, !dbg !63
  %1071 = fcmp ult float %.01.i902, 0x3FE3333340000000, !dbg !63
  br i1 %1071, label %__internal_fmad.exit3.i908, label %__internal_fmad.exit1.i903, !dbg !63

__internal_fmad.exit1.i903:                       ; preds = %__nv_tanhf.exit900
  %1072 = fmul float %.01.i902, 0x4007154760000000, !dbg !63
  %1073 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1072) #5, !dbg !63
  %1074 = fadd float %1073, 1.000000e+00, !dbg !63
  %1075 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1074) #6, !dbg !63, !srcloc !64
  %1076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i904 = icmp eq i32 %1076, 0, !dbg !63
  %1077 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1075, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1078 = tail call float @llvm.nvvm.fma.rn.f(float %1075, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i905 = select i1 %.not6.i904, float %1078, float %1077, !dbg !63
  %1079 = fcmp oge float %.01.i902, 0x4022059680000000, !dbg !63
  %s.0.i906 = select i1 %1079, float 1.000000e+00, float %.03.i905, !dbg !63
  %1080 = bitcast float %s.0.i906 to i32, !dbg !63
  %1081 = bitcast float %684 to i32, !dbg !63
  %1082 = and i32 %1081, -2147483648, !dbg !63
  %1083 = or i32 %1082, %1080, !dbg !63
  %1084 = bitcast i32 %1083 to float, !dbg !63
  br label %__nv_tanhf.exit919, !dbg !63

__internal_fmad.exit3.i908:                       ; preds = %__nv_tanhf.exit900
  %1085 = fmul float %684, %684, !dbg !63
  %1086 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i909 = icmp eq i32 %1086, 0, !dbg !63
  %1087 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1085, float 0xBFAAC795C0000000) #5, !dbg !63
  %1088 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1085, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i910 = select i1 %.not1.i909, float %1088, float %1087, !dbg !63
  %1089 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i911 = icmp eq i32 %1089, 0, !dbg !63
  %1090 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i910, float %1085, float 0x3FC10B2820000000) #5, !dbg !63
  %1091 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i910, float %1085, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i912 = select i1 %.not2.i911, float %1091, float %1090, !dbg !63
  %1092 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i913 = icmp eq i32 %1092, 0, !dbg !63
  %1093 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i912, float %1085, float 0xBFD5553DA0000000) #5, !dbg !63
  %1094 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i912, float %1085, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i914 = select i1 %.not3.i913, float %1094, float %1093, !dbg !63
  %1095 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i915 = icmp eq i32 %1095, 0, !dbg !63
  %1096 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i914, float %1085, float 0.000000e+00) #5, !dbg !63
  %1097 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i914, float %1085, float 0.000000e+00) #5, !dbg !63
  %.04.i916 = select i1 %.not4.i915, float %1097, float %1096, !dbg !63
  %1098 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i917 = icmp eq i32 %1098, 0, !dbg !63
  %1099 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i916, float %684, float %684) #5, !dbg !63
  %1100 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i916, float %684, float %684) #5, !dbg !63
  %.02.i918 = select i1 %.not5.i917, float %1100, float %1099, !dbg !63
  br label %__nv_tanhf.exit919, !dbg !63

__nv_tanhf.exit919:                               ; preds = %__internal_fmad.exit1.i903, %__internal_fmad.exit3.i908
  %s.1.i907 = phi float [ %1084, %__internal_fmad.exit1.i903 ], [ %.02.i918, %__internal_fmad.exit3.i908 ], !dbg !63
  %1101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i920 = icmp eq i32 %1101, 0, !dbg !63
  %1102 = tail call float @llvm.nvvm.fabs.ftz.f(float %685) #5, !dbg !63
  %1103 = tail call float @llvm.nvvm.fabs.f(float %685) #5, !dbg !63
  %.01.i921 = select i1 %.not.i920, float %1103, float %1102, !dbg !63
  %1104 = fcmp ult float %.01.i921, 0x3FE3333340000000, !dbg !63
  br i1 %1104, label %__internal_fmad.exit3.i927, label %__internal_fmad.exit1.i922, !dbg !63

__internal_fmad.exit1.i922:                       ; preds = %__nv_tanhf.exit919
  %1105 = fmul float %.01.i921, 0x4007154760000000, !dbg !63
  %1106 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1105) #5, !dbg !63
  %1107 = fadd float %1106, 1.000000e+00, !dbg !63
  %1108 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1107) #6, !dbg !63, !srcloc !64
  %1109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i923 = icmp eq i32 %1109, 0, !dbg !63
  %1110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1108, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1111 = tail call float @llvm.nvvm.fma.rn.f(float %1108, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i924 = select i1 %.not6.i923, float %1111, float %1110, !dbg !63
  %1112 = fcmp oge float %.01.i921, 0x4022059680000000, !dbg !63
  %s.0.i925 = select i1 %1112, float 1.000000e+00, float %.03.i924, !dbg !63
  %1113 = bitcast float %s.0.i925 to i32, !dbg !63
  %1114 = bitcast float %685 to i32, !dbg !63
  %1115 = and i32 %1114, -2147483648, !dbg !63
  %1116 = or i32 %1115, %1113, !dbg !63
  %1117 = bitcast i32 %1116 to float, !dbg !63
  br label %__nv_tanhf.exit938, !dbg !63

__internal_fmad.exit3.i927:                       ; preds = %__nv_tanhf.exit919
  %1118 = fmul float %685, %685, !dbg !63
  %1119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i928 = icmp eq i32 %1119, 0, !dbg !63
  %1120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1118, float 0xBFAAC795C0000000) #5, !dbg !63
  %1121 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1118, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i929 = select i1 %.not1.i928, float %1121, float %1120, !dbg !63
  %1122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i930 = icmp eq i32 %1122, 0, !dbg !63
  %1123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i929, float %1118, float 0x3FC10B2820000000) #5, !dbg !63
  %1124 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i929, float %1118, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i931 = select i1 %.not2.i930, float %1124, float %1123, !dbg !63
  %1125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i932 = icmp eq i32 %1125, 0, !dbg !63
  %1126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i931, float %1118, float 0xBFD5553DA0000000) #5, !dbg !63
  %1127 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i931, float %1118, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i933 = select i1 %.not3.i932, float %1127, float %1126, !dbg !63
  %1128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i934 = icmp eq i32 %1128, 0, !dbg !63
  %1129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i933, float %1118, float 0.000000e+00) #5, !dbg !63
  %1130 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i933, float %1118, float 0.000000e+00) #5, !dbg !63
  %.04.i935 = select i1 %.not4.i934, float %1130, float %1129, !dbg !63
  %1131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i936 = icmp eq i32 %1131, 0, !dbg !63
  %1132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i935, float %685, float %685) #5, !dbg !63
  %1133 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i935, float %685, float %685) #5, !dbg !63
  %.02.i937 = select i1 %.not5.i936, float %1133, float %1132, !dbg !63
  br label %__nv_tanhf.exit938, !dbg !63

__nv_tanhf.exit938:                               ; preds = %__internal_fmad.exit1.i922, %__internal_fmad.exit3.i927
  %s.1.i926 = phi float [ %1117, %__internal_fmad.exit1.i922 ], [ %.02.i937, %__internal_fmad.exit3.i927 ], !dbg !63
  %1134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i939 = icmp eq i32 %1134, 0, !dbg !63
  %1135 = tail call float @llvm.nvvm.fabs.ftz.f(float %686) #5, !dbg !63
  %1136 = tail call float @llvm.nvvm.fabs.f(float %686) #5, !dbg !63
  %.01.i940 = select i1 %.not.i939, float %1136, float %1135, !dbg !63
  %1137 = fcmp ult float %.01.i940, 0x3FE3333340000000, !dbg !63
  br i1 %1137, label %__internal_fmad.exit3.i946, label %__internal_fmad.exit1.i941, !dbg !63

__internal_fmad.exit1.i941:                       ; preds = %__nv_tanhf.exit938
  %1138 = fmul float %.01.i940, 0x4007154760000000, !dbg !63
  %1139 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1138) #5, !dbg !63
  %1140 = fadd float %1139, 1.000000e+00, !dbg !63
  %1141 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1140) #6, !dbg !63, !srcloc !64
  %1142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i942 = icmp eq i32 %1142, 0, !dbg !63
  %1143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1141, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1144 = tail call float @llvm.nvvm.fma.rn.f(float %1141, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i943 = select i1 %.not6.i942, float %1144, float %1143, !dbg !63
  %1145 = fcmp oge float %.01.i940, 0x4022059680000000, !dbg !63
  %s.0.i944 = select i1 %1145, float 1.000000e+00, float %.03.i943, !dbg !63
  %1146 = bitcast float %s.0.i944 to i32, !dbg !63
  %1147 = bitcast float %686 to i32, !dbg !63
  %1148 = and i32 %1147, -2147483648, !dbg !63
  %1149 = or i32 %1148, %1146, !dbg !63
  %1150 = bitcast i32 %1149 to float, !dbg !63
  br label %__nv_tanhf.exit957, !dbg !63

__internal_fmad.exit3.i946:                       ; preds = %__nv_tanhf.exit938
  %1151 = fmul float %686, %686, !dbg !63
  %1152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i947 = icmp eq i32 %1152, 0, !dbg !63
  %1153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1151, float 0xBFAAC795C0000000) #5, !dbg !63
  %1154 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1151, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i948 = select i1 %.not1.i947, float %1154, float %1153, !dbg !63
  %1155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i949 = icmp eq i32 %1155, 0, !dbg !63
  %1156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i948, float %1151, float 0x3FC10B2820000000) #5, !dbg !63
  %1157 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i948, float %1151, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i950 = select i1 %.not2.i949, float %1157, float %1156, !dbg !63
  %1158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i951 = icmp eq i32 %1158, 0, !dbg !63
  %1159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i950, float %1151, float 0xBFD5553DA0000000) #5, !dbg !63
  %1160 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i950, float %1151, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i952 = select i1 %.not3.i951, float %1160, float %1159, !dbg !63
  %1161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i953 = icmp eq i32 %1161, 0, !dbg !63
  %1162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i952, float %1151, float 0.000000e+00) #5, !dbg !63
  %1163 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i952, float %1151, float 0.000000e+00) #5, !dbg !63
  %.04.i954 = select i1 %.not4.i953, float %1163, float %1162, !dbg !63
  %1164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i955 = icmp eq i32 %1164, 0, !dbg !63
  %1165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i954, float %686, float %686) #5, !dbg !63
  %1166 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i954, float %686, float %686) #5, !dbg !63
  %.02.i956 = select i1 %.not5.i955, float %1166, float %1165, !dbg !63
  br label %__nv_tanhf.exit957, !dbg !63

__nv_tanhf.exit957:                               ; preds = %__internal_fmad.exit1.i941, %__internal_fmad.exit3.i946
  %s.1.i945 = phi float [ %1150, %__internal_fmad.exit1.i941 ], [ %.02.i956, %__internal_fmad.exit3.i946 ], !dbg !63
  %1167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i958 = icmp eq i32 %1167, 0, !dbg !63
  %1168 = tail call float @llvm.nvvm.fabs.ftz.f(float %687) #5, !dbg !63
  %1169 = tail call float @llvm.nvvm.fabs.f(float %687) #5, !dbg !63
  %.01.i959 = select i1 %.not.i958, float %1169, float %1168, !dbg !63
  %1170 = fcmp ult float %.01.i959, 0x3FE3333340000000, !dbg !63
  br i1 %1170, label %__internal_fmad.exit3.i965, label %__internal_fmad.exit1.i960, !dbg !63

__internal_fmad.exit1.i960:                       ; preds = %__nv_tanhf.exit957
  %1171 = fmul float %.01.i959, 0x4007154760000000, !dbg !63
  %1172 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1171) #5, !dbg !63
  %1173 = fadd float %1172, 1.000000e+00, !dbg !63
  %1174 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1173) #6, !dbg !63, !srcloc !64
  %1175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i961 = icmp eq i32 %1175, 0, !dbg !63
  %1176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1174, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1177 = tail call float @llvm.nvvm.fma.rn.f(float %1174, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i962 = select i1 %.not6.i961, float %1177, float %1176, !dbg !63
  %1178 = fcmp oge float %.01.i959, 0x4022059680000000, !dbg !63
  %s.0.i963 = select i1 %1178, float 1.000000e+00, float %.03.i962, !dbg !63
  %1179 = bitcast float %s.0.i963 to i32, !dbg !63
  %1180 = bitcast float %687 to i32, !dbg !63
  %1181 = and i32 %1180, -2147483648, !dbg !63
  %1182 = or i32 %1181, %1179, !dbg !63
  %1183 = bitcast i32 %1182 to float, !dbg !63
  br label %__nv_tanhf.exit976, !dbg !63

__internal_fmad.exit3.i965:                       ; preds = %__nv_tanhf.exit957
  %1184 = fmul float %687, %687, !dbg !63
  %1185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i966 = icmp eq i32 %1185, 0, !dbg !63
  %1186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1184, float 0xBFAAC795C0000000) #5, !dbg !63
  %1187 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1184, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i967 = select i1 %.not1.i966, float %1187, float %1186, !dbg !63
  %1188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i968 = icmp eq i32 %1188, 0, !dbg !63
  %1189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i967, float %1184, float 0x3FC10B2820000000) #5, !dbg !63
  %1190 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i967, float %1184, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i969 = select i1 %.not2.i968, float %1190, float %1189, !dbg !63
  %1191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i970 = icmp eq i32 %1191, 0, !dbg !63
  %1192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i969, float %1184, float 0xBFD5553DA0000000) #5, !dbg !63
  %1193 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i969, float %1184, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i971 = select i1 %.not3.i970, float %1193, float %1192, !dbg !63
  %1194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i972 = icmp eq i32 %1194, 0, !dbg !63
  %1195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i971, float %1184, float 0.000000e+00) #5, !dbg !63
  %1196 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i971, float %1184, float 0.000000e+00) #5, !dbg !63
  %.04.i973 = select i1 %.not4.i972, float %1196, float %1195, !dbg !63
  %1197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i974 = icmp eq i32 %1197, 0, !dbg !63
  %1198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i973, float %687, float %687) #5, !dbg !63
  %1199 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i973, float %687, float %687) #5, !dbg !63
  %.02.i975 = select i1 %.not5.i974, float %1199, float %1198, !dbg !63
  br label %__nv_tanhf.exit976, !dbg !63

__nv_tanhf.exit976:                               ; preds = %__internal_fmad.exit1.i960, %__internal_fmad.exit3.i965
  %s.1.i964 = phi float [ %1183, %__internal_fmad.exit1.i960 ], [ %.02.i975, %__internal_fmad.exit3.i965 ], !dbg !63
  %1200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i977 = icmp eq i32 %1200, 0, !dbg !63
  %1201 = tail call float @llvm.nvvm.fabs.ftz.f(float %688) #5, !dbg !63
  %1202 = tail call float @llvm.nvvm.fabs.f(float %688) #5, !dbg !63
  %.01.i978 = select i1 %.not.i977, float %1202, float %1201, !dbg !63
  %1203 = fcmp ult float %.01.i978, 0x3FE3333340000000, !dbg !63
  br i1 %1203, label %__internal_fmad.exit3.i984, label %__internal_fmad.exit1.i979, !dbg !63

__internal_fmad.exit1.i979:                       ; preds = %__nv_tanhf.exit976
  %1204 = fmul float %.01.i978, 0x4007154760000000, !dbg !63
  %1205 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1204) #5, !dbg !63
  %1206 = fadd float %1205, 1.000000e+00, !dbg !63
  %1207 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1206) #6, !dbg !63, !srcloc !64
  %1208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i980 = icmp eq i32 %1208, 0, !dbg !63
  %1209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1207, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1210 = tail call float @llvm.nvvm.fma.rn.f(float %1207, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i981 = select i1 %.not6.i980, float %1210, float %1209, !dbg !63
  %1211 = fcmp oge float %.01.i978, 0x4022059680000000, !dbg !63
  %s.0.i982 = select i1 %1211, float 1.000000e+00, float %.03.i981, !dbg !63
  %1212 = bitcast float %s.0.i982 to i32, !dbg !63
  %1213 = bitcast float %688 to i32, !dbg !63
  %1214 = and i32 %1213, -2147483648, !dbg !63
  %1215 = or i32 %1214, %1212, !dbg !63
  %1216 = bitcast i32 %1215 to float, !dbg !63
  br label %__nv_tanhf.exit995, !dbg !63

__internal_fmad.exit3.i984:                       ; preds = %__nv_tanhf.exit976
  %1217 = fmul float %688, %688, !dbg !63
  %1218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i985 = icmp eq i32 %1218, 0, !dbg !63
  %1219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1217, float 0xBFAAC795C0000000) #5, !dbg !63
  %1220 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1217, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i986 = select i1 %.not1.i985, float %1220, float %1219, !dbg !63
  %1221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i987 = icmp eq i32 %1221, 0, !dbg !63
  %1222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i986, float %1217, float 0x3FC10B2820000000) #5, !dbg !63
  %1223 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i986, float %1217, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i988 = select i1 %.not2.i987, float %1223, float %1222, !dbg !63
  %1224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i989 = icmp eq i32 %1224, 0, !dbg !63
  %1225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i988, float %1217, float 0xBFD5553DA0000000) #5, !dbg !63
  %1226 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i988, float %1217, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i990 = select i1 %.not3.i989, float %1226, float %1225, !dbg !63
  %1227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i991 = icmp eq i32 %1227, 0, !dbg !63
  %1228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i990, float %1217, float 0.000000e+00) #5, !dbg !63
  %1229 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i990, float %1217, float 0.000000e+00) #5, !dbg !63
  %.04.i992 = select i1 %.not4.i991, float %1229, float %1228, !dbg !63
  %1230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i993 = icmp eq i32 %1230, 0, !dbg !63
  %1231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i992, float %688, float %688) #5, !dbg !63
  %1232 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i992, float %688, float %688) #5, !dbg !63
  %.02.i994 = select i1 %.not5.i993, float %1232, float %1231, !dbg !63
  br label %__nv_tanhf.exit995, !dbg !63

__nv_tanhf.exit995:                               ; preds = %__internal_fmad.exit1.i979, %__internal_fmad.exit3.i984
  %s.1.i983 = phi float [ %1216, %__internal_fmad.exit1.i979 ], [ %.02.i994, %__internal_fmad.exit3.i984 ], !dbg !63
  %1233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i996 = icmp eq i32 %1233, 0, !dbg !63
  %1234 = tail call float @llvm.nvvm.fabs.ftz.f(float %689) #5, !dbg !63
  %1235 = tail call float @llvm.nvvm.fabs.f(float %689) #5, !dbg !63
  %.01.i997 = select i1 %.not.i996, float %1235, float %1234, !dbg !63
  %1236 = fcmp ult float %.01.i997, 0x3FE3333340000000, !dbg !63
  br i1 %1236, label %__internal_fmad.exit3.i1003, label %__internal_fmad.exit1.i998, !dbg !63

__internal_fmad.exit1.i998:                       ; preds = %__nv_tanhf.exit995
  %1237 = fmul float %.01.i997, 0x4007154760000000, !dbg !63
  %1238 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1237) #5, !dbg !63
  %1239 = fadd float %1238, 1.000000e+00, !dbg !63
  %1240 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1239) #6, !dbg !63, !srcloc !64
  %1241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i999 = icmp eq i32 %1241, 0, !dbg !63
  %1242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1240, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1243 = tail call float @llvm.nvvm.fma.rn.f(float %1240, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1000 = select i1 %.not6.i999, float %1243, float %1242, !dbg !63
  %1244 = fcmp oge float %.01.i997, 0x4022059680000000, !dbg !63
  %s.0.i1001 = select i1 %1244, float 1.000000e+00, float %.03.i1000, !dbg !63
  %1245 = bitcast float %s.0.i1001 to i32, !dbg !63
  %1246 = bitcast float %689 to i32, !dbg !63
  %1247 = and i32 %1246, -2147483648, !dbg !63
  %1248 = or i32 %1247, %1245, !dbg !63
  %1249 = bitcast i32 %1248 to float, !dbg !63
  br label %__nv_tanhf.exit1014, !dbg !63

__internal_fmad.exit3.i1003:                      ; preds = %__nv_tanhf.exit995
  %1250 = fmul float %689, %689, !dbg !63
  %1251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1004 = icmp eq i32 %1251, 0, !dbg !63
  %1252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1250, float 0xBFAAC795C0000000) #5, !dbg !63
  %1253 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1250, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1005 = select i1 %.not1.i1004, float %1253, float %1252, !dbg !63
  %1254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1006 = icmp eq i32 %1254, 0, !dbg !63
  %1255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1005, float %1250, float 0x3FC10B2820000000) #5, !dbg !63
  %1256 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1005, float %1250, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1007 = select i1 %.not2.i1006, float %1256, float %1255, !dbg !63
  %1257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1008 = icmp eq i32 %1257, 0, !dbg !63
  %1258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1007, float %1250, float 0xBFD5553DA0000000) #5, !dbg !63
  %1259 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1007, float %1250, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1009 = select i1 %.not3.i1008, float %1259, float %1258, !dbg !63
  %1260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1010 = icmp eq i32 %1260, 0, !dbg !63
  %1261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1009, float %1250, float 0.000000e+00) #5, !dbg !63
  %1262 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1009, float %1250, float 0.000000e+00) #5, !dbg !63
  %.04.i1011 = select i1 %.not4.i1010, float %1262, float %1261, !dbg !63
  %1263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1012 = icmp eq i32 %1263, 0, !dbg !63
  %1264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1011, float %689, float %689) #5, !dbg !63
  %1265 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1011, float %689, float %689) #5, !dbg !63
  %.02.i1013 = select i1 %.not5.i1012, float %1265, float %1264, !dbg !63
  br label %__nv_tanhf.exit1014, !dbg !63

__nv_tanhf.exit1014:                              ; preds = %__internal_fmad.exit1.i998, %__internal_fmad.exit3.i1003
  %s.1.i1002 = phi float [ %1249, %__internal_fmad.exit1.i998 ], [ %.02.i1013, %__internal_fmad.exit3.i1003 ], !dbg !63
  %1266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1015 = icmp eq i32 %1266, 0, !dbg !63
  %1267 = tail call float @llvm.nvvm.fabs.ftz.f(float %690) #5, !dbg !63
  %1268 = tail call float @llvm.nvvm.fabs.f(float %690) #5, !dbg !63
  %.01.i1016 = select i1 %.not.i1015, float %1268, float %1267, !dbg !63
  %1269 = fcmp ult float %.01.i1016, 0x3FE3333340000000, !dbg !63
  br i1 %1269, label %__internal_fmad.exit3.i1022, label %__internal_fmad.exit1.i1017, !dbg !63

__internal_fmad.exit1.i1017:                      ; preds = %__nv_tanhf.exit1014
  %1270 = fmul float %.01.i1016, 0x4007154760000000, !dbg !63
  %1271 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1270) #5, !dbg !63
  %1272 = fadd float %1271, 1.000000e+00, !dbg !63
  %1273 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1272) #6, !dbg !63, !srcloc !64
  %1274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1018 = icmp eq i32 %1274, 0, !dbg !63
  %1275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1273, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1276 = tail call float @llvm.nvvm.fma.rn.f(float %1273, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1019 = select i1 %.not6.i1018, float %1276, float %1275, !dbg !63
  %1277 = fcmp oge float %.01.i1016, 0x4022059680000000, !dbg !63
  %s.0.i1020 = select i1 %1277, float 1.000000e+00, float %.03.i1019, !dbg !63
  %1278 = bitcast float %s.0.i1020 to i32, !dbg !63
  %1279 = bitcast float %690 to i32, !dbg !63
  %1280 = and i32 %1279, -2147483648, !dbg !63
  %1281 = or i32 %1280, %1278, !dbg !63
  %1282 = bitcast i32 %1281 to float, !dbg !63
  br label %__nv_tanhf.exit1033, !dbg !63

__internal_fmad.exit3.i1022:                      ; preds = %__nv_tanhf.exit1014
  %1283 = fmul float %690, %690, !dbg !63
  %1284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1023 = icmp eq i32 %1284, 0, !dbg !63
  %1285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1283, float 0xBFAAC795C0000000) #5, !dbg !63
  %1286 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1283, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1024 = select i1 %.not1.i1023, float %1286, float %1285, !dbg !63
  %1287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1025 = icmp eq i32 %1287, 0, !dbg !63
  %1288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1024, float %1283, float 0x3FC10B2820000000) #5, !dbg !63
  %1289 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1024, float %1283, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1026 = select i1 %.not2.i1025, float %1289, float %1288, !dbg !63
  %1290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1027 = icmp eq i32 %1290, 0, !dbg !63
  %1291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1026, float %1283, float 0xBFD5553DA0000000) #5, !dbg !63
  %1292 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1026, float %1283, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1028 = select i1 %.not3.i1027, float %1292, float %1291, !dbg !63
  %1293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1029 = icmp eq i32 %1293, 0, !dbg !63
  %1294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1028, float %1283, float 0.000000e+00) #5, !dbg !63
  %1295 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1028, float %1283, float 0.000000e+00) #5, !dbg !63
  %.04.i1030 = select i1 %.not4.i1029, float %1295, float %1294, !dbg !63
  %1296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1031 = icmp eq i32 %1296, 0, !dbg !63
  %1297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1030, float %690, float %690) #5, !dbg !63
  %1298 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1030, float %690, float %690) #5, !dbg !63
  %.02.i1032 = select i1 %.not5.i1031, float %1298, float %1297, !dbg !63
  br label %__nv_tanhf.exit1033, !dbg !63

__nv_tanhf.exit1033:                              ; preds = %__internal_fmad.exit1.i1017, %__internal_fmad.exit3.i1022
  %s.1.i1021 = phi float [ %1282, %__internal_fmad.exit1.i1017 ], [ %.02.i1032, %__internal_fmad.exit3.i1022 ], !dbg !63
  %1299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1034 = icmp eq i32 %1299, 0, !dbg !63
  %1300 = tail call float @llvm.nvvm.fabs.ftz.f(float %691) #5, !dbg !63
  %1301 = tail call float @llvm.nvvm.fabs.f(float %691) #5, !dbg !63
  %.01.i1035 = select i1 %.not.i1034, float %1301, float %1300, !dbg !63
  %1302 = fcmp ult float %.01.i1035, 0x3FE3333340000000, !dbg !63
  br i1 %1302, label %__internal_fmad.exit3.i1041, label %__internal_fmad.exit1.i1036, !dbg !63

__internal_fmad.exit1.i1036:                      ; preds = %__nv_tanhf.exit1033
  %1303 = fmul float %.01.i1035, 0x4007154760000000, !dbg !63
  %1304 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1303) #5, !dbg !63
  %1305 = fadd float %1304, 1.000000e+00, !dbg !63
  %1306 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1305) #6, !dbg !63, !srcloc !64
  %1307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1037 = icmp eq i32 %1307, 0, !dbg !63
  %1308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1306, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1309 = tail call float @llvm.nvvm.fma.rn.f(float %1306, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1038 = select i1 %.not6.i1037, float %1309, float %1308, !dbg !63
  %1310 = fcmp oge float %.01.i1035, 0x4022059680000000, !dbg !63
  %s.0.i1039 = select i1 %1310, float 1.000000e+00, float %.03.i1038, !dbg !63
  %1311 = bitcast float %s.0.i1039 to i32, !dbg !63
  %1312 = bitcast float %691 to i32, !dbg !63
  %1313 = and i32 %1312, -2147483648, !dbg !63
  %1314 = or i32 %1313, %1311, !dbg !63
  %1315 = bitcast i32 %1314 to float, !dbg !63
  br label %__nv_tanhf.exit1052, !dbg !63

__internal_fmad.exit3.i1041:                      ; preds = %__nv_tanhf.exit1033
  %1316 = fmul float %691, %691, !dbg !63
  %1317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1042 = icmp eq i32 %1317, 0, !dbg !63
  %1318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1316, float 0xBFAAC795C0000000) #5, !dbg !63
  %1319 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1316, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1043 = select i1 %.not1.i1042, float %1319, float %1318, !dbg !63
  %1320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1044 = icmp eq i32 %1320, 0, !dbg !63
  %1321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1043, float %1316, float 0x3FC10B2820000000) #5, !dbg !63
  %1322 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1043, float %1316, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1045 = select i1 %.not2.i1044, float %1322, float %1321, !dbg !63
  %1323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1046 = icmp eq i32 %1323, 0, !dbg !63
  %1324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1045, float %1316, float 0xBFD5553DA0000000) #5, !dbg !63
  %1325 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1045, float %1316, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1047 = select i1 %.not3.i1046, float %1325, float %1324, !dbg !63
  %1326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1048 = icmp eq i32 %1326, 0, !dbg !63
  %1327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1047, float %1316, float 0.000000e+00) #5, !dbg !63
  %1328 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1047, float %1316, float 0.000000e+00) #5, !dbg !63
  %.04.i1049 = select i1 %.not4.i1048, float %1328, float %1327, !dbg !63
  %1329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1050 = icmp eq i32 %1329, 0, !dbg !63
  %1330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1049, float %691, float %691) #5, !dbg !63
  %1331 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1049, float %691, float %691) #5, !dbg !63
  %.02.i1051 = select i1 %.not5.i1050, float %1331, float %1330, !dbg !63
  br label %__nv_tanhf.exit1052, !dbg !63

__nv_tanhf.exit1052:                              ; preds = %__internal_fmad.exit1.i1036, %__internal_fmad.exit3.i1041
  %s.1.i1040 = phi float [ %1315, %__internal_fmad.exit1.i1036 ], [ %.02.i1051, %__internal_fmad.exit3.i1041 ], !dbg !63
  %1332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1053 = icmp eq i32 %1332, 0, !dbg !63
  %1333 = tail call float @llvm.nvvm.fabs.ftz.f(float %692) #5, !dbg !63
  %1334 = tail call float @llvm.nvvm.fabs.f(float %692) #5, !dbg !63
  %.01.i1054 = select i1 %.not.i1053, float %1334, float %1333, !dbg !63
  %1335 = fcmp ult float %.01.i1054, 0x3FE3333340000000, !dbg !63
  br i1 %1335, label %__internal_fmad.exit3.i1060, label %__internal_fmad.exit1.i1055, !dbg !63

__internal_fmad.exit1.i1055:                      ; preds = %__nv_tanhf.exit1052
  %1336 = fmul float %.01.i1054, 0x4007154760000000, !dbg !63
  %1337 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1336) #5, !dbg !63
  %1338 = fadd float %1337, 1.000000e+00, !dbg !63
  %1339 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1338) #6, !dbg !63, !srcloc !64
  %1340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1056 = icmp eq i32 %1340, 0, !dbg !63
  %1341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1339, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1342 = tail call float @llvm.nvvm.fma.rn.f(float %1339, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1057 = select i1 %.not6.i1056, float %1342, float %1341, !dbg !63
  %1343 = fcmp oge float %.01.i1054, 0x4022059680000000, !dbg !63
  %s.0.i1058 = select i1 %1343, float 1.000000e+00, float %.03.i1057, !dbg !63
  %1344 = bitcast float %s.0.i1058 to i32, !dbg !63
  %1345 = bitcast float %692 to i32, !dbg !63
  %1346 = and i32 %1345, -2147483648, !dbg !63
  %1347 = or i32 %1346, %1344, !dbg !63
  %1348 = bitcast i32 %1347 to float, !dbg !63
  br label %__nv_tanhf.exit1071, !dbg !63

__internal_fmad.exit3.i1060:                      ; preds = %__nv_tanhf.exit1052
  %1349 = fmul float %692, %692, !dbg !63
  %1350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1061 = icmp eq i32 %1350, 0, !dbg !63
  %1351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1349, float 0xBFAAC795C0000000) #5, !dbg !63
  %1352 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1349, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1062 = select i1 %.not1.i1061, float %1352, float %1351, !dbg !63
  %1353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1063 = icmp eq i32 %1353, 0, !dbg !63
  %1354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1062, float %1349, float 0x3FC10B2820000000) #5, !dbg !63
  %1355 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1062, float %1349, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1064 = select i1 %.not2.i1063, float %1355, float %1354, !dbg !63
  %1356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1065 = icmp eq i32 %1356, 0, !dbg !63
  %1357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1064, float %1349, float 0xBFD5553DA0000000) #5, !dbg !63
  %1358 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1064, float %1349, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1066 = select i1 %.not3.i1065, float %1358, float %1357, !dbg !63
  %1359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1067 = icmp eq i32 %1359, 0, !dbg !63
  %1360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1066, float %1349, float 0.000000e+00) #5, !dbg !63
  %1361 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1066, float %1349, float 0.000000e+00) #5, !dbg !63
  %.04.i1068 = select i1 %.not4.i1067, float %1361, float %1360, !dbg !63
  %1362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1069 = icmp eq i32 %1362, 0, !dbg !63
  %1363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1068, float %692, float %692) #5, !dbg !63
  %1364 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1068, float %692, float %692) #5, !dbg !63
  %.02.i1070 = select i1 %.not5.i1069, float %1364, float %1363, !dbg !63
  br label %__nv_tanhf.exit1071, !dbg !63

__nv_tanhf.exit1071:                              ; preds = %__internal_fmad.exit1.i1055, %__internal_fmad.exit3.i1060
  %s.1.i1059 = phi float [ %1348, %__internal_fmad.exit1.i1055 ], [ %.02.i1070, %__internal_fmad.exit3.i1060 ], !dbg !63
  %1365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1072 = icmp eq i32 %1365, 0, !dbg !63
  %1366 = tail call float @llvm.nvvm.fabs.ftz.f(float %693) #5, !dbg !63
  %1367 = tail call float @llvm.nvvm.fabs.f(float %693) #5, !dbg !63
  %.01.i1073 = select i1 %.not.i1072, float %1367, float %1366, !dbg !63
  %1368 = fcmp ult float %.01.i1073, 0x3FE3333340000000, !dbg !63
  br i1 %1368, label %__internal_fmad.exit3.i1079, label %__internal_fmad.exit1.i1074, !dbg !63

__internal_fmad.exit1.i1074:                      ; preds = %__nv_tanhf.exit1071
  %1369 = fmul float %.01.i1073, 0x4007154760000000, !dbg !63
  %1370 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1369) #5, !dbg !63
  %1371 = fadd float %1370, 1.000000e+00, !dbg !63
  %1372 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1371) #6, !dbg !63, !srcloc !64
  %1373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1075 = icmp eq i32 %1373, 0, !dbg !63
  %1374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1372, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1375 = tail call float @llvm.nvvm.fma.rn.f(float %1372, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1076 = select i1 %.not6.i1075, float %1375, float %1374, !dbg !63
  %1376 = fcmp oge float %.01.i1073, 0x4022059680000000, !dbg !63
  %s.0.i1077 = select i1 %1376, float 1.000000e+00, float %.03.i1076, !dbg !63
  %1377 = bitcast float %s.0.i1077 to i32, !dbg !63
  %1378 = bitcast float %693 to i32, !dbg !63
  %1379 = and i32 %1378, -2147483648, !dbg !63
  %1380 = or i32 %1379, %1377, !dbg !63
  %1381 = bitcast i32 %1380 to float, !dbg !63
  br label %__nv_tanhf.exit1090, !dbg !63

__internal_fmad.exit3.i1079:                      ; preds = %__nv_tanhf.exit1071
  %1382 = fmul float %693, %693, !dbg !63
  %1383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1080 = icmp eq i32 %1383, 0, !dbg !63
  %1384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1382, float 0xBFAAC795C0000000) #5, !dbg !63
  %1385 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1382, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1081 = select i1 %.not1.i1080, float %1385, float %1384, !dbg !63
  %1386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1082 = icmp eq i32 %1386, 0, !dbg !63
  %1387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1081, float %1382, float 0x3FC10B2820000000) #5, !dbg !63
  %1388 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1081, float %1382, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1083 = select i1 %.not2.i1082, float %1388, float %1387, !dbg !63
  %1389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1084 = icmp eq i32 %1389, 0, !dbg !63
  %1390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1083, float %1382, float 0xBFD5553DA0000000) #5, !dbg !63
  %1391 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1083, float %1382, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1085 = select i1 %.not3.i1084, float %1391, float %1390, !dbg !63
  %1392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1086 = icmp eq i32 %1392, 0, !dbg !63
  %1393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1085, float %1382, float 0.000000e+00) #5, !dbg !63
  %1394 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1085, float %1382, float 0.000000e+00) #5, !dbg !63
  %.04.i1087 = select i1 %.not4.i1086, float %1394, float %1393, !dbg !63
  %1395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1088 = icmp eq i32 %1395, 0, !dbg !63
  %1396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1087, float %693, float %693) #5, !dbg !63
  %1397 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1087, float %693, float %693) #5, !dbg !63
  %.02.i1089 = select i1 %.not5.i1088, float %1397, float %1396, !dbg !63
  br label %__nv_tanhf.exit1090, !dbg !63

__nv_tanhf.exit1090:                              ; preds = %__internal_fmad.exit1.i1074, %__internal_fmad.exit3.i1079
  %s.1.i1078 = phi float [ %1381, %__internal_fmad.exit1.i1074 ], [ %.02.i1089, %__internal_fmad.exit3.i1079 ], !dbg !63
  %1398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1091 = icmp eq i32 %1398, 0, !dbg !63
  %1399 = tail call float @llvm.nvvm.fabs.ftz.f(float %694) #5, !dbg !63
  %1400 = tail call float @llvm.nvvm.fabs.f(float %694) #5, !dbg !63
  %.01.i1092 = select i1 %.not.i1091, float %1400, float %1399, !dbg !63
  %1401 = fcmp ult float %.01.i1092, 0x3FE3333340000000, !dbg !63
  br i1 %1401, label %__internal_fmad.exit3.i1098, label %__internal_fmad.exit1.i1093, !dbg !63

__internal_fmad.exit1.i1093:                      ; preds = %__nv_tanhf.exit1090
  %1402 = fmul float %.01.i1092, 0x4007154760000000, !dbg !63
  %1403 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1402) #5, !dbg !63
  %1404 = fadd float %1403, 1.000000e+00, !dbg !63
  %1405 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1404) #6, !dbg !63, !srcloc !64
  %1406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1094 = icmp eq i32 %1406, 0, !dbg !63
  %1407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1405, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1408 = tail call float @llvm.nvvm.fma.rn.f(float %1405, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1095 = select i1 %.not6.i1094, float %1408, float %1407, !dbg !63
  %1409 = fcmp oge float %.01.i1092, 0x4022059680000000, !dbg !63
  %s.0.i1096 = select i1 %1409, float 1.000000e+00, float %.03.i1095, !dbg !63
  %1410 = bitcast float %s.0.i1096 to i32, !dbg !63
  %1411 = bitcast float %694 to i32, !dbg !63
  %1412 = and i32 %1411, -2147483648, !dbg !63
  %1413 = or i32 %1412, %1410, !dbg !63
  %1414 = bitcast i32 %1413 to float, !dbg !63
  br label %__nv_tanhf.exit1109, !dbg !63

__internal_fmad.exit3.i1098:                      ; preds = %__nv_tanhf.exit1090
  %1415 = fmul float %694, %694, !dbg !63
  %1416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1099 = icmp eq i32 %1416, 0, !dbg !63
  %1417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1415, float 0xBFAAC795C0000000) #5, !dbg !63
  %1418 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1415, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1100 = select i1 %.not1.i1099, float %1418, float %1417, !dbg !63
  %1419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1101 = icmp eq i32 %1419, 0, !dbg !63
  %1420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1100, float %1415, float 0x3FC10B2820000000) #5, !dbg !63
  %1421 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1100, float %1415, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1102 = select i1 %.not2.i1101, float %1421, float %1420, !dbg !63
  %1422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1103 = icmp eq i32 %1422, 0, !dbg !63
  %1423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1102, float %1415, float 0xBFD5553DA0000000) #5, !dbg !63
  %1424 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1102, float %1415, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1104 = select i1 %.not3.i1103, float %1424, float %1423, !dbg !63
  %1425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1105 = icmp eq i32 %1425, 0, !dbg !63
  %1426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1104, float %1415, float 0.000000e+00) #5, !dbg !63
  %1427 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1104, float %1415, float 0.000000e+00) #5, !dbg !63
  %.04.i1106 = select i1 %.not4.i1105, float %1427, float %1426, !dbg !63
  %1428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1107 = icmp eq i32 %1428, 0, !dbg !63
  %1429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1106, float %694, float %694) #5, !dbg !63
  %1430 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1106, float %694, float %694) #5, !dbg !63
  %.02.i1108 = select i1 %.not5.i1107, float %1430, float %1429, !dbg !63
  br label %__nv_tanhf.exit1109, !dbg !63

__nv_tanhf.exit1109:                              ; preds = %__internal_fmad.exit1.i1093, %__internal_fmad.exit3.i1098
  %s.1.i1097 = phi float [ %1414, %__internal_fmad.exit1.i1093 ], [ %.02.i1108, %__internal_fmad.exit3.i1098 ], !dbg !63
  %1431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1110 = icmp eq i32 %1431, 0, !dbg !63
  %1432 = tail call float @llvm.nvvm.fabs.ftz.f(float %695) #5, !dbg !63
  %1433 = tail call float @llvm.nvvm.fabs.f(float %695) #5, !dbg !63
  %.01.i1111 = select i1 %.not.i1110, float %1433, float %1432, !dbg !63
  %1434 = fcmp ult float %.01.i1111, 0x3FE3333340000000, !dbg !63
  br i1 %1434, label %__internal_fmad.exit3.i1117, label %__internal_fmad.exit1.i1112, !dbg !63

__internal_fmad.exit1.i1112:                      ; preds = %__nv_tanhf.exit1109
  %1435 = fmul float %.01.i1111, 0x4007154760000000, !dbg !63
  %1436 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1435) #5, !dbg !63
  %1437 = fadd float %1436, 1.000000e+00, !dbg !63
  %1438 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1437) #6, !dbg !63, !srcloc !64
  %1439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1113 = icmp eq i32 %1439, 0, !dbg !63
  %1440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1438, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1441 = tail call float @llvm.nvvm.fma.rn.f(float %1438, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1114 = select i1 %.not6.i1113, float %1441, float %1440, !dbg !63
  %1442 = fcmp oge float %.01.i1111, 0x4022059680000000, !dbg !63
  %s.0.i1115 = select i1 %1442, float 1.000000e+00, float %.03.i1114, !dbg !63
  %1443 = bitcast float %s.0.i1115 to i32, !dbg !63
  %1444 = bitcast float %695 to i32, !dbg !63
  %1445 = and i32 %1444, -2147483648, !dbg !63
  %1446 = or i32 %1445, %1443, !dbg !63
  %1447 = bitcast i32 %1446 to float, !dbg !63
  br label %__nv_tanhf.exit1128, !dbg !63

__internal_fmad.exit3.i1117:                      ; preds = %__nv_tanhf.exit1109
  %1448 = fmul float %695, %695, !dbg !63
  %1449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1118 = icmp eq i32 %1449, 0, !dbg !63
  %1450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1448, float 0xBFAAC795C0000000) #5, !dbg !63
  %1451 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1448, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1119 = select i1 %.not1.i1118, float %1451, float %1450, !dbg !63
  %1452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1120 = icmp eq i32 %1452, 0, !dbg !63
  %1453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1119, float %1448, float 0x3FC10B2820000000) #5, !dbg !63
  %1454 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1119, float %1448, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1121 = select i1 %.not2.i1120, float %1454, float %1453, !dbg !63
  %1455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1122 = icmp eq i32 %1455, 0, !dbg !63
  %1456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1121, float %1448, float 0xBFD5553DA0000000) #5, !dbg !63
  %1457 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1121, float %1448, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1123 = select i1 %.not3.i1122, float %1457, float %1456, !dbg !63
  %1458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1124 = icmp eq i32 %1458, 0, !dbg !63
  %1459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1123, float %1448, float 0.000000e+00) #5, !dbg !63
  %1460 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1123, float %1448, float 0.000000e+00) #5, !dbg !63
  %.04.i1125 = select i1 %.not4.i1124, float %1460, float %1459, !dbg !63
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1126 = icmp eq i32 %1461, 0, !dbg !63
  %1462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1125, float %695, float %695) #5, !dbg !63
  %1463 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1125, float %695, float %695) #5, !dbg !63
  %.02.i1127 = select i1 %.not5.i1126, float %1463, float %1462, !dbg !63
  br label %__nv_tanhf.exit1128, !dbg !63

__nv_tanhf.exit1128:                              ; preds = %__internal_fmad.exit1.i1112, %__internal_fmad.exit3.i1117
  %s.1.i1116 = phi float [ %1447, %__internal_fmad.exit1.i1112 ], [ %.02.i1127, %__internal_fmad.exit3.i1117 ], !dbg !63
  %1464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1129 = icmp eq i32 %1464, 0, !dbg !63
  %1465 = tail call float @llvm.nvvm.fabs.ftz.f(float %696) #5, !dbg !63
  %1466 = tail call float @llvm.nvvm.fabs.f(float %696) #5, !dbg !63
  %.01.i1130 = select i1 %.not.i1129, float %1466, float %1465, !dbg !63
  %1467 = fcmp ult float %.01.i1130, 0x3FE3333340000000, !dbg !63
  br i1 %1467, label %__internal_fmad.exit3.i1136, label %__internal_fmad.exit1.i1131, !dbg !63

__internal_fmad.exit1.i1131:                      ; preds = %__nv_tanhf.exit1128
  %1468 = fmul float %.01.i1130, 0x4007154760000000, !dbg !63
  %1469 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1468) #5, !dbg !63
  %1470 = fadd float %1469, 1.000000e+00, !dbg !63
  %1471 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1470) #6, !dbg !63, !srcloc !64
  %1472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1132 = icmp eq i32 %1472, 0, !dbg !63
  %1473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1471, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1474 = tail call float @llvm.nvvm.fma.rn.f(float %1471, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1133 = select i1 %.not6.i1132, float %1474, float %1473, !dbg !63
  %1475 = fcmp oge float %.01.i1130, 0x4022059680000000, !dbg !63
  %s.0.i1134 = select i1 %1475, float 1.000000e+00, float %.03.i1133, !dbg !63
  %1476 = bitcast float %s.0.i1134 to i32, !dbg !63
  %1477 = bitcast float %696 to i32, !dbg !63
  %1478 = and i32 %1477, -2147483648, !dbg !63
  %1479 = or i32 %1478, %1476, !dbg !63
  %1480 = bitcast i32 %1479 to float, !dbg !63
  br label %__nv_tanhf.exit1147, !dbg !63

__internal_fmad.exit3.i1136:                      ; preds = %__nv_tanhf.exit1128
  %1481 = fmul float %696, %696, !dbg !63
  %1482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1137 = icmp eq i32 %1482, 0, !dbg !63
  %1483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1481, float 0xBFAAC795C0000000) #5, !dbg !63
  %1484 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1481, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1138 = select i1 %.not1.i1137, float %1484, float %1483, !dbg !63
  %1485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1139 = icmp eq i32 %1485, 0, !dbg !63
  %1486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1138, float %1481, float 0x3FC10B2820000000) #5, !dbg !63
  %1487 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1138, float %1481, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1140 = select i1 %.not2.i1139, float %1487, float %1486, !dbg !63
  %1488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1141 = icmp eq i32 %1488, 0, !dbg !63
  %1489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1140, float %1481, float 0xBFD5553DA0000000) #5, !dbg !63
  %1490 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1140, float %1481, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1142 = select i1 %.not3.i1141, float %1490, float %1489, !dbg !63
  %1491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1143 = icmp eq i32 %1491, 0, !dbg !63
  %1492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1142, float %1481, float 0.000000e+00) #5, !dbg !63
  %1493 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1142, float %1481, float 0.000000e+00) #5, !dbg !63
  %.04.i1144 = select i1 %.not4.i1143, float %1493, float %1492, !dbg !63
  %1494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1145 = icmp eq i32 %1494, 0, !dbg !63
  %1495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1144, float %696, float %696) #5, !dbg !63
  %1496 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1144, float %696, float %696) #5, !dbg !63
  %.02.i1146 = select i1 %.not5.i1145, float %1496, float %1495, !dbg !63
  br label %__nv_tanhf.exit1147, !dbg !63

__nv_tanhf.exit1147:                              ; preds = %__internal_fmad.exit1.i1131, %__internal_fmad.exit3.i1136
  %s.1.i1135 = phi float [ %1480, %__internal_fmad.exit1.i1131 ], [ %.02.i1146, %__internal_fmad.exit3.i1136 ], !dbg !63
  %1497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1148 = icmp eq i32 %1497, 0, !dbg !63
  %1498 = tail call float @llvm.nvvm.fabs.ftz.f(float %697) #5, !dbg !63
  %1499 = tail call float @llvm.nvvm.fabs.f(float %697) #5, !dbg !63
  %.01.i1149 = select i1 %.not.i1148, float %1499, float %1498, !dbg !63
  %1500 = fcmp ult float %.01.i1149, 0x3FE3333340000000, !dbg !63
  br i1 %1500, label %__internal_fmad.exit3.i1155, label %__internal_fmad.exit1.i1150, !dbg !63

__internal_fmad.exit1.i1150:                      ; preds = %__nv_tanhf.exit1147
  %1501 = fmul float %.01.i1149, 0x4007154760000000, !dbg !63
  %1502 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1501) #5, !dbg !63
  %1503 = fadd float %1502, 1.000000e+00, !dbg !63
  %1504 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1503) #6, !dbg !63, !srcloc !64
  %1505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1151 = icmp eq i32 %1505, 0, !dbg !63
  %1506 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1504, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1507 = tail call float @llvm.nvvm.fma.rn.f(float %1504, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1152 = select i1 %.not6.i1151, float %1507, float %1506, !dbg !63
  %1508 = fcmp oge float %.01.i1149, 0x4022059680000000, !dbg !63
  %s.0.i1153 = select i1 %1508, float 1.000000e+00, float %.03.i1152, !dbg !63
  %1509 = bitcast float %s.0.i1153 to i32, !dbg !63
  %1510 = bitcast float %697 to i32, !dbg !63
  %1511 = and i32 %1510, -2147483648, !dbg !63
  %1512 = or i32 %1511, %1509, !dbg !63
  %1513 = bitcast i32 %1512 to float, !dbg !63
  br label %__nv_tanhf.exit1166, !dbg !63

__internal_fmad.exit3.i1155:                      ; preds = %__nv_tanhf.exit1147
  %1514 = fmul float %697, %697, !dbg !63
  %1515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1156 = icmp eq i32 %1515, 0, !dbg !63
  %1516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1514, float 0xBFAAC795C0000000) #5, !dbg !63
  %1517 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1514, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1157 = select i1 %.not1.i1156, float %1517, float %1516, !dbg !63
  %1518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1158 = icmp eq i32 %1518, 0, !dbg !63
  %1519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1157, float %1514, float 0x3FC10B2820000000) #5, !dbg !63
  %1520 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1157, float %1514, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1159 = select i1 %.not2.i1158, float %1520, float %1519, !dbg !63
  %1521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1160 = icmp eq i32 %1521, 0, !dbg !63
  %1522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1159, float %1514, float 0xBFD5553DA0000000) #5, !dbg !63
  %1523 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1159, float %1514, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1161 = select i1 %.not3.i1160, float %1523, float %1522, !dbg !63
  %1524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1162 = icmp eq i32 %1524, 0, !dbg !63
  %1525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1161, float %1514, float 0.000000e+00) #5, !dbg !63
  %1526 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1161, float %1514, float 0.000000e+00) #5, !dbg !63
  %.04.i1163 = select i1 %.not4.i1162, float %1526, float %1525, !dbg !63
  %1527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1164 = icmp eq i32 %1527, 0, !dbg !63
  %1528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1163, float %697, float %697) #5, !dbg !63
  %1529 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1163, float %697, float %697) #5, !dbg !63
  %.02.i1165 = select i1 %.not5.i1164, float %1529, float %1528, !dbg !63
  br label %__nv_tanhf.exit1166, !dbg !63

__nv_tanhf.exit1166:                              ; preds = %__internal_fmad.exit1.i1150, %__internal_fmad.exit3.i1155
  %s.1.i1154 = phi float [ %1513, %__internal_fmad.exit1.i1150 ], [ %.02.i1165, %__internal_fmad.exit3.i1155 ], !dbg !63
  %1530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1167 = icmp eq i32 %1530, 0, !dbg !63
  %1531 = tail call float @llvm.nvvm.fabs.ftz.f(float %698) #5, !dbg !63
  %1532 = tail call float @llvm.nvvm.fabs.f(float %698) #5, !dbg !63
  %.01.i1168 = select i1 %.not.i1167, float %1532, float %1531, !dbg !63
  %1533 = fcmp ult float %.01.i1168, 0x3FE3333340000000, !dbg !63
  br i1 %1533, label %__internal_fmad.exit3.i1174, label %__internal_fmad.exit1.i1169, !dbg !63

__internal_fmad.exit1.i1169:                      ; preds = %__nv_tanhf.exit1166
  %1534 = fmul float %.01.i1168, 0x4007154760000000, !dbg !63
  %1535 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1534) #5, !dbg !63
  %1536 = fadd float %1535, 1.000000e+00, !dbg !63
  %1537 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1536) #6, !dbg !63, !srcloc !64
  %1538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1170 = icmp eq i32 %1538, 0, !dbg !63
  %1539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1537, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1540 = tail call float @llvm.nvvm.fma.rn.f(float %1537, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1171 = select i1 %.not6.i1170, float %1540, float %1539, !dbg !63
  %1541 = fcmp oge float %.01.i1168, 0x4022059680000000, !dbg !63
  %s.0.i1172 = select i1 %1541, float 1.000000e+00, float %.03.i1171, !dbg !63
  %1542 = bitcast float %s.0.i1172 to i32, !dbg !63
  %1543 = bitcast float %698 to i32, !dbg !63
  %1544 = and i32 %1543, -2147483648, !dbg !63
  %1545 = or i32 %1544, %1542, !dbg !63
  %1546 = bitcast i32 %1545 to float, !dbg !63
  br label %__nv_tanhf.exit1185, !dbg !63

__internal_fmad.exit3.i1174:                      ; preds = %__nv_tanhf.exit1166
  %1547 = fmul float %698, %698, !dbg !63
  %1548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1175 = icmp eq i32 %1548, 0, !dbg !63
  %1549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1547, float 0xBFAAC795C0000000) #5, !dbg !63
  %1550 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1547, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1176 = select i1 %.not1.i1175, float %1550, float %1549, !dbg !63
  %1551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1177 = icmp eq i32 %1551, 0, !dbg !63
  %1552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1176, float %1547, float 0x3FC10B2820000000) #5, !dbg !63
  %1553 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1176, float %1547, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1178 = select i1 %.not2.i1177, float %1553, float %1552, !dbg !63
  %1554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1179 = icmp eq i32 %1554, 0, !dbg !63
  %1555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1178, float %1547, float 0xBFD5553DA0000000) #5, !dbg !63
  %1556 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1178, float %1547, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1180 = select i1 %.not3.i1179, float %1556, float %1555, !dbg !63
  %1557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1181 = icmp eq i32 %1557, 0, !dbg !63
  %1558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1180, float %1547, float 0.000000e+00) #5, !dbg !63
  %1559 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1180, float %1547, float 0.000000e+00) #5, !dbg !63
  %.04.i1182 = select i1 %.not4.i1181, float %1559, float %1558, !dbg !63
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1183 = icmp eq i32 %1560, 0, !dbg !63
  %1561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1182, float %698, float %698) #5, !dbg !63
  %1562 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1182, float %698, float %698) #5, !dbg !63
  %.02.i1184 = select i1 %.not5.i1183, float %1562, float %1561, !dbg !63
  br label %__nv_tanhf.exit1185, !dbg !63

__nv_tanhf.exit1185:                              ; preds = %__internal_fmad.exit1.i1169, %__internal_fmad.exit3.i1174
  %s.1.i1173 = phi float [ %1546, %__internal_fmad.exit1.i1169 ], [ %.02.i1184, %__internal_fmad.exit3.i1174 ], !dbg !63
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1186 = icmp eq i32 %1563, 0, !dbg !63
  %1564 = tail call float @llvm.nvvm.fabs.ftz.f(float %699) #5, !dbg !63
  %1565 = tail call float @llvm.nvvm.fabs.f(float %699) #5, !dbg !63
  %.01.i1187 = select i1 %.not.i1186, float %1565, float %1564, !dbg !63
  %1566 = fcmp ult float %.01.i1187, 0x3FE3333340000000, !dbg !63
  br i1 %1566, label %__internal_fmad.exit3.i1193, label %__internal_fmad.exit1.i1188, !dbg !63

__internal_fmad.exit1.i1188:                      ; preds = %__nv_tanhf.exit1185
  %1567 = fmul float %.01.i1187, 0x4007154760000000, !dbg !63
  %1568 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1567) #5, !dbg !63
  %1569 = fadd float %1568, 1.000000e+00, !dbg !63
  %1570 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1569) #6, !dbg !63, !srcloc !64
  %1571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1189 = icmp eq i32 %1571, 0, !dbg !63
  %1572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1570, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1573 = tail call float @llvm.nvvm.fma.rn.f(float %1570, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1190 = select i1 %.not6.i1189, float %1573, float %1572, !dbg !63
  %1574 = fcmp oge float %.01.i1187, 0x4022059680000000, !dbg !63
  %s.0.i1191 = select i1 %1574, float 1.000000e+00, float %.03.i1190, !dbg !63
  %1575 = bitcast float %s.0.i1191 to i32, !dbg !63
  %1576 = bitcast float %699 to i32, !dbg !63
  %1577 = and i32 %1576, -2147483648, !dbg !63
  %1578 = or i32 %1577, %1575, !dbg !63
  %1579 = bitcast i32 %1578 to float, !dbg !63
  br label %__nv_tanhf.exit1204, !dbg !63

__internal_fmad.exit3.i1193:                      ; preds = %__nv_tanhf.exit1185
  %1580 = fmul float %699, %699, !dbg !63
  %1581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1194 = icmp eq i32 %1581, 0, !dbg !63
  %1582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1580, float 0xBFAAC795C0000000) #5, !dbg !63
  %1583 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1580, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1195 = select i1 %.not1.i1194, float %1583, float %1582, !dbg !63
  %1584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1196 = icmp eq i32 %1584, 0, !dbg !63
  %1585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1195, float %1580, float 0x3FC10B2820000000) #5, !dbg !63
  %1586 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1195, float %1580, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1197 = select i1 %.not2.i1196, float %1586, float %1585, !dbg !63
  %1587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1198 = icmp eq i32 %1587, 0, !dbg !63
  %1588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1197, float %1580, float 0xBFD5553DA0000000) #5, !dbg !63
  %1589 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1197, float %1580, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1199 = select i1 %.not3.i1198, float %1589, float %1588, !dbg !63
  %1590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1200 = icmp eq i32 %1590, 0, !dbg !63
  %1591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1199, float %1580, float 0.000000e+00) #5, !dbg !63
  %1592 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1199, float %1580, float 0.000000e+00) #5, !dbg !63
  %.04.i1201 = select i1 %.not4.i1200, float %1592, float %1591, !dbg !63
  %1593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1202 = icmp eq i32 %1593, 0, !dbg !63
  %1594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1201, float %699, float %699) #5, !dbg !63
  %1595 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1201, float %699, float %699) #5, !dbg !63
  %.02.i1203 = select i1 %.not5.i1202, float %1595, float %1594, !dbg !63
  br label %__nv_tanhf.exit1204, !dbg !63

__nv_tanhf.exit1204:                              ; preds = %__internal_fmad.exit1.i1188, %__internal_fmad.exit3.i1193
  %s.1.i1192 = phi float [ %1579, %__internal_fmad.exit1.i1188 ], [ %.02.i1203, %__internal_fmad.exit3.i1193 ], !dbg !63
  %1596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1205 = icmp eq i32 %1596, 0, !dbg !63
  %1597 = tail call float @llvm.nvvm.fabs.ftz.f(float %700) #5, !dbg !63
  %1598 = tail call float @llvm.nvvm.fabs.f(float %700) #5, !dbg !63
  %.01.i1206 = select i1 %.not.i1205, float %1598, float %1597, !dbg !63
  %1599 = fcmp ult float %.01.i1206, 0x3FE3333340000000, !dbg !63
  br i1 %1599, label %__internal_fmad.exit3.i1212, label %__internal_fmad.exit1.i1207, !dbg !63

__internal_fmad.exit1.i1207:                      ; preds = %__nv_tanhf.exit1204
  %1600 = fmul float %.01.i1206, 0x4007154760000000, !dbg !63
  %1601 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1600) #5, !dbg !63
  %1602 = fadd float %1601, 1.000000e+00, !dbg !63
  %1603 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1602) #6, !dbg !63, !srcloc !64
  %1604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1208 = icmp eq i32 %1604, 0, !dbg !63
  %1605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1603, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1606 = tail call float @llvm.nvvm.fma.rn.f(float %1603, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1209 = select i1 %.not6.i1208, float %1606, float %1605, !dbg !63
  %1607 = fcmp oge float %.01.i1206, 0x4022059680000000, !dbg !63
  %s.0.i1210 = select i1 %1607, float 1.000000e+00, float %.03.i1209, !dbg !63
  %1608 = bitcast float %s.0.i1210 to i32, !dbg !63
  %1609 = bitcast float %700 to i32, !dbg !63
  %1610 = and i32 %1609, -2147483648, !dbg !63
  %1611 = or i32 %1610, %1608, !dbg !63
  %1612 = bitcast i32 %1611 to float, !dbg !63
  br label %__nv_tanhf.exit1223, !dbg !63

__internal_fmad.exit3.i1212:                      ; preds = %__nv_tanhf.exit1204
  %1613 = fmul float %700, %700, !dbg !63
  %1614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1213 = icmp eq i32 %1614, 0, !dbg !63
  %1615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1613, float 0xBFAAC795C0000000) #5, !dbg !63
  %1616 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1613, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1214 = select i1 %.not1.i1213, float %1616, float %1615, !dbg !63
  %1617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1215 = icmp eq i32 %1617, 0, !dbg !63
  %1618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1214, float %1613, float 0x3FC10B2820000000) #5, !dbg !63
  %1619 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1214, float %1613, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1216 = select i1 %.not2.i1215, float %1619, float %1618, !dbg !63
  %1620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1217 = icmp eq i32 %1620, 0, !dbg !63
  %1621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1216, float %1613, float 0xBFD5553DA0000000) #5, !dbg !63
  %1622 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1216, float %1613, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1218 = select i1 %.not3.i1217, float %1622, float %1621, !dbg !63
  %1623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1219 = icmp eq i32 %1623, 0, !dbg !63
  %1624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1218, float %1613, float 0.000000e+00) #5, !dbg !63
  %1625 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1218, float %1613, float 0.000000e+00) #5, !dbg !63
  %.04.i1220 = select i1 %.not4.i1219, float %1625, float %1624, !dbg !63
  %1626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1221 = icmp eq i32 %1626, 0, !dbg !63
  %1627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1220, float %700, float %700) #5, !dbg !63
  %1628 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1220, float %700, float %700) #5, !dbg !63
  %.02.i1222 = select i1 %.not5.i1221, float %1628, float %1627, !dbg !63
  br label %__nv_tanhf.exit1223, !dbg !63

__nv_tanhf.exit1223:                              ; preds = %__internal_fmad.exit1.i1207, %__internal_fmad.exit3.i1212
  %s.1.i1211 = phi float [ %1612, %__internal_fmad.exit1.i1207 ], [ %.02.i1222, %__internal_fmad.exit3.i1212 ], !dbg !63
  %1629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1224 = icmp eq i32 %1629, 0, !dbg !63
  %1630 = tail call float @llvm.nvvm.fabs.ftz.f(float %701) #5, !dbg !63
  %1631 = tail call float @llvm.nvvm.fabs.f(float %701) #5, !dbg !63
  %.01.i1225 = select i1 %.not.i1224, float %1631, float %1630, !dbg !63
  %1632 = fcmp ult float %.01.i1225, 0x3FE3333340000000, !dbg !63
  br i1 %1632, label %__internal_fmad.exit3.i1231, label %__internal_fmad.exit1.i1226, !dbg !63

__internal_fmad.exit1.i1226:                      ; preds = %__nv_tanhf.exit1223
  %1633 = fmul float %.01.i1225, 0x4007154760000000, !dbg !63
  %1634 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1633) #5, !dbg !63
  %1635 = fadd float %1634, 1.000000e+00, !dbg !63
  %1636 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1635) #6, !dbg !63, !srcloc !64
  %1637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1227 = icmp eq i32 %1637, 0, !dbg !63
  %1638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1636, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1639 = tail call float @llvm.nvvm.fma.rn.f(float %1636, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1228 = select i1 %.not6.i1227, float %1639, float %1638, !dbg !63
  %1640 = fcmp oge float %.01.i1225, 0x4022059680000000, !dbg !63
  %s.0.i1229 = select i1 %1640, float 1.000000e+00, float %.03.i1228, !dbg !63
  %1641 = bitcast float %s.0.i1229 to i32, !dbg !63
  %1642 = bitcast float %701 to i32, !dbg !63
  %1643 = and i32 %1642, -2147483648, !dbg !63
  %1644 = or i32 %1643, %1641, !dbg !63
  %1645 = bitcast i32 %1644 to float, !dbg !63
  br label %__nv_tanhf.exit1242, !dbg !63

__internal_fmad.exit3.i1231:                      ; preds = %__nv_tanhf.exit1223
  %1646 = fmul float %701, %701, !dbg !63
  %1647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1232 = icmp eq i32 %1647, 0, !dbg !63
  %1648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1646, float 0xBFAAC795C0000000) #5, !dbg !63
  %1649 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1646, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1233 = select i1 %.not1.i1232, float %1649, float %1648, !dbg !63
  %1650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1234 = icmp eq i32 %1650, 0, !dbg !63
  %1651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1233, float %1646, float 0x3FC10B2820000000) #5, !dbg !63
  %1652 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1233, float %1646, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1235 = select i1 %.not2.i1234, float %1652, float %1651, !dbg !63
  %1653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1236 = icmp eq i32 %1653, 0, !dbg !63
  %1654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1235, float %1646, float 0xBFD5553DA0000000) #5, !dbg !63
  %1655 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1235, float %1646, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1237 = select i1 %.not3.i1236, float %1655, float %1654, !dbg !63
  %1656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1238 = icmp eq i32 %1656, 0, !dbg !63
  %1657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1237, float %1646, float 0.000000e+00) #5, !dbg !63
  %1658 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1237, float %1646, float 0.000000e+00) #5, !dbg !63
  %.04.i1239 = select i1 %.not4.i1238, float %1658, float %1657, !dbg !63
  %1659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1240 = icmp eq i32 %1659, 0, !dbg !63
  %1660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1239, float %701, float %701) #5, !dbg !63
  %1661 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1239, float %701, float %701) #5, !dbg !63
  %.02.i1241 = select i1 %.not5.i1240, float %1661, float %1660, !dbg !63
  br label %__nv_tanhf.exit1242, !dbg !63

__nv_tanhf.exit1242:                              ; preds = %__internal_fmad.exit1.i1226, %__internal_fmad.exit3.i1231
  %s.1.i1230 = phi float [ %1645, %__internal_fmad.exit1.i1226 ], [ %.02.i1241, %__internal_fmad.exit3.i1231 ], !dbg !63
  %1662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1243 = icmp eq i32 %1662, 0, !dbg !63
  %1663 = tail call float @llvm.nvvm.fabs.ftz.f(float %702) #5, !dbg !63
  %1664 = tail call float @llvm.nvvm.fabs.f(float %702) #5, !dbg !63
  %.01.i1244 = select i1 %.not.i1243, float %1664, float %1663, !dbg !63
  %1665 = fcmp ult float %.01.i1244, 0x3FE3333340000000, !dbg !63
  br i1 %1665, label %__internal_fmad.exit3.i1250, label %__internal_fmad.exit1.i1245, !dbg !63

__internal_fmad.exit1.i1245:                      ; preds = %__nv_tanhf.exit1242
  %1666 = fmul float %.01.i1244, 0x4007154760000000, !dbg !63
  %1667 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1666) #5, !dbg !63
  %1668 = fadd float %1667, 1.000000e+00, !dbg !63
  %1669 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1668) #6, !dbg !63, !srcloc !64
  %1670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1246 = icmp eq i32 %1670, 0, !dbg !63
  %1671 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1669, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1672 = tail call float @llvm.nvvm.fma.rn.f(float %1669, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1247 = select i1 %.not6.i1246, float %1672, float %1671, !dbg !63
  %1673 = fcmp oge float %.01.i1244, 0x4022059680000000, !dbg !63
  %s.0.i1248 = select i1 %1673, float 1.000000e+00, float %.03.i1247, !dbg !63
  %1674 = bitcast float %s.0.i1248 to i32, !dbg !63
  %1675 = bitcast float %702 to i32, !dbg !63
  %1676 = and i32 %1675, -2147483648, !dbg !63
  %1677 = or i32 %1676, %1674, !dbg !63
  %1678 = bitcast i32 %1677 to float, !dbg !63
  br label %__nv_tanhf.exit1261, !dbg !63

__internal_fmad.exit3.i1250:                      ; preds = %__nv_tanhf.exit1242
  %1679 = fmul float %702, %702, !dbg !63
  %1680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1251 = icmp eq i32 %1680, 0, !dbg !63
  %1681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1679, float 0xBFAAC795C0000000) #5, !dbg !63
  %1682 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1679, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1252 = select i1 %.not1.i1251, float %1682, float %1681, !dbg !63
  %1683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1253 = icmp eq i32 %1683, 0, !dbg !63
  %1684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1252, float %1679, float 0x3FC10B2820000000) #5, !dbg !63
  %1685 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1252, float %1679, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1254 = select i1 %.not2.i1253, float %1685, float %1684, !dbg !63
  %1686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1255 = icmp eq i32 %1686, 0, !dbg !63
  %1687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1254, float %1679, float 0xBFD5553DA0000000) #5, !dbg !63
  %1688 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1254, float %1679, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1256 = select i1 %.not3.i1255, float %1688, float %1687, !dbg !63
  %1689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1257 = icmp eq i32 %1689, 0, !dbg !63
  %1690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1256, float %1679, float 0.000000e+00) #5, !dbg !63
  %1691 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1256, float %1679, float 0.000000e+00) #5, !dbg !63
  %.04.i1258 = select i1 %.not4.i1257, float %1691, float %1690, !dbg !63
  %1692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1259 = icmp eq i32 %1692, 0, !dbg !63
  %1693 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1258, float %702, float %702) #5, !dbg !63
  %1694 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1258, float %702, float %702) #5, !dbg !63
  %.02.i1260 = select i1 %.not5.i1259, float %1694, float %1693, !dbg !63
  br label %__nv_tanhf.exit1261, !dbg !63

__nv_tanhf.exit1261:                              ; preds = %__internal_fmad.exit1.i1245, %__internal_fmad.exit3.i1250
  %s.1.i1249 = phi float [ %1678, %__internal_fmad.exit1.i1245 ], [ %.02.i1260, %__internal_fmad.exit3.i1250 ], !dbg !63
  %1695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1262 = icmp eq i32 %1695, 0, !dbg !63
  %1696 = tail call float @llvm.nvvm.fabs.ftz.f(float %703) #5, !dbg !63
  %1697 = tail call float @llvm.nvvm.fabs.f(float %703) #5, !dbg !63
  %.01.i1263 = select i1 %.not.i1262, float %1697, float %1696, !dbg !63
  %1698 = fcmp ult float %.01.i1263, 0x3FE3333340000000, !dbg !63
  br i1 %1698, label %__internal_fmad.exit3.i1269, label %__internal_fmad.exit1.i1264, !dbg !63

__internal_fmad.exit1.i1264:                      ; preds = %__nv_tanhf.exit1261
  %1699 = fmul float %.01.i1263, 0x4007154760000000, !dbg !63
  %1700 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1699) #5, !dbg !63
  %1701 = fadd float %1700, 1.000000e+00, !dbg !63
  %1702 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1701) #6, !dbg !63, !srcloc !64
  %1703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1265 = icmp eq i32 %1703, 0, !dbg !63
  %1704 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1702, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1705 = tail call float @llvm.nvvm.fma.rn.f(float %1702, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1266 = select i1 %.not6.i1265, float %1705, float %1704, !dbg !63
  %1706 = fcmp oge float %.01.i1263, 0x4022059680000000, !dbg !63
  %s.0.i1267 = select i1 %1706, float 1.000000e+00, float %.03.i1266, !dbg !63
  %1707 = bitcast float %s.0.i1267 to i32, !dbg !63
  %1708 = bitcast float %703 to i32, !dbg !63
  %1709 = and i32 %1708, -2147483648, !dbg !63
  %1710 = or i32 %1709, %1707, !dbg !63
  %1711 = bitcast i32 %1710 to float, !dbg !63
  br label %__nv_tanhf.exit1280, !dbg !63

__internal_fmad.exit3.i1269:                      ; preds = %__nv_tanhf.exit1261
  %1712 = fmul float %703, %703, !dbg !63
  %1713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1270 = icmp eq i32 %1713, 0, !dbg !63
  %1714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1712, float 0xBFAAC795C0000000) #5, !dbg !63
  %1715 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1712, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1271 = select i1 %.not1.i1270, float %1715, float %1714, !dbg !63
  %1716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1272 = icmp eq i32 %1716, 0, !dbg !63
  %1717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1271, float %1712, float 0x3FC10B2820000000) #5, !dbg !63
  %1718 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1271, float %1712, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1273 = select i1 %.not2.i1272, float %1718, float %1717, !dbg !63
  %1719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1274 = icmp eq i32 %1719, 0, !dbg !63
  %1720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1273, float %1712, float 0xBFD5553DA0000000) #5, !dbg !63
  %1721 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1273, float %1712, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1275 = select i1 %.not3.i1274, float %1721, float %1720, !dbg !63
  %1722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1276 = icmp eq i32 %1722, 0, !dbg !63
  %1723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1275, float %1712, float 0.000000e+00) #5, !dbg !63
  %1724 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1275, float %1712, float 0.000000e+00) #5, !dbg !63
  %.04.i1277 = select i1 %.not4.i1276, float %1724, float %1723, !dbg !63
  %1725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1278 = icmp eq i32 %1725, 0, !dbg !63
  %1726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1277, float %703, float %703) #5, !dbg !63
  %1727 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1277, float %703, float %703) #5, !dbg !63
  %.02.i1279 = select i1 %.not5.i1278, float %1727, float %1726, !dbg !63
  br label %__nv_tanhf.exit1280, !dbg !63

__nv_tanhf.exit1280:                              ; preds = %__internal_fmad.exit1.i1264, %__internal_fmad.exit3.i1269
  %s.1.i1268 = phi float [ %1711, %__internal_fmad.exit1.i1264 ], [ %.02.i1279, %__internal_fmad.exit3.i1269 ], !dbg !63
  %1728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not.i1281 = icmp eq i32 %1728, 0, !dbg !63
  %1729 = tail call float @llvm.nvvm.fabs.ftz.f(float %704) #5, !dbg !63
  %1730 = tail call float @llvm.nvvm.fabs.f(float %704) #5, !dbg !63
  %.01.i1282 = select i1 %.not.i1281, float %1730, float %1729, !dbg !63
  %1731 = fcmp ult float %.01.i1282, 0x3FE3333340000000, !dbg !63
  br i1 %1731, label %__internal_fmad.exit3.i1288, label %__internal_fmad.exit1.i1283, !dbg !63

__internal_fmad.exit1.i1283:                      ; preds = %__nv_tanhf.exit1280
  %1732 = fmul float %.01.i1282, 0x4007154760000000, !dbg !63
  %1733 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1732) #5, !dbg !63
  %1734 = fadd float %1733, 1.000000e+00, !dbg !63
  %1735 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1734) #6, !dbg !63, !srcloc !64
  %1736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not6.i1284 = icmp eq i32 %1736, 0, !dbg !63
  %1737 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1735, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %1738 = tail call float @llvm.nvvm.fma.rn.f(float %1735, float -2.000000e+00, float 1.000000e+00) #5, !dbg !63
  %.03.i1285 = select i1 %.not6.i1284, float %1738, float %1737, !dbg !63
  %1739 = fcmp oge float %.01.i1282, 0x4022059680000000, !dbg !63
  %s.0.i1286 = select i1 %1739, float 1.000000e+00, float %.03.i1285, !dbg !63
  %1740 = bitcast float %s.0.i1286 to i32, !dbg !63
  %1741 = bitcast float %704 to i32, !dbg !63
  %1742 = and i32 %1741, -2147483648, !dbg !63
  %1743 = or i32 %1742, %1740, !dbg !63
  %1744 = bitcast i32 %1743 to float, !dbg !63
  br label %__nv_tanhf.exit1299, !dbg !63

__internal_fmad.exit3.i1288:                      ; preds = %__nv_tanhf.exit1280
  %1745 = fmul float %704, %704, !dbg !63
  %1746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not1.i1289 = icmp eq i32 %1746, 0, !dbg !63
  %1747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1745, float 0xBFAAC795C0000000) #5, !dbg !63
  %1748 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1745, float 0xBFAAC795C0000000) #5, !dbg !63
  %.06.i1290 = select i1 %.not1.i1289, float %1748, float %1747, !dbg !63
  %1749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not2.i1291 = icmp eq i32 %1749, 0, !dbg !63
  %1750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1290, float %1745, float 0x3FC10B2820000000) #5, !dbg !63
  %1751 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1290, float %1745, float 0x3FC10B2820000000) #5, !dbg !63
  %.05.i1292 = select i1 %.not2.i1291, float %1751, float %1750, !dbg !63
  %1752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not3.i1293 = icmp eq i32 %1752, 0, !dbg !63
  %1753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1292, float %1745, float 0xBFD5553DA0000000) #5, !dbg !63
  %1754 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1292, float %1745, float 0xBFD5553DA0000000) #5, !dbg !63
  %.0.i1294 = select i1 %.not3.i1293, float %1754, float %1753, !dbg !63
  %1755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not4.i1295 = icmp eq i32 %1755, 0, !dbg !63
  %1756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1294, float %1745, float 0.000000e+00) #5, !dbg !63
  %1757 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1294, float %1745, float 0.000000e+00) #5, !dbg !63
  %.04.i1296 = select i1 %.not4.i1295, float %1757, float %1756, !dbg !63
  %1758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !63
  %.not5.i1297 = icmp eq i32 %1758, 0, !dbg !63
  %1759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1296, float %704, float %704) #5, !dbg !63
  %1760 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1296, float %704, float %704) #5, !dbg !63
  %.02.i1298 = select i1 %.not5.i1297, float %1760, float %1759, !dbg !63
  br label %__nv_tanhf.exit1299, !dbg !63

__nv_tanhf.exit1299:                              ; preds = %__internal_fmad.exit1.i1283, %__internal_fmad.exit3.i1288
  %s.1.i1287 = phi float [ %1744, %__internal_fmad.exit1.i1283 ], [ %.02.i1298, %__internal_fmad.exit3.i1288 ], !dbg !63
  %1761 = insertelement <4 x float> poison, float %s.1.i1002, i64 0, !dbg !65
  %1762 = insertelement <4 x float> %1761, float %s.1.i698, i64 1, !dbg !65
  %1763 = insertelement <4 x float> %1762, float %s.1.i1021, i64 2, !dbg !65
  %1764 = insertelement <4 x float> %1763, float %s.1.i717, i64 3, !dbg !65
  %1765 = fadd <4 x float> %1764, splat (float 1.000000e+00), !dbg !65
  %1766 = insertelement <4 x float> poison, float %s.1.i793, i64 0, !dbg !65
  %1767 = insertelement <4 x float> %1766, float %s.1.i774, i64 1, !dbg !65
  %1768 = insertelement <4 x float> %1767, float %s.1.i755, i64 2, !dbg !65
  %1769 = insertelement <4 x float> %1768, float %s.1.i736, i64 3, !dbg !65
  %1770 = fadd <4 x float> %1769, splat (float 1.000000e+00), !dbg !65
  %1771 = insertelement <8 x float> poison, float %s.1.i945, i64 0, !dbg !65
  %1772 = insertelement <8 x float> %1771, float %s.1.i926, i64 1, !dbg !65
  %1773 = insertelement <8 x float> %1772, float %s.1.i907, i64 2, !dbg !65
  %1774 = insertelement <8 x float> %1773, float %s.1.i888, i64 3, !dbg !65
  %1775 = insertelement <8 x float> %1774, float %s.1.i869, i64 4, !dbg !65
  %1776 = insertelement <8 x float> %1775, float %s.1.i850, i64 5, !dbg !65
  %1777 = insertelement <8 x float> %1776, float %s.1.i831, i64 6, !dbg !65
  %1778 = insertelement <8 x float> %1777, float %s.1.i812, i64 7, !dbg !65
  %1779 = fadd <8 x float> %1778, splat (float 1.000000e+00), !dbg !65
  %1780 = insertelement <16 x float> poison, float %s.1.i1287, i64 0, !dbg !65
  %1781 = insertelement <16 x float> %1780, float %s.1.i1268, i64 1, !dbg !65
  %1782 = insertelement <16 x float> %1781, float %s.1.i1249, i64 2, !dbg !65
  %1783 = insertelement <16 x float> %1782, float %s.1.i1230, i64 3, !dbg !65
  %1784 = insertelement <16 x float> %1783, float %s.1.i1211, i64 4, !dbg !65
  %1785 = insertelement <16 x float> %1784, float %s.1.i1192, i64 5, !dbg !65
  %1786 = insertelement <16 x float> %1785, float %s.1.i1173, i64 6, !dbg !65
  %1787 = insertelement <16 x float> %1786, float %s.1.i1154, i64 7, !dbg !65
  %1788 = insertelement <16 x float> %1787, float %s.1.i1135, i64 8, !dbg !65
  %1789 = insertelement <16 x float> %1788, float %s.1.i1116, i64 9, !dbg !65
  %1790 = insertelement <16 x float> %1789, float %s.1.i1097, i64 10, !dbg !65
  %1791 = insertelement <16 x float> %1790, float %s.1.i1078, i64 11, !dbg !65
  %1792 = insertelement <16 x float> %1791, float %s.1.i1059, i64 12, !dbg !65
  %1793 = insertelement <16 x float> %1792, float %s.1.i1040, i64 13, !dbg !65
  %1794 = insertelement <16 x float> %1793, float %s.1.i983, i64 14, !dbg !65
  %1795 = insertelement <16 x float> %1794, float %s.1.i964, i64 15, !dbg !65
  %1796 = fadd <16 x float> %1795, splat (float 1.000000e+00), !dbg !65
  %1797 = fcmp uno <4 x float> %167, zeroinitializer, !dbg !66
  %1798 = fcmp uno <4 x float> %166, zeroinitializer, !dbg !66
  %1799 = fcmp uno <16 x float> %171, zeroinitializer, !dbg !66
  %1800 = fcmp uno <16 x float> %168, zeroinitializer, !dbg !68
  %1801 = fmul <16 x float> %512, %1796, !dbg !70
  %1802 = fcmp olt <16 x float> %168, %1801, !dbg !71
  %1803 = or <16 x i1> %1800, %1802, !dbg !72
  %1804 = select <16 x i1> %1803, <16 x float> %168, <16 x float> %1801, !dbg !73
  %1805 = insertelement <16 x i1> %162, i1 %227, i64 0, !dbg !39
  %1806 = insertelement <16 x i1> %1805, i1 %226, i64 14, !dbg !39
  %1807 = shufflevector <16 x i1> %1806, <16 x i1> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 14>, !dbg !39
  %1808 = select <16 x i1> %1807, <16 x float> %1804, <16 x float> %168, !dbg !39
  %1809 = fcmp uno <8 x float> %170, zeroinitializer, !dbg !66
  %1810 = fcmp uno <16 x float> %169, zeroinitializer, !dbg !66
  %1811 = fmul <8 x float> %510, %1779, !dbg !70
  %1812 = fmul <4 x float> %509, %1770, !dbg !70
  %1813 = shufflevector <8 x float> %1811, <8 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !74
  %1814 = shufflevector <4 x float> %1812, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1815 = shufflevector <8 x float> %1811, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1816 = shufflevector <16 x float> %1814, <16 x float> %1815, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1817 = shufflevector <4 x float> %1813, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1818 = shufflevector <16 x float> %1816, <16 x float> %1817, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1819 = shufflevector <4 x float> %1812, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !74
  %1820 = shufflevector <16 x float> %1818, <16 x float> %1819, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 17, i32 18, i32 19>, !dbg !74
  %1821 = fcmp ogt <16 x float> %171, %1820, !dbg !74
  %1822 = fcmp olt <16 x float> %171, %1820, !dbg !74
  %1823 = shufflevector <16 x i1> %1821, <16 x i1> %1822, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>, !dbg !74
  %1824 = or <16 x i1> %1799, %1823, !dbg !75
  %1825 = shufflevector <4 x float> %1812, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1826 = shufflevector <8 x float> %1811, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1827 = shufflevector <16 x float> %1825, <16 x float> %1826, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1828 = shufflevector <4 x float> %1813, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1829 = shufflevector <16 x float> %1827, <16 x float> %1828, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1830 = shufflevector <4 x float> %1812, <4 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !76
  %1831 = shufflevector <16 x float> %1829, <16 x float> %1830, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 17, i32 18, i32 19>, !dbg !76
  %1832 = select <16 x i1> %1824, <16 x float> %171, <16 x float> %1831, !dbg !76
  %1833 = fcmp ogt <8 x float> %170, %1811, !dbg !74
  %1834 = or <8 x i1> %1809, %1833, !dbg !75
  %1835 = select <8 x i1> %1834, <8 x float> %170, <8 x float> %1811, !dbg !76
  %1836 = fmul <4 x float> %511, %1765, !dbg !70
  %1837 = shufflevector <4 x float> %1836, <4 x float> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>, !dbg !74
  %1838 = fcmp ogt <4 x float> %167, %1837, !dbg !74
  %1839 = fcmp olt <4 x float> %167, %1837, !dbg !74
  %1840 = shufflevector <4 x i1> %1838, <4 x i1> %1839, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !74
  %1841 = or <4 x i1> %1797, %1840, !dbg !75
  %1842 = select <4 x i1> %1841, <4 x float> %167, <4 x float> %1837, !dbg !76
  %1843 = fcmp ogt <4 x float> %166, %1836, !dbg !74
  %1844 = fcmp olt <4 x float> %166, %1836, !dbg !74
  %1845 = shufflevector <4 x i1> %1843, <4 x i1> %1844, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !74
  %1846 = or <4 x i1> %1798, %1845, !dbg !75
  %1847 = select <4 x i1> %1846, <4 x float> %166, <4 x float> %1836, !dbg !76
  %1848 = fcmp ogt <16 x float> %169, %1801, !dbg !74
  %1849 = or <16 x i1> %1810, %1848, !dbg !75
  %1850 = select <16 x i1> %1849, <16 x float> %169, <16 x float> %1801, !dbg !76
  %1851 = insertelement <2 x i1> %163, i1 %226, i64 1, !dbg !40
  %1852 = shufflevector <2 x i1> %1851, <2 x i1> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, !dbg !40
  %1853 = select <16 x i1> %1852, <16 x float> %1832, <16 x float> %171, !dbg !40
  %1854 = insertelement <2 x i1> %21, i1 %226, i64 0, !dbg !40
  %1855 = shufflevector <2 x i1> %1854, <2 x i1> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1>, !dbg !40
  %1856 = select <8 x i1> %1855, <8 x float> %1835, <8 x float> %170, !dbg !40
  %1857 = select <4 x i1> %22, <4 x float> %1847, <4 x float> %166, !dbg !40
  %1858 = select <4 x i1> %22, <4 x float> %1842, <4 x float> %167, !dbg !40
  %1859 = select <16 x i1> %1807, <16 x float> %1850, <16 x float> %169, !dbg !40
  %1860 = sext i32 %198 to i64, !dbg !77
  %1861 = getelementptr float, ptr addrspace(1) %5, i64 %1860, !dbg !77
  %1862 = sext i32 %201 to i64, !dbg !77
  %1863 = getelementptr float, ptr addrspace(1) %5, i64 %1862, !dbg !77
  %1864 = sext i32 %203 to i64, !dbg !77
  %1865 = getelementptr float, ptr addrspace(1) %5, i64 %1864, !dbg !77
  %1866 = sext i32 %205 to i64, !dbg !77
  %1867 = getelementptr float, ptr addrspace(1) %5, i64 %1866, !dbg !77
  %1868 = sext i32 %206 to i64, !dbg !77
  %1869 = getelementptr float, ptr addrspace(1) %5, i64 %1868, !dbg !77
  %1870 = sext i32 %207 to i64, !dbg !77
  %1871 = getelementptr float, ptr addrspace(1) %5, i64 %1870, !dbg !77
  %1872 = sext i32 %208 to i64, !dbg !77
  %1873 = getelementptr float, ptr addrspace(1) %5, i64 %1872, !dbg !77
  %1874 = sext i32 %209 to i64, !dbg !77
  %1875 = getelementptr float, ptr addrspace(1) %5, i64 %1874, !dbg !77
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1876 = bitcast float %513 to i32, !dbg !78
  %1877 = bitcast float %515 to i32, !dbg !78
  %1878 = bitcast float %517 to i32, !dbg !78
  %1879 = bitcast float %519 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %145, i32 %1876, i32 %1877, i32 %1878, i32 %1879, i1 true) #5, !dbg !78
  %1880 = bitcast float %521 to i32, !dbg !78
  %1881 = bitcast float %523 to i32, !dbg !78
  %1882 = bitcast float %525 to i32, !dbg !78
  %1883 = bitcast float %527 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %147, i32 %1880, i32 %1881, i32 %1882, i32 %1883, i1 true) #5, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1884 = load <4 x i32>, ptr addrspace(3) %151, align 16, !dbg !78
  %1885 = load <4 x i32>, ptr addrspace(3) %152, align 16, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1886 = bitcast float %529 to i32, !dbg !78
  %1887 = bitcast float %531 to i32, !dbg !78
  %1888 = bitcast float %533 to i32, !dbg !78
  %1889 = bitcast float %535 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %145, i32 %1886, i32 %1887, i32 %1888, i32 %1889, i1 true) #5, !dbg !78
  %1890 = bitcast float %537 to i32, !dbg !78
  %1891 = bitcast float %539 to i32, !dbg !78
  %1892 = bitcast float %541 to i32, !dbg !78
  %1893 = bitcast float %543 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %147, i32 %1890, i32 %1891, i32 %1892, i32 %1893, i1 true) #5, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1894 = load <4 x i32>, ptr addrspace(3) %151, align 16, !dbg !78
  %1895 = load <4 x i32>, ptr addrspace(3) %152, align 16, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1896 = bitcast float %545 to i32, !dbg !78
  %1897 = bitcast float %547 to i32, !dbg !78
  %1898 = bitcast float %549 to i32, !dbg !78
  %1899 = bitcast float %551 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %145, i32 %1896, i32 %1897, i32 %1898, i32 %1899, i1 true) #5, !dbg !78
  %1900 = bitcast float %553 to i32, !dbg !78
  %1901 = bitcast float %555 to i32, !dbg !78
  %1902 = bitcast float %557 to i32, !dbg !78
  %1903 = bitcast float %559 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %147, i32 %1900, i32 %1901, i32 %1902, i32 %1903, i1 true) #5, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1904 = load <4 x i32>, ptr addrspace(3) %151, align 16, !dbg !78
  %1905 = load <4 x i32>, ptr addrspace(3) %152, align 16, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1906 = bitcast float %561 to i32, !dbg !78
  %1907 = bitcast float %563 to i32, !dbg !78
  %1908 = bitcast float %565 to i32, !dbg !78
  %1909 = bitcast float %567 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %145, i32 %1906, i32 %1907, i32 %1908, i32 %1909, i1 true) #5, !dbg !78
  %1910 = bitcast float %569 to i32, !dbg !78
  %1911 = bitcast float %571 to i32, !dbg !78
  %1912 = bitcast float %573 to i32, !dbg !78
  %1913 = bitcast float %575 to i32, !dbg !78
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %147, i32 %1910, i32 %1911, i32 %1912, i32 %1913, i1 true) #5, !dbg !78
  tail call void @llvm.nvvm.barrier0(), !dbg !78
  %1914 = load <4 x i32>, ptr addrspace(3) %151, align 16, !dbg !78
  %1915 = load <4 x i32>, ptr addrspace(3) %152, align 16, !dbg !78
  %.extract = extractelement <4 x i32> %1884, i64 0, !dbg !78
  %.extract72 = extractelement <4 x i32> %1884, i64 1, !dbg !78
  %.extract73 = extractelement <4 x i32> %1884, i64 2, !dbg !78
  %.extract74 = extractelement <4 x i32> %1884, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract72, i32 %.extract73, i32 %.extract74, ptr addrspace(1) %1861, i1 %39) #5, !dbg !78
  %.extract75 = extractelement <4 x i32> %1885, i64 0, !dbg !78
  %.extract76 = extractelement <4 x i32> %1885, i64 1, !dbg !78
  %.extract77 = extractelement <4 x i32> %1885, i64 2, !dbg !78
  %.extract78 = extractelement <4 x i32> %1885, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract75, i32 %.extract76, i32 %.extract77, i32 %.extract78, ptr addrspace(1) %1863, i1 %39) #5, !dbg !78
  %.extract79 = extractelement <4 x i32> %1894, i64 0, !dbg !78
  %.extract80 = extractelement <4 x i32> %1894, i64 1, !dbg !78
  %.extract81 = extractelement <4 x i32> %1894, i64 2, !dbg !78
  %.extract82 = extractelement <4 x i32> %1894, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract79, i32 %.extract80, i32 %.extract81, i32 %.extract82, ptr addrspace(1) %1865, i1 %229) #5, !dbg !78
  %.extract83 = extractelement <4 x i32> %1895, i64 0, !dbg !78
  %.extract84 = extractelement <4 x i32> %1895, i64 1, !dbg !78
  %.extract85 = extractelement <4 x i32> %1895, i64 2, !dbg !78
  %.extract86 = extractelement <4 x i32> %1895, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract83, i32 %.extract84, i32 %.extract85, i32 %.extract86, ptr addrspace(1) %1867, i1 %230) #5, !dbg !78
  %.extract87 = extractelement <4 x i32> %1904, i64 0, !dbg !78
  %.extract88 = extractelement <4 x i32> %1904, i64 1, !dbg !78
  %.extract89 = extractelement <4 x i32> %1904, i64 2, !dbg !78
  %.extract90 = extractelement <4 x i32> %1904, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract87, i32 %.extract88, i32 %.extract89, i32 %.extract90, ptr addrspace(1) %1869, i1 %57) #5, !dbg !78
  %.extract91 = extractelement <4 x i32> %1905, i64 0, !dbg !78
  %.extract92 = extractelement <4 x i32> %1905, i64 1, !dbg !78
  %.extract93 = extractelement <4 x i32> %1905, i64 2, !dbg !78
  %.extract94 = extractelement <4 x i32> %1905, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract91, i32 %.extract92, i32 %.extract93, i32 %.extract94, ptr addrspace(1) %1871, i1 %57) #5, !dbg !78
  %.extract95 = extractelement <4 x i32> %1914, i64 0, !dbg !78
  %.extract96 = extractelement <4 x i32> %1914, i64 1, !dbg !78
  %.extract97 = extractelement <4 x i32> %1914, i64 2, !dbg !78
  %.extract98 = extractelement <4 x i32> %1914, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract95, i32 %.extract96, i32 %.extract97, i32 %.extract98, ptr addrspace(1) %1873, i1 %231) #5, !dbg !78
  %.extract99 = extractelement <4 x i32> %1915, i64 0, !dbg !78
  %.extract100 = extractelement <4 x i32> %1915, i64 1, !dbg !78
  %.extract101 = extractelement <4 x i32> %1915, i64 2, !dbg !78
  %.extract102 = extractelement <4 x i32> %1915, i64 3, !dbg !78
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract99, i32 %.extract100, i32 %.extract101, i32 %.extract102, ptr addrspace(1) %1875, i1 %232) #5, !dbg !78
  br i1 %165, label %164, label %1916, !dbg !38

1916:                                             ; preds = %__nv_tanhf.exit1299
  %1917 = and i32 %15, 31, !dbg !11
  %1918 = lshr i32 %15, 5, !dbg !14
  tail call void @llvm.nvvm.barrier0(), !dbg !79
  %1919 = fcmp ogt <4 x float> %1857, %1858, !dbg !81
  %1920 = extractelement <4 x float> %1858, i64 3, !dbg !84
  %1921 = fcmp uno float %1920, 0.000000e+00, !dbg !84
  %1922 = extractelement <4 x i1> %1919, i64 3, !dbg !85
  %1923 = or i1 %1922, %1921, !dbg !85
  %1924 = extractelement <4 x float> %1857, i64 3, !dbg !86
  %1925 = select i1 %1923, float %1920, float %1924, !dbg !86
  %1926 = extractelement <16 x float> %1853, i64 15, !dbg !87
  %1927 = fcmp olt float %1925, %1926, !dbg !87
  %1928 = fcmp uno float %1925, 0.000000e+00, !dbg !84
  %1929 = or i1 %1927, %1928, !dbg !85
  %1930 = select i1 %1929, float %1925, float %1926, !dbg !86
  %1931 = extractelement <16 x float> %1853, i64 14, !dbg !87
  %1932 = fcmp olt float %1930, %1931, !dbg !87
  %1933 = fcmp uno float %1930, 0.000000e+00, !dbg !84
  %1934 = or i1 %1932, %1933, !dbg !85
  %1935 = select i1 %1934, float %1930, float %1931, !dbg !86
  %1936 = extractelement <16 x float> %1853, i64 13, !dbg !87
  %1937 = fcmp olt float %1935, %1936, !dbg !87
  %1938 = fcmp uno float %1935, 0.000000e+00, !dbg !84
  %1939 = or i1 %1937, %1938, !dbg !85
  %1940 = select i1 %1939, float %1935, float %1936, !dbg !86
  %1941 = extractelement <16 x float> %1853, i64 12, !dbg !87
  %1942 = fcmp olt float %1940, %1941, !dbg !87
  %1943 = fcmp uno float %1940, 0.000000e+00, !dbg !84
  %1944 = or i1 %1942, %1943, !dbg !85
  %1945 = select i1 %1944, float %1940, float %1941, !dbg !86
  %1946 = extractelement <16 x float> %1853, i64 11, !dbg !87
  %1947 = fcmp olt float %1945, %1946, !dbg !87
  %1948 = fcmp uno float %1945, 0.000000e+00, !dbg !84
  %1949 = or i1 %1947, %1948, !dbg !85
  %1950 = select i1 %1949, float %1945, float %1946, !dbg !86
  %1951 = extractelement <16 x float> %1853, i64 10, !dbg !87
  %1952 = fcmp olt float %1950, %1951, !dbg !87
  %1953 = fcmp uno float %1950, 0.000000e+00, !dbg !84
  %1954 = or i1 %1952, %1953, !dbg !85
  %1955 = select i1 %1954, float %1950, float %1951, !dbg !86
  %1956 = extractelement <16 x float> %1853, i64 9, !dbg !87
  %1957 = fcmp olt float %1955, %1956, !dbg !87
  %1958 = fcmp uno float %1955, 0.000000e+00, !dbg !84
  %1959 = or i1 %1957, %1958, !dbg !85
  %1960 = select i1 %1959, float %1955, float %1956, !dbg !86
  %1961 = extractelement <16 x float> %1853, i64 8, !dbg !87
  %1962 = fcmp olt float %1960, %1961, !dbg !87
  %1963 = fcmp uno float %1960, 0.000000e+00, !dbg !84
  %1964 = or i1 %1962, %1963, !dbg !85
  %1965 = select i1 %1964, float %1960, float %1961, !dbg !86
  %1966 = extractelement <16 x float> %1853, i64 7, !dbg !87
  %1967 = fcmp olt float %1965, %1966, !dbg !87
  %1968 = fcmp uno float %1965, 0.000000e+00, !dbg !84
  %1969 = or i1 %1967, %1968, !dbg !85
  %1970 = select i1 %1969, float %1965, float %1966, !dbg !86
  %1971 = extractelement <16 x float> %1853, i64 6, !dbg !87
  %1972 = fcmp olt float %1970, %1971, !dbg !87
  %1973 = fcmp uno float %1970, 0.000000e+00, !dbg !84
  %1974 = or i1 %1972, %1973, !dbg !85
  %1975 = select i1 %1974, float %1970, float %1971, !dbg !86
  %1976 = extractelement <16 x float> %1853, i64 5, !dbg !87
  %1977 = fcmp olt float %1975, %1976, !dbg !87
  %1978 = fcmp uno float %1975, 0.000000e+00, !dbg !84
  %1979 = or i1 %1977, %1978, !dbg !85
  %1980 = select i1 %1979, float %1975, float %1976, !dbg !86
  %1981 = extractelement <16 x float> %1853, i64 4, !dbg !87
  %1982 = fcmp olt float %1980, %1981, !dbg !87
  %1983 = fcmp uno float %1980, 0.000000e+00, !dbg !84
  %1984 = or i1 %1982, %1983, !dbg !85
  %1985 = select i1 %1984, float %1980, float %1981, !dbg !86
  %1986 = extractelement <16 x float> %1808, i64 15, !dbg !87
  %1987 = fcmp olt float %1985, %1986, !dbg !87
  %1988 = fcmp uno float %1985, 0.000000e+00, !dbg !84
  %1989 = or i1 %1987, %1988, !dbg !85
  %1990 = select i1 %1989, float %1985, float %1986, !dbg !86
  %1991 = extractelement <16 x float> %1808, i64 14, !dbg !87
  %1992 = fcmp olt float %1990, %1991, !dbg !87
  %1993 = fcmp uno float %1990, 0.000000e+00, !dbg !84
  %1994 = or i1 %1992, %1993, !dbg !85
  %1995 = select i1 %1994, float %1990, float %1991, !dbg !86
  %1996 = extractelement <4 x float> %1858, i64 2, !dbg !84
  %1997 = fcmp uno float %1996, 0.000000e+00, !dbg !84
  %1998 = extractelement <4 x i1> %1919, i64 2, !dbg !85
  %1999 = or i1 %1998, %1997, !dbg !85
  %2000 = extractelement <4 x float> %1857, i64 2, !dbg !86
  %2001 = select i1 %1999, float %1996, float %2000, !dbg !86
  %2002 = extractelement <16 x float> %1808, i64 13, !dbg !87
  %2003 = fcmp olt float %2001, %2002, !dbg !87
  %2004 = fcmp uno float %2001, 0.000000e+00, !dbg !84
  %2005 = or i1 %2003, %2004, !dbg !85
  %2006 = select i1 %2005, float %2001, float %2002, !dbg !86
  %2007 = extractelement <16 x float> %1808, i64 12, !dbg !87
  %2008 = fcmp olt float %2006, %2007, !dbg !87
  %2009 = fcmp uno float %2006, 0.000000e+00, !dbg !84
  %2010 = or i1 %2008, %2009, !dbg !85
  %2011 = select i1 %2010, float %2006, float %2007, !dbg !86
  %2012 = extractelement <16 x float> %1808, i64 11, !dbg !87
  %2013 = fcmp olt float %2011, %2012, !dbg !87
  %2014 = fcmp uno float %2011, 0.000000e+00, !dbg !84
  %2015 = or i1 %2013, %2014, !dbg !85
  %2016 = select i1 %2015, float %2011, float %2012, !dbg !86
  %2017 = extractelement <16 x float> %1808, i64 10, !dbg !87
  %2018 = fcmp olt float %2016, %2017, !dbg !87
  %2019 = fcmp uno float %2016, 0.000000e+00, !dbg !84
  %2020 = or i1 %2018, %2019, !dbg !85
  %2021 = select i1 %2020, float %2016, float %2017, !dbg !86
  %2022 = extractelement <16 x float> %1808, i64 9, !dbg !87
  %2023 = fcmp olt float %2021, %2022, !dbg !87
  %2024 = fcmp uno float %2021, 0.000000e+00, !dbg !84
  %2025 = or i1 %2023, %2024, !dbg !85
  %2026 = select i1 %2025, float %2021, float %2022, !dbg !86
  %2027 = extractelement <16 x float> %1808, i64 8, !dbg !87
  %2028 = fcmp olt float %2026, %2027, !dbg !87
  %2029 = fcmp uno float %2026, 0.000000e+00, !dbg !84
  %2030 = or i1 %2028, %2029, !dbg !85
  %2031 = select i1 %2030, float %2026, float %2027, !dbg !86
  %2032 = extractelement <16 x float> %1808, i64 7, !dbg !87
  %2033 = fcmp olt float %2031, %2032, !dbg !87
  %2034 = fcmp uno float %2031, 0.000000e+00, !dbg !84
  %2035 = or i1 %2033, %2034, !dbg !85
  %2036 = select i1 %2035, float %2031, float %2032, !dbg !86
  %2037 = extractelement <16 x float> %1808, i64 6, !dbg !87
  %2038 = fcmp olt float %2036, %2037, !dbg !87
  %2039 = fcmp uno float %2036, 0.000000e+00, !dbg !84
  %2040 = or i1 %2038, %2039, !dbg !85
  %2041 = select i1 %2040, float %2036, float %2037, !dbg !86
  %2042 = extractelement <16 x float> %1808, i64 5, !dbg !87
  %2043 = fcmp olt float %2041, %2042, !dbg !87
  %2044 = fcmp uno float %2041, 0.000000e+00, !dbg !84
  %2045 = or i1 %2043, %2044, !dbg !85
  %2046 = select i1 %2045, float %2041, float %2042, !dbg !86
  %2047 = extractelement <16 x float> %1808, i64 4, !dbg !87
  %2048 = fcmp olt float %2046, %2047, !dbg !87
  %2049 = fcmp uno float %2046, 0.000000e+00, !dbg !84
  %2050 = or i1 %2048, %2049, !dbg !85
  %2051 = select i1 %2050, float %2046, float %2047, !dbg !86
  %2052 = extractelement <16 x float> %1808, i64 3, !dbg !87
  %2053 = fcmp olt float %2051, %2052, !dbg !87
  %2054 = fcmp uno float %2051, 0.000000e+00, !dbg !84
  %2055 = or i1 %2053, %2054, !dbg !85
  %2056 = select i1 %2055, float %2051, float %2052, !dbg !86
  %2057 = extractelement <16 x float> %1808, i64 2, !dbg !87
  %2058 = fcmp olt float %2056, %2057, !dbg !87
  %2059 = fcmp uno float %2056, 0.000000e+00, !dbg !84
  %2060 = or i1 %2058, %2059, !dbg !85
  %2061 = select i1 %2060, float %2056, float %2057, !dbg !86
  %2062 = extractelement <16 x float> %1808, i64 1, !dbg !87
  %2063 = fcmp olt float %2061, %2062, !dbg !87
  %2064 = fcmp uno float %2061, 0.000000e+00, !dbg !84
  %2065 = or i1 %2063, %2064, !dbg !85
  %2066 = select i1 %2065, float %2061, float %2062, !dbg !86
  %2067 = extractelement <16 x float> %1808, i64 0, !dbg !87
  %2068 = fcmp olt float %2066, %2067, !dbg !87
  %2069 = fcmp uno float %2066, 0.000000e+00, !dbg !84
  %2070 = or i1 %2068, %2069, !dbg !85
  %2071 = select i1 %2070, float %2066, float %2067, !dbg !86
  %2072 = bitcast float %1995 to i32, !dbg !79
  %2073 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2072, i32 16, i32 31), !dbg !79
  %2074 = bitcast i32 %2073 to float, !dbg !79
  %2075 = fcmp olt float %1995, %2074, !dbg !87
  %2076 = fcmp uno float %1995, 0.000000e+00, !dbg !84
  %2077 = or i1 %2076, %2075, !dbg !85
  %2078 = select i1 %2077, float %1995, float %2074, !dbg !86
  %2079 = bitcast float %2078 to i32, !dbg !79
  %2080 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2079, i32 8, i32 31), !dbg !79
  %2081 = bitcast i32 %2080 to float, !dbg !79
  %2082 = fcmp olt float %2078, %2081, !dbg !87
  %2083 = fcmp uno float %2078, 0.000000e+00, !dbg !84
  %2084 = or i1 %2082, %2083, !dbg !85
  %2085 = select i1 %2084, float %2078, float %2081, !dbg !86
  %2086 = bitcast float %2085 to i32, !dbg !79
  %2087 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2086, i32 4, i32 31), !dbg !79
  %2088 = bitcast i32 %2087 to float, !dbg !79
  %2089 = fcmp olt float %2085, %2088, !dbg !87
  %2090 = fcmp uno float %2085, 0.000000e+00, !dbg !84
  %2091 = or i1 %2089, %2090, !dbg !85
  %2092 = select i1 %2091, float %2085, float %2088, !dbg !86
  %2093 = bitcast float %2092 to i32, !dbg !79
  %2094 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2093, i32 2, i32 31), !dbg !79
  %2095 = bitcast i32 %2094 to float, !dbg !79
  %2096 = fcmp olt float %2092, %2095, !dbg !87
  %2097 = fcmp uno float %2092, 0.000000e+00, !dbg !84
  %2098 = or i1 %2096, %2097, !dbg !85
  %2099 = select i1 %2098, float %2092, float %2095, !dbg !86
  %2100 = bitcast float %2099 to i32, !dbg !79
  %2101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2100, i32 1, i32 31), !dbg !79
  %2102 = bitcast i32 %2101 to float, !dbg !79
  %2103 = fcmp olt float %2099, %2102, !dbg !87
  %2104 = fcmp uno float %2099, 0.000000e+00, !dbg !84
  %2105 = or i1 %2103, %2104, !dbg !85
  %2106 = bitcast float %2071 to i32, !dbg !79
  %2107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2106, i32 16, i32 31), !dbg !79
  %2108 = bitcast i32 %2107 to float, !dbg !79
  %2109 = fcmp olt float %2071, %2108, !dbg !87
  %2110 = fcmp uno float %2071, 0.000000e+00, !dbg !84
  %2111 = or i1 %2110, %2109, !dbg !85
  %2112 = select i1 %2111, float %2071, float %2108, !dbg !86
  %2113 = bitcast float %2112 to i32, !dbg !79
  %2114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2113, i32 8, i32 31), !dbg !79
  %2115 = bitcast i32 %2114 to float, !dbg !79
  %2116 = fcmp olt float %2112, %2115, !dbg !87
  %2117 = fcmp uno float %2112, 0.000000e+00, !dbg !84
  %2118 = or i1 %2116, %2117, !dbg !85
  %2119 = select i1 %2118, float %2112, float %2115, !dbg !86
  %2120 = bitcast float %2119 to i32, !dbg !79
  %2121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2120, i32 4, i32 31), !dbg !79
  %2122 = bitcast i32 %2121 to float, !dbg !79
  %2123 = fcmp olt float %2119, %2122, !dbg !87
  %2124 = fcmp uno float %2119, 0.000000e+00, !dbg !84
  %2125 = or i1 %2123, %2124, !dbg !85
  %2126 = select i1 %2125, float %2119, float %2122, !dbg !86
  %2127 = bitcast float %2126 to i32, !dbg !79
  %2128 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2127, i32 2, i32 31), !dbg !79
  %2129 = bitcast i32 %2128 to float, !dbg !79
  %2130 = fcmp olt float %2126, %2129, !dbg !87
  %2131 = fcmp uno float %2126, 0.000000e+00, !dbg !84
  %2132 = or i1 %2130, %2131, !dbg !85
  %2133 = select i1 %2132, float %2126, float %2129, !dbg !86
  %2134 = bitcast float %2133 to i32, !dbg !79
  %2135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2134, i32 1, i32 31), !dbg !79
  %2136 = bitcast i32 %2135 to float, !dbg !79
  %2137 = fcmp olt float %2133, %2136, !dbg !87
  %2138 = fcmp uno float %2133, 0.000000e+00, !dbg !84
  %2139 = or i1 %2137, %2138, !dbg !85
  %2140 = and i32 %1918, 15, !dbg !79
  %2141 = icmp eq i32 %1917, 0, !dbg !79
  %2142 = getelementptr float, ptr addrspace(3) @global_smem, i32 %2140, !dbg !79
  %2143 = select i1 %2105, i32 %2100, i32 %2101, !dbg !86
  %2144 = insertelement <1 x i32> poison, i32 %2143, i64 0, !dbg !79
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2142, <1 x i32> %2144, i1 %2141) #5, !dbg !79
  %2145 = or disjoint i32 %2140, 16, !dbg !79
  %2146 = getelementptr float, ptr addrspace(3) @global_smem, i32 %2145, !dbg !79
  %2147 = select i1 %2139, i32 %2134, i32 %2135, !dbg !86
  %2148 = insertelement <1 x i32> poison, i32 %2147, i64 0, !dbg !79
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2146, <1 x i32> %2148, i1 %2141) #5, !dbg !79
  tail call void @llvm.nvvm.barrier0(), !dbg !79
  %2149 = icmp slt i32 %15, 32, !dbg !79
  %2150 = getelementptr float, ptr addrspace(3) @global_smem, i32 %15, !dbg !79
  %2151 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %2150, i1 %2149) #5, !dbg !79
  %2152 = bitcast i32 %2151 to float, !dbg !79
  %2153 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2151, i32 8, i32 31), !dbg !79
  %2154 = bitcast i32 %2153 to float, !dbg !79
  %2155 = fcmp olt float %2152, %2154, !dbg !87
  %2156 = fcmp uno float %2152, 0.000000e+00, !dbg !84
  %2157 = or i1 %2156, %2155, !dbg !85
  %2158 = select i1 %2157, float %2152, float %2154, !dbg !86
  %2159 = bitcast float %2158 to i32, !dbg !79
  %2160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2159, i32 4, i32 31), !dbg !79
  %2161 = bitcast i32 %2160 to float, !dbg !79
  %2162 = fcmp olt float %2158, %2161, !dbg !87
  %2163 = fcmp uno float %2158, 0.000000e+00, !dbg !84
  %2164 = or i1 %2162, %2163, !dbg !85
  %2165 = select i1 %2164, float %2158, float %2161, !dbg !86
  %2166 = bitcast float %2165 to i32, !dbg !79
  %2167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2166, i32 2, i32 31), !dbg !79
  %2168 = bitcast i32 %2167 to float, !dbg !79
  %2169 = fcmp olt float %2165, %2168, !dbg !87
  %2170 = fcmp uno float %2165, 0.000000e+00, !dbg !84
  %2171 = or i1 %2169, %2170, !dbg !85
  %2172 = select i1 %2171, float %2165, float %2168, !dbg !86
  %2173 = bitcast float %2172 to i32, !dbg !79
  %2174 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2173, i32 1, i32 31), !dbg !79
  %2175 = bitcast i32 %2174 to float, !dbg !79
  %2176 = fcmp olt float %2172, %2175, !dbg !87
  %2177 = fcmp uno float %2172, 0.000000e+00, !dbg !84
  %2178 = or i1 %2176, %2177, !dbg !85
  %2179 = and i32 %15, 15, !dbg !79
  %2180 = icmp eq i32 %2179, 0, !dbg !79
  %2181 = and i1 %2149, %2180, !dbg !79
  %2182 = select i1 %2178, i32 %2173, i32 %2174, !dbg !86
  %2183 = insertelement <1 x i32> poison, i32 %2182, i64 0, !dbg !79
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2150, <1 x i32> %2183, i1 %2181) #5, !dbg !79
  tail call void @llvm.nvvm.barrier0(), !dbg !79
  %2184 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !79
  %2185 = load float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 64), align 16, !dbg !79
  tail call void @llvm.nvvm.barrier0(), !dbg !88
  %2186 = bitcast float %2184 to i32, !dbg !88
  %2187 = bitcast float %2185 to i32, !dbg !88
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) @global_smem, i32 %2186, i32 %2187, i1 true) #5, !dbg !88
  tail call void @llvm.nvvm.barrier0(), !dbg !88
  %2188 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %16, !dbg !88
  %2189 = load float, ptr addrspace(3) %2188, align 4, !dbg !88
  tail call void @llvm.nvvm.barrier0(), !dbg !89
  %2190 = extractelement <4 x float> %1857, i64 1, !dbg !90
  %2191 = fcmp uno float %2190, 0.000000e+00, !dbg !90
  %2192 = extractelement <4 x i1> %1919, i64 1, !dbg !91
  %2193 = or i1 %2192, %2191, !dbg !91
  %2194 = extractelement <4 x float> %1858, i64 1, !dbg !92
  %2195 = select i1 %2193, float %2190, float %2194, !dbg !92
  %2196 = extractelement <16 x float> %1853, i64 3, !dbg !81
  %2197 = fcmp ogt float %2195, %2196, !dbg !81
  %2198 = fcmp uno float %2195, 0.000000e+00, !dbg !90
  %2199 = or i1 %2197, %2198, !dbg !91
  %2200 = select i1 %2199, float %2195, float %2196, !dbg !92
  %2201 = extractelement <16 x float> %1853, i64 2, !dbg !81
  %2202 = fcmp ogt float %2200, %2201, !dbg !81
  %2203 = fcmp uno float %2200, 0.000000e+00, !dbg !90
  %2204 = or i1 %2202, %2203, !dbg !91
  %2205 = select i1 %2204, float %2200, float %2201, !dbg !92
  %2206 = extractelement <16 x float> %1853, i64 1, !dbg !81
  %2207 = fcmp ogt float %2205, %2206, !dbg !81
  %2208 = fcmp uno float %2205, 0.000000e+00, !dbg !90
  %2209 = or i1 %2207, %2208, !dbg !91
  %2210 = select i1 %2209, float %2205, float %2206, !dbg !92
  %2211 = extractelement <16 x float> %1853, i64 0, !dbg !81
  %2212 = fcmp ogt float %2210, %2211, !dbg !81
  %2213 = fcmp uno float %2210, 0.000000e+00, !dbg !90
  %2214 = or i1 %2212, %2213, !dbg !91
  %2215 = select i1 %2214, float %2210, float %2211, !dbg !92
  %2216 = extractelement <8 x float> %1856, i64 7, !dbg !81
  %2217 = fcmp ogt float %2215, %2216, !dbg !81
  %2218 = fcmp uno float %2215, 0.000000e+00, !dbg !90
  %2219 = or i1 %2217, %2218, !dbg !91
  %2220 = select i1 %2219, float %2215, float %2216, !dbg !92
  %2221 = extractelement <8 x float> %1856, i64 6, !dbg !81
  %2222 = fcmp ogt float %2220, %2221, !dbg !81
  %2223 = fcmp uno float %2220, 0.000000e+00, !dbg !90
  %2224 = or i1 %2222, %2223, !dbg !91
  %2225 = select i1 %2224, float %2220, float %2221, !dbg !92
  %2226 = extractelement <8 x float> %1856, i64 5, !dbg !81
  %2227 = fcmp ogt float %2225, %2226, !dbg !81
  %2228 = fcmp uno float %2225, 0.000000e+00, !dbg !90
  %2229 = or i1 %2227, %2228, !dbg !91
  %2230 = select i1 %2229, float %2225, float %2226, !dbg !92
  %2231 = extractelement <8 x float> %1856, i64 4, !dbg !81
  %2232 = fcmp ogt float %2230, %2231, !dbg !81
  %2233 = fcmp uno float %2230, 0.000000e+00, !dbg !90
  %2234 = or i1 %2232, %2233, !dbg !91
  %2235 = select i1 %2234, float %2230, float %2231, !dbg !92
  %2236 = extractelement <8 x float> %1856, i64 3, !dbg !81
  %2237 = fcmp ogt float %2235, %2236, !dbg !81
  %2238 = fcmp uno float %2235, 0.000000e+00, !dbg !90
  %2239 = or i1 %2237, %2238, !dbg !91
  %2240 = select i1 %2239, float %2235, float %2236, !dbg !92
  %2241 = extractelement <8 x float> %1856, i64 2, !dbg !81
  %2242 = fcmp ogt float %2240, %2241, !dbg !81
  %2243 = fcmp uno float %2240, 0.000000e+00, !dbg !90
  %2244 = or i1 %2242, %2243, !dbg !91
  %2245 = select i1 %2244, float %2240, float %2241, !dbg !92
  %2246 = extractelement <8 x float> %1856, i64 1, !dbg !81
  %2247 = fcmp ogt float %2245, %2246, !dbg !81
  %2248 = fcmp uno float %2245, 0.000000e+00, !dbg !90
  %2249 = or i1 %2247, %2248, !dbg !91
  %2250 = select i1 %2249, float %2245, float %2246, !dbg !92
  %2251 = extractelement <8 x float> %1856, i64 0, !dbg !81
  %2252 = fcmp ogt float %2250, %2251, !dbg !81
  %2253 = fcmp uno float %2250, 0.000000e+00, !dbg !90
  %2254 = or i1 %2252, %2253, !dbg !91
  %2255 = select i1 %2254, float %2250, float %2251, !dbg !92
  %2256 = extractelement <16 x float> %1859, i64 15, !dbg !81
  %2257 = fcmp ogt float %2255, %2256, !dbg !81
  %2258 = fcmp uno float %2255, 0.000000e+00, !dbg !90
  %2259 = or i1 %2257, %2258, !dbg !91
  %2260 = select i1 %2259, float %2255, float %2256, !dbg !92
  %2261 = extractelement <16 x float> %1859, i64 14, !dbg !81
  %2262 = fcmp ogt float %2260, %2261, !dbg !81
  %2263 = fcmp uno float %2260, 0.000000e+00, !dbg !90
  %2264 = or i1 %2262, %2263, !dbg !91
  %2265 = select i1 %2264, float %2260, float %2261, !dbg !92
  %2266 = extractelement <4 x float> %1857, i64 0, !dbg !90
  %2267 = fcmp uno float %2266, 0.000000e+00, !dbg !90
  %2268 = extractelement <4 x i1> %1919, i64 0, !dbg !91
  %2269 = or i1 %2268, %2267, !dbg !91
  %2270 = extractelement <4 x float> %1858, i64 0, !dbg !92
  %2271 = select i1 %2269, float %2266, float %2270, !dbg !92
  %2272 = extractelement <16 x float> %1859, i64 13, !dbg !81
  %2273 = fcmp ogt float %2271, %2272, !dbg !81
  %2274 = fcmp uno float %2271, 0.000000e+00, !dbg !90
  %2275 = or i1 %2273, %2274, !dbg !91
  %2276 = select i1 %2275, float %2271, float %2272, !dbg !92
  %2277 = extractelement <16 x float> %1859, i64 12, !dbg !81
  %2278 = fcmp ogt float %2276, %2277, !dbg !81
  %2279 = fcmp uno float %2276, 0.000000e+00, !dbg !90
  %2280 = or i1 %2278, %2279, !dbg !91
  %2281 = select i1 %2280, float %2276, float %2277, !dbg !92
  %2282 = extractelement <16 x float> %1859, i64 11, !dbg !81
  %2283 = fcmp ogt float %2281, %2282, !dbg !81
  %2284 = fcmp uno float %2281, 0.000000e+00, !dbg !90
  %2285 = or i1 %2283, %2284, !dbg !91
  %2286 = select i1 %2285, float %2281, float %2282, !dbg !92
  %2287 = extractelement <16 x float> %1859, i64 10, !dbg !81
  %2288 = fcmp ogt float %2286, %2287, !dbg !81
  %2289 = fcmp uno float %2286, 0.000000e+00, !dbg !90
  %2290 = or i1 %2288, %2289, !dbg !91
  %2291 = select i1 %2290, float %2286, float %2287, !dbg !92
  %2292 = extractelement <16 x float> %1859, i64 9, !dbg !81
  %2293 = fcmp ogt float %2291, %2292, !dbg !81
  %2294 = fcmp uno float %2291, 0.000000e+00, !dbg !90
  %2295 = or i1 %2293, %2294, !dbg !91
  %2296 = select i1 %2295, float %2291, float %2292, !dbg !92
  %2297 = extractelement <16 x float> %1859, i64 8, !dbg !81
  %2298 = fcmp ogt float %2296, %2297, !dbg !81
  %2299 = fcmp uno float %2296, 0.000000e+00, !dbg !90
  %2300 = or i1 %2298, %2299, !dbg !91
  %2301 = select i1 %2300, float %2296, float %2297, !dbg !92
  %2302 = extractelement <16 x float> %1859, i64 7, !dbg !81
  %2303 = fcmp ogt float %2301, %2302, !dbg !81
  %2304 = fcmp uno float %2301, 0.000000e+00, !dbg !90
  %2305 = or i1 %2303, %2304, !dbg !91
  %2306 = select i1 %2305, float %2301, float %2302, !dbg !92
  %2307 = extractelement <16 x float> %1859, i64 6, !dbg !81
  %2308 = fcmp ogt float %2306, %2307, !dbg !81
  %2309 = fcmp uno float %2306, 0.000000e+00, !dbg !90
  %2310 = or i1 %2308, %2309, !dbg !91
  %2311 = select i1 %2310, float %2306, float %2307, !dbg !92
  %2312 = extractelement <16 x float> %1859, i64 5, !dbg !81
  %2313 = fcmp ogt float %2311, %2312, !dbg !81
  %2314 = fcmp uno float %2311, 0.000000e+00, !dbg !90
  %2315 = or i1 %2313, %2314, !dbg !91
  %2316 = select i1 %2315, float %2311, float %2312, !dbg !92
  %2317 = extractelement <16 x float> %1859, i64 4, !dbg !81
  %2318 = fcmp ogt float %2316, %2317, !dbg !81
  %2319 = fcmp uno float %2316, 0.000000e+00, !dbg !90
  %2320 = or i1 %2318, %2319, !dbg !91
  %2321 = select i1 %2320, float %2316, float %2317, !dbg !92
  %2322 = extractelement <16 x float> %1859, i64 3, !dbg !81
  %2323 = fcmp ogt float %2321, %2322, !dbg !81
  %2324 = fcmp uno float %2321, 0.000000e+00, !dbg !90
  %2325 = or i1 %2323, %2324, !dbg !91
  %2326 = select i1 %2325, float %2321, float %2322, !dbg !92
  %2327 = extractelement <16 x float> %1859, i64 2, !dbg !81
  %2328 = fcmp ogt float %2326, %2327, !dbg !81
  %2329 = fcmp uno float %2326, 0.000000e+00, !dbg !90
  %2330 = or i1 %2328, %2329, !dbg !91
  %2331 = select i1 %2330, float %2326, float %2327, !dbg !92
  %2332 = extractelement <16 x float> %1859, i64 1, !dbg !81
  %2333 = fcmp ogt float %2331, %2332, !dbg !81
  %2334 = fcmp uno float %2331, 0.000000e+00, !dbg !90
  %2335 = or i1 %2333, %2334, !dbg !91
  %2336 = select i1 %2335, float %2331, float %2332, !dbg !92
  %2337 = extractelement <16 x float> %1859, i64 0, !dbg !81
  %2338 = fcmp ogt float %2336, %2337, !dbg !81
  %2339 = fcmp uno float %2336, 0.000000e+00, !dbg !90
  %2340 = or i1 %2338, %2339, !dbg !91
  %2341 = select i1 %2340, float %2336, float %2337, !dbg !92
  %2342 = bitcast float %2265 to i32, !dbg !89
  %2343 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2342, i32 16, i32 31), !dbg !89
  %2344 = bitcast i32 %2343 to float, !dbg !89
  %2345 = fcmp ogt float %2265, %2344, !dbg !81
  %2346 = fcmp uno float %2265, 0.000000e+00, !dbg !90
  %2347 = or i1 %2346, %2345, !dbg !91
  %2348 = select i1 %2347, float %2265, float %2344, !dbg !92
  %2349 = bitcast float %2348 to i32, !dbg !89
  %2350 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2349, i32 8, i32 31), !dbg !89
  %2351 = bitcast i32 %2350 to float, !dbg !89
  %2352 = fcmp ogt float %2348, %2351, !dbg !81
  %2353 = fcmp uno float %2348, 0.000000e+00, !dbg !90
  %2354 = or i1 %2352, %2353, !dbg !91
  %2355 = select i1 %2354, float %2348, float %2351, !dbg !92
  %2356 = bitcast float %2355 to i32, !dbg !89
  %2357 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2356, i32 4, i32 31), !dbg !89
  %2358 = bitcast i32 %2357 to float, !dbg !89
  %2359 = fcmp ogt float %2355, %2358, !dbg !81
  %2360 = fcmp uno float %2355, 0.000000e+00, !dbg !90
  %2361 = or i1 %2359, %2360, !dbg !91
  %2362 = select i1 %2361, float %2355, float %2358, !dbg !92
  %2363 = bitcast float %2362 to i32, !dbg !89
  %2364 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2363, i32 2, i32 31), !dbg !89
  %2365 = bitcast i32 %2364 to float, !dbg !89
  %2366 = fcmp ogt float %2362, %2365, !dbg !81
  %2367 = fcmp uno float %2362, 0.000000e+00, !dbg !90
  %2368 = or i1 %2366, %2367, !dbg !91
  %2369 = select i1 %2368, float %2362, float %2365, !dbg !92
  %2370 = bitcast float %2369 to i32, !dbg !89
  %2371 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2370, i32 1, i32 31), !dbg !89
  %2372 = bitcast i32 %2371 to float, !dbg !89
  %2373 = fcmp ogt float %2369, %2372, !dbg !81
  %2374 = fcmp uno float %2369, 0.000000e+00, !dbg !90
  %2375 = or i1 %2373, %2374, !dbg !91
  %2376 = bitcast float %2341 to i32, !dbg !89
  %2377 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2376, i32 16, i32 31), !dbg !89
  %2378 = bitcast i32 %2377 to float, !dbg !89
  %2379 = fcmp ogt float %2341, %2378, !dbg !81
  %2380 = fcmp uno float %2341, 0.000000e+00, !dbg !90
  %2381 = or i1 %2380, %2379, !dbg !91
  %2382 = select i1 %2381, float %2341, float %2378, !dbg !92
  %2383 = bitcast float %2382 to i32, !dbg !89
  %2384 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2383, i32 8, i32 31), !dbg !89
  %2385 = bitcast i32 %2384 to float, !dbg !89
  %2386 = fcmp ogt float %2382, %2385, !dbg !81
  %2387 = fcmp uno float %2382, 0.000000e+00, !dbg !90
  %2388 = or i1 %2386, %2387, !dbg !91
  %2389 = select i1 %2388, float %2382, float %2385, !dbg !92
  %2390 = bitcast float %2389 to i32, !dbg !89
  %2391 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2390, i32 4, i32 31), !dbg !89
  %2392 = bitcast i32 %2391 to float, !dbg !89
  %2393 = fcmp ogt float %2389, %2392, !dbg !81
  %2394 = fcmp uno float %2389, 0.000000e+00, !dbg !90
  %2395 = or i1 %2393, %2394, !dbg !91
  %2396 = select i1 %2395, float %2389, float %2392, !dbg !92
  %2397 = bitcast float %2396 to i32, !dbg !89
  %2398 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2397, i32 2, i32 31), !dbg !89
  %2399 = bitcast i32 %2398 to float, !dbg !89
  %2400 = fcmp ogt float %2396, %2399, !dbg !81
  %2401 = fcmp uno float %2396, 0.000000e+00, !dbg !90
  %2402 = or i1 %2400, %2401, !dbg !91
  %2403 = select i1 %2402, float %2396, float %2399, !dbg !92
  %2404 = bitcast float %2403 to i32, !dbg !89
  %2405 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2404, i32 1, i32 31), !dbg !89
  %2406 = bitcast i32 %2405 to float, !dbg !89
  %2407 = fcmp ogt float %2403, %2406, !dbg !81
  %2408 = fcmp uno float %2403, 0.000000e+00, !dbg !90
  %2409 = or i1 %2407, %2408, !dbg !91
  %2410 = select i1 %2375, i32 %2370, i32 %2371, !dbg !92
  %2411 = insertelement <1 x i32> poison, i32 %2410, i64 0, !dbg !89
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2142, <1 x i32> %2411, i1 %2141) #5, !dbg !89
  %2412 = select i1 %2409, i32 %2404, i32 %2405, !dbg !92
  %2413 = insertelement <1 x i32> poison, i32 %2412, i64 0, !dbg !89
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2146, <1 x i32> %2413, i1 %2141) #5, !dbg !89
  tail call void @llvm.nvvm.barrier0(), !dbg !89
  %2414 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %2150, i1 %2149) #5, !dbg !89
  %2415 = bitcast i32 %2414 to float, !dbg !89
  %2416 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2414, i32 8, i32 31), !dbg !89
  %2417 = bitcast i32 %2416 to float, !dbg !89
  %2418 = fcmp ogt float %2415, %2417, !dbg !81
  %2419 = fcmp uno float %2415, 0.000000e+00, !dbg !90
  %2420 = or i1 %2419, %2418, !dbg !91
  %2421 = select i1 %2420, float %2415, float %2417, !dbg !92
  %2422 = bitcast float %2421 to i32, !dbg !89
  %2423 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2422, i32 4, i32 31), !dbg !89
  %2424 = bitcast i32 %2423 to float, !dbg !89
  %2425 = fcmp ogt float %2421, %2424, !dbg !81
  %2426 = fcmp uno float %2421, 0.000000e+00, !dbg !90
  %2427 = or i1 %2425, %2426, !dbg !91
  %2428 = select i1 %2427, float %2421, float %2424, !dbg !92
  %2429 = bitcast float %2428 to i32, !dbg !89
  %2430 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2429, i32 2, i32 31), !dbg !89
  %2431 = bitcast i32 %2430 to float, !dbg !89
  %2432 = fcmp ogt float %2428, %2431, !dbg !81
  %2433 = fcmp uno float %2428, 0.000000e+00, !dbg !90
  %2434 = or i1 %2432, %2433, !dbg !91
  %2435 = select i1 %2434, float %2428, float %2431, !dbg !92
  %2436 = bitcast float %2435 to i32, !dbg !89
  %2437 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2436, i32 1, i32 31), !dbg !89
  %2438 = bitcast i32 %2437 to float, !dbg !89
  %2439 = fcmp ogt float %2435, %2438, !dbg !81
  %2440 = fcmp uno float %2435, 0.000000e+00, !dbg !90
  %2441 = or i1 %2439, %2440, !dbg !91
  %2442 = select i1 %2441, i32 %2436, i32 %2437, !dbg !92
  %2443 = insertelement <1 x i32> poison, i32 %2442, i64 0, !dbg !89
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %2150, <1 x i32> %2443, i1 %2181) #5, !dbg !89
  tail call void @llvm.nvvm.barrier0(), !dbg !89
  %2444 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !89
  %2445 = load float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 64), align 16, !dbg !89
  tail call void @llvm.nvvm.barrier0(), !dbg !93
  %2446 = bitcast float %2444 to i32, !dbg !93
  %2447 = bitcast float %2445 to i32, !dbg !93
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) @global_smem, i32 %2446, i32 %2447, i1 true) #5, !dbg !93
  tail call void @llvm.nvvm.barrier0(), !dbg !93
  %2448 = load float, ptr addrspace(3) %2188, align 4, !dbg !93
  %2449 = sext i32 %18 to i64, !dbg !94
  %2450 = getelementptr bfloat, ptr addrspace(1) %6, i64 %2449, !dbg !94
  %2451 = fptrunc float %2189 to bfloat, !dbg !88
  %2452 = and i32 %15, 510, !dbg !88
  %2453 = icmp eq i32 %2452, 0, !dbg !88
  %2454 = bitcast bfloat %2451 to i16, !dbg !88
  %2455 = and i1 %2453, %23, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %2454, ptr addrspace(1) %2450, i1 %2455) #5, !dbg !88
  %2456 = getelementptr bfloat, ptr addrspace(1) %7, i64 %2449, !dbg !95
  %2457 = fptrunc float %2448 to bfloat, !dbg !93
  %2458 = bitcast bfloat %2457 to i16, !dbg !93
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %2458, ptr addrspace(1) %2456, i1 %2455) #5, !dbg !93
  %.inv5 = fcmp oge float %2184, 0.000000e+00, !dbg !96
  %2459 = select i1 %.inv5, float 0.000000e+00, float %2184, !dbg !96
  %.inv6 = fcmp oge float %2185, 0.000000e+00, !dbg !96
  %2460 = select i1 %.inv6, float 0.000000e+00, float %2185, !dbg !96
  %2461 = fsub float 0.000000e+00, %2459, !dbg !98
  %2462 = fsub float 0.000000e+00, %2460, !dbg !98
  %.inv7 = fcmp ole float %2444, 0.000000e+00, !dbg !99
  %2463 = select i1 %.inv7, float 0.000000e+00, float %2444, !dbg !99
  %.inv8 = fcmp ole float %2445, 0.000000e+00, !dbg !99
  %2464 = select i1 %.inv8, float 0.000000e+00, float %2445, !dbg !99
  %2465 = fcmp ogt float %2461, %2463, !dbg !101
  %2466 = fcmp ogt float %2462, %2464, !dbg !101
  %2467 = fcmp uno float %2461, 0.000000e+00, !dbg !103
  %2468 = fcmp uno float %2462, 0.000000e+00, !dbg !103
  %2469 = or i1 %2467, %2465, !dbg !104
  %2470 = or i1 %2468, %2466, !dbg !104
  %2471 = select i1 %2469, float %2461, float %2463, !dbg !105
  %2472 = select i1 %2470, float %2462, float %2464, !dbg !105
  %2473 = fmul float %2471, 0x3F80204080000000, !dbg !106
  %2474 = fmul float %2472, 0x3F80204080000000, !dbg !106
  %2475 = fcmp ogt float %2473, 0x3EE4F8B580000000, !dbg !107
  %2476 = fcmp ogt float %2474, 0x3EE4F8B580000000, !dbg !107
  %2477 = fcmp uno float %2473, 0.000000e+00, !dbg !109
  %2478 = fcmp uno float %2474, 0.000000e+00, !dbg !109
  %2479 = or i1 %2475, %2477, !dbg !110
  %2480 = or i1 %2476, %2478, !dbg !110
  %2481 = select i1 %2479, float %2473, float 0x3EE4F8B580000000, !dbg !111
  %2482 = select i1 %2480, float %2474, float 0x3EE4F8B580000000, !dbg !111
  %2483 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %2481), !dbg !112
  %2484 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %2482), !dbg !112
  br label %2485, !dbg !113

2485:                                             ; preds = %1916, %__nv_tanhf.exit691
  %2486 = phi i1 [ true, %1916 ], [ false, %__nv_tanhf.exit691 ]
  %indvars.iv1364 = phi i64 [ 0, %1916 ], [ 8192, %__nv_tanhf.exit691 ]
  %2487 = or disjoint i64 %indvars.iv1364, %154, !dbg !114
  %2488 = icmp samesign ult i64 %2487, 12288, !dbg !115
  %2489 = trunc nuw nsw i64 %2487 to i32, !dbg !116
  %2490 = add i32 %111, %2489, !dbg !116
  %2491 = trunc nuw nsw i64 %indvars.iv1364 to i32, !dbg !116
  %2492 = or disjoint i32 %29, %2491, !dbg !116
  %2493 = add i32 %2492, %111, !dbg !116
  %2494 = trunc nuw nsw i64 %indvars.iv1364 to i32, !dbg !116
  %2495 = or disjoint i32 %30, %2494, !dbg !116
  %2496 = add i32 %2495, %111, !dbg !116
  %2497 = trunc nuw nsw i64 %indvars.iv1364 to i32, !dbg !116
  %2498 = or disjoint i32 %31, %2497, !dbg !116
  %2499 = add i32 %2498, %111, !dbg !116
  %2500 = add i32 %112, %2489, !dbg !116
  %2501 = add i32 %2492, %112, !dbg !116
  %2502 = add i32 %2495, %112, !dbg !116
  %2503 = add i32 %2498, %112, !dbg !116
  %2504 = sext i32 %2490 to i64, !dbg !117
  %2505 = getelementptr float, ptr addrspace(1) %5, i64 %2504, !dbg !117
  %2506 = sext i32 %2493 to i64, !dbg !117
  %2507 = getelementptr float, ptr addrspace(1) %5, i64 %2506, !dbg !117
  %2508 = sext i32 %2496 to i64, !dbg !117
  %2509 = getelementptr float, ptr addrspace(1) %5, i64 %2508, !dbg !117
  %2510 = sext i32 %2499 to i64, !dbg !117
  %2511 = getelementptr float, ptr addrspace(1) %5, i64 %2510, !dbg !117
  %2512 = sext i32 %2500 to i64, !dbg !117
  %2513 = getelementptr float, ptr addrspace(1) %5, i64 %2512, !dbg !117
  %2514 = sext i32 %2501 to i64, !dbg !117
  %2515 = getelementptr float, ptr addrspace(1) %5, i64 %2514, !dbg !117
  %2516 = sext i32 %2502 to i64, !dbg !117
  %2517 = getelementptr float, ptr addrspace(1) %5, i64 %2516, !dbg !117
  %2518 = sext i32 %2503 to i64, !dbg !117
  %2519 = getelementptr float, ptr addrspace(1) %5, i64 %2518, !dbg !117
  %2520 = and i1 %39, %2488, !dbg !118
  %2521 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2505, i1 %2520) #5, !dbg !119
  %2522 = extractvalue { i32, i32, i32, i32 } %2521, 0, !dbg !119
  %2523 = extractvalue { i32, i32, i32, i32 } %2521, 1, !dbg !119
  %2524 = extractvalue { i32, i32, i32, i32 } %2521, 2, !dbg !119
  %2525 = extractvalue { i32, i32, i32, i32 } %2521, 3, !dbg !119
  %2526 = bitcast i32 %2522 to float, !dbg !119
  %2527 = bitcast i32 %2523 to float, !dbg !119
  %2528 = bitcast i32 %2524 to float, !dbg !119
  %2529 = bitcast i32 %2525 to float, !dbg !119
  %2530 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2507, i1 %2520) #5, !dbg !119
  %2531 = extractvalue { i32, i32, i32, i32 } %2530, 0, !dbg !119
  %2532 = extractvalue { i32, i32, i32, i32 } %2530, 1, !dbg !119
  %2533 = extractvalue { i32, i32, i32, i32 } %2530, 2, !dbg !119
  %2534 = extractvalue { i32, i32, i32, i32 } %2530, 3, !dbg !119
  %2535 = bitcast i32 %2531 to float, !dbg !119
  %2536 = bitcast i32 %2532 to float, !dbg !119
  %2537 = bitcast i32 %2533 to float, !dbg !119
  %2538 = bitcast i32 %2534 to float, !dbg !119
  %2539 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2509, i1 %2520) #5, !dbg !119
  %2540 = extractvalue { i32, i32, i32, i32 } %2539, 0, !dbg !119
  %2541 = extractvalue { i32, i32, i32, i32 } %2539, 1, !dbg !119
  %2542 = extractvalue { i32, i32, i32, i32 } %2539, 2, !dbg !119
  %2543 = extractvalue { i32, i32, i32, i32 } %2539, 3, !dbg !119
  %2544 = bitcast i32 %2540 to float, !dbg !119
  %2545 = bitcast i32 %2541 to float, !dbg !119
  %2546 = bitcast i32 %2542 to float, !dbg !119
  %2547 = bitcast i32 %2543 to float, !dbg !119
  %2548 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2511, i1 %2520) #5, !dbg !119
  %2549 = extractvalue { i32, i32, i32, i32 } %2548, 0, !dbg !119
  %2550 = extractvalue { i32, i32, i32, i32 } %2548, 1, !dbg !119
  %2551 = extractvalue { i32, i32, i32, i32 } %2548, 2, !dbg !119
  %2552 = extractvalue { i32, i32, i32, i32 } %2548, 3, !dbg !119
  %2553 = bitcast i32 %2549 to float, !dbg !119
  %2554 = bitcast i32 %2550 to float, !dbg !119
  %2555 = bitcast i32 %2551 to float, !dbg !119
  %2556 = bitcast i32 %2552 to float, !dbg !119
  %2557 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2513, i1 %2520) #5, !dbg !119
  %2558 = extractvalue { i32, i32, i32, i32 } %2557, 0, !dbg !119
  %2559 = extractvalue { i32, i32, i32, i32 } %2557, 1, !dbg !119
  %2560 = extractvalue { i32, i32, i32, i32 } %2557, 2, !dbg !119
  %2561 = extractvalue { i32, i32, i32, i32 } %2557, 3, !dbg !119
  %2562 = bitcast i32 %2558 to float, !dbg !119
  %2563 = bitcast i32 %2559 to float, !dbg !119
  %2564 = bitcast i32 %2560 to float, !dbg !119
  %2565 = bitcast i32 %2561 to float, !dbg !119
  %2566 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2515, i1 %2520) #5, !dbg !119
  %2567 = extractvalue { i32, i32, i32, i32 } %2566, 0, !dbg !119
  %2568 = extractvalue { i32, i32, i32, i32 } %2566, 1, !dbg !119
  %2569 = extractvalue { i32, i32, i32, i32 } %2566, 2, !dbg !119
  %2570 = extractvalue { i32, i32, i32, i32 } %2566, 3, !dbg !119
  %2571 = bitcast i32 %2567 to float, !dbg !119
  %2572 = bitcast i32 %2568 to float, !dbg !119
  %2573 = bitcast i32 %2569 to float, !dbg !119
  %2574 = bitcast i32 %2570 to float, !dbg !119
  %2575 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2517, i1 %2520) #5, !dbg !119
  %2576 = extractvalue { i32, i32, i32, i32 } %2575, 0, !dbg !119
  %2577 = extractvalue { i32, i32, i32, i32 } %2575, 1, !dbg !119
  %2578 = extractvalue { i32, i32, i32, i32 } %2575, 2, !dbg !119
  %2579 = extractvalue { i32, i32, i32, i32 } %2575, 3, !dbg !119
  %2580 = bitcast i32 %2576 to float, !dbg !119
  %2581 = bitcast i32 %2577 to float, !dbg !119
  %2582 = bitcast i32 %2578 to float, !dbg !119
  %2583 = bitcast i32 %2579 to float, !dbg !119
  %2584 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2519, i1 %2520) #5, !dbg !119
  %2585 = extractvalue { i32, i32, i32, i32 } %2584, 0, !dbg !119
  %2586 = extractvalue { i32, i32, i32, i32 } %2584, 1, !dbg !119
  %2587 = extractvalue { i32, i32, i32, i32 } %2584, 2, !dbg !119
  %2588 = extractvalue { i32, i32, i32, i32 } %2584, 3, !dbg !119
  %2589 = bitcast i32 %2585 to float, !dbg !119
  %2590 = bitcast i32 %2586 to float, !dbg !119
  %2591 = bitcast i32 %2587 to float, !dbg !119
  %2592 = bitcast i32 %2588 to float, !dbg !119
  %2593 = fmul float %2526, 5.000000e-01, !dbg !120
  %2594 = fmul float %2527, 5.000000e-01, !dbg !120
  %2595 = fmul float %2528, 5.000000e-01, !dbg !120
  %2596 = fmul float %2529, 5.000000e-01, !dbg !120
  %2597 = fmul float %2535, 5.000000e-01, !dbg !120
  %2598 = fmul float %2536, 5.000000e-01, !dbg !120
  %2599 = fmul float %2537, 5.000000e-01, !dbg !120
  %2600 = fmul float %2538, 5.000000e-01, !dbg !120
  %2601 = fmul float %2544, 5.000000e-01, !dbg !120
  %2602 = fmul float %2545, 5.000000e-01, !dbg !120
  %2603 = fmul float %2546, 5.000000e-01, !dbg !120
  %2604 = fmul float %2547, 5.000000e-01, !dbg !120
  %2605 = fmul float %2553, 5.000000e-01, !dbg !120
  %2606 = fmul float %2554, 5.000000e-01, !dbg !120
  %2607 = fmul float %2555, 5.000000e-01, !dbg !120
  %2608 = fmul float %2556, 5.000000e-01, !dbg !120
  %2609 = fmul float %2562, 5.000000e-01, !dbg !120
  %2610 = fmul float %2563, 5.000000e-01, !dbg !120
  %2611 = fmul float %2564, 5.000000e-01, !dbg !120
  %2612 = fmul float %2565, 5.000000e-01, !dbg !120
  %2613 = fmul float %2571, 5.000000e-01, !dbg !120
  %2614 = fmul float %2572, 5.000000e-01, !dbg !120
  %2615 = fmul float %2573, 5.000000e-01, !dbg !120
  %2616 = fmul float %2574, 5.000000e-01, !dbg !120
  %2617 = fmul float %2580, 5.000000e-01, !dbg !120
  %2618 = fmul float %2581, 5.000000e-01, !dbg !120
  %2619 = fmul float %2582, 5.000000e-01, !dbg !120
  %2620 = fmul float %2583, 5.000000e-01, !dbg !120
  %2621 = fmul float %2589, 5.000000e-01, !dbg !120
  %2622 = fmul float %2590, 5.000000e-01, !dbg !120
  %2623 = fmul float %2591, 5.000000e-01, !dbg !120
  %2624 = fmul float %2592, 5.000000e-01, !dbg !120
  %2625 = fmul float %2526, %2526, !dbg !121
  %2626 = fmul float %2527, %2527, !dbg !121
  %2627 = fmul float %2528, %2528, !dbg !121
  %2628 = fmul float %2529, %2529, !dbg !121
  %2629 = fmul float %2535, %2535, !dbg !121
  %2630 = fmul float %2536, %2536, !dbg !121
  %2631 = fmul float %2537, %2537, !dbg !121
  %2632 = fmul float %2538, %2538, !dbg !121
  %2633 = fmul float %2544, %2544, !dbg !121
  %2634 = fmul float %2545, %2545, !dbg !121
  %2635 = fmul float %2546, %2546, !dbg !121
  %2636 = fmul float %2547, %2547, !dbg !121
  %2637 = fmul float %2553, %2553, !dbg !121
  %2638 = fmul float %2554, %2554, !dbg !121
  %2639 = fmul float %2555, %2555, !dbg !121
  %2640 = fmul float %2556, %2556, !dbg !121
  %2641 = fmul float %2562, %2562, !dbg !121
  %2642 = fmul float %2563, %2563, !dbg !121
  %2643 = fmul float %2564, %2564, !dbg !121
  %2644 = fmul float %2565, %2565, !dbg !121
  %2645 = fmul float %2571, %2571, !dbg !121
  %2646 = fmul float %2572, %2572, !dbg !121
  %2647 = fmul float %2573, %2573, !dbg !121
  %2648 = fmul float %2574, %2574, !dbg !121
  %2649 = fmul float %2580, %2580, !dbg !121
  %2650 = fmul float %2581, %2581, !dbg !121
  %2651 = fmul float %2582, %2582, !dbg !121
  %2652 = fmul float %2583, %2583, !dbg !121
  %2653 = fmul float %2589, %2589, !dbg !121
  %2654 = fmul float %2590, %2590, !dbg !121
  %2655 = fmul float %2591, %2591, !dbg !121
  %2656 = fmul float %2592, %2592, !dbg !121
  %2657 = fmul float %2625, %2526, !dbg !122
  %2658 = fmul float %2626, %2527, !dbg !122
  %2659 = fmul float %2627, %2528, !dbg !122
  %2660 = fmul float %2628, %2529, !dbg !122
  %2661 = fmul float %2629, %2535, !dbg !122
  %2662 = fmul float %2630, %2536, !dbg !122
  %2663 = fmul float %2631, %2537, !dbg !122
  %2664 = fmul float %2632, %2538, !dbg !122
  %2665 = fmul float %2633, %2544, !dbg !122
  %2666 = fmul float %2634, %2545, !dbg !122
  %2667 = fmul float %2635, %2546, !dbg !122
  %2668 = fmul float %2636, %2547, !dbg !122
  %2669 = fmul float %2637, %2553, !dbg !122
  %2670 = fmul float %2638, %2554, !dbg !122
  %2671 = fmul float %2639, %2555, !dbg !122
  %2672 = fmul float %2640, %2556, !dbg !122
  %2673 = fmul float %2641, %2562, !dbg !122
  %2674 = fmul float %2642, %2563, !dbg !122
  %2675 = fmul float %2643, %2564, !dbg !122
  %2676 = fmul float %2644, %2565, !dbg !122
  %2677 = fmul float %2645, %2571, !dbg !122
  %2678 = fmul float %2646, %2572, !dbg !122
  %2679 = fmul float %2647, %2573, !dbg !122
  %2680 = fmul float %2648, %2574, !dbg !122
  %2681 = fmul float %2649, %2580, !dbg !122
  %2682 = fmul float %2650, %2581, !dbg !122
  %2683 = fmul float %2651, %2582, !dbg !122
  %2684 = fmul float %2652, %2583, !dbg !122
  %2685 = fmul float %2653, %2589, !dbg !122
  %2686 = fmul float %2654, %2590, !dbg !122
  %2687 = fmul float %2655, %2591, !dbg !122
  %2688 = fmul float %2656, %2592, !dbg !122
  %2689 = fmul float %2657, 0x3FA6E4E260000000, !dbg !123
  %2690 = fmul float %2658, 0x3FA6E4E260000000, !dbg !123
  %2691 = fmul float %2659, 0x3FA6E4E260000000, !dbg !123
  %2692 = fmul float %2660, 0x3FA6E4E260000000, !dbg !123
  %2693 = fmul float %2661, 0x3FA6E4E260000000, !dbg !123
  %2694 = fmul float %2662, 0x3FA6E4E260000000, !dbg !123
  %2695 = fmul float %2663, 0x3FA6E4E260000000, !dbg !123
  %2696 = fmul float %2664, 0x3FA6E4E260000000, !dbg !123
  %2697 = fmul float %2665, 0x3FA6E4E260000000, !dbg !123
  %2698 = fmul float %2666, 0x3FA6E4E260000000, !dbg !123
  %2699 = fmul float %2667, 0x3FA6E4E260000000, !dbg !123
  %2700 = fmul float %2668, 0x3FA6E4E260000000, !dbg !123
  %2701 = fmul float %2669, 0x3FA6E4E260000000, !dbg !123
  %2702 = fmul float %2670, 0x3FA6E4E260000000, !dbg !123
  %2703 = fmul float %2671, 0x3FA6E4E260000000, !dbg !123
  %2704 = fmul float %2672, 0x3FA6E4E260000000, !dbg !123
  %2705 = fmul float %2673, 0x3FA6E4E260000000, !dbg !123
  %2706 = fmul float %2674, 0x3FA6E4E260000000, !dbg !123
  %2707 = fmul float %2675, 0x3FA6E4E260000000, !dbg !123
  %2708 = fmul float %2676, 0x3FA6E4E260000000, !dbg !123
  %2709 = fmul float %2677, 0x3FA6E4E260000000, !dbg !123
  %2710 = fmul float %2678, 0x3FA6E4E260000000, !dbg !123
  %2711 = fmul float %2679, 0x3FA6E4E260000000, !dbg !123
  %2712 = fmul float %2680, 0x3FA6E4E260000000, !dbg !123
  %2713 = fmul float %2681, 0x3FA6E4E260000000, !dbg !123
  %2714 = fmul float %2682, 0x3FA6E4E260000000, !dbg !123
  %2715 = fmul float %2683, 0x3FA6E4E260000000, !dbg !123
  %2716 = fmul float %2684, 0x3FA6E4E260000000, !dbg !123
  %2717 = fmul float %2685, 0x3FA6E4E260000000, !dbg !123
  %2718 = fmul float %2686, 0x3FA6E4E260000000, !dbg !123
  %2719 = fmul float %2687, 0x3FA6E4E260000000, !dbg !123
  %2720 = fmul float %2688, 0x3FA6E4E260000000, !dbg !123
  %2721 = fadd float %2689, %2526, !dbg !124
  %2722 = fadd float %2690, %2527, !dbg !124
  %2723 = fadd float %2691, %2528, !dbg !124
  %2724 = fadd float %2692, %2529, !dbg !124
  %2725 = fadd float %2693, %2535, !dbg !124
  %2726 = fadd float %2694, %2536, !dbg !124
  %2727 = fadd float %2695, %2537, !dbg !124
  %2728 = fadd float %2696, %2538, !dbg !124
  %2729 = fadd float %2697, %2544, !dbg !124
  %2730 = fadd float %2698, %2545, !dbg !124
  %2731 = fadd float %2699, %2546, !dbg !124
  %2732 = fadd float %2700, %2547, !dbg !124
  %2733 = fadd float %2701, %2553, !dbg !124
  %2734 = fadd float %2702, %2554, !dbg !124
  %2735 = fadd float %2703, %2555, !dbg !124
  %2736 = fadd float %2704, %2556, !dbg !124
  %2737 = fadd float %2705, %2562, !dbg !124
  %2738 = fadd float %2706, %2563, !dbg !124
  %2739 = fadd float %2707, %2564, !dbg !124
  %2740 = fadd float %2708, %2565, !dbg !124
  %2741 = fadd float %2709, %2571, !dbg !124
  %2742 = fadd float %2710, %2572, !dbg !124
  %2743 = fadd float %2711, %2573, !dbg !124
  %2744 = fadd float %2712, %2574, !dbg !124
  %2745 = fadd float %2713, %2580, !dbg !124
  %2746 = fadd float %2714, %2581, !dbg !124
  %2747 = fadd float %2715, %2582, !dbg !124
  %2748 = fadd float %2716, %2583, !dbg !124
  %2749 = fadd float %2717, %2589, !dbg !124
  %2750 = fadd float %2718, %2590, !dbg !124
  %2751 = fadd float %2719, %2591, !dbg !124
  %2752 = fadd float %2720, %2592, !dbg !124
  %2753 = fmul float %2721, 0x3FE9884540000000, !dbg !125
  %2754 = fmul float %2722, 0x3FE9884540000000, !dbg !125
  %2755 = fmul float %2723, 0x3FE9884540000000, !dbg !125
  %2756 = fmul float %2724, 0x3FE9884540000000, !dbg !125
  %2757 = fmul float %2725, 0x3FE9884540000000, !dbg !125
  %2758 = fmul float %2726, 0x3FE9884540000000, !dbg !125
  %2759 = fmul float %2727, 0x3FE9884540000000, !dbg !125
  %2760 = fmul float %2728, 0x3FE9884540000000, !dbg !125
  %2761 = fmul float %2729, 0x3FE9884540000000, !dbg !125
  %2762 = fmul float %2730, 0x3FE9884540000000, !dbg !125
  %2763 = fmul float %2731, 0x3FE9884540000000, !dbg !125
  %2764 = fmul float %2732, 0x3FE9884540000000, !dbg !125
  %2765 = fmul float %2733, 0x3FE9884540000000, !dbg !125
  %2766 = fmul float %2734, 0x3FE9884540000000, !dbg !125
  %2767 = fmul float %2735, 0x3FE9884540000000, !dbg !125
  %2768 = fmul float %2736, 0x3FE9884540000000, !dbg !125
  %2769 = fmul float %2737, 0x3FE9884540000000, !dbg !125
  %2770 = fmul float %2738, 0x3FE9884540000000, !dbg !125
  %2771 = fmul float %2739, 0x3FE9884540000000, !dbg !125
  %2772 = fmul float %2740, 0x3FE9884540000000, !dbg !125
  %2773 = fmul float %2741, 0x3FE9884540000000, !dbg !125
  %2774 = fmul float %2742, 0x3FE9884540000000, !dbg !125
  %2775 = fmul float %2743, 0x3FE9884540000000, !dbg !125
  %2776 = fmul float %2744, 0x3FE9884540000000, !dbg !125
  %2777 = fmul float %2745, 0x3FE9884540000000, !dbg !125
  %2778 = fmul float %2746, 0x3FE9884540000000, !dbg !125
  %2779 = fmul float %2747, 0x3FE9884540000000, !dbg !125
  %2780 = fmul float %2748, 0x3FE9884540000000, !dbg !125
  %2781 = fmul float %2749, 0x3FE9884540000000, !dbg !125
  %2782 = fmul float %2750, 0x3FE9884540000000, !dbg !125
  %2783 = fmul float %2751, 0x3FE9884540000000, !dbg !125
  %2784 = fmul float %2752, 0x3FE9884540000000, !dbg !125
  %2785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i = icmp eq i32 %2785, 0, !dbg !126
  %2786 = tail call float @llvm.nvvm.fabs.ftz.f(float %2753) #5, !dbg !126
  %2787 = tail call float @llvm.nvvm.fabs.f(float %2753) #5, !dbg !126
  %.01.i = select i1 %.not.i, float %2787, float %2786, !dbg !126
  %2788 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !126
  br i1 %2788, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !126

__internal_fmad.exit1.i:                          ; preds = %2485
  %2789 = fmul float %.01.i, 0x4007154760000000, !dbg !126
  %2790 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2789) #5, !dbg !126
  %2791 = fadd float %2790, 1.000000e+00, !dbg !126
  %2792 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2791) #6, !dbg !126, !srcloc !64
  %2793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i = icmp eq i32 %2793, 0, !dbg !126
  %2794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2792, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2795 = tail call float @llvm.nvvm.fma.rn.f(float %2792, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i = select i1 %.not6.i, float %2795, float %2794, !dbg !126
  %2796 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !126
  %s.0.i = select i1 %2796, float 1.000000e+00, float %.03.i, !dbg !126
  %2797 = bitcast float %s.0.i to i32, !dbg !126
  %2798 = bitcast float %2753 to i32, !dbg !126
  %2799 = and i32 %2798, -2147483648, !dbg !126
  %2800 = or i32 %2799, %2797, !dbg !126
  %2801 = bitcast i32 %2800 to float, !dbg !126
  br label %__nv_tanhf.exit, !dbg !126

__internal_fmad.exit3.i:                          ; preds = %2485
  %2802 = fmul float %2753, %2753, !dbg !126
  %2803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i = icmp eq i32 %2803, 0, !dbg !126
  %2804 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2802, float 0xBFAAC795C0000000) #5, !dbg !126
  %2805 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2802, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i = select i1 %.not1.i, float %2805, float %2804, !dbg !126
  %2806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i = icmp eq i32 %2806, 0, !dbg !126
  %2807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %2802, float 0x3FC10B2820000000) #5, !dbg !126
  %2808 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %2802, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i = select i1 %.not2.i, float %2808, float %2807, !dbg !126
  %2809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i = icmp eq i32 %2809, 0, !dbg !126
  %2810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %2802, float 0xBFD5553DA0000000) #5, !dbg !126
  %2811 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %2802, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i = select i1 %.not3.i, float %2811, float %2810, !dbg !126
  %2812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i = icmp eq i32 %2812, 0, !dbg !126
  %2813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %2802, float 0.000000e+00) #5, !dbg !126
  %2814 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %2802, float 0.000000e+00) #5, !dbg !126
  %.04.i = select i1 %.not4.i, float %2814, float %2813, !dbg !126
  %2815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i = icmp eq i32 %2815, 0, !dbg !126
  %2816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %2753, float %2753) #5, !dbg !126
  %2817 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %2753, float %2753) #5, !dbg !126
  %.02.i = select i1 %.not5.i, float %2817, float %2816, !dbg !126
  br label %__nv_tanhf.exit, !dbg !126

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %2801, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !126
  %2818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i103 = icmp eq i32 %2818, 0, !dbg !126
  %2819 = tail call float @llvm.nvvm.fabs.ftz.f(float %2754) #5, !dbg !126
  %2820 = tail call float @llvm.nvvm.fabs.f(float %2754) #5, !dbg !126
  %.01.i104 = select i1 %.not.i103, float %2820, float %2819, !dbg !126
  %2821 = fcmp ult float %.01.i104, 0x3FE3333340000000, !dbg !126
  br i1 %2821, label %__internal_fmad.exit3.i110, label %__internal_fmad.exit1.i105, !dbg !126

__internal_fmad.exit1.i105:                       ; preds = %__nv_tanhf.exit
  %2822 = fmul float %.01.i104, 0x4007154760000000, !dbg !126
  %2823 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2822) #5, !dbg !126
  %2824 = fadd float %2823, 1.000000e+00, !dbg !126
  %2825 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2824) #6, !dbg !126, !srcloc !64
  %2826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i106 = icmp eq i32 %2826, 0, !dbg !126
  %2827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2825, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2828 = tail call float @llvm.nvvm.fma.rn.f(float %2825, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i107 = select i1 %.not6.i106, float %2828, float %2827, !dbg !126
  %2829 = fcmp oge float %.01.i104, 0x4022059680000000, !dbg !126
  %s.0.i108 = select i1 %2829, float 1.000000e+00, float %.03.i107, !dbg !126
  %2830 = bitcast float %s.0.i108 to i32, !dbg !126
  %2831 = bitcast float %2754 to i32, !dbg !126
  %2832 = and i32 %2831, -2147483648, !dbg !126
  %2833 = or i32 %2832, %2830, !dbg !126
  %2834 = bitcast i32 %2833 to float, !dbg !126
  br label %__nv_tanhf.exit121, !dbg !126

__internal_fmad.exit3.i110:                       ; preds = %__nv_tanhf.exit
  %2835 = fmul float %2754, %2754, !dbg !126
  %2836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i111 = icmp eq i32 %2836, 0, !dbg !126
  %2837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2835, float 0xBFAAC795C0000000) #5, !dbg !126
  %2838 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2835, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i112 = select i1 %.not1.i111, float %2838, float %2837, !dbg !126
  %2839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i113 = icmp eq i32 %2839, 0, !dbg !126
  %2840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i112, float %2835, float 0x3FC10B2820000000) #5, !dbg !126
  %2841 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i112, float %2835, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i114 = select i1 %.not2.i113, float %2841, float %2840, !dbg !126
  %2842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i115 = icmp eq i32 %2842, 0, !dbg !126
  %2843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i114, float %2835, float 0xBFD5553DA0000000) #5, !dbg !126
  %2844 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i114, float %2835, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i116 = select i1 %.not3.i115, float %2844, float %2843, !dbg !126
  %2845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i117 = icmp eq i32 %2845, 0, !dbg !126
  %2846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i116, float %2835, float 0.000000e+00) #5, !dbg !126
  %2847 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i116, float %2835, float 0.000000e+00) #5, !dbg !126
  %.04.i118 = select i1 %.not4.i117, float %2847, float %2846, !dbg !126
  %2848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i119 = icmp eq i32 %2848, 0, !dbg !126
  %2849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i118, float %2754, float %2754) #5, !dbg !126
  %2850 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i118, float %2754, float %2754) #5, !dbg !126
  %.02.i120 = select i1 %.not5.i119, float %2850, float %2849, !dbg !126
  br label %__nv_tanhf.exit121, !dbg !126

__nv_tanhf.exit121:                               ; preds = %__internal_fmad.exit1.i105, %__internal_fmad.exit3.i110
  %s.1.i109 = phi float [ %2834, %__internal_fmad.exit1.i105 ], [ %.02.i120, %__internal_fmad.exit3.i110 ], !dbg !126
  %2851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i122 = icmp eq i32 %2851, 0, !dbg !126
  %2852 = tail call float @llvm.nvvm.fabs.ftz.f(float %2755) #5, !dbg !126
  %2853 = tail call float @llvm.nvvm.fabs.f(float %2755) #5, !dbg !126
  %.01.i123 = select i1 %.not.i122, float %2853, float %2852, !dbg !126
  %2854 = fcmp ult float %.01.i123, 0x3FE3333340000000, !dbg !126
  br i1 %2854, label %__internal_fmad.exit3.i129, label %__internal_fmad.exit1.i124, !dbg !126

__internal_fmad.exit1.i124:                       ; preds = %__nv_tanhf.exit121
  %2855 = fmul float %.01.i123, 0x4007154760000000, !dbg !126
  %2856 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2855) #5, !dbg !126
  %2857 = fadd float %2856, 1.000000e+00, !dbg !126
  %2858 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2857) #6, !dbg !126, !srcloc !64
  %2859 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i125 = icmp eq i32 %2859, 0, !dbg !126
  %2860 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2858, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2861 = tail call float @llvm.nvvm.fma.rn.f(float %2858, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i126 = select i1 %.not6.i125, float %2861, float %2860, !dbg !126
  %2862 = fcmp oge float %.01.i123, 0x4022059680000000, !dbg !126
  %s.0.i127 = select i1 %2862, float 1.000000e+00, float %.03.i126, !dbg !126
  %2863 = bitcast float %s.0.i127 to i32, !dbg !126
  %2864 = bitcast float %2755 to i32, !dbg !126
  %2865 = and i32 %2864, -2147483648, !dbg !126
  %2866 = or i32 %2865, %2863, !dbg !126
  %2867 = bitcast i32 %2866 to float, !dbg !126
  br label %__nv_tanhf.exit140, !dbg !126

__internal_fmad.exit3.i129:                       ; preds = %__nv_tanhf.exit121
  %2868 = fmul float %2755, %2755, !dbg !126
  %2869 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i130 = icmp eq i32 %2869, 0, !dbg !126
  %2870 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2868, float 0xBFAAC795C0000000) #5, !dbg !126
  %2871 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2868, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i131 = select i1 %.not1.i130, float %2871, float %2870, !dbg !126
  %2872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i132 = icmp eq i32 %2872, 0, !dbg !126
  %2873 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i131, float %2868, float 0x3FC10B2820000000) #5, !dbg !126
  %2874 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i131, float %2868, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i133 = select i1 %.not2.i132, float %2874, float %2873, !dbg !126
  %2875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i134 = icmp eq i32 %2875, 0, !dbg !126
  %2876 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i133, float %2868, float 0xBFD5553DA0000000) #5, !dbg !126
  %2877 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i133, float %2868, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i135 = select i1 %.not3.i134, float %2877, float %2876, !dbg !126
  %2878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i136 = icmp eq i32 %2878, 0, !dbg !126
  %2879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i135, float %2868, float 0.000000e+00) #5, !dbg !126
  %2880 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i135, float %2868, float 0.000000e+00) #5, !dbg !126
  %.04.i137 = select i1 %.not4.i136, float %2880, float %2879, !dbg !126
  %2881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i138 = icmp eq i32 %2881, 0, !dbg !126
  %2882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i137, float %2755, float %2755) #5, !dbg !126
  %2883 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i137, float %2755, float %2755) #5, !dbg !126
  %.02.i139 = select i1 %.not5.i138, float %2883, float %2882, !dbg !126
  br label %__nv_tanhf.exit140, !dbg !126

__nv_tanhf.exit140:                               ; preds = %__internal_fmad.exit1.i124, %__internal_fmad.exit3.i129
  %s.1.i128 = phi float [ %2867, %__internal_fmad.exit1.i124 ], [ %.02.i139, %__internal_fmad.exit3.i129 ], !dbg !126
  %2884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i141 = icmp eq i32 %2884, 0, !dbg !126
  %2885 = tail call float @llvm.nvvm.fabs.ftz.f(float %2756) #5, !dbg !126
  %2886 = tail call float @llvm.nvvm.fabs.f(float %2756) #5, !dbg !126
  %.01.i142 = select i1 %.not.i141, float %2886, float %2885, !dbg !126
  %2887 = fcmp ult float %.01.i142, 0x3FE3333340000000, !dbg !126
  br i1 %2887, label %__internal_fmad.exit3.i148, label %__internal_fmad.exit1.i143, !dbg !126

__internal_fmad.exit1.i143:                       ; preds = %__nv_tanhf.exit140
  %2888 = fmul float %.01.i142, 0x4007154760000000, !dbg !126
  %2889 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2888) #5, !dbg !126
  %2890 = fadd float %2889, 1.000000e+00, !dbg !126
  %2891 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2890) #6, !dbg !126, !srcloc !64
  %2892 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i144 = icmp eq i32 %2892, 0, !dbg !126
  %2893 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2891, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2894 = tail call float @llvm.nvvm.fma.rn.f(float %2891, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i145 = select i1 %.not6.i144, float %2894, float %2893, !dbg !126
  %2895 = fcmp oge float %.01.i142, 0x4022059680000000, !dbg !126
  %s.0.i146 = select i1 %2895, float 1.000000e+00, float %.03.i145, !dbg !126
  %2896 = bitcast float %s.0.i146 to i32, !dbg !126
  %2897 = bitcast float %2756 to i32, !dbg !126
  %2898 = and i32 %2897, -2147483648, !dbg !126
  %2899 = or i32 %2898, %2896, !dbg !126
  %2900 = bitcast i32 %2899 to float, !dbg !126
  br label %__nv_tanhf.exit159, !dbg !126

__internal_fmad.exit3.i148:                       ; preds = %__nv_tanhf.exit140
  %2901 = fmul float %2756, %2756, !dbg !126
  %2902 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i149 = icmp eq i32 %2902, 0, !dbg !126
  %2903 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2901, float 0xBFAAC795C0000000) #5, !dbg !126
  %2904 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2901, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i150 = select i1 %.not1.i149, float %2904, float %2903, !dbg !126
  %2905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i151 = icmp eq i32 %2905, 0, !dbg !126
  %2906 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i150, float %2901, float 0x3FC10B2820000000) #5, !dbg !126
  %2907 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i150, float %2901, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i152 = select i1 %.not2.i151, float %2907, float %2906, !dbg !126
  %2908 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i153 = icmp eq i32 %2908, 0, !dbg !126
  %2909 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i152, float %2901, float 0xBFD5553DA0000000) #5, !dbg !126
  %2910 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i152, float %2901, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i154 = select i1 %.not3.i153, float %2910, float %2909, !dbg !126
  %2911 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i155 = icmp eq i32 %2911, 0, !dbg !126
  %2912 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i154, float %2901, float 0.000000e+00) #5, !dbg !126
  %2913 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i154, float %2901, float 0.000000e+00) #5, !dbg !126
  %.04.i156 = select i1 %.not4.i155, float %2913, float %2912, !dbg !126
  %2914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i157 = icmp eq i32 %2914, 0, !dbg !126
  %2915 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i156, float %2756, float %2756) #5, !dbg !126
  %2916 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i156, float %2756, float %2756) #5, !dbg !126
  %.02.i158 = select i1 %.not5.i157, float %2916, float %2915, !dbg !126
  br label %__nv_tanhf.exit159, !dbg !126

__nv_tanhf.exit159:                               ; preds = %__internal_fmad.exit1.i143, %__internal_fmad.exit3.i148
  %s.1.i147 = phi float [ %2900, %__internal_fmad.exit1.i143 ], [ %.02.i158, %__internal_fmad.exit3.i148 ], !dbg !126
  %2917 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i160 = icmp eq i32 %2917, 0, !dbg !126
  %2918 = tail call float @llvm.nvvm.fabs.ftz.f(float %2757) #5, !dbg !126
  %2919 = tail call float @llvm.nvvm.fabs.f(float %2757) #5, !dbg !126
  %.01.i161 = select i1 %.not.i160, float %2919, float %2918, !dbg !126
  %2920 = fcmp ult float %.01.i161, 0x3FE3333340000000, !dbg !126
  br i1 %2920, label %__internal_fmad.exit3.i167, label %__internal_fmad.exit1.i162, !dbg !126

__internal_fmad.exit1.i162:                       ; preds = %__nv_tanhf.exit159
  %2921 = fmul float %.01.i161, 0x4007154760000000, !dbg !126
  %2922 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2921) #5, !dbg !126
  %2923 = fadd float %2922, 1.000000e+00, !dbg !126
  %2924 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2923) #6, !dbg !126, !srcloc !64
  %2925 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i163 = icmp eq i32 %2925, 0, !dbg !126
  %2926 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2924, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2927 = tail call float @llvm.nvvm.fma.rn.f(float %2924, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i164 = select i1 %.not6.i163, float %2927, float %2926, !dbg !126
  %2928 = fcmp oge float %.01.i161, 0x4022059680000000, !dbg !126
  %s.0.i165 = select i1 %2928, float 1.000000e+00, float %.03.i164, !dbg !126
  %2929 = bitcast float %s.0.i165 to i32, !dbg !126
  %2930 = bitcast float %2757 to i32, !dbg !126
  %2931 = and i32 %2930, -2147483648, !dbg !126
  %2932 = or i32 %2931, %2929, !dbg !126
  %2933 = bitcast i32 %2932 to float, !dbg !126
  br label %__nv_tanhf.exit178, !dbg !126

__internal_fmad.exit3.i167:                       ; preds = %__nv_tanhf.exit159
  %2934 = fmul float %2757, %2757, !dbg !126
  %2935 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i168 = icmp eq i32 %2935, 0, !dbg !126
  %2936 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2934, float 0xBFAAC795C0000000) #5, !dbg !126
  %2937 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2934, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i169 = select i1 %.not1.i168, float %2937, float %2936, !dbg !126
  %2938 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i170 = icmp eq i32 %2938, 0, !dbg !126
  %2939 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i169, float %2934, float 0x3FC10B2820000000) #5, !dbg !126
  %2940 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i169, float %2934, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i171 = select i1 %.not2.i170, float %2940, float %2939, !dbg !126
  %2941 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i172 = icmp eq i32 %2941, 0, !dbg !126
  %2942 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i171, float %2934, float 0xBFD5553DA0000000) #5, !dbg !126
  %2943 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i171, float %2934, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i173 = select i1 %.not3.i172, float %2943, float %2942, !dbg !126
  %2944 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i174 = icmp eq i32 %2944, 0, !dbg !126
  %2945 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i173, float %2934, float 0.000000e+00) #5, !dbg !126
  %2946 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i173, float %2934, float 0.000000e+00) #5, !dbg !126
  %.04.i175 = select i1 %.not4.i174, float %2946, float %2945, !dbg !126
  %2947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i176 = icmp eq i32 %2947, 0, !dbg !126
  %2948 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i175, float %2757, float %2757) #5, !dbg !126
  %2949 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i175, float %2757, float %2757) #5, !dbg !126
  %.02.i177 = select i1 %.not5.i176, float %2949, float %2948, !dbg !126
  br label %__nv_tanhf.exit178, !dbg !126

__nv_tanhf.exit178:                               ; preds = %__internal_fmad.exit1.i162, %__internal_fmad.exit3.i167
  %s.1.i166 = phi float [ %2933, %__internal_fmad.exit1.i162 ], [ %.02.i177, %__internal_fmad.exit3.i167 ], !dbg !126
  %2950 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i179 = icmp eq i32 %2950, 0, !dbg !126
  %2951 = tail call float @llvm.nvvm.fabs.ftz.f(float %2758) #5, !dbg !126
  %2952 = tail call float @llvm.nvvm.fabs.f(float %2758) #5, !dbg !126
  %.01.i180 = select i1 %.not.i179, float %2952, float %2951, !dbg !126
  %2953 = fcmp ult float %.01.i180, 0x3FE3333340000000, !dbg !126
  br i1 %2953, label %__internal_fmad.exit3.i186, label %__internal_fmad.exit1.i181, !dbg !126

__internal_fmad.exit1.i181:                       ; preds = %__nv_tanhf.exit178
  %2954 = fmul float %.01.i180, 0x4007154760000000, !dbg !126
  %2955 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2954) #5, !dbg !126
  %2956 = fadd float %2955, 1.000000e+00, !dbg !126
  %2957 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2956) #6, !dbg !126, !srcloc !64
  %2958 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i182 = icmp eq i32 %2958, 0, !dbg !126
  %2959 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2957, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2960 = tail call float @llvm.nvvm.fma.rn.f(float %2957, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i183 = select i1 %.not6.i182, float %2960, float %2959, !dbg !126
  %2961 = fcmp oge float %.01.i180, 0x4022059680000000, !dbg !126
  %s.0.i184 = select i1 %2961, float 1.000000e+00, float %.03.i183, !dbg !126
  %2962 = bitcast float %s.0.i184 to i32, !dbg !126
  %2963 = bitcast float %2758 to i32, !dbg !126
  %2964 = and i32 %2963, -2147483648, !dbg !126
  %2965 = or i32 %2964, %2962, !dbg !126
  %2966 = bitcast i32 %2965 to float, !dbg !126
  br label %__nv_tanhf.exit197, !dbg !126

__internal_fmad.exit3.i186:                       ; preds = %__nv_tanhf.exit178
  %2967 = fmul float %2758, %2758, !dbg !126
  %2968 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i187 = icmp eq i32 %2968, 0, !dbg !126
  %2969 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2967, float 0xBFAAC795C0000000) #5, !dbg !126
  %2970 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2967, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i188 = select i1 %.not1.i187, float %2970, float %2969, !dbg !126
  %2971 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i189 = icmp eq i32 %2971, 0, !dbg !126
  %2972 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i188, float %2967, float 0x3FC10B2820000000) #5, !dbg !126
  %2973 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i188, float %2967, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i190 = select i1 %.not2.i189, float %2973, float %2972, !dbg !126
  %2974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i191 = icmp eq i32 %2974, 0, !dbg !126
  %2975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i190, float %2967, float 0xBFD5553DA0000000) #5, !dbg !126
  %2976 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i190, float %2967, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i192 = select i1 %.not3.i191, float %2976, float %2975, !dbg !126
  %2977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i193 = icmp eq i32 %2977, 0, !dbg !126
  %2978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i192, float %2967, float 0.000000e+00) #5, !dbg !126
  %2979 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i192, float %2967, float 0.000000e+00) #5, !dbg !126
  %.04.i194 = select i1 %.not4.i193, float %2979, float %2978, !dbg !126
  %2980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i195 = icmp eq i32 %2980, 0, !dbg !126
  %2981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i194, float %2758, float %2758) #5, !dbg !126
  %2982 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i194, float %2758, float %2758) #5, !dbg !126
  %.02.i196 = select i1 %.not5.i195, float %2982, float %2981, !dbg !126
  br label %__nv_tanhf.exit197, !dbg !126

__nv_tanhf.exit197:                               ; preds = %__internal_fmad.exit1.i181, %__internal_fmad.exit3.i186
  %s.1.i185 = phi float [ %2966, %__internal_fmad.exit1.i181 ], [ %.02.i196, %__internal_fmad.exit3.i186 ], !dbg !126
  %2983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i198 = icmp eq i32 %2983, 0, !dbg !126
  %2984 = tail call float @llvm.nvvm.fabs.ftz.f(float %2759) #5, !dbg !126
  %2985 = tail call float @llvm.nvvm.fabs.f(float %2759) #5, !dbg !126
  %.01.i199 = select i1 %.not.i198, float %2985, float %2984, !dbg !126
  %2986 = fcmp ult float %.01.i199, 0x3FE3333340000000, !dbg !126
  br i1 %2986, label %__internal_fmad.exit3.i205, label %__internal_fmad.exit1.i200, !dbg !126

__internal_fmad.exit1.i200:                       ; preds = %__nv_tanhf.exit197
  %2987 = fmul float %.01.i199, 0x4007154760000000, !dbg !126
  %2988 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2987) #5, !dbg !126
  %2989 = fadd float %2988, 1.000000e+00, !dbg !126
  %2990 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2989) #6, !dbg !126, !srcloc !64
  %2991 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i201 = icmp eq i32 %2991, 0, !dbg !126
  %2992 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2990, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %2993 = tail call float @llvm.nvvm.fma.rn.f(float %2990, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i202 = select i1 %.not6.i201, float %2993, float %2992, !dbg !126
  %2994 = fcmp oge float %.01.i199, 0x4022059680000000, !dbg !126
  %s.0.i203 = select i1 %2994, float 1.000000e+00, float %.03.i202, !dbg !126
  %2995 = bitcast float %s.0.i203 to i32, !dbg !126
  %2996 = bitcast float %2759 to i32, !dbg !126
  %2997 = and i32 %2996, -2147483648, !dbg !126
  %2998 = or i32 %2997, %2995, !dbg !126
  %2999 = bitcast i32 %2998 to float, !dbg !126
  br label %__nv_tanhf.exit216, !dbg !126

__internal_fmad.exit3.i205:                       ; preds = %__nv_tanhf.exit197
  %3000 = fmul float %2759, %2759, !dbg !126
  %3001 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i206 = icmp eq i32 %3001, 0, !dbg !126
  %3002 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3000, float 0xBFAAC795C0000000) #5, !dbg !126
  %3003 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3000, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i207 = select i1 %.not1.i206, float %3003, float %3002, !dbg !126
  %3004 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i208 = icmp eq i32 %3004, 0, !dbg !126
  %3005 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i207, float %3000, float 0x3FC10B2820000000) #5, !dbg !126
  %3006 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i207, float %3000, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i209 = select i1 %.not2.i208, float %3006, float %3005, !dbg !126
  %3007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i210 = icmp eq i32 %3007, 0, !dbg !126
  %3008 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i209, float %3000, float 0xBFD5553DA0000000) #5, !dbg !126
  %3009 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i209, float %3000, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i211 = select i1 %.not3.i210, float %3009, float %3008, !dbg !126
  %3010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i212 = icmp eq i32 %3010, 0, !dbg !126
  %3011 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i211, float %3000, float 0.000000e+00) #5, !dbg !126
  %3012 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i211, float %3000, float 0.000000e+00) #5, !dbg !126
  %.04.i213 = select i1 %.not4.i212, float %3012, float %3011, !dbg !126
  %3013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i214 = icmp eq i32 %3013, 0, !dbg !126
  %3014 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i213, float %2759, float %2759) #5, !dbg !126
  %3015 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i213, float %2759, float %2759) #5, !dbg !126
  %.02.i215 = select i1 %.not5.i214, float %3015, float %3014, !dbg !126
  br label %__nv_tanhf.exit216, !dbg !126

__nv_tanhf.exit216:                               ; preds = %__internal_fmad.exit1.i200, %__internal_fmad.exit3.i205
  %s.1.i204 = phi float [ %2999, %__internal_fmad.exit1.i200 ], [ %.02.i215, %__internal_fmad.exit3.i205 ], !dbg !126
  %3016 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i217 = icmp eq i32 %3016, 0, !dbg !126
  %3017 = tail call float @llvm.nvvm.fabs.ftz.f(float %2760) #5, !dbg !126
  %3018 = tail call float @llvm.nvvm.fabs.f(float %2760) #5, !dbg !126
  %.01.i218 = select i1 %.not.i217, float %3018, float %3017, !dbg !126
  %3019 = fcmp ult float %.01.i218, 0x3FE3333340000000, !dbg !126
  br i1 %3019, label %__internal_fmad.exit3.i224, label %__internal_fmad.exit1.i219, !dbg !126

__internal_fmad.exit1.i219:                       ; preds = %__nv_tanhf.exit216
  %3020 = fmul float %.01.i218, 0x4007154760000000, !dbg !126
  %3021 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3020) #5, !dbg !126
  %3022 = fadd float %3021, 1.000000e+00, !dbg !126
  %3023 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3022) #6, !dbg !126, !srcloc !64
  %3024 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i220 = icmp eq i32 %3024, 0, !dbg !126
  %3025 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3023, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3026 = tail call float @llvm.nvvm.fma.rn.f(float %3023, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i221 = select i1 %.not6.i220, float %3026, float %3025, !dbg !126
  %3027 = fcmp oge float %.01.i218, 0x4022059680000000, !dbg !126
  %s.0.i222 = select i1 %3027, float 1.000000e+00, float %.03.i221, !dbg !126
  %3028 = bitcast float %s.0.i222 to i32, !dbg !126
  %3029 = bitcast float %2760 to i32, !dbg !126
  %3030 = and i32 %3029, -2147483648, !dbg !126
  %3031 = or i32 %3030, %3028, !dbg !126
  %3032 = bitcast i32 %3031 to float, !dbg !126
  br label %__nv_tanhf.exit235, !dbg !126

__internal_fmad.exit3.i224:                       ; preds = %__nv_tanhf.exit216
  %3033 = fmul float %2760, %2760, !dbg !126
  %3034 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i225 = icmp eq i32 %3034, 0, !dbg !126
  %3035 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3033, float 0xBFAAC795C0000000) #5, !dbg !126
  %3036 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3033, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i226 = select i1 %.not1.i225, float %3036, float %3035, !dbg !126
  %3037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i227 = icmp eq i32 %3037, 0, !dbg !126
  %3038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i226, float %3033, float 0x3FC10B2820000000) #5, !dbg !126
  %3039 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i226, float %3033, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i228 = select i1 %.not2.i227, float %3039, float %3038, !dbg !126
  %3040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i229 = icmp eq i32 %3040, 0, !dbg !126
  %3041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i228, float %3033, float 0xBFD5553DA0000000) #5, !dbg !126
  %3042 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i228, float %3033, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i230 = select i1 %.not3.i229, float %3042, float %3041, !dbg !126
  %3043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i231 = icmp eq i32 %3043, 0, !dbg !126
  %3044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i230, float %3033, float 0.000000e+00) #5, !dbg !126
  %3045 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i230, float %3033, float 0.000000e+00) #5, !dbg !126
  %.04.i232 = select i1 %.not4.i231, float %3045, float %3044, !dbg !126
  %3046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i233 = icmp eq i32 %3046, 0, !dbg !126
  %3047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i232, float %2760, float %2760) #5, !dbg !126
  %3048 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i232, float %2760, float %2760) #5, !dbg !126
  %.02.i234 = select i1 %.not5.i233, float %3048, float %3047, !dbg !126
  br label %__nv_tanhf.exit235, !dbg !126

__nv_tanhf.exit235:                               ; preds = %__internal_fmad.exit1.i219, %__internal_fmad.exit3.i224
  %s.1.i223 = phi float [ %3032, %__internal_fmad.exit1.i219 ], [ %.02.i234, %__internal_fmad.exit3.i224 ], !dbg !126
  %3049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i236 = icmp eq i32 %3049, 0, !dbg !126
  %3050 = tail call float @llvm.nvvm.fabs.ftz.f(float %2761) #5, !dbg !126
  %3051 = tail call float @llvm.nvvm.fabs.f(float %2761) #5, !dbg !126
  %.01.i237 = select i1 %.not.i236, float %3051, float %3050, !dbg !126
  %3052 = fcmp ult float %.01.i237, 0x3FE3333340000000, !dbg !126
  br i1 %3052, label %__internal_fmad.exit3.i243, label %__internal_fmad.exit1.i238, !dbg !126

__internal_fmad.exit1.i238:                       ; preds = %__nv_tanhf.exit235
  %3053 = fmul float %.01.i237, 0x4007154760000000, !dbg !126
  %3054 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3053) #5, !dbg !126
  %3055 = fadd float %3054, 1.000000e+00, !dbg !126
  %3056 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3055) #6, !dbg !126, !srcloc !64
  %3057 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i239 = icmp eq i32 %3057, 0, !dbg !126
  %3058 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3056, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3059 = tail call float @llvm.nvvm.fma.rn.f(float %3056, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i240 = select i1 %.not6.i239, float %3059, float %3058, !dbg !126
  %3060 = fcmp oge float %.01.i237, 0x4022059680000000, !dbg !126
  %s.0.i241 = select i1 %3060, float 1.000000e+00, float %.03.i240, !dbg !126
  %3061 = bitcast float %s.0.i241 to i32, !dbg !126
  %3062 = bitcast float %2761 to i32, !dbg !126
  %3063 = and i32 %3062, -2147483648, !dbg !126
  %3064 = or i32 %3063, %3061, !dbg !126
  %3065 = bitcast i32 %3064 to float, !dbg !126
  br label %__nv_tanhf.exit254, !dbg !126

__internal_fmad.exit3.i243:                       ; preds = %__nv_tanhf.exit235
  %3066 = fmul float %2761, %2761, !dbg !126
  %3067 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i244 = icmp eq i32 %3067, 0, !dbg !126
  %3068 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3066, float 0xBFAAC795C0000000) #5, !dbg !126
  %3069 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3066, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i245 = select i1 %.not1.i244, float %3069, float %3068, !dbg !126
  %3070 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i246 = icmp eq i32 %3070, 0, !dbg !126
  %3071 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i245, float %3066, float 0x3FC10B2820000000) #5, !dbg !126
  %3072 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i245, float %3066, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i247 = select i1 %.not2.i246, float %3072, float %3071, !dbg !126
  %3073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i248 = icmp eq i32 %3073, 0, !dbg !126
  %3074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i247, float %3066, float 0xBFD5553DA0000000) #5, !dbg !126
  %3075 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i247, float %3066, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i249 = select i1 %.not3.i248, float %3075, float %3074, !dbg !126
  %3076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i250 = icmp eq i32 %3076, 0, !dbg !126
  %3077 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i249, float %3066, float 0.000000e+00) #5, !dbg !126
  %3078 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i249, float %3066, float 0.000000e+00) #5, !dbg !126
  %.04.i251 = select i1 %.not4.i250, float %3078, float %3077, !dbg !126
  %3079 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i252 = icmp eq i32 %3079, 0, !dbg !126
  %3080 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i251, float %2761, float %2761) #5, !dbg !126
  %3081 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i251, float %2761, float %2761) #5, !dbg !126
  %.02.i253 = select i1 %.not5.i252, float %3081, float %3080, !dbg !126
  br label %__nv_tanhf.exit254, !dbg !126

__nv_tanhf.exit254:                               ; preds = %__internal_fmad.exit1.i238, %__internal_fmad.exit3.i243
  %s.1.i242 = phi float [ %3065, %__internal_fmad.exit1.i238 ], [ %.02.i253, %__internal_fmad.exit3.i243 ], !dbg !126
  %3082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i255 = icmp eq i32 %3082, 0, !dbg !126
  %3083 = tail call float @llvm.nvvm.fabs.ftz.f(float %2762) #5, !dbg !126
  %3084 = tail call float @llvm.nvvm.fabs.f(float %2762) #5, !dbg !126
  %.01.i256 = select i1 %.not.i255, float %3084, float %3083, !dbg !126
  %3085 = fcmp ult float %.01.i256, 0x3FE3333340000000, !dbg !126
  br i1 %3085, label %__internal_fmad.exit3.i262, label %__internal_fmad.exit1.i257, !dbg !126

__internal_fmad.exit1.i257:                       ; preds = %__nv_tanhf.exit254
  %3086 = fmul float %.01.i256, 0x4007154760000000, !dbg !126
  %3087 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3086) #5, !dbg !126
  %3088 = fadd float %3087, 1.000000e+00, !dbg !126
  %3089 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3088) #6, !dbg !126, !srcloc !64
  %3090 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i258 = icmp eq i32 %3090, 0, !dbg !126
  %3091 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3089, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3092 = tail call float @llvm.nvvm.fma.rn.f(float %3089, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i259 = select i1 %.not6.i258, float %3092, float %3091, !dbg !126
  %3093 = fcmp oge float %.01.i256, 0x4022059680000000, !dbg !126
  %s.0.i260 = select i1 %3093, float 1.000000e+00, float %.03.i259, !dbg !126
  %3094 = bitcast float %s.0.i260 to i32, !dbg !126
  %3095 = bitcast float %2762 to i32, !dbg !126
  %3096 = and i32 %3095, -2147483648, !dbg !126
  %3097 = or i32 %3096, %3094, !dbg !126
  %3098 = bitcast i32 %3097 to float, !dbg !126
  br label %__nv_tanhf.exit273, !dbg !126

__internal_fmad.exit3.i262:                       ; preds = %__nv_tanhf.exit254
  %3099 = fmul float %2762, %2762, !dbg !126
  %3100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i263 = icmp eq i32 %3100, 0, !dbg !126
  %3101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3099, float 0xBFAAC795C0000000) #5, !dbg !126
  %3102 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3099, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i264 = select i1 %.not1.i263, float %3102, float %3101, !dbg !126
  %3103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i265 = icmp eq i32 %3103, 0, !dbg !126
  %3104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i264, float %3099, float 0x3FC10B2820000000) #5, !dbg !126
  %3105 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i264, float %3099, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i266 = select i1 %.not2.i265, float %3105, float %3104, !dbg !126
  %3106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i267 = icmp eq i32 %3106, 0, !dbg !126
  %3107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float %3099, float 0xBFD5553DA0000000) #5, !dbg !126
  %3108 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float %3099, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i268 = select i1 %.not3.i267, float %3108, float %3107, !dbg !126
  %3109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i269 = icmp eq i32 %3109, 0, !dbg !126
  %3110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i268, float %3099, float 0.000000e+00) #5, !dbg !126
  %3111 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i268, float %3099, float 0.000000e+00) #5, !dbg !126
  %.04.i270 = select i1 %.not4.i269, float %3111, float %3110, !dbg !126
  %3112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i271 = icmp eq i32 %3112, 0, !dbg !126
  %3113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i270, float %2762, float %2762) #5, !dbg !126
  %3114 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i270, float %2762, float %2762) #5, !dbg !126
  %.02.i272 = select i1 %.not5.i271, float %3114, float %3113, !dbg !126
  br label %__nv_tanhf.exit273, !dbg !126

__nv_tanhf.exit273:                               ; preds = %__internal_fmad.exit1.i257, %__internal_fmad.exit3.i262
  %s.1.i261 = phi float [ %3098, %__internal_fmad.exit1.i257 ], [ %.02.i272, %__internal_fmad.exit3.i262 ], !dbg !126
  %3115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i274 = icmp eq i32 %3115, 0, !dbg !126
  %3116 = tail call float @llvm.nvvm.fabs.ftz.f(float %2763) #5, !dbg !126
  %3117 = tail call float @llvm.nvvm.fabs.f(float %2763) #5, !dbg !126
  %.01.i275 = select i1 %.not.i274, float %3117, float %3116, !dbg !126
  %3118 = fcmp ult float %.01.i275, 0x3FE3333340000000, !dbg !126
  br i1 %3118, label %__internal_fmad.exit3.i281, label %__internal_fmad.exit1.i276, !dbg !126

__internal_fmad.exit1.i276:                       ; preds = %__nv_tanhf.exit273
  %3119 = fmul float %.01.i275, 0x4007154760000000, !dbg !126
  %3120 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3119) #5, !dbg !126
  %3121 = fadd float %3120, 1.000000e+00, !dbg !126
  %3122 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3121) #6, !dbg !126, !srcloc !64
  %3123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i277 = icmp eq i32 %3123, 0, !dbg !126
  %3124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3122, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3125 = tail call float @llvm.nvvm.fma.rn.f(float %3122, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i278 = select i1 %.not6.i277, float %3125, float %3124, !dbg !126
  %3126 = fcmp oge float %.01.i275, 0x4022059680000000, !dbg !126
  %s.0.i279 = select i1 %3126, float 1.000000e+00, float %.03.i278, !dbg !126
  %3127 = bitcast float %s.0.i279 to i32, !dbg !126
  %3128 = bitcast float %2763 to i32, !dbg !126
  %3129 = and i32 %3128, -2147483648, !dbg !126
  %3130 = or i32 %3129, %3127, !dbg !126
  %3131 = bitcast i32 %3130 to float, !dbg !126
  br label %__nv_tanhf.exit292, !dbg !126

__internal_fmad.exit3.i281:                       ; preds = %__nv_tanhf.exit273
  %3132 = fmul float %2763, %2763, !dbg !126
  %3133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i282 = icmp eq i32 %3133, 0, !dbg !126
  %3134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3132, float 0xBFAAC795C0000000) #5, !dbg !126
  %3135 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3132, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i283 = select i1 %.not1.i282, float %3135, float %3134, !dbg !126
  %3136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i284 = icmp eq i32 %3136, 0, !dbg !126
  %3137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i283, float %3132, float 0x3FC10B2820000000) #5, !dbg !126
  %3138 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i283, float %3132, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i285 = select i1 %.not2.i284, float %3138, float %3137, !dbg !126
  %3139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i286 = icmp eq i32 %3139, 0, !dbg !126
  %3140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i285, float %3132, float 0xBFD5553DA0000000) #5, !dbg !126
  %3141 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i285, float %3132, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i287 = select i1 %.not3.i286, float %3141, float %3140, !dbg !126
  %3142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i288 = icmp eq i32 %3142, 0, !dbg !126
  %3143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i287, float %3132, float 0.000000e+00) #5, !dbg !126
  %3144 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i287, float %3132, float 0.000000e+00) #5, !dbg !126
  %.04.i289 = select i1 %.not4.i288, float %3144, float %3143, !dbg !126
  %3145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i290 = icmp eq i32 %3145, 0, !dbg !126
  %3146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i289, float %2763, float %2763) #5, !dbg !126
  %3147 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i289, float %2763, float %2763) #5, !dbg !126
  %.02.i291 = select i1 %.not5.i290, float %3147, float %3146, !dbg !126
  br label %__nv_tanhf.exit292, !dbg !126

__nv_tanhf.exit292:                               ; preds = %__internal_fmad.exit1.i276, %__internal_fmad.exit3.i281
  %s.1.i280 = phi float [ %3131, %__internal_fmad.exit1.i276 ], [ %.02.i291, %__internal_fmad.exit3.i281 ], !dbg !126
  %3148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i293 = icmp eq i32 %3148, 0, !dbg !126
  %3149 = tail call float @llvm.nvvm.fabs.ftz.f(float %2764) #5, !dbg !126
  %3150 = tail call float @llvm.nvvm.fabs.f(float %2764) #5, !dbg !126
  %.01.i294 = select i1 %.not.i293, float %3150, float %3149, !dbg !126
  %3151 = fcmp ult float %.01.i294, 0x3FE3333340000000, !dbg !126
  br i1 %3151, label %__internal_fmad.exit3.i300, label %__internal_fmad.exit1.i295, !dbg !126

__internal_fmad.exit1.i295:                       ; preds = %__nv_tanhf.exit292
  %3152 = fmul float %.01.i294, 0x4007154760000000, !dbg !126
  %3153 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3152) #5, !dbg !126
  %3154 = fadd float %3153, 1.000000e+00, !dbg !126
  %3155 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3154) #6, !dbg !126, !srcloc !64
  %3156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i296 = icmp eq i32 %3156, 0, !dbg !126
  %3157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3155, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3158 = tail call float @llvm.nvvm.fma.rn.f(float %3155, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i297 = select i1 %.not6.i296, float %3158, float %3157, !dbg !126
  %3159 = fcmp oge float %.01.i294, 0x4022059680000000, !dbg !126
  %s.0.i298 = select i1 %3159, float 1.000000e+00, float %.03.i297, !dbg !126
  %3160 = bitcast float %s.0.i298 to i32, !dbg !126
  %3161 = bitcast float %2764 to i32, !dbg !126
  %3162 = and i32 %3161, -2147483648, !dbg !126
  %3163 = or i32 %3162, %3160, !dbg !126
  %3164 = bitcast i32 %3163 to float, !dbg !126
  br label %__nv_tanhf.exit311, !dbg !126

__internal_fmad.exit3.i300:                       ; preds = %__nv_tanhf.exit292
  %3165 = fmul float %2764, %2764, !dbg !126
  %3166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i301 = icmp eq i32 %3166, 0, !dbg !126
  %3167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3165, float 0xBFAAC795C0000000) #5, !dbg !126
  %3168 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3165, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i302 = select i1 %.not1.i301, float %3168, float %3167, !dbg !126
  %3169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i303 = icmp eq i32 %3169, 0, !dbg !126
  %3170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i302, float %3165, float 0x3FC10B2820000000) #5, !dbg !126
  %3171 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i302, float %3165, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i304 = select i1 %.not2.i303, float %3171, float %3170, !dbg !126
  %3172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i305 = icmp eq i32 %3172, 0, !dbg !126
  %3173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i304, float %3165, float 0xBFD5553DA0000000) #5, !dbg !126
  %3174 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i304, float %3165, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i306 = select i1 %.not3.i305, float %3174, float %3173, !dbg !126
  %3175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i307 = icmp eq i32 %3175, 0, !dbg !126
  %3176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i306, float %3165, float 0.000000e+00) #5, !dbg !126
  %3177 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i306, float %3165, float 0.000000e+00) #5, !dbg !126
  %.04.i308 = select i1 %.not4.i307, float %3177, float %3176, !dbg !126
  %3178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i309 = icmp eq i32 %3178, 0, !dbg !126
  %3179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i308, float %2764, float %2764) #5, !dbg !126
  %3180 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i308, float %2764, float %2764) #5, !dbg !126
  %.02.i310 = select i1 %.not5.i309, float %3180, float %3179, !dbg !126
  br label %__nv_tanhf.exit311, !dbg !126

__nv_tanhf.exit311:                               ; preds = %__internal_fmad.exit1.i295, %__internal_fmad.exit3.i300
  %s.1.i299 = phi float [ %3164, %__internal_fmad.exit1.i295 ], [ %.02.i310, %__internal_fmad.exit3.i300 ], !dbg !126
  %3181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i312 = icmp eq i32 %3181, 0, !dbg !126
  %3182 = tail call float @llvm.nvvm.fabs.ftz.f(float %2765) #5, !dbg !126
  %3183 = tail call float @llvm.nvvm.fabs.f(float %2765) #5, !dbg !126
  %.01.i313 = select i1 %.not.i312, float %3183, float %3182, !dbg !126
  %3184 = fcmp ult float %.01.i313, 0x3FE3333340000000, !dbg !126
  br i1 %3184, label %__internal_fmad.exit3.i319, label %__internal_fmad.exit1.i314, !dbg !126

__internal_fmad.exit1.i314:                       ; preds = %__nv_tanhf.exit311
  %3185 = fmul float %.01.i313, 0x4007154760000000, !dbg !126
  %3186 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3185) #5, !dbg !126
  %3187 = fadd float %3186, 1.000000e+00, !dbg !126
  %3188 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3187) #6, !dbg !126, !srcloc !64
  %3189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i315 = icmp eq i32 %3189, 0, !dbg !126
  %3190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3188, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3191 = tail call float @llvm.nvvm.fma.rn.f(float %3188, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i316 = select i1 %.not6.i315, float %3191, float %3190, !dbg !126
  %3192 = fcmp oge float %.01.i313, 0x4022059680000000, !dbg !126
  %s.0.i317 = select i1 %3192, float 1.000000e+00, float %.03.i316, !dbg !126
  %3193 = bitcast float %s.0.i317 to i32, !dbg !126
  %3194 = bitcast float %2765 to i32, !dbg !126
  %3195 = and i32 %3194, -2147483648, !dbg !126
  %3196 = or i32 %3195, %3193, !dbg !126
  %3197 = bitcast i32 %3196 to float, !dbg !126
  br label %__nv_tanhf.exit330, !dbg !126

__internal_fmad.exit3.i319:                       ; preds = %__nv_tanhf.exit311
  %3198 = fmul float %2765, %2765, !dbg !126
  %3199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i320 = icmp eq i32 %3199, 0, !dbg !126
  %3200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3198, float 0xBFAAC795C0000000) #5, !dbg !126
  %3201 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3198, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i321 = select i1 %.not1.i320, float %3201, float %3200, !dbg !126
  %3202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i322 = icmp eq i32 %3202, 0, !dbg !126
  %3203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i321, float %3198, float 0x3FC10B2820000000) #5, !dbg !126
  %3204 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i321, float %3198, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i323 = select i1 %.not2.i322, float %3204, float %3203, !dbg !126
  %3205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i324 = icmp eq i32 %3205, 0, !dbg !126
  %3206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i323, float %3198, float 0xBFD5553DA0000000) #5, !dbg !126
  %3207 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i323, float %3198, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i325 = select i1 %.not3.i324, float %3207, float %3206, !dbg !126
  %3208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i326 = icmp eq i32 %3208, 0, !dbg !126
  %3209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i325, float %3198, float 0.000000e+00) #5, !dbg !126
  %3210 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i325, float %3198, float 0.000000e+00) #5, !dbg !126
  %.04.i327 = select i1 %.not4.i326, float %3210, float %3209, !dbg !126
  %3211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i328 = icmp eq i32 %3211, 0, !dbg !126
  %3212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i327, float %2765, float %2765) #5, !dbg !126
  %3213 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i327, float %2765, float %2765) #5, !dbg !126
  %.02.i329 = select i1 %.not5.i328, float %3213, float %3212, !dbg !126
  br label %__nv_tanhf.exit330, !dbg !126

__nv_tanhf.exit330:                               ; preds = %__internal_fmad.exit1.i314, %__internal_fmad.exit3.i319
  %s.1.i318 = phi float [ %3197, %__internal_fmad.exit1.i314 ], [ %.02.i329, %__internal_fmad.exit3.i319 ], !dbg !126
  %3214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i331 = icmp eq i32 %3214, 0, !dbg !126
  %3215 = tail call float @llvm.nvvm.fabs.ftz.f(float %2766) #5, !dbg !126
  %3216 = tail call float @llvm.nvvm.fabs.f(float %2766) #5, !dbg !126
  %.01.i332 = select i1 %.not.i331, float %3216, float %3215, !dbg !126
  %3217 = fcmp ult float %.01.i332, 0x3FE3333340000000, !dbg !126
  br i1 %3217, label %__internal_fmad.exit3.i338, label %__internal_fmad.exit1.i333, !dbg !126

__internal_fmad.exit1.i333:                       ; preds = %__nv_tanhf.exit330
  %3218 = fmul float %.01.i332, 0x4007154760000000, !dbg !126
  %3219 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3218) #5, !dbg !126
  %3220 = fadd float %3219, 1.000000e+00, !dbg !126
  %3221 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3220) #6, !dbg !126, !srcloc !64
  %3222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i334 = icmp eq i32 %3222, 0, !dbg !126
  %3223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3221, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3224 = tail call float @llvm.nvvm.fma.rn.f(float %3221, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i335 = select i1 %.not6.i334, float %3224, float %3223, !dbg !126
  %3225 = fcmp oge float %.01.i332, 0x4022059680000000, !dbg !126
  %s.0.i336 = select i1 %3225, float 1.000000e+00, float %.03.i335, !dbg !126
  %3226 = bitcast float %s.0.i336 to i32, !dbg !126
  %3227 = bitcast float %2766 to i32, !dbg !126
  %3228 = and i32 %3227, -2147483648, !dbg !126
  %3229 = or i32 %3228, %3226, !dbg !126
  %3230 = bitcast i32 %3229 to float, !dbg !126
  br label %__nv_tanhf.exit349, !dbg !126

__internal_fmad.exit3.i338:                       ; preds = %__nv_tanhf.exit330
  %3231 = fmul float %2766, %2766, !dbg !126
  %3232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i339 = icmp eq i32 %3232, 0, !dbg !126
  %3233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3231, float 0xBFAAC795C0000000) #5, !dbg !126
  %3234 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3231, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i340 = select i1 %.not1.i339, float %3234, float %3233, !dbg !126
  %3235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i341 = icmp eq i32 %3235, 0, !dbg !126
  %3236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i340, float %3231, float 0x3FC10B2820000000) #5, !dbg !126
  %3237 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i340, float %3231, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i342 = select i1 %.not2.i341, float %3237, float %3236, !dbg !126
  %3238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i343 = icmp eq i32 %3238, 0, !dbg !126
  %3239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i342, float %3231, float 0xBFD5553DA0000000) #5, !dbg !126
  %3240 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i342, float %3231, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i344 = select i1 %.not3.i343, float %3240, float %3239, !dbg !126
  %3241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i345 = icmp eq i32 %3241, 0, !dbg !126
  %3242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i344, float %3231, float 0.000000e+00) #5, !dbg !126
  %3243 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i344, float %3231, float 0.000000e+00) #5, !dbg !126
  %.04.i346 = select i1 %.not4.i345, float %3243, float %3242, !dbg !126
  %3244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i347 = icmp eq i32 %3244, 0, !dbg !126
  %3245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i346, float %2766, float %2766) #5, !dbg !126
  %3246 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i346, float %2766, float %2766) #5, !dbg !126
  %.02.i348 = select i1 %.not5.i347, float %3246, float %3245, !dbg !126
  br label %__nv_tanhf.exit349, !dbg !126

__nv_tanhf.exit349:                               ; preds = %__internal_fmad.exit1.i333, %__internal_fmad.exit3.i338
  %s.1.i337 = phi float [ %3230, %__internal_fmad.exit1.i333 ], [ %.02.i348, %__internal_fmad.exit3.i338 ], !dbg !126
  %3247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i350 = icmp eq i32 %3247, 0, !dbg !126
  %3248 = tail call float @llvm.nvvm.fabs.ftz.f(float %2767) #5, !dbg !126
  %3249 = tail call float @llvm.nvvm.fabs.f(float %2767) #5, !dbg !126
  %.01.i351 = select i1 %.not.i350, float %3249, float %3248, !dbg !126
  %3250 = fcmp ult float %.01.i351, 0x3FE3333340000000, !dbg !126
  br i1 %3250, label %__internal_fmad.exit3.i357, label %__internal_fmad.exit1.i352, !dbg !126

__internal_fmad.exit1.i352:                       ; preds = %__nv_tanhf.exit349
  %3251 = fmul float %.01.i351, 0x4007154760000000, !dbg !126
  %3252 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3251) #5, !dbg !126
  %3253 = fadd float %3252, 1.000000e+00, !dbg !126
  %3254 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3253) #6, !dbg !126, !srcloc !64
  %3255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i353 = icmp eq i32 %3255, 0, !dbg !126
  %3256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3254, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3257 = tail call float @llvm.nvvm.fma.rn.f(float %3254, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i354 = select i1 %.not6.i353, float %3257, float %3256, !dbg !126
  %3258 = fcmp oge float %.01.i351, 0x4022059680000000, !dbg !126
  %s.0.i355 = select i1 %3258, float 1.000000e+00, float %.03.i354, !dbg !126
  %3259 = bitcast float %s.0.i355 to i32, !dbg !126
  %3260 = bitcast float %2767 to i32, !dbg !126
  %3261 = and i32 %3260, -2147483648, !dbg !126
  %3262 = or i32 %3261, %3259, !dbg !126
  %3263 = bitcast i32 %3262 to float, !dbg !126
  br label %__nv_tanhf.exit368, !dbg !126

__internal_fmad.exit3.i357:                       ; preds = %__nv_tanhf.exit349
  %3264 = fmul float %2767, %2767, !dbg !126
  %3265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i358 = icmp eq i32 %3265, 0, !dbg !126
  %3266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3264, float 0xBFAAC795C0000000) #5, !dbg !126
  %3267 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3264, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i359 = select i1 %.not1.i358, float %3267, float %3266, !dbg !126
  %3268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i360 = icmp eq i32 %3268, 0, !dbg !126
  %3269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i359, float %3264, float 0x3FC10B2820000000) #5, !dbg !126
  %3270 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i359, float %3264, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i361 = select i1 %.not2.i360, float %3270, float %3269, !dbg !126
  %3271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i362 = icmp eq i32 %3271, 0, !dbg !126
  %3272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i361, float %3264, float 0xBFD5553DA0000000) #5, !dbg !126
  %3273 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i361, float %3264, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i363 = select i1 %.not3.i362, float %3273, float %3272, !dbg !126
  %3274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i364 = icmp eq i32 %3274, 0, !dbg !126
  %3275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i363, float %3264, float 0.000000e+00) #5, !dbg !126
  %3276 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i363, float %3264, float 0.000000e+00) #5, !dbg !126
  %.04.i365 = select i1 %.not4.i364, float %3276, float %3275, !dbg !126
  %3277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i366 = icmp eq i32 %3277, 0, !dbg !126
  %3278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i365, float %2767, float %2767) #5, !dbg !126
  %3279 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i365, float %2767, float %2767) #5, !dbg !126
  %.02.i367 = select i1 %.not5.i366, float %3279, float %3278, !dbg !126
  br label %__nv_tanhf.exit368, !dbg !126

__nv_tanhf.exit368:                               ; preds = %__internal_fmad.exit1.i352, %__internal_fmad.exit3.i357
  %s.1.i356 = phi float [ %3263, %__internal_fmad.exit1.i352 ], [ %.02.i367, %__internal_fmad.exit3.i357 ], !dbg !126
  %3280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i369 = icmp eq i32 %3280, 0, !dbg !126
  %3281 = tail call float @llvm.nvvm.fabs.ftz.f(float %2768) #5, !dbg !126
  %3282 = tail call float @llvm.nvvm.fabs.f(float %2768) #5, !dbg !126
  %.01.i370 = select i1 %.not.i369, float %3282, float %3281, !dbg !126
  %3283 = fcmp ult float %.01.i370, 0x3FE3333340000000, !dbg !126
  br i1 %3283, label %__internal_fmad.exit3.i376, label %__internal_fmad.exit1.i371, !dbg !126

__internal_fmad.exit1.i371:                       ; preds = %__nv_tanhf.exit368
  %3284 = fmul float %.01.i370, 0x4007154760000000, !dbg !126
  %3285 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3284) #5, !dbg !126
  %3286 = fadd float %3285, 1.000000e+00, !dbg !126
  %3287 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3286) #6, !dbg !126, !srcloc !64
  %3288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i372 = icmp eq i32 %3288, 0, !dbg !126
  %3289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3287, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3290 = tail call float @llvm.nvvm.fma.rn.f(float %3287, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i373 = select i1 %.not6.i372, float %3290, float %3289, !dbg !126
  %3291 = fcmp oge float %.01.i370, 0x4022059680000000, !dbg !126
  %s.0.i374 = select i1 %3291, float 1.000000e+00, float %.03.i373, !dbg !126
  %3292 = bitcast float %s.0.i374 to i32, !dbg !126
  %3293 = bitcast float %2768 to i32, !dbg !126
  %3294 = and i32 %3293, -2147483648, !dbg !126
  %3295 = or i32 %3294, %3292, !dbg !126
  %3296 = bitcast i32 %3295 to float, !dbg !126
  br label %__nv_tanhf.exit387, !dbg !126

__internal_fmad.exit3.i376:                       ; preds = %__nv_tanhf.exit368
  %3297 = fmul float %2768, %2768, !dbg !126
  %3298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i377 = icmp eq i32 %3298, 0, !dbg !126
  %3299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3297, float 0xBFAAC795C0000000) #5, !dbg !126
  %3300 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3297, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i378 = select i1 %.not1.i377, float %3300, float %3299, !dbg !126
  %3301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i379 = icmp eq i32 %3301, 0, !dbg !126
  %3302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i378, float %3297, float 0x3FC10B2820000000) #5, !dbg !126
  %3303 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i378, float %3297, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i380 = select i1 %.not2.i379, float %3303, float %3302, !dbg !126
  %3304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i381 = icmp eq i32 %3304, 0, !dbg !126
  %3305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i380, float %3297, float 0xBFD5553DA0000000) #5, !dbg !126
  %3306 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i380, float %3297, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i382 = select i1 %.not3.i381, float %3306, float %3305, !dbg !126
  %3307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i383 = icmp eq i32 %3307, 0, !dbg !126
  %3308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i382, float %3297, float 0.000000e+00) #5, !dbg !126
  %3309 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i382, float %3297, float 0.000000e+00) #5, !dbg !126
  %.04.i384 = select i1 %.not4.i383, float %3309, float %3308, !dbg !126
  %3310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i385 = icmp eq i32 %3310, 0, !dbg !126
  %3311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i384, float %2768, float %2768) #5, !dbg !126
  %3312 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i384, float %2768, float %2768) #5, !dbg !126
  %.02.i386 = select i1 %.not5.i385, float %3312, float %3311, !dbg !126
  br label %__nv_tanhf.exit387, !dbg !126

__nv_tanhf.exit387:                               ; preds = %__internal_fmad.exit1.i371, %__internal_fmad.exit3.i376
  %s.1.i375 = phi float [ %3296, %__internal_fmad.exit1.i371 ], [ %.02.i386, %__internal_fmad.exit3.i376 ], !dbg !126
  %3313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i388 = icmp eq i32 %3313, 0, !dbg !126
  %3314 = tail call float @llvm.nvvm.fabs.ftz.f(float %2769) #5, !dbg !126
  %3315 = tail call float @llvm.nvvm.fabs.f(float %2769) #5, !dbg !126
  %.01.i389 = select i1 %.not.i388, float %3315, float %3314, !dbg !126
  %3316 = fcmp ult float %.01.i389, 0x3FE3333340000000, !dbg !126
  br i1 %3316, label %__internal_fmad.exit3.i395, label %__internal_fmad.exit1.i390, !dbg !126

__internal_fmad.exit1.i390:                       ; preds = %__nv_tanhf.exit387
  %3317 = fmul float %.01.i389, 0x4007154760000000, !dbg !126
  %3318 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3317) #5, !dbg !126
  %3319 = fadd float %3318, 1.000000e+00, !dbg !126
  %3320 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3319) #6, !dbg !126, !srcloc !64
  %3321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i391 = icmp eq i32 %3321, 0, !dbg !126
  %3322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3320, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3323 = tail call float @llvm.nvvm.fma.rn.f(float %3320, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i392 = select i1 %.not6.i391, float %3323, float %3322, !dbg !126
  %3324 = fcmp oge float %.01.i389, 0x4022059680000000, !dbg !126
  %s.0.i393 = select i1 %3324, float 1.000000e+00, float %.03.i392, !dbg !126
  %3325 = bitcast float %s.0.i393 to i32, !dbg !126
  %3326 = bitcast float %2769 to i32, !dbg !126
  %3327 = and i32 %3326, -2147483648, !dbg !126
  %3328 = or i32 %3327, %3325, !dbg !126
  %3329 = bitcast i32 %3328 to float, !dbg !126
  br label %__nv_tanhf.exit406, !dbg !126

__internal_fmad.exit3.i395:                       ; preds = %__nv_tanhf.exit387
  %3330 = fmul float %2769, %2769, !dbg !126
  %3331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i396 = icmp eq i32 %3331, 0, !dbg !126
  %3332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3330, float 0xBFAAC795C0000000) #5, !dbg !126
  %3333 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3330, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i397 = select i1 %.not1.i396, float %3333, float %3332, !dbg !126
  %3334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i398 = icmp eq i32 %3334, 0, !dbg !126
  %3335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i397, float %3330, float 0x3FC10B2820000000) #5, !dbg !126
  %3336 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i397, float %3330, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i399 = select i1 %.not2.i398, float %3336, float %3335, !dbg !126
  %3337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i400 = icmp eq i32 %3337, 0, !dbg !126
  %3338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i399, float %3330, float 0xBFD5553DA0000000) #5, !dbg !126
  %3339 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i399, float %3330, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i401 = select i1 %.not3.i400, float %3339, float %3338, !dbg !126
  %3340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i402 = icmp eq i32 %3340, 0, !dbg !126
  %3341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i401, float %3330, float 0.000000e+00) #5, !dbg !126
  %3342 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i401, float %3330, float 0.000000e+00) #5, !dbg !126
  %.04.i403 = select i1 %.not4.i402, float %3342, float %3341, !dbg !126
  %3343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i404 = icmp eq i32 %3343, 0, !dbg !126
  %3344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i403, float %2769, float %2769) #5, !dbg !126
  %3345 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i403, float %2769, float %2769) #5, !dbg !126
  %.02.i405 = select i1 %.not5.i404, float %3345, float %3344, !dbg !126
  br label %__nv_tanhf.exit406, !dbg !126

__nv_tanhf.exit406:                               ; preds = %__internal_fmad.exit1.i390, %__internal_fmad.exit3.i395
  %s.1.i394 = phi float [ %3329, %__internal_fmad.exit1.i390 ], [ %.02.i405, %__internal_fmad.exit3.i395 ], !dbg !126
  %3346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i407 = icmp eq i32 %3346, 0, !dbg !126
  %3347 = tail call float @llvm.nvvm.fabs.ftz.f(float %2770) #5, !dbg !126
  %3348 = tail call float @llvm.nvvm.fabs.f(float %2770) #5, !dbg !126
  %.01.i408 = select i1 %.not.i407, float %3348, float %3347, !dbg !126
  %3349 = fcmp ult float %.01.i408, 0x3FE3333340000000, !dbg !126
  br i1 %3349, label %__internal_fmad.exit3.i414, label %__internal_fmad.exit1.i409, !dbg !126

__internal_fmad.exit1.i409:                       ; preds = %__nv_tanhf.exit406
  %3350 = fmul float %.01.i408, 0x4007154760000000, !dbg !126
  %3351 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3350) #5, !dbg !126
  %3352 = fadd float %3351, 1.000000e+00, !dbg !126
  %3353 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3352) #6, !dbg !126, !srcloc !64
  %3354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i410 = icmp eq i32 %3354, 0, !dbg !126
  %3355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3353, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3356 = tail call float @llvm.nvvm.fma.rn.f(float %3353, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i411 = select i1 %.not6.i410, float %3356, float %3355, !dbg !126
  %3357 = fcmp oge float %.01.i408, 0x4022059680000000, !dbg !126
  %s.0.i412 = select i1 %3357, float 1.000000e+00, float %.03.i411, !dbg !126
  %3358 = bitcast float %s.0.i412 to i32, !dbg !126
  %3359 = bitcast float %2770 to i32, !dbg !126
  %3360 = and i32 %3359, -2147483648, !dbg !126
  %3361 = or i32 %3360, %3358, !dbg !126
  %3362 = bitcast i32 %3361 to float, !dbg !126
  br label %__nv_tanhf.exit425, !dbg !126

__internal_fmad.exit3.i414:                       ; preds = %__nv_tanhf.exit406
  %3363 = fmul float %2770, %2770, !dbg !126
  %3364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i415 = icmp eq i32 %3364, 0, !dbg !126
  %3365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3363, float 0xBFAAC795C0000000) #5, !dbg !126
  %3366 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3363, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i416 = select i1 %.not1.i415, float %3366, float %3365, !dbg !126
  %3367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i417 = icmp eq i32 %3367, 0, !dbg !126
  %3368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i416, float %3363, float 0x3FC10B2820000000) #5, !dbg !126
  %3369 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i416, float %3363, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i418 = select i1 %.not2.i417, float %3369, float %3368, !dbg !126
  %3370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i419 = icmp eq i32 %3370, 0, !dbg !126
  %3371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i418, float %3363, float 0xBFD5553DA0000000) #5, !dbg !126
  %3372 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i418, float %3363, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i420 = select i1 %.not3.i419, float %3372, float %3371, !dbg !126
  %3373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i421 = icmp eq i32 %3373, 0, !dbg !126
  %3374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i420, float %3363, float 0.000000e+00) #5, !dbg !126
  %3375 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i420, float %3363, float 0.000000e+00) #5, !dbg !126
  %.04.i422 = select i1 %.not4.i421, float %3375, float %3374, !dbg !126
  %3376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i423 = icmp eq i32 %3376, 0, !dbg !126
  %3377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i422, float %2770, float %2770) #5, !dbg !126
  %3378 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i422, float %2770, float %2770) #5, !dbg !126
  %.02.i424 = select i1 %.not5.i423, float %3378, float %3377, !dbg !126
  br label %__nv_tanhf.exit425, !dbg !126

__nv_tanhf.exit425:                               ; preds = %__internal_fmad.exit1.i409, %__internal_fmad.exit3.i414
  %s.1.i413 = phi float [ %3362, %__internal_fmad.exit1.i409 ], [ %.02.i424, %__internal_fmad.exit3.i414 ], !dbg !126
  %3379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i426 = icmp eq i32 %3379, 0, !dbg !126
  %3380 = tail call float @llvm.nvvm.fabs.ftz.f(float %2771) #5, !dbg !126
  %3381 = tail call float @llvm.nvvm.fabs.f(float %2771) #5, !dbg !126
  %.01.i427 = select i1 %.not.i426, float %3381, float %3380, !dbg !126
  %3382 = fcmp ult float %.01.i427, 0x3FE3333340000000, !dbg !126
  br i1 %3382, label %__internal_fmad.exit3.i433, label %__internal_fmad.exit1.i428, !dbg !126

__internal_fmad.exit1.i428:                       ; preds = %__nv_tanhf.exit425
  %3383 = fmul float %.01.i427, 0x4007154760000000, !dbg !126
  %3384 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3383) #5, !dbg !126
  %3385 = fadd float %3384, 1.000000e+00, !dbg !126
  %3386 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3385) #6, !dbg !126, !srcloc !64
  %3387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i429 = icmp eq i32 %3387, 0, !dbg !126
  %3388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3386, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3389 = tail call float @llvm.nvvm.fma.rn.f(float %3386, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i430 = select i1 %.not6.i429, float %3389, float %3388, !dbg !126
  %3390 = fcmp oge float %.01.i427, 0x4022059680000000, !dbg !126
  %s.0.i431 = select i1 %3390, float 1.000000e+00, float %.03.i430, !dbg !126
  %3391 = bitcast float %s.0.i431 to i32, !dbg !126
  %3392 = bitcast float %2771 to i32, !dbg !126
  %3393 = and i32 %3392, -2147483648, !dbg !126
  %3394 = or i32 %3393, %3391, !dbg !126
  %3395 = bitcast i32 %3394 to float, !dbg !126
  br label %__nv_tanhf.exit444, !dbg !126

__internal_fmad.exit3.i433:                       ; preds = %__nv_tanhf.exit425
  %3396 = fmul float %2771, %2771, !dbg !126
  %3397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i434 = icmp eq i32 %3397, 0, !dbg !126
  %3398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3396, float 0xBFAAC795C0000000) #5, !dbg !126
  %3399 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3396, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i435 = select i1 %.not1.i434, float %3399, float %3398, !dbg !126
  %3400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i436 = icmp eq i32 %3400, 0, !dbg !126
  %3401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i435, float %3396, float 0x3FC10B2820000000) #5, !dbg !126
  %3402 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i435, float %3396, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i437 = select i1 %.not2.i436, float %3402, float %3401, !dbg !126
  %3403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i438 = icmp eq i32 %3403, 0, !dbg !126
  %3404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i437, float %3396, float 0xBFD5553DA0000000) #5, !dbg !126
  %3405 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i437, float %3396, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i439 = select i1 %.not3.i438, float %3405, float %3404, !dbg !126
  %3406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i440 = icmp eq i32 %3406, 0, !dbg !126
  %3407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i439, float %3396, float 0.000000e+00) #5, !dbg !126
  %3408 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i439, float %3396, float 0.000000e+00) #5, !dbg !126
  %.04.i441 = select i1 %.not4.i440, float %3408, float %3407, !dbg !126
  %3409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i442 = icmp eq i32 %3409, 0, !dbg !126
  %3410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i441, float %2771, float %2771) #5, !dbg !126
  %3411 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i441, float %2771, float %2771) #5, !dbg !126
  %.02.i443 = select i1 %.not5.i442, float %3411, float %3410, !dbg !126
  br label %__nv_tanhf.exit444, !dbg !126

__nv_tanhf.exit444:                               ; preds = %__internal_fmad.exit1.i428, %__internal_fmad.exit3.i433
  %s.1.i432 = phi float [ %3395, %__internal_fmad.exit1.i428 ], [ %.02.i443, %__internal_fmad.exit3.i433 ], !dbg !126
  %3412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i445 = icmp eq i32 %3412, 0, !dbg !126
  %3413 = tail call float @llvm.nvvm.fabs.ftz.f(float %2772) #5, !dbg !126
  %3414 = tail call float @llvm.nvvm.fabs.f(float %2772) #5, !dbg !126
  %.01.i446 = select i1 %.not.i445, float %3414, float %3413, !dbg !126
  %3415 = fcmp ult float %.01.i446, 0x3FE3333340000000, !dbg !126
  br i1 %3415, label %__internal_fmad.exit3.i452, label %__internal_fmad.exit1.i447, !dbg !126

__internal_fmad.exit1.i447:                       ; preds = %__nv_tanhf.exit444
  %3416 = fmul float %.01.i446, 0x4007154760000000, !dbg !126
  %3417 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3416) #5, !dbg !126
  %3418 = fadd float %3417, 1.000000e+00, !dbg !126
  %3419 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3418) #6, !dbg !126, !srcloc !64
  %3420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i448 = icmp eq i32 %3420, 0, !dbg !126
  %3421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3419, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3422 = tail call float @llvm.nvvm.fma.rn.f(float %3419, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i449 = select i1 %.not6.i448, float %3422, float %3421, !dbg !126
  %3423 = fcmp oge float %.01.i446, 0x4022059680000000, !dbg !126
  %s.0.i450 = select i1 %3423, float 1.000000e+00, float %.03.i449, !dbg !126
  %3424 = bitcast float %s.0.i450 to i32, !dbg !126
  %3425 = bitcast float %2772 to i32, !dbg !126
  %3426 = and i32 %3425, -2147483648, !dbg !126
  %3427 = or i32 %3426, %3424, !dbg !126
  %3428 = bitcast i32 %3427 to float, !dbg !126
  br label %__nv_tanhf.exit463, !dbg !126

__internal_fmad.exit3.i452:                       ; preds = %__nv_tanhf.exit444
  %3429 = fmul float %2772, %2772, !dbg !126
  %3430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i453 = icmp eq i32 %3430, 0, !dbg !126
  %3431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3429, float 0xBFAAC795C0000000) #5, !dbg !126
  %3432 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3429, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i454 = select i1 %.not1.i453, float %3432, float %3431, !dbg !126
  %3433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i455 = icmp eq i32 %3433, 0, !dbg !126
  %3434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i454, float %3429, float 0x3FC10B2820000000) #5, !dbg !126
  %3435 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i454, float %3429, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i456 = select i1 %.not2.i455, float %3435, float %3434, !dbg !126
  %3436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i457 = icmp eq i32 %3436, 0, !dbg !126
  %3437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i456, float %3429, float 0xBFD5553DA0000000) #5, !dbg !126
  %3438 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i456, float %3429, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i458 = select i1 %.not3.i457, float %3438, float %3437, !dbg !126
  %3439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i459 = icmp eq i32 %3439, 0, !dbg !126
  %3440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i458, float %3429, float 0.000000e+00) #5, !dbg !126
  %3441 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i458, float %3429, float 0.000000e+00) #5, !dbg !126
  %.04.i460 = select i1 %.not4.i459, float %3441, float %3440, !dbg !126
  %3442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i461 = icmp eq i32 %3442, 0, !dbg !126
  %3443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i460, float %2772, float %2772) #5, !dbg !126
  %3444 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i460, float %2772, float %2772) #5, !dbg !126
  %.02.i462 = select i1 %.not5.i461, float %3444, float %3443, !dbg !126
  br label %__nv_tanhf.exit463, !dbg !126

__nv_tanhf.exit463:                               ; preds = %__internal_fmad.exit1.i447, %__internal_fmad.exit3.i452
  %s.1.i451 = phi float [ %3428, %__internal_fmad.exit1.i447 ], [ %.02.i462, %__internal_fmad.exit3.i452 ], !dbg !126
  %3445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i464 = icmp eq i32 %3445, 0, !dbg !126
  %3446 = tail call float @llvm.nvvm.fabs.ftz.f(float %2773) #5, !dbg !126
  %3447 = tail call float @llvm.nvvm.fabs.f(float %2773) #5, !dbg !126
  %.01.i465 = select i1 %.not.i464, float %3447, float %3446, !dbg !126
  %3448 = fcmp ult float %.01.i465, 0x3FE3333340000000, !dbg !126
  br i1 %3448, label %__internal_fmad.exit3.i471, label %__internal_fmad.exit1.i466, !dbg !126

__internal_fmad.exit1.i466:                       ; preds = %__nv_tanhf.exit463
  %3449 = fmul float %.01.i465, 0x4007154760000000, !dbg !126
  %3450 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3449) #5, !dbg !126
  %3451 = fadd float %3450, 1.000000e+00, !dbg !126
  %3452 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3451) #6, !dbg !126, !srcloc !64
  %3453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i467 = icmp eq i32 %3453, 0, !dbg !126
  %3454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3452, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3455 = tail call float @llvm.nvvm.fma.rn.f(float %3452, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i468 = select i1 %.not6.i467, float %3455, float %3454, !dbg !126
  %3456 = fcmp oge float %.01.i465, 0x4022059680000000, !dbg !126
  %s.0.i469 = select i1 %3456, float 1.000000e+00, float %.03.i468, !dbg !126
  %3457 = bitcast float %s.0.i469 to i32, !dbg !126
  %3458 = bitcast float %2773 to i32, !dbg !126
  %3459 = and i32 %3458, -2147483648, !dbg !126
  %3460 = or i32 %3459, %3457, !dbg !126
  %3461 = bitcast i32 %3460 to float, !dbg !126
  br label %__nv_tanhf.exit482, !dbg !126

__internal_fmad.exit3.i471:                       ; preds = %__nv_tanhf.exit463
  %3462 = fmul float %2773, %2773, !dbg !126
  %3463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i472 = icmp eq i32 %3463, 0, !dbg !126
  %3464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3462, float 0xBFAAC795C0000000) #5, !dbg !126
  %3465 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3462, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i473 = select i1 %.not1.i472, float %3465, float %3464, !dbg !126
  %3466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i474 = icmp eq i32 %3466, 0, !dbg !126
  %3467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i473, float %3462, float 0x3FC10B2820000000) #5, !dbg !126
  %3468 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i473, float %3462, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i475 = select i1 %.not2.i474, float %3468, float %3467, !dbg !126
  %3469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i476 = icmp eq i32 %3469, 0, !dbg !126
  %3470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i475, float %3462, float 0xBFD5553DA0000000) #5, !dbg !126
  %3471 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i475, float %3462, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i477 = select i1 %.not3.i476, float %3471, float %3470, !dbg !126
  %3472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i478 = icmp eq i32 %3472, 0, !dbg !126
  %3473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i477, float %3462, float 0.000000e+00) #5, !dbg !126
  %3474 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i477, float %3462, float 0.000000e+00) #5, !dbg !126
  %.04.i479 = select i1 %.not4.i478, float %3474, float %3473, !dbg !126
  %3475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i480 = icmp eq i32 %3475, 0, !dbg !126
  %3476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i479, float %2773, float %2773) #5, !dbg !126
  %3477 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i479, float %2773, float %2773) #5, !dbg !126
  %.02.i481 = select i1 %.not5.i480, float %3477, float %3476, !dbg !126
  br label %__nv_tanhf.exit482, !dbg !126

__nv_tanhf.exit482:                               ; preds = %__internal_fmad.exit1.i466, %__internal_fmad.exit3.i471
  %s.1.i470 = phi float [ %3461, %__internal_fmad.exit1.i466 ], [ %.02.i481, %__internal_fmad.exit3.i471 ], !dbg !126
  %3478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i483 = icmp eq i32 %3478, 0, !dbg !126
  %3479 = tail call float @llvm.nvvm.fabs.ftz.f(float %2774) #5, !dbg !126
  %3480 = tail call float @llvm.nvvm.fabs.f(float %2774) #5, !dbg !126
  %.01.i484 = select i1 %.not.i483, float %3480, float %3479, !dbg !126
  %3481 = fcmp ult float %.01.i484, 0x3FE3333340000000, !dbg !126
  br i1 %3481, label %__internal_fmad.exit3.i490, label %__internal_fmad.exit1.i485, !dbg !126

__internal_fmad.exit1.i485:                       ; preds = %__nv_tanhf.exit482
  %3482 = fmul float %.01.i484, 0x4007154760000000, !dbg !126
  %3483 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3482) #5, !dbg !126
  %3484 = fadd float %3483, 1.000000e+00, !dbg !126
  %3485 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3484) #6, !dbg !126, !srcloc !64
  %3486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i486 = icmp eq i32 %3486, 0, !dbg !126
  %3487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3485, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3488 = tail call float @llvm.nvvm.fma.rn.f(float %3485, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i487 = select i1 %.not6.i486, float %3488, float %3487, !dbg !126
  %3489 = fcmp oge float %.01.i484, 0x4022059680000000, !dbg !126
  %s.0.i488 = select i1 %3489, float 1.000000e+00, float %.03.i487, !dbg !126
  %3490 = bitcast float %s.0.i488 to i32, !dbg !126
  %3491 = bitcast float %2774 to i32, !dbg !126
  %3492 = and i32 %3491, -2147483648, !dbg !126
  %3493 = or i32 %3492, %3490, !dbg !126
  %3494 = bitcast i32 %3493 to float, !dbg !126
  br label %__nv_tanhf.exit501, !dbg !126

__internal_fmad.exit3.i490:                       ; preds = %__nv_tanhf.exit482
  %3495 = fmul float %2774, %2774, !dbg !126
  %3496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i491 = icmp eq i32 %3496, 0, !dbg !126
  %3497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3495, float 0xBFAAC795C0000000) #5, !dbg !126
  %3498 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3495, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i492 = select i1 %.not1.i491, float %3498, float %3497, !dbg !126
  %3499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i493 = icmp eq i32 %3499, 0, !dbg !126
  %3500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i492, float %3495, float 0x3FC10B2820000000) #5, !dbg !126
  %3501 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i492, float %3495, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i494 = select i1 %.not2.i493, float %3501, float %3500, !dbg !126
  %3502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i495 = icmp eq i32 %3502, 0, !dbg !126
  %3503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i494, float %3495, float 0xBFD5553DA0000000) #5, !dbg !126
  %3504 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i494, float %3495, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i496 = select i1 %.not3.i495, float %3504, float %3503, !dbg !126
  %3505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i497 = icmp eq i32 %3505, 0, !dbg !126
  %3506 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i496, float %3495, float 0.000000e+00) #5, !dbg !126
  %3507 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i496, float %3495, float 0.000000e+00) #5, !dbg !126
  %.04.i498 = select i1 %.not4.i497, float %3507, float %3506, !dbg !126
  %3508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i499 = icmp eq i32 %3508, 0, !dbg !126
  %3509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i498, float %2774, float %2774) #5, !dbg !126
  %3510 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i498, float %2774, float %2774) #5, !dbg !126
  %.02.i500 = select i1 %.not5.i499, float %3510, float %3509, !dbg !126
  br label %__nv_tanhf.exit501, !dbg !126

__nv_tanhf.exit501:                               ; preds = %__internal_fmad.exit1.i485, %__internal_fmad.exit3.i490
  %s.1.i489 = phi float [ %3494, %__internal_fmad.exit1.i485 ], [ %.02.i500, %__internal_fmad.exit3.i490 ], !dbg !126
  %3511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i502 = icmp eq i32 %3511, 0, !dbg !126
  %3512 = tail call float @llvm.nvvm.fabs.ftz.f(float %2775) #5, !dbg !126
  %3513 = tail call float @llvm.nvvm.fabs.f(float %2775) #5, !dbg !126
  %.01.i503 = select i1 %.not.i502, float %3513, float %3512, !dbg !126
  %3514 = fcmp ult float %.01.i503, 0x3FE3333340000000, !dbg !126
  br i1 %3514, label %__internal_fmad.exit3.i509, label %__internal_fmad.exit1.i504, !dbg !126

__internal_fmad.exit1.i504:                       ; preds = %__nv_tanhf.exit501
  %3515 = fmul float %.01.i503, 0x4007154760000000, !dbg !126
  %3516 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3515) #5, !dbg !126
  %3517 = fadd float %3516, 1.000000e+00, !dbg !126
  %3518 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3517) #6, !dbg !126, !srcloc !64
  %3519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i505 = icmp eq i32 %3519, 0, !dbg !126
  %3520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3518, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3521 = tail call float @llvm.nvvm.fma.rn.f(float %3518, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i506 = select i1 %.not6.i505, float %3521, float %3520, !dbg !126
  %3522 = fcmp oge float %.01.i503, 0x4022059680000000, !dbg !126
  %s.0.i507 = select i1 %3522, float 1.000000e+00, float %.03.i506, !dbg !126
  %3523 = bitcast float %s.0.i507 to i32, !dbg !126
  %3524 = bitcast float %2775 to i32, !dbg !126
  %3525 = and i32 %3524, -2147483648, !dbg !126
  %3526 = or i32 %3525, %3523, !dbg !126
  %3527 = bitcast i32 %3526 to float, !dbg !126
  br label %__nv_tanhf.exit520, !dbg !126

__internal_fmad.exit3.i509:                       ; preds = %__nv_tanhf.exit501
  %3528 = fmul float %2775, %2775, !dbg !126
  %3529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i510 = icmp eq i32 %3529, 0, !dbg !126
  %3530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3528, float 0xBFAAC795C0000000) #5, !dbg !126
  %3531 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3528, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i511 = select i1 %.not1.i510, float %3531, float %3530, !dbg !126
  %3532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i512 = icmp eq i32 %3532, 0, !dbg !126
  %3533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i511, float %3528, float 0x3FC10B2820000000) #5, !dbg !126
  %3534 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i511, float %3528, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i513 = select i1 %.not2.i512, float %3534, float %3533, !dbg !126
  %3535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i514 = icmp eq i32 %3535, 0, !dbg !126
  %3536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i513, float %3528, float 0xBFD5553DA0000000) #5, !dbg !126
  %3537 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i513, float %3528, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i515 = select i1 %.not3.i514, float %3537, float %3536, !dbg !126
  %3538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i516 = icmp eq i32 %3538, 0, !dbg !126
  %3539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i515, float %3528, float 0.000000e+00) #5, !dbg !126
  %3540 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i515, float %3528, float 0.000000e+00) #5, !dbg !126
  %.04.i517 = select i1 %.not4.i516, float %3540, float %3539, !dbg !126
  %3541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i518 = icmp eq i32 %3541, 0, !dbg !126
  %3542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i517, float %2775, float %2775) #5, !dbg !126
  %3543 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i517, float %2775, float %2775) #5, !dbg !126
  %.02.i519 = select i1 %.not5.i518, float %3543, float %3542, !dbg !126
  br label %__nv_tanhf.exit520, !dbg !126

__nv_tanhf.exit520:                               ; preds = %__internal_fmad.exit1.i504, %__internal_fmad.exit3.i509
  %s.1.i508 = phi float [ %3527, %__internal_fmad.exit1.i504 ], [ %.02.i519, %__internal_fmad.exit3.i509 ], !dbg !126
  %3544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i521 = icmp eq i32 %3544, 0, !dbg !126
  %3545 = tail call float @llvm.nvvm.fabs.ftz.f(float %2776) #5, !dbg !126
  %3546 = tail call float @llvm.nvvm.fabs.f(float %2776) #5, !dbg !126
  %.01.i522 = select i1 %.not.i521, float %3546, float %3545, !dbg !126
  %3547 = fcmp ult float %.01.i522, 0x3FE3333340000000, !dbg !126
  br i1 %3547, label %__internal_fmad.exit3.i528, label %__internal_fmad.exit1.i523, !dbg !126

__internal_fmad.exit1.i523:                       ; preds = %__nv_tanhf.exit520
  %3548 = fmul float %.01.i522, 0x4007154760000000, !dbg !126
  %3549 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3548) #5, !dbg !126
  %3550 = fadd float %3549, 1.000000e+00, !dbg !126
  %3551 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3550) #6, !dbg !126, !srcloc !64
  %3552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i524 = icmp eq i32 %3552, 0, !dbg !126
  %3553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3551, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3554 = tail call float @llvm.nvvm.fma.rn.f(float %3551, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i525 = select i1 %.not6.i524, float %3554, float %3553, !dbg !126
  %3555 = fcmp oge float %.01.i522, 0x4022059680000000, !dbg !126
  %s.0.i526 = select i1 %3555, float 1.000000e+00, float %.03.i525, !dbg !126
  %3556 = bitcast float %s.0.i526 to i32, !dbg !126
  %3557 = bitcast float %2776 to i32, !dbg !126
  %3558 = and i32 %3557, -2147483648, !dbg !126
  %3559 = or i32 %3558, %3556, !dbg !126
  %3560 = bitcast i32 %3559 to float, !dbg !126
  br label %__nv_tanhf.exit539, !dbg !126

__internal_fmad.exit3.i528:                       ; preds = %__nv_tanhf.exit520
  %3561 = fmul float %2776, %2776, !dbg !126
  %3562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i529 = icmp eq i32 %3562, 0, !dbg !126
  %3563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3561, float 0xBFAAC795C0000000) #5, !dbg !126
  %3564 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3561, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i530 = select i1 %.not1.i529, float %3564, float %3563, !dbg !126
  %3565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i531 = icmp eq i32 %3565, 0, !dbg !126
  %3566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i530, float %3561, float 0x3FC10B2820000000) #5, !dbg !126
  %3567 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i530, float %3561, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i532 = select i1 %.not2.i531, float %3567, float %3566, !dbg !126
  %3568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i533 = icmp eq i32 %3568, 0, !dbg !126
  %3569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i532, float %3561, float 0xBFD5553DA0000000) #5, !dbg !126
  %3570 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i532, float %3561, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i534 = select i1 %.not3.i533, float %3570, float %3569, !dbg !126
  %3571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i535 = icmp eq i32 %3571, 0, !dbg !126
  %3572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i534, float %3561, float 0.000000e+00) #5, !dbg !126
  %3573 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i534, float %3561, float 0.000000e+00) #5, !dbg !126
  %.04.i536 = select i1 %.not4.i535, float %3573, float %3572, !dbg !126
  %3574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i537 = icmp eq i32 %3574, 0, !dbg !126
  %3575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i536, float %2776, float %2776) #5, !dbg !126
  %3576 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i536, float %2776, float %2776) #5, !dbg !126
  %.02.i538 = select i1 %.not5.i537, float %3576, float %3575, !dbg !126
  br label %__nv_tanhf.exit539, !dbg !126

__nv_tanhf.exit539:                               ; preds = %__internal_fmad.exit1.i523, %__internal_fmad.exit3.i528
  %s.1.i527 = phi float [ %3560, %__internal_fmad.exit1.i523 ], [ %.02.i538, %__internal_fmad.exit3.i528 ], !dbg !126
  %3577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i540 = icmp eq i32 %3577, 0, !dbg !126
  %3578 = tail call float @llvm.nvvm.fabs.ftz.f(float %2777) #5, !dbg !126
  %3579 = tail call float @llvm.nvvm.fabs.f(float %2777) #5, !dbg !126
  %.01.i541 = select i1 %.not.i540, float %3579, float %3578, !dbg !126
  %3580 = fcmp ult float %.01.i541, 0x3FE3333340000000, !dbg !126
  br i1 %3580, label %__internal_fmad.exit3.i547, label %__internal_fmad.exit1.i542, !dbg !126

__internal_fmad.exit1.i542:                       ; preds = %__nv_tanhf.exit539
  %3581 = fmul float %.01.i541, 0x4007154760000000, !dbg !126
  %3582 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3581) #5, !dbg !126
  %3583 = fadd float %3582, 1.000000e+00, !dbg !126
  %3584 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3583) #6, !dbg !126, !srcloc !64
  %3585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i543 = icmp eq i32 %3585, 0, !dbg !126
  %3586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3584, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3587 = tail call float @llvm.nvvm.fma.rn.f(float %3584, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i544 = select i1 %.not6.i543, float %3587, float %3586, !dbg !126
  %3588 = fcmp oge float %.01.i541, 0x4022059680000000, !dbg !126
  %s.0.i545 = select i1 %3588, float 1.000000e+00, float %.03.i544, !dbg !126
  %3589 = bitcast float %s.0.i545 to i32, !dbg !126
  %3590 = bitcast float %2777 to i32, !dbg !126
  %3591 = and i32 %3590, -2147483648, !dbg !126
  %3592 = or i32 %3591, %3589, !dbg !126
  %3593 = bitcast i32 %3592 to float, !dbg !126
  br label %__nv_tanhf.exit558, !dbg !126

__internal_fmad.exit3.i547:                       ; preds = %__nv_tanhf.exit539
  %3594 = fmul float %2777, %2777, !dbg !126
  %3595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i548 = icmp eq i32 %3595, 0, !dbg !126
  %3596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3594, float 0xBFAAC795C0000000) #5, !dbg !126
  %3597 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3594, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i549 = select i1 %.not1.i548, float %3597, float %3596, !dbg !126
  %3598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i550 = icmp eq i32 %3598, 0, !dbg !126
  %3599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i549, float %3594, float 0x3FC10B2820000000) #5, !dbg !126
  %3600 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i549, float %3594, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i551 = select i1 %.not2.i550, float %3600, float %3599, !dbg !126
  %3601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i552 = icmp eq i32 %3601, 0, !dbg !126
  %3602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i551, float %3594, float 0xBFD5553DA0000000) #5, !dbg !126
  %3603 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i551, float %3594, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i553 = select i1 %.not3.i552, float %3603, float %3602, !dbg !126
  %3604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i554 = icmp eq i32 %3604, 0, !dbg !126
  %3605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i553, float %3594, float 0.000000e+00) #5, !dbg !126
  %3606 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i553, float %3594, float 0.000000e+00) #5, !dbg !126
  %.04.i555 = select i1 %.not4.i554, float %3606, float %3605, !dbg !126
  %3607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i556 = icmp eq i32 %3607, 0, !dbg !126
  %3608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i555, float %2777, float %2777) #5, !dbg !126
  %3609 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i555, float %2777, float %2777) #5, !dbg !126
  %.02.i557 = select i1 %.not5.i556, float %3609, float %3608, !dbg !126
  br label %__nv_tanhf.exit558, !dbg !126

__nv_tanhf.exit558:                               ; preds = %__internal_fmad.exit1.i542, %__internal_fmad.exit3.i547
  %s.1.i546 = phi float [ %3593, %__internal_fmad.exit1.i542 ], [ %.02.i557, %__internal_fmad.exit3.i547 ], !dbg !126
  %3610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i559 = icmp eq i32 %3610, 0, !dbg !126
  %3611 = tail call float @llvm.nvvm.fabs.ftz.f(float %2778) #5, !dbg !126
  %3612 = tail call float @llvm.nvvm.fabs.f(float %2778) #5, !dbg !126
  %.01.i560 = select i1 %.not.i559, float %3612, float %3611, !dbg !126
  %3613 = fcmp ult float %.01.i560, 0x3FE3333340000000, !dbg !126
  br i1 %3613, label %__internal_fmad.exit3.i566, label %__internal_fmad.exit1.i561, !dbg !126

__internal_fmad.exit1.i561:                       ; preds = %__nv_tanhf.exit558
  %3614 = fmul float %.01.i560, 0x4007154760000000, !dbg !126
  %3615 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3614) #5, !dbg !126
  %3616 = fadd float %3615, 1.000000e+00, !dbg !126
  %3617 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3616) #6, !dbg !126, !srcloc !64
  %3618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i562 = icmp eq i32 %3618, 0, !dbg !126
  %3619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3617, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3620 = tail call float @llvm.nvvm.fma.rn.f(float %3617, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i563 = select i1 %.not6.i562, float %3620, float %3619, !dbg !126
  %3621 = fcmp oge float %.01.i560, 0x4022059680000000, !dbg !126
  %s.0.i564 = select i1 %3621, float 1.000000e+00, float %.03.i563, !dbg !126
  %3622 = bitcast float %s.0.i564 to i32, !dbg !126
  %3623 = bitcast float %2778 to i32, !dbg !126
  %3624 = and i32 %3623, -2147483648, !dbg !126
  %3625 = or i32 %3624, %3622, !dbg !126
  %3626 = bitcast i32 %3625 to float, !dbg !126
  br label %__nv_tanhf.exit577, !dbg !126

__internal_fmad.exit3.i566:                       ; preds = %__nv_tanhf.exit558
  %3627 = fmul float %2778, %2778, !dbg !126
  %3628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i567 = icmp eq i32 %3628, 0, !dbg !126
  %3629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3627, float 0xBFAAC795C0000000) #5, !dbg !126
  %3630 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3627, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i568 = select i1 %.not1.i567, float %3630, float %3629, !dbg !126
  %3631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i569 = icmp eq i32 %3631, 0, !dbg !126
  %3632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i568, float %3627, float 0x3FC10B2820000000) #5, !dbg !126
  %3633 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i568, float %3627, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i570 = select i1 %.not2.i569, float %3633, float %3632, !dbg !126
  %3634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i571 = icmp eq i32 %3634, 0, !dbg !126
  %3635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i570, float %3627, float 0xBFD5553DA0000000) #5, !dbg !126
  %3636 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i570, float %3627, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i572 = select i1 %.not3.i571, float %3636, float %3635, !dbg !126
  %3637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i573 = icmp eq i32 %3637, 0, !dbg !126
  %3638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i572, float %3627, float 0.000000e+00) #5, !dbg !126
  %3639 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i572, float %3627, float 0.000000e+00) #5, !dbg !126
  %.04.i574 = select i1 %.not4.i573, float %3639, float %3638, !dbg !126
  %3640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i575 = icmp eq i32 %3640, 0, !dbg !126
  %3641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i574, float %2778, float %2778) #5, !dbg !126
  %3642 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i574, float %2778, float %2778) #5, !dbg !126
  %.02.i576 = select i1 %.not5.i575, float %3642, float %3641, !dbg !126
  br label %__nv_tanhf.exit577, !dbg !126

__nv_tanhf.exit577:                               ; preds = %__internal_fmad.exit1.i561, %__internal_fmad.exit3.i566
  %s.1.i565 = phi float [ %3626, %__internal_fmad.exit1.i561 ], [ %.02.i576, %__internal_fmad.exit3.i566 ], !dbg !126
  %3643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i578 = icmp eq i32 %3643, 0, !dbg !126
  %3644 = tail call float @llvm.nvvm.fabs.ftz.f(float %2779) #5, !dbg !126
  %3645 = tail call float @llvm.nvvm.fabs.f(float %2779) #5, !dbg !126
  %.01.i579 = select i1 %.not.i578, float %3645, float %3644, !dbg !126
  %3646 = fcmp ult float %.01.i579, 0x3FE3333340000000, !dbg !126
  br i1 %3646, label %__internal_fmad.exit3.i585, label %__internal_fmad.exit1.i580, !dbg !126

__internal_fmad.exit1.i580:                       ; preds = %__nv_tanhf.exit577
  %3647 = fmul float %.01.i579, 0x4007154760000000, !dbg !126
  %3648 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3647) #5, !dbg !126
  %3649 = fadd float %3648, 1.000000e+00, !dbg !126
  %3650 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3649) #6, !dbg !126, !srcloc !64
  %3651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i581 = icmp eq i32 %3651, 0, !dbg !126
  %3652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3650, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3653 = tail call float @llvm.nvvm.fma.rn.f(float %3650, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i582 = select i1 %.not6.i581, float %3653, float %3652, !dbg !126
  %3654 = fcmp oge float %.01.i579, 0x4022059680000000, !dbg !126
  %s.0.i583 = select i1 %3654, float 1.000000e+00, float %.03.i582, !dbg !126
  %3655 = bitcast float %s.0.i583 to i32, !dbg !126
  %3656 = bitcast float %2779 to i32, !dbg !126
  %3657 = and i32 %3656, -2147483648, !dbg !126
  %3658 = or i32 %3657, %3655, !dbg !126
  %3659 = bitcast i32 %3658 to float, !dbg !126
  br label %__nv_tanhf.exit596, !dbg !126

__internal_fmad.exit3.i585:                       ; preds = %__nv_tanhf.exit577
  %3660 = fmul float %2779, %2779, !dbg !126
  %3661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i586 = icmp eq i32 %3661, 0, !dbg !126
  %3662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3660, float 0xBFAAC795C0000000) #5, !dbg !126
  %3663 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3660, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i587 = select i1 %.not1.i586, float %3663, float %3662, !dbg !126
  %3664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i588 = icmp eq i32 %3664, 0, !dbg !126
  %3665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i587, float %3660, float 0x3FC10B2820000000) #5, !dbg !126
  %3666 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i587, float %3660, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i589 = select i1 %.not2.i588, float %3666, float %3665, !dbg !126
  %3667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i590 = icmp eq i32 %3667, 0, !dbg !126
  %3668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i589, float %3660, float 0xBFD5553DA0000000) #5, !dbg !126
  %3669 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i589, float %3660, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i591 = select i1 %.not3.i590, float %3669, float %3668, !dbg !126
  %3670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i592 = icmp eq i32 %3670, 0, !dbg !126
  %3671 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i591, float %3660, float 0.000000e+00) #5, !dbg !126
  %3672 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i591, float %3660, float 0.000000e+00) #5, !dbg !126
  %.04.i593 = select i1 %.not4.i592, float %3672, float %3671, !dbg !126
  %3673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i594 = icmp eq i32 %3673, 0, !dbg !126
  %3674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i593, float %2779, float %2779) #5, !dbg !126
  %3675 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i593, float %2779, float %2779) #5, !dbg !126
  %.02.i595 = select i1 %.not5.i594, float %3675, float %3674, !dbg !126
  br label %__nv_tanhf.exit596, !dbg !126

__nv_tanhf.exit596:                               ; preds = %__internal_fmad.exit1.i580, %__internal_fmad.exit3.i585
  %s.1.i584 = phi float [ %3659, %__internal_fmad.exit1.i580 ], [ %.02.i595, %__internal_fmad.exit3.i585 ], !dbg !126
  %3676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i597 = icmp eq i32 %3676, 0, !dbg !126
  %3677 = tail call float @llvm.nvvm.fabs.ftz.f(float %2780) #5, !dbg !126
  %3678 = tail call float @llvm.nvvm.fabs.f(float %2780) #5, !dbg !126
  %.01.i598 = select i1 %.not.i597, float %3678, float %3677, !dbg !126
  %3679 = fcmp ult float %.01.i598, 0x3FE3333340000000, !dbg !126
  br i1 %3679, label %__internal_fmad.exit3.i604, label %__internal_fmad.exit1.i599, !dbg !126

__internal_fmad.exit1.i599:                       ; preds = %__nv_tanhf.exit596
  %3680 = fmul float %.01.i598, 0x4007154760000000, !dbg !126
  %3681 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3680) #5, !dbg !126
  %3682 = fadd float %3681, 1.000000e+00, !dbg !126
  %3683 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3682) #6, !dbg !126, !srcloc !64
  %3684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i600 = icmp eq i32 %3684, 0, !dbg !126
  %3685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3683, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3686 = tail call float @llvm.nvvm.fma.rn.f(float %3683, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i601 = select i1 %.not6.i600, float %3686, float %3685, !dbg !126
  %3687 = fcmp oge float %.01.i598, 0x4022059680000000, !dbg !126
  %s.0.i602 = select i1 %3687, float 1.000000e+00, float %.03.i601, !dbg !126
  %3688 = bitcast float %s.0.i602 to i32, !dbg !126
  %3689 = bitcast float %2780 to i32, !dbg !126
  %3690 = and i32 %3689, -2147483648, !dbg !126
  %3691 = or i32 %3690, %3688, !dbg !126
  %3692 = bitcast i32 %3691 to float, !dbg !126
  br label %__nv_tanhf.exit615, !dbg !126

__internal_fmad.exit3.i604:                       ; preds = %__nv_tanhf.exit596
  %3693 = fmul float %2780, %2780, !dbg !126
  %3694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i605 = icmp eq i32 %3694, 0, !dbg !126
  %3695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3693, float 0xBFAAC795C0000000) #5, !dbg !126
  %3696 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3693, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i606 = select i1 %.not1.i605, float %3696, float %3695, !dbg !126
  %3697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i607 = icmp eq i32 %3697, 0, !dbg !126
  %3698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i606, float %3693, float 0x3FC10B2820000000) #5, !dbg !126
  %3699 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i606, float %3693, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i608 = select i1 %.not2.i607, float %3699, float %3698, !dbg !126
  %3700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i609 = icmp eq i32 %3700, 0, !dbg !126
  %3701 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i608, float %3693, float 0xBFD5553DA0000000) #5, !dbg !126
  %3702 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i608, float %3693, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i610 = select i1 %.not3.i609, float %3702, float %3701, !dbg !126
  %3703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i611 = icmp eq i32 %3703, 0, !dbg !126
  %3704 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i610, float %3693, float 0.000000e+00) #5, !dbg !126
  %3705 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i610, float %3693, float 0.000000e+00) #5, !dbg !126
  %.04.i612 = select i1 %.not4.i611, float %3705, float %3704, !dbg !126
  %3706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i613 = icmp eq i32 %3706, 0, !dbg !126
  %3707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i612, float %2780, float %2780) #5, !dbg !126
  %3708 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i612, float %2780, float %2780) #5, !dbg !126
  %.02.i614 = select i1 %.not5.i613, float %3708, float %3707, !dbg !126
  br label %__nv_tanhf.exit615, !dbg !126

__nv_tanhf.exit615:                               ; preds = %__internal_fmad.exit1.i599, %__internal_fmad.exit3.i604
  %s.1.i603 = phi float [ %3692, %__internal_fmad.exit1.i599 ], [ %.02.i614, %__internal_fmad.exit3.i604 ], !dbg !126
  %3709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i616 = icmp eq i32 %3709, 0, !dbg !126
  %3710 = tail call float @llvm.nvvm.fabs.ftz.f(float %2781) #5, !dbg !126
  %3711 = tail call float @llvm.nvvm.fabs.f(float %2781) #5, !dbg !126
  %.01.i617 = select i1 %.not.i616, float %3711, float %3710, !dbg !126
  %3712 = fcmp ult float %.01.i617, 0x3FE3333340000000, !dbg !126
  br i1 %3712, label %__internal_fmad.exit3.i623, label %__internal_fmad.exit1.i618, !dbg !126

__internal_fmad.exit1.i618:                       ; preds = %__nv_tanhf.exit615
  %3713 = fmul float %.01.i617, 0x4007154760000000, !dbg !126
  %3714 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3713) #5, !dbg !126
  %3715 = fadd float %3714, 1.000000e+00, !dbg !126
  %3716 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3715) #6, !dbg !126, !srcloc !64
  %3717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i619 = icmp eq i32 %3717, 0, !dbg !126
  %3718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3716, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3719 = tail call float @llvm.nvvm.fma.rn.f(float %3716, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i620 = select i1 %.not6.i619, float %3719, float %3718, !dbg !126
  %3720 = fcmp oge float %.01.i617, 0x4022059680000000, !dbg !126
  %s.0.i621 = select i1 %3720, float 1.000000e+00, float %.03.i620, !dbg !126
  %3721 = bitcast float %s.0.i621 to i32, !dbg !126
  %3722 = bitcast float %2781 to i32, !dbg !126
  %3723 = and i32 %3722, -2147483648, !dbg !126
  %3724 = or i32 %3723, %3721, !dbg !126
  %3725 = bitcast i32 %3724 to float, !dbg !126
  br label %__nv_tanhf.exit634, !dbg !126

__internal_fmad.exit3.i623:                       ; preds = %__nv_tanhf.exit615
  %3726 = fmul float %2781, %2781, !dbg !126
  %3727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i624 = icmp eq i32 %3727, 0, !dbg !126
  %3728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3726, float 0xBFAAC795C0000000) #5, !dbg !126
  %3729 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3726, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i625 = select i1 %.not1.i624, float %3729, float %3728, !dbg !126
  %3730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i626 = icmp eq i32 %3730, 0, !dbg !126
  %3731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i625, float %3726, float 0x3FC10B2820000000) #5, !dbg !126
  %3732 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i625, float %3726, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i627 = select i1 %.not2.i626, float %3732, float %3731, !dbg !126
  %3733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i628 = icmp eq i32 %3733, 0, !dbg !126
  %3734 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i627, float %3726, float 0xBFD5553DA0000000) #5, !dbg !126
  %3735 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i627, float %3726, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i629 = select i1 %.not3.i628, float %3735, float %3734, !dbg !126
  %3736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i630 = icmp eq i32 %3736, 0, !dbg !126
  %3737 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i629, float %3726, float 0.000000e+00) #5, !dbg !126
  %3738 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i629, float %3726, float 0.000000e+00) #5, !dbg !126
  %.04.i631 = select i1 %.not4.i630, float %3738, float %3737, !dbg !126
  %3739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i632 = icmp eq i32 %3739, 0, !dbg !126
  %3740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i631, float %2781, float %2781) #5, !dbg !126
  %3741 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i631, float %2781, float %2781) #5, !dbg !126
  %.02.i633 = select i1 %.not5.i632, float %3741, float %3740, !dbg !126
  br label %__nv_tanhf.exit634, !dbg !126

__nv_tanhf.exit634:                               ; preds = %__internal_fmad.exit1.i618, %__internal_fmad.exit3.i623
  %s.1.i622 = phi float [ %3725, %__internal_fmad.exit1.i618 ], [ %.02.i633, %__internal_fmad.exit3.i623 ], !dbg !126
  %3742 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i635 = icmp eq i32 %3742, 0, !dbg !126
  %3743 = tail call float @llvm.nvvm.fabs.ftz.f(float %2782) #5, !dbg !126
  %3744 = tail call float @llvm.nvvm.fabs.f(float %2782) #5, !dbg !126
  %.01.i636 = select i1 %.not.i635, float %3744, float %3743, !dbg !126
  %3745 = fcmp ult float %.01.i636, 0x3FE3333340000000, !dbg !126
  br i1 %3745, label %__internal_fmad.exit3.i642, label %__internal_fmad.exit1.i637, !dbg !126

__internal_fmad.exit1.i637:                       ; preds = %__nv_tanhf.exit634
  %3746 = fmul float %.01.i636, 0x4007154760000000, !dbg !126
  %3747 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3746) #5, !dbg !126
  %3748 = fadd float %3747, 1.000000e+00, !dbg !126
  %3749 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3748) #6, !dbg !126, !srcloc !64
  %3750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i638 = icmp eq i32 %3750, 0, !dbg !126
  %3751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3749, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3752 = tail call float @llvm.nvvm.fma.rn.f(float %3749, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i639 = select i1 %.not6.i638, float %3752, float %3751, !dbg !126
  %3753 = fcmp oge float %.01.i636, 0x4022059680000000, !dbg !126
  %s.0.i640 = select i1 %3753, float 1.000000e+00, float %.03.i639, !dbg !126
  %3754 = bitcast float %s.0.i640 to i32, !dbg !126
  %3755 = bitcast float %2782 to i32, !dbg !126
  %3756 = and i32 %3755, -2147483648, !dbg !126
  %3757 = or i32 %3756, %3754, !dbg !126
  %3758 = bitcast i32 %3757 to float, !dbg !126
  br label %__nv_tanhf.exit653, !dbg !126

__internal_fmad.exit3.i642:                       ; preds = %__nv_tanhf.exit634
  %3759 = fmul float %2782, %2782, !dbg !126
  %3760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i643 = icmp eq i32 %3760, 0, !dbg !126
  %3761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3759, float 0xBFAAC795C0000000) #5, !dbg !126
  %3762 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3759, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i644 = select i1 %.not1.i643, float %3762, float %3761, !dbg !126
  %3763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i645 = icmp eq i32 %3763, 0, !dbg !126
  %3764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i644, float %3759, float 0x3FC10B2820000000) #5, !dbg !126
  %3765 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i644, float %3759, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i646 = select i1 %.not2.i645, float %3765, float %3764, !dbg !126
  %3766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i647 = icmp eq i32 %3766, 0, !dbg !126
  %3767 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i646, float %3759, float 0xBFD5553DA0000000) #5, !dbg !126
  %3768 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i646, float %3759, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i648 = select i1 %.not3.i647, float %3768, float %3767, !dbg !126
  %3769 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i649 = icmp eq i32 %3769, 0, !dbg !126
  %3770 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i648, float %3759, float 0.000000e+00) #5, !dbg !126
  %3771 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i648, float %3759, float 0.000000e+00) #5, !dbg !126
  %.04.i650 = select i1 %.not4.i649, float %3771, float %3770, !dbg !126
  %3772 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i651 = icmp eq i32 %3772, 0, !dbg !126
  %3773 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i650, float %2782, float %2782) #5, !dbg !126
  %3774 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i650, float %2782, float %2782) #5, !dbg !126
  %.02.i652 = select i1 %.not5.i651, float %3774, float %3773, !dbg !126
  br label %__nv_tanhf.exit653, !dbg !126

__nv_tanhf.exit653:                               ; preds = %__internal_fmad.exit1.i637, %__internal_fmad.exit3.i642
  %s.1.i641 = phi float [ %3758, %__internal_fmad.exit1.i637 ], [ %.02.i652, %__internal_fmad.exit3.i642 ], !dbg !126
  %3775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i654 = icmp eq i32 %3775, 0, !dbg !126
  %3776 = tail call float @llvm.nvvm.fabs.ftz.f(float %2783) #5, !dbg !126
  %3777 = tail call float @llvm.nvvm.fabs.f(float %2783) #5, !dbg !126
  %.01.i655 = select i1 %.not.i654, float %3777, float %3776, !dbg !126
  %3778 = fcmp ult float %.01.i655, 0x3FE3333340000000, !dbg !126
  br i1 %3778, label %__internal_fmad.exit3.i661, label %__internal_fmad.exit1.i656, !dbg !126

__internal_fmad.exit1.i656:                       ; preds = %__nv_tanhf.exit653
  %3779 = fmul float %.01.i655, 0x4007154760000000, !dbg !126
  %3780 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3779) #5, !dbg !126
  %3781 = fadd float %3780, 1.000000e+00, !dbg !126
  %3782 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3781) #6, !dbg !126, !srcloc !64
  %3783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i657 = icmp eq i32 %3783, 0, !dbg !126
  %3784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3782, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3785 = tail call float @llvm.nvvm.fma.rn.f(float %3782, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i658 = select i1 %.not6.i657, float %3785, float %3784, !dbg !126
  %3786 = fcmp oge float %.01.i655, 0x4022059680000000, !dbg !126
  %s.0.i659 = select i1 %3786, float 1.000000e+00, float %.03.i658, !dbg !126
  %3787 = bitcast float %s.0.i659 to i32, !dbg !126
  %3788 = bitcast float %2783 to i32, !dbg !126
  %3789 = and i32 %3788, -2147483648, !dbg !126
  %3790 = or i32 %3789, %3787, !dbg !126
  %3791 = bitcast i32 %3790 to float, !dbg !126
  br label %__nv_tanhf.exit672, !dbg !126

__internal_fmad.exit3.i661:                       ; preds = %__nv_tanhf.exit653
  %3792 = fmul float %2783, %2783, !dbg !126
  %3793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i662 = icmp eq i32 %3793, 0, !dbg !126
  %3794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3792, float 0xBFAAC795C0000000) #5, !dbg !126
  %3795 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3792, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i663 = select i1 %.not1.i662, float %3795, float %3794, !dbg !126
  %3796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i664 = icmp eq i32 %3796, 0, !dbg !126
  %3797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i663, float %3792, float 0x3FC10B2820000000) #5, !dbg !126
  %3798 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i663, float %3792, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i665 = select i1 %.not2.i664, float %3798, float %3797, !dbg !126
  %3799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i666 = icmp eq i32 %3799, 0, !dbg !126
  %3800 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i665, float %3792, float 0xBFD5553DA0000000) #5, !dbg !126
  %3801 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i665, float %3792, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i667 = select i1 %.not3.i666, float %3801, float %3800, !dbg !126
  %3802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i668 = icmp eq i32 %3802, 0, !dbg !126
  %3803 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i667, float %3792, float 0.000000e+00) #5, !dbg !126
  %3804 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i667, float %3792, float 0.000000e+00) #5, !dbg !126
  %.04.i669 = select i1 %.not4.i668, float %3804, float %3803, !dbg !126
  %3805 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i670 = icmp eq i32 %3805, 0, !dbg !126
  %3806 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i669, float %2783, float %2783) #5, !dbg !126
  %3807 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i669, float %2783, float %2783) #5, !dbg !126
  %.02.i671 = select i1 %.not5.i670, float %3807, float %3806, !dbg !126
  br label %__nv_tanhf.exit672, !dbg !126

__nv_tanhf.exit672:                               ; preds = %__internal_fmad.exit1.i656, %__internal_fmad.exit3.i661
  %s.1.i660 = phi float [ %3791, %__internal_fmad.exit1.i656 ], [ %.02.i671, %__internal_fmad.exit3.i661 ], !dbg !126
  %3808 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not.i673 = icmp eq i32 %3808, 0, !dbg !126
  %3809 = tail call float @llvm.nvvm.fabs.ftz.f(float %2784) #5, !dbg !126
  %3810 = tail call float @llvm.nvvm.fabs.f(float %2784) #5, !dbg !126
  %.01.i674 = select i1 %.not.i673, float %3810, float %3809, !dbg !126
  %3811 = fcmp ult float %.01.i674, 0x3FE3333340000000, !dbg !126
  br i1 %3811, label %__internal_fmad.exit3.i680, label %__internal_fmad.exit1.i675, !dbg !126

__internal_fmad.exit1.i675:                       ; preds = %__nv_tanhf.exit672
  %3812 = fmul float %.01.i674, 0x4007154760000000, !dbg !126
  %3813 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3812) #5, !dbg !126
  %3814 = fadd float %3813, 1.000000e+00, !dbg !126
  %3815 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3814) #6, !dbg !126, !srcloc !64
  %3816 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not6.i676 = icmp eq i32 %3816, 0, !dbg !126
  %3817 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3815, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %3818 = tail call float @llvm.nvvm.fma.rn.f(float %3815, float -2.000000e+00, float 1.000000e+00) #5, !dbg !126
  %.03.i677 = select i1 %.not6.i676, float %3818, float %3817, !dbg !126
  %3819 = fcmp oge float %.01.i674, 0x4022059680000000, !dbg !126
  %s.0.i678 = select i1 %3819, float 1.000000e+00, float %.03.i677, !dbg !126
  %3820 = bitcast float %s.0.i678 to i32, !dbg !126
  %3821 = bitcast float %2784 to i32, !dbg !126
  %3822 = and i32 %3821, -2147483648, !dbg !126
  %3823 = or i32 %3822, %3820, !dbg !126
  %3824 = bitcast i32 %3823 to float, !dbg !126
  br label %__nv_tanhf.exit691, !dbg !126

__internal_fmad.exit3.i680:                       ; preds = %__nv_tanhf.exit672
  %3825 = fmul float %2784, %2784, !dbg !126
  %3826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not1.i681 = icmp eq i32 %3826, 0, !dbg !126
  %3827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3825, float 0xBFAAC795C0000000) #5, !dbg !126
  %3828 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3825, float 0xBFAAC795C0000000) #5, !dbg !126
  %.06.i682 = select i1 %.not1.i681, float %3828, float %3827, !dbg !126
  %3829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not2.i683 = icmp eq i32 %3829, 0, !dbg !126
  %3830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i682, float %3825, float 0x3FC10B2820000000) #5, !dbg !126
  %3831 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i682, float %3825, float 0x3FC10B2820000000) #5, !dbg !126
  %.05.i684 = select i1 %.not2.i683, float %3831, float %3830, !dbg !126
  %3832 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not3.i685 = icmp eq i32 %3832, 0, !dbg !126
  %3833 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i684, float %3825, float 0xBFD5553DA0000000) #5, !dbg !126
  %3834 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i684, float %3825, float 0xBFD5553DA0000000) #5, !dbg !126
  %.0.i686 = select i1 %.not3.i685, float %3834, float %3833, !dbg !126
  %3835 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not4.i687 = icmp eq i32 %3835, 0, !dbg !126
  %3836 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i686, float %3825, float 0.000000e+00) #5, !dbg !126
  %3837 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i686, float %3825, float 0.000000e+00) #5, !dbg !126
  %.04.i688 = select i1 %.not4.i687, float %3837, float %3836, !dbg !126
  %3838 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !126
  %.not5.i689 = icmp eq i32 %3838, 0, !dbg !126
  %3839 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i688, float %2784, float %2784) #5, !dbg !126
  %3840 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i688, float %2784, float %2784) #5, !dbg !126
  %.02.i690 = select i1 %.not5.i689, float %3840, float %3839, !dbg !126
  br label %__nv_tanhf.exit691, !dbg !126

__nv_tanhf.exit691:                               ; preds = %__internal_fmad.exit1.i675, %__internal_fmad.exit3.i680
  %s.1.i679 = phi float [ %3824, %__internal_fmad.exit1.i675 ], [ %.02.i690, %__internal_fmad.exit3.i680 ], !dbg !126
  %3841 = fadd float %s.1.i, 1.000000e+00, !dbg !127
  %3842 = fadd float %s.1.i109, 1.000000e+00, !dbg !127
  %3843 = fadd float %s.1.i128, 1.000000e+00, !dbg !127
  %3844 = fadd float %s.1.i147, 1.000000e+00, !dbg !127
  %3845 = fadd float %s.1.i166, 1.000000e+00, !dbg !127
  %3846 = fadd float %s.1.i185, 1.000000e+00, !dbg !127
  %3847 = fadd float %s.1.i204, 1.000000e+00, !dbg !127
  %3848 = fadd float %s.1.i223, 1.000000e+00, !dbg !127
  %3849 = fadd float %s.1.i242, 1.000000e+00, !dbg !127
  %3850 = fadd float %s.1.i261, 1.000000e+00, !dbg !127
  %3851 = fadd float %s.1.i280, 1.000000e+00, !dbg !127
  %3852 = fadd float %s.1.i299, 1.000000e+00, !dbg !127
  %3853 = fadd float %s.1.i318, 1.000000e+00, !dbg !127
  %3854 = fadd float %s.1.i337, 1.000000e+00, !dbg !127
  %3855 = fadd float %s.1.i356, 1.000000e+00, !dbg !127
  %3856 = fadd float %s.1.i375, 1.000000e+00, !dbg !127
  %3857 = fadd float %s.1.i394, 1.000000e+00, !dbg !127
  %3858 = fadd float %s.1.i413, 1.000000e+00, !dbg !127
  %3859 = fadd float %s.1.i432, 1.000000e+00, !dbg !127
  %3860 = fadd float %s.1.i451, 1.000000e+00, !dbg !127
  %3861 = fadd float %s.1.i470, 1.000000e+00, !dbg !127
  %3862 = fadd float %s.1.i489, 1.000000e+00, !dbg !127
  %3863 = fadd float %s.1.i508, 1.000000e+00, !dbg !127
  %3864 = fadd float %s.1.i527, 1.000000e+00, !dbg !127
  %3865 = fadd float %s.1.i546, 1.000000e+00, !dbg !127
  %3866 = fadd float %s.1.i565, 1.000000e+00, !dbg !127
  %3867 = fadd float %s.1.i584, 1.000000e+00, !dbg !127
  %3868 = fadd float %s.1.i603, 1.000000e+00, !dbg !127
  %3869 = fadd float %s.1.i622, 1.000000e+00, !dbg !127
  %3870 = fadd float %s.1.i641, 1.000000e+00, !dbg !127
  %3871 = fadd float %s.1.i660, 1.000000e+00, !dbg !127
  %3872 = fadd float %s.1.i679, 1.000000e+00, !dbg !127
  %3873 = fmul float %2593, %3841, !dbg !128
  %3874 = fmul float %2594, %3842, !dbg !128
  %3875 = fmul float %2595, %3843, !dbg !128
  %3876 = fmul float %2596, %3844, !dbg !128
  %3877 = fmul float %2597, %3845, !dbg !128
  %3878 = fmul float %2598, %3846, !dbg !128
  %3879 = fmul float %2599, %3847, !dbg !128
  %3880 = fmul float %2600, %3848, !dbg !128
  %3881 = fmul float %2601, %3849, !dbg !128
  %3882 = fmul float %2602, %3850, !dbg !128
  %3883 = fmul float %2603, %3851, !dbg !128
  %3884 = fmul float %2604, %3852, !dbg !128
  %3885 = fmul float %2605, %3853, !dbg !128
  %3886 = fmul float %2606, %3854, !dbg !128
  %3887 = fmul float %2607, %3855, !dbg !128
  %3888 = fmul float %2608, %3856, !dbg !128
  %3889 = fmul float %2609, %3857, !dbg !128
  %3890 = fmul float %2610, %3858, !dbg !128
  %3891 = fmul float %2611, %3859, !dbg !128
  %3892 = fmul float %2612, %3860, !dbg !128
  %3893 = fmul float %2613, %3861, !dbg !128
  %3894 = fmul float %2614, %3862, !dbg !128
  %3895 = fmul float %2615, %3863, !dbg !128
  %3896 = fmul float %2616, %3864, !dbg !128
  %3897 = fmul float %2617, %3865, !dbg !128
  %3898 = fmul float %2618, %3866, !dbg !128
  %3899 = fmul float %2619, %3867, !dbg !128
  %3900 = fmul float %2620, %3868, !dbg !128
  %3901 = fmul float %2621, %3869, !dbg !128
  %3902 = fmul float %2622, %3870, !dbg !128
  %3903 = fmul float %2623, %3871, !dbg !128
  %3904 = fmul float %2624, %3872, !dbg !128
  %3905 = fmul float %2483, %3873, !dbg !129
  %3906 = fmul float %2483, %3874, !dbg !129
  %3907 = fmul float %2483, %3875, !dbg !129
  %3908 = fmul float %2483, %3876, !dbg !129
  %3909 = fmul float %2483, %3877, !dbg !129
  %3910 = fmul float %2483, %3878, !dbg !129
  %3911 = fmul float %2483, %3879, !dbg !129
  %3912 = fmul float %2483, %3880, !dbg !129
  %3913 = fmul float %2483, %3881, !dbg !129
  %3914 = fmul float %2483, %3882, !dbg !129
  %3915 = fmul float %2483, %3883, !dbg !129
  %3916 = fmul float %2483, %3884, !dbg !129
  %3917 = fmul float %2483, %3885, !dbg !129
  %3918 = fmul float %2483, %3886, !dbg !129
  %3919 = fmul float %2483, %3887, !dbg !129
  %3920 = fmul float %2483, %3888, !dbg !129
  %3921 = fmul float %2484, %3889, !dbg !129
  %3922 = fmul float %2484, %3890, !dbg !129
  %3923 = fmul float %2484, %3891, !dbg !129
  %3924 = fmul float %2484, %3892, !dbg !129
  %3925 = fmul float %2484, %3893, !dbg !129
  %3926 = fmul float %2484, %3894, !dbg !129
  %3927 = fmul float %2484, %3895, !dbg !129
  %3928 = fmul float %2484, %3896, !dbg !129
  %3929 = fmul float %2484, %3897, !dbg !129
  %3930 = fmul float %2484, %3898, !dbg !129
  %3931 = fmul float %2484, %3899, !dbg !129
  %3932 = fmul float %2484, %3900, !dbg !129
  %3933 = fmul float %2484, %3901, !dbg !129
  %3934 = fmul float %2484, %3902, !dbg !129
  %3935 = fmul float %2484, %3903, !dbg !129
  %3936 = fmul float %2484, %3904, !dbg !129
  %3937 = tail call float @llvm.nvvm.round.f(float %3905) #5, !dbg !130
  %3938 = tail call float @llvm.nvvm.round.f(float %3906) #5, !dbg !130
  %3939 = tail call float @llvm.nvvm.round.f(float %3907) #5, !dbg !130
  %3940 = tail call float @llvm.nvvm.round.f(float %3908) #5, !dbg !130
  %3941 = tail call float @llvm.nvvm.round.f(float %3909) #5, !dbg !130
  %3942 = tail call float @llvm.nvvm.round.f(float %3910) #5, !dbg !130
  %3943 = tail call float @llvm.nvvm.round.f(float %3911) #5, !dbg !130
  %3944 = tail call float @llvm.nvvm.round.f(float %3912) #5, !dbg !130
  %3945 = tail call float @llvm.nvvm.round.f(float %3913) #5, !dbg !130
  %3946 = tail call float @llvm.nvvm.round.f(float %3914) #5, !dbg !130
  %3947 = tail call float @llvm.nvvm.round.f(float %3915) #5, !dbg !130
  %3948 = tail call float @llvm.nvvm.round.f(float %3916) #5, !dbg !130
  %3949 = tail call float @llvm.nvvm.round.f(float %3917) #5, !dbg !130
  %3950 = tail call float @llvm.nvvm.round.f(float %3918) #5, !dbg !130
  %3951 = tail call float @llvm.nvvm.round.f(float %3919) #5, !dbg !130
  %3952 = tail call float @llvm.nvvm.round.f(float %3920) #5, !dbg !130
  %3953 = tail call float @llvm.nvvm.round.f(float %3921) #5, !dbg !130
  %3954 = tail call float @llvm.nvvm.round.f(float %3922) #5, !dbg !130
  %3955 = tail call float @llvm.nvvm.round.f(float %3923) #5, !dbg !130
  %3956 = tail call float @llvm.nvvm.round.f(float %3924) #5, !dbg !130
  %3957 = tail call float @llvm.nvvm.round.f(float %3925) #5, !dbg !130
  %3958 = tail call float @llvm.nvvm.round.f(float %3926) #5, !dbg !130
  %3959 = tail call float @llvm.nvvm.round.f(float %3927) #5, !dbg !130
  %3960 = tail call float @llvm.nvvm.round.f(float %3928) #5, !dbg !130
  %3961 = tail call float @llvm.nvvm.round.f(float %3929) #5, !dbg !130
  %3962 = tail call float @llvm.nvvm.round.f(float %3930) #5, !dbg !130
  %3963 = tail call float @llvm.nvvm.round.f(float %3931) #5, !dbg !130
  %3964 = tail call float @llvm.nvvm.round.f(float %3932) #5, !dbg !130
  %3965 = tail call float @llvm.nvvm.round.f(float %3933) #5, !dbg !130
  %3966 = tail call float @llvm.nvvm.round.f(float %3934) #5, !dbg !130
  %3967 = tail call float @llvm.nvvm.round.f(float %3935) #5, !dbg !130
  %3968 = tail call float @llvm.nvvm.round.f(float %3936) #5, !dbg !130
  %3969 = insertelement <4 x float> poison, float %3937, i64 0, !dbg !131
  %3970 = insertelement <4 x float> %3969, float %3938, i64 1, !dbg !131
  %3971 = insertelement <4 x float> %3970, float %3939, i64 2, !dbg !131
  %3972 = insertelement <4 x float> %3971, float %3940, i64 3, !dbg !131
  %3973 = fcmp ogt <4 x float> %3972, splat (float -1.270000e+02), !dbg !131
  %3974 = fcmp uno <4 x float> %3972, zeroinitializer, !dbg !133
  %3975 = or <4 x i1> %3973, %3974, !dbg !134
  %3976 = select <4 x i1> %3975, <4 x float> %3972, <4 x float> splat (float -1.270000e+02), !dbg !135
  %3977 = fcmp olt <4 x float> %3976, splat (float 1.270000e+02), !dbg !136
  %3978 = fcmp uno <4 x float> %3976, zeroinitializer, !dbg !138
  %3979 = or <4 x i1> %3977, %3978, !dbg !139
  %3980 = fptosi <4 x float> %3976 to <4 x i8>, !dbg !140
  %3981 = select <4 x i1> %3979, <4 x i8> %3980, <4 x i8> splat (i8 127), !dbg !141
  %3982 = insertelement <4 x float> poison, float %3941, i64 0, !dbg !131
  %3983 = insertelement <4 x float> %3982, float %3942, i64 1, !dbg !131
  %3984 = insertelement <4 x float> %3983, float %3943, i64 2, !dbg !131
  %3985 = insertelement <4 x float> %3984, float %3944, i64 3, !dbg !131
  %3986 = fcmp ogt <4 x float> %3985, splat (float -1.270000e+02), !dbg !131
  %3987 = fcmp uno <4 x float> %3985, zeroinitializer, !dbg !133
  %3988 = or <4 x i1> %3986, %3987, !dbg !134
  %3989 = select <4 x i1> %3988, <4 x float> %3985, <4 x float> splat (float -1.270000e+02), !dbg !135
  %3990 = fcmp olt <4 x float> %3989, splat (float 1.270000e+02), !dbg !136
  %3991 = fcmp uno <4 x float> %3989, zeroinitializer, !dbg !138
  %3992 = or <4 x i1> %3990, %3991, !dbg !139
  %3993 = fptosi <4 x float> %3989 to <4 x i8>, !dbg !140
  %3994 = select <4 x i1> %3992, <4 x i8> %3993, <4 x i8> splat (i8 127), !dbg !141
  %3995 = insertelement <4 x float> poison, float %3945, i64 0, !dbg !131
  %3996 = insertelement <4 x float> %3995, float %3946, i64 1, !dbg !131
  %3997 = insertelement <4 x float> %3996, float %3947, i64 2, !dbg !131
  %3998 = insertelement <4 x float> %3997, float %3948, i64 3, !dbg !131
  %3999 = fcmp ogt <4 x float> %3998, splat (float -1.270000e+02), !dbg !131
  %4000 = fcmp uno <4 x float> %3998, zeroinitializer, !dbg !133
  %4001 = or <4 x i1> %3999, %4000, !dbg !134
  %4002 = select <4 x i1> %4001, <4 x float> %3998, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4003 = fcmp olt <4 x float> %4002, splat (float 1.270000e+02), !dbg !136
  %4004 = fcmp uno <4 x float> %4002, zeroinitializer, !dbg !138
  %4005 = or <4 x i1> %4003, %4004, !dbg !139
  %4006 = fptosi <4 x float> %4002 to <4 x i8>, !dbg !140
  %4007 = select <4 x i1> %4005, <4 x i8> %4006, <4 x i8> splat (i8 127), !dbg !141
  %4008 = insertelement <4 x float> poison, float %3949, i64 0, !dbg !131
  %4009 = insertelement <4 x float> %4008, float %3950, i64 1, !dbg !131
  %4010 = insertelement <4 x float> %4009, float %3951, i64 2, !dbg !131
  %4011 = insertelement <4 x float> %4010, float %3952, i64 3, !dbg !131
  %4012 = fcmp ogt <4 x float> %4011, splat (float -1.270000e+02), !dbg !131
  %4013 = fcmp uno <4 x float> %4011, zeroinitializer, !dbg !133
  %4014 = or <4 x i1> %4012, %4013, !dbg !134
  %4015 = select <4 x i1> %4014, <4 x float> %4011, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4016 = fcmp olt <4 x float> %4015, splat (float 1.270000e+02), !dbg !136
  %4017 = fcmp uno <4 x float> %4015, zeroinitializer, !dbg !138
  %4018 = or <4 x i1> %4016, %4017, !dbg !139
  %4019 = fptosi <4 x float> %4015 to <4 x i8>, !dbg !140
  %4020 = select <4 x i1> %4018, <4 x i8> %4019, <4 x i8> splat (i8 127), !dbg !141
  %4021 = insertelement <4 x float> poison, float %3953, i64 0, !dbg !131
  %4022 = insertelement <4 x float> %4021, float %3954, i64 1, !dbg !131
  %4023 = insertelement <4 x float> %4022, float %3955, i64 2, !dbg !131
  %4024 = insertelement <4 x float> %4023, float %3956, i64 3, !dbg !131
  %4025 = fcmp ogt <4 x float> %4024, splat (float -1.270000e+02), !dbg !131
  %4026 = fcmp uno <4 x float> %4024, zeroinitializer, !dbg !133
  %4027 = or <4 x i1> %4025, %4026, !dbg !134
  %4028 = select <4 x i1> %4027, <4 x float> %4024, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4029 = fcmp olt <4 x float> %4028, splat (float 1.270000e+02), !dbg !136
  %4030 = fcmp uno <4 x float> %4028, zeroinitializer, !dbg !138
  %4031 = or <4 x i1> %4029, %4030, !dbg !139
  %4032 = fptosi <4 x float> %4028 to <4 x i8>, !dbg !140
  %4033 = select <4 x i1> %4031, <4 x i8> %4032, <4 x i8> splat (i8 127), !dbg !141
  %4034 = insertelement <4 x float> poison, float %3957, i64 0, !dbg !131
  %4035 = insertelement <4 x float> %4034, float %3958, i64 1, !dbg !131
  %4036 = insertelement <4 x float> %4035, float %3959, i64 2, !dbg !131
  %4037 = insertelement <4 x float> %4036, float %3960, i64 3, !dbg !131
  %4038 = fcmp ogt <4 x float> %4037, splat (float -1.270000e+02), !dbg !131
  %4039 = fcmp uno <4 x float> %4037, zeroinitializer, !dbg !133
  %4040 = or <4 x i1> %4038, %4039, !dbg !134
  %4041 = select <4 x i1> %4040, <4 x float> %4037, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4042 = fcmp olt <4 x float> %4041, splat (float 1.270000e+02), !dbg !136
  %4043 = fcmp uno <4 x float> %4041, zeroinitializer, !dbg !138
  %4044 = or <4 x i1> %4042, %4043, !dbg !139
  %4045 = fptosi <4 x float> %4041 to <4 x i8>, !dbg !140
  %4046 = select <4 x i1> %4044, <4 x i8> %4045, <4 x i8> splat (i8 127), !dbg !141
  %4047 = insertelement <4 x float> poison, float %3961, i64 0, !dbg !131
  %4048 = insertelement <4 x float> %4047, float %3962, i64 1, !dbg !131
  %4049 = insertelement <4 x float> %4048, float %3963, i64 2, !dbg !131
  %4050 = insertelement <4 x float> %4049, float %3964, i64 3, !dbg !131
  %4051 = fcmp ogt <4 x float> %4050, splat (float -1.270000e+02), !dbg !131
  %4052 = fcmp uno <4 x float> %4050, zeroinitializer, !dbg !133
  %4053 = or <4 x i1> %4051, %4052, !dbg !134
  %4054 = select <4 x i1> %4053, <4 x float> %4050, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4055 = fcmp olt <4 x float> %4054, splat (float 1.270000e+02), !dbg !136
  %4056 = fcmp uno <4 x float> %4054, zeroinitializer, !dbg !138
  %4057 = or <4 x i1> %4055, %4056, !dbg !139
  %4058 = fptosi <4 x float> %4054 to <4 x i8>, !dbg !140
  %4059 = select <4 x i1> %4057, <4 x i8> %4058, <4 x i8> splat (i8 127), !dbg !141
  %4060 = insertelement <4 x float> poison, float %3965, i64 0, !dbg !131
  %4061 = insertelement <4 x float> %4060, float %3966, i64 1, !dbg !131
  %4062 = insertelement <4 x float> %4061, float %3967, i64 2, !dbg !131
  %4063 = insertelement <4 x float> %4062, float %3968, i64 3, !dbg !131
  %4064 = fcmp ogt <4 x float> %4063, splat (float -1.270000e+02), !dbg !131
  %4065 = fcmp uno <4 x float> %4063, zeroinitializer, !dbg !133
  %4066 = or <4 x i1> %4064, %4065, !dbg !134
  %4067 = select <4 x i1> %4066, <4 x float> %4063, <4 x float> splat (float -1.270000e+02), !dbg !135
  %4068 = fcmp olt <4 x float> %4067, splat (float 1.270000e+02), !dbg !136
  %4069 = fcmp uno <4 x float> %4067, zeroinitializer, !dbg !138
  %4070 = or <4 x i1> %4068, %4069, !dbg !139
  %4071 = fptosi <4 x float> %4067 to <4 x i8>, !dbg !140
  %4072 = select <4 x i1> %4070, <4 x i8> %4071, <4 x i8> splat (i8 127), !dbg !141
  %4073 = getelementptr i8, ptr addrspace(1) %8, i64 %2504, !dbg !142
  %4074 = getelementptr i8, ptr addrspace(1) %8, i64 %2512, !dbg !142
  %4075 = bitcast <4 x i8> %3981 to i32, !dbg !143
  %4076 = bitcast <4 x i8> %3994 to i32, !dbg !143
  %4077 = bitcast <4 x i8> %4007 to i32, !dbg !143
  %4078 = bitcast <4 x i8> %4020 to i32, !dbg !143
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %4075, i32 %4076, i32 %4077, i32 %4078, ptr addrspace(1) %4073, i1 %2520) #5, !dbg !143
  %4079 = bitcast <4 x i8> %4033 to i32, !dbg !143
  %4080 = bitcast <4 x i8> %4046 to i32, !dbg !143
  %4081 = bitcast <4 x i8> %4059 to i32, !dbg !143
  %4082 = bitcast <4 x i8> %4072 to i32, !dbg !143
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %4079, i32 %4080, i32 %4081, i32 %4082, ptr addrspace(1) %4074, i1 %2520) #5, !dbg !143
  br i1 %2486, label %2485, label %4083, !dbg !113

4083:                                             ; preds = %__nv_tanhf.exit691
  ret void, !dbg !144
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmxyjrahlth755bxxcexivgsgdoyxnb2wwthefvjadx2dkvt3x6m.py", directory: "/tmp/torchinductor_root/mx")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_13, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_13", linkageName: "triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_13", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 29, column: 30, scope: !6)
!16 = !DILocation(line: 30, column: 35, scope: !6)
!17 = !DILocation(line: 29, column: 35, scope: !6)
!18 = !DILocation(line: 30, column: 30, scope: !6)
!19 = !DILocation(line: 39, column: 47, scope: !6)
!20 = !DILocation(line: 97, column: 29, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !6, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 44, column: 44, scope: !6)
!24 = !DILocation(line: 45, column: 16, scope: !6)
!25 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !26)
!26 = !DILocation(line: 46, column: 44, scope: !6)
!27 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !28)
!28 = !DILocation(line: 47, column: 44, scope: !6)
!29 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !28)
!30 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !28)
!31 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !28)
!32 = !DILocation(line: 49, column: 23, scope: !6)
!33 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !34)
!34 = !DILocation(line: 52, column: 46, scope: !6)
!35 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !34)
!36 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !34)
!37 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !34)
!38 = !DILocation(line: 33, column: 40, scope: !6)
!39 = !DILocation(line: 74, column: 50, scope: !6)
!40 = !DILocation(line: 76, column: 50, scope: !6)
!41 = !DILocation(line: 34, column: 31, scope: !6)
!42 = !DILocation(line: 35, column: 29, scope: !6)
!43 = !DILocation(line: 39, column: 41, scope: !6)
!44 = !DILocation(line: 39, column: 34, scope: !6)
!45 = !DILocation(line: 39, column: 60, scope: !6)
!46 = !DILocation(line: 39, column: 52, scope: !6)
!47 = !DILocation(line: 40, column: 35, scope: !6)
!48 = !DILocation(line: 40, column: 42, scope: !6)
!49 = !DILocation(line: 41, column: 35, scope: !6)
!50 = !DILocation(line: 41, column: 42, scope: !6)
!51 = !DILocation(line: 42, column: 23, scope: !6)
!52 = !DILocation(line: 54, column: 23, scope: !6)
!53 = !DILocation(line: 40, column: 95, scope: !6)
!54 = !DILocation(line: 41, column: 95, scope: !6)
!55 = !DILocation(line: 55, column: 24, scope: !6)
!56 = !DILocation(line: 56, column: 24, scope: !6)
!57 = !DILocation(line: 59, column: 24, scope: !6)
!58 = !DILocation(line: 64, column: 24, scope: !6)
!59 = !DILocation(line: 60, column: 24, scope: !6)
!60 = !DILocation(line: 61, column: 24, scope: !6)
!61 = !DILocation(line: 63, column: 24, scope: !6)
!62 = !DILocation(line: 66, column: 24, scope: !6)
!63 = !DILocation(line: 67, column: 31, scope: !6)
!64 = !{i32 21046}
!65 = !DILocation(line: 69, column: 24, scope: !6)
!66 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !67)
!67 = !DILocation(line: 75, column: 47, scope: !6)
!68 = !DILocation(line: 96, column: 21, scope: !21, inlinedAt: !69)
!69 = !DILocation(line: 73, column: 47, scope: !6)
!70 = !DILocation(line: 70, column: 24, scope: !6)
!71 = !DILocation(line: 94, column: 15, scope: !21, inlinedAt: !69)
!72 = !DILocation(line: 96, column: 16, scope: !21, inlinedAt: !69)
!73 = !DILocation(line: 97, column: 29, scope: !21, inlinedAt: !69)
!74 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !67)
!75 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !67)
!76 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !67)
!77 = !DILocation(line: 77, column: 29, scope: !6)
!78 = !DILocation(line: 77, column: 54, scope: !6)
!79 = !DILocation(line: 110, column: 29, scope: !21, inlinedAt: !80)
!80 = !DILocation(line: 78, column: 40, scope: !6)
!81 = !DILocation(line: 102, column: 15, scope: !82, inlinedAt: !83)
!82 = distinct !DILexicalBlockFile(scope: !21, file: !22, discriminator: 0)
!83 = !DILocation(line: 79, column: 40, scope: !6)
!84 = !DILocation(line: 96, column: 21, scope: !82, inlinedAt: !80)
!85 = !DILocation(line: 96, column: 16, scope: !82, inlinedAt: !80)
!86 = !DILocation(line: 97, column: 29, scope: !82, inlinedAt: !80)
!87 = !DILocation(line: 94, column: 15, scope: !82, inlinedAt: !80)
!88 = !DILocation(line: 80, column: 37, scope: !6)
!89 = !DILocation(line: 115, column: 29, scope: !21, inlinedAt: !83)
!90 = !DILocation(line: 104, column: 21, scope: !82, inlinedAt: !83)
!91 = !DILocation(line: 104, column: 16, scope: !82, inlinedAt: !83)
!92 = !DILocation(line: 105, column: 29, scope: !82, inlinedAt: !83)
!93 = !DILocation(line: 81, column: 37, scope: !6)
!94 = !DILocation(line: 80, column: 25, scope: !6)
!95 = !DILocation(line: 81, column: 25, scope: !6)
!96 = !DILocation(line: 97, column: 29, scope: !21, inlinedAt: !97)
!97 = !DILocation(line: 104, column: 46, scope: !6)
!98 = !DILocation(line: 105, column: 17, scope: !6)
!99 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !100)
!100 = !DILocation(line: 106, column: 46, scope: !6)
!101 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !102)
!102 = !DILocation(line: 107, column: 46, scope: !6)
!103 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !102)
!104 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !102)
!105 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !102)
!106 = !DILocation(line: 109, column: 24, scope: !6)
!107 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !108)
!108 = !DILocation(line: 112, column: 46, scope: !6)
!109 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !108)
!110 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !108)
!111 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !108)
!112 = !DILocation(line: 115, column: 25, scope: !6)
!113 = !DILocation(line: 82, column: 40, scope: !6)
!114 = !DILocation(line: 83, column: 31, scope: !6)
!115 = !DILocation(line: 84, column: 29, scope: !6)
!116 = !DILocation(line: 88, column: 43, scope: !6)
!117 = !DILocation(line: 88, column: 36, scope: !6)
!118 = !DILocation(line: 88, column: 62, scope: !6)
!119 = !DILocation(line: 88, column: 54, scope: !6)
!120 = !DILocation(line: 90, column: 24, scope: !6)
!121 = !DILocation(line: 91, column: 24, scope: !6)
!122 = !DILocation(line: 92, column: 24, scope: !6)
!123 = !DILocation(line: 94, column: 24, scope: !6)
!124 = !DILocation(line: 95, column: 24, scope: !6)
!125 = !DILocation(line: 97, column: 24, scope: !6)
!126 = !DILocation(line: 98, column: 31, scope: !6)
!127 = !DILocation(line: 100, column: 24, scope: !6)
!128 = !DILocation(line: 101, column: 24, scope: !6)
!129 = !DILocation(line: 117, column: 24, scope: !6)
!130 = !DILocation(line: 118, column: 36, scope: !6)
!131 = !DILocation(line: 102, column: 15, scope: !21, inlinedAt: !132)
!132 = !DILocation(line: 121, column: 46, scope: !6)
!133 = !DILocation(line: 104, column: 21, scope: !21, inlinedAt: !132)
!134 = !DILocation(line: 104, column: 16, scope: !21, inlinedAt: !132)
!135 = !DILocation(line: 105, column: 29, scope: !21, inlinedAt: !132)
!136 = !DILocation(line: 94, column: 15, scope: !21, inlinedAt: !137)
!137 = !DILocation(line: 123, column: 46, scope: !6)
!138 = !DILocation(line: 96, column: 21, scope: !21, inlinedAt: !137)
!139 = !DILocation(line: 96, column: 16, scope: !21, inlinedAt: !137)
!140 = !DILocation(line: 125, column: 25, scope: !6)
!141 = !DILocation(line: 97, column: 29, scope: !21, inlinedAt: !137)
!142 = !DILocation(line: 126, column: 29, scope: !6)
!143 = !DILocation(line: 126, column: 54, scope: !6)
!144 = !DILocation(line: 82, column: 4, scope: !6)
