//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<222>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<32>;
	.loc	1 17 0                          // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd19, [triton_mm_param_0];
	ld.param.u64 	%rd20, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:40:24
	mov.u32 	%r38, %ctaid.x;
	.loc	1 46 22                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:46:22
	shr.s32 	%r39, %r38, 31;
	shr.u32 	%r40, %r39, 22;
	add.s32 	%r41, %r38, %r40;
	shr.s32 	%r42, %r41, 10;
	.loc	1 47 41                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:47:41
	shl.b32 	%r43, %r42, 3;
	.loc	1 47 30                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:47:30
	sub.s32 	%r44, 8, %r43;
	.loc	1 47 50                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:47:50
	min.s32 	%r45, %r44, 8;
	.loc	1 48 40                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:48:40
	rem.s32 	%r46, %r38, %r45;
	.loc	1 48 34                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:48:34
	add.s32 	%r47, %r46, %r43;
	.loc	1 49 19                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:49:19
	and.b32  	%r48, %r41, -1024;
	sub.s32 	%r49, %r38, %r48;
	.loc	1 49 30                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:49:30
	div.s32 	%r50, %r49, %r45;
	.loc	1 51 17                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:51:17
	shl.b32 	%r51, %r47, 6;
	.loc	1 51 40                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:51:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 4;
	and.b32  	%r3, %r1, 16;
	shr.u32 	%r52, %r1, 2;
	and.b32  	%r4, %r52, 8;
	bfe.u32 	%r53, %r1, 2, 4;
	and.b32  	%r5, %r1, 64;
	shr.u32 	%r54, %r5, 2;
	and.b32  	%r6, %r1, 128;
	shr.u32 	%r55, %r6, 2;
	or.b32  	%r56, %r54, %r53;
	or.b32  	%r57, %r56, %r55;
	.loc	1 51 27                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:51:27
	or.b32  	%r7, %r51, %r57;
	.loc	1 52 17                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:52:17
	shl.b32 	%r8, %r50, 5;
	.loc	1 52 40                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:52:40
	bfe.u32 	%r58, %r1, 3, 5;
	shl.b32 	%r9, %r1, 3;
	and.b32  	%r10, %r9, 24;
	.loc	1 52 27                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:52:27
	or.b32  	%r59, %r8, %r58;
	.loc	1 54 57                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:54:57
	bfe.s32 	%r60, %r47, 25, 1;
	shr.u32 	%r61, %r60, 23;
	add.s32 	%r62, %r7, %r61;
	and.b32  	%r63, %r62, 1048064;
	sub.s32 	%r64, %r7, %r63;
	.loc	1 58 57                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:58:57
	bfe.s32 	%r65, %r50, 26, 1;
	shr.u32 	%r66, %r65, 20;
	add.s32 	%r67, %r59, %r66;
	and.b32  	%r68, %r67, 1044480;
	sub.s32 	%r69, %r59, %r68;
	.loc	1 67 30                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:67:30
	shl.b32 	%r70, %r1, 2;
	and.b32  	%r71, %r70, 8;
	and.b32  	%r72, %r70, 12;
	shl.b32 	%r73, %r2, 2;
	or.b32  	%r74, %r72, %r73;
	.loc	1 71 30                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:71:30
	shl.b32 	%r75, %r64, 12;
	.loc	1 77 55                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:55
	shl.b32 	%r76, %r69, 12;
	.loc	1 71 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:71:25
	or.b32  	%r77, %r75, %r10;
	.loc	1 72 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:25
	mul.wide.s32 	%rd21, %r77, 2;
	add.s64 	%rd10, %rd19, %rd21;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	xor.b32  	%r78, %r9, %r1;
	and.b32  	%r79, %r78, 24;
	shl.b32 	%r80, %r79, 1;
	shl.b32 	%r81, %r57, 6;
	or.b32  	%r82, %r81, %r80;
	mov.u32 	%r83, global_smem;
	add.s32 	%r20, %r83, %r82;
	mov.b32 	%r21, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r20 + 0 ], [ %rd10 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:50
	or.b32  	%r84, %r76, %r74;
	.loc	1 77 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:25
	mul.wide.s32 	%rd22, %r84, 2;
	add.s64 	%rd11, %rd20, %rd22;
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	shr.u32 	%r85, %r3, 1;
	shr.u32 	%r86, %r1, 1;
	and.b32  	%r87, %r86, 24;
	xor.b32  	%r88, %r74, %r87;
	shl.b32 	%r89, %r88, 1;
	shl.b32 	%r90, %r58, 6;
	or.b32  	%r91, %r90, %r89;
	add.s32 	%r92, %r83, %r91;
	add.s32 	%r22, %r92, 16384;
	mov.b32 	%r23, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r22 + 0 ], [ %rd11 + 0 ], 0x8, %r23;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:25
	add.s64 	%rd12, %rd10, 64;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	bar.sync 	0;
	add.s32 	%r24, %r20, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd12 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:25
	add.s64 	%rd13, %rd11, 64;
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	add.s32 	%r26, %r92, 18432;
	// begin inline asm
	cp.async.ca.shared.global [ %r26 + 0 ], [ %rd13 + 0 ], 0x8, %r23;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:25
	add.s64 	%rd14, %rd10, 128;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	bar.sync 	0;
	add.s32 	%r28, %r20, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r28 + 0 ], [ %rd14 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:25
	add.s64 	%rd15, %rd11, 128;
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	add.s32 	%r30, %r92, 20480;
	// begin inline asm
	cp.async.ca.shared.global [ %r30 + 0 ], [ %rd15 + 0 ], 0x8, %r23;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:25
	add.s64 	%rd16, %rd10, 192;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	bar.sync 	0;
	add.s32 	%r32, %r20, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r32 + 0 ], [ %rd16 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:25
	add.s64 	%rd17, %rd11, 192;
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	add.s32 	%r34, %r92, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r34 + 0 ], [ %rd17 + 0 ], 0x8, %r23;
	// end inline asm
	cp.async.commit_group;
	or.b32  	%r93, %r71, %r73;
	and.b32  	%r94, %r1, 7;
	and.b32  	%r95, %r1, 15;
	xor.b32  	%r96, %r93, %r85;
	or.b32  	%r97, %r54, %r95;
	or.b32  	%r98, %r97, %r55;
	shl.b32 	%r99, %r98, 5;
	or.b32  	%r13, %r99, %r96;
	or.b32  	%r100, %r71, 16;
	or.b32  	%r101, %r85, %r73;
	xor.b32  	%r102, %r101, %r100;
	or.b32  	%r14, %r102, %r99;
	and.b32  	%r103, %r1, 24;
	xor.b32  	%r104, %r93, %r103;
	or.b32  	%r105, %r4, %r94;
	shl.b32 	%r106, %r105, 5;
	or.b32  	%r15, %r104, %r106;
	.loc	1 64 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:64:26
	or.b32  	%r107, %r76, %r73;
	or.b32  	%r108, %r107, %r72;
	mul.wide.s32 	%rd23, %r108, 2;
	add.s64 	%rd24, %rd23, %rd20;
	add.s64 	%rd30, %rd24, 256;
	add.s64 	%rd29, %rd10, 256;
	mov.f32 	%f50, 0f00000000;
	mov.b32 	%r221, 3;
	mov.b32 	%r220, -1;
	mov.b64 	%rd31, 0;
	shl.b32 	%r161, %r13, 1;
	shl.b32 	%r162, %r14, 1;
	shl.b32 	%r165, %r15, 1;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd31, 124;
	add.s32 	%r157, %r220, 1;
	setp.lt.s32 	%p2, %r157, 4;
	selp.b32 	%r220, %r157, 0, %p2;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r158, %r220, 12;
	add.s32 	%r160, %r83, %r158;
	add.s32 	%r113, %r160, %r161;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r129, %r130, %r131, %r132}, [%r113];
	// end inline asm
	add.s32 	%r118, %r160, %r162;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r141, %r142, %r143, %r144}, [%r118];
	// end inline asm
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	shl.b32 	%r163, %r220, 11;
	add.s32 	%r164, %r83, %r163;
	add.s32 	%r166, %r164, %r165;
	add.s32 	%r123, %r166, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r119, %r120, %r121, %r122}, [%r123];
	// end inline asm
	add.s32 	%r128, %r166, 17408;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r124, %r125, %r126, %r127}, [%r128];
	// end inline asm
	.loc	1 78 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r129, %r130, %r131, %r132 }, { %r119, %r120 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r129, %r130, %r131, %r132 }, { %r124, %r125 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r141, %r142, %r143, %r144 }, { %r121, %r122 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r141, %r142, %r143, %r144 }, { %r126, %r127 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	.loc	1 64 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:64:26
	add.s32 	%r167, %r221, 1;
	setp.lt.s32 	%p3, %r167, 4;
	selp.b32 	%r221, %r167, 0, %p3;
	.loc	1 72 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:72:20
	shl.b32 	%r168, %r221, 12;
	bar.sync 	0;
	add.s32 	%r153, %r20, %r168;
	selp.b32 	%r154, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r153 + 0 ], [ %rd29 + 0 ], 0x10, %r154;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:77:20
	shl.b32 	%r169, %r221, 11;
	add.s32 	%r155, %r22, %r169;
	selp.b32 	%r156, 8, 0, %p1;
	// begin inline asm
	cp.async.ca.shared.global [ %r155 + 0 ], [ %rd30 + 0 ], 0x8, %r156;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:64:26
	add.s64 	%rd31, %rd31, 1;
	add.s64 	%rd30, %rd30, 64;
	add.s64 	%rd29, %rd29, 64;
	setp.ne.s64 	%p4, %rd31, 128;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 27                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:52:27
	or.b32  	%r178, %r8, %r10;
	.loc	1 64 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:85:20
	setp.lt.s32 	%p10, %r7, 512;
	.loc	1 85 34                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:85:34
	setp.lt.s32 	%p11, %r178, 4096;
	.loc	1 85 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:85:26
	and.pred  	%p9, %p10, %p11;
	.loc	1 88 26                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:88:26
	shl.b32 	%r179, %r7, 12;
	.loc	1 88 21                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:88:21
	add.s32 	%r180, %r179, %r178;
	.loc	1 89 25                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:89:25
	mul.wide.s32 	%rd28, %r180, 2;
	add.s64 	%rd27, %rd9, %rd28;
	.loc	1 89 67                         // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f50;
	cvt.rn.bf16.f32 	%rs2, %f51;
	cvt.rn.bf16.f32 	%rs3, %f52;
	cvt.rn.bf16.f32 	%rs4, %f53;
	cvt.rn.bf16.f32 	%rs5, %f54;
	cvt.rn.bf16.f32 	%rs6, %f55;
	cvt.rn.bf16.f32 	%rs7, %f56;
	cvt.rn.bf16.f32 	%rs8, %f57;
	shl.b32 	%r181, %r1, 1;
	and.b32  	%r182, %r181, 6;
	shl.b32 	%r183, %r2, 3;
	or.b32  	%r184, %r182, %r183;
	and.b32  	%r185, %r9, 64;
	or.b32  	%r186, %r184, %r185;
	shl.b32 	%r187, %r3, 3;
	or.b32  	%r188, %r186, %r187;
	or.b32  	%r189, %r188, %r4;
	shl.b32 	%r190, %r5, 3;
	shl.b32 	%r191, %r6, 3;
	or.b32  	%r192, %r191, %r190;
	xor.b32  	%r193, %r192, %r189;
	and.b32  	%r194, %r9, 376;
	or.b32  	%r195, %r194, %r187;
	or.b32  	%r196, %r195, %r190;
	or.b32  	%r197, %r196, %r191;
	shr.u32 	%r198, %r193, 1;
	and.b32  	%r199, %r198, 2147483632;
	add.s32 	%r201, %r83, %r199;
	shl.b32 	%r202, %r193, 1;
	add.s32 	%r170, %r201, %r202;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r170 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r203, %r193, 256;
	shr.u32 	%r204, %r203, 1;
	and.b32  	%r205, %r204, 2147483632;
	add.s32 	%r206, %r83, %r205;
	shl.b32 	%r207, %r203, 1;
	add.s32 	%r171, %r206, %r207;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r171 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r208, %r193, 16;
	shl.b32 	%r209, %r208, 1;
	add.s32 	%r172, %r201, %r209;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r172 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r210, %r193, 272;
	shr.u32 	%r211, %r210, 1;
	and.b32  	%r212, %r211, 2147483632;
	add.s32 	%r213, %r83, %r212;
	shl.b32 	%r214, %r210, 1;
	add.s32 	%r173, %r213, %r214;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r173 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r215, %r197, 1;
	and.b32  	%r216, %r215, 1008;
	add.s32 	%r217, %r83, %r216;
	shl.b32 	%r218, %r197, 1;
	add.s32 	%r219, %r217, %r218;
	ld.shared.v4.u32 	{%r174, %r175, %r176, %r177}, [%r219];
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd27 + 0 ], { %r174, %r175, %r176, %r177 };
	// end inline asm
	.loc	1 89 4                          // c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3c/c3cgmikqfu7npjlayb6gxdspy3ccygcaqj657prxnjwpl4v2dr7g.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 99
.b8 103
.b8 109
.b8 105
.b8 107
.b8 113
.b8 102
.b8 117
.b8 55
.b8 110
.b8 112
.b8 106
.b8 108
.b8 97
.b8 121
.b8 98
.b8 54
.b8 103
.b8 120
.b8 100
.b8 115
.b8 112
.b8 121
.b8 51
.b8 99
.b8 99
.b8 121
.b8 103
.b8 99
.b8 97
.b8 113
.b8 106
.b8 54
.b8 53
.b8 55
.b8 112
.b8 114
.b8 120
.b8 110
.b8 106
.b8 119
.b8 112
.b8 108
.b8 52
.b8 118
.b8 50
.b8 100
.b8 114
.b8 55
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
