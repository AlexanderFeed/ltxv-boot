; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_add_mul_15(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !6 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %12 = shl i32 %11, 9, !dbg !10
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %14 = shl i32 %13, 1, !dbg !11
  %15 = and i32 %14, 510, !dbg !11
  %16 = or disjoint i32 %15, %12, !dbg !12
  %17 = sdiv i32 %16, 3072, !dbg !13
  %18 = mul i32 %17, 3072, !dbg !14
  %.decomposed = sub i32 %16, %18, !dbg !14
  %19 = sext i32 %16 to i64, !dbg !15
  %20 = getelementptr bfloat, ptr addrspace(1) %0, i64 %19, !dbg !15
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %20) #1, !dbg !16
  %22 = bitcast i32 %21 to <2 x bfloat>, !dbg !16
  %23 = add nsw i32 %.decomposed, 15360, !dbg !17
  %24 = zext nneg i32 %23 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !18
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %25) #1, !dbg !19
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !19
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !19
  %29 = getelementptr bfloat, ptr addrspace(1) %2, i64 %24, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %29) #1, !dbg !21
  %31 = bitcast i32 %30 to <2 x bfloat>, !dbg !21
  %32 = getelementptr i32, ptr addrspace(1) %3, i64 %19, !dbg !22
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %32) #1, !dbg !23
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !23
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !23
  %36 = sext i32 %17 to i64, !dbg !24
  %37 = getelementptr bfloat, ptr addrspace(1) %4, i64 %36, !dbg !24
  %38 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %37) #1, !dbg !25
  %39 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %37) #1, !dbg !25
  %40 = getelementptr bfloat, ptr addrspace(1) %5, i64 %36, !dbg !26
  %41 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %40) #1, !dbg !27
  %42 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %40) #1, !dbg !27
  %43 = sext i32 %.decomposed to i64, !dbg !28
  %44 = getelementptr bfloat, ptr addrspace(1) %6, i64 %43, !dbg !28
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %44) #1, !dbg !29
  %46 = bitcast i32 %45 to <2 x bfloat>, !dbg !29
  %47 = getelementptr bfloat, ptr addrspace(1) %7, i64 %43, !dbg !30
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %47) #1, !dbg !31
  %49 = bitcast i32 %48 to <2 x bfloat>, !dbg !31
  %50 = insertelement <2 x i16> poison, i16 %38, i64 0, !dbg !25
  %51 = insertelement <2 x i16> %50, i16 %39, i64 1, !dbg !25
  %52 = bitcast <2 x i16> %51 to <2 x bfloat>, !dbg !25
  %53 = fcmp oge <2 x bfloat> %52, zeroinitializer, !dbg !32
  %54 = select <2 x i1> %53, <2 x bfloat> zeroinitializer, <2 x bfloat> %52, !dbg !32
  %55 = fpext <2 x bfloat> %54 to <2 x float>, !dbg !32
  %56 = fsub <2 x float> zeroinitializer, %55, !dbg !36
  %57 = insertelement <2 x i16> poison, i16 %41, i64 0, !dbg !27
  %58 = insertelement <2 x i16> %57, i16 %42, i64 1, !dbg !27
  %59 = bitcast <2 x i16> %58 to <2 x bfloat>, !dbg !27
  %60 = fcmp ole <2 x bfloat> %59, zeroinitializer, !dbg !37
  %61 = select <2 x i1> %60, <2 x bfloat> zeroinitializer, <2 x bfloat> %59, !dbg !37
  %62 = fpext <2 x bfloat> %61 to <2 x float>, !dbg !37
  %63 = fcmp ogt <2 x float> %56, %62, !dbg !39
  %64 = fcmp uno <2 x float> %56, zeroinitializer, !dbg !41
  %65 = or <2 x i1> %64, %63, !dbg !42
  %66 = fpext <2 x bfloat> %22 to <2 x float>, !dbg !43
  %67 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !19
  %68 = insertelement <2 x i32> %67, i32 %28, i64 1, !dbg !19
  %69 = bitcast <2 x i32> %68 to <2 x float>, !dbg !19
  %70 = fpext <2 x bfloat> %31 to <2 x float>, !dbg !44
  %71 = fpext <2 x bfloat> %46 to <2 x float>, !dbg !45
  %72 = fpext <2 x bfloat> %49 to <2 x float>, !dbg !46
  %73 = fadd <2 x float> %69, %70, !dbg !47
  %74 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !48
  %75 = insertelement <2 x i32> %74, i32 %35, i64 1, !dbg !48
  %76 = sitofp <2 x i32> %75 to <2 x float>, !dbg !48
  %77 = select <2 x i1> %65, <2 x float> %56, <2 x float> %62, !dbg !49
  %78 = fmul <2 x float> %77, splat (float 0x3F80204080000000), !dbg !50
  %79 = fcmp ogt <2 x float> %78, splat (float 0x3EE4F8B580000000), !dbg !51
  %80 = fcmp uno <2 x float> %78, zeroinitializer, !dbg !53
  %81 = or <2 x i1> %79, %80, !dbg !54
  %82 = select <2 x i1> %81, <2 x float> %78, <2 x float> splat (float 0x3EE4F8B580000000), !dbg !55
  %83 = fmul <2 x float> %82, %76, !dbg !56
  %84 = fmul <2 x float> %83, %71, !dbg !57
  %85 = fadd <2 x float> %84, %72, !dbg !58
  %86 = fmul <2 x float> %73, %85, !dbg !59
  %87 = fadd <2 x float> %86, %66, !dbg !60
  %88 = fptrunc <2 x float> %87 to <2 x bfloat>, !dbg !61
  %89 = bitcast <2 x bfloat> %88 to i32, !dbg !61
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %89, ptr addrspace(1) %20) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c55h7zyiehrta7eyljrg4izdbnsxgkn7rsovw7dltvrb646zxyyv.py", directory: "/tmp/torchinductor_root/55")
!4 = !{ptr @triton_poi_fused_add_mul_15, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_15", linkageName: "triton_poi_fused_add_mul_15", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 26, column: 34, scope: !6)
!16 = !DILocation(line: 26, column: 39, scope: !6)
!17 = !DILocation(line: 27, column: 38, scope: !6)
!18 = !DILocation(line: 27, column: 30, scope: !6)
!19 = !DILocation(line: 27, column: 43, scope: !6)
!20 = !DILocation(line: 28, column: 30, scope: !6)
!21 = !DILocation(line: 28, column: 43, scope: !6)
!22 = !DILocation(line: 29, column: 30, scope: !6)
!23 = !DILocation(line: 29, column: 35, scope: !6)
!24 = !DILocation(line: 30, column: 30, scope: !6)
!25 = !DILocation(line: 30, column: 35, scope: !6)
!26 = !DILocation(line: 31, column: 31, scope: !6)
!27 = !DILocation(line: 31, column: 36, scope: !6)
!28 = !DILocation(line: 32, column: 31, scope: !6)
!29 = !DILocation(line: 32, column: 36, scope: !6)
!30 = !DILocation(line: 33, column: 31, scope: !6)
!31 = !DILocation(line: 33, column: 36, scope: !6)
!32 = !DILocation(line: 97, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !6, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 38, column: 40, scope: !6)
!36 = !DILocation(line: 39, column: 13, scope: !6)
!37 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !38)
!38 = !DILocation(line: 40, column: 42, scope: !6)
!39 = !DILocation(line: 102, column: 15, scope: !33, inlinedAt: !40)
!40 = !DILocation(line: 41, column: 42, scope: !6)
!41 = !DILocation(line: 104, column: 21, scope: !33, inlinedAt: !40)
!42 = !DILocation(line: 104, column: 16, scope: !33, inlinedAt: !40)
!43 = !DILocation(line: 26, column: 48, scope: !6)
!44 = !DILocation(line: 28, column: 82, scope: !6)
!45 = !DILocation(line: 32, column: 75, scope: !6)
!46 = !DILocation(line: 33, column: 75, scope: !6)
!47 = !DILocation(line: 35, column: 18, scope: !6)
!48 = !DILocation(line: 36, column: 19, scope: !6)
!49 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !40)
!50 = !DILocation(line: 43, column: 20, scope: !6)
!51 = !DILocation(line: 102, column: 15, scope: !33, inlinedAt: !52)
!52 = !DILocation(line: 46, column: 42, scope: !6)
!53 = !DILocation(line: 104, column: 21, scope: !33, inlinedAt: !52)
!54 = !DILocation(line: 104, column: 16, scope: !33, inlinedAt: !52)
!55 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !52)
!56 = !DILocation(line: 48, column: 19, scope: !6)
!57 = !DILocation(line: 49, column: 20, scope: !6)
!58 = !DILocation(line: 50, column: 20, scope: !6)
!59 = !DILocation(line: 51, column: 19, scope: !6)
!60 = !DILocation(line: 52, column: 19, scope: !6)
!61 = !DILocation(line: 53, column: 40, scope: !6)
!62 = !DILocation(line: 53, column: 4, scope: !6)
