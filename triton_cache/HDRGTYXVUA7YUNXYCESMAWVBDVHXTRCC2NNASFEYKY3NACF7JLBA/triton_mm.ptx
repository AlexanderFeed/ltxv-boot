//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<375>;
	.reg .b64 	%rd<39>;
	.loc	1 17 0                          // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd15, [triton_mm_param_0];
	ld.param.u64 	%rd16, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:40:24
	mov.u32 	%r64, %ctaid.x;
	.loc	1 46 22                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:46:22
	mul.hi.s32 	%r65, %r64, 715827883;
	shr.u32 	%r66, %r65, 31;
	shr.s32 	%r67, %r65, 8;
	add.s32 	%r68, %r67, %r66;
	.loc	1 47 41                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:47:41
	shl.b32 	%r69, %r68, 3;
	.loc	1 47 30                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:47:30
	sub.s32 	%r70, 57, %r69;
	.loc	1 47 50                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:47:50
	min.s32 	%r71, %r70, 8;
	.loc	1 48 40                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:48:40
	rem.s32 	%r72, %r64, %r71;
	.loc	1 48 34                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:48:34
	add.s32 	%r73, %r72, %r69;
	.loc	1 49 19                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:49:19
	mul.lo.s32 	%r74, %r68, 1536;
	sub.s32 	%r75, %r64, %r74;
	.loc	1 49 30                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:49:30
	div.s32 	%r76, %r75, %r71;
	.loc	1 51 17                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:17
	shl.b32 	%r1, %r73, 6;
	.loc	1 51 40                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	shr.u32 	%r4, %r2, 2;
	and.b32  	%r77, %r4, 8;
	and.b32  	%r78, %r4, 16;
	and.b32  	%r5, %r2, 128;
	bfe.u32 	%r79, %r2, 2, 6;
	.loc	1 51 27                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:27
	or.b32  	%r80, %r1, %r79;
	.loc	1 52 17                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:52:17
	shl.b32 	%r6, %r76, 6;
	.loc	1 52 27                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:52:27
	or.b32  	%r81, %r6, %r79;
	.loc	1 54 57                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:54:57
	mul.hi.s32 	%r82, %r80, -1851608123;
	add.s32 	%r83, %r82, %r80;
	shr.u32 	%r84, %r83, 31;
	shr.s32 	%r85, %r83, 11;
	add.s32 	%r86, %r85, %r84;
	mul.lo.s32 	%r87, %r86, 3600;
	sub.s32 	%r88, %r80, %r87;
	.loc	1 58 57                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:58:57
	mul.hi.s32 	%r89, %r81, 715827883;
	shr.u32 	%r90, %r89, 31;
	shr.u32 	%r91, %r89, 11;
	add.s32 	%r92, %r91, %r90;
	mul.lo.s32 	%r93, %r92, 12288;
	sub.s32 	%r94, %r81, %r93;
	.loc	1 66 30                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:66:30
	shl.b32 	%r7, %r2, 4;
	and.b32  	%r95, %r7, 48;
	.loc	1 71 30                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:71:30
	mul.lo.s32 	%r96, %r88, 3072;
	.loc	1 77 55                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:55
	mul.lo.s32 	%r97, %r94, 3072;
	.loc	1 71 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:71:25
	or.b32  	%r98, %r96, %r95;
	.loc	1 72 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:25
	cvt.s64.s32 	%rd17, %r98;
	add.s64 	%rd10, %rd15, %rd17;
	.loc	1 72 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:20
	shl.b32 	%r8, %r2, 1;
	and.b32  	%r99, %r8, 48;
	xor.b32  	%r100, %r99, %r95;
	shl.b32 	%r101, %r79, 6;
	or.b32  	%r102, %r100, %r101;
	mov.u32 	%r103, global_smem;
	add.s32 	%r53, %r103, %r102;
	mov.b32 	%r54, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r53 + 0 ], [ %rd10 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:50
	or.b32  	%r104, %r97, %r95;
	.loc	1 77 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:25
	cvt.s64.s32 	%rd18, %r104;
	add.s64 	%rd11, %rd16, %rd18;
	.loc	1 77 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:20
	add.s32 	%r55, %r53, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r55 + 0 ], [ %rd11 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:25
	cvt.s64.s32 	%rd19, %r96;
	cvt.u64.u32 	%rd20, %r95;
	or.b64  	%rd21, %rd19, %rd20;
	add.s64 	%rd22, %rd15, %rd21;
	add.s64 	%rd12, %rd22, 64;
	.loc	1 72 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:20
	bar.sync 	0;
	add.s32 	%r57, %r53, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r57 + 0 ], [ %rd12 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:25
	cvt.s64.s32 	%rd23, %r97;
	or.b64  	%rd24, %rd23, %rd20;
	add.s64 	%rd25, %rd16, %rd24;
	add.s64 	%rd13, %rd25, 64;
	.loc	1 77 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:20
	add.s32 	%r59, %r53, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r59 + 0 ], [ %rd13 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r105, %r2, 3;
	and.b32  	%r106, %r105, 16;
	and.b32  	%r107, %r105, 32;
	and.b32  	%r108, %r105, 48;
	and.b32  	%r109, %r2, 7;
	.loc	1 64 26                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:64:26
	and.b32  	%r110, %r2, 15;
	xor.b32  	%r111, %r108, %r3;
	shr.u32 	%r112, %r5, 3;
	or.b32  	%r113, %r112, %r110;
	shl.b32 	%r114, %r113, 6;
	or.b32  	%r11, %r114, %r111;
	or.b32  	%r115, %r106, 32;
	or.b32  	%r116, %r107, %r3;
	xor.b32  	%r117, %r116, %r115;
	or.b32  	%r12, %r117, %r114;
	or.b32  	%r118, %r114, 2048;
	or.b32  	%r13, %r118, %r111;
	or.b32  	%r14, %r117, %r118;
	xor.b32  	%r119, %r108, %r99;
	or.b32  	%r120, %r109, %r77;
	or.b32  	%r121, %r120, %r78;
	shl.b32 	%r122, %r121, 6;
	or.b32  	%r15, %r122, %r119;
	or.b32  	%r16, %r15, 2048;
	add.s64 	%rd37, %rd25, 128;
	add.s64 	%rd36, %rd22, 128;
	mov.b32 	%r359, 0;
	mov.b32 	%r358, 1;
	mov.b32 	%r357, -1;
	mov.b64 	%rd38, 0;
	mov.u32 	%r360, %r359;
	mov.u32 	%r361, %r359;
	mov.u32 	%r362, %r359;
	mov.u32 	%r363, %r359;
	mov.u32 	%r364, %r359;
	mov.u32 	%r365, %r359;
	mov.u32 	%r366, %r359;
	mov.u32 	%r367, %r359;
	mov.u32 	%r368, %r359;
	mov.u32 	%r369, %r359;
	mov.u32 	%r370, %r359;
	mov.u32 	%r371, %r359;
	mov.u32 	%r372, %r359;
	mov.u32 	%r373, %r359;
	mov.u32 	%r374, %r359;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd38, 46;
	add.s32 	%r269, %r357, 1;
	setp.lt.s32 	%p2, %r269, 2;
	selp.b32 	%r357, %r269, 0, %p2;
	.loc	1 72 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r270, %r357, 12;
	add.s32 	%r272, %r103, %r270;
	add.s32 	%r127, %r272, %r11;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r161, %r162, %r163, %r164}, [%r127];
	// end inline asm
	add.s32 	%r132, %r272, %r12;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r217, %r218, %r219, %r220}, [%r132];
	// end inline asm
	add.s32 	%r137, %r272, %r13;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r189, %r190, %r191, %r192}, [%r137];
	// end inline asm
	add.s32 	%r142, %r272, %r14;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r245, %r246, %r247, %r248}, [%r142];
	// end inline asm
	.loc	1 77 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:20
	add.s32 	%r273, %r272, 8192;
	add.s32 	%r147, %r273, %r15;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r221, %r222}, [%r147];
	// end inline asm
	add.s32 	%r152, %r273, %r16;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r179, %r180, %r235, %r236}, [%r152];
	// end inline asm
	.loc	1 78 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r359, %r360, %r361, %r362 }, { %r161, %r162, %r163, %r164 }, { %r165, %r166 }, { %r359, %r360, %r361, %r362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r363, %r364, %r365, %r366 }, { %r161, %r162, %r163, %r164 }, { %r179, %r180 }, { %r363, %r364, %r365, %r366 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r367, %r368, %r369, %r370 }, { %r189, %r190, %r191, %r192 }, { %r165, %r166 }, { %r367, %r368, %r369, %r370 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r371, %r372, %r373, %r374 }, { %r189, %r190, %r191, %r192 }, { %r179, %r180 }, { %r371, %r372, %r373, %r374 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r359, %r360, %r361, %r362 }, { %r217, %r218, %r219, %r220 }, { %r221, %r222 }, { %r359, %r360, %r361, %r362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r363, %r364, %r365, %r366 }, { %r217, %r218, %r219, %r220 }, { %r235, %r236 }, { %r363, %r364, %r365, %r366 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r367, %r368, %r369, %r370 }, { %r245, %r246, %r247, %r248 }, { %r221, %r222 }, { %r367, %r368, %r369, %r370 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r371, %r372, %r373, %r374 }, { %r245, %r246, %r247, %r248 }, { %r235, %r236 }, { %r371, %r372, %r373, %r374 };
	// end inline asm
	.loc	1 64 26                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:64:26
	add.s32 	%r274, %r358, 1;
	setp.lt.s32 	%p3, %r274, 2;
	selp.b32 	%r358, %r274, 0, %p3;
	.loc	1 72 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:72:20
	shl.b32 	%r275, %r358, 12;
	bar.sync 	0;
	add.s32 	%r265, %r53, %r275;
	selp.b32 	%r266, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r265 + 0 ], [ %rd36 + 0 ], 0x10, %r266;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:77:20
	add.s32 	%r267, %r55, %r275;
	// begin inline asm
	cp.async.cg.shared.global [ %r267 + 0 ], [ %rd37 + 0 ], 0x10, %r266;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:64:26
	add.s64 	%rd38, %rd38, 1;
	add.s64 	%rd37, %rd37, 64;
	add.s64 	%rd36, %rd36, 64;
	setp.ne.s64 	%p4, %rd38, 48;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:40
	shl.b32 	%r316, %r2, 2;
	and.b32  	%r317, %r316, 60;
	.loc	1 52 27                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:52:27
	or.b32  	%r318, %r6, %r317;
	.loc	1 51 40                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:40
	bfe.u32 	%r319, %r2, 4, 4;
	.loc	1 51 27                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:51:27
	or.b32  	%r320, %r319, %r1;
	or.b32  	%r321, %r320, 48;
	or.b32  	%r322, %r320, 32;
	or.b32  	%r323, %r320, 16;
	.loc	1 64 26                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:85:20
	setp.lt.s32 	%p17, %r320, 3600;
	setp.lt.s32 	%p18, %r323, 3600;
	setp.lt.s32 	%p19, %r322, 3600;
	setp.lt.s32 	%p20, %r321, 3600;
	.loc	1 85 34                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:85:34
	setp.lt.s32 	%p21, %r318, 12288;
	.loc	1 85 26                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:85:26
	and.pred  	%p13, %p17, %p21;
	and.pred  	%p14, %p18, %p21;
	and.pred  	%p15, %p19, %p21;
	and.pred  	%p16, %p20, %p21;
	.loc	1 88 27                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:88:27
	mad.lo.s32 	%r324, %r320, 12288, %r318;
	add.s32 	%r325, %r324, 196608;
	add.s32 	%r326, %r324, 393216;
	.loc	1 88 21                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:88:21
	add.s32 	%r327, %r324, 589824;
	.loc	1 89 25                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:89:25
	mul.wide.s32 	%rd32, %r324, 4;
	add.s64 	%rd28, %rd9, %rd32;
	mul.wide.s32 	%rd33, %r325, 4;
	add.s64 	%rd29, %rd9, %rd33;
	mul.wide.s32 	%rd34, %r326, 4;
	add.s64 	%rd30, %rd9, %rd34;
	mul.wide.s32 	%rd35, %r327, 4;
	add.s64 	%rd31, %rd9, %rd35;
	.loc	1 89 67                         // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:89:67
	and.b32  	%r328, %r8, 6;
	and.b32  	%r329, %r7, 192;
	or.b32  	%r330, %r329, %r328;
	shl.b32 	%r331, %r3, 4;
	or.b32  	%r332, %r330, %r331;
	shl.b32 	%r333, %r5, 3;
	or.b32  	%r334, %r332, %r333;
	and.b32  	%r335, %r4, 24;
	or.b32  	%r336, %r335, %r334;
	and.b32  	%r337, %r316, 1020;
	shr.u32 	%r338, %r334, 2;
	and.b32  	%r339, %r338, 508;
	add.s32 	%r341, %r103, %r339;
	shl.b32 	%r342, %r336, 2;
	add.s32 	%r276, %r341, %r342;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r276 + 0 ], { %r359, %r360 };
	// end inline asm
	or.b32  	%r343, %r334, 512;
	shr.u32 	%r344, %r343, 2;
	and.b32  	%r345, %r344, 496;
	add.s32 	%r346, %r103, %r345;
	add.s32 	%r347, %r346, %r342;
	add.s32 	%r279, %r347, 2048;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r279 + 0 ], { %r361, %r362 };
	// end inline asm
	add.s32 	%r282, %r276, 128;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r282 + 0 ], { %r363, %r364 };
	// end inline asm
	add.s32 	%r285, %r347, 2176;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r285 + 0 ], { %r365, %r366 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r348, %r2, 240;
	add.s32 	%r349, %r103, %r348;
	shl.b32 	%r350, %r337, 2;
	add.s32 	%r351, %r349, %r350;
	ld.shared.v4.u32 	{%r300, %r301, %r302, %r303}, [%r351];
	or.b32  	%r352, %r337, 1024;
	shr.u32 	%r353, %r352, 2;
	and.b32  	%r354, %r353, 496;
	add.s32 	%r355, %r103, %r354;
	add.s32 	%r356, %r355, %r350;
	ld.shared.v4.u32 	{%r304, %r305, %r306, %r307}, [%r356+4096];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r276 + 0 ], { %r367, %r368 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r279 + 0 ], { %r369, %r370 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r282 + 0 ], { %r371, %r372 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r285 + 0 ], { %r373, %r374 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r308, %r309, %r310, %r311}, [%r351];
	ld.shared.v4.u32 	{%r312, %r313, %r314, %r315}, [%r356+4096];
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd28 + 0 ], { %r300, %r301, %r302, %r303 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd29 + 0 ], { %r304, %r305, %r306, %r307 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd30 + 0 ], { %r308, %r309, %r310, %r311 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd31 + 0 ], { %r312, %r313, %r314, %r315 };
	// end inline asm
	.loc	1 89 4                          // cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/of/cofxeuapxi7yhsz5jacucunj5kxawgbqkn66d7qu3cwkbae3zu77.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 102
.b8 120
.b8 101
.b8 117
.b8 97
.b8 112
.b8 120
.b8 105
.b8 55
.b8 121
.b8 104
.b8 115
.b8 122
.b8 53
.b8 106
.b8 97
.b8 99
.b8 117
.b8 99
.b8 117
.b8 110
.b8 106
.b8 53
.b8 107
.b8 120
.b8 97
.b8 119
.b8 103
.b8 98
.b8 113
.b8 107
.b8 110
.b8 54
.b8 54
.b8 100
.b8 55
.b8 113
.b8 117
.b8 51
.b8 99
.b8 119
.b8 107
.b8 98
.b8 97
.b8 101
.b8 51
.b8 122
.b8 117
.b8 55
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 111
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
