//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 105, 120, 47, 99, 105, 120, 101, 111, 101, 100, 113, 105, 102, 100, 106, 50, 101, 120, 103, 99, 121, 102, 118, 107, 117, 106, 54, 98, 52, 109, 113, 108, 108, 53, 97, 108, 52, 106, 109, 99, 99, 99, 102, 109, 106, 53, 110, 50, 104, 106, 98, 110, 116, 55, 122, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<50>;
	.reg .b16 	%rs<101>;
	.reg .b32 	%r<122>;
	.reg .f32 	%f<196>;
	.reg .b64 	%rd<92>;
	.loc	1 18 0                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:18:0

// %bb.0:
	ld.param.u64 	%rd42, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:23:33
	shl.b32 	%r11, %r1, 3;
	.loc	1 24 44                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r4, %r2, 6, 3;
	.loc	1 24 23                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:24:23
	or.b32  	%r5, %r4, %r11;
	.loc	1 25 21                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:25:21
	setp.lt.s32 	%p8, %r5, 512;
	setp.lt.s32 	%p9, %r11, 512;
	.loc	1 29 30                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:29:30
	mul.wide.s32 	%rd43, %r5, 8;
	add.s64 	%rd15, %rd42, %rd43;
	mul.wide.s32 	%rd44, %r11, 8;
	add.s64 	%rd32, %rd42, %rd44;
	add.s64 	%rd35, %rd32, 16;
	add.s64 	%rd38, %rd32, 32;
	add.s64 	%rd41, %rd32, 48;
	.loc	1 29 35                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:29:35
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd30, 0x0;
	mov.u64 %rd31, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b64 { %rd30, %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	mov.u64 %rd34, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b64 { %rd33, %rd34 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	mov.u64 %rd37, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b64 { %rd36, %rd37 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	mov.u64 %rd40, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b64 { %rd39, %rd40 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 38 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:38:22
	add.s64 	%rd45, %rd33, 32128;
	add.s64 	%rd46, %rd34, 32128;
	add.s64 	%rd47, %rd30, 32128;
	add.s64 	%rd48, %rd31, 32128;
	add.s64 	%rd49, %rd39, 32128;
	add.s64 	%rd50, %rd40, 32128;
	add.s64 	%rd51, %rd36, 32128;
	add.s64 	%rd52, %rd37, 32128;
	.loc	1 39 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:39:22
	setp.lt.s64 	%p14, %rd33, 0;
	setp.lt.s64 	%p15, %rd34, 0;
	setp.lt.s64 	%p16, %rd30, 0;
	setp.lt.s64 	%p17, %rd31, 0;
	setp.lt.s64 	%p18, %rd39, 0;
	setp.lt.s64 	%p19, %rd40, 0;
	setp.lt.s64 	%p20, %rd36, 0;
	setp.lt.s64 	%p21, %rd37, 0;
	.loc	1 40 36                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:40:36
	selp.b64 	%rd53, %rd52, %rd37, %p21;
	selp.b64 	%rd54, %rd51, %rd36, %p20;
	selp.b64 	%rd55, %rd50, %rd40, %p19;
	selp.b64 	%rd56, %rd49, %rd39, %p18;
	selp.b64 	%rd57, %rd48, %rd31, %p17;
	selp.b64 	%rd58, %rd47, %rd30, %p16;
	selp.b64 	%rd59, %rd46, %rd34, %p15;
	selp.b64 	%rd60, %rd45, %rd33, %p14;
	setp.gt.u64 	%p22, %rd60, 32127;
	selp.u16 	%rs1, 1, 0, %p22;
	shl.b16 	%rs2, %rs1, 2;
	setp.gt.u64 	%p23, %rd59, 32127;
	selp.u16 	%rs3, -1, 0, %p23;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.gt.u64 	%p24, %rd58, 32127;
	selp.u16 	%rs6, 1, 0, %p24;
	setp.gt.u64 	%p25, %rd57, 32127;
	selp.u16 	%rs7, -1, 0, %p25;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	setp.gt.u64 	%p26, %rd56, 32127;
	selp.u16 	%rs13, 1, 0, %p26;
	shl.b16 	%rs14, %rs13, 2;
	setp.gt.u64 	%p27, %rd55, 32127;
	selp.u16 	%rs15, -1, 0, %p27;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	setp.gt.u64 	%p28, %rd54, 32127;
	selp.u16 	%rs18, 1, 0, %p28;
	setp.gt.u64 	%p29, %rd53, 32127;
	selp.u16 	%rs19, -1, 0, %p29;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	shl.b16 	%rs24, %rs23, 4;
	or.b16  	%rs25, %rs12, %rs24;
	and.b16  	%rs26, %rs25, 255;
	setp.ne.s16 	%p30, %rs26, 0;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	and.pred  	%p31, %p30, %p9;
	@%p31 bra 	$L__BB0_4;
// %bb.1:                               // %.split
	.loc	1 0 68                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:0:68
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	shr.u32 	%r3, %r2, 5;
	and.b32  	%r6, %r2, 31;
	shl.b32 	%r12, %r2, 3;
	and.b32  	%r7, %r12, 504;
	and.b32  	%r8, %r2, 511;
	setp.lt.s64 	%p13, %rd28, 0;
	shl.b64 	%rd61, %rd28, 12;
	add.s64 	%rd62, %rd61, 131596288;
	selp.b64 	%rd1, %rd62, %rd61, %p13;
	.loc	1 31 40                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:31:40
	cvt.u64.u32 	%rd72, %r7;
	or.b64  	%rd2, %rd1, %rd72;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	shl.b64 	%rd73, %rd2, 1;
	add.s64 	%rd63, %rd11, %rd73;
	mov.b32 	%r76, 0;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r13, %r76;
	mov.u32 %r14, %r76;
	mov.u32 %r15, %r76;
	mov.u32 %r16, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd63 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs27, %rs28}, %r16;
	cvt.f32.bf16 	%f3, %rs28;
	cvt.f32.bf16 	%f4, %rs27;
	mov.b32 	{%rs29, %rs30}, %r15;
	cvt.f32.bf16 	%f5, %rs30;
	cvt.f32.bf16 	%f6, %rs29;
	mov.b32 	{%rs31, %rs32}, %r14;
	cvt.f32.bf16 	%f7, %rs32;
	cvt.f32.bf16 	%f8, %rs31;
	mov.b32 	{%rs33, %rs34}, %r13;
	cvt.f32.bf16 	%f9, %rs34;
	cvt.f32.bf16 	%f10, %rs33;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd64, %rd63, 1024;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r21, %r76;
	mov.u32 %r22, %r76;
	mov.u32 %r23, %r76;
	mov.u32 %r24, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd64 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs35, %rs36}, %r21;
	cvt.f32.bf16 	%f11, %rs35;
	cvt.f32.bf16 	%f12, %rs36;
	mov.b32 	{%rs37, %rs38}, %r22;
	cvt.f32.bf16 	%f13, %rs37;
	cvt.f32.bf16 	%f14, %rs38;
	mov.b32 	{%rs39, %rs40}, %r23;
	cvt.f32.bf16 	%f15, %rs39;
	cvt.f32.bf16 	%f16, %rs40;
	mov.b32 	{%rs41, %rs42}, %r24;
	cvt.f32.bf16 	%f17, %rs41;
	cvt.f32.bf16 	%f18, %rs42;
	.loc	1 44 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:44:22
	mul.f32 	%f19, %f18, %f18;
	mul.f32 	%f20, %f17, %f17;
	mul.f32 	%f21, %f16, %f16;
	mul.f32 	%f22, %f15, %f15;
	mul.f32 	%f23, %f14, %f14;
	mul.f32 	%f24, %f13, %f13;
	mul.f32 	%f25, %f12, %f12;
	mul.f32 	%f26, %f11, %f11;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f27, %f10, %f10, %f26;
	fma.rn.f32 	%f28, %f9, %f9, %f25;
	fma.rn.f32 	%f29, %f8, %f8, %f24;
	fma.rn.f32 	%f30, %f7, %f7, %f23;
	fma.rn.f32 	%f31, %f6, %f6, %f22;
	fma.rn.f32 	%f32, %f5, %f5, %f21;
	fma.rn.f32 	%f33, %f4, %f4, %f20;
	fma.rn.f32 	%f34, %f3, %f3, %f19;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd65, %rd63, 2048;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r29, %r76;
	mov.u32 %r30, %r76;
	mov.u32 %r31, %r76;
	mov.u32 %r32, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd65 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs43, %rs44}, %r29;
	cvt.f32.bf16 	%f35, %rs43;
	cvt.f32.bf16 	%f36, %rs44;
	mov.b32 	{%rs45, %rs46}, %r30;
	cvt.f32.bf16 	%f37, %rs45;
	cvt.f32.bf16 	%f38, %rs46;
	mov.b32 	{%rs47, %rs48}, %r31;
	cvt.f32.bf16 	%f39, %rs47;
	cvt.f32.bf16 	%f40, %rs48;
	mov.b32 	{%rs49, %rs50}, %r32;
	cvt.f32.bf16 	%f41, %rs49;
	cvt.f32.bf16 	%f42, %rs50;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f43, %f42, %f42, %f34;
	fma.rn.f32 	%f44, %f41, %f41, %f33;
	fma.rn.f32 	%f45, %f40, %f40, %f32;
	fma.rn.f32 	%f46, %f39, %f39, %f31;
	fma.rn.f32 	%f47, %f38, %f38, %f30;
	fma.rn.f32 	%f48, %f37, %f37, %f29;
	fma.rn.f32 	%f49, %f36, %f36, %f28;
	fma.rn.f32 	%f50, %f35, %f35, %f27;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd66, %rd63, 3072;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r37, %r76;
	mov.u32 %r38, %r76;
	mov.u32 %r39, %r76;
	mov.u32 %r40, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r37, %r38, %r39, %r40 }, [ %rd66 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs51, %rs52}, %r40;
	cvt.f32.bf16 	%f51, %rs52;
	cvt.f32.bf16 	%f52, %rs51;
	mov.b32 	{%rs53, %rs54}, %r39;
	cvt.f32.bf16 	%f53, %rs54;
	cvt.f32.bf16 	%f54, %rs53;
	mov.b32 	{%rs55, %rs56}, %r38;
	cvt.f32.bf16 	%f55, %rs56;
	cvt.f32.bf16 	%f56, %rs55;
	mov.b32 	{%rs57, %rs58}, %r37;
	cvt.f32.bf16 	%f57, %rs58;
	cvt.f32.bf16 	%f58, %rs57;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f59, %f58, %f58, %f50;
	fma.rn.f32 	%f60, %f57, %f57, %f49;
	fma.rn.f32 	%f61, %f56, %f56, %f48;
	fma.rn.f32 	%f62, %f55, %f55, %f47;
	fma.rn.f32 	%f63, %f54, %f54, %f46;
	fma.rn.f32 	%f64, %f53, %f53, %f45;
	fma.rn.f32 	%f65, %f52, %f52, %f44;
	fma.rn.f32 	%f66, %f51, %f51, %f43;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd67, %rd63, 4096;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r45, %r76;
	mov.u32 %r46, %r76;
	mov.u32 %r47, %r76;
	mov.u32 %r48, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r45, %r46, %r47, %r48 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs59, %rs60}, %r45;
	cvt.f32.bf16 	%f67, %rs59;
	cvt.f32.bf16 	%f68, %rs60;
	mov.b32 	{%rs61, %rs62}, %r46;
	cvt.f32.bf16 	%f69, %rs61;
	cvt.f32.bf16 	%f70, %rs62;
	mov.b32 	{%rs63, %rs64}, %r47;
	cvt.f32.bf16 	%f71, %rs63;
	cvt.f32.bf16 	%f72, %rs64;
	mov.b32 	{%rs65, %rs66}, %r48;
	cvt.f32.bf16 	%f73, %rs65;
	cvt.f32.bf16 	%f74, %rs66;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f75, %f74, %f74, %f66;
	fma.rn.f32 	%f76, %f73, %f73, %f65;
	fma.rn.f32 	%f77, %f72, %f72, %f64;
	fma.rn.f32 	%f78, %f71, %f71, %f63;
	fma.rn.f32 	%f79, %f70, %f70, %f62;
	fma.rn.f32 	%f80, %f69, %f69, %f61;
	fma.rn.f32 	%f81, %f68, %f68, %f60;
	fma.rn.f32 	%f82, %f67, %f67, %f59;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd68, %rd63, 5120;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r53, %r76;
	mov.u32 %r54, %r76;
	mov.u32 %r55, %r76;
	mov.u32 %r56, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r53, %r54, %r55, %r56 }, [ %rd68 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs67, %rs68}, %r56;
	cvt.f32.bf16 	%f83, %rs68;
	cvt.f32.bf16 	%f84, %rs67;
	mov.b32 	{%rs69, %rs70}, %r55;
	cvt.f32.bf16 	%f85, %rs70;
	cvt.f32.bf16 	%f86, %rs69;
	mov.b32 	{%rs71, %rs72}, %r54;
	cvt.f32.bf16 	%f87, %rs72;
	cvt.f32.bf16 	%f88, %rs71;
	mov.b32 	{%rs73, %rs74}, %r53;
	cvt.f32.bf16 	%f89, %rs74;
	cvt.f32.bf16 	%f90, %rs73;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f91, %f90, %f90, %f82;
	fma.rn.f32 	%f92, %f89, %f89, %f81;
	fma.rn.f32 	%f93, %f88, %f88, %f80;
	fma.rn.f32 	%f94, %f87, %f87, %f79;
	fma.rn.f32 	%f95, %f86, %f86, %f78;
	fma.rn.f32 	%f96, %f85, %f85, %f77;
	fma.rn.f32 	%f97, %f84, %f84, %f76;
	fma.rn.f32 	%f98, %f83, %f83, %f75;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd69, %rd63, 6144;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r61, %r76;
	mov.u32 %r62, %r76;
	mov.u32 %r63, %r76;
	mov.u32 %r64, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r61, %r62, %r63, %r64 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs75, %rs76}, %r61;
	cvt.f32.bf16 	%f99, %rs75;
	cvt.f32.bf16 	%f100, %rs76;
	mov.b32 	{%rs77, %rs78}, %r62;
	cvt.f32.bf16 	%f101, %rs77;
	cvt.f32.bf16 	%f102, %rs78;
	mov.b32 	{%rs79, %rs80}, %r63;
	cvt.f32.bf16 	%f103, %rs79;
	cvt.f32.bf16 	%f104, %rs80;
	mov.b32 	{%rs81, %rs82}, %r64;
	cvt.f32.bf16 	%f105, %rs81;
	cvt.f32.bf16 	%f106, %rs82;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f107, %f106, %f106, %f98;
	fma.rn.f32 	%f108, %f105, %f105, %f97;
	fma.rn.f32 	%f109, %f104, %f104, %f96;
	fma.rn.f32 	%f110, %f103, %f103, %f95;
	fma.rn.f32 	%f111, %f102, %f102, %f94;
	fma.rn.f32 	%f112, %f101, %f101, %f93;
	fma.rn.f32 	%f113, %f100, %f100, %f92;
	fma.rn.f32 	%f114, %f99, %f99, %f91;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd70, %rd63, 7168;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r69, %r76;
	mov.u32 %r70, %r76;
	mov.u32 %r71, %r76;
	mov.u32 %r72, %r76;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r69, %r70, %r71, %r72 }, [ %rd70 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs83, %rs84}, %r72;
	cvt.f32.bf16 	%f115, %rs84;
	cvt.f32.bf16 	%f116, %rs83;
	mov.b32 	{%rs85, %rs86}, %r71;
	cvt.f32.bf16 	%f117, %rs86;
	cvt.f32.bf16 	%f118, %rs85;
	mov.b32 	{%rs87, %rs88}, %r70;
	cvt.f32.bf16 	%f119, %rs88;
	cvt.f32.bf16 	%f120, %rs87;
	mov.b32 	{%rs89, %rs90}, %r69;
	cvt.f32.bf16 	%f121, %rs90;
	cvt.f32.bf16 	%f122, %rs89;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f123, %f122, %f122, %f114;
	fma.rn.f32 	%f124, %f121, %f121, %f113;
	fma.rn.f32 	%f125, %f120, %f120, %f112;
	fma.rn.f32 	%f126, %f119, %f119, %f111;
	fma.rn.f32 	%f127, %f118, %f118, %f110;
	fma.rn.f32 	%f128, %f117, %f117, %f109;
	fma.rn.f32 	%f129, %f116, %f116, %f108;
	fma.rn.f32 	%f130, %f115, %f115, %f107;
	.loc	1 47 50                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:47:50
	selp.f32 	%f131, %f130, 0f00000000, %p8;
	selp.f32 	%f132, %f129, 0f00000000, %p8;
	selp.f32 	%f133, %f128, 0f00000000, %p8;
	selp.f32 	%f134, %f127, 0f00000000, %p8;
	selp.f32 	%f135, %f126, 0f00000000, %p8;
	selp.f32 	%f136, %f125, 0f00000000, %p8;
	selp.f32 	%f137, %f124, 0f00000000, %p8;
	selp.f32 	%f138, %f123, 0f00000000, %p8;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f138, %f137;
	add.f32 	%f140, %f136, %f139;
	add.f32 	%f141, %f135, %f140;
	add.f32 	%f142, %f134, %f141;
	add.f32 	%f143, %f133, %f142;
	add.f32 	%f144, %f132, %f143;
	add.f32 	%f145, %f131, %f144;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f145;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f146, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f147, %f145, %f146;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r85, %f147;
	shfl.sync.bfly.b32	%r86, %r85, 8, 31, -1;
	mov.b32 	%f148, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f149, %f147, %f148;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r87, %f149;
	shfl.sync.bfly.b32	%r88, %r87, 4, 31, -1;
	mov.b32 	%f150, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f151, %f149, %f150;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f151;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	mov.b32 	%f152, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f153, %f151, %f152;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f153;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f154, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f155, %f153, %f154;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r93, %r3, 1;
	setp.eq.s32 	%p40, %r6, 0;
	shl.b32 	%r94, %r93, 2;
	shl.b32 	%r95, %r4, 3;
	or.b32  	%r96, %r95, %r94;
	mov.u32 	%r97, global_smem;
	add.s32 	%r77, %r97, %r96;
	mov.b32 	%r78, %f155;
	// begin inline asm
	@%p40 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p41, %r2, 16;
	shl.b32 	%r98, %r2, 2;
	add.s32 	%r80, %r97, %r98;
	// begin inline asm
	@%p41 ld.shared.b32 %r79, [ %r80 + 0 ];
	// end inline asm
	mov.b32 	%f156, %r79;
	shfl.sync.bfly.b32	%r99, %r79, 1, 31, -1;
	mov.b32 	%f157, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r100, %r2, 1;
	setp.eq.b32 	%p43, %r100, 1;
	not.pred 	%p44, %p43;
	and.pred  	%p42, %p41, %p44;
	mov.b32 	%r82, %f158;
	// begin inline asm
	@%p42 st.shared.b32 [ %r80 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r101, %r97, %r95;
	ld.shared.f32 	%f159, [%r101];
	mov.f32 	%f160, 0f45800000;
$L__tmp2:
	.loc	1 64 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:64:25
	div.full.f32 	%f161, %f159, %f160;
	.loc	1 66 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:66:24
	add.f32 	%f162, %f161, 0f358637BD;
	.loc	1 67 32                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:67:32
	rsqrt.approx.ftz.f32 	%f1, %f162;
	shl.b32 	%r102, %r8, 2;
	add.s32 	%r116, %r97, %r102;
	shl.b32 	%r103, %r7, 2;
	add.s32 	%r10, %r97, %r103;
	.loc	1 49 40                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:49:40
	and.b32  	%r104, %r2, 63;
	mul.wide.u32 	%rd74, %r104, 16;
	shl.b32 	%r105, %r1, 15;
	shl.b32 	%r106, %r4, 12;
	or.b32  	%r107, %r105, %r106;
	mul.wide.s32 	%rd75, %r107, 2;
	or.b64  	%rd76, %rd74, %rd75;
	add.s64 	%rd90, %rd13, %rd76;
	mul.wide.u32 	%rd77, %r8, 2;
	add.s64 	%rd89, %rd12, %rd77;
	mov.b64 	%rd91, -512;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 50 31                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:50:31
	add.s64 	%rd91, %rd91, 512;
	mov.b16 	%rs92, 0;
	mov.pred 	%p45, -1;
	.loc	1 55 42                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:42
	// begin inline asm
	mov.u16 %rs91, %rs92;
	@%p45 ld.global.L1::evict_last.b16 { %rs91 }, [ %rd89 + 0 ];
	// end inline asm
	.loc	1 55 95                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:95
	cvt.f32.bf16 	%f163, %rs91;
	.loc	1 60 70                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:60:70
	bar.sync 	0;
	or.b64  	%rd81, %rd91, %rd2;
	.loc	1 61 35                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:35
	shl.b64 	%rd82, %rd81, 1;
	add.s64 	%rd79, %rd11, %rd82;
	.loc	1 61 55                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:55
	// begin inline asm
	mov.u32 %r108, %r76;
	mov.u32 %r109, %r76;
	mov.u32 %r110, %r76;
	mov.u32 %r111, %r76;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r108, %r109, %r110, %r111 }, [ %rd79 + 0 ];
	// end inline asm
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	bar.sync 	0;
	mov.b32 	%r117, %f163;
	// begin inline asm
	@%p45 st.shared.b32 [ %r116 + 0 ], %r117;
	// end inline asm
	bar.sync 	0;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs93, %rs94}, %r108;
	cvt.f32.bf16 	%f164, %rs93;
	cvt.f32.bf16 	%f165, %rs94;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f166, %f1, %f165;
	mul.f32 	%f167, %f1, %f164;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	ld.shared.v4.f32 	{%f168, %f169, %f170, %f171}, [%r10];
	mul.f32 	%f172, %f168, %f167;
	mul.f32 	%f173, %f169, %f166;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r118, %f173, %f172;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs95, %rs96}, %r109;
	cvt.f32.bf16 	%f174, %rs95;
	cvt.f32.bf16 	%f175, %rs96;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f176, %f1, %f175;
	mul.f32 	%f177, %f1, %f174;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f178, %f170, %f177;
	mul.f32 	%f179, %f171, %f176;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r119, %f179, %f178;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs97, %rs98}, %r110;
	cvt.f32.bf16 	%f180, %rs97;
	cvt.f32.bf16 	%f181, %rs98;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f182, %f1, %f181;
	mul.f32 	%f183, %f1, %f180;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	ld.shared.v4.f32 	{%f184, %f185, %f186, %f187}, [%r10+16];
	mul.f32 	%f188, %f183, %f184;
	mul.f32 	%f189, %f182, %f185;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r120, %f189, %f188;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs99, %rs100}, %r111;
	cvt.f32.bf16 	%f190, %rs99;
	cvt.f32.bf16 	%f191, %rs100;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f192, %f1, %f191;
	mul.f32 	%f193, %f1, %f190;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f194, %f193, %f186;
	mul.f32 	%f195, %f192, %f187;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r121, %f195, %f194;
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd90 + 0 ], { %r118, %r119, %r120, %r121 };
	// end inline asm
	.loc	1 49 40                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:49:40
	add.s64 	%rd90, %rd90, 1024;
	add.s64 	%rd89, %rd89, 1024;
	setp.lt.u64 	%p49, %rd91, 3584;
	@%p49 bra 	$L__BB0_2;
// %bb.3:
	.loc	1 49 4                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:49:4
	ret;
$L__BB0_4:
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	mov.u64 	%rd83, assertMessage_0;
	cvta.global.u64 	%rd84, %rd83;
	mov.u64 	%rd85, assertFile_0;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, assertFunc_0;
	cvta.global.u64 	%rd88, %rd87;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd84;
	.param .b64 param1;
	st.param.b64 	[param1], %rd86;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd88;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/ix/cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 120
.b8 101
.b8 111
.b8 101
.b8 100
.b8 113
.b8 105
.b8 102
.b8 100
.b8 106
.b8 50
.b8 101
.b8 120
.b8 103
.b8 99
.b8 121
.b8 102
.b8 118
.b8 107
.b8 117
.b8 106
.b8 54
.b8 98
.b8 52
.b8 109
.b8 113
.b8 108
.b8 108
.b8 53
.b8 97
.b8 108
.b8 52
.b8 106
.b8 109
.b8 99
.b8 99
.b8 99
.b8 102
.b8 109
.b8 106
.b8 53
.b8 110
.b8 50
.b8 104
.b8 106
.b8 98
.b8 110
.b8 116
.b8 55
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 105
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
