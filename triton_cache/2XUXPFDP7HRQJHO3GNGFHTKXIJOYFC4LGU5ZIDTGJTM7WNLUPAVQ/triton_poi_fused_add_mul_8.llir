; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_add_mul_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9, ptr addrspace(1) readnone captures(none) %10) local_unnamed_addr !dbg !6 {
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %13 = shl i32 %12, 8, !dbg !10
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %15 = shl i32 %14, 1, !dbg !11
  %16 = and i32 %15, 254, !dbg !11
  %17 = or disjoint i32 %16, %13, !dbg !12
  %18 = sdiv i32 %17, 3072, !dbg !13
  %19 = mul i32 %18, 3072, !dbg !14
  %.decomposed = sub i32 %17, %19, !dbg !14
  %20 = sext i32 %17 to i64, !dbg !15
  %21 = getelementptr bfloat, ptr addrspace(1) %0, i64 %20, !dbg !15
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %21) #1, !dbg !16
  %23 = bitcast i32 %22 to <2 x bfloat>, !dbg !16
  %24 = add nsw i32 %.decomposed, 6144, !dbg !17
  %25 = zext nneg i32 %24 to i64, !dbg !18
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !18
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %26) #1, !dbg !19
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !19
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !19
  %30 = getelementptr bfloat, ptr addrspace(1) %2, i64 %25, !dbg !20
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %30) #1, !dbg !21
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !21
  %33 = getelementptr i32, ptr addrspace(1) %3, i64 %20, !dbg !22
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %33) #1, !dbg !23
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !23
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !23
  %37 = sext i32 %18 to i64, !dbg !24
  %38 = getelementptr bfloat, ptr addrspace(1) %4, i64 %37, !dbg !24
  %39 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %38) #1, !dbg !25
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %38) #1, !dbg !25
  %41 = getelementptr bfloat, ptr addrspace(1) %5, i64 %37, !dbg !26
  %42 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %41) #1, !dbg !27
  %43 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %41) #1, !dbg !27
  %44 = sext i32 %.decomposed to i64, !dbg !28
  %45 = getelementptr bfloat, ptr addrspace(1) %6, i64 %44, !dbg !28
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %45) #1, !dbg !29
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !29
  %48 = getelementptr bfloat, ptr addrspace(1) %7, i64 %44, !dbg !30
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #1, !dbg !31
  %50 = bitcast i32 %49 to <2 x bfloat>, !dbg !31
  %51 = insertelement <2 x i16> poison, i16 %39, i64 0, !dbg !25
  %52 = insertelement <2 x i16> %51, i16 %40, i64 1, !dbg !25
  %53 = bitcast <2 x i16> %52 to <2 x bfloat>, !dbg !25
  %54 = fcmp oge <2 x bfloat> %53, zeroinitializer, !dbg !32
  %55 = select <2 x i1> %54, <2 x bfloat> zeroinitializer, <2 x bfloat> %53, !dbg !32
  %56 = fpext <2 x bfloat> %55 to <2 x float>, !dbg !32
  %57 = fsub <2 x float> zeroinitializer, %56, !dbg !36
  %58 = insertelement <2 x i16> poison, i16 %42, i64 0, !dbg !27
  %59 = insertelement <2 x i16> %58, i16 %43, i64 1, !dbg !27
  %60 = bitcast <2 x i16> %59 to <2 x bfloat>, !dbg !27
  %61 = fcmp ole <2 x bfloat> %60, zeroinitializer, !dbg !37
  %62 = select <2 x i1> %61, <2 x bfloat> zeroinitializer, <2 x bfloat> %60, !dbg !37
  %63 = fpext <2 x bfloat> %62 to <2 x float>, !dbg !37
  %64 = fcmp ogt <2 x float> %57, %63, !dbg !39
  %65 = fcmp uno <2 x float> %57, zeroinitializer, !dbg !41
  %66 = or <2 x i1> %65, %64, !dbg !42
  %67 = getelementptr bfloat, ptr addrspace(1) %8, i64 %20, !dbg !43
  %68 = fpext <2 x bfloat> %23 to <2 x float>, !dbg !44
  %69 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !19
  %70 = insertelement <2 x i32> %69, i32 %29, i64 1, !dbg !19
  %71 = bitcast <2 x i32> %70 to <2 x float>, !dbg !19
  %72 = fpext <2 x bfloat> %32 to <2 x float>, !dbg !45
  %73 = fpext <2 x bfloat> %47 to <2 x float>, !dbg !46
  %74 = fpext <2 x bfloat> %50 to <2 x float>, !dbg !47
  %75 = fadd <2 x float> %71, %72, !dbg !48
  %76 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !49
  %77 = insertelement <2 x i32> %76, i32 %36, i64 1, !dbg !49
  %78 = sitofp <2 x i32> %77 to <2 x float>, !dbg !49
  %79 = select <2 x i1> %66, <2 x float> %57, <2 x float> %63, !dbg !50
  %80 = fmul <2 x float> %79, splat (float 0x3F80204080000000), !dbg !51
  %81 = fcmp ogt <2 x float> %80, splat (float 0x3EE4F8B580000000), !dbg !52
  %82 = fcmp uno <2 x float> %80, zeroinitializer, !dbg !54
  %83 = or <2 x i1> %81, %82, !dbg !55
  %84 = select <2 x i1> %83, <2 x float> %80, <2 x float> splat (float 0x3EE4F8B580000000), !dbg !56
  %85 = fmul <2 x float> %84, %78, !dbg !57
  %86 = fmul <2 x float> %85, %73, !dbg !58
  %87 = fadd <2 x float> %86, %74, !dbg !59
  %88 = fmul <2 x float> %75, %87, !dbg !60
  %89 = fadd <2 x float> %88, %68, !dbg !61
  %90 = fptrunc <2 x float> %89 to <2 x bfloat>, !dbg !62
  %91 = bitcast <2 x bfloat> %90 to i32, !dbg !62
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %91, ptr addrspace(1) %67) #1, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coft6etgdmynfaqussjtgb2syirr6socgrnf6nwttu2qjxtk7gao.py", directory: "/tmp/torchinductor_root/of")
!4 = !{ptr @triton_poi_fused_add_mul_8, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_8", linkageName: "triton_poi_fused_add_mul_8", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 26, column: 30, scope: !6)
!16 = !DILocation(line: 26, column: 35, scope: !6)
!17 = !DILocation(line: 27, column: 37, scope: !6)
!18 = !DILocation(line: 27, column: 30, scope: !6)
!19 = !DILocation(line: 27, column: 42, scope: !6)
!20 = !DILocation(line: 28, column: 30, scope: !6)
!21 = !DILocation(line: 28, column: 42, scope: !6)
!22 = !DILocation(line: 29, column: 30, scope: !6)
!23 = !DILocation(line: 29, column: 35, scope: !6)
!24 = !DILocation(line: 30, column: 30, scope: !6)
!25 = !DILocation(line: 30, column: 35, scope: !6)
!26 = !DILocation(line: 31, column: 31, scope: !6)
!27 = !DILocation(line: 31, column: 36, scope: !6)
!28 = !DILocation(line: 32, column: 31, scope: !6)
!29 = !DILocation(line: 32, column: 36, scope: !6)
!30 = !DILocation(line: 33, column: 31, scope: !6)
!31 = !DILocation(line: 33, column: 36, scope: !6)
!32 = !DILocation(line: 97, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !6, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 38, column: 40, scope: !6)
!36 = !DILocation(line: 39, column: 13, scope: !6)
!37 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !38)
!38 = !DILocation(line: 40, column: 42, scope: !6)
!39 = !DILocation(line: 102, column: 15, scope: !33, inlinedAt: !40)
!40 = !DILocation(line: 41, column: 42, scope: !6)
!41 = !DILocation(line: 104, column: 21, scope: !33, inlinedAt: !40)
!42 = !DILocation(line: 104, column: 16, scope: !33, inlinedAt: !40)
!43 = !DILocation(line: 53, column: 25, scope: !6)
!44 = !DILocation(line: 26, column: 44, scope: !6)
!45 = !DILocation(line: 28, column: 81, scope: !6)
!46 = !DILocation(line: 32, column: 75, scope: !6)
!47 = !DILocation(line: 33, column: 75, scope: !6)
!48 = !DILocation(line: 35, column: 18, scope: !6)
!49 = !DILocation(line: 36, column: 19, scope: !6)
!50 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !40)
!51 = !DILocation(line: 43, column: 20, scope: !6)
!52 = !DILocation(line: 102, column: 15, scope: !33, inlinedAt: !53)
!53 = !DILocation(line: 46, column: 42, scope: !6)
!54 = !DILocation(line: 104, column: 21, scope: !33, inlinedAt: !53)
!55 = !DILocation(line: 104, column: 16, scope: !33, inlinedAt: !53)
!56 = !DILocation(line: 105, column: 29, scope: !33, inlinedAt: !53)
!57 = !DILocation(line: 48, column: 19, scope: !6)
!58 = !DILocation(line: 49, column: 20, scope: !6)
!59 = !DILocation(line: 50, column: 20, scope: !6)
!60 = !DILocation(line: 51, column: 19, scope: !6)
!61 = !DILocation(line: 52, column: 19, scope: !6)
!62 = !DILocation(line: 53, column: 37, scope: !6)
!63 = !DILocation(line: 53, column: 4, scope: !6)
