//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b16 	%rs<43>;
	.reg .b32 	%r<343>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<45>;
	.loc	1 17 0                          // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:17:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_bmm_param_2];
	ld.param.u64 	%rd20, [triton_bmm_param_0];
	ld.param.u64 	%rd21, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:41:24
	mov.u32 	%r40, %ctaid.x;
	.loc	1 47 22                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:47:22
	shr.s32 	%r41, %r40, 31;
	shr.u32 	%r42, %r41, 27;
	add.s32 	%r43, %r40, %r42;
	shr.s32 	%r44, %r43, 5;
	.loc	1 48 41                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:48:41
	shl.b32 	%r45, %r44, 3;
	.loc	1 48 30                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:48:30
	sub.s32 	%r46, 8, %r45;
	.loc	1 48 50                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:48:50
	min.s32 	%r47, %r46, 8;
	.loc	1 49 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:49:40
	rem.s32 	%r48, %r40, %r47;
	.loc	1 49 34                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:49:34
	add.s32 	%r49, %r48, %r45;
	.loc	1 50 19                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:50:19
	and.b32  	%r50, %r43, -32;
	sub.s32 	%r51, %r40, %r50;
	.loc	1 50 30                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:50:30
	div.s32 	%r52, %r51, %r47;
	.loc	1 52 17                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:52:17
	shl.b32 	%r1, %r49, 6;
	.loc	1 52 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	shr.u32 	%r53, %r2, 2;
	and.b32  	%r4, %r2, 128;
	shr.u32 	%r54, %r4, 2;
	bfe.u32 	%r55, %r2, 2, 5;
	or.b32  	%r56, %r55, %r54;
	.loc	1 52 27                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:52:27
	or.b32  	%r57, %r1, %r56;
	.loc	1 53 17                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:53:17
	shl.b32 	%r5, %r52, 7;
	.loc	1 53 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:53:40
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r58, %r6, 24;
	.loc	1 53 27                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:53:27
	or.b32  	%r59, %r5, %r56;
	.loc	1 57 19                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:57:19
	bfe.s32 	%r60, %r49, 25, 1;
	shr.u32 	%r61, %r60, 23;
	add.s32 	%r62, %r57, %r61;
	and.b32  	%r63, %r62, 1048064;
	sub.s32 	%r64, %r57, %r63;
	.loc	1 61 19                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:61:19
	cvt.u16.u32 	%rs1, %r59;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 7;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -512;
	sub.s16 	%rs6, %rs1, %rs5;
	or.b16  	%rs7, %rs1, 64;
	add.s16 	%rs8, %rs7, %rs3;
	and.b16  	%rs9, %rs8, -512;
	sub.s16 	%rs10, %rs7, %rs9;
	.loc	1 65 26                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:65:26
	mov.u32 	%r7, %ctaid.y;
	.loc	1 66 28                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:66:28
	shl.b32 	%r65, %r64, 12;
	.loc	1 66 72                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:66:72
	shl.b32 	%r66, %r7, 6;
	.loc	1 66 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:66:40
	or.b32  	%r67, %r58, %r66;
	.loc	1 66 66                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:66:66
	add.s32 	%r68, %r67, %r65;
	.loc	1 66 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:66:13
	mul.wide.s32 	%rd22, %r68, 2;
	add.s64 	%rd11, %rd20, %rd22;
	.loc	1 67 54                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:67:54
	mul.wide.s16 	%r69, %rs6, 4096;
	mul.wide.s16 	%r70, %rs10, 4096;
	.loc	1 67 66                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:67:66
	add.s32 	%r71, %r67, %r69;
	add.s32 	%r72, %r67, %r70;
	.loc	1 67 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:67:13
	mul.wide.s32 	%rd23, %r71, 2;
	add.s64 	%rd12, %rd21, %rd23;
	mul.wide.s32 	%rd24, %r72, 2;
	add.s64 	%rd13, %rd21, %rd24;
	.loc	1 72 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:72:24
	xor.b32  	%r73, %r6, %r2;
	and.b32  	%r74, %r73, 24;
	shl.b32 	%r75, %r56, 5;
	or.b32  	%r8, %r75, %r74;
	shl.b32 	%r76, %r8, 1;
	mov.u32 	%r77, global_smem;
	add.s32 	%r22, %r77, %r76;
	add.s32 	%r20, %r22, 24576;
	mov.b32 	%r21, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r20 + 0 ], [ %rd11 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:73:24
	add.s32 	%r24, %r22, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r22 + 0 ], [ %rd12 + 0 ], 0x10, %r21;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd13 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:78:13
	add.s64 	%rd14, %rd11, 64;
	.loc	1 79 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:79:13
	add.s64 	%rd15, %rd12, 64;
	add.s64 	%rd16, %rd13, 64;
	.loc	1 72 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:72:24
	bar.sync 	0;
	add.s32 	%r26, %r22, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r26 + 0 ], [ %rd14 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:73:24
	add.s32 	%r28, %r22, 8192;
	add.s32 	%r30, %r22, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r28 + 0 ], [ %rd15 + 0 ], 0x10, %r21;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r30 + 0 ], [ %rd16 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:78:13
	add.s64 	%rd17, %rd11, 128;
	.loc	1 79 13                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:79:13
	add.s64 	%rd18, %rd12, 128;
	add.s64 	%rd19, %rd13, 128;
	.loc	1 72 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:72:24
	bar.sync 	0;
	add.s32 	%r32, %r22, 32768;
	mov.b32 	%r33, 0;
	// begin inline asm
	cp.async.cg.shared.global [ %r32 + 0 ], [ %rd17 + 0 ], 0x10, %r33;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:73:24
	add.s32 	%r34, %r22, 16384;
	add.s32 	%r36, %r22, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r34 + 0 ], [ %rd18 + 0 ], 0x10, %r33;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r36 + 0 ], [ %rd19 + 0 ], 0x10, %r33;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r78, %r2, 2;
	and.b32  	%r79, %r78, 8;
	and.b32  	%r80, %r78, 16;
	and.b32  	%r81, %r78, 24;
	and.b32  	%r82, %r2, 7;
	.loc	1 70 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:70:25
	and.b32  	%r83, %r2, 15;
	shr.u32 	%r84, %r3, 1;
	xor.b32  	%r85, %r81, %r84;
	shr.u32 	%r86, %r4, 3;
	or.b32  	%r87, %r86, %r83;
	shl.b32 	%r88, %r87, 5;
	or.b32  	%r10, %r85, %r88;
	or.b32  	%r89, %r79, 16;
	or.b32  	%r90, %r84, %r80;
	xor.b32  	%r91, %r90, %r89;
	or.b32  	%r11, %r91, %r88;
	or.b32  	%r92, %r88, 1024;
	or.b32  	%r12, %r92, %r85;
	or.b32  	%r13, %r91, %r92;
	xor.b32  	%r93, %r78, %r2;
	and.b32  	%r94, %r93, 24;
	and.b32  	%r14, %r53, 24;
	or.b32  	%r95, %r14, %r82;
	shl.b32 	%r96, %r95, 5;
	or.b32  	%r15, %r96, %r94;
	add.s32 	%r97, %r70, %r66;
	or.b32  	%r98, %r97, %r58;
	mul.wide.s32 	%rd25, %r98, 2;
	add.s64 	%rd26, %rd25, %rd21;
	add.s64 	%rd44, %rd26, 192;
	add.s32 	%r99, %r69, %r66;
	or.b32  	%r100, %r99, %r58;
	mul.wide.s32 	%rd27, %r100, 2;
	add.s64 	%rd28, %rd27, %rd21;
	add.s64 	%rd43, %rd28, 192;
	add.s32 	%r101, %r65, %r66;
	or.b32  	%r102, %r101, %r58;
	mul.wide.s32 	%rd29, %r102, 2;
	add.s64 	%rd30, %rd29, %rd20;
	add.s64 	%rd42, %rd30, 192;
	mov.pred 	%p31, -1;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r342, 2;
	mov.b32 	%r341, -1;
	shl.b32 	%r250, %r10, 1;
	shl.b32 	%r251, %r11, 1;
	shl.b32 	%r252, %r12, 1;
	shl.b32 	%r253, %r13, 1;
	shl.b32 	%r256, %r15, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 25                          // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:0:25
	mov.pred 	%p1, %p31;
	.loc	1 70 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:70:25
	add.s32 	%r245, %r341, 1;
	setp.lt.s32 	%p4, %r245, 3;
	selp.b32 	%r341, %r245, 0, %p4;
	.loc	1 72 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:72:24
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r246, %r341, 12;
	add.s32 	%r248, %r77, %r246;
	add.s32 	%r249, %r248, 24576;
	add.s32 	%r107, %r249, %r250;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r143, %r144, %r145, %r146}, [%r107];
	// end inline asm
	add.s32 	%r112, %r249, %r251;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r191, %r192, %r193, %r194}, [%r112];
	// end inline asm
	add.s32 	%r117, %r249, %r252;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r167, %r168, %r169, %r170}, [%r117];
	// end inline asm
	add.s32 	%r122, %r249, %r253;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r215, %r216, %r217, %r218}, [%r122];
	// end inline asm
	.loc	1 73 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:73:24
	shl.b32 	%r254, %r341, 13;
	add.s32 	%r255, %r77, %r254;
	add.s32 	%r127, %r255, %r256;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r147, %r148, %r195, %r196}, [%r127];
	// end inline asm
	add.s32 	%r132, %r127, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r153, %r154, %r201, %r202}, [%r132];
	// end inline asm
	add.s32 	%r137, %r127, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r159, %r160, %r207, %r208}, [%r137];
	// end inline asm
	add.s32 	%r142, %r127, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r213, %r214}, [%r142];
	// end inline asm
	.loc	1 77 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r143, %r144, %r145, %r146 }, { %r147, %r148 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r143, %r144, %r145, %r146 }, { %r153, %r154 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r143, %r144, %r145, %r146 }, { %r159, %r160 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r143, %r144, %r145, %r146 }, { %r165, %r166 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r167, %r168, %r169, %r170 }, { %r147, %r148 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r167, %r168, %r169, %r170 }, { %r153, %r154 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r167, %r168, %r169, %r170 }, { %r159, %r160 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r167, %r168, %r169, %r170 }, { %r165, %r166 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r191, %r192, %r193, %r194 }, { %r195, %r196 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r191, %r192, %r193, %r194 }, { %r201, %r202 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r191, %r192, %r193, %r194 }, { %r207, %r208 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r191, %r192, %r193, %r194 }, { %r213, %r214 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r215, %r216, %r217, %r218 }, { %r195, %r196 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r215, %r216, %r217, %r218 }, { %r201, %r202 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r215, %r216, %r217, %r218 }, { %r207, %r208 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r215, %r216, %r217, %r218 }, { %r213, %r214 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 70 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:70:25
	add.s32 	%r257, %r342, 1;
	setp.lt.s32 	%p5, %r257, 3;
	selp.b32 	%r342, %r257, 0, %p5;
	.loc	1 72 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:72:24
	shl.b32 	%r258, %r342, 12;
	bar.sync 	0;
	add.s32 	%r239, %r20, %r258;
	// begin inline asm
	cp.async.cg.shared.global [ %r239 + 0 ], [ %rd42 + 0 ], 0x10, %r33;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:73:24
	shl.b32 	%r259, %r342, 13;
	add.s32 	%r260, %r77, %r259;
	add.s32 	%r241, %r260, %r76;
	add.s32 	%r243, %r241, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd43 + 0 ], 0x10, %r33;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r243 + 0 ], [ %rd44 + 0 ], 0x10, %r33;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:70:25
	add.s64 	%rd44, %rd44, 64;
	add.s64 	%rd43, %rd43, 64;
	add.s64 	%rd42, %rd42, 64;
	mov.pred 	%p31, 0;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 53 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:53:40
	and.b32  	%r294, %r6, 120;
	.loc	1 53 27                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:53:27
	or.b32  	%r295, %r5, %r294;
	.loc	1 52 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:52:40
	bfe.u32 	%r296, %r2, 4, 4;
	.loc	1 52 27                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:52:27
	or.b32  	%r297, %r296, %r1;
	or.b32  	%r298, %r297, 48;
	or.b32  	%r299, %r297, 32;
	or.b32  	%r300, %r297, 16;
	.loc	1 70 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:87:20
	setp.lt.s32 	%p26, %r297, 512;
	setp.lt.s32 	%p27, %r300, 512;
	setp.lt.s32 	%p28, %r299, 512;
	setp.lt.s32 	%p29, %r298, 512;
	.loc	1 87 34                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:87:34
	setp.lt.s32 	%p30, %r295, 512;
	.loc	1 87 26                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:87:26
	and.pred  	%p22, %p26, %p30;
	and.pred  	%p23, %p27, %p30;
	and.pred  	%p24, %p28, %p30;
	and.pred  	%p25, %p29, %p30;
	.loc	1 90 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:90:25
	shl.b32 	%r301, %r297, 9;
	shl.b32 	%r302, %r300, 9;
	shl.b32 	%r303, %r299, 9;
	shl.b32 	%r304, %r298, 9;
	.loc	1 90 40                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:90:40
	shl.b32 	%r305, %r7, 18;
	.loc	1 90 21                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:90:21
	add.s32 	%r306, %r295, %r305;
	.loc	1 90 33                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:90:33
	add.s32 	%r307, %r306, %r301;
	add.s32 	%r308, %r306, %r302;
	add.s32 	%r309, %r306, %r303;
	add.s32 	%r310, %r306, %r304;
	.loc	1 91 25                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:91:25
	mul.wide.s32 	%rd38, %r307, 2;
	add.s64 	%rd34, %rd10, %rd38;
	mul.wide.s32 	%rd39, %r308, 2;
	add.s64 	%rd35, %rd10, %rd39;
	mul.wide.s32 	%rd40, %r309, 2;
	add.s64 	%rd36, %rd10, %rd40;
	mul.wide.s32 	%rd41, %r310, 2;
	add.s64 	%rd37, %rd10, %rd41;
	.loc	1 91 67                         // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:91:67
	cvt.rn.bf16.f32 	%rs11, %f194;
	cvt.rn.bf16.f32 	%rs12, %f195;
	cvt.rn.bf16.f32 	%rs13, %f196;
	cvt.rn.bf16.f32 	%rs14, %f197;
	cvt.rn.bf16.f32 	%rs15, %f198;
	cvt.rn.bf16.f32 	%rs16, %f199;
	cvt.rn.bf16.f32 	%rs17, %f200;
	cvt.rn.bf16.f32 	%rs18, %f201;
	cvt.rn.bf16.f32 	%rs19, %f202;
	cvt.rn.bf16.f32 	%rs20, %f203;
	cvt.rn.bf16.f32 	%rs21, %f204;
	cvt.rn.bf16.f32 	%rs22, %f205;
	cvt.rn.bf16.f32 	%rs23, %f206;
	cvt.rn.bf16.f32 	%rs24, %f207;
	cvt.rn.bf16.f32 	%rs25, %f208;
	cvt.rn.bf16.f32 	%rs26, %f209;
	cvt.rn.bf16.f32 	%rs27, %f210;
	cvt.rn.bf16.f32 	%rs28, %f211;
	cvt.rn.bf16.f32 	%rs29, %f212;
	cvt.rn.bf16.f32 	%rs30, %f213;
	cvt.rn.bf16.f32 	%rs31, %f214;
	cvt.rn.bf16.f32 	%rs32, %f215;
	cvt.rn.bf16.f32 	%rs33, %f216;
	cvt.rn.bf16.f32 	%rs34, %f217;
	cvt.rn.bf16.f32 	%rs35, %f218;
	cvt.rn.bf16.f32 	%rs36, %f219;
	cvt.rn.bf16.f32 	%rs37, %f220;
	cvt.rn.bf16.f32 	%rs38, %f221;
	cvt.rn.bf16.f32 	%rs39, %f222;
	cvt.rn.bf16.f32 	%rs40, %f223;
	cvt.rn.bf16.f32 	%rs41, %f224;
	cvt.rn.bf16.f32 	%rs42, %f225;
	shl.b32 	%r311, %r2, 1;
	and.b32  	%r312, %r311, 6;
	shl.b32 	%r313, %r2, 5;
	and.b32  	%r314, %r313, 384;
	or.b32  	%r315, %r314, %r312;
	shl.b32 	%r316, %r3, 5;
	or.b32  	%r317, %r315, %r316;
	shl.b32 	%r318, %r4, 4;
	or.b32  	%r319, %r317, %r318;
	or.b32  	%r320, %r14, %r319;
	and.b32  	%r321, %r6, 2040;
	shr.u32 	%r322, %r319, 3;
	add.s32 	%r324, %r77, %r322;
	shl.b32 	%r325, %r320, 1;
	add.s32 	%r262, %r324, %r325;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r262 + 0 ], { %rs11, %rs12 };
	// end inline asm
	or.b32  	%r326, %r319, 1024;
	shr.u32 	%r327, %r326, 3;
	and.b32  	%r328, %r327, 496;
	add.s32 	%r329, %r77, %r328;
	add.s32 	%r330, %r329, %r325;
	add.s32 	%r263, %r330, 2048;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r263 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r264, %r262, 64;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r264 + 0 ], { %rs15, %rs16 };
	// end inline asm
	add.s32 	%r265, %r330, 2112;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r265 + 0 ], { %rs17, %rs18 };
	// end inline asm
	add.s32 	%r266, %r262, 128;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r266 + 0 ], { %rs19, %rs20 };
	// end inline asm
	add.s32 	%r267, %r330, 2176;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r267 + 0 ], { %rs21, %rs22 };
	// end inline asm
	add.s32 	%r268, %r262, 192;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r268 + 0 ], { %rs23, %rs24 };
	// end inline asm
	add.s32 	%r269, %r330, 2240;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r269 + 0 ], { %rs25, %rs26 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r331, %r6, 3;
	and.b32  	%r332, %r331, 240;
	add.s32 	%r333, %r77, %r332;
	shl.b32 	%r334, %r321, 1;
	add.s32 	%r335, %r333, %r334;
	ld.shared.v4.u32 	{%r278, %r279, %r280, %r281}, [%r335];
	or.b32  	%r336, %r321, 2048;
	shr.u32 	%r337, %r336, 3;
	and.b32  	%r338, %r337, 496;
	add.s32 	%r339, %r77, %r338;
	add.s32 	%r340, %r339, %r334;
	ld.shared.v4.u32 	{%r282, %r283, %r284, %r285}, [%r340+4096];
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r262 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r263 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r264 + 0 ], { %rs31, %rs32 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r265 + 0 ], { %rs33, %rs34 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r266 + 0 ], { %rs35, %rs36 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r267 + 0 ], { %rs37, %rs38 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r268 + 0 ], { %rs39, %rs40 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r269 + 0 ], { %rs41, %rs42 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r286, %r287, %r288, %r289}, [%r335];
	ld.shared.v4.u32 	{%r290, %r291, %r292, %r293}, [%r340+4096];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd34 + 0 ], { %r278, %r279, %r280, %r281 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd35 + 0 ], { %r282, %r283, %r284, %r285 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd36 + 0 ], { %r286, %r287, %r288, %r289 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd37 + 0 ], { %r290, %r291, %r292, %r293 };
	// end inline asm
	.loc	1 91 4                          // cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/v4/cv4hlu6eje4d57sd24nkf2ma4drgry254k76nhuxzodeji76ayh7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 52
.b8 104
.b8 108
.b8 117
.b8 54
.b8 101
.b8 106
.b8 101
.b8 52
.b8 100
.b8 53
.b8 55
.b8 115
.b8 100
.b8 50
.b8 52
.b8 110
.b8 107
.b8 102
.b8 50
.b8 109
.b8 97
.b8 52
.b8 100
.b8 114
.b8 103
.b8 114
.b8 121
.b8 50
.b8 53
.b8 52
.b8 107
.b8 55
.b8 54
.b8 110
.b8 104
.b8 117
.b8 120
.b8 122
.b8 111
.b8 100
.b8 101
.b8 106
.b8 105
.b8 55
.b8 54
.b8 97
.b8 121
.b8 104
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 118
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
