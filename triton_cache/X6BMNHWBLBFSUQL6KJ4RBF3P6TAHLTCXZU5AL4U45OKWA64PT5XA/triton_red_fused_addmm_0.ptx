//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<61>;
	.reg .b32 	%r<113>;
	.reg .f32 	%f<217>;
	.reg .b64 	%rd<24>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd15, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r70, %tid.x;
	ld.param.u64 	%rd16, [triton_red_fused_addmm_0_param_2];
	bfe.u32 	%r71, %r70, 6, 3;
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r72, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r73, %r72, 3;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r74, %r71, %r73;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r74, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	and.b32  	%r75, %r70, 511;
	shl.b32 	%r76, %r70, 3;
	and.b32  	%r77, %r76, 504;
	shl.b32 	%r78, %r77, 2;
	mov.u32 	%r79, global_smem;
	add.s32 	%r80, %r79, %r78;
	shl.b32 	%r81, %r75, 2;
	add.s32 	%r9, %r79, %r81;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r82, %r74, 3072;
	or.b32  	%r83, %r82, %r77;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd17, %r75, 2;
	add.s64 	%rd1, %rd14, %rd17;
	mov.b16 	%rs2, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd18, %r83, 2;
	add.s64 	%rd2, %rd15, %rd18;
	mov.b32 	%r5, 0;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r1, %r5;
	mov.u32 %r2, %r5;
	mov.u32 %r3, %r5;
	mov.u32 %r4, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.f32 	%f2, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f3, %f2, %f1;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	ex2.approx.f32 	%f5, %f4;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f6, %f5, 0f3F800000;
	mov.f32 	%f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f8, %f7, %f6;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f9, %f8, %f1;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r10, %f9;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs13, %rs14}, %r1;
	cvt.f32.bf16 	%f10, %rs13;
	cvt.f32.bf16 	%f11, %rs14;
	mov.b32 	{%rs15, %rs16}, %r2;
	cvt.f32.bf16 	%f12, %rs15;
	cvt.f32.bf16 	%f13, %rs16;
	mov.b32 	{%rs17, %rs18}, %r3;
	cvt.f32.bf16 	%f14, %rs17;
	cvt.f32.bf16 	%f15, %rs18;
	mov.b32 	{%rs19, %rs20}, %r4;
	cvt.f32.bf16 	%f16, %rs19;
	cvt.f32.bf16 	%f17, %rs20;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f18, %f19, %f20, %f21}, [%r80];
	ld.shared.v4.f32 	{%f22, %f23, %f24, %f25}, [%r80+16];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f26, %f25, %f17, 0f00000000;
	fma.rn.f32 	%f27, %f24, %f16, 0f00000000;
	fma.rn.f32 	%f28, %f23, %f15, 0f00000000;
	fma.rn.f32 	%f29, %f22, %f14, 0f00000000;
	fma.rn.f32 	%f30, %f21, %f13, 0f00000000;
	fma.rn.f32 	%f31, %f20, %f12, 0f00000000;
	fma.rn.f32 	%f32, %f19, %f11, 0f00000000;
	fma.rn.f32 	%f33, %f18, %f10, 0f00000000;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 1024;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f34, %rs3;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	add.s64 	%rd4, %rd2, 1024;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r11, %r5;
	mov.u32 %r12, %r5;
	mov.u32 %r13, %r5;
	mov.u32 %r14, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f35, %f2, %f34;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f36, %f35, 0f3FB8AA3B;
	ex2.approx.f32 	%f37, %f36;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f38, %f37, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f39, %f7, %f38;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f40, %f39, %f34;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r20, %f40;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs21, %rs22}, %r14;
	cvt.f32.bf16 	%f41, %rs22;
	cvt.f32.bf16 	%f42, %rs21;
	mov.b32 	{%rs23, %rs24}, %r13;
	cvt.f32.bf16 	%f43, %rs24;
	cvt.f32.bf16 	%f44, %rs23;
	mov.b32 	{%rs25, %rs26}, %r12;
	cvt.f32.bf16 	%f45, %rs26;
	cvt.f32.bf16 	%f46, %rs25;
	mov.b32 	{%rs27, %rs28}, %r11;
	cvt.f32.bf16 	%f47, %rs28;
	cvt.f32.bf16 	%f48, %rs27;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f49, %f50, %f51, %f52}, [%r80+16];
	ld.shared.v4.f32 	{%f53, %f54, %f55, %f56}, [%r80];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f57, %f53, %f48, %f33;
	fma.rn.f32 	%f58, %f54, %f47, %f32;
	fma.rn.f32 	%f59, %f55, %f46, %f31;
	fma.rn.f32 	%f60, %f56, %f45, %f30;
	fma.rn.f32 	%f61, %f49, %f44, %f29;
	fma.rn.f32 	%f62, %f50, %f43, %f28;
	fma.rn.f32 	%f63, %f51, %f42, %f27;
	fma.rn.f32 	%f64, %f52, %f41, %f26;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd5, %rd1, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f65, %rs5;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r84, %r83, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd19, %r84, 2;
	add.s64 	%rd6, %rd15, %rd19;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r21, %r5;
	mov.u32 %r22, %r5;
	mov.u32 %r23, %r5;
	mov.u32 %r24, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd6 + 0 ];
	// end inline asm
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f66, %f2, %f65;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f67, %f66, 0f3FB8AA3B;
	ex2.approx.f32 	%f68, %f67;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f69, %f68, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f70, %f7, %f69;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f71, %f70, %f65;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r30, %f71;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs29, %rs30}, %r21;
	cvt.f32.bf16 	%f72, %rs29;
	cvt.f32.bf16 	%f73, %rs30;
	mov.b32 	{%rs31, %rs32}, %r22;
	cvt.f32.bf16 	%f74, %rs31;
	cvt.f32.bf16 	%f75, %rs32;
	mov.b32 	{%rs33, %rs34}, %r23;
	cvt.f32.bf16 	%f76, %rs33;
	cvt.f32.bf16 	%f77, %rs34;
	mov.b32 	{%rs35, %rs36}, %r24;
	cvt.f32.bf16 	%f78, %rs35;
	cvt.f32.bf16 	%f79, %rs36;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f80, %f81, %f82, %f83}, [%r80];
	ld.shared.v4.f32 	{%f84, %f85, %f86, %f87}, [%r80+16];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f88, %f87, %f79, %f64;
	fma.rn.f32 	%f89, %f86, %f78, %f63;
	fma.rn.f32 	%f90, %f85, %f77, %f62;
	fma.rn.f32 	%f91, %f84, %f76, %f61;
	fma.rn.f32 	%f92, %f83, %f75, %f60;
	fma.rn.f32 	%f93, %f82, %f74, %f59;
	fma.rn.f32 	%f94, %f81, %f73, %f58;
	fma.rn.f32 	%f95, %f80, %f72, %f57;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd7, %rd1, 3072;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs7, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f96, %rs7;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r85, %r83, 1536;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd20, %r85, 2;
	add.s64 	%rd8, %rd15, %rd20;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r31, %r5;
	mov.u32 %r32, %r5;
	mov.u32 %r33, %r5;
	mov.u32 %r34, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f97, %f2, %f96;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f98, %f97, 0f3FB8AA3B;
	ex2.approx.f32 	%f99, %f98;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f100, %f99, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f101, %f7, %f100;
$L__tmp8:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f102, %f101, %f96;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r40, %f102;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs37, %rs38}, %r34;
	cvt.f32.bf16 	%f103, %rs38;
	cvt.f32.bf16 	%f104, %rs37;
	mov.b32 	{%rs39, %rs40}, %r33;
	cvt.f32.bf16 	%f105, %rs40;
	cvt.f32.bf16 	%f106, %rs39;
	mov.b32 	{%rs41, %rs42}, %r32;
	cvt.f32.bf16 	%f107, %rs42;
	cvt.f32.bf16 	%f108, %rs41;
	mov.b32 	{%rs43, %rs44}, %r31;
	cvt.f32.bf16 	%f109, %rs44;
	cvt.f32.bf16 	%f110, %rs43;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f111, %f112, %f113, %f114}, [%r80+16];
	ld.shared.v4.f32 	{%f115, %f116, %f117, %f118}, [%r80];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f119, %f115, %f110, %f95;
	fma.rn.f32 	%f120, %f116, %f109, %f94;
	fma.rn.f32 	%f121, %f117, %f108, %f93;
	fma.rn.f32 	%f122, %f118, %f107, %f92;
	fma.rn.f32 	%f123, %f111, %f106, %f91;
	fma.rn.f32 	%f124, %f112, %f105, %f90;
	fma.rn.f32 	%f125, %f113, %f104, %f89;
	fma.rn.f32 	%f126, %f114, %f103, %f88;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd9, %rd1, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs9, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f127, %rs9;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r86, %r83, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd21, %r86, 2;
	add.s64 	%rd10, %rd15, %rd21;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r41, %r5;
	mov.u32 %r42, %r5;
	mov.u32 %r43, %r5;
	mov.u32 %r44, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd10 + 0 ];
	// end inline asm
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f128, %f2, %f127;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f129, %f128, 0f3FB8AA3B;
	ex2.approx.f32 	%f130, %f129;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f131, %f130, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f132, %f7, %f131;
$L__tmp10:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f133, %f132, %f127;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r50, %f133;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs45, %rs46}, %r41;
	cvt.f32.bf16 	%f134, %rs45;
	cvt.f32.bf16 	%f135, %rs46;
	mov.b32 	{%rs47, %rs48}, %r42;
	cvt.f32.bf16 	%f136, %rs47;
	cvt.f32.bf16 	%f137, %rs48;
	mov.b32 	{%rs49, %rs50}, %r43;
	cvt.f32.bf16 	%f138, %rs49;
	cvt.f32.bf16 	%f139, %rs50;
	mov.b32 	{%rs51, %rs52}, %r44;
	cvt.f32.bf16 	%f140, %rs51;
	cvt.f32.bf16 	%f141, %rs52;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f142, %f143, %f144, %f145}, [%r80];
	ld.shared.v4.f32 	{%f146, %f147, %f148, %f149}, [%r80+16];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f150, %f149, %f141, %f126;
	fma.rn.f32 	%f151, %f148, %f140, %f125;
	fma.rn.f32 	%f152, %f147, %f139, %f124;
	fma.rn.f32 	%f153, %f146, %f138, %f123;
	fma.rn.f32 	%f154, %f145, %f137, %f122;
	fma.rn.f32 	%f155, %f144, %f136, %f121;
	fma.rn.f32 	%f156, %f143, %f135, %f120;
	fma.rn.f32 	%f157, %f142, %f134, %f119;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd11, %rd1, 5120;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs11, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f158, %rs11;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r87, %r83, 2560;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd22, %r87, 2;
	add.s64 	%rd12, %rd15, %rd22;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r51, %r5;
	mov.u32 %r52, %r5;
	mov.u32 %r53, %r5;
	mov.u32 %r54, %r5;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd12 + 0 ];
	// end inline asm
$L__tmp11:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f159, %f2, %f158;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f160, %f159, 0f3FB8AA3B;
	ex2.approx.f32 	%f161, %f160;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f162, %f161, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f163, %f7, %f162;
$L__tmp12:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f164, %f163, %f158;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r60, %f164;
	// begin inline asm
	@%p1 st.shared.b32 [ %r9 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs53, %rs54}, %r54;
	cvt.f32.bf16 	%f165, %rs54;
	cvt.f32.bf16 	%f166, %rs53;
	mov.b32 	{%rs55, %rs56}, %r53;
	cvt.f32.bf16 	%f167, %rs56;
	cvt.f32.bf16 	%f168, %rs55;
	mov.b32 	{%rs57, %rs58}, %r52;
	cvt.f32.bf16 	%f169, %rs58;
	cvt.f32.bf16 	%f170, %rs57;
	mov.b32 	{%rs59, %rs60}, %r51;
	cvt.f32.bf16 	%f171, %rs60;
	cvt.f32.bf16 	%f172, %rs59;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v4.f32 	{%f173, %f174, %f175, %f176}, [%r80+16];
	ld.shared.v4.f32 	{%f177, %f178, %f179, %f180}, [%r80];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f181, %f177, %f172, %f157;
	fma.rn.f32 	%f182, %f178, %f171, %f156;
	fma.rn.f32 	%f183, %f179, %f170, %f155;
	fma.rn.f32 	%f184, %f180, %f169, %f154;
	fma.rn.f32 	%f185, %f173, %f168, %f153;
	fma.rn.f32 	%f186, %f174, %f167, %f152;
	fma.rn.f32 	%f187, %f175, %f166, %f151;
	fma.rn.f32 	%f188, %f176, %f165, %f150;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f189, %f188, 0f00000000, %p2;
	selp.f32 	%f190, %f187, 0f00000000, %p2;
	selp.f32 	%f191, %f186, 0f00000000, %p2;
	selp.f32 	%f192, %f185, 0f00000000, %p2;
	selp.f32 	%f193, %f184, 0f00000000, %p2;
	selp.f32 	%f194, %f183, 0f00000000, %p2;
	selp.f32 	%f195, %f182, 0f00000000, %p2;
	selp.f32 	%f196, %f181, 0f00000000, %p2;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r88, %r70, 7;
	and.b32  	%r89, %r70, 31;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r90, %r73, %r88;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p24, %r90, 9216;
$L__tmp13:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f197, %f196, %f195;
	add.f32 	%f198, %f194, %f197;
	add.f32 	%f199, %f193, %f198;
	add.f32 	%f200, %f192, %f199;
	add.f32 	%f201, %f191, %f200;
	add.f32 	%f202, %f190, %f201;
	add.f32 	%f203, %f189, %f202;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f203;
	shfl.sync.bfly.b32	%r92, %r91, 16, 31, -1;
	mov.b32 	%f204, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f205, %f203, %f204;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f205;
	shfl.sync.bfly.b32	%r94, %r93, 8, 31, -1;
	mov.b32 	%f206, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f207, %f205, %f206;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r95, %f207;
	shfl.sync.bfly.b32	%r96, %r95, 4, 31, -1;
	mov.b32 	%f208, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f209, %f207, %f208;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r97, %f209;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f210, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f211, %f209, %f210;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r99, %f211;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f212, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f213, %f211, %f212;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p19, %r89, 0;
	shr.u32 	%r101, %r70, 3;
	and.b32  	%r102, %r101, 4;
	shl.b32 	%r103, %r71, 3;
	or.b32  	%r104, %r103, %r102;
	add.s32 	%r61, %r79, %r104;
	mov.b32 	%r62, %f213;
	// begin inline asm
	@%p19 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r70, 16;
	shl.b32 	%r105, %r70, 2;
	add.s32 	%r64, %r79, %r105;
	// begin inline asm
	@%p20 ld.shared.b32 %r63, [ %r64 + 0 ];
	// end inline asm
	mov.b32 	%f214, %r63;
	shfl.sync.bfly.b32	%r106, %r63, 1, 31, -1;
	mov.b32 	%f215, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f216, %f214, %f215;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r107, %r70, 1;
	setp.eq.b32 	%p25, %r107, 1;
	not.pred 	%p26, %p25;
	and.pred  	%p21, %p20, %p26;
	mov.b32 	%r66, %f216;
	// begin inline asm
	@%p21 st.shared.b32 [ %r64 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r108, %r79, %r103;
	ld.shared.u32 	%r68, [%r108];
$L__tmp14:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	shl.b32 	%r109, %r71, 2;
	sub.s32 	%r67, %r108, %r109;
	// begin inline asm
	@%p1 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r110, %r88, 2;
	add.s32 	%r111, %r79, %r110;
	ld.shared.u32 	%r69, [%r111];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd23, %r90, 4;
	add.s64 	%rd13, %rd16, %rd23;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r112, %r70, 504;
	setp.eq.s32 	%p27, %r112, 0;
	and.pred  	%p23, %p27, %p24;
	// begin inline asm
	@%p23 st.global.b32 [ %rd13 + 0 ], { %r69 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
