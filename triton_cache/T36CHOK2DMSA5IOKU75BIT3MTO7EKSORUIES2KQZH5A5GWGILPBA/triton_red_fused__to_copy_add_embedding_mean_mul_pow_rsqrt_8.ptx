//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 117, 119, 47, 99, 117, 119, 113, 119, 101, 113, 111, 109, 98, 102, 50, 50, 107, 50, 110, 116, 107, 111, 102, 103, 115, 98, 118, 53, 55, 115, 106, 53, 118, 118, 100, 99, 121, 98, 117, 113, 114, 99, 110, 104, 98, 104, 111, 112, 102, 104, 113, 115, 113, 54, 52, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_7,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<71>;
	.loc	1 18 0                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:18:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_6];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_5];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_0];
	ld.param.u64 	%rd33, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:23:28
	mov.u32 	%r10, %ctaid.x;
	.loc	1 23 33                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:23:33
	shl.b32 	%r11, %r10, 6;
	.loc	1 24 44                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:24:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r12, %r1, 1, 6;
	bfe.u32 	%r13, %r1, 3, 4;
	.loc	1 24 23                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:24:23
	or.b32  	%r2, %r12, %r11;
	or.b32  	%r14, %r13, %r11;
	or.b32  	%r15, %r14, 16;
	or.b32  	%r16, %r14, 32;
	or.b32  	%r17, %r14, 48;
	.loc	1 25 21                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:25:21
	setp.lt.s32 	%p2, %r2, 512;
	setp.lt.s32 	%p10, %r14, 512;
	setp.lt.s32 	%p11, %r15, 512;
	setp.lt.s32 	%p12, %r16, 512;
	setp.lt.s32 	%p13, %r17, 512;
	.loc	1 26 37                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:26:37
	shl.b32 	%r18, %r1, 2;
	and.b32  	%r19, %r18, 4;
	.loc	1 29 30                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:29:30
	mul.wide.s32 	%rd34, %r2, 8;
	add.s64 	%rd17, %rd33, %rd34;
	mul.wide.s32 	%rd35, %r14, 8;
	add.s64 	%rd25, %rd33, %rd35;
	add.s64 	%rd27, %rd25, 128;
	add.s64 	%rd29, %rd25, 256;
	add.s64 	%rd31, %rd25, 384;
	.loc	1 29 35                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:29:35
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p12 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 37 50                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:50
	shl.b32 	%r20, %r2, 12;
	.loc	1 42 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:42:22
	setp.lt.s64 	%p14, %rd22, 0;
	.loc	1 41 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:41:22
	add.s64 	%rd36, %rd30, 32128;
	add.s64 	%rd37, %rd28, 32128;
	add.s64 	%rd38, %rd26, 32128;
	add.s64 	%rd39, %rd24, 32128;
	.loc	1 42 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:42:22
	setp.lt.s64 	%p15, %rd30, 0;
	setp.lt.s64 	%p16, %rd28, 0;
	setp.lt.s64 	%p17, %rd26, 0;
	setp.lt.s64 	%p18, %rd24, 0;
	.loc	1 43 36                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:43:36
	selp.b64 	%rd40, %rd39, %rd24, %p18;
	selp.b64 	%rd41, %rd38, %rd26, %p17;
	selp.b64 	%rd42, %rd37, %rd28, %p16;
	selp.b64 	%rd43, %rd36, %rd30, %p15;
	.loc	1 44 41                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:41
	setp.gt.u64 	%p19, %rd43, 32127;
	setp.gt.u64 	%p20, %rd42, 32127;
	setp.gt.u64 	%p21, %rd41, 32127;
	setp.gt.u64 	%p22, %rd40, 32127;
	.loc	1 44 58                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:58
	and.pred  	%p23, %p10, %p22;
	and.pred  	%p24, %p11, %p21;
	and.pred  	%p25, %p12, %p20;
	.loc	1 45 46                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:46
	and.pred  	%p26, %p13, %p19;
	shl.b64 	%rd44, %rd22, 12;
	add.s64 	%rd45, %rd44, 131596288;
	selp.b64 	%rd46, %rd45, %rd44, %p14;
	.loc	1 31 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:31:40
	or.b32  	%r3, %r19, %r20;
	or.pred  	%p27, %p25, %p26;
	or.pred  	%p28, %p23, %p24;
	or.pred  	%p1, %p28, %p27;
	cvt.u64.u32 	%rd47, %r19;
	or.b64  	%rd1, %rd46, %rd47;
	mov.f32 	%f71, 0f00000000;
	mov.b64 	%rd68, 0;
	not.pred 	%p32, %p1;
	mov.f32 	%f72, %f71;
	mov.f32 	%f73, %f71;
	mov.f32 	%f74, %f71;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:0:40
	cvt.u32.u64 	%r33, %rd68;
	or.b32  	%r34, %r3, %r33;
	.loc	1 37 38                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:38
	mul.wide.s32 	%rd51, %r34, 2;
	add.s64 	%rd48, %rd10, %rd51;
	mov.b32 	%r32, 0;
	.loc	1 37 55                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:55
	// begin inline asm
	mov.u32 %r21, %r32;
	mov.u32 %r22, %r32;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r21, %r22 }, [ %rd48 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:34
	add.s64 	%rd49, %rd12, %rd51;
	.loc	1 38 51                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:51
	// begin inline asm
	mov.u32 %r25, %r32;
	mov.u32 %r26, %r32;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r25, %r26 }, [ %rd49 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:35
	add.s64 	%rd50, %rd13, %rd51;
	.loc	1 39 52                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:52
	// begin inline asm
	mov.u32 %r29, %r32;
	mov.u32 %r30, %r32;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r29, %r30 }, [ %rd50 + 0 ];
	// end inline asm
	.loc	1 44 68                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:68
	@%p32 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	bar.sync 	0;
	.loc	1 45 41                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:41
	or.b64  	%rd54, %rd1, %rd68;
	.loc	1 45 34                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:34
	shl.b64 	%rd55, %rd54, 1;
	add.s64 	%rd52, %rd11, %rd55;
	.loc	1 45 53                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:53
	// begin inline asm
	mov.u32 %r35, %r32;
	mov.u32 %r36, %r32;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r35, %r36 }, [ %rd52 + 0 ];
	// end inline asm
	.loc	1 39 114                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:114
	mov.b32 	{%rs1, %rs2}, %r29;
	cvt.f32.bf16 	%f15, %rs2;
	cvt.f32.bf16 	%f16, %rs1;
	.loc	1 38 113                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:113
	mov.b32 	{%rs3, %rs4}, %r25;
	cvt.f32.bf16 	%f17, %rs3;
	cvt.f32.bf16 	%f18, %rs4;
	.loc	1 37 117                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:117
	mov.b32 	{%rs5, %rs6}, %r21;
	cvt.f32.bf16 	%f19, %rs6;
	cvt.f32.bf16 	%f20, %rs5;
	.loc	1 45 115                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:115
	mov.b32 	{%rs7, %rs8}, %r35;
	cvt.f32.bf16 	%f21, %rs8;
	cvt.f32.bf16 	%f22, %rs7;
	.loc	1 46 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:46:22
	add.f32 	%f23, %f20, %f22;
	add.f32 	%f24, %f19, %f21;
	.loc	1 47 23                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:47:23
	add.f32 	%f25, %f24, %f18;
	add.f32 	%f26, %f23, %f17;
	.loc	1 48 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:48:24
	add.f32 	%f27, %f26, %f16;
	add.f32 	%f28, %f25, %f15;
	.loc	1 54 56                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:54:56
	cvt.rn.bf16x2.f32 	%r39, %f28, %f27;
	.loc	1 39 114                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:114
	mov.b32 	{%rs9, %rs10}, %r30;
	cvt.f32.bf16 	%f29, %rs9;
	cvt.f32.bf16 	%f30, %rs10;
	.loc	1 38 113                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:113
	mov.b32 	{%rs11, %rs12}, %r26;
	cvt.f32.bf16 	%f31, %rs12;
	cvt.f32.bf16 	%f32, %rs11;
	.loc	1 37 117                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:117
	mov.b32 	{%rs13, %rs14}, %r22;
	cvt.f32.bf16 	%f33, %rs13;
	cvt.f32.bf16 	%f34, %rs14;
	.loc	1 45 115                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:115
	mov.b32 	{%rs15, %rs16}, %r36;
	cvt.f32.bf16 	%f35, %rs15;
	cvt.f32.bf16 	%f36, %rs16;
	.loc	1 46 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:46:22
	add.f32 	%f37, %f34, %f36;
	add.f32 	%f38, %f33, %f35;
	.loc	1 47 23                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:47:23
	add.f32 	%f39, %f38, %f32;
	add.f32 	%f40, %f37, %f31;
	.loc	1 48 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:48:24
	add.f32 	%f41, %f40, %f30;
	add.f32 	%f42, %f39, %f29;
	.loc	1 52 25                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:52:25
	fma.rn.f32 	%f43, %f27, %f27, %f71;
	fma.rn.f32 	%f44, %f28, %f28, %f72;
	fma.rn.f32 	%f45, %f42, %f42, %f73;
	fma.rn.f32 	%f46, %f41, %f41, %f74;
	.loc	1 53 50                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:53:50
	selp.f32 	%f74, %f46, %f74, %p2;
	selp.f32 	%f73, %f45, %f73, %p2;
	selp.f32 	%f72, %f44, %f72, %p2;
	selp.f32 	%f71, %f43, %f71, %p2;
	.loc	1 54 56                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:54:56
	cvt.rn.bf16x2.f32 	%r40, %f41, %f42;
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd48 + 0 ], { %r39, %r40 };
	// end inline asm
	.loc	1 31 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:31:40
	add.s64 	%rd4, %rd68, 8;
	setp.lt.u64 	%p35, %rd68, 4088;
	mov.u64 	%rd68, %rd4;
	@%p35 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f71, %f72;
	add.f32 	%f48, %f73, %f47;
	add.f32 	%f49, %f74, %f48;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f49;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f50, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	mov.f32 	%f52, 0f45800000;
$L__tmp2:
	.loc	1 66 25                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:66:25
	div.full.f32 	%f53, %f51, %f52;
	.loc	1 68 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:68:24
	add.f32 	%f54, %f53, 0f358637BD;
	.loc	1 69 32                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:69:32
	rsqrt.approx.ftz.f32 	%f9, %f54;
	.loc	1 56 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:40
	and.b32  	%r43, %r1, 1;
	mul.wide.u32 	%rd57, %r43, 8;
	add.s64 	%rd69, %rd14, %rd57;
	mov.b64 	%rd70, -8;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:0:40
	mov.b32 	%r46, 0;
	mov.pred 	%p36, -1;
	.loc	1 62 42                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:62:42
	// begin inline asm
	mov.u32 %r44, %r46;
	mov.u32 %r45, %r46;
	@%p36 ld.global.L1::evict_last.v2.b32 { %r44, %r45 }, [ %rd69 + 0 ];
	// end inline asm
	add.s64 	%rd70, %rd70, 8;
	cvt.u32.u64 	%r54, %rd70;
	or.b32  	%r55, %r3, %r54;
	.loc	1 63 39                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:39
	mul.wide.s32 	%rd61, %r55, 2;
	add.s64 	%rd59, %rd10, %rd61;
	.loc	1 63 56                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:56
	// begin inline asm
	mov.u32 %r48, %r46;
	mov.u32 %r49, %r46;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r48, %r49 }, [ %rd59 + 0 ];
	// end inline asm
	.loc	1 73 29                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:73:29
	add.s64 	%rd60, %rd15, %rd61;
	.loc	1 62 95                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:62:95
	mov.b32 	{%rs17, %rs18}, %r44;
	cvt.f32.bf16 	%f55, %rs18;
	cvt.f32.bf16 	%f56, %rs17;
	.loc	1 63 118                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:118
	mov.b32 	{%rs19, %rs20}, %r48;
	cvt.f32.bf16 	%f57, %rs19;
	cvt.f32.bf16 	%f58, %rs20;
	.loc	1 70 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:70:24
	mul.f32 	%f59, %f9, %f58;
	mul.f32 	%f60, %f9, %f57;
	.loc	1 72 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:72:24
	mul.f32 	%f61, %f60, %f56;
	mul.f32 	%f62, %f59, %f55;
	.loc	1 73 53                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:73:53
	cvt.rn.bf16x2.f32 	%r52, %f62, %f61;
	.loc	1 62 95                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:62:95
	mov.b32 	{%rs21, %rs22}, %r45;
	cvt.f32.bf16 	%f63, %rs22;
	cvt.f32.bf16 	%f64, %rs21;
	.loc	1 63 118                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:118
	mov.b32 	{%rs23, %rs24}, %r49;
	cvt.f32.bf16 	%f65, %rs23;
	cvt.f32.bf16 	%f66, %rs24;
	.loc	1 70 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:70:24
	mul.f32 	%f67, %f9, %f66;
	mul.f32 	%f68, %f9, %f65;
	.loc	1 72 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:72:24
	mul.f32 	%f69, %f68, %f64;
	mul.f32 	%f70, %f67, %f63;
	.loc	1 73 53                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:73:53
	cvt.rn.bf16x2.f32 	%r53, %f70, %f69;
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd60 + 0 ], { %r52, %r53 };
	// end inline asm
	.loc	1 56 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:40
	add.s64 	%rd69, %rd69, 16;
	setp.lt.u64 	%p39, %rd70, 4088;
	@%p39 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 56 4                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:4
	ret;
$L__BB0_2:
	.loc	1 44 68                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:68
	mov.u64 	%rd62, assertMessage_0;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, assertFile_0;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, assertFunc_0;
	cvta.global.u64 	%rd67, %rd66;
	{ // callseq 11, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd63;
	.param .b64 param1;
	st.param.b64 	[param1], %rd65;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd67;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 11
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 119
.b8 113
.b8 119
.b8 101
.b8 113
.b8 111
.b8 109
.b8 98
.b8 102
.b8 50
.b8 50
.b8 107
.b8 50
.b8 110
.b8 116
.b8 107
.b8 111
.b8 102
.b8 103
.b8 115
.b8 98
.b8 118
.b8 53
.b8 55
.b8 115
.b8 106
.b8 53
.b8 118
.b8 118
.b8 100
.b8 99
.b8 121
.b8 98
.b8 117
.b8 113
.b8 114
.b8 99
.b8 110
.b8 104
.b8 98
.b8 104
.b8 111
.b8 112
.b8 102
.b8 104
.b8 113
.b8 115
.b8 113
.b8 54
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 117
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
