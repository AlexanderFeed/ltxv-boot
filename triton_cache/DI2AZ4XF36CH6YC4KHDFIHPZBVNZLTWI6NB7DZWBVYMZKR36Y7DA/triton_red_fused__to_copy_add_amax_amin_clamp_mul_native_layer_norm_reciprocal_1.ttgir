#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0)
#loc1 = loc(unknown)
#loc15 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":47:79)
#loc64 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":87:40)
#loc70 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":88:40)
#loc109 = loc(callsite(#loc1 at #loc15))
#loc127 = loc(callsite(#loc1 at #loc64))
#loc133 = loc(callsite(#loc1 at #loc70))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_native_layer_norm_reciprocal_1(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg9: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg10: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg11: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg12: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0x7F800000> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3.072000e+03> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.00787401571> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-1.270000e+02> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<1.270000e+02> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %c3600_i32 = arith.constant 3600 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_11 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<1x4096xbf16, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<3072> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c3600_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4096 : i32, start = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4096xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst_13 : tensor<1x4096xi32, #blocked> loc(#loc5)
    %5 = arith.muli %0, %c3072_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x4096xi32, #blocked> loc(#loc106)
    %7 = arith.addi %3, %6 : tensor<1x4096xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x4096xi1, #blocked> loc(#loc107)
    %11 = arith.andi %10, %4 : tensor<1x4096xi1, #blocked> loc(#loc9)
    %12 = tt.load %9, %11, %cst_12 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %13 = arith.extf %12 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc11)
    %14 = arith.select %11, %13, %cst : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc12)
    %15 = arith.select %11, %cst_4, %cst : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc13)
    %16:3 = "tt.reduce"(%14, %cst, %15) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc15)), %arg16: f32 loc(callsite(#loc1 at #loc15)), %arg17: f32 loc(callsite(#loc1 at #loc15)), %arg18: f32 loc(callsite(#loc1 at #loc15)), %arg19: f32 loc(callsite(#loc1 at #loc15)), %arg20: f32 loc(callsite(#loc1 at #loc15))):
      %117 = arith.subf %arg18, %arg15 : f32 loc(#loc162)
      %118 = arith.addf %arg17, %arg20 : f32 loc(#loc163)
      %119 = arith.cmpf oeq, %118, %cst_11 : f32 loc(#loc164)
      %120 = arith.divf %arg20, %118 : f32 loc(#loc165)
      %121 = arith.select %119, %cst_11, %120 : f32 loc(#loc166)
      %122 = arith.mulf %117, %121 : f32 loc(#loc167)
      %123 = arith.addf %arg15, %122 : f32 loc(#loc168)
      %124 = arith.addf %arg16, %arg19 : f32 loc(#loc169)
      %125 = arith.mulf %117, %117 : f32 loc(#loc170)
      %126 = arith.mulf %125, %arg17 : f32 loc(#loc171)
      %127 = arith.mulf %126, %121 : f32 loc(#loc172)
      %128 = arith.addf %124, %127 : f32 loc(#loc173)
      tt.reduce.return %123, %128, %118 : f32, f32, f32 loc(#loc108)
    }) : (tensor<1x4096xf32, #blocked>, tensor<1x4096xf32, #blocked>, tensor<1x4096xf32, #blocked>) -> (tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>) loc(#loc108)
    %17 = tt.expand_dims %16#0 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc28)
    %18 = tt.expand_dims %16#1 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc29)
    %19 = tt.load %9, %11, %cst_12 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc30)
    %20 = arith.extf %19 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc31)
    %21 = arith.addi %3, %cst_13 : tensor<1x4096xi32, #blocked> loc(#loc32)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc33)
    %23 = tt.addptr %22, %21 : tensor<1x4096x!tt.ptr<f32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc33)
    %24 = tt.load %23, %4, %cst evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc34)
    %25 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc35)
    %26 = tt.addptr %25, %21 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc35)
    %27 = tt.load %26, %4, %cst_12 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc36)
    %28 = arith.extf %27 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc37)
    %29 = tt.addptr %22, %3 : tensor<1x4096x!tt.ptr<f32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc38)
    %30 = tt.load %29, %4, %cst evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc39)
    %31 = tt.addptr %25, %3 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc40)
    %32 = tt.load %31, %4, %cst_12 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc41)
    %33 = arith.extf %32 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc42)
    %34 = tt.broadcast %17 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc43)
    %35 = arith.subf %20, %34 : tensor<1x4096xf32, #blocked> loc(#loc43)
    %36 = arith.divf %18, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc44)
    %37 = arith.addf %36, %cst_3 : tensor<1x1xf32, #blocked> loc(#loc45)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc46)
    %39 = tt.broadcast %38 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc47)
    %40 = arith.mulf %35, %39 : tensor<1x4096xf32, #blocked> loc(#loc47)
    %41 = arith.addf %24, %28 : tensor<1x4096xf32, #blocked> loc(#loc48)
    %42 = arith.addf %41, %cst_4 : tensor<1x4096xf32, #blocked> loc(#loc49)
    %43 = arith.mulf %40, %42 : tensor<1x4096xf32, #blocked> loc(#loc50)
    %44 = arith.addf %30, %33 : tensor<1x4096xf32, #blocked> loc(#loc51)
    %45 = arith.addf %43, %44 : tensor<1x4096xf32, #blocked> loc(#loc52)
    %46 = arith.cmpf olt, %cst_0, %45 : tensor<1x4096xf32, #blocked> loc(#loc122)
    %47 = arith.select %46, %cst_0, %45 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc123)
    %48 = arith.select %11, %47, %cst_0 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc56)
    %49 = arith.cmpf ogt, %cst_1, %45 : tensor<1x4096xf32, #blocked> loc(#loc124)
    %50 = arith.select %49, %cst_1, %45 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc125)
    %51 = arith.select %11, %50, %cst_1 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc60)
    %52 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc61)
    %53 = tt.addptr %52, %7 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc61)
    %54 = arith.truncf %45 : tensor<1x4096xf32, #blocked> to tensor<1x4096xbf16, #blocked> loc(#loc62)
    tt.store %53, %54, %11 : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc62)
    %55 = "tt.reduce"(%48) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc64)), %arg16: f32 loc(callsite(#loc1 at #loc64))):
      %117 = arith.cmpf olt, %arg15, %arg16 : f32 loc(#loc174)
      %118 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc175)
      %119 = arith.ori %117, %118 : i1 loc(#loc176)
      %120 = arith.select %119, %arg15, %arg16 : f32 loc(#loc177)
      tt.reduce.return %120 : f32 loc(#loc126)
    }) : (tensor<1x4096xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc126)
    %56 = ttg.convert_layout %55 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc67)
    %57 = tt.expand_dims %56 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc68)
    %58 = tt.expand_dims %55 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc68)
    %59 = "tt.reduce"(%51) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc70)), %arg16: f32 loc(callsite(#loc1 at #loc70))):
      %117 = arith.cmpf ogt, %arg15, %arg16 : f32 loc(#loc178)
      %118 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc179)
      %119 = arith.ori %117, %118 : i1 loc(#loc180)
      %120 = arith.select %119, %arg15, %arg16 : f32 loc(#loc181)
      tt.reduce.return %120 : f32 loc(#loc132)
    }) : (tensor<1x4096xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc132)
    %60 = ttg.convert_layout %59 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc73)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc74)
    %62 = tt.expand_dims %59 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc74)
    %63 = tt.addptr %arg4, %0 : !tt.ptr<bf16>, i32 loc(#loc75)
    %64 = arith.truncf %57 : tensor<1x1xf32, #blocked1> to tensor<1x1xbf16, #blocked1> loc(#loc67)
    %65 = tt.splat %63 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc67)
    %66 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc67)
    tt.store %65, %64, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc67)
    %67 = tt.addptr %arg5, %0 : !tt.ptr<bf16>, i32 loc(#loc76)
    %68 = arith.truncf %61 : tensor<1x1xf32, #blocked1> to tensor<1x1xbf16, #blocked1> loc(#loc73)
    %69 = tt.splat %67 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc73)
    tt.store %69, %68, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc73)
    %70 = tt.addptr %arg6, %0 : !tt.ptr<bf16>, i32 loc(#loc77)
    %71 = tt.splat %70 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc78)
    tt.store %71, %64, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc78)
    %72 = tt.addptr %arg7, %0 : !tt.ptr<bf16>, i32 loc(#loc79)
    %73 = tt.splat %72 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc80)
    tt.store %73, %68, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc80)
    %74 = tt.addptr %arg8, %0 : !tt.ptr<bf16>, i32 loc(#loc81)
    %75 = tt.splat %74 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc82)
    tt.store %75, %64, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc82)
    %76 = tt.addptr %arg9, %0 : !tt.ptr<bf16>, i32 loc(#loc83)
    %77 = tt.splat %76 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc84)
    tt.store %77, %68, %66 : tensor<1x1x!tt.ptr<bf16>, #blocked1> loc(#loc84)
    %78 = tt.load %53, %11, %cst_12 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc85)
    %79 = arith.extf %78 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc86)
    %80 = arith.cmpf olt, %58, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc138)
    %81 = arith.cmpf une, %58, %58 : tensor<1x1xf32, #blocked> loc(#loc139)
    %82 = arith.ori %80, %81 : tensor<1x1xi1, #blocked> loc(#loc140)
    %83 = arith.select %82, %58, %cst_5 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc141)
    %84 = arith.subf %cst_5, %83 : tensor<1x1xf32, #blocked> loc(#loc88)
    %85 = arith.cmpf ogt, %62, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc142)
    %86 = arith.cmpf une, %62, %62 : tensor<1x1xf32, #blocked> loc(#loc143)
    %87 = arith.ori %85, %86 : tensor<1x1xi1, #blocked> loc(#loc144)
    %88 = arith.select %87, %62, %cst_5 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc145)
    %89 = arith.cmpf ogt, %84, %88 : tensor<1x1xf32, #blocked> loc(#loc146)
    %90 = arith.cmpf une, %84, %84 : tensor<1x1xf32, #blocked> loc(#loc147)
    %91 = arith.ori %89, %90 : tensor<1x1xi1, #blocked> loc(#loc148)
    %92 = arith.select %91, %84, %88 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc149)
    %93 = arith.mulf %92, %cst_6 : tensor<1x1xf32, #blocked> loc(#loc91)
    %94 = arith.cmpf ogt, %93, %cst_8 : tensor<1x1xf32, #blocked> loc(#loc150)
    %95 = arith.cmpf une, %93, %93 : tensor<1x1xf32, #blocked> loc(#loc151)
    %96 = arith.ori %94, %95 : tensor<1x1xi1, #blocked> loc(#loc152)
    %97 = arith.select %96, %93, %cst_8 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc153)
    %98 = arith.divf %cst_7, %97 : tensor<1x1xf32, #blocked> loc(#loc93)
    %99 = tt.broadcast %98 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc94)
    %100 = arith.mulf %79, %99 : tensor<1x4096xf32, #blocked> loc(#loc94)
    %101 = tt.extern_elementwise %100 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x4096xf32, #blocked>) -> tensor<1x4096xf32, #blocked> loc(#loc95)
    %102 = arith.cmpf ogt, %101, %cst_9 : tensor<1x4096xf32, #blocked> loc(#loc154)
    %103 = arith.cmpf une, %101, %101 : tensor<1x4096xf32, #blocked> loc(#loc155)
    %104 = arith.ori %102, %103 : tensor<1x4096xi1, #blocked> loc(#loc156)
    %105 = arith.select %104, %101, %cst_9 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc157)
    %106 = arith.cmpf olt, %105, %cst_10 : tensor<1x4096xf32, #blocked> loc(#loc158)
    %107 = arith.cmpf une, %105, %105 : tensor<1x4096xf32, #blocked> loc(#loc159)
    %108 = arith.ori %106, %107 : tensor<1x4096xi1, #blocked> loc(#loc160)
    %109 = arith.select %108, %105, %cst_10 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc161)
    %110 = arith.fptosi %109 : tensor<1x4096xf32, #blocked> to tensor<1x4096xi8, #blocked> loc(#loc98)
    %111 = tt.splat %arg10 : !tt.ptr<i8> -> tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc99)
    %112 = tt.addptr %111, %7 : tensor<1x4096x!tt.ptr<i8>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc99)
    tt.store %112, %110, %11 : tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc100)
    %113 = tt.splat %arg11 : !tt.ptr<i8> -> tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc101)
    %114 = tt.addptr %113, %7 : tensor<1x4096x!tt.ptr<i8>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc101)
    tt.store %114, %110, %11 : tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc102)
    %115 = tt.splat %arg12 : !tt.ptr<i8> -> tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc103)
    %116 = tt.addptr %115, %7 : tensor<1x4096x!tt.ptr<i8>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc103)
    tt.store %116, %110, %11 : tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc104)
    tt.return loc(#loc105)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":26:37)
#loc5 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":34:29)
#loc6 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:46)
#loc7 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:41)
#loc8 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:34)
#loc9 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:59)
#loc10 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:51)
#loc11 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:112)
#loc12 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":44:62)
#loc13 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":46:66)
#loc14 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc16 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc17 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc18 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc19 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc21 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc28 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":48:16)
#loc29 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":49:16)
#loc30 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:51)
#loc31 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:113)
#loc32 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:42)
#loc33 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:35)
#loc34 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:49)
#loc35 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:35)
#loc36 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:49)
#loc37 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:102)
#loc38 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":62:35)
#loc39 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":62:42)
#loc40 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:35)
#loc41 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:42)
#loc42 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:95)
#loc43 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":65:24)
#loc44 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":67:24)
#loc45 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":69:24)
#loc46 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":70:32)
#loc47 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":71:24)
#loc48 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":74:24)
#loc49 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":76:24)
#loc50 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":77:24)
#loc51 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":79:24)
#loc52 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":80:24)
#loc53 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc54 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":82:47)
#loc55 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc56 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":83:50)
#loc57 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc58 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":84:47)
#loc59 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc60 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":85:50)
#loc61 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":86:29)
#loc62 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":86:53)
#loc63 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc65 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc66 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc67 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":89:37)
#loc68 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":87:43)
#loc69 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc71 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc72 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc73 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":90:37)
#loc74 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":88:43)
#loc75 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":89:25)
#loc76 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":90:25)
#loc77 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":91:25)
#loc78 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":91:37)
#loc79 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":92:25)
#loc80 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":92:37)
#loc81 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":93:25)
#loc82 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":93:37)
#loc83 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":94:25)
#loc84 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":94:37)
#loc85 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:53)
#loc86 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:115)
#loc87 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":103:46)
#loc88 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":104:17)
#loc89 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":105:46)
#loc90 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":106:46)
#loc91 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":108:24)
#loc92 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":111:46)
#loc93 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":114:25)
#loc94 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":117:24)
#loc95 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":118:36)
#loc96 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":121:46)
#loc97 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":123:46)
#loc98 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":125:25)
#loc99 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":126:29)
#loc100 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":126:53)
#loc101 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":127:30)
#loc102 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":127:54)
#loc103 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":128:30)
#loc104 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":128:54)
#loc105 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":95:4)
#loc106 = loc(fused[#loc7, #loc6])
#loc107 = loc(fused[#loc9, #loc3])
#loc108 = loc(callsite(#loc14 at #loc15))
#loc110 = loc(callsite(#loc16 at #loc14))
#loc111 = loc(callsite(#loc17 at #loc14))
#loc112 = loc(callsite(#loc18 at #loc14))
#loc113 = loc(callsite(#loc19 at #loc14))
#loc114 = loc(callsite(#loc20 at #loc14))
#loc115 = loc(callsite(#loc21 at #loc14))
#loc116 = loc(callsite(#loc22 at #loc14))
#loc117 = loc(callsite(#loc23 at #loc14))
#loc118 = loc(callsite(#loc24 at #loc14))
#loc119 = loc(callsite(#loc25 at #loc14))
#loc120 = loc(callsite(#loc26 at #loc14))
#loc121 = loc(callsite(#loc27 at #loc14))
#loc122 = loc(callsite(#loc53 at #loc54))
#loc123 = loc(callsite(#loc55 at #loc54))
#loc124 = loc(callsite(#loc57 at #loc58))
#loc125 = loc(callsite(#loc59 at #loc58))
#loc126 = loc(callsite(#loc63 at #loc64))
#loc128 = loc(callsite(#loc53 at #loc63))
#loc129 = loc(callsite(#loc65 at #loc63))
#loc130 = loc(callsite(#loc66 at #loc63))
#loc131 = loc(callsite(#loc55 at #loc63))
#loc132 = loc(callsite(#loc69 at #loc70))
#loc134 = loc(callsite(#loc57 at #loc69))
#loc135 = loc(callsite(#loc71 at #loc69))
#loc136 = loc(callsite(#loc72 at #loc69))
#loc137 = loc(callsite(#loc59 at #loc69))
#loc138 = loc(callsite(#loc53 at #loc87))
#loc139 = loc(callsite(#loc65 at #loc87))
#loc140 = loc(callsite(#loc66 at #loc87))
#loc141 = loc(callsite(#loc55 at #loc87))
#loc142 = loc(callsite(#loc57 at #loc89))
#loc143 = loc(callsite(#loc71 at #loc89))
#loc144 = loc(callsite(#loc72 at #loc89))
#loc145 = loc(callsite(#loc59 at #loc89))
#loc146 = loc(callsite(#loc57 at #loc90))
#loc147 = loc(callsite(#loc71 at #loc90))
#loc148 = loc(callsite(#loc72 at #loc90))
#loc149 = loc(callsite(#loc59 at #loc90))
#loc150 = loc(callsite(#loc57 at #loc92))
#loc151 = loc(callsite(#loc71 at #loc92))
#loc152 = loc(callsite(#loc72 at #loc92))
#loc153 = loc(callsite(#loc59 at #loc92))
#loc154 = loc(callsite(#loc57 at #loc96))
#loc155 = loc(callsite(#loc71 at #loc96))
#loc156 = loc(callsite(#loc72 at #loc96))
#loc157 = loc(callsite(#loc59 at #loc96))
#loc158 = loc(callsite(#loc53 at #loc97))
#loc159 = loc(callsite(#loc65 at #loc97))
#loc160 = loc(callsite(#loc66 at #loc97))
#loc161 = loc(callsite(#loc55 at #loc97))
#loc162 = loc(callsite(#loc110 at #loc15))
#loc163 = loc(callsite(#loc111 at #loc15))
#loc164 = loc(callsite(#loc112 at #loc15))
#loc165 = loc(callsite(#loc113 at #loc15))
#loc166 = loc(callsite(#loc114 at #loc15))
#loc167 = loc(callsite(#loc115 at #loc15))
#loc168 = loc(callsite(#loc116 at #loc15))
#loc169 = loc(callsite(#loc117 at #loc15))
#loc170 = loc(callsite(#loc118 at #loc15))
#loc171 = loc(callsite(#loc119 at #loc15))
#loc172 = loc(callsite(#loc120 at #loc15))
#loc173 = loc(callsite(#loc121 at #loc15))
#loc174 = loc(callsite(#loc128 at #loc64))
#loc175 = loc(callsite(#loc129 at #loc64))
#loc176 = loc(callsite(#loc130 at #loc64))
#loc177 = loc(callsite(#loc131 at #loc64))
#loc178 = loc(callsite(#loc134 at #loc70))
#loc179 = loc(callsite(#loc135 at #loc70))
#loc180 = loc(callsite(#loc136 at #loc70))
#loc181 = loc(callsite(#loc137 at #loc70))
