//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<60>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<50>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused_addmm_0_param_1];
	ld.param.u64 	%rd6, [triton_red_fused_addmm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r5, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r1, %r5, 1;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 9, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r6, %r3, %r1;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r6, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	and.b32  	%r7, %r2, 511;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r4, %r6, 3072;
	.loc	1 30 40                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:30:40
	cvt.u64.u32 	%rd1, %r7;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd7, %r7, 2;
	add.s64 	%rd5, %rd6, %rd7;
	mov.b16 	%rs3, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs2, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs2 }, [ %rd5 + 0 ];
	// end inline asm
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us.preheader
	.loc	1 0 41                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:0:41
	cvt.u32.u64 	%r15, %rd1;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	or.b32  	%r16, %r15, %r4;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd39, %r16, 2;
	add.s64 	%rd28, %rd3, %rd39;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs26, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs26 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd29, %rd5, 1024;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs28, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs28 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	cvt.s64.s32 	%rd40, %r4;
	add.s64 	%rd41, %rd40, %rd1;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd3, %rd42;
	add.s64 	%rd30, %rd43, 1024;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs30, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs30 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	mov.b32 	%r17, {%rs2, %rs28};
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs48, %rs49}, %r17;
	cvt.f32.bf16 	%f4, %rs49;
	cvt.f32.bf16 	%f5, %rs48;
	mov.f32 	%f6, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f7, %f6, %f5;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f8, %f7, 0f3FB8AA3B;
	ex2.approx.f32 	%f9, %f8;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f10, %f9, 0f3F800000;
	mov.f32 	%f11, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f12, %f11, %f10;
$L__tmp2:
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	mov.b32 	%r18, {%rs26, %rs30};
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs50, %rs51}, %r18;
	cvt.f32.bf16 	%f13, %rs51;
	cvt.f32.bf16 	%f14, %rs50;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f15, %f6, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f16, %f15, 0f3FB8AA3B;
	ex2.approx.f32 	%f17, %f16;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f18, %f17, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f19, %f11, %f18;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f20, %f19, %f4;
	mul.f32 	%f21, %f12, %f5;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f22, %f21, %f14, 0f00000000;
	fma.rn.f32 	%f23, %f20, %f13, %f22;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd31, %rd5, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs32, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs32 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r19, %r4, %r15;
	add.s32 	%r20, %r19, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd44, %r20, 2;
	add.s64 	%rd32, %rd3, %rd44;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs34, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs34 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd33, %rd5, 3072;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs36, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs36 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r21, %r19, 1536;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd45, %r21, 2;
	add.s64 	%rd34, %rd3, %rd45;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs38, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs38 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	mov.b32 	%r22, {%rs32, %rs36};
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs52, %rs53}, %r22;
	cvt.f32.bf16 	%f24, %rs53;
	cvt.f32.bf16 	%f25, %rs52;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f6, %f25;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f27, %f26, 0f3FB8AA3B;
	ex2.approx.f32 	%f28, %f27;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f29, %f28, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f30, %f11, %f29;
$L__tmp6:
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	mov.b32 	%r23, {%rs34, %rs38};
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs54, %rs55}, %r23;
	cvt.f32.bf16 	%f31, %rs55;
	cvt.f32.bf16 	%f32, %rs54;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f33, %f6, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f34, %f33, 0f3FB8AA3B;
	ex2.approx.f32 	%f35, %f34;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f36, %f35, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f37, %f11, %f36;
$L__tmp8:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f38, %f37, %f24;
	mul.f32 	%f39, %f30, %f25;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f40, %f39, %f32, %f23;
	fma.rn.f32 	%f41, %f38, %f31, %f40;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd35, %rd5, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs40, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs40 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r24, %r19, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd46, %r24, 2;
	add.s64 	%rd36, %rd3, %rd46;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs42, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs42 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd37, %rd5, 5120;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs44, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs44 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r25, %r19, 2560;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd47, %r25, 2;
	add.s64 	%rd38, %rd3, %rd47;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs46, %rs3;
	@%p1 ld.global.L1::evict_first.b16 { %rs46 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	mov.b32 	%r26, {%rs40, %rs44};
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs56, %rs57}, %r26;
	cvt.f32.bf16 	%f42, %rs57;
	cvt.f32.bf16 	%f43, %rs56;
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f44, %f6, %f43;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f45, %f44, 0f3FB8AA3B;
	ex2.approx.f32 	%f46, %f45;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f47, %f46, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f48, %f11, %f47;
$L__tmp10:
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	mov.b32 	%r27, {%rs42, %rs46};
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs58, %rs59}, %r27;
	cvt.f32.bf16 	%f49, %rs59;
	cvt.f32.bf16 	%f50, %rs58;
$L__tmp11:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f51, %f6, %f42;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f52, %f51, 0f3FB8AA3B;
	ex2.approx.f32 	%f53, %f52;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f54, %f53, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f55, %f11, %f54;
$L__tmp12:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f56, %f55, %f42;
	mul.f32 	%f57, %f48, %f43;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f58, %f57, %f50, %f41;
	fma.rn.f32 	%f78, %f56, %f49, %f58;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 25                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:0:25
	cvt.u32.u64 	%r8, %rd1;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	or.b32  	%r9, %r8, %r4;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd19, %r9, 2;
	add.s64 	%rd8, %rd3, %rd19;
	mov.pred 	%p3, 0;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs4, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs4 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd9, %rd5, 1024;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs6, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs6 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	cvt.s64.s32 	%rd20, %r4;
	add.s64 	%rd21, %rd20, %rd1;
	shl.b64 	%rd22, %rd21, 1;
	add.s64 	%rd23, %rd3, %rd22;
	add.s64 	%rd10, %rd23, 1024;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs8, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs8 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd11, %rd5, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs10, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs10 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r10, %r4, %r8;
	add.s32 	%r11, %r10, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd24, %r11, 2;
	add.s64 	%rd12, %rd3, %rd24;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs12, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs12 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd13, %rd5, 3072;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs14, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs14 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r12, %r10, 1536;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd25, %r12, 2;
	add.s64 	%rd14, %rd3, %rd25;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs16, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs16 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd15, %rd5, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs18, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs18 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r13, %r10, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd26, %r13, 2;
	add.s64 	%rd16, %rd3, %rd26;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs20, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs20 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd17, %rd5, 5120;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs22, %rs3;
	@%p1 ld.global.L1::evict_last.b16 { %rs22 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r14, %r10, 2560;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd27, %r14, 2;
	add.s64 	%rd18, %rd3, %rd27;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u16 %rs24, %rs3;
	@%p3 ld.global.L1::evict_first.b16 { %rs24 }, [ %rd18 + 0 ];
	// end inline asm
	mov.f32 	%f78, 0f00000000;
$L__BB0_3:                              // %.split2.us
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r37, %r2, 31;
	and.b32  	%r38, %r2, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r39, %r1, %r38;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p30, %r39, 9216;
$L__tmp13:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r40, %f78;
	shfl.sync.bfly.b32	%r41, %r40, 16, 31, -1;
	mov.b32 	%f59, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f78, %f59;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r42, %f60;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f61, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r44, %f62;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f63, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r46, %f64;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f65, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f66;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f67, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p25, %r37, 0;
	shr.u32 	%r50, %r2, 3;
	and.b32  	%r51, %r50, 60;
	shl.b32 	%r52, %r3, 6;
	or.b32  	%r53, %r52, %r51;
	mov.u32 	%r54, global_smem;
	add.s32 	%r28, %r54, %r53;
	mov.b32 	%r29, %f68;
	// begin inline asm
	@%p25 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r2, 32;
	shl.b32 	%r55, %r2, 2;
	add.s32 	%r31, %r54, %r55;
	// begin inline asm
	@%p26 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r30;
	shfl.sync.bfly.b32	%r56, %r30, 8, 31, -1;
	mov.b32 	%f70, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f71;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f72, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f73;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f74, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f75;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f76, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r63, %r2, 15;
	setp.eq.s32 	%p31, %r63, 0;
	and.pred  	%p27, %p26, %p31;
	mov.b32 	%r33, %f77;
	// begin inline asm
	@%p27 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r64, %r54, %r52;
	ld.shared.u32 	%r35, [%r64];
$L__tmp14:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	mad.lo.s32 	%r34, %r3, -60, %r64;
	mov.pred 	%p28, -1;
	// begin inline asm
	@%p28 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r65, %r38, 2;
	add.s32 	%r66, %r54, %r65;
	ld.shared.u32 	%r36, [%r66];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd49, %r39, 4;
	add.s64 	%rd48, %rd4, %rd49;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r67, %r2, 1022;
	setp.eq.s32 	%p32, %r67, 0;
	and.pred  	%p29, %p32, %p30;
	// begin inline asm
	@%p29 st.global.b32 [ %rd48 + 0 ], { %r36 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
