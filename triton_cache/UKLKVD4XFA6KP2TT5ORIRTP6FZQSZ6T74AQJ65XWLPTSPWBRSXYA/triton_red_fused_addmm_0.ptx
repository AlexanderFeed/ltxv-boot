//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<70>;
	.reg .f32 	%f<80>;
	.reg .b64 	%rd<26>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused_addmm_0_param_1];
	ld.param.u64 	%rd6, [triton_red_fused_addmm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r1, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r7, %r2, 1;
	and.b32  	%r8, %r7, 1022;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r3, %r1, 3072;
	.loc	1 30 40                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:30:40
	cvt.u64.u32 	%rd1, %r8;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd7, %r8, 2;
	add.s64 	%rd5, %rd6, %rd7;
	mov.b32 	%r6, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r5, %r6;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us.preheader
	.loc	1 0 41                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:0:41
	cvt.u32.u64 	%r34, %rd1;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	or.b32  	%r35, %r34, %r3;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd21, %r35, 2;
	add.s64 	%rd16, %rd3, %rd21;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r24, %r6;
	@%p1 ld.global.L1::evict_first.b32 { %r24 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd17, %rd5, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r26, %r6;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r36, %r3, %r34;
	add.s32 	%r37, %r36, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd22, %r37, 2;
	add.s64 	%rd18, %rd3, %rd22;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r28, %r6;
	@%p1 ld.global.L1::evict_first.b32 { %r28 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd19, %rd5, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r30, %r6;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r38, %r36, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd23, %r38, 2;
	add.s64 	%rd20, %rd3, %rd23;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r32, %r6;
	@%p1 ld.global.L1::evict_first.b32 { %r32 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs1, %rs2}, %r5;
	cvt.f32.bf16 	%f4, %rs2;
	cvt.f32.bf16 	%f5, %rs1;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs3, %rs4}, %r24;
	cvt.f32.bf16 	%f6, %rs3;
	cvt.f32.bf16 	%f7, %rs4;
	mov.f32 	%f8, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f9, %f8, %f5;
	sub.f32 	%f10, %f8, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f11, %f9, 0f3FB8AA3B;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f10, 0f3FB8AA3B;
	ex2.approx.f32 	%f14, %f13;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f15, %f12, 0f3F800000;
	add.f32 	%f16, %f14, 0f3F800000;
	mov.f32 	%f17, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f18, %f17, %f15;
	div.full.f32 	%f19, %f17, %f16;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f20, %f18, %f5;
	mul.f32 	%f21, %f19, %f4;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f22, %f21, %f7, 0f00000000;
	fma.rn.f32 	%f23, %f20, %f6, 0f00000000;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs5, %rs6}, %r26;
	cvt.f32.bf16 	%f24, %rs6;
	cvt.f32.bf16 	%f25, %rs5;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs7, %rs8}, %r28;
	cvt.f32.bf16 	%f26, %rs8;
	cvt.f32.bf16 	%f27, %rs7;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f28, %f8, %f25;
	sub.f32 	%f29, %f8, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f30, %f28, 0f3FB8AA3B;
	ex2.approx.f32 	%f31, %f30;
	mul.f32 	%f32, %f29, 0f3FB8AA3B;
	ex2.approx.f32 	%f33, %f32;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f34, %f31, 0f3F800000;
	add.f32 	%f35, %f33, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f36, %f17, %f34;
	div.full.f32 	%f37, %f17, %f35;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f38, %f37, %f24;
	mul.f32 	%f39, %f36, %f25;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f40, %f39, %f27, %f23;
	fma.rn.f32 	%f41, %f38, %f26, %f22;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs9, %rs10}, %r30;
	cvt.f32.bf16 	%f42, %rs10;
	cvt.f32.bf16 	%f43, %rs9;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs11, %rs12}, %r32;
	cvt.f32.bf16 	%f44, %rs11;
	cvt.f32.bf16 	%f45, %rs12;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f46, %f8, %f43;
	sub.f32 	%f47, %f8, %f42;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f48, %f46, 0f3FB8AA3B;
	ex2.approx.f32 	%f49, %f48;
	mul.f32 	%f50, %f47, 0f3FB8AA3B;
	ex2.approx.f32 	%f51, %f50;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f52, %f49, 0f3F800000;
	add.f32 	%f53, %f51, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f54, %f17, %f52;
	div.full.f32 	%f55, %f17, %f53;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f56, %f54, %f43;
	mul.f32 	%f57, %f55, %f42;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f58, %f57, %f45, %f41;
	fma.rn.f32 	%f59, %f56, %f44, %f40;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	add.f32 	%f79, %f59, %f58;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 37                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:0:37
	cvt.u32.u64 	%r19, %rd1;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	or.b32  	%r20, %r19, %r3;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd13, %r20, 2;
	add.s64 	%rd8, %rd3, %rd13;
	mov.pred 	%p3, 0;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r9, %r6;
	@%p3 ld.global.L1::evict_first.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd9, %rd5, 2048;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r11, %r6;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r21, %r3, %r19;
	add.s32 	%r22, %r21, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd14, %r22, 2;
	add.s64 	%rd10, %rd3, %rd14;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r13, %r6;
	@%p3 ld.global.L1::evict_first.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd11, %rd5, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r15, %r6;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r23, %r21, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd15, %r23, 2;
	add.s64 	%rd12, %rd3, %rd15;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r17, %r6;
	@%p3 ld.global.L1::evict_first.b32 { %r17 }, [ %rd12 + 0 ];
	// end inline asm
	mov.f32 	%f79, 0f00000000;
$L__BB0_3:                              // %.split2.us
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	and.b32  	%r46, %r2, 31;
$L__tmp7:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f79;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f60, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f79, %f60;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f61;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f62, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f63;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f64, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r53, %f65;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f66, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f67;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f68, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p13, %r46, 0;
	shr.u32 	%r57, %r2, 3;
	and.b32  	%r58, %r57, 60;
	mov.u32 	%r59, global_smem;
	add.s32 	%r39, %r59, %r58;
	mov.b32 	%r40, %f69;
	// begin inline asm
	@%p13 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p14, %r2, 16;
	shl.b32 	%r60, %r2, 2;
	add.s32 	%r42, %r59, %r60;
	// begin inline asm
	@%p14 ld.shared.b32 %r41, [ %r42 + 0 ];
	// end inline asm
	mov.b32 	%f70, %r41;
	shfl.sync.bfly.b32	%r61, %r41, 8, 31, -1;
	mov.b32 	%f71, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r62, %f72;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f73, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f74;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f75, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f76;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f77, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r68, %r2, 15;
	setp.eq.s32 	%p18, %r68, 0;
	and.pred  	%p15, %p14, %p18;
	mov.b32 	%r44, %f78;
	// begin inline asm
	@%p15 st.shared.b32 [ %r42 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r45, [global_smem];
$L__tmp8:
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd25, %r1, 4;
	add.s64 	%rd24, %rd4, %rd25;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r69, %r2, 511;
	setp.eq.s32 	%p19, %r69, 0;
	and.pred  	%p16, %p2, %p19;
	// begin inline asm
	@%p16 st.global.b32 [ %rd24 + 0 ], { %r45 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
