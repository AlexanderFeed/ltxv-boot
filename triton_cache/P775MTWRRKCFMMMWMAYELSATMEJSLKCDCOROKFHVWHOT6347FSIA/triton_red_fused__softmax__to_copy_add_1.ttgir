#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0)
#loc1 = loc(unknown)
#loc63 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":170:28)
#loc64 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":82:35)
#loc74 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:58)
#loc105 = loc(callsite(#loc1 at #loc63))
#loc117 = loc(callsite(#loc1 at #loc74))
#loc124 = loc(callsite(#loc105 at #loc64))
#loc131 = loc(callsite(#loc117 at #loc64))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__softmax__to_copy_add_1(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<15> : tensor<1x512xi64, #blocked1> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<1x512xi64, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<8.000000e+00> : tensor<1x512xf32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<0.360673755> : tensor<1x512xf32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<1.250000e-01> : tensor<1x512xf32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<8> : tensor<1x512xi64, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<1x512xi64, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<0> : tensor<1x512xi64, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<0.000000e+00> : tensor<1x512xbf16, #blocked2> loc(#loc1)
    %cst_12 = arith.constant dense<true> : tensor<1x512xi1, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<512> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_14 = arith.constant dense<512> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<512> : tensor<1x512xi32, #blocked2> loc(#loc1)
    %cst_16 = arith.constant dense<0> : tensor<1x512xi64, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<16> : tensor<1x512xi64, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<8> : tensor<1x512xi64, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<1.250000e-01> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<0.360673755> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<8.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<64> : tensor<1x512xi64, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<32> : tensor<1x512xi64, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<15> : tensor<1x512xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc3)
    %3 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc3)
    %4 = tt.expand_dims %1 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc3)
    %5 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x512xi32, #blocked2> loc(#loc3)
    %6 = tt.expand_dims %3 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc3)
    %7 = arith.remsi %0, %c512_i32 : i32 loc(#loc4)
    %8 = arith.divsi %0, %c512_i32 : i32 loc(#loc5)
    %9 = arith.cmpi slt, %4, %cst_14 : tensor<1x512xi32, #blocked> loc(#loc6)
    %10 = arith.cmpi slt, %5, %cst_15 : tensor<1x512xi32, #blocked2> loc(#loc6)
    %11 = arith.cmpi slt, %6, %cst_13 : tensor<1x512xi32, #blocked1> loc(#loc6)
    %12 = arith.muli %0, %c512_i32 : i32 loc(#loc7)
    %13 = tt.splat %12 : i32 -> tensor<1x512xi32, #blocked2> loc(#loc89)
    %14 = arith.addi %5, %13 : tensor<1x512xi32, #blocked2> loc(#loc8)
    %15 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked2> loc(#loc9)
    %16 = tt.addptr %15, %14 : tensor<1x512x!tt.ptr<bf16>, #blocked2>, tensor<1x512xi32, #blocked2> loc(#loc9)
    %17 = tt.load %16, %10, %cst_11 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked2> loc(#loc10)
    %18 = ttg.convert_layout %17 : tensor<1x512xbf16, #blocked2> -> tensor<1x512xbf16, #blocked> loc(#loc11)
    %19 = arith.extf %18 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc11)
    %20 = arith.muli %7, %c-1_i32 : i32 loc(#loc12)
    %21 = tt.splat %20 : i32 -> tensor<1x512xi32, #blocked> loc(#loc90)
    %22 = tt.splat %20 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc90)
    %23 = arith.addi %4, %21 : tensor<1x512xi32, #blocked> loc(#loc13)
    %24 = arith.addi %6, %22 : tensor<1x512xi32, #blocked1> loc(#loc13)
    %25 = arith.extsi %23 : tensor<1x512xi32, #blocked> to tensor<1x512xi64, #blocked> loc(#loc14)
    %26 = arith.extsi %24 : tensor<1x512xi32, #blocked1> to tensor<1x512xi64, #blocked1> loc(#loc14)
    %27 = arith.cmpi sgt, %25, %cst_16 : tensor<1x512xi64, #blocked> loc(#loc14)
    %28 = arith.cmpi sgt, %26, %cst_10 : tensor<1x512xi64, #blocked1> loc(#loc14)
    %29 = arith.extui %27 : tensor<1x512xi1, #blocked> to tensor<1x512xi64, #blocked> loc(#loc15)
    %30 = arith.extui %28 : tensor<1x512xi1, #blocked1> to tensor<1x512xi64, #blocked1> loc(#loc15)
    %31 = arith.muli %29, %cst_17 : tensor<1x512xi64, #blocked> loc(#loc16)
    %32 = arith.muli %30, %cst_9 : tensor<1x512xi64, #blocked1> loc(#loc16)
    %33 = math.absi %23 : tensor<1x512xi32, #blocked> loc(#loc17)
    %34 = math.absi %24 : tensor<1x512xi32, #blocked1> loc(#loc17)
    %35 = arith.extsi %33 : tensor<1x512xi32, #blocked> to tensor<1x512xi64, #blocked> loc(#loc18)
    %36 = arith.extsi %34 : tensor<1x512xi32, #blocked1> to tensor<1x512xi64, #blocked1> loc(#loc18)
    %37 = arith.cmpi slt, %35, %cst_18 : tensor<1x512xi64, #blocked> loc(#loc18)
    %38 = arith.cmpi slt, %36, %cst_8 : tensor<1x512xi64, #blocked1> loc(#loc18)
    %39 = arith.sitofp %33 : tensor<1x512xi32, #blocked> to tensor<1x512xf32, #blocked> loc(#loc19)
    %40 = arith.sitofp %34 : tensor<1x512xi32, #blocked1> to tensor<1x512xf32, #blocked1> loc(#loc19)
    %41 = arith.mulf %39, %cst_19 : tensor<1x512xf32, #blocked> loc(#loc20)
    %42 = arith.mulf %40, %cst_7 : tensor<1x512xf32, #blocked1> loc(#loc20)
    %43 = math.log %41 : tensor<1x512xf32, #blocked> loc(#loc21)
    %44 = math.log %42 : tensor<1x512xf32, #blocked1> loc(#loc21)
    %45 = arith.mulf %43, %cst_20 : tensor<1x512xf32, #blocked> loc(#loc22)
    %46 = arith.mulf %44, %cst_6 : tensor<1x512xf32, #blocked1> loc(#loc22)
    %47 = arith.mulf %45, %cst_21 : tensor<1x512xf32, #blocked> loc(#loc23)
    %48 = arith.mulf %46, %cst_5 : tensor<1x512xf32, #blocked1> loc(#loc23)
    %49 = arith.fptosi %47 : tensor<1x512xf32, #blocked> to tensor<1x512xi64, #blocked> loc(#loc24)
    %50 = arith.fptosi %48 : tensor<1x512xf32, #blocked1> to tensor<1x512xi64, #blocked1> loc(#loc24)
    %51 = arith.addi %49, %cst_18 : tensor<1x512xi64, #blocked> loc(#loc25)
    %52 = arith.addi %50, %cst_8 : tensor<1x512xi64, #blocked1> loc(#loc25)
    %53 = arith.cmpi slt, %51, %cst_24 : tensor<1x512xi64, #blocked> loc(#loc91)
    %54 = arith.cmpi slt, %52, %cst_3 : tensor<1x512xi64, #blocked1> loc(#loc91)
    %55 = arith.select %53, %51, %cst_24 : tensor<1x512xi1, #blocked>, tensor<1x512xi64, #blocked> loc(#loc92)
    %56 = arith.select %54, %52, %cst_3 : tensor<1x512xi1, #blocked1>, tensor<1x512xi64, #blocked1> loc(#loc92)
    %57 = arith.select %37, %35, %55 : tensor<1x512xi1, #blocked>, tensor<1x512xi64, #blocked> loc(#loc29)
    %58 = arith.select %38, %36, %56 : tensor<1x512xi1, #blocked1>, tensor<1x512xi64, #blocked1> loc(#loc29)
    %59 = arith.addi %31, %57 : tensor<1x512xi64, #blocked> loc(#loc30)
    %60 = arith.addi %32, %58 : tensor<1x512xi64, #blocked1> loc(#loc30)
    %61 = arith.addi %59, %cst_23 : tensor<1x512xi64, #blocked> loc(#loc31)
    %62 = arith.addi %60, %cst_4 : tensor<1x512xi64, #blocked1> loc(#loc31)
    %63 = arith.cmpi slt, %59, %cst_16 : tensor<1x512xi64, #blocked> loc(#loc32)
    %64 = arith.cmpi slt, %60, %cst_10 : tensor<1x512xi64, #blocked1> loc(#loc32)
    %65 = arith.select %63, %61, %59 : tensor<1x512xi1, #blocked>, tensor<1x512xi64, #blocked> loc(#loc33)
    %66 = arith.select %64, %62, %60 : tensor<1x512xi1, #blocked1>, tensor<1x512xi64, #blocked1> loc(#loc33)
    %67 = arith.cmpi sge, %66, %cst_10 : tensor<1x512xi64, #blocked1> loc(#loc34)
    %68 = arith.cmpi slt, %66, %cst_4 : tensor<1x512xi64, #blocked1> loc(#loc35)
    %69 = arith.andi %67, %68 : tensor<1x512xi1, #blocked1> loc(#loc36)
    %70 = arith.xori %11, %cst_12 : tensor<1x512xi1, #blocked1> loc(#loc37)
    %71 = arith.ori %69, %70 : tensor<1x512xi1, #blocked1> loc(#loc38)
    tt.assert %71, "index out of bounds: 0 <= tmp28 < 32" : tensor<1x512xi1, #blocked1> loc(#loc39)
    %72 = arith.muli %65, %cst_22 : tensor<1x512xi64, #blocked> loc(#loc40)
    %73 = arith.extsi %8 : i32 to i64 loc(#loc41)
    %74 = tt.splat %73 : i64 -> tensor<1x512xi64, #blocked> loc(#loc41)
    %75 = arith.addi %74, %72 : tensor<1x512xi64, #blocked> loc(#loc41)
    %76 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc42)
    %77 = tt.addptr %76, %75 : tensor<1x512x!tt.ptr<bf16>, #blocked>, tensor<1x512xi64, #blocked> loc(#loc42)
    %78 = tt.load %77, %9 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc43)
    %79 = arith.extf %78 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc44)
    %80 = arith.addf %19, %79 : tensor<1x512xf32, #blocked> loc(#loc45)
    %81 = arith.cmpf ogt, %cst, %80 : tensor<1x512xf32, #blocked> loc(#loc119)
    %82 = arith.select %81, %cst, %80 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc120)
    %83 = arith.cmpf oeq, %82, %cst : tensor<1x512xf32, #blocked> loc(#loc95)
    %84 = arith.subf %cst, %82 : tensor<1x512xf32, #blocked> loc(#loc96)
    %85 = math.exp %84 : tensor<1x512xf32, #blocked> loc(#loc121)
    %86 = arith.select %83, %cst_1, %85 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc98)
    %87 = arith.subf %80, %82 : tensor<1x512xf32, #blocked> loc(#loc99)
    %88 = math.exp %87 : tensor<1x512xf32, #blocked> loc(#loc122)
    %89 = arith.select %83, %cst_1, %88 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc101)
    %90 = arith.mulf %86, %cst_0 : tensor<1x512xf32, #blocked> loc(#loc102)
    %91 = arith.addf %90, %89 : tensor<1x512xf32, #blocked> loc(#loc103)
    %92 = arith.select %9, %82, %cst : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc60)
    %93 = arith.select %9, %91, %cst_0 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc61)
    %94 = "tt.reduce"(%92) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc105 at #loc64)), %arg6: f32 loc(callsite(#loc105 at #loc64))):
      %119 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc133)
      %120 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc134)
      %121 = arith.ori %119, %120 : i1 loc(#loc135)
      %122 = arith.select %121, %arg5, %arg6 : f32 loc(#loc136)
      tt.reduce.return %122 : f32 loc(#loc123)
    }) : (tensor<1x512xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc123)
    %95 = tt.expand_dims %94 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc110)
    %96 = arith.cmpf oeq, %95, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc111)
    %97 = tt.broadcast %95 : tensor<1x1xf32, #blocked> -> tensor<1x512xf32, #blocked> loc(#loc112)
    %98 = arith.subf %92, %97 : tensor<1x512xf32, #blocked> loc(#loc112)
    %99 = tt.broadcast %96 : tensor<1x1xi1, #blocked> -> tensor<1x512xi1, #blocked> loc(#loc113)
    %100 = arith.select %99, %cst_0, %98 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc113)
    %101 = math.exp %100 : tensor<1x512xf32, #blocked> loc(#loc129)
    %102 = arith.mulf %93, %101 : tensor<1x512xf32, #blocked> loc(#loc115)
    %103 = "tt.reduce"(%102) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc117 at #loc64)), %arg6: f32 loc(callsite(#loc117 at #loc64))):
      %119 = arith.addf %arg5, %arg6 : f32 loc(#loc137)
      tt.reduce.return %119 : f32 loc(#loc130)
    }) : (tensor<1x512xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc130)
    %104 = tt.expand_dims %103 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc76)
    %105 = tt.load %16, %10, %cst_11 evictionPolicy = evict_first : tensor<1x512x!tt.ptr<bf16>, #blocked2> loc(#loc77)
    %106 = ttg.convert_layout %105 : tensor<1x512xbf16, #blocked2> -> tensor<1x512xbf16, #blocked> loc(#loc78)
    %107 = arith.extf %106 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc78)
    tt.assert %71, "index out of bounds: 0 <= tmp66 < 32" : tensor<1x512xi1, #blocked1> loc(#loc79)
    %108 = tt.load %77, %9 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc80)
    %109 = arith.extf %108 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc81)
    %110 = arith.addf %107, %109 : tensor<1x512xf32, #blocked> loc(#loc82)
    %111 = arith.subf %110, %97 : tensor<1x512xf32, #blocked> loc(#loc83)
    %112 = math.exp %111 : tensor<1x512xf32, #blocked> loc(#loc84)
    %113 = tt.broadcast %104 : tensor<1x1xf32, #blocked> -> tensor<1x512xf32, #blocked> loc(#loc85)
    %114 = arith.divf %112, %113 : tensor<1x512xf32, #blocked> loc(#loc85)
    %115 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked2> loc(#loc86)
    %116 = tt.addptr %115, %14 : tensor<1x512x!tt.ptr<bf16>, #blocked2>, tensor<1x512xi32, #blocked2> loc(#loc86)
    %117 = arith.truncf %114 : tensor<1x512xf32, #blocked> to tensor<1x512xbf16, #blocked> loc(#loc87)
    %118 = ttg.convert_layout %117 : tensor<1x512xbf16, #blocked> -> tensor<1x512xbf16, #blocked2> loc(#loc87)
    tt.store %116, %118, %10 : tensor<1x512x!tt.ptr<bf16>, #blocked2> loc(#loc87)
    tt.return loc(#loc88)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":26:37)
#loc4 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":29:19)
#loc5 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":30:19)
#loc6 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":35:29)
#loc7 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":39:45)
#loc8 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":39:41)
#loc9 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":39:34)
#loc10 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":39:50)
#loc11 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":39:103)
#loc12 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":40:28)
#loc13 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":40:23)
#loc14 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":42:22)
#loc15 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":43:23)
#loc16 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":45:22)
#loc17 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":47:27)
#loc18 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":49:23)
#loc19 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":50:24)
#loc20 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":52:24)
#loc21 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":53:28)
#loc22 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":55:24)
#loc23 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":57:24)
#loc24 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":58:25)
#loc25 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":59:24)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc27 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":61:46)
#loc28 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc29 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":62:38)
#loc30 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":63:23)
#loc31 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":65:24)
#loc32 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":66:24)
#loc33 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":67:39)
#loc34 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:32)
#loc35 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:50)
#loc36 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:42)
#loc37 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:59)
#loc38 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:57)
#loc39 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":68:69)
#loc40 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":69:43)
#loc41 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":69:40)
#loc42 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":69:35)
#loc43 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":69:51)
#loc44 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":69:93)
#loc45 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":70:23)
#loc46 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":185:31)
#loc48 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":75:43)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc50 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:19)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:53)
#loc52 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":165:24)
#loc53 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:62)
#loc54 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:39)
#loc55 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:53)
#loc56 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:62)
#loc57 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:39)
#loc58 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":197:24)
#loc59 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":197:36)
#loc60 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":78:56)
#loc61 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":79:56)
#loc62 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc65 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc66 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc67 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":171:30)
#loc68 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:40)
#loc69 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:68)
#loc70 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:58)
#loc71 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc72 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:31)
#loc73 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc75 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc76 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":84:18)
#loc77 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":93:51)
#loc78 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":93:105)
#loc79 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":122:69)
#loc80 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":123:51)
#loc81 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":123:93)
#loc82 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":124:24)
#loc83 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":126:24)
#loc84 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":127:28)
#loc85 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":128:25)
#loc86 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":130:29)
#loc87 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":130:52)
#loc88 = loc("/tmp/torchinductor_root/55/c55ip4voqb5fnuuy4misfdoego3lewa4xzr4gdft7gzs6s35ebhb.py":87:4)
#loc89 = loc(fused[#loc8, #loc7])
#loc90 = loc(fused[#loc13, #loc12])
#loc91 = loc(callsite(#loc26 at #loc27))
#loc92 = loc(callsite(#loc28 at #loc27))
#loc93 = loc(callsite(#loc46 at #loc47))
#loc94 = loc(callsite(#loc49 at #loc47))
#loc95 = loc(callsite(#loc50 at #loc48))
#loc96 = loc(callsite(#loc51 at #loc48))
#loc97 = loc(callsite(#loc52 at #loc53))
#loc98 = loc(callsite(#loc54 at #loc48))
#loc99 = loc(callsite(#loc55 at #loc48))
#loc100 = loc(callsite(#loc52 at #loc56))
#loc101 = loc(callsite(#loc57 at #loc48))
#loc102 = loc(callsite(#loc58 at #loc48))
#loc103 = loc(callsite(#loc59 at #loc48))
#loc104 = loc(callsite(#loc62 at #loc63))
#loc106 = loc(callsite(#loc46 at #loc62))
#loc107 = loc(callsite(#loc65 at #loc62))
#loc108 = loc(callsite(#loc66 at #loc62))
#loc109 = loc(callsite(#loc49 at #loc62))
#loc110 = loc(callsite(#loc67 at #loc64))
#loc111 = loc(callsite(#loc68 at #loc64))
#loc112 = loc(callsite(#loc69 at #loc64))
#loc113 = loc(callsite(#loc70 at #loc64))
#loc114 = loc(callsite(#loc52 at #loc71))
#loc115 = loc(callsite(#loc72 at #loc64))
#loc116 = loc(callsite(#loc73 at #loc74))
#loc118 = loc(callsite(#loc75 at #loc73))
#loc119 = loc(callsite(#loc93 at #loc48))
#loc120 = loc(callsite(#loc94 at #loc48))
#loc121 = loc(callsite(#loc97 at #loc48))
#loc122 = loc(callsite(#loc100 at #loc48))
#loc123 = loc(callsite(#loc104 at #loc64))
#loc125 = loc(callsite(#loc106 at #loc63))
#loc126 = loc(callsite(#loc107 at #loc63))
#loc127 = loc(callsite(#loc108 at #loc63))
#loc128 = loc(callsite(#loc109 at #loc63))
#loc129 = loc(callsite(#loc114 at #loc64))
#loc130 = loc(callsite(#loc116 at #loc64))
#loc132 = loc(callsite(#loc118 at #loc74))
#loc133 = loc(callsite(#loc125 at #loc64))
#loc134 = loc(callsite(#loc126 at #loc64))
#loc135 = loc(callsite(#loc127 at #loc64))
#loc136 = loc(callsite(#loc128 at #loc64))
#loc137 = loc(callsite(#loc132 at #loc64))
