//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b16 	%rs<39>;
	.reg .b32 	%r<341>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<48>;
	.loc	1 17 0                          // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:17:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_bmm_param_2];
	ld.param.u64 	%rd18, [triton_bmm_param_0];
	ld.param.u64 	%rd19, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:41:24
	mov.u32 	%r29, %ctaid.x;
	.loc	1 47 22                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:47:22
	shr.s32 	%r30, %r29, 31;
	shr.u32 	%r31, %r30, 26;
	add.s32 	%r32, %r29, %r31;
	shr.s32 	%r33, %r32, 6;
	.loc	1 48 41                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:48:41
	shl.b32 	%r34, %r33, 3;
	.loc	1 48 30                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:48:30
	sub.s32 	%r35, 8, %r34;
	.loc	1 48 50                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:48:50
	min.s32 	%r36, %r35, 8;
	.loc	1 49 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:49:40
	rem.s32 	%r37, %r29, %r36;
	.loc	1 49 34                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:49:34
	add.s32 	%r38, %r37, %r34;
	.loc	1 50 19                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:50:19
	and.b32  	%r39, %r32, -64;
	sub.s32 	%r40, %r29, %r39;
	.loc	1 50 30                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:50:30
	div.s32 	%r41, %r40, %r36;
	.loc	1 52 17                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:17
	shl.b32 	%r1, %r38, 6;
	.loc	1 52 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r42, %r2, 8;
	shr.u32 	%r43, %r2, 2;
	and.b32  	%r3, %r43, 8;
	and.b32  	%r44, %r43, 16;
	bfe.u32 	%r45, %r2, 2, 5;
	or.b32  	%r46, %r45, 32;
	shl.b32 	%r4, %r2, 3;
	and.b32  	%r47, %r4, 24;
	.loc	1 52 27                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:27
	or.b32  	%r48, %r1, %r45;
	or.b32  	%r49, %r1, %r46;
	.loc	1 53 17                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:53:17
	shl.b32 	%r5, %r41, 6;
	.loc	1 53 27                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:53:27
	or.b32  	%r50, %r5, %r45;
	or.b32  	%r51, %r5, %r46;
	.loc	1 57 19                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:57:19
	bfe.s32 	%r52, %r38, 25, 1;
	shr.u32 	%r53, %r52, 23;
	add.s32 	%r54, %r48, %r53;
	and.b32  	%r55, %r54, 1048064;
	sub.s32 	%r56, %r48, %r55;
	add.s32 	%r57, %r49, %r53;
	and.b32  	%r58, %r57, 1048064;
	sub.s32 	%r59, %r49, %r58;
	.loc	1 61 19                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:61:19
	bfe.s32 	%r60, %r41, 25, 1;
	shr.u32 	%r61, %r60, 23;
	add.s32 	%r62, %r50, %r61;
	and.b32  	%r63, %r62, 1048064;
	sub.s32 	%r64, %r50, %r63;
	cvt.u16.u32 	%rs1, %r51;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 7;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -512;
	sub.s16 	%rs6, %rs1, %rs5;
	.loc	1 65 26                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:65:26
	mov.u32 	%r6, %ctaid.y;
	.loc	1 66 28                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:66:28
	shl.b32 	%r65, %r56, 12;
	shl.b32 	%r66, %r59, 12;
	.loc	1 66 72                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:66:72
	shl.b32 	%r67, %r6, 6;
	.loc	1 66 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:66:40
	or.b32  	%r68, %r47, %r67;
	.loc	1 66 66                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:66:66
	add.s32 	%r69, %r68, %r65;
	add.s32 	%r70, %r68, %r66;
	.loc	1 66 13                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:66:13
	mul.wide.s32 	%rd20, %r69, 2;
	add.s64 	%rd14, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r70, 2;
	add.s64 	%rd15, %rd18, %rd21;
	.loc	1 67 54                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:67:54
	shl.b32 	%r71, %r64, 12;
	mul.wide.s16 	%r72, %rs6, 4096;
	.loc	1 67 66                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:67:66
	add.s32 	%r73, %r68, %r71;
	add.s32 	%r74, %r68, %r72;
	.loc	1 67 13                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:67:13
	mul.wide.s32 	%rd22, %r73, 2;
	add.s64 	%rd16, %rd19, %rd22;
	mul.wide.s32 	%rd23, %r74, 2;
	add.s64 	%rd17, %rd19, %rd23;
	.loc	1 72 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:72:24
	xor.b32  	%r75, %r4, %r2;
	and.b32  	%r76, %r75, 24;
	shl.b32 	%r77, %r76, 1;
	shl.b32 	%r78, %r45, 6;
	or.b32  	%r79, %r78, %r77;
	mov.u32 	%r80, global_smem;
	add.s32 	%r245, %r80, %r79;
	add.s32 	%r247, %r245, 2048;
	mov.b32 	%r21, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r245 + 0 ], [ %rd14 + 0 ], 0x10, %r21;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r247 + 0 ], [ %rd15 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:73:24
	add.s32 	%r24, %r245, 4096;
	add.s32 	%r26, %r245, 6144;
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd16 + 0 ], 0x10, %r21;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r26 + 0 ], [ %rd17 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:70:25
	or.b32  	%r81, %r42, %r44;
	and.b32  	%r82, %r2, 7;
	or.b32  	%r83, %r81, %r82;
	shl.b32 	%r84, %r2, 2;
	and.b32  	%r85, %r84, 8;
	and.b32  	%r86, %r84, 16;
	and.b32  	%r87, %r84, 24;
	and.b32  	%r88, %r2, 15;
	shr.u32 	%r89, %r2, 1;
	and.b32  	%r90, %r89, 8;
	xor.b32  	%r91, %r87, %r90;
	or.b32  	%r92, %r44, %r88;
	shl.b32 	%r93, %r92, 5;
	or.b32  	%r11, %r91, %r93;
	or.b32  	%r94, %r85, 16;
	or.b32  	%r95, %r90, %r86;
	xor.b32  	%r96, %r95, %r94;
	or.b32  	%r12, %r96, %r93;
	shl.b32 	%r97, %r83, 5;
	or.b32  	%r98, %r97, 1024;
	or.b32  	%r13, %r98, %r91;
	or.b32  	%r14, %r96, %r98;
	xor.b32  	%r99, %r84, %r2;
	and.b32  	%r15, %r99, 24;
	or.b32  	%r100, %r3, %r82;
	shl.b32 	%r16, %r100, 5;
	or.b32  	%r17, %r15, %r16;
	add.s32 	%r101, %r72, %r67;
	or.b32  	%r102, %r101, %r47;
	mul.wide.s32 	%rd24, %r102, 2;
	add.s64 	%rd25, %rd24, %rd19;
	add.s64 	%rd47, %rd25, 64;
	add.s32 	%r103, %r71, %r67;
	or.b32  	%r104, %r103, %r47;
	mul.wide.s32 	%rd26, %r104, 2;
	add.s64 	%rd27, %rd26, %rd19;
	add.s64 	%rd46, %rd27, 64;
	add.s32 	%r105, %r66, %r67;
	or.b32  	%r106, %r105, %r47;
	mul.wide.s32 	%rd28, %r106, 2;
	add.s64 	%rd29, %rd28, %rd18;
	add.s64 	%rd45, %rd29, 64;
	add.s32 	%r107, %r65, %r67;
	or.b32  	%r108, %r107, %r47;
	mul.wide.s32 	%rd30, %r108, 2;
	add.s64 	%rd31, %rd30, %rd18;
	add.s64 	%rd44, %rd31, 64;
	mov.pred 	%p30, -1;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r340, -1;
	shl.b32 	%r257, %r11, 1;
	shl.b32 	%r258, %r12, 1;
	shl.b32 	%r259, %r13, 1;
	shl.b32 	%r260, %r14, 1;
	shl.b32 	%r262, %r17, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 25                          // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:0:25
	mov.pred 	%p1, %p30;
	.loc	1 70 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:70:25
	add.s32 	%r253, %r340, 1;
	setp.gt.u32 	%p4, %r340, 2147483646;
	selp.b32 	%r340, %r253, 0, %p4;
	.loc	1 72 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:72:24
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r254, %r340, 12;
	add.s32 	%r256, %r80, %r254;
	add.s32 	%r113, %r256, %r257;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r149, %r150, %r151, %r152}, [%r113];
	// end inline asm
	add.s32 	%r118, %r256, %r258;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r197, %r198, %r199, %r200}, [%r118];
	// end inline asm
	add.s32 	%r123, %r256, %r259;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r173, %r174, %r175, %r176}, [%r123];
	// end inline asm
	add.s32 	%r128, %r256, %r260;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r221, %r222, %r223, %r224}, [%r128];
	// end inline asm
	.loc	1 73 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:73:24
	add.s32 	%r261, %r256, 4096;
	add.s32 	%r133, %r261, %r262;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r153, %r154, %r201, %r202}, [%r133];
	// end inline asm
	add.s32 	%r138, %r133, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r159, %r160, %r207, %r208}, [%r138];
	// end inline asm
	add.s32 	%r263, %r15, %r16;
	shl.b32 	%r264, %r263, 1;
	add.s32 	%r265, %r261, %r264;
	add.s32 	%r143, %r265, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r213, %r214}, [%r143];
	// end inline asm
	add.s32 	%r148, %r133, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r171, %r172, %r219, %r220}, [%r148];
	// end inline asm
	.loc	1 77 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r149, %r150, %r151, %r152 }, { %r153, %r154 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r149, %r150, %r151, %r152 }, { %r159, %r160 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r149, %r150, %r151, %r152 }, { %r165, %r166 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r149, %r150, %r151, %r152 }, { %r171, %r172 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r173, %r174, %r175, %r176 }, { %r153, %r154 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r173, %r174, %r175, %r176 }, { %r159, %r160 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r173, %r174, %r175, %r176 }, { %r165, %r166 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r173, %r174, %r175, %r176 }, { %r171, %r172 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r197, %r198, %r199, %r200 }, { %r201, %r202 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r197, %r198, %r199, %r200 }, { %r207, %r208 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r197, %r198, %r199, %r200 }, { %r213, %r214 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r197, %r198, %r199, %r200 }, { %r219, %r220 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r221, %r222, %r223, %r224 }, { %r201, %r202 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r221, %r222, %r223, %r224 }, { %r207, %r208 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r221, %r222, %r223, %r224 }, { %r213, %r214 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r221, %r222, %r223, %r224 }, { %r219, %r220 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 72 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:72:24
	bar.sync 	0;
	selp.b32 	%r246, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r245 + 0 ], [ %rd44 + 0 ], 0x10, %r246;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r247 + 0 ], [ %rd45 + 0 ], 0x10, %r246;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd46 + 0 ], 0x10, %r246;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r26 + 0 ], [ %rd47 + 0 ], 0x10, %r246;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:70:25
	add.s64 	%rd47, %rd47, 64;
	add.s64 	%rd46, %rd46, 64;
	add.s64 	%rd45, %rd45, 64;
	add.s64 	%rd44, %rd44, 64;
	mov.pred 	%p30, 0;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:40
	and.b32  	%r298, %r4, 56;
	.loc	1 53 27                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:53:27
	or.b32  	%r299, %r5, %r298;
	.loc	1 52 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:40
	bfe.u32 	%r300, %r2, 3, 4;
	.loc	1 52 27                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:52:27
	or.b32  	%r301, %r300, %r1;
	or.b32  	%r302, %r301, 48;
	or.b32  	%r303, %r301, 32;
	or.b32  	%r304, %r301, 16;
	.loc	1 70 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:87:20
	setp.lt.s32 	%p25, %r301, 512;
	setp.lt.s32 	%p26, %r304, 512;
	setp.lt.s32 	%p27, %r303, 512;
	setp.lt.s32 	%p28, %r302, 512;
	.loc	1 87 34                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:87:34
	setp.lt.s32 	%p29, %r299, 512;
	.loc	1 87 26                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:87:26
	and.pred  	%p21, %p25, %p29;
	and.pred  	%p22, %p26, %p29;
	and.pred  	%p23, %p27, %p29;
	and.pred  	%p24, %p28, %p29;
	.loc	1 90 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:90:25
	shl.b32 	%r305, %r301, 9;
	shl.b32 	%r306, %r304, 9;
	shl.b32 	%r307, %r303, 9;
	shl.b32 	%r308, %r302, 9;
	.loc	1 90 40                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:90:40
	shl.b32 	%r309, %r6, 18;
	.loc	1 90 21                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:90:21
	add.s32 	%r310, %r299, %r309;
	.loc	1 90 33                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:90:33
	add.s32 	%r311, %r310, %r305;
	add.s32 	%r312, %r310, %r306;
	add.s32 	%r313, %r310, %r307;
	add.s32 	%r314, %r310, %r308;
	.loc	1 91 25                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:91:25
	mul.wide.s32 	%rd40, %r311, 2;
	add.s64 	%rd36, %rd13, %rd40;
	mul.wide.s32 	%rd41, %r312, 2;
	add.s64 	%rd37, %rd13, %rd41;
	mul.wide.s32 	%rd42, %r313, 2;
	add.s64 	%rd38, %rd13, %rd42;
	mul.wide.s32 	%rd43, %r314, 2;
	add.s64 	%rd39, %rd13, %rd43;
	.loc	1 91 67                         // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:91:67
	cvt.rn.bf16.f32 	%rs7, %f194;
	cvt.rn.bf16.f32 	%rs8, %f195;
	cvt.rn.bf16.f32 	%rs9, %f196;
	cvt.rn.bf16.f32 	%rs10, %f197;
	cvt.rn.bf16.f32 	%rs11, %f198;
	cvt.rn.bf16.f32 	%rs12, %f199;
	cvt.rn.bf16.f32 	%rs13, %f200;
	cvt.rn.bf16.f32 	%rs14, %f201;
	cvt.rn.bf16.f32 	%rs15, %f202;
	cvt.rn.bf16.f32 	%rs16, %f203;
	cvt.rn.bf16.f32 	%rs17, %f204;
	cvt.rn.bf16.f32 	%rs18, %f205;
	cvt.rn.bf16.f32 	%rs19, %f206;
	cvt.rn.bf16.f32 	%rs20, %f207;
	cvt.rn.bf16.f32 	%rs21, %f208;
	cvt.rn.bf16.f32 	%rs22, %f209;
	cvt.rn.bf16.f32 	%rs23, %f210;
	cvt.rn.bf16.f32 	%rs24, %f211;
	cvt.rn.bf16.f32 	%rs25, %f212;
	cvt.rn.bf16.f32 	%rs26, %f213;
	cvt.rn.bf16.f32 	%rs27, %f214;
	cvt.rn.bf16.f32 	%rs28, %f215;
	cvt.rn.bf16.f32 	%rs29, %f216;
	cvt.rn.bf16.f32 	%rs30, %f217;
	cvt.rn.bf16.f32 	%rs31, %f218;
	cvt.rn.bf16.f32 	%rs32, %f219;
	cvt.rn.bf16.f32 	%rs33, %f220;
	cvt.rn.bf16.f32 	%rs34, %f221;
	cvt.rn.bf16.f32 	%rs35, %f222;
	cvt.rn.bf16.f32 	%rs36, %f223;
	cvt.rn.bf16.f32 	%rs37, %f224;
	cvt.rn.bf16.f32 	%rs38, %f225;
	shl.b32 	%r315, %r2, 1;
	and.b32  	%r316, %r315, 6;
	shl.b32 	%r317, %r2, 4;
	and.b32  	%r318, %r317, 1472;
	or.b32  	%r319, %r318, %r316;
	or.b32  	%r320, %r319, %r3;
	and.b32  	%r321, %r4, 1016;
	shr.u32 	%r322, %r318, 2;
	add.s32 	%r324, %r80, %r322;
	shl.b32 	%r325, %r320, 1;
	add.s32 	%r266, %r324, %r325;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs7, %rs8 };
	// end inline asm
	or.b32  	%r326, %r318, 512;
	shr.u32 	%r327, %r326, 2;
	add.s32 	%r328, %r80, %r327;
	add.s32 	%r329, %r328, %r325;
	add.s32 	%r267, %r329, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r268, %r266, 32;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r269, %r329, 1056;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r270, %r266, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs15, %rs16 };
	// end inline asm
	add.s32 	%r271, %r329, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs17, %rs18 };
	// end inline asm
	add.s32 	%r272, %r266, 96;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r272 + 0 ], { %rs19, %rs20 };
	// end inline asm
	add.s32 	%r273, %r329, 1120;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r273 + 0 ], { %rs21, %rs22 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r330, %r2, 120;
	shl.b32 	%r331, %r330, 1;
	add.s32 	%r332, %r80, %r331;
	shl.b32 	%r333, %r321, 1;
	add.s32 	%r334, %r332, %r333;
	ld.shared.v4.u32 	{%r282, %r283, %r284, %r285}, [%r334];
	or.b32  	%r335, %r321, 1024;
	shr.u32 	%r336, %r335, 2;
	and.b32  	%r337, %r336, 496;
	add.s32 	%r338, %r80, %r337;
	add.s32 	%r339, %r338, %r333;
	ld.shared.v4.u32 	{%r286, %r287, %r288, %r289}, [%r339+2048];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs31, %rs32 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs33, %rs34 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r272 + 0 ], { %rs35, %rs36 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r273 + 0 ], { %rs37, %rs38 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r290, %r291, %r292, %r293}, [%r334];
	ld.shared.v4.u32 	{%r294, %r295, %r296, %r297}, [%r339+2048];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd36 + 0 ], { %r282, %r283, %r284, %r285 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd37 + 0 ], { %r286, %r287, %r288, %r289 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd38 + 0 ], { %r290, %r291, %r292, %r293 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd39 + 0 ], { %r294, %r295, %r296, %r297 };
	// end inline asm
	.loc	1 91 4                          // ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/e5/ce5ftx65atvf3hichoud2qlpamsipjcmlixpvqo7t5roasyxxuux.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 53
.b8 102
.b8 116
.b8 120
.b8 54
.b8 53
.b8 97
.b8 116
.b8 118
.b8 102
.b8 51
.b8 104
.b8 105
.b8 99
.b8 104
.b8 111
.b8 117
.b8 100
.b8 50
.b8 113
.b8 108
.b8 112
.b8 97
.b8 109
.b8 115
.b8 105
.b8 112
.b8 106
.b8 99
.b8 109
.b8 108
.b8 105
.b8 120
.b8 112
.b8 118
.b8 113
.b8 111
.b8 55
.b8 116
.b8 53
.b8 114
.b8 111
.b8 97
.b8 115
.b8 121
.b8 120
.b8 120
.b8 117
.b8 117
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 101
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
