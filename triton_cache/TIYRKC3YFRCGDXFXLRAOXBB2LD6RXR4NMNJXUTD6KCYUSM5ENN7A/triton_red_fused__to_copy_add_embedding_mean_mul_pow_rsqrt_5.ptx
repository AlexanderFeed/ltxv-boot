//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 113, 113, 47, 99, 113, 113, 116, 110, 53, 108, 109, 98, 97, 105, 100, 97, 55, 100, 119, 102, 106, 104, 54, 119, 50, 111, 100, 112, 107, 103, 112, 117, 108, 54, 109, 109, 103, 104, 117, 99, 121, 121, 52, 120, 114, 103, 113, 119, 115, 116, 100, 119, 114, 107, 114, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<46>;
	.reg .f32 	%f<64>;
	.reg .b64 	%rd<68>;
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1];
	ld.param.u64 	%rd30, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0];
$L__tmp0:
	.loc	1 23 28                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:28
	mov.u32 	%r6, %ctaid.x;
	.loc	1 23 33                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:33
	shl.b32 	%r7, %r6, 6;
	.loc	1 24 44                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r8, %r1, 1, 6;
	bfe.u32 	%r9, %r1, 3, 4;
	.loc	1 24 23                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:23
	or.b32  	%r2, %r8, %r7;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r10, 16;
	or.b32  	%r12, %r10, 32;
	or.b32  	%r13, %r10, 48;
	.loc	1 25 21                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:25:21
	setp.lt.s32 	%p5, %r2, 512;
	setp.gt.s32 	%p10, %r10, 511;
	setp.lt.s32 	%p6, %r10, 512;
	setp.gt.s32 	%p11, %r11, 511;
	setp.lt.s32 	%p7, %r11, 512;
	setp.gt.s32 	%p12, %r12, 511;
	setp.lt.s32 	%p8, %r12, 512;
	setp.gt.s32 	%p13, %r13, 511;
	setp.lt.s32 	%p9, %r13, 512;
	.loc	1 26 37                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:26:37
	shl.b32 	%r14, %r1, 2;
	and.b32  	%r15, %r14, 4;
	.loc	1 29 30                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:30
	mul.wide.s32 	%rd31, %r2, 8;
	add.s64 	%rd14, %rd30, %rd31;
	mul.wide.s32 	%rd32, %r10, 8;
	add.s64 	%rd22, %rd30, %rd32;
	add.s64 	%rd24, %rd22, 128;
	add.s64 	%rd26, %rd22, 256;
	add.s64 	%rd28, %rd22, 384;
	.loc	1 29 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:35
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p7 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 37 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:46
	shl.b32 	%r16, %r2, 12;
	.loc	1 40 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:40:22
	setp.lt.s64 	%p14, %rd19, 0;
	.loc	1 39 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:39:22
	add.s64 	%rd33, %rd27, 32128;
	add.s64 	%rd34, %rd25, 32128;
	add.s64 	%rd35, %rd23, 32128;
	add.s64 	%rd36, %rd21, 32128;
	.loc	1 40 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:40:22
	setp.lt.s64 	%p15, %rd27, 0;
	setp.lt.s64 	%p16, %rd25, 0;
	setp.lt.s64 	%p17, %rd23, 0;
	setp.lt.s64 	%p18, %rd21, 0;
	.loc	1 41 36                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:41:36
	selp.b64 	%rd37, %rd36, %rd21, %p18;
	selp.b64 	%rd38, %rd35, %rd23, %p17;
	selp.b64 	%rd39, %rd34, %rd25, %p16;
	selp.b64 	%rd40, %rd33, %rd27, %p15;
	.loc	1 42 41                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:41
	setp.lt.u64 	%p19, %rd40, 32128;
	setp.lt.u64 	%p20, %rd39, 32128;
	setp.lt.u64 	%p21, %rd38, 32128;
	setp.lt.u64 	%p22, %rd37, 32128;
	.loc	1 42 58                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:58
	or.pred  	%p23, %p22, %p10;
	or.pred  	%p24, %p21, %p11;
	or.pred  	%p25, %p20, %p12;
	or.pred  	%p26, %p19, %p13;
	.loc	1 43 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:46
	shl.b64 	%rd41, %rd19, 12;
	add.s64 	%rd42, %rd41, 131596288;
	selp.b64 	%rd43, %rd42, %rd41, %p14;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	or.b32  	%r3, %r15, %r16;
	and.pred  	%p27, %p25, %p26;
	and.pred  	%p28, %p24, %p27;
	and.pred  	%p1, %p28, %p23;
	cvt.u64.u32 	%rd44, %r15;
	or.b64  	%rd1, %rd43, %rd44;
	mov.f32 	%f60, 0f00000000;
	mov.b64 	%rd65, 0;
	mov.f32 	%f61, %f60;
	mov.f32 	%f62, %f60;
	mov.f32 	%f63, %f60;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	cvt.u32.u64 	%r21, %rd65;
	or.b32  	%r22, %r3, %r21;
	.loc	1 37 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:34
	mul.wide.s32 	%rd46, %r22, 2;
	add.s64 	%rd45, %rd10, %rd46;
	mov.b32 	%r20, 0;
	.loc	1 37 51                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:51
	// begin inline asm
	mov.u32 %r17, %r20;
	mov.u32 %r18, %r20;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	.loc	1 37 51                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:51
	mov.b32 	{%rs1, %rs2}, %r18;
	.loc	1 37 112                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:112
	cvt.f32.bf16 	%f12, %rs2;
	cvt.f32.bf16 	%f13, %rs1;
	.loc	1 37 51                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:51
	mov.b32 	{%rs3, %rs4}, %r17;
	.loc	1 37 112                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:112
	cvt.f32.bf16 	%f14, %rs4;
	cvt.f32.bf16 	%f15, %rs3;
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	bar.sync 	0;
	or.b64  	%rd54, %rd65, %rd1;
	.loc	1 43 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:34
	shl.b64 	%rd55, %rd54, 1;
	add.s64 	%rd53, %rd9, %rd55;
	.loc	1 43 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:53
	// begin inline asm
	mov.u32 %r23, %r20;
	mov.u32 %r24, %r20;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r23, %r24 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r23;
	mov.b32 	{%rs7, %rs8}, %r24;
	.loc	1 43 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:114
	cvt.f32.bf16 	%f16, %rs5;
	cvt.f32.bf16 	%f17, %rs6;
	cvt.f32.bf16 	%f18, %rs7;
	cvt.f32.bf16 	%f19, %rs8;
	.loc	1 44 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:44:22
	add.f32 	%f20, %f15, %f16;
	add.f32 	%f21, %f14, %f17;
	add.f32 	%f22, %f13, %f18;
	add.f32 	%f23, %f12, %f19;
	.loc	1 48 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:48:25
	fma.rn.f32 	%f24, %f20, %f20, %f60;
	fma.rn.f32 	%f25, %f21, %f21, %f61;
	fma.rn.f32 	%f26, %f22, %f22, %f62;
	fma.rn.f32 	%f27, %f23, %f23, %f63;
	.loc	1 49 50                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:49:50
	selp.f32 	%f60, %f24, %f60, %p5;
	selp.f32 	%f61, %f25, %f61, %p5;
	selp.f32 	%f62, %f26, %f62, %p5;
	selp.f32 	%f63, %f27, %f63, %p5;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	add.s64 	%rd3, %rd65, 8;
	setp.lt.u64 	%p31, %rd65, 4088;
	mov.u64 	%rd65, %rd3;
	@%p31 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f60, %f61;
	add.f32 	%f29, %f62, %f28;
	add.f32 	%f30, %f63, %f29;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r27, %f30;
	shfl.sync.bfly.b32	%r28, %r27, 1, 31, -1;
	mov.b32 	%f31, %r28;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	mov.f32 	%f33, 0f45800000;
$L__tmp2:
	.loc	1 68 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:68:25
	div.full.f32 	%f34, %f32, %f33;
	.loc	1 70 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:70:24
	add.f32 	%f35, %f34, 0f358637BD;
	.loc	1 71 32                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:71:32
	rsqrt.approx.ftz.f32 	%f9, %f35;
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	and.b32  	%r29, %r1, 1;
	mul.wide.u32 	%rd57, %r29, 8;
	add.s64 	%rd66, %rd11, %rd57;
	mov.b64 	%rd67, 0;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	mov.b32 	%r32, 0;
	mov.pred 	%p32, -1;
	.loc	1 57 42                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:42
	// begin inline asm
	mov.u32 %r30, %r32;
	mov.u32 %r31, %r32;
	@%p32 ld.global.L1::evict_last.v2.b32 { %r30, %r31 }, [ %rd66 + 0 ];
	// end inline asm
	cvt.u32.u64 	%r44, %rd67;
	or.b32  	%r45, %r3, %r44;
	.loc	1 58 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:35
	mul.wide.s32 	%rd62, %r45, 2;
	add.s64 	%rd59, %rd10, %rd62;
	.loc	1 58 52                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:52
	// begin inline asm
	mov.u32 %r34, %r32;
	mov.u32 %r35, %r32;
	@%p5 ld.global.L1::evict_first.v2.b32 { %r34, %r35 }, [ %rd59 + 0 ];
	// end inline asm
	.loc	1 63 70                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:63:70
	bar.sync 	0;
	or.b64  	%rd63, %rd67, %rd1;
	.loc	1 64 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:35
	shl.b64 	%rd64, %rd63, 1;
	add.s64 	%rd60, %rd9, %rd64;
	.loc	1 64 55                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:55
	// begin inline asm
	mov.u32 %r38, %r32;
	mov.u32 %r39, %r32;
	@%p5 ld.global.L1::evict_first.v2.b32 { %r38, %r39 }, [ %rd60 + 0 ];
	// end inline asm
	.loc	1 75 29                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:29
	add.s64 	%rd61, %rd12, %rd62;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs9, %rs10}, %r34;
	cvt.f32.bf16 	%f36, %rs10;
	cvt.f32.bf16 	%f37, %rs9;
	.loc	1 57 95                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:95
	mov.b32 	{%rs11, %rs12}, %r30;
	cvt.f32.bf16 	%f38, %rs12;
	cvt.f32.bf16 	%f39, %rs11;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs13, %rs14}, %r38;
	cvt.f32.bf16 	%f40, %rs14;
	cvt.f32.bf16 	%f41, %rs13;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f42, %f37, %f41;
	add.f32 	%f43, %f36, %f40;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f44, %f9, %f43;
	mul.f32 	%f45, %f9, %f42;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	mul.f32 	%f46, %f45, %f39;
	mul.f32 	%f47, %f44, %f38;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r42, %f47, %f46;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs15, %rs16}, %r35;
	cvt.f32.bf16 	%f48, %rs16;
	cvt.f32.bf16 	%f49, %rs15;
	.loc	1 57 95                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:95
	mov.b32 	{%rs17, %rs18}, %r31;
	cvt.f32.bf16 	%f50, %rs18;
	cvt.f32.bf16 	%f51, %rs17;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs19, %rs20}, %r39;
	cvt.f32.bf16 	%f52, %rs20;
	cvt.f32.bf16 	%f53, %rs19;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f54, %f49, %f53;
	add.f32 	%f55, %f48, %f52;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f56, %f9, %f55;
	mul.f32 	%f57, %f9, %f54;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	mul.f32 	%f58, %f57, %f51;
	mul.f32 	%f59, %f56, %f50;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r43, %f59, %f58;
	// begin inline asm
	@%p5 st.global.v2.b32 [ %rd61 + 0 ], { %r42, %r43 };
	// end inline asm
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	add.s64 	%rd7, %rd67, 8;
	add.s64 	%rd66, %rd66, 16;
	setp.lt.u64 	%p36, %rd67, 4088;
	mov.u64 	%rd67, %rd7;
	@%p36 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 51 4                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:4
	ret;
$L__BB0_2:
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	mov.u64 	%rd47, assertMessage_0;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, assertFile_0;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, assertFunc_0;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd48;
	.param .b64 param1;
	st.param.b64 	[param1], %rd50;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd52;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 116
.b8 110
.b8 53
.b8 108
.b8 109
.b8 98
.b8 97
.b8 105
.b8 100
.b8 97
.b8 55
.b8 100
.b8 119
.b8 102
.b8 106
.b8 104
.b8 54
.b8 119
.b8 50
.b8 111
.b8 100
.b8 112
.b8 107
.b8 103
.b8 112
.b8 117
.b8 108
.b8 54
.b8 109
.b8 109
.b8 103
.b8 104
.b8 117
.b8 99
.b8 121
.b8 121
.b8 52
.b8 120
.b8 114
.b8 103
.b8 113
.b8 119
.b8 115
.b8 116
.b8 100
.b8 119
.b8 114
.b8 107
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 113
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
