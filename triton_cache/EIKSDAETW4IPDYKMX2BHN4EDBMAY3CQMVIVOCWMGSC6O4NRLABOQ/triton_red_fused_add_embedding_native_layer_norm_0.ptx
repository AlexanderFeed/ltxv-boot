//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_add_embedding_native_layer_norm_0 // -- Begin function triton_red_fused_add_embedding_native_layer_norm_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 116, 47, 99, 118, 116, 105, 55, 110, 53, 107, 50, 114, 50, 122, 112, 118, 119, 101, 102, 107, 113, 120, 106, 108, 114, 111, 110, 53, 53, 107, 119, 98, 55, 115, 115, 106, 98, 109, 50, 52, 117, 99, 99, 101, 122, 98, 102, 121, 103, 107, 117, 100, 98, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 49, 32, 60, 32, 55, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 116, 47, 99, 118, 116, 105, 55, 110, 53, 107, 50, 114, 50, 122, 112, 118, 119, 101, 102, 107, 113, 120, 106, 108, 114, 111, 110, 53, 53, 107, 119, 98, 55, 115, 115, 106, 98, 109, 50, 52, 117, 99, 99, 101, 122, 98, 102, 121, 103, 107, 117, 100, 98, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52, 57, 52, 48, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_embedding_native_layer_norm_0
.visible .entry triton_red_fused_add_embedding_native_layer_norm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_6,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_7,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<68>;
	.reg .b16 	%rs<57>;
	.reg .b32 	%r<61>;
	.reg .f32 	%f<171>;
	.reg .b64 	%rd<134>;
	.loc	1 18 0                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:18:0

// %bb.0:
	ld.param.u64 	%rd73, [triton_red_fused_add_embedding_native_layer_norm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:23:33
	shl.b32 	%r12, %r1, 6;
	ld.param.u64 	%rd74, [triton_red_fused_add_embedding_native_layer_norm_0_param_2];
	.loc	1 24 44                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 1, 6;
	bfe.u32 	%r13, %r2, 3, 4;
	.loc	1 24 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:24:23
	or.b32  	%r4, %r3, %r12;
	.loc	1 25 21                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:25:21
	setp.lt.s32 	%p16, %r4, 77;
	.loc	1 29 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:30
	mul.wide.s32 	%rd75, %r4, 8;
	add.s64 	%rd42, %rd73, %rd75;
	.loc	1 29 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:35
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:30:30
	add.s64 	%rd58, %rd74, %rd75;
	.loc	1 24 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:24:23
	or.b32  	%r9, %r13, %r12;
	or.b32  	%r8, %r9, 16;
	or.b32  	%r6, %r9, 32;
	or.b32  	%r7, %r9, 48;
	.loc	1 25 21                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:25:21
	setp.lt.s32 	%p20, %r7, 77;
	setp.lt.s32 	%p19, %r6, 77;
	setp.lt.s32 	%p18, %r8, 77;
	setp.lt.s32 	%p17, %r9, 77;
	.loc	1 29 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:30
	mul.wide.s32 	%rd78, %r9, 8;
	add.s64 	%rd50, %rd73, %rd78;
	add.s64 	%rd52, %rd50, 128;
	add.s64 	%rd54, %rd50, 256;
	add.s64 	%rd56, %rd50, 384;
	.loc	1 29 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:35
	// begin inline asm
	mov.u64 %rd49, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd49 }, [ %rd50 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd51, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd51 }, [ %rd52 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd53, 0x0;
	@%p19 ld.global.L1::evict_last.b64 { %rd53 }, [ %rd54 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd55, 0x0;
	@%p20 ld.global.L1::evict_last.b64 { %rd55 }, [ %rd56 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:30:30
	add.s64 	%rd66, %rd74, %rd78;
	add.s64 	%rd68, %rd66, 128;
	add.s64 	%rd70, %rd66, 256;
	add.s64 	%rd72, %rd66, 384;
	.loc	1 30 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:30:35
	// begin inline asm
	mov.u64 %rd57, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd57 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd59, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd59 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd61 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd63, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd63 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd65, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd65 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd67, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd67 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd69, 0x0;
	@%p19 ld.global.L1::evict_last.b64 { %rd69 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd71, 0x0;
	@%p20 ld.global.L1::evict_last.b64 { %rd71 }, [ %rd72 + 0 ];
	// end inline asm
	.loc	1 41 22                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:41:22
	add.s64 	%rd79, %rd55, 49408;
	add.s64 	%rd80, %rd53, 49408;
	add.s64 	%rd81, %rd51, 49408;
	add.s64 	%rd82, %rd49, 49408;
	.loc	1 42 22                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:42:22
	setp.lt.s64 	%p22, %rd55, 0;
	setp.lt.s64 	%p23, %rd53, 0;
	setp.lt.s64 	%p24, %rd51, 0;
	setp.lt.s64 	%p25, %rd49, 0;
	.loc	1 43 36                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:43:36
	selp.b64 	%rd83, %rd82, %rd49, %p25;
	selp.b64 	%rd84, %rd81, %rd51, %p24;
	selp.b64 	%rd85, %rd80, %rd53, %p23;
	selp.b64 	%rd86, %rd79, %rd55, %p22;
	setp.gt.u64 	%p27, %rd86, 49407;
	setp.gt.u64 	%p28, %rd85, 49407;
	setp.gt.u64 	%p29, %rd84, 49407;
	setp.gt.u64 	%p30, %rd83, 49407;
	and.pred  	%p31, %p30, %p17;
	selp.u16 	%rs1, -1, 0, %p31;
	shl.b16 	%rs2, %rs1, 3;
	and.pred  	%p32, %p29, %p18;
	selp.u16 	%rs3, 1, 0, %p32;
	shl.b16 	%rs4, %rs3, 2;
	or.b16  	%rs5, %rs2, %rs4;
	and.pred  	%p33, %p28, %p19;
	selp.u16 	%rs6, 1, 0, %p33;
	and.pred  	%p34, %p27, %p20;
	selp.u16 	%rs7, -1, 0, %p34;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	setp.ne.s16 	%p35, %rs12, 0;
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	@%p35 bra 	$L__BB0_7;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:0:68
	ld.param.u64 	%rd36, [triton_red_fused_add_embedding_native_layer_norm_0_param_1];
	shl.b32 	%r14, %r2, 2;
	and.b32  	%r5, %r14, 4;
	add.s64 	%rd76, %rd47, 49408;
	setp.lt.s64 	%p21, %rd47, 0;
	selp.b64 	%rd77, %rd76, %rd47, %p21;
	mul.lo.s64 	%rd5, %rd77, 1536;
	add.s64 	%rd6, %rd36, %rd5;
	.loc	1 48 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:48:23
	setp.lt.s64 	%p41, %rd71, 0;
	setp.lt.s64 	%p42, %rd69, 0;
	setp.lt.s64 	%p43, %rd65, 0;
	setp.lt.s64 	%p44, %rd67, 0;
	.loc	1 47 22                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:47:22
	add.s64 	%rd96, %rd71, 77;
	add.s64 	%rd97, %rd69, 77;
	add.s64 	%rd98, %rd65, 77;
	add.s64 	%rd99, %rd67, 77;
	.loc	1 49 38                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:49:38
	selp.b64 	%rd100, %rd99, %rd67, %p44;
	selp.b64 	%rd101, %rd98, %rd65, %p43;
	selp.b64 	%rd102, %rd97, %rd69, %p42;
	selp.b64 	%rd103, %rd96, %rd71, %p41;
	setp.gt.u64 	%p45, %rd103, 76;
	setp.gt.u64 	%p46, %rd102, 76;
	setp.gt.u64 	%p47, %rd101, 76;
	setp.gt.u64 	%p48, %rd100, 76;
	and.pred  	%p49, %p48, %p18;
	selp.u16 	%rs13, 1, 0, %p49;
	shl.b16 	%rs14, %rs13, 2;
	and.pred  	%p50, %p47, %p17;
	selp.u16 	%rs15, -1, 0, %p50;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	and.pred  	%p51, %p46, %p19;
	selp.u16 	%rs18, 1, 0, %p51;
	and.pred  	%p52, %p45, %p20;
	selp.u16 	%rs19, -1, 0, %p52;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	and.b16  	%rs24, %rs23, 15;
	setp.ne.s16 	%p53, %rs24, 0;
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	bar.sync 	0;
	.loc	1 45 34                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:34
	mul.wide.u32 	%rd104, %r5, 2;
	add.s64 	%rd95, %rd6, %rd104;
	mov.b32 	%r21, 0;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	// begin inline asm
	mov.u32 %r15, %r21;
	mov.u32 %r16, %r21;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd95 + 0 ];
	// end inline asm
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	@%p53 bra 	$L__BB0_8;
// %bb.2:                               // %.split.peel.next
	.loc	1 0 67                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:0:67
	ld.param.u64 	%rd40, [triton_red_fused_add_embedding_native_layer_norm_0_param_6];
	ld.param.u64 	%rd39, [triton_red_fused_add_embedding_native_layer_norm_0_param_5];
	ld.param.u64 	%rd38, [triton_red_fused_add_embedding_native_layer_norm_0_param_4];
	ld.param.u64 	%rd37, [triton_red_fused_add_embedding_native_layer_norm_0_param_3];
	add.s64 	%rd87, %rd63, 77;
	setp.lt.s64 	%p26, %rd63, 0;
	selp.b64 	%rd88, %rd87, %rd63, %p26;
	mul.lo.s64 	%rd7, %rd88, 1536;
	add.s64 	%rd8, %rd37, %rd7;
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	cvt.u64.u32 	%rd9, %r5;
	bar.sync 	0;
	.loc	1 51 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:35
	shl.b64 	%rd113, %rd9, 1;
	add.s64 	%rd111, %rd8, %rd113;
	.loc	1 51 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:54
	// begin inline asm
	mov.u32 %r19, %r21;
	mov.u32 %r20, %r21;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd111 + 0 ];
	// end inline asm
	.loc	1 60 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:60:68
	selp.f32 	%f159, 0f3F800000, 0f00000000, %p16;
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	mov.b32 	{%rs25, %rs26}, %r16;
	cvt.f32.bf16 	%f38, %rs26;
	cvt.f32.bf16 	%f39, %rs25;
	mov.b32 	{%rs27, %rs28}, %r15;
	cvt.f32.bf16 	%f40, %rs28;
	cvt.f32.bf16 	%f41, %rs27;
	.loc	1 51 115                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:115
	mov.b32 	{%rs29, %rs30}, %r20;
	cvt.f32.bf16 	%f42, %rs30;
	cvt.f32.bf16 	%f43, %rs29;
	mov.b32 	{%rs31, %rs32}, %r19;
	cvt.f32.bf16 	%f44, %rs32;
	cvt.f32.bf16 	%f45, %rs31;
	.loc	1 52 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:52:23
	add.f32 	%f46, %f41, %f45;
	add.f32 	%f47, %f40, %f44;
	add.f32 	%f48, %f39, %f43;
	add.f32 	%f49, %f38, %f42;
	.loc	1 58 64                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:58:64
	selp.f32 	%f170, %f49, 0f00000000, %p16;
	selp.f32 	%f169, %f48, 0f00000000, %p16;
	selp.f32 	%f168, %f47, 0f00000000, %p16;
	selp.f32 	%f167, %f46, 0f00000000, %p16;
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	and.b32  	%r23, %r2, 1;
	mul.wide.u32 	%rd10, %r23, 8;
	add.s64 	%rd11, %rd7, %rd10;
	add.s64 	%rd114, %rd11, %rd37;
	add.s64 	%rd127, %rd114, 16;
	add.s64 	%rd13, %rd5, %rd10;
	add.s64 	%rd115, %rd13, %rd36;
	add.s64 	%rd126, %rd115, 16;
	mov.f32 	%f163, 0f00000000;
	mov.b64 	%rd128, 0;
	mov.f32 	%f160, %f159;
	mov.f32 	%f161, %f159;
	mov.f32 	%f162, %f159;
	mov.f32 	%f164, %f163;
	mov.f32 	%f165, %f163;
	mov.f32 	%f166, %f163;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	bar.sync 	0;
	mov.b32 	%r26, 0;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	// begin inline asm
	mov.u32 %r24, %r26;
	mov.u32 %r25, %r26;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r24, %r25 }, [ %rd126 + 0 ];
	// end inline asm
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	bar.sync 	0;
	.loc	1 51 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:54
	// begin inline asm
	mov.u32 %r28, %r26;
	mov.u32 %r29, %r26;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r28, %r29 }, [ %rd127 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 209 30                        // triton_helpers.py:209:30
	add.f32 	%f50, %f159, 0f3F800000;
	add.f32 	%f51, %f160, 0f3F800000;
	add.f32 	%f52, %f161, 0f3F800000;
	add.f32 	%f53, %f162, 0f3F800000;
$L__tmp2:
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	mov.b32 	{%rs33, %rs34}, %r25;
	cvt.f32.bf16 	%f54, %rs34;
	cvt.f32.bf16 	%f55, %rs33;
	mov.b32 	{%rs35, %rs36}, %r24;
	cvt.f32.bf16 	%f56, %rs36;
	cvt.f32.bf16 	%f57, %rs35;
	.loc	1 51 115                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:115
	mov.b32 	{%rs37, %rs38}, %r29;
	cvt.f32.bf16 	%f58, %rs38;
	cvt.f32.bf16 	%f59, %rs37;
	mov.b32 	{%rs39, %rs40}, %r28;
	cvt.f32.bf16 	%f60, %rs40;
	cvt.f32.bf16 	%f61, %rs39;
	.loc	1 52 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:52:23
	add.f32 	%f62, %f57, %f61;
	add.f32 	%f63, %f56, %f60;
	add.f32 	%f64, %f55, %f59;
	add.f32 	%f65, %f54, %f58;
$L__tmp3:
	.loc	2 208 24                        // triton_helpers.py:208:24
	sub.f32 	%f66, %f65, %f170;
	sub.f32 	%f67, %f64, %f169;
	sub.f32 	%f68, %f63, %f168;
	sub.f32 	%f69, %f62, %f167;
	.loc	2 210 34                        // triton_helpers.py:210:34
	div.full.f32 	%f70, %f69, %f50;
	div.full.f32 	%f71, %f68, %f51;
	div.full.f32 	%f72, %f67, %f52;
	div.full.f32 	%f73, %f66, %f53;
	.loc	2 210 26                        // triton_helpers.py:210:26
	add.f32 	%f74, %f167, %f70;
	add.f32 	%f75, %f168, %f71;
	add.f32 	%f76, %f169, %f72;
	add.f32 	%f77, %f170, %f73;
	.loc	2 211 39                        // triton_helpers.py:211:39
	sub.f32 	%f78, %f65, %f77;
	sub.f32 	%f79, %f64, %f76;
	sub.f32 	%f80, %f63, %f75;
	sub.f32 	%f81, %f62, %f74;
	.loc	2 211 22                        // triton_helpers.py:211:22
	fma.rn.f32 	%f82, %f69, %f81, %f163;
	fma.rn.f32 	%f83, %f68, %f80, %f164;
	fma.rn.f32 	%f84, %f67, %f79, %f165;
	fma.rn.f32 	%f85, %f66, %f78, %f166;
$L__tmp4:
	.loc	1 58 64                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:58:64
	selp.f32 	%f170, %f77, %f170, %p16;
	selp.f32 	%f169, %f76, %f169, %p16;
	selp.f32 	%f168, %f75, %f168, %p16;
	selp.f32 	%f167, %f74, %f167, %p16;
	.loc	1 59 60                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:59:60
	selp.f32 	%f166, %f85, %f166, %p16;
	selp.f32 	%f165, %f84, %f165, %p16;
	selp.f32 	%f164, %f83, %f164, %p16;
	selp.f32 	%f163, %f82, %f163, %p16;
	.loc	1 60 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:60:68
	selp.f32 	%f159, %f50, %f159, %p16;
	selp.f32 	%f160, %f51, %f160, %p16;
	selp.f32 	%f161, %f52, %f161, %p16;
	selp.f32 	%f162, %f53, %f162, %p16;
	.loc	1 34 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:34:40
	add.s64 	%rd128, %rd128, 8;
	add.s64 	%rd127, %rd127, 16;
	add.s64 	%rd126, %rd126, 16;
	setp.lt.u64 	%p57, %rd128, 760;
	@%p57 bra 	$L__BB0_3;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp5:
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f86, %f168, %f167;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f87, %f159, %f160;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p58, %f87, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f88, %f160, %f87;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f89, 0f00000000, %f88, %p58;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f90, %f86, %f89, %f167;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f91, %f163, %f164;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f92, %f86, %f86;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f93, %f92, %f159;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f94, %f93, %f89, %f91;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f95, %f169, %f90;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f96, %f161, %f87;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p59, %f96, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f97, %f161, %f96;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f98, 0f00000000, %f97, %p59;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f99, %f98, %f95, %f90;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f100, %f165, %f94;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f101, %f95, %f95;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f102, %f87, %f101;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f103, %f98, %f102, %f100;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f104, %f170, %f99;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f105, %f162, %f96;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p60, %f105, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f106, %f162, %f105;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f107, 0f00000000, %f106, %p60;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f108, %f107, %f104, %f99;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f109, %f166, %f103;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f110, %f104, %f104;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f111, %f96, %f110;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f112, %f107, %f111, %f109;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r32, %f108;
	shfl.sync.bfly.b32	%r33, %r32, 1, 31, -1;
	mov.b32 	%f113, %r33;
	mov.b32 	%r34, %f112;
	shfl.sync.bfly.b32	%r35, %r34, 1, 31, -1;
	mov.b32 	%f114, %r35;
	mov.b32 	%r36, %f105;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f115, %r37;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f116, %f113, %f108;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f117, %f105, %f115;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p61, %f117, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f118, %f115, %f117;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f119, 0f00000000, %f118, %p61;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f33, %f119, %f116, %f108;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f120, %f112, %f114;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f121, %f116, %f116;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f122, %f105, %f121;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f123, %f119, %f122, %f120;
	mov.f32 	%f124, 0f44400000;
$L__tmp6:
	.loc	1 89 25                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:89:25
	div.full.f32 	%f125, %f123, %f124;
	.loc	1 91 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:91:24
	add.f32 	%f126, %f125, 0f3727C5AC;
	.loc	1 92 32                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:92:32
	rsqrt.approx.ftz.f32 	%f30, %f126;
	.loc	1 65 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:65:40
	mul.lo.s32 	%r38, %r3, 768;
	mad.lo.s32 	%r39, %r1, 49152, %r38;
	or.b32  	%r40, %r39, %r5;
	cvt.u64.u32 	%rd21, %r40;
	add.s64 	%rd132, %rd37, %rd11;
	add.s64 	%rd131, %rd36, %rd13;
	add.s64 	%rd130, %rd39, %rd10;
	add.s64 	%rd129, %rd38, %rd10;
	mov.b64 	%rd133, -8;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:0:40
	mov.b32 	%r43, 0;
	mov.pred 	%p62, -1;
	.loc	1 71 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:42
	// begin inline asm
	mov.u32 %r41, %r43;
	mov.u32 %r42, %r43;
	@%p62 ld.global.L1::evict_last.v2.b32 { %r41, %r42 }, [ %rd129 + 0 ];
	// end inline asm
	.loc	1 72 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:42
	// begin inline asm
	mov.u32 %r45, %r43;
	mov.u32 %r46, %r43;
	@%p62 ld.global.L1::evict_last.v2.b32 { %r45, %r46 }, [ %rd130 + 0 ];
	// end inline asm
	.loc	1 77 70                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:77:70
	bar.sync 	0;
	.loc	1 78 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:54
	// begin inline asm
	mov.u32 %r49, %r43;
	mov.u32 %r50, %r43;
	@%p16 ld.global.L1::evict_first.v2.b32 { %r49, %r50 }, [ %rd131 + 0 ];
	// end inline asm
	.loc	1 83 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:83:67
	bar.sync 	0;
	.loc	1 84 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:54
	// begin inline asm
	mov.u32 %r53, %r43;
	mov.u32 %r54, %r43;
	@%p16 ld.global.L1::evict_first.v2.b32 { %r53, %r54 }, [ %rd132 + 0 ];
	// end inline asm
	.loc	1 99 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:29
	add.s64 	%rd124, %rd21, %rd133;
	cvt.u32.u64 	%r59, %rd124;
	add.s32 	%r60, %r59, 8;
	mul.wide.s32 	%rd125, %r60, 2;
	add.s64 	%rd123, %rd40, %rd125;
	.loc	1 71 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:95
	mov.b32 	{%rs41, %rs42}, %r41;
	cvt.f32.bf16 	%f127, %rs42;
	cvt.f32.bf16 	%f128, %rs41;
	.loc	1 72 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:95
	mov.b32 	{%rs43, %rs44}, %r45;
	cvt.f32.bf16 	%f129, %rs44;
	cvt.f32.bf16 	%f130, %rs43;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs45, %rs46}, %r49;
	cvt.f32.bf16 	%f131, %rs45;
	cvt.f32.bf16 	%f132, %rs46;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs47, %rs48}, %r53;
	cvt.f32.bf16 	%f133, %rs47;
	cvt.f32.bf16 	%f134, %rs48;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f135, %f132, %f134;
	add.f32 	%f136, %f131, %f133;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f137, %f136, %f33;
	sub.f32 	%f138, %f135, %f33;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f139, %f30, %f138;
	mul.f32 	%f140, %f30, %f137;
	.loc	1 97 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:97:24
	fma.rn.f32 	%f141, %f140, %f128, %f130;
	fma.rn.f32 	%f142, %f139, %f127, %f129;
	.loc	1 99 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:52
	cvt.rn.bf16x2.f32 	%r57, %f142, %f141;
	.loc	1 71 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:95
	mov.b32 	{%rs49, %rs50}, %r42;
	cvt.f32.bf16 	%f143, %rs50;
	cvt.f32.bf16 	%f144, %rs49;
	.loc	1 72 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:95
	mov.b32 	{%rs51, %rs52}, %r46;
	cvt.f32.bf16 	%f145, %rs52;
	cvt.f32.bf16 	%f146, %rs51;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs53, %rs54}, %r50;
	cvt.f32.bf16 	%f147, %rs53;
	cvt.f32.bf16 	%f148, %rs54;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs55, %rs56}, %r54;
	cvt.f32.bf16 	%f149, %rs55;
	cvt.f32.bf16 	%f150, %rs56;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f151, %f148, %f150;
	add.f32 	%f152, %f147, %f149;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f153, %f152, %f33;
	sub.f32 	%f154, %f151, %f33;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f155, %f30, %f154;
	mul.f32 	%f156, %f30, %f153;
	.loc	1 97 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:97:24
	fma.rn.f32 	%f157, %f156, %f144, %f146;
	fma.rn.f32 	%f158, %f155, %f143, %f145;
	.loc	1 99 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:52
	cvt.rn.bf16x2.f32 	%r58, %f158, %f157;
	// begin inline asm
	@%p16 st.global.v2.b32 [ %rd123 + 0 ], { %r57, %r58 };
	// end inline asm
	.loc	1 65 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:65:40
	add.s64 	%rd133, %rd133, 8;
	add.s64 	%rd132, %rd132, 16;
	add.s64 	%rd131, %rd131, 16;
	add.s64 	%rd130, %rd130, 16;
	add.s64 	%rd129, %rd129, 16;
	setp.lt.u64 	%p67, %rd133, 760;
	@%p67 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 65 4                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:65:4
	ret;
$L__BB0_7:
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	mov.u64 	%rd89, assertMessage_0;
	cvta.global.u64 	%rd90, %rd89;
	mov.u64 	%rd91, assertFile_0;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, assertFunc_0;
	cvta.global.u64 	%rd94, %rd93;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd90;
	.param .b64 param1;
	st.param.b64 	[param1], %rd92;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd94;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_8:
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	mov.u64 	%rd105, assertMessage_1;
	cvta.global.u64 	%rd106, %rd105;
	mov.u64 	%rd107, assertFile_1;
	cvta.global.u64 	%rd108, %rd107;
	mov.u64 	%rd109, assertFunc_1;
	cvta.global.u64 	%rd110, %rd109;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd106;
	.param .b64 param1;
	st.param.b64 	[param1], %rd108;
	.param .b32 param2;
	st.param.b32 	[param2], 50;
	.param .b64 param3;
	st.param.b64 	[param3], %rd110;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 116
.b8 105
.b8 55
.b8 110
.b8 53
.b8 107
.b8 50
.b8 114
.b8 50
.b8 122
.b8 112
.b8 118
.b8 119
.b8 101
.b8 102
.b8 107
.b8 113
.b8 120
.b8 106
.b8 108
.b8 114
.b8 111
.b8 110
.b8 53
.b8 53
.b8 107
.b8 119
.b8 98
.b8 55
.b8 115
.b8 115
.b8 106
.b8 98
.b8 109
.b8 50
.b8 52
.b8 117
.b8 99
.b8 99
.b8 101
.b8 122
.b8 98
.b8 102
.b8 121
.b8 103
.b8 107
.b8 117
.b8 100
.b8 98
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 118
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 85                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
