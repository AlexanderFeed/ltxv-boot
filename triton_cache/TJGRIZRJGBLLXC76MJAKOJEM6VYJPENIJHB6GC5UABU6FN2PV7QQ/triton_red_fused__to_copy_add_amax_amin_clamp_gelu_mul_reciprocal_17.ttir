#loc = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0)
#loc1 = loc(unknown)
#loc61 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":78:40)
#loc64 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":79:40)
#loc129 = loc(callsite(#loc1 at #loc61))
#loc135 = loc(callsite(#loc1 at #loc64))
module {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_17(%arg0: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg8: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":18:0)) attributes {noinline = false} {
    %c3600_i32 = arith.constant 3600 : i32 loc(#loc1)
    %cst = arith.constant dense<1.270000e+02> : tensor<1x1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<1x1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x1024xbf16> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<1x1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c12288_i32 = arith.constant 12288 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_6 = arith.constant dense<0.797884583> : tensor<1x1024xf32> loc(#loc1)
    %cst_7 = arith.constant dense<4.471500e-02> : tensor<1x1024xf32> loc(#loc1)
    %cst_8 = arith.constant dense<5.000000e-01> : tensor<1x1024xf32> loc(#loc1)
    %cst_9 = arith.constant dense<0.00787401571> : tensor<1x1xf32> loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_11 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_12 = arith.constant dense<12288> : tensor<1x1024xi32> loc(#loc1)
    %cst_13 = arith.constant dense<0xFF800000> : tensor<1x1024xf32> loc(#loc1)
    %cst_14 = arith.constant dense<0x7F800000> : tensor<1x1024xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c3600_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %5 = tt.addptr %arg1, %0 : !tt.ptr<bf16>, i32 loc(#loc6)
    %6 = tt.splat %5 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc6)
    %7 = tt.load %6, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<bf16>> loc(#loc7)
    %8 = arith.extf %7 : tensor<1x1xbf16> to tensor<1x1xf32> loc(#loc8)
    %9 = tt.addptr %arg2, %0 : !tt.ptr<bf16>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc9)
    %11 = tt.load %10, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<bf16>> loc(#loc10)
    %12 = arith.extf %11 : tensor<1x1xbf16> to tensor<1x1xf32> loc(#loc11)
    %13:2 = scf.for %arg11 = %c0_i32 to %c12288_i32 step %c1024_i32 iter_args(%arg12 = %cst_14, %arg13 = %cst_13) -> (tensor<1x1024xf32>, tensor<1x1024xf32>)  : i32 {
      %24 = tt.splat %arg11 : i32 -> tensor<1x1024xi32> loc(#loc13)
      %25 = arith.addi %24, %4 : tensor<1x1024xi32> loc(#loc13)
      %26 = arith.cmpi slt, %25, %cst_12 : tensor<1x1024xi32> loc(#loc14)
      %27 = arith.muli %0, %c12288_i32 : i32 loc(#loc15)
      %28 = tt.splat %27 : i32 -> tensor<1x1024xi32> loc(#loc102)
      %29 = arith.addi %25, %28 : tensor<1x1024xi32> loc(#loc16)
      %30 = tt.splat %arg0 : !tt.ptr<i32> -> tensor<1x1024x!tt.ptr<i32>> loc(#loc17)
      %31 = tt.addptr %30, %29 : tensor<1x1024x!tt.ptr<i32>>, tensor<1x1024xi32> loc(#loc17)
      %32 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc103)
      %33 = arith.andi %32, %26 : tensor<1x1024xi1> loc(#loc18)
      %34 = tt.load %31, %33, %cst_4 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<i32>> loc(#loc19)
      %35 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x1024x!tt.ptr<bf16>> loc(#loc20)
      %36 = tt.addptr %35, %25 : tensor<1x1024x!tt.ptr<bf16>>, tensor<1x1024xi32> loc(#loc20)
      %37 = tt.load %36, %26, %cst_3 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>> loc(#loc21)
      %38 = arith.extf %37 : tensor<1x1024xbf16> to tensor<1x1024xf32> loc(#loc22)
      %39 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x1024x!tt.ptr<bf16>> loc(#loc23)
      %40 = tt.addptr %39, %25 : tensor<1x1024x!tt.ptr<bf16>>, tensor<1x1024xi32> loc(#loc23)
      %41 = tt.load %40, %26, %cst_3 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>> loc(#loc24)
      %42 = arith.extf %41 : tensor<1x1024xbf16> to tensor<1x1024xf32> loc(#loc25)
      %43 = arith.sitofp %34 : tensor<1x1024xi32> to tensor<1x1024xf32> loc(#loc26)
      %44 = arith.cmpf olt, %8, %cst_10 : tensor<1x1xf32> loc(#loc104)
      %45 = arith.cmpf une, %8, %8 : tensor<1x1xf32> loc(#loc105)
      %46 = arith.ori %44, %45 : tensor<1x1xi1> loc(#loc106)
      %47 = arith.select %46, %8, %cst_10 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc107)
      %48 = arith.subf %cst_10, %47 : tensor<1x1xf32> loc(#loc32)
      %49 = arith.cmpf ogt, %12, %cst_10 : tensor<1x1xf32> loc(#loc108)
      %50 = arith.cmpf une, %12, %12 : tensor<1x1xf32> loc(#loc109)
      %51 = arith.ori %49, %50 : tensor<1x1xi1> loc(#loc110)
      %52 = arith.select %51, %12, %cst_10 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc111)
      %53 = arith.cmpf ogt, %48, %52 : tensor<1x1xf32> loc(#loc112)
      %54 = arith.cmpf une, %48, %48 : tensor<1x1xf32> loc(#loc113)
      %55 = arith.ori %53, %54 : tensor<1x1xi1> loc(#loc114)
      %56 = arith.select %55, %48, %52 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc115)
      %57 = arith.mulf %56, %cst_9 : tensor<1x1xf32> loc(#loc39)
      %58 = arith.cmpf ogt, %57, %cst_1 : tensor<1x1xf32> loc(#loc116)
      %59 = arith.cmpf une, %57, %57 : tensor<1x1xf32> loc(#loc117)
      %60 = arith.ori %58, %59 : tensor<1x1xi1> loc(#loc118)
      %61 = arith.select %60, %57, %cst_1 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc119)
      %62 = tt.broadcast %61 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc41)
      %63 = arith.mulf %43, %62 : tensor<1x1024xf32> loc(#loc41)
      %64 = arith.mulf %63, %38 : tensor<1x1024xf32> loc(#loc42)
      %65 = arith.addf %64, %42 : tensor<1x1024xf32> loc(#loc43)
      %66 = arith.mulf %65, %cst_8 : tensor<1x1024xf32> loc(#loc44)
      %67 = arith.mulf %65, %65 : tensor<1x1024xf32> loc(#loc45)
      %68 = arith.mulf %67, %65 : tensor<1x1024xf32> loc(#loc46)
      %69 = arith.mulf %68, %cst_7 : tensor<1x1024xf32> loc(#loc47)
      %70 = arith.addf %65, %69 : tensor<1x1024xf32> loc(#loc48)
      %71 = arith.mulf %70, %cst_6 : tensor<1x1024xf32> loc(#loc49)
      %72 = tt.extern_elementwise %71 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc50)
      %73 = arith.addf %72, %cst_5 : tensor<1x1024xf32> loc(#loc51)
      %74 = arith.mulf %66, %73 : tensor<1x1024xf32> loc(#loc52)
      %75 = arith.cmpf olt, %arg12, %74 : tensor<1x1024xf32> loc(#loc120)
      %76 = arith.cmpf une, %arg12, %arg12 : tensor<1x1024xf32> loc(#loc121)
      %77 = arith.ori %75, %76 : tensor<1x1024xi1> loc(#loc122)
      %78 = arith.select %77, %arg12, %74 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc123)
      %79 = arith.select %33, %78, %arg12 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc54)
      %80 = arith.cmpf ogt, %arg13, %74 : tensor<1x1024xf32> loc(#loc124)
      %81 = arith.cmpf une, %arg13, %arg13 : tensor<1x1024xf32> loc(#loc125)
      %82 = arith.ori %80, %81 : tensor<1x1024xi1> loc(#loc126)
      %83 = arith.select %82, %arg13, %74 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc127)
      %84 = arith.select %33, %83, %arg13 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc56)
      %85 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc57)
      %86 = tt.addptr %85, %29 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc57)
      tt.store %86, %65, %33 : tensor<1x1024x!tt.ptr<f32>> loc(#loc58)
      scf.yield %79, %84 : tensor<1x1024xf32>, tensor<1x1024xf32> loc(#loc59)
    } loc(#loc12)
    %14 = "tt.reduce"(%13#0) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc61)), %arg12: f32 loc(callsite(#loc1 at #loc61))):
      %24 = arith.cmpf olt, %arg11, %arg12 : f32 loc(#loc166)
      %25 = arith.cmpf une, %arg11, %arg11 : f32 loc(#loc167)
      %26 = arith.ori %24, %25 : i1 loc(#loc168)
      %27 = arith.select %26, %arg11, %arg12 : f32 loc(#loc169)
      tt.reduce.return %27 : f32 loc(#loc128)
    }) : (tensor<1x1024xf32>) -> tensor<1xf32> loc(#loc128)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc62)
    %16 = "tt.reduce"(%13#1) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc64)), %arg12: f32 loc(callsite(#loc1 at #loc64))):
      %24 = arith.cmpf ogt, %arg11, %arg12 : f32 loc(#loc170)
      %25 = arith.cmpf une, %arg11, %arg11 : f32 loc(#loc171)
      %26 = arith.ori %24, %25 : i1 loc(#loc172)
      %27 = arith.select %26, %arg11, %arg12 : f32 loc(#loc173)
      tt.reduce.return %27 : f32 loc(#loc134)
    }) : (tensor<1x1024xf32>) -> tensor<1xf32> loc(#loc134)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc65)
    %18 = tt.addptr %arg6, %0 : !tt.ptr<bf16>, i32 loc(#loc66)
    %19 = tt.splat %18 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc66)
    %20 = arith.truncf %15 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc67)
    tt.store %19, %20, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc67)
    %21 = tt.addptr %arg7, %0 : !tt.ptr<bf16>, i32 loc(#loc68)
    %22 = tt.splat %21 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc68)
    %23 = arith.truncf %17 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc69)
    tt.store %22, %23, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc69)
    scf.for %arg11 = %c0_i32 to %c12288_i32 step %c1024_i32  : i32 {
      %24 = tt.splat %arg11 : i32 -> tensor<1x1024xi32> loc(#loc71)
      %25 = arith.addi %24, %4 : tensor<1x1024xi32> loc(#loc71)
      %26 = arith.cmpi slt, %25, %cst_12 : tensor<1x1024xi32> loc(#loc72)
      %27 = arith.muli %0, %c12288_i32 : i32 loc(#loc73)
      %28 = tt.splat %27 : i32 -> tensor<1x1024xi32> loc(#loc140)
      %29 = arith.addi %25, %28 : tensor<1x1024xi32> loc(#loc74)
      %30 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc75)
      %31 = tt.addptr %30, %29 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc75)
      %32 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc141)
      %33 = arith.andi %32, %26 : tensor<1x1024xi1> loc(#loc76)
      %34 = tt.load %31, %33, %cst_11 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<f32>> loc(#loc77)
      %35 = arith.mulf %34, %cst_8 : tensor<1x1024xf32> loc(#loc78)
      %36 = arith.mulf %34, %34 : tensor<1x1024xf32> loc(#loc79)
      %37 = arith.mulf %36, %34 : tensor<1x1024xf32> loc(#loc80)
      %38 = arith.mulf %37, %cst_7 : tensor<1x1024xf32> loc(#loc81)
      %39 = arith.addf %34, %38 : tensor<1x1024xf32> loc(#loc82)
      %40 = arith.mulf %39, %cst_6 : tensor<1x1024xf32> loc(#loc83)
      %41 = tt.extern_elementwise %40 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc84)
      %42 = arith.addf %41, %cst_5 : tensor<1x1024xf32> loc(#loc85)
      %43 = arith.mulf %35, %42 : tensor<1x1024xf32> loc(#loc86)
      %44 = arith.cmpf olt, %15, %cst_10 : tensor<1x1xf32> loc(#loc142)
      %45 = arith.cmpf une, %15, %15 : tensor<1x1xf32> loc(#loc143)
      %46 = arith.ori %44, %45 : tensor<1x1xi1> loc(#loc144)
      %47 = arith.select %46, %15, %cst_10 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc145)
      %48 = arith.subf %cst_10, %47 : tensor<1x1xf32> loc(#loc88)
      %49 = arith.cmpf ogt, %17, %cst_10 : tensor<1x1xf32> loc(#loc146)
      %50 = arith.cmpf une, %17, %17 : tensor<1x1xf32> loc(#loc147)
      %51 = arith.ori %49, %50 : tensor<1x1xi1> loc(#loc148)
      %52 = arith.select %51, %17, %cst_10 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc149)
      %53 = arith.cmpf ogt, %48, %52 : tensor<1x1xf32> loc(#loc150)
      %54 = arith.cmpf une, %48, %48 : tensor<1x1xf32> loc(#loc151)
      %55 = arith.ori %53, %54 : tensor<1x1xi1> loc(#loc152)
      %56 = arith.select %55, %48, %52 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc153)
      %57 = arith.mulf %56, %cst_9 : tensor<1x1xf32> loc(#loc91)
      %58 = arith.cmpf ogt, %57, %cst_1 : tensor<1x1xf32> loc(#loc154)
      %59 = arith.cmpf une, %57, %57 : tensor<1x1xf32> loc(#loc155)
      %60 = arith.ori %58, %59 : tensor<1x1xi1> loc(#loc156)
      %61 = arith.select %60, %57, %cst_1 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc157)
      %62 = arith.divf %cst_2, %61 : tensor<1x1xf32> loc(#loc93)
      %63 = tt.broadcast %62 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc94)
      %64 = arith.mulf %43, %63 : tensor<1x1024xf32> loc(#loc94)
      %65 = tt.extern_elementwise %64 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc95)
      %66 = arith.cmpf ogt, %65, %cst_0 : tensor<1x1024xf32> loc(#loc158)
      %67 = arith.cmpf une, %65, %65 : tensor<1x1024xf32> loc(#loc159)
      %68 = arith.ori %66, %67 : tensor<1x1024xi1> loc(#loc160)
      %69 = arith.select %68, %65, %cst_0 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc161)
      %70 = arith.cmpf olt, %69, %cst : tensor<1x1024xf32> loc(#loc162)
      %71 = arith.cmpf une, %69, %69 : tensor<1x1024xf32> loc(#loc163)
      %72 = arith.ori %70, %71 : tensor<1x1024xi1> loc(#loc164)
      %73 = arith.select %72, %69, %cst : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc165)
      %74 = arith.fptosi %73 : tensor<1x1024xf32> to tensor<1x1024xi8> loc(#loc98)
      %75 = tt.splat %arg8 : !tt.ptr<i8> -> tensor<1x1024x!tt.ptr<i8>> loc(#loc99)
      %76 = tt.addptr %75, %29 : tensor<1x1024x!tt.ptr<i8>>, tensor<1x1024xi32> loc(#loc99)
      tt.store %76, %74, %33 : tensor<1x1024x!tt.ptr<i8>> loc(#loc100)
    } loc(#loc70)
    tt.return loc(#loc101)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":26:27)
#loc5 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":26:37)
#loc6 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":29:30)
#loc7 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":29:35)
#loc8 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":29:75)
#loc9 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":30:30)
#loc10 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":30:35)
#loc11 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":30:75)
#loc12 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":33:40)
#loc13 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":34:31)
#loc14 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":35:29)
#loc15 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":39:47)
#loc16 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":39:41)
#loc17 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":39:34)
#loc18 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":39:60)
#loc19 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":39:52)
#loc20 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":40:35)
#loc21 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":40:42)
#loc22 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":40:95)
#loc23 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":41:35)
#loc24 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":41:42)
#loc25 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":41:95)
#loc26 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":42:23)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc28 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":44:44)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc30 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc32 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":45:16)
#loc33 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc34 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":46:44)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc38 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":47:44)
#loc39 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":49:23)
#loc40 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":52:46)
#loc41 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":54:23)
#loc42 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":55:24)
#loc43 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":56:24)
#loc44 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":59:24)
#loc45 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":60:24)
#loc46 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":61:24)
#loc47 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":63:24)
#loc48 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":64:24)
#loc49 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":66:24)
#loc50 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":67:31)
#loc51 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":69:24)
#loc52 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":70:24)
#loc53 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":73:47)
#loc54 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":74:50)
#loc55 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":75:47)
#loc56 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":76:50)
#loc57 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":77:29)
#loc58 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":77:54)
#loc59 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":77:8)
#loc60 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc62 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":78:43)
#loc63 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc65 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":79:43)
#loc66 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":80:25)
#loc67 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":80:37)
#loc68 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":81:25)
#loc69 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":81:37)
#loc70 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":82:40)
#loc71 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":83:31)
#loc72 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":84:29)
#loc73 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":88:49)
#loc74 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":88:43)
#loc75 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":88:36)
#loc76 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":88:62)
#loc77 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":88:54)
#loc78 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":90:24)
#loc79 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":91:24)
#loc80 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":92:24)
#loc81 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":94:24)
#loc82 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":95:24)
#loc83 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":97:24)
#loc84 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":98:31)
#loc85 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":100:24)
#loc86 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":101:24)
#loc87 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":104:46)
#loc88 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":105:17)
#loc89 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":106:46)
#loc90 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":107:46)
#loc91 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":109:24)
#loc92 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":112:46)
#loc93 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":115:25)
#loc94 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":117:24)
#loc95 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":118:36)
#loc96 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":121:46)
#loc97 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":123:46)
#loc98 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":125:25)
#loc99 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":126:29)
#loc100 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":126:54)
#loc101 = loc("/tmp/torchinductor_root/6g/c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py":82:4)
#loc102 = loc(fused[#loc16, #loc15])
#loc103 = loc(fused[#loc18, #loc3])
#loc104 = loc(callsite(#loc27 at #loc28))
#loc105 = loc(callsite(#loc29 at #loc28))
#loc106 = loc(callsite(#loc30 at #loc28))
#loc107 = loc(callsite(#loc31 at #loc28))
#loc108 = loc(callsite(#loc33 at #loc34))
#loc109 = loc(callsite(#loc35 at #loc34))
#loc110 = loc(callsite(#loc36 at #loc34))
#loc111 = loc(callsite(#loc37 at #loc34))
#loc112 = loc(callsite(#loc33 at #loc38))
#loc113 = loc(callsite(#loc35 at #loc38))
#loc114 = loc(callsite(#loc36 at #loc38))
#loc115 = loc(callsite(#loc37 at #loc38))
#loc116 = loc(callsite(#loc33 at #loc40))
#loc117 = loc(callsite(#loc35 at #loc40))
#loc118 = loc(callsite(#loc36 at #loc40))
#loc119 = loc(callsite(#loc37 at #loc40))
#loc120 = loc(callsite(#loc27 at #loc53))
#loc121 = loc(callsite(#loc29 at #loc53))
#loc122 = loc(callsite(#loc30 at #loc53))
#loc123 = loc(callsite(#loc31 at #loc53))
#loc124 = loc(callsite(#loc33 at #loc55))
#loc125 = loc(callsite(#loc35 at #loc55))
#loc126 = loc(callsite(#loc36 at #loc55))
#loc127 = loc(callsite(#loc37 at #loc55))
#loc128 = loc(callsite(#loc60 at #loc61))
#loc130 = loc(callsite(#loc27 at #loc60))
#loc131 = loc(callsite(#loc29 at #loc60))
#loc132 = loc(callsite(#loc30 at #loc60))
#loc133 = loc(callsite(#loc31 at #loc60))
#loc134 = loc(callsite(#loc63 at #loc64))
#loc136 = loc(callsite(#loc33 at #loc63))
#loc137 = loc(callsite(#loc35 at #loc63))
#loc138 = loc(callsite(#loc36 at #loc63))
#loc139 = loc(callsite(#loc37 at #loc63))
#loc140 = loc(fused[#loc74, #loc73])
#loc141 = loc(fused[#loc76, #loc3])
#loc142 = loc(callsite(#loc27 at #loc87))
#loc143 = loc(callsite(#loc29 at #loc87))
#loc144 = loc(callsite(#loc30 at #loc87))
#loc145 = loc(callsite(#loc31 at #loc87))
#loc146 = loc(callsite(#loc33 at #loc89))
#loc147 = loc(callsite(#loc35 at #loc89))
#loc148 = loc(callsite(#loc36 at #loc89))
#loc149 = loc(callsite(#loc37 at #loc89))
#loc150 = loc(callsite(#loc33 at #loc90))
#loc151 = loc(callsite(#loc35 at #loc90))
#loc152 = loc(callsite(#loc36 at #loc90))
#loc153 = loc(callsite(#loc37 at #loc90))
#loc154 = loc(callsite(#loc33 at #loc92))
#loc155 = loc(callsite(#loc35 at #loc92))
#loc156 = loc(callsite(#loc36 at #loc92))
#loc157 = loc(callsite(#loc37 at #loc92))
#loc158 = loc(callsite(#loc33 at #loc96))
#loc159 = loc(callsite(#loc35 at #loc96))
#loc160 = loc(callsite(#loc36 at #loc96))
#loc161 = loc(callsite(#loc37 at #loc96))
#loc162 = loc(callsite(#loc27 at #loc97))
#loc163 = loc(callsite(#loc29 at #loc97))
#loc164 = loc(callsite(#loc30 at #loc97))
#loc165 = loc(callsite(#loc31 at #loc97))
#loc166 = loc(callsite(#loc130 at #loc61))
#loc167 = loc(callsite(#loc131 at #loc61))
#loc168 = loc(callsite(#loc132 at #loc61))
#loc169 = loc(callsite(#loc133 at #loc61))
#loc170 = loc(callsite(#loc136 at #loc64))
#loc171 = loc(callsite(#loc137 at #loc64))
#loc172 = loc(callsite(#loc138 at #loc64))
#loc173 = loc(callsite(#loc139 at #loc64))
