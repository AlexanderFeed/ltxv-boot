//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<262>;
	.reg .f32 	%f<162>;
	.reg .b64 	%rd<28>;
	.loc	1 17 0                          // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:17:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_bmm_param_2];
	ld.param.u64 	%rd10, [triton_bmm_param_0];
	ld.param.u64 	%rd11, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:41:24
	mov.u32 	%r26, %ctaid.x;
	.loc	1 47 22                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:47:22
	shr.s32 	%r27, %r26, 31;
	shr.u32 	%r28, %r27, 29;
	add.s32 	%r29, %r26, %r28;
	.loc	1 48 41                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:48:41
	and.b32  	%r30, %r29, -8;
	.loc	1 48 30                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:48:30
	sub.s32 	%r31, 8, %r30;
	.loc	1 48 50                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:48:50
	min.s32 	%r32, %r31, 8;
	.loc	1 49 40                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:49:40
	rem.s32 	%r33, %r26, %r32;
	.loc	1 49 34                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:49:34
	add.s32 	%r34, %r33, %r30;
	.loc	1 50 19                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:50:19
	sub.s32 	%r35, %r26, %r30;
	.loc	1 50 30                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:50:30
	div.s32 	%r36, %r35, %r32;
	.loc	1 52 17                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:52:17
	shl.b32 	%r1, %r34, 6;
	.loc	1 52 40                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r37, %r2, 4;
	shr.u32 	%r38, %r2, 1;
	and.b32  	%r39, %r38, 8;
	bfe.u32 	%r40, %r2, 1, 6;
	bfe.u32 	%r3, %r2, 3, 4;
	shl.b32 	%r4, %r2, 3;
	and.b32  	%r41, %r4, 8;
	and.b32  	%r42, %r4, 16;
	and.b32  	%r43, %r4, 24;
	shl.b32 	%r44, %r37, 3;
	or.b32  	%r5, %r43, %r44;
	.loc	1 52 27                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:52:27
	or.b32  	%r45, %r1, %r40;
	.loc	1 53 17                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:53:17
	shl.b32 	%r46, %r36, 6;
	.loc	1 53 27                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:53:27
	or.b32  	%r6, %r46, %r5;
	.loc	1 55 52                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:55:52
	bfe.s32 	%r47, %r34, 25, 1;
	shr.u32 	%r48, %r47, 23;
	add.s32 	%r49, %r45, %r48;
	and.b32  	%r50, %r49, 8388096;
	sub.s32 	%r51, %r45, %r50;
	.loc	1 61 19                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:61:19
	bfe.s32 	%r52, %r36, 25, 1;
	shr.u32 	%r53, %r52, 26;
	add.s32 	%r54, %r6, %r53;
	and.b32  	%r55, %r54, -64;
	sub.s32 	%r56, %r6, %r55;
	.loc	1 65 26                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:65:26
	mov.u32 	%r7, %ctaid.y;
	.loc	1 66 28                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:66:28
	shl.b32 	%r57, %r51, 9;
	.loc	1 66 72                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:66:72
	shl.b32 	%r58, %r7, 18;
	.loc	1 66 40                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:66:40
	or.b32  	%r59, %r41, %r58;
	.loc	1 66 66                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:66:66
	add.s32 	%r60, %r59, %r57;
	.loc	1 66 13                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:66:13
	mul.wide.s32 	%rd12, %r60, 2;
	add.s64 	%rd8, %rd10, %rd12;
	.loc	1 67 27                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:67:27
	shl.b32 	%r61, %r3, 12;
	.loc	1 67 72                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:67:72
	shl.b32 	%r62, %r7, 6;
	.loc	1 67 39                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:67:39
	add.s32 	%r63, %r61, %r62;
	.loc	1 67 66                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:67:66
	add.s32 	%r64, %r63, %r56;
	.loc	1 67 13                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:67:13
	mul.wide.s32 	%rd13, %r64, 2;
	add.s64 	%rd9, %rd11, %rd13;
	.loc	1 72 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:72:24
	xor.b32  	%r65, %r4, %r2;
	and.b32  	%r66, %r65, 8;
	shl.b32 	%r67, %r66, 1;
	shl.b32 	%r68, %r40, 5;
	or.b32  	%r69, %r68, %r67;
	mov.u32 	%r70, global_smem;
	add.s32 	%r169, %r70, %r69;
	mov.b32 	%r21, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r169 + 0 ], [ %rd8 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:73:24
	and.b32  	%r71, %r2, 56;
	xor.b32  	%r72, %r5, %r71;
	shl.b32 	%r73, %r72, 1;
	shl.b32 	%r74, %r3, 7;
	or.b32  	%r75, %r74, %r73;
	add.s32 	%r76, %r70, %r75;
	add.s32 	%r22, %r76, 2048;
	// begin inline asm
	cp.async.cg.shared.global [ %r22 + 0 ], [ %rd9 + 0 ], 0x10, %r21;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r77, %r37, 1;
	and.b32  	%r78, %r2, 15;
	xor.b32  	%r79, %r77, %r39;
	shr.u32 	%r80, %r2, 2;
	and.b32  	%r81, %r80, 16;
	or.b32  	%r82, %r81, %r78;
	shl.b32 	%r83, %r82, 4;
	or.b32  	%r10, %r83, %r79;
	and.b32  	%r11, %r80, 8;
	xor.b32  	%r84, %r5, %r11;
	shl.b32 	%r85, %r78, 6;
	or.b32  	%r12, %r84, %r85;
	or.b32  	%r86, %r41, 16;
	xor.b32  	%r87, %r86, %r42;
	or.b32  	%r88, %r87, %r44;
	xor.b32  	%r89, %r88, %r11;
	or.b32  	%r13, %r89, %r85;
	or.b32  	%r90, %r43, 32;
	or.b32  	%r91, %r11, %r44;
	xor.b32  	%r92, %r91, %r90;
	or.b32  	%r14, %r92, %r85;
	or.b32  	%r93, %r41, 48;
	or.b32  	%r94, %r44, %r42;
	or.b32  	%r95, %r94, %r11;
	xor.b32  	%r96, %r95, %r93;
	or.b32  	%r15, %r96, %r85;
	.loc	1 70 25                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:70:25
	add.s64 	%rd27, %rd9, 131072;
	add.s32 	%r97, %r58, %r57;
	or.b32  	%r98, %r97, %r41;
	mul.wide.s32 	%rd14, %r98, 2;
	add.s64 	%rd15, %rd14, %rd10;
	add.s64 	%rd26, %rd15, 32;
	mov.b32 	%r261, 0;
	mov.f32 	%f130, 0f00000000;
	mov.b32 	%r260, -1;
	shl.b32 	%r177, %r10, 1;
	shl.b32 	%r179, %r12, 1;
	shl.b32 	%r180, %r13, 1;
	shl.b32 	%r181, %r14, 1;
	shl.b32 	%r182, %r15, 1;
	mov.f32 	%f131, %f130;
	mov.f32 	%f132, %f130;
	mov.f32 	%f133, %f130;
	mov.f32 	%f134, %f130;
	mov.f32 	%f135, %f130;
	mov.f32 	%f136, %f130;
	mov.f32 	%f137, %f130;
	mov.f32 	%f138, %f130;
	mov.f32 	%f139, %f130;
	mov.f32 	%f140, %f130;
	mov.f32 	%f141, %f130;
	mov.f32 	%f142, %f130;
	mov.f32 	%f143, %f130;
	mov.f32 	%f144, %f130;
	mov.f32 	%f145, %f130;
	mov.f32 	%f146, %f130;
	mov.f32 	%f147, %f130;
	mov.f32 	%f148, %f130;
	mov.f32 	%f149, %f130;
	mov.f32 	%f150, %f130;
	mov.f32 	%f151, %f130;
	mov.f32 	%f152, %f130;
	mov.f32 	%f153, %f130;
	mov.f32 	%f154, %f130;
	mov.f32 	%f155, %f130;
	mov.f32 	%f156, %f130;
	mov.f32 	%f157, %f130;
	mov.f32 	%f158, %f130;
	mov.f32 	%f159, %f130;
	mov.f32 	%f160, %f130;
	mov.f32 	%f161, %f130;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u32 	%p1, %r261, 496;
	add.s32 	%r173, %r260, 1;
	setp.gt.u32 	%p2, %r260, 2147483646;
	selp.b32 	%r260, %r173, 0, %p2;
	.loc	1 72 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:72:24
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r174, %r260, 11;
	add.s32 	%r176, %r70, %r174;
	add.s32 	%r103, %r176, %r177;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r121, %r122, %r123, %r124}, [%r103];
	// end inline asm
	add.s32 	%r108, %r103, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r145, %r146, %r147, %r148}, [%r108];
	// end inline asm
	.loc	1 73 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:73:24
	add.s32 	%r178, %r176, 2048;
	add.s32 	%r111, %r178, %r179;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r125, %r126}, [%r111];
	// end inline asm
	add.s32 	%r114, %r178, %r180;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r131, %r132}, [%r114];
	// end inline asm
	add.s32 	%r117, %r178, %r181;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r137, %r138}, [%r117];
	// end inline asm
	add.s32 	%r120, %r178, %r182;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r143, %r144}, [%r120];
	// end inline asm
	.loc	1 77 25                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f130, %f131, %f132, %f133 }, { %r121, %r122, %r123, %r124 }, { %r125, %r126 }, { %f130, %f131, %f132, %f133 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f134, %f135, %f136, %f137 }, { %r121, %r122, %r123, %r124 }, { %r131, %r132 }, { %f134, %f135, %f136, %f137 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f138, %f139, %f140, %f141 }, { %r121, %r122, %r123, %r124 }, { %r137, %r138 }, { %f138, %f139, %f140, %f141 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f142, %f143, %f144, %f145 }, { %r121, %r122, %r123, %r124 }, { %r143, %r144 }, { %f142, %f143, %f144, %f145 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r145, %r146, %r147, %r148 }, { %r125, %r126 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r145, %r146, %r147, %r148 }, { %r131, %r132 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f154, %f155, %f156, %f157 }, { %r145, %r146, %r147, %r148 }, { %r137, %r138 }, { %f154, %f155, %f156, %f157 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f158, %f159, %f160, %f161 }, { %r145, %r146, %r147, %r148 }, { %r143, %r144 }, { %f158, %f159, %f160, %f161 };
	// end inline asm
	.loc	1 72 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:72:24
	bar.sync 	0;
	selp.b32 	%r170, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r169 + 0 ], [ %rd26 + 0 ], 0x10, %r170;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r22 + 0 ], [ %rd27 + 0 ], 0x10, %r170;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:70:25
	add.s32 	%r261, %r261, 16;
	add.s64 	%rd27, %rd27, 131072;
	add.s64 	%rd26, %rd26, 32;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:52:40
	or.b32  	%r215, %r1, %r3;
	.loc	1 52 27                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:52:27
	or.b32  	%r216, %r215, 48;
	or.b32  	%r217, %r215, 32;
	or.b32  	%r218, %r215, 16;
	.loc	1 70 25                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:87:20
	setp.lt.s32 	%p23, %r215, 512;
	setp.lt.s32 	%p24, %r218, 512;
	setp.lt.s32 	%p25, %r217, 512;
	setp.lt.s32 	%p26, %r216, 512;
	.loc	1 87 34                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:87:34
	setp.lt.s32 	%p27, %r6, 64;
	.loc	1 87 26                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:87:26
	and.pred  	%p19, %p23, %p27;
	and.pred  	%p20, %p24, %p27;
	and.pred  	%p21, %p25, %p27;
	and.pred  	%p22, %p26, %p27;
	.loc	1 90 24                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:24
	shl.b32 	%r219, %r215, 6;
	shl.b32 	%r220, %r218, 6;
	shl.b32 	%r221, %r217, 6;
	shl.b32 	%r222, %r216, 6;
	.loc	1 90 38                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:38
	shl.b32 	%r223, %r7, 15;
	.loc	1 90 21                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:21
	add.s32 	%r224, %r6, %r223;
	.loc	1 90 32                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:32
	add.s32 	%r225, %r224, %r219;
	.loc	1 90 21                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:21
	add.s32 	%r226, %r220, %r223;
	.loc	1 90 32                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:32
	add.s32 	%r227, %r226, %r6;
	.loc	1 90 21                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:21
	add.s32 	%r228, %r221, %r223;
	.loc	1 90 32                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:32
	add.s32 	%r229, %r228, %r6;
	.loc	1 90 21                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:21
	add.s32 	%r230, %r222, %r223;
	.loc	1 90 32                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:90:32
	add.s32 	%r231, %r230, %r6;
	.loc	1 91 25                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:91:25
	mul.wide.s32 	%rd22, %r225, 2;
	add.s64 	%rd18, %rd7, %rd22;
	mul.wide.s32 	%rd23, %r227, 2;
	add.s64 	%rd19, %rd7, %rd23;
	mul.wide.s32 	%rd24, %r229, 2;
	add.s64 	%rd20, %rd7, %rd24;
	mul.wide.s32 	%rd25, %r231, 2;
	add.s64 	%rd21, %rd7, %rd25;
	.loc	1 91 67                         // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f130;
	cvt.rn.bf16.f32 	%rs2, %f131;
	cvt.rn.bf16.f32 	%rs3, %f132;
	cvt.rn.bf16.f32 	%rs4, %f133;
	cvt.rn.bf16.f32 	%rs5, %f134;
	cvt.rn.bf16.f32 	%rs6, %f135;
	cvt.rn.bf16.f32 	%rs7, %f136;
	cvt.rn.bf16.f32 	%rs8, %f137;
	cvt.rn.bf16.f32 	%rs9, %f138;
	cvt.rn.bf16.f32 	%rs10, %f139;
	cvt.rn.bf16.f32 	%rs11, %f140;
	cvt.rn.bf16.f32 	%rs12, %f141;
	cvt.rn.bf16.f32 	%rs13, %f142;
	cvt.rn.bf16.f32 	%rs14, %f143;
	cvt.rn.bf16.f32 	%rs15, %f144;
	cvt.rn.bf16.f32 	%rs16, %f145;
	cvt.rn.bf16.f32 	%rs17, %f146;
	cvt.rn.bf16.f32 	%rs18, %f147;
	cvt.rn.bf16.f32 	%rs19, %f148;
	cvt.rn.bf16.f32 	%rs20, %f149;
	cvt.rn.bf16.f32 	%rs21, %f150;
	cvt.rn.bf16.f32 	%rs22, %f151;
	cvt.rn.bf16.f32 	%rs23, %f152;
	cvt.rn.bf16.f32 	%rs24, %f153;
	cvt.rn.bf16.f32 	%rs25, %f154;
	cvt.rn.bf16.f32 	%rs26, %f155;
	cvt.rn.bf16.f32 	%rs27, %f156;
	cvt.rn.bf16.f32 	%rs28, %f157;
	cvt.rn.bf16.f32 	%rs29, %f158;
	cvt.rn.bf16.f32 	%rs30, %f159;
	cvt.rn.bf16.f32 	%rs31, %f160;
	cvt.rn.bf16.f32 	%rs32, %f161;
	shl.b32 	%r232, %r2, 1;
	and.b32  	%r233, %r232, 6;
	shl.b32 	%r234, %r2, 4;
	and.b32  	%r235, %r234, 192;
	or.b32  	%r236, %r235, %r233;
	and.b32  	%r237, %r234, 1280;
	or.b32  	%r238, %r237, %r236;
	or.b32  	%r239, %r238, %r11;
	and.b32  	%r240, %r4, 960;
	or.b32  	%r241, %r5, %r240;
	shr.u32 	%r242, %r238, 2;
	and.b32  	%r243, %r242, 368;
	add.s32 	%r245, %r70, %r243;
	shl.b32 	%r246, %r239, 1;
	add.s32 	%r183, %r245, %r246;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r183 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r247, %r238, 512;
	shr.u32 	%r248, %r247, 2;
	and.b32  	%r249, %r248, 496;
	add.s32 	%r250, %r70, %r249;
	add.s32 	%r251, %r250, %r246;
	add.s32 	%r184, %r251, 1024;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r184 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r185, %r183, 32;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r185 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r186, %r251, 1056;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r186 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r187, %r183, 64;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r187 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r188, %r251, 1088;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r188 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r189, %r183, 96;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r189 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r190, %r251, 1120;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r190 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r252, %r240, 2;
	add.s32 	%r253, %r70, %r252;
	shl.b32 	%r254, %r241, 1;
	add.s32 	%r255, %r253, %r254;
	ld.shared.v4.u32 	{%r199, %r200, %r201, %r202}, [%r255];
	or.b32  	%r256, %r240, 1024;
	shr.u32 	%r257, %r256, 2;
	add.s32 	%r258, %r70, %r257;
	add.s32 	%r259, %r258, %r254;
	ld.shared.v4.u32 	{%r203, %r204, %r205, %r206}, [%r259+2048];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r183 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r184 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r185 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r186 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r187 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r188 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r189 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r190 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r207, %r208, %r209, %r210}, [%r255];
	ld.shared.v4.u32 	{%r211, %r212, %r213, %r214}, [%r259+2048];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd18 + 0 ], { %r199, %r200, %r201, %r202 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd19 + 0 ], { %r203, %r204, %r205, %r206 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd20 + 0 ], { %r207, %r208, %r209, %r210 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd21 + 0 ], { %r211, %r212, %r213, %r214 };
	// end inline asm
	.loc	1 91 4                          // ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/a7/ca7oqkzqfzpyd5sxbum4dzg3n3dk6rkive56gozqpm2hkbtutms3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 55
.b8 111
.b8 113
.b8 107
.b8 122
.b8 113
.b8 102
.b8 122
.b8 112
.b8 121
.b8 100
.b8 53
.b8 115
.b8 120
.b8 98
.b8 117
.b8 109
.b8 52
.b8 100
.b8 122
.b8 103
.b8 51
.b8 110
.b8 51
.b8 100
.b8 107
.b8 54
.b8 114
.b8 107
.b8 105
.b8 118
.b8 101
.b8 53
.b8 54
.b8 103
.b8 111
.b8 122
.b8 113
.b8 112
.b8 109
.b8 50
.b8 104
.b8 107
.b8 98
.b8 116
.b8 117
.b8 116
.b8 109
.b8 115
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 97
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
