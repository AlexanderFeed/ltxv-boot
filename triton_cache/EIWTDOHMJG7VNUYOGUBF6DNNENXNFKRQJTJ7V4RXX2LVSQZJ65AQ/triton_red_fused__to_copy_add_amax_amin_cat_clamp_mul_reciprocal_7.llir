; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = icmp slt i32 %9, 4112, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = and i32 %11, 31, !dbg !11
  %13 = lshr i32 %11, 5, !dbg !11
  %14 = shl i32 %11, 4, !dbg !11
  %15 = and i32 %14, 16368, !dbg !11
  %16 = icmp samesign ult i32 %15, 15360, !dbg !12
  %17 = icmp samesign ult i32 %15, 3072, !dbg !13
  %18 = mul i32 %9, 3072, !dbg !14
  %19 = add i32 %15, %18, !dbg !15
  %20 = or disjoint i32 %18, 8, !dbg !11
  %21 = add i32 %20, %15, !dbg !15
  %22 = sext i32 %19 to i64, !dbg !16
  %23 = getelementptr bfloat, ptr addrspace(1) %0, i64 %22, !dbg !16
  %24 = sext i32 %21 to i64, !dbg !16
  %25 = getelementptr bfloat, ptr addrspace(1) %0, i64 %24, !dbg !16
  %26 = and i1 %10, %16, !dbg !17
  %27 = and i1 %10, %17, !dbg !18
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %23, i1 %27) #5, !dbg !19
  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !19
  %30 = bitcast i32 %29 to <2 x bfloat>, !dbg !19
  %31 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !19
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !19
  %33 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !19
  %34 = bitcast i32 %33 to <2 x bfloat>, !dbg !19
  %35 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !19
  %36 = bitcast i32 %35 to <2 x bfloat>, !dbg !19
  %37 = extractelement <2 x bfloat> %30, i64 0, !dbg !19
  %38 = extractelement <2 x bfloat> %30, i64 1, !dbg !19
  %39 = extractelement <2 x bfloat> %32, i64 0, !dbg !19
  %40 = extractelement <2 x bfloat> %32, i64 1, !dbg !19
  %41 = extractelement <2 x bfloat> %34, i64 0, !dbg !19
  %42 = extractelement <2 x bfloat> %34, i64 1, !dbg !19
  %43 = extractelement <2 x bfloat> %36, i64 0, !dbg !19
  %44 = extractelement <2 x bfloat> %36, i64 1, !dbg !19
  %45 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %25, i1 %27) #5, !dbg !19
  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !19
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !19
  %48 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !19
  %49 = bitcast i32 %48 to <2 x bfloat>, !dbg !19
  %50 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !19
  %51 = bitcast i32 %50 to <2 x bfloat>, !dbg !19
  %52 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !19
  %53 = bitcast i32 %52 to <2 x bfloat>, !dbg !19
  %54 = extractelement <2 x bfloat> %47, i64 0, !dbg !19
  %55 = extractelement <2 x bfloat> %47, i64 1, !dbg !19
  %56 = extractelement <2 x bfloat> %49, i64 0, !dbg !19
  %57 = extractelement <2 x bfloat> %49, i64 1, !dbg !19
  %58 = extractelement <2 x bfloat> %51, i64 0, !dbg !19
  %59 = extractelement <2 x bfloat> %51, i64 1, !dbg !19
  %60 = extractelement <2 x bfloat> %53, i64 0, !dbg !19
  %61 = extractelement <2 x bfloat> %53, i64 1, !dbg !19
  %62 = fpext bfloat %37 to float, !dbg !20
  %63 = fpext bfloat %38 to float, !dbg !20
  %64 = fpext bfloat %39 to float, !dbg !20
  %65 = fpext bfloat %40 to float, !dbg !20
  %66 = fpext bfloat %41 to float, !dbg !20
  %67 = fpext bfloat %42 to float, !dbg !20
  %68 = fpext bfloat %43 to float, !dbg !20
  %69 = fpext bfloat %44 to float, !dbg !20
  %70 = fpext bfloat %54 to float, !dbg !20
  %71 = fpext bfloat %55 to float, !dbg !20
  %72 = fpext bfloat %56 to float, !dbg !20
  %73 = fpext bfloat %57 to float, !dbg !20
  %74 = fpext bfloat %58 to float, !dbg !20
  %75 = fpext bfloat %59 to float, !dbg !20
  %76 = fpext bfloat %60 to float, !dbg !20
  %77 = fpext bfloat %61 to float, !dbg !20
  %78 = icmp samesign ugt i32 %15, 3071, !dbg !21
  %79 = mul i32 %9, 12288, !dbg !22
  %80 = add i32 %15, %79, !dbg !23
  %81 = add i32 %80, -3072, !dbg !24
  %82 = add i32 %80, -3068, !dbg !24
  %83 = add i32 %80, -3064, !dbg !24
  %84 = add i32 %80, -3060, !dbg !24
  %85 = sext i32 %81 to i64, !dbg !25
  %86 = getelementptr float, ptr addrspace(1) %1, i64 %85, !dbg !25
  %87 = sext i32 %82 to i64, !dbg !25
  %88 = getelementptr float, ptr addrspace(1) %1, i64 %87, !dbg !25
  %89 = sext i32 %83 to i64, !dbg !25
  %90 = getelementptr float, ptr addrspace(1) %1, i64 %89, !dbg !25
  %91 = sext i32 %84 to i64, !dbg !25
  %92 = getelementptr float, ptr addrspace(1) %1, i64 %91, !dbg !25
  %93 = and i1 %78, %26, !dbg !26
  %94 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %86, i1 %93) #5, !dbg !27
  %95 = extractvalue { i32, i32, i32, i32 } %94, 0, !dbg !27
  %96 = extractvalue { i32, i32, i32, i32 } %94, 1, !dbg !27
  %97 = extractvalue { i32, i32, i32, i32 } %94, 2, !dbg !27
  %98 = extractvalue { i32, i32, i32, i32 } %94, 3, !dbg !27
  %99 = bitcast i32 %95 to float, !dbg !27
  %100 = bitcast i32 %96 to float, !dbg !27
  %101 = bitcast i32 %97 to float, !dbg !27
  %102 = bitcast i32 %98 to float, !dbg !27
  %103 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %88, i1 %93) #5, !dbg !27
  %104 = extractvalue { i32, i32, i32, i32 } %103, 0, !dbg !27
  %105 = extractvalue { i32, i32, i32, i32 } %103, 1, !dbg !27
  %106 = extractvalue { i32, i32, i32, i32 } %103, 2, !dbg !27
  %107 = extractvalue { i32, i32, i32, i32 } %103, 3, !dbg !27
  %108 = bitcast i32 %104 to float, !dbg !27
  %109 = bitcast i32 %105 to float, !dbg !27
  %110 = bitcast i32 %106 to float, !dbg !27
  %111 = bitcast i32 %107 to float, !dbg !27
  %112 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %90, i1 %93) #5, !dbg !27
  %113 = extractvalue { i32, i32, i32, i32 } %112, 0, !dbg !27
  %114 = extractvalue { i32, i32, i32, i32 } %112, 1, !dbg !27
  %115 = extractvalue { i32, i32, i32, i32 } %112, 2, !dbg !27
  %116 = extractvalue { i32, i32, i32, i32 } %112, 3, !dbg !27
  %117 = bitcast i32 %113 to float, !dbg !27
  %118 = bitcast i32 %114 to float, !dbg !27
  %119 = bitcast i32 %115 to float, !dbg !27
  %120 = bitcast i32 %116 to float, !dbg !27
  %121 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %92, i1 %93) #5, !dbg !27
  %122 = extractvalue { i32, i32, i32, i32 } %121, 0, !dbg !27
  %123 = extractvalue { i32, i32, i32, i32 } %121, 1, !dbg !27
  %124 = extractvalue { i32, i32, i32, i32 } %121, 2, !dbg !27
  %125 = extractvalue { i32, i32, i32, i32 } %121, 3, !dbg !27
  %126 = bitcast i32 %122 to float, !dbg !27
  %127 = bitcast i32 %123 to float, !dbg !27
  %128 = bitcast i32 %124 to float, !dbg !27
  %129 = bitcast i32 %125 to float, !dbg !27
  %130 = fmul float %99, 5.000000e-01, !dbg !28
  %131 = fmul float %100, 5.000000e-01, !dbg !28
  %132 = fmul float %101, 5.000000e-01, !dbg !28
  %133 = fmul float %102, 5.000000e-01, !dbg !28
  %134 = fmul float %108, 5.000000e-01, !dbg !28
  %135 = fmul float %109, 5.000000e-01, !dbg !28
  %136 = fmul float %110, 5.000000e-01, !dbg !28
  %137 = fmul float %111, 5.000000e-01, !dbg !28
  %138 = fmul float %117, 5.000000e-01, !dbg !28
  %139 = fmul float %118, 5.000000e-01, !dbg !28
  %140 = fmul float %119, 5.000000e-01, !dbg !28
  %141 = fmul float %120, 5.000000e-01, !dbg !28
  %142 = fmul float %126, 5.000000e-01, !dbg !28
  %143 = fmul float %127, 5.000000e-01, !dbg !28
  %144 = fmul float %128, 5.000000e-01, !dbg !28
  %145 = fmul float %129, 5.000000e-01, !dbg !28
  %146 = fmul float %99, %99, !dbg !29
  %147 = fmul float %100, %100, !dbg !29
  %148 = fmul float %101, %101, !dbg !29
  %149 = fmul float %102, %102, !dbg !29
  %150 = fmul float %108, %108, !dbg !29
  %151 = fmul float %109, %109, !dbg !29
  %152 = fmul float %110, %110, !dbg !29
  %153 = fmul float %111, %111, !dbg !29
  %154 = fmul float %117, %117, !dbg !29
  %155 = fmul float %118, %118, !dbg !29
  %156 = fmul float %119, %119, !dbg !29
  %157 = fmul float %120, %120, !dbg !29
  %158 = fmul float %126, %126, !dbg !29
  %159 = fmul float %127, %127, !dbg !29
  %160 = fmul float %128, %128, !dbg !29
  %161 = fmul float %129, %129, !dbg !29
  %162 = fmul float %146, %99, !dbg !30
  %163 = fmul float %147, %100, !dbg !30
  %164 = fmul float %148, %101, !dbg !30
  %165 = fmul float %149, %102, !dbg !30
  %166 = fmul float %150, %108, !dbg !30
  %167 = fmul float %151, %109, !dbg !30
  %168 = fmul float %152, %110, !dbg !30
  %169 = fmul float %153, %111, !dbg !30
  %170 = fmul float %154, %117, !dbg !30
  %171 = fmul float %155, %118, !dbg !30
  %172 = fmul float %156, %119, !dbg !30
  %173 = fmul float %157, %120, !dbg !30
  %174 = fmul float %158, %126, !dbg !30
  %175 = fmul float %159, %127, !dbg !30
  %176 = fmul float %160, %128, !dbg !30
  %177 = fmul float %161, %129, !dbg !30
  %178 = fmul float %162, 0x3FA6E4E260000000, !dbg !31
  %179 = fmul float %163, 0x3FA6E4E260000000, !dbg !31
  %180 = fmul float %164, 0x3FA6E4E260000000, !dbg !31
  %181 = fmul float %165, 0x3FA6E4E260000000, !dbg !31
  %182 = fmul float %166, 0x3FA6E4E260000000, !dbg !31
  %183 = fmul float %167, 0x3FA6E4E260000000, !dbg !31
  %184 = fmul float %168, 0x3FA6E4E260000000, !dbg !31
  %185 = fmul float %169, 0x3FA6E4E260000000, !dbg !31
  %186 = fmul float %170, 0x3FA6E4E260000000, !dbg !31
  %187 = fmul float %171, 0x3FA6E4E260000000, !dbg !31
  %188 = fmul float %172, 0x3FA6E4E260000000, !dbg !31
  %189 = fmul float %173, 0x3FA6E4E260000000, !dbg !31
  %190 = fmul float %174, 0x3FA6E4E260000000, !dbg !31
  %191 = fmul float %175, 0x3FA6E4E260000000, !dbg !31
  %192 = fmul float %176, 0x3FA6E4E260000000, !dbg !31
  %193 = fmul float %177, 0x3FA6E4E260000000, !dbg !31
  %194 = fadd float %178, %99, !dbg !32
  %195 = fadd float %179, %100, !dbg !32
  %196 = fadd float %180, %101, !dbg !32
  %197 = fadd float %181, %102, !dbg !32
  %198 = fadd float %182, %108, !dbg !32
  %199 = fadd float %183, %109, !dbg !32
  %200 = fadd float %184, %110, !dbg !32
  %201 = fadd float %185, %111, !dbg !32
  %202 = fadd float %186, %117, !dbg !32
  %203 = fadd float %187, %118, !dbg !32
  %204 = fadd float %188, %119, !dbg !32
  %205 = fadd float %189, %120, !dbg !32
  %206 = fadd float %190, %126, !dbg !32
  %207 = fadd float %191, %127, !dbg !32
  %208 = fadd float %192, %128, !dbg !32
  %209 = fadd float %193, %129, !dbg !32
  %210 = fmul float %194, 0x3FE9884540000000, !dbg !33
  %211 = fmul float %195, 0x3FE9884540000000, !dbg !33
  %212 = fmul float %196, 0x3FE9884540000000, !dbg !33
  %213 = fmul float %197, 0x3FE9884540000000, !dbg !33
  %214 = fmul float %198, 0x3FE9884540000000, !dbg !33
  %215 = fmul float %199, 0x3FE9884540000000, !dbg !33
  %216 = fmul float %200, 0x3FE9884540000000, !dbg !33
  %217 = fmul float %201, 0x3FE9884540000000, !dbg !33
  %218 = fmul float %202, 0x3FE9884540000000, !dbg !33
  %219 = fmul float %203, 0x3FE9884540000000, !dbg !33
  %220 = fmul float %204, 0x3FE9884540000000, !dbg !33
  %221 = fmul float %205, 0x3FE9884540000000, !dbg !33
  %222 = fmul float %206, 0x3FE9884540000000, !dbg !33
  %223 = fmul float %207, 0x3FE9884540000000, !dbg !33
  %224 = fmul float %208, 0x3FE9884540000000, !dbg !33
  %225 = fmul float %209, 0x3FE9884540000000, !dbg !33
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i = icmp eq i32 %226, 0, !dbg !34
  %227 = tail call float @llvm.nvvm.fabs.ftz.f(float %210) #5, !dbg !34
  %228 = tail call float @llvm.nvvm.fabs.f(float %210) #5, !dbg !34
  %.01.i = select i1 %.not.i, float %228, float %227, !dbg !34
  %229 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !34
  br i1 %229, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !34

__internal_fmad.exit1.i:                          ; preds = %8
  %230 = fmul float %.01.i, 0x4007154760000000, !dbg !34
  %231 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %230) #5, !dbg !34
  %232 = fadd float %231, 1.000000e+00, !dbg !34
  %233 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %232) #6, !dbg !34, !srcloc !35
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i = icmp eq i32 %234, 0, !dbg !34
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %233, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %233, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i = select i1 %.not6.i, float %236, float %235, !dbg !34
  %237 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !34
  %s.0.i = select i1 %237, float 1.000000e+00, float %.03.i, !dbg !34
  %238 = bitcast float %s.0.i to i32, !dbg !34
  %239 = bitcast float %210 to i32, !dbg !34
  %240 = and i32 %239, -2147483648, !dbg !34
  %241 = or i32 %240, %238, !dbg !34
  %242 = bitcast i32 %241 to float, !dbg !34
  br label %__nv_tanhf.exit, !dbg !34

__internal_fmad.exit3.i:                          ; preds = %8
  %243 = fmul float %210, %210, !dbg !34
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i = icmp eq i32 %244, 0, !dbg !34
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %243, float 0xBFAAC795C0000000) #5, !dbg !34
  %246 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %243, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i = select i1 %.not1.i, float %246, float %245, !dbg !34
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i = icmp eq i32 %247, 0, !dbg !34
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %243, float 0x3FC10B2820000000) #5, !dbg !34
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %243, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i = select i1 %.not2.i, float %249, float %248, !dbg !34
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i = icmp eq i32 %250, 0, !dbg !34
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %243, float 0xBFD5553DA0000000) #5, !dbg !34
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %243, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i = select i1 %.not3.i, float %252, float %251, !dbg !34
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i = icmp eq i32 %253, 0, !dbg !34
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %243, float 0.000000e+00) #5, !dbg !34
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %243, float 0.000000e+00) #5, !dbg !34
  %.04.i = select i1 %.not4.i, float %255, float %254, !dbg !34
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i = icmp eq i32 %256, 0, !dbg !34
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %210, float %210) #5, !dbg !34
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %210, float %210) #5, !dbg !34
  %.02.i = select i1 %.not5.i, float %258, float %257, !dbg !34
  br label %__nv_tanhf.exit, !dbg !34

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %242, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !34
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i2 = icmp eq i32 %259, 0, !dbg !34
  %260 = tail call float @llvm.nvvm.fabs.ftz.f(float %211) #5, !dbg !34
  %261 = tail call float @llvm.nvvm.fabs.f(float %211) #5, !dbg !34
  %.01.i3 = select i1 %.not.i2, float %261, float %260, !dbg !34
  %262 = fcmp ult float %.01.i3, 0x3FE3333340000000, !dbg !34
  br i1 %262, label %__internal_fmad.exit3.i9, label %__internal_fmad.exit1.i4, !dbg !34

__internal_fmad.exit1.i4:                         ; preds = %__nv_tanhf.exit
  %263 = fmul float %.01.i3, 0x4007154760000000, !dbg !34
  %264 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %263) #5, !dbg !34
  %265 = fadd float %264, 1.000000e+00, !dbg !34
  %266 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %265) #6, !dbg !34, !srcloc !35
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i5 = icmp eq i32 %267, 0, !dbg !34
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i6 = select i1 %.not6.i5, float %269, float %268, !dbg !34
  %270 = fcmp oge float %.01.i3, 0x4022059680000000, !dbg !34
  %s.0.i7 = select i1 %270, float 1.000000e+00, float %.03.i6, !dbg !34
  %271 = bitcast float %s.0.i7 to i32, !dbg !34
  %272 = bitcast float %211 to i32, !dbg !34
  %273 = and i32 %272, -2147483648, !dbg !34
  %274 = or i32 %273, %271, !dbg !34
  %275 = bitcast i32 %274 to float, !dbg !34
  br label %__nv_tanhf.exit20, !dbg !34

__internal_fmad.exit3.i9:                         ; preds = %__nv_tanhf.exit
  %276 = fmul float %211, %211, !dbg !34
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i10 = icmp eq i32 %277, 0, !dbg !34
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %276, float 0xBFAAC795C0000000) #5, !dbg !34
  %279 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %276, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i11 = select i1 %.not1.i10, float %279, float %278, !dbg !34
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i12 = icmp eq i32 %280, 0, !dbg !34
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %276, float 0x3FC10B2820000000) #5, !dbg !34
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %276, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i13 = select i1 %.not2.i12, float %282, float %281, !dbg !34
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i14 = icmp eq i32 %283, 0, !dbg !34
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i13, float %276, float 0xBFD5553DA0000000) #5, !dbg !34
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i13, float %276, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i15 = select i1 %.not3.i14, float %285, float %284, !dbg !34
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i16 = icmp eq i32 %286, 0, !dbg !34
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %276, float 0.000000e+00) #5, !dbg !34
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %276, float 0.000000e+00) #5, !dbg !34
  %.04.i17 = select i1 %.not4.i16, float %288, float %287, !dbg !34
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i18 = icmp eq i32 %289, 0, !dbg !34
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i17, float %211, float %211) #5, !dbg !34
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i17, float %211, float %211) #5, !dbg !34
  %.02.i19 = select i1 %.not5.i18, float %291, float %290, !dbg !34
  br label %__nv_tanhf.exit20, !dbg !34

__nv_tanhf.exit20:                                ; preds = %__internal_fmad.exit1.i4, %__internal_fmad.exit3.i9
  %s.1.i8 = phi float [ %275, %__internal_fmad.exit1.i4 ], [ %.02.i19, %__internal_fmad.exit3.i9 ], !dbg !34
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i21 = icmp eq i32 %292, 0, !dbg !34
  %293 = tail call float @llvm.nvvm.fabs.ftz.f(float %212) #5, !dbg !34
  %294 = tail call float @llvm.nvvm.fabs.f(float %212) #5, !dbg !34
  %.01.i22 = select i1 %.not.i21, float %294, float %293, !dbg !34
  %295 = fcmp ult float %.01.i22, 0x3FE3333340000000, !dbg !34
  br i1 %295, label %__internal_fmad.exit3.i28, label %__internal_fmad.exit1.i23, !dbg !34

__internal_fmad.exit1.i23:                        ; preds = %__nv_tanhf.exit20
  %296 = fmul float %.01.i22, 0x4007154760000000, !dbg !34
  %297 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %296) #5, !dbg !34
  %298 = fadd float %297, 1.000000e+00, !dbg !34
  %299 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %298) #6, !dbg !34, !srcloc !35
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i24 = icmp eq i32 %300, 0, !dbg !34
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %299, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %299, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i25 = select i1 %.not6.i24, float %302, float %301, !dbg !34
  %303 = fcmp oge float %.01.i22, 0x4022059680000000, !dbg !34
  %s.0.i26 = select i1 %303, float 1.000000e+00, float %.03.i25, !dbg !34
  %304 = bitcast float %s.0.i26 to i32, !dbg !34
  %305 = bitcast float %212 to i32, !dbg !34
  %306 = and i32 %305, -2147483648, !dbg !34
  %307 = or i32 %306, %304, !dbg !34
  %308 = bitcast i32 %307 to float, !dbg !34
  br label %__nv_tanhf.exit39, !dbg !34

__internal_fmad.exit3.i28:                        ; preds = %__nv_tanhf.exit20
  %309 = fmul float %212, %212, !dbg !34
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i29 = icmp eq i32 %310, 0, !dbg !34
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %309, float 0xBFAAC795C0000000) #5, !dbg !34
  %312 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %309, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i30 = select i1 %.not1.i29, float %312, float %311, !dbg !34
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i31 = icmp eq i32 %313, 0, !dbg !34
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i30, float %309, float 0x3FC10B2820000000) #5, !dbg !34
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i30, float %309, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i32 = select i1 %.not2.i31, float %315, float %314, !dbg !34
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i33 = icmp eq i32 %316, 0, !dbg !34
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i32, float %309, float 0xBFD5553DA0000000) #5, !dbg !34
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i32, float %309, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i34 = select i1 %.not3.i33, float %318, float %317, !dbg !34
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i35 = icmp eq i32 %319, 0, !dbg !34
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i34, float %309, float 0.000000e+00) #5, !dbg !34
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i34, float %309, float 0.000000e+00) #5, !dbg !34
  %.04.i36 = select i1 %.not4.i35, float %321, float %320, !dbg !34
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i37 = icmp eq i32 %322, 0, !dbg !34
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i36, float %212, float %212) #5, !dbg !34
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i36, float %212, float %212) #5, !dbg !34
  %.02.i38 = select i1 %.not5.i37, float %324, float %323, !dbg !34
  br label %__nv_tanhf.exit39, !dbg !34

__nv_tanhf.exit39:                                ; preds = %__internal_fmad.exit1.i23, %__internal_fmad.exit3.i28
  %s.1.i27 = phi float [ %308, %__internal_fmad.exit1.i23 ], [ %.02.i38, %__internal_fmad.exit3.i28 ], !dbg !34
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i40 = icmp eq i32 %325, 0, !dbg !34
  %326 = tail call float @llvm.nvvm.fabs.ftz.f(float %213) #5, !dbg !34
  %327 = tail call float @llvm.nvvm.fabs.f(float %213) #5, !dbg !34
  %.01.i41 = select i1 %.not.i40, float %327, float %326, !dbg !34
  %328 = fcmp ult float %.01.i41, 0x3FE3333340000000, !dbg !34
  br i1 %328, label %__internal_fmad.exit3.i47, label %__internal_fmad.exit1.i42, !dbg !34

__internal_fmad.exit1.i42:                        ; preds = %__nv_tanhf.exit39
  %329 = fmul float %.01.i41, 0x4007154760000000, !dbg !34
  %330 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %329) #5, !dbg !34
  %331 = fadd float %330, 1.000000e+00, !dbg !34
  %332 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %331) #6, !dbg !34, !srcloc !35
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i43 = icmp eq i32 %333, 0, !dbg !34
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %332, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %332, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i44 = select i1 %.not6.i43, float %335, float %334, !dbg !34
  %336 = fcmp oge float %.01.i41, 0x4022059680000000, !dbg !34
  %s.0.i45 = select i1 %336, float 1.000000e+00, float %.03.i44, !dbg !34
  %337 = bitcast float %s.0.i45 to i32, !dbg !34
  %338 = bitcast float %213 to i32, !dbg !34
  %339 = and i32 %338, -2147483648, !dbg !34
  %340 = or i32 %339, %337, !dbg !34
  %341 = bitcast i32 %340 to float, !dbg !34
  br label %__nv_tanhf.exit58, !dbg !34

__internal_fmad.exit3.i47:                        ; preds = %__nv_tanhf.exit39
  %342 = fmul float %213, %213, !dbg !34
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i48 = icmp eq i32 %343, 0, !dbg !34
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %342, float 0xBFAAC795C0000000) #5, !dbg !34
  %345 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %342, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i49 = select i1 %.not1.i48, float %345, float %344, !dbg !34
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i50 = icmp eq i32 %346, 0, !dbg !34
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i49, float %342, float 0x3FC10B2820000000) #5, !dbg !34
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i49, float %342, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i51 = select i1 %.not2.i50, float %348, float %347, !dbg !34
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i52 = icmp eq i32 %349, 0, !dbg !34
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i51, float %342, float 0xBFD5553DA0000000) #5, !dbg !34
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i51, float %342, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i53 = select i1 %.not3.i52, float %351, float %350, !dbg !34
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i54 = icmp eq i32 %352, 0, !dbg !34
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i53, float %342, float 0.000000e+00) #5, !dbg !34
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i53, float %342, float 0.000000e+00) #5, !dbg !34
  %.04.i55 = select i1 %.not4.i54, float %354, float %353, !dbg !34
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i56 = icmp eq i32 %355, 0, !dbg !34
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i55, float %213, float %213) #5, !dbg !34
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i55, float %213, float %213) #5, !dbg !34
  %.02.i57 = select i1 %.not5.i56, float %357, float %356, !dbg !34
  br label %__nv_tanhf.exit58, !dbg !34

__nv_tanhf.exit58:                                ; preds = %__internal_fmad.exit1.i42, %__internal_fmad.exit3.i47
  %s.1.i46 = phi float [ %341, %__internal_fmad.exit1.i42 ], [ %.02.i57, %__internal_fmad.exit3.i47 ], !dbg !34
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i59 = icmp eq i32 %358, 0, !dbg !34
  %359 = tail call float @llvm.nvvm.fabs.ftz.f(float %214) #5, !dbg !34
  %360 = tail call float @llvm.nvvm.fabs.f(float %214) #5, !dbg !34
  %.01.i60 = select i1 %.not.i59, float %360, float %359, !dbg !34
  %361 = fcmp ult float %.01.i60, 0x3FE3333340000000, !dbg !34
  br i1 %361, label %__internal_fmad.exit3.i66, label %__internal_fmad.exit1.i61, !dbg !34

__internal_fmad.exit1.i61:                        ; preds = %__nv_tanhf.exit58
  %362 = fmul float %.01.i60, 0x4007154760000000, !dbg !34
  %363 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %362) #5, !dbg !34
  %364 = fadd float %363, 1.000000e+00, !dbg !34
  %365 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %364) #6, !dbg !34, !srcloc !35
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i62 = icmp eq i32 %366, 0, !dbg !34
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %365, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %365, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i63 = select i1 %.not6.i62, float %368, float %367, !dbg !34
  %369 = fcmp oge float %.01.i60, 0x4022059680000000, !dbg !34
  %s.0.i64 = select i1 %369, float 1.000000e+00, float %.03.i63, !dbg !34
  %370 = bitcast float %s.0.i64 to i32, !dbg !34
  %371 = bitcast float %214 to i32, !dbg !34
  %372 = and i32 %371, -2147483648, !dbg !34
  %373 = or i32 %372, %370, !dbg !34
  %374 = bitcast i32 %373 to float, !dbg !34
  br label %__nv_tanhf.exit77, !dbg !34

__internal_fmad.exit3.i66:                        ; preds = %__nv_tanhf.exit58
  %375 = fmul float %214, %214, !dbg !34
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i67 = icmp eq i32 %376, 0, !dbg !34
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %375, float 0xBFAAC795C0000000) #5, !dbg !34
  %378 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %375, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i68 = select i1 %.not1.i67, float %378, float %377, !dbg !34
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i69 = icmp eq i32 %379, 0, !dbg !34
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i68, float %375, float 0x3FC10B2820000000) #5, !dbg !34
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i68, float %375, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i70 = select i1 %.not2.i69, float %381, float %380, !dbg !34
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i71 = icmp eq i32 %382, 0, !dbg !34
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i70, float %375, float 0xBFD5553DA0000000) #5, !dbg !34
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i70, float %375, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i72 = select i1 %.not3.i71, float %384, float %383, !dbg !34
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i73 = icmp eq i32 %385, 0, !dbg !34
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i72, float %375, float 0.000000e+00) #5, !dbg !34
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i72, float %375, float 0.000000e+00) #5, !dbg !34
  %.04.i74 = select i1 %.not4.i73, float %387, float %386, !dbg !34
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i75 = icmp eq i32 %388, 0, !dbg !34
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i74, float %214, float %214) #5, !dbg !34
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i74, float %214, float %214) #5, !dbg !34
  %.02.i76 = select i1 %.not5.i75, float %390, float %389, !dbg !34
  br label %__nv_tanhf.exit77, !dbg !34

__nv_tanhf.exit77:                                ; preds = %__internal_fmad.exit1.i61, %__internal_fmad.exit3.i66
  %s.1.i65 = phi float [ %374, %__internal_fmad.exit1.i61 ], [ %.02.i76, %__internal_fmad.exit3.i66 ], !dbg !34
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i78 = icmp eq i32 %391, 0, !dbg !34
  %392 = tail call float @llvm.nvvm.fabs.ftz.f(float %215) #5, !dbg !34
  %393 = tail call float @llvm.nvvm.fabs.f(float %215) #5, !dbg !34
  %.01.i79 = select i1 %.not.i78, float %393, float %392, !dbg !34
  %394 = fcmp ult float %.01.i79, 0x3FE3333340000000, !dbg !34
  br i1 %394, label %__internal_fmad.exit3.i85, label %__internal_fmad.exit1.i80, !dbg !34

__internal_fmad.exit1.i80:                        ; preds = %__nv_tanhf.exit77
  %395 = fmul float %.01.i79, 0x4007154760000000, !dbg !34
  %396 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %395) #5, !dbg !34
  %397 = fadd float %396, 1.000000e+00, !dbg !34
  %398 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %397) #6, !dbg !34, !srcloc !35
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i81 = icmp eq i32 %399, 0, !dbg !34
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %398, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %398, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i82 = select i1 %.not6.i81, float %401, float %400, !dbg !34
  %402 = fcmp oge float %.01.i79, 0x4022059680000000, !dbg !34
  %s.0.i83 = select i1 %402, float 1.000000e+00, float %.03.i82, !dbg !34
  %403 = bitcast float %s.0.i83 to i32, !dbg !34
  %404 = bitcast float %215 to i32, !dbg !34
  %405 = and i32 %404, -2147483648, !dbg !34
  %406 = or i32 %405, %403, !dbg !34
  %407 = bitcast i32 %406 to float, !dbg !34
  br label %__nv_tanhf.exit96, !dbg !34

__internal_fmad.exit3.i85:                        ; preds = %__nv_tanhf.exit77
  %408 = fmul float %215, %215, !dbg !34
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i86 = icmp eq i32 %409, 0, !dbg !34
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %408, float 0xBFAAC795C0000000) #5, !dbg !34
  %411 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %408, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i87 = select i1 %.not1.i86, float %411, float %410, !dbg !34
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i88 = icmp eq i32 %412, 0, !dbg !34
  %413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i87, float %408, float 0x3FC10B2820000000) #5, !dbg !34
  %414 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i87, float %408, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i89 = select i1 %.not2.i88, float %414, float %413, !dbg !34
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i90 = icmp eq i32 %415, 0, !dbg !34
  %416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i89, float %408, float 0xBFD5553DA0000000) #5, !dbg !34
  %417 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i89, float %408, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i91 = select i1 %.not3.i90, float %417, float %416, !dbg !34
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i92 = icmp eq i32 %418, 0, !dbg !34
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i91, float %408, float 0.000000e+00) #5, !dbg !34
  %420 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i91, float %408, float 0.000000e+00) #5, !dbg !34
  %.04.i93 = select i1 %.not4.i92, float %420, float %419, !dbg !34
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i94 = icmp eq i32 %421, 0, !dbg !34
  %422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i93, float %215, float %215) #5, !dbg !34
  %423 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i93, float %215, float %215) #5, !dbg !34
  %.02.i95 = select i1 %.not5.i94, float %423, float %422, !dbg !34
  br label %__nv_tanhf.exit96, !dbg !34

__nv_tanhf.exit96:                                ; preds = %__internal_fmad.exit1.i80, %__internal_fmad.exit3.i85
  %s.1.i84 = phi float [ %407, %__internal_fmad.exit1.i80 ], [ %.02.i95, %__internal_fmad.exit3.i85 ], !dbg !34
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i97 = icmp eq i32 %424, 0, !dbg !34
  %425 = tail call float @llvm.nvvm.fabs.ftz.f(float %216) #5, !dbg !34
  %426 = tail call float @llvm.nvvm.fabs.f(float %216) #5, !dbg !34
  %.01.i98 = select i1 %.not.i97, float %426, float %425, !dbg !34
  %427 = fcmp ult float %.01.i98, 0x3FE3333340000000, !dbg !34
  br i1 %427, label %__internal_fmad.exit3.i104, label %__internal_fmad.exit1.i99, !dbg !34

__internal_fmad.exit1.i99:                        ; preds = %__nv_tanhf.exit96
  %428 = fmul float %.01.i98, 0x4007154760000000, !dbg !34
  %429 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %428) #5, !dbg !34
  %430 = fadd float %429, 1.000000e+00, !dbg !34
  %431 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %430) #6, !dbg !34, !srcloc !35
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i100 = icmp eq i32 %432, 0, !dbg !34
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %431, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %431, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i101 = select i1 %.not6.i100, float %434, float %433, !dbg !34
  %435 = fcmp oge float %.01.i98, 0x4022059680000000, !dbg !34
  %s.0.i102 = select i1 %435, float 1.000000e+00, float %.03.i101, !dbg !34
  %436 = bitcast float %s.0.i102 to i32, !dbg !34
  %437 = bitcast float %216 to i32, !dbg !34
  %438 = and i32 %437, -2147483648, !dbg !34
  %439 = or i32 %438, %436, !dbg !34
  %440 = bitcast i32 %439 to float, !dbg !34
  br label %__nv_tanhf.exit115, !dbg !34

__internal_fmad.exit3.i104:                       ; preds = %__nv_tanhf.exit96
  %441 = fmul float %216, %216, !dbg !34
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i105 = icmp eq i32 %442, 0, !dbg !34
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %441, float 0xBFAAC795C0000000) #5, !dbg !34
  %444 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %441, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i106 = select i1 %.not1.i105, float %444, float %443, !dbg !34
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i107 = icmp eq i32 %445, 0, !dbg !34
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i106, float %441, float 0x3FC10B2820000000) #5, !dbg !34
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i106, float %441, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i108 = select i1 %.not2.i107, float %447, float %446, !dbg !34
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i109 = icmp eq i32 %448, 0, !dbg !34
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i108, float %441, float 0xBFD5553DA0000000) #5, !dbg !34
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i108, float %441, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i110 = select i1 %.not3.i109, float %450, float %449, !dbg !34
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i111 = icmp eq i32 %451, 0, !dbg !34
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i110, float %441, float 0.000000e+00) #5, !dbg !34
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i110, float %441, float 0.000000e+00) #5, !dbg !34
  %.04.i112 = select i1 %.not4.i111, float %453, float %452, !dbg !34
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i113 = icmp eq i32 %454, 0, !dbg !34
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i112, float %216, float %216) #5, !dbg !34
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i112, float %216, float %216) #5, !dbg !34
  %.02.i114 = select i1 %.not5.i113, float %456, float %455, !dbg !34
  br label %__nv_tanhf.exit115, !dbg !34

__nv_tanhf.exit115:                               ; preds = %__internal_fmad.exit1.i99, %__internal_fmad.exit3.i104
  %s.1.i103 = phi float [ %440, %__internal_fmad.exit1.i99 ], [ %.02.i114, %__internal_fmad.exit3.i104 ], !dbg !34
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i116 = icmp eq i32 %457, 0, !dbg !34
  %458 = tail call float @llvm.nvvm.fabs.ftz.f(float %217) #5, !dbg !34
  %459 = tail call float @llvm.nvvm.fabs.f(float %217) #5, !dbg !34
  %.01.i117 = select i1 %.not.i116, float %459, float %458, !dbg !34
  %460 = fcmp ult float %.01.i117, 0x3FE3333340000000, !dbg !34
  br i1 %460, label %__internal_fmad.exit3.i123, label %__internal_fmad.exit1.i118, !dbg !34

__internal_fmad.exit1.i118:                       ; preds = %__nv_tanhf.exit115
  %461 = fmul float %.01.i117, 0x4007154760000000, !dbg !34
  %462 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %461) #5, !dbg !34
  %463 = fadd float %462, 1.000000e+00, !dbg !34
  %464 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %463) #6, !dbg !34, !srcloc !35
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i119 = icmp eq i32 %465, 0, !dbg !34
  %466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %464, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %467 = tail call float @llvm.nvvm.fma.rn.f(float %464, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i120 = select i1 %.not6.i119, float %467, float %466, !dbg !34
  %468 = fcmp oge float %.01.i117, 0x4022059680000000, !dbg !34
  %s.0.i121 = select i1 %468, float 1.000000e+00, float %.03.i120, !dbg !34
  %469 = bitcast float %s.0.i121 to i32, !dbg !34
  %470 = bitcast float %217 to i32, !dbg !34
  %471 = and i32 %470, -2147483648, !dbg !34
  %472 = or i32 %471, %469, !dbg !34
  %473 = bitcast i32 %472 to float, !dbg !34
  br label %__nv_tanhf.exit134, !dbg !34

__internal_fmad.exit3.i123:                       ; preds = %__nv_tanhf.exit115
  %474 = fmul float %217, %217, !dbg !34
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i124 = icmp eq i32 %475, 0, !dbg !34
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %474, float 0xBFAAC795C0000000) #5, !dbg !34
  %477 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %474, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i125 = select i1 %.not1.i124, float %477, float %476, !dbg !34
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i126 = icmp eq i32 %478, 0, !dbg !34
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i125, float %474, float 0x3FC10B2820000000) #5, !dbg !34
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i125, float %474, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i127 = select i1 %.not2.i126, float %480, float %479, !dbg !34
  %481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i128 = icmp eq i32 %481, 0, !dbg !34
  %482 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i127, float %474, float 0xBFD5553DA0000000) #5, !dbg !34
  %483 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i127, float %474, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i129 = select i1 %.not3.i128, float %483, float %482, !dbg !34
  %484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i130 = icmp eq i32 %484, 0, !dbg !34
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i129, float %474, float 0.000000e+00) #5, !dbg !34
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i129, float %474, float 0.000000e+00) #5, !dbg !34
  %.04.i131 = select i1 %.not4.i130, float %486, float %485, !dbg !34
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i132 = icmp eq i32 %487, 0, !dbg !34
  %488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i131, float %217, float %217) #5, !dbg !34
  %489 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i131, float %217, float %217) #5, !dbg !34
  %.02.i133 = select i1 %.not5.i132, float %489, float %488, !dbg !34
  br label %__nv_tanhf.exit134, !dbg !34

__nv_tanhf.exit134:                               ; preds = %__internal_fmad.exit1.i118, %__internal_fmad.exit3.i123
  %s.1.i122 = phi float [ %473, %__internal_fmad.exit1.i118 ], [ %.02.i133, %__internal_fmad.exit3.i123 ], !dbg !34
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i135 = icmp eq i32 %490, 0, !dbg !34
  %491 = tail call float @llvm.nvvm.fabs.ftz.f(float %218) #5, !dbg !34
  %492 = tail call float @llvm.nvvm.fabs.f(float %218) #5, !dbg !34
  %.01.i136 = select i1 %.not.i135, float %492, float %491, !dbg !34
  %493 = fcmp ult float %.01.i136, 0x3FE3333340000000, !dbg !34
  br i1 %493, label %__internal_fmad.exit3.i142, label %__internal_fmad.exit1.i137, !dbg !34

__internal_fmad.exit1.i137:                       ; preds = %__nv_tanhf.exit134
  %494 = fmul float %.01.i136, 0x4007154760000000, !dbg !34
  %495 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %494) #5, !dbg !34
  %496 = fadd float %495, 1.000000e+00, !dbg !34
  %497 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %496) #6, !dbg !34, !srcloc !35
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i138 = icmp eq i32 %498, 0, !dbg !34
  %499 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %497, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %500 = tail call float @llvm.nvvm.fma.rn.f(float %497, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i139 = select i1 %.not6.i138, float %500, float %499, !dbg !34
  %501 = fcmp oge float %.01.i136, 0x4022059680000000, !dbg !34
  %s.0.i140 = select i1 %501, float 1.000000e+00, float %.03.i139, !dbg !34
  %502 = bitcast float %s.0.i140 to i32, !dbg !34
  %503 = bitcast float %218 to i32, !dbg !34
  %504 = and i32 %503, -2147483648, !dbg !34
  %505 = or i32 %504, %502, !dbg !34
  %506 = bitcast i32 %505 to float, !dbg !34
  br label %__nv_tanhf.exit153, !dbg !34

__internal_fmad.exit3.i142:                       ; preds = %__nv_tanhf.exit134
  %507 = fmul float %218, %218, !dbg !34
  %508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i143 = icmp eq i32 %508, 0, !dbg !34
  %509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %507, float 0xBFAAC795C0000000) #5, !dbg !34
  %510 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %507, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i144 = select i1 %.not1.i143, float %510, float %509, !dbg !34
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i145 = icmp eq i32 %511, 0, !dbg !34
  %512 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i144, float %507, float 0x3FC10B2820000000) #5, !dbg !34
  %513 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i144, float %507, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i146 = select i1 %.not2.i145, float %513, float %512, !dbg !34
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i147 = icmp eq i32 %514, 0, !dbg !34
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i146, float %507, float 0xBFD5553DA0000000) #5, !dbg !34
  %516 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i146, float %507, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i148 = select i1 %.not3.i147, float %516, float %515, !dbg !34
  %517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i149 = icmp eq i32 %517, 0, !dbg !34
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i148, float %507, float 0.000000e+00) #5, !dbg !34
  %519 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i148, float %507, float 0.000000e+00) #5, !dbg !34
  %.04.i150 = select i1 %.not4.i149, float %519, float %518, !dbg !34
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i151 = icmp eq i32 %520, 0, !dbg !34
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i150, float %218, float %218) #5, !dbg !34
  %522 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i150, float %218, float %218) #5, !dbg !34
  %.02.i152 = select i1 %.not5.i151, float %522, float %521, !dbg !34
  br label %__nv_tanhf.exit153, !dbg !34

__nv_tanhf.exit153:                               ; preds = %__internal_fmad.exit1.i137, %__internal_fmad.exit3.i142
  %s.1.i141 = phi float [ %506, %__internal_fmad.exit1.i137 ], [ %.02.i152, %__internal_fmad.exit3.i142 ], !dbg !34
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i154 = icmp eq i32 %523, 0, !dbg !34
  %524 = tail call float @llvm.nvvm.fabs.ftz.f(float %219) #5, !dbg !34
  %525 = tail call float @llvm.nvvm.fabs.f(float %219) #5, !dbg !34
  %.01.i155 = select i1 %.not.i154, float %525, float %524, !dbg !34
  %526 = fcmp ult float %.01.i155, 0x3FE3333340000000, !dbg !34
  br i1 %526, label %__internal_fmad.exit3.i161, label %__internal_fmad.exit1.i156, !dbg !34

__internal_fmad.exit1.i156:                       ; preds = %__nv_tanhf.exit153
  %527 = fmul float %.01.i155, 0x4007154760000000, !dbg !34
  %528 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %527) #5, !dbg !34
  %529 = fadd float %528, 1.000000e+00, !dbg !34
  %530 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %529) #6, !dbg !34, !srcloc !35
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i157 = icmp eq i32 %531, 0, !dbg !34
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %530, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %530, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i158 = select i1 %.not6.i157, float %533, float %532, !dbg !34
  %534 = fcmp oge float %.01.i155, 0x4022059680000000, !dbg !34
  %s.0.i159 = select i1 %534, float 1.000000e+00, float %.03.i158, !dbg !34
  %535 = bitcast float %s.0.i159 to i32, !dbg !34
  %536 = bitcast float %219 to i32, !dbg !34
  %537 = and i32 %536, -2147483648, !dbg !34
  %538 = or i32 %537, %535, !dbg !34
  %539 = bitcast i32 %538 to float, !dbg !34
  br label %__nv_tanhf.exit172, !dbg !34

__internal_fmad.exit3.i161:                       ; preds = %__nv_tanhf.exit153
  %540 = fmul float %219, %219, !dbg !34
  %541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i162 = icmp eq i32 %541, 0, !dbg !34
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %540, float 0xBFAAC795C0000000) #5, !dbg !34
  %543 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %540, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i163 = select i1 %.not1.i162, float %543, float %542, !dbg !34
  %544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i164 = icmp eq i32 %544, 0, !dbg !34
  %545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i163, float %540, float 0x3FC10B2820000000) #5, !dbg !34
  %546 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i163, float %540, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i165 = select i1 %.not2.i164, float %546, float %545, !dbg !34
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i166 = icmp eq i32 %547, 0, !dbg !34
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i165, float %540, float 0xBFD5553DA0000000) #5, !dbg !34
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i165, float %540, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i167 = select i1 %.not3.i166, float %549, float %548, !dbg !34
  %550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i168 = icmp eq i32 %550, 0, !dbg !34
  %551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i167, float %540, float 0.000000e+00) #5, !dbg !34
  %552 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i167, float %540, float 0.000000e+00) #5, !dbg !34
  %.04.i169 = select i1 %.not4.i168, float %552, float %551, !dbg !34
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i170 = icmp eq i32 %553, 0, !dbg !34
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i169, float %219, float %219) #5, !dbg !34
  %555 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i169, float %219, float %219) #5, !dbg !34
  %.02.i171 = select i1 %.not5.i170, float %555, float %554, !dbg !34
  br label %__nv_tanhf.exit172, !dbg !34

__nv_tanhf.exit172:                               ; preds = %__internal_fmad.exit1.i156, %__internal_fmad.exit3.i161
  %s.1.i160 = phi float [ %539, %__internal_fmad.exit1.i156 ], [ %.02.i171, %__internal_fmad.exit3.i161 ], !dbg !34
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i173 = icmp eq i32 %556, 0, !dbg !34
  %557 = tail call float @llvm.nvvm.fabs.ftz.f(float %220) #5, !dbg !34
  %558 = tail call float @llvm.nvvm.fabs.f(float %220) #5, !dbg !34
  %.01.i174 = select i1 %.not.i173, float %558, float %557, !dbg !34
  %559 = fcmp ult float %.01.i174, 0x3FE3333340000000, !dbg !34
  br i1 %559, label %__internal_fmad.exit3.i180, label %__internal_fmad.exit1.i175, !dbg !34

__internal_fmad.exit1.i175:                       ; preds = %__nv_tanhf.exit172
  %560 = fmul float %.01.i174, 0x4007154760000000, !dbg !34
  %561 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %560) #5, !dbg !34
  %562 = fadd float %561, 1.000000e+00, !dbg !34
  %563 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %562) #6, !dbg !34, !srcloc !35
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i176 = icmp eq i32 %564, 0, !dbg !34
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %563, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %563, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i177 = select i1 %.not6.i176, float %566, float %565, !dbg !34
  %567 = fcmp oge float %.01.i174, 0x4022059680000000, !dbg !34
  %s.0.i178 = select i1 %567, float 1.000000e+00, float %.03.i177, !dbg !34
  %568 = bitcast float %s.0.i178 to i32, !dbg !34
  %569 = bitcast float %220 to i32, !dbg !34
  %570 = and i32 %569, -2147483648, !dbg !34
  %571 = or i32 %570, %568, !dbg !34
  %572 = bitcast i32 %571 to float, !dbg !34
  br label %__nv_tanhf.exit191, !dbg !34

__internal_fmad.exit3.i180:                       ; preds = %__nv_tanhf.exit172
  %573 = fmul float %220, %220, !dbg !34
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i181 = icmp eq i32 %574, 0, !dbg !34
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %573, float 0xBFAAC795C0000000) #5, !dbg !34
  %576 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %573, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i182 = select i1 %.not1.i181, float %576, float %575, !dbg !34
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i183 = icmp eq i32 %577, 0, !dbg !34
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i182, float %573, float 0x3FC10B2820000000) #5, !dbg !34
  %579 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i182, float %573, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i184 = select i1 %.not2.i183, float %579, float %578, !dbg !34
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i185 = icmp eq i32 %580, 0, !dbg !34
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i184, float %573, float 0xBFD5553DA0000000) #5, !dbg !34
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i184, float %573, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i186 = select i1 %.not3.i185, float %582, float %581, !dbg !34
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i187 = icmp eq i32 %583, 0, !dbg !34
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i186, float %573, float 0.000000e+00) #5, !dbg !34
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i186, float %573, float 0.000000e+00) #5, !dbg !34
  %.04.i188 = select i1 %.not4.i187, float %585, float %584, !dbg !34
  %586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i189 = icmp eq i32 %586, 0, !dbg !34
  %587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i188, float %220, float %220) #5, !dbg !34
  %588 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i188, float %220, float %220) #5, !dbg !34
  %.02.i190 = select i1 %.not5.i189, float %588, float %587, !dbg !34
  br label %__nv_tanhf.exit191, !dbg !34

__nv_tanhf.exit191:                               ; preds = %__internal_fmad.exit1.i175, %__internal_fmad.exit3.i180
  %s.1.i179 = phi float [ %572, %__internal_fmad.exit1.i175 ], [ %.02.i190, %__internal_fmad.exit3.i180 ], !dbg !34
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i192 = icmp eq i32 %589, 0, !dbg !34
  %590 = tail call float @llvm.nvvm.fabs.ftz.f(float %221) #5, !dbg !34
  %591 = tail call float @llvm.nvvm.fabs.f(float %221) #5, !dbg !34
  %.01.i193 = select i1 %.not.i192, float %591, float %590, !dbg !34
  %592 = fcmp ult float %.01.i193, 0x3FE3333340000000, !dbg !34
  br i1 %592, label %__internal_fmad.exit3.i199, label %__internal_fmad.exit1.i194, !dbg !34

__internal_fmad.exit1.i194:                       ; preds = %__nv_tanhf.exit191
  %593 = fmul float %.01.i193, 0x4007154760000000, !dbg !34
  %594 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %593) #5, !dbg !34
  %595 = fadd float %594, 1.000000e+00, !dbg !34
  %596 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %595) #6, !dbg !34, !srcloc !35
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i195 = icmp eq i32 %597, 0, !dbg !34
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %596, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %596, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i196 = select i1 %.not6.i195, float %599, float %598, !dbg !34
  %600 = fcmp oge float %.01.i193, 0x4022059680000000, !dbg !34
  %s.0.i197 = select i1 %600, float 1.000000e+00, float %.03.i196, !dbg !34
  %601 = bitcast float %s.0.i197 to i32, !dbg !34
  %602 = bitcast float %221 to i32, !dbg !34
  %603 = and i32 %602, -2147483648, !dbg !34
  %604 = or i32 %603, %601, !dbg !34
  %605 = bitcast i32 %604 to float, !dbg !34
  br label %__nv_tanhf.exit210, !dbg !34

__internal_fmad.exit3.i199:                       ; preds = %__nv_tanhf.exit191
  %606 = fmul float %221, %221, !dbg !34
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i200 = icmp eq i32 %607, 0, !dbg !34
  %608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %606, float 0xBFAAC795C0000000) #5, !dbg !34
  %609 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %606, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i201 = select i1 %.not1.i200, float %609, float %608, !dbg !34
  %610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i202 = icmp eq i32 %610, 0, !dbg !34
  %611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i201, float %606, float 0x3FC10B2820000000) #5, !dbg !34
  %612 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i201, float %606, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i203 = select i1 %.not2.i202, float %612, float %611, !dbg !34
  %613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i204 = icmp eq i32 %613, 0, !dbg !34
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i203, float %606, float 0xBFD5553DA0000000) #5, !dbg !34
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i203, float %606, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i205 = select i1 %.not3.i204, float %615, float %614, !dbg !34
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i206 = icmp eq i32 %616, 0, !dbg !34
  %617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i205, float %606, float 0.000000e+00) #5, !dbg !34
  %618 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i205, float %606, float 0.000000e+00) #5, !dbg !34
  %.04.i207 = select i1 %.not4.i206, float %618, float %617, !dbg !34
  %619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i208 = icmp eq i32 %619, 0, !dbg !34
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i207, float %221, float %221) #5, !dbg !34
  %621 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i207, float %221, float %221) #5, !dbg !34
  %.02.i209 = select i1 %.not5.i208, float %621, float %620, !dbg !34
  br label %__nv_tanhf.exit210, !dbg !34

__nv_tanhf.exit210:                               ; preds = %__internal_fmad.exit1.i194, %__internal_fmad.exit3.i199
  %s.1.i198 = phi float [ %605, %__internal_fmad.exit1.i194 ], [ %.02.i209, %__internal_fmad.exit3.i199 ], !dbg !34
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i211 = icmp eq i32 %622, 0, !dbg !34
  %623 = tail call float @llvm.nvvm.fabs.ftz.f(float %222) #5, !dbg !34
  %624 = tail call float @llvm.nvvm.fabs.f(float %222) #5, !dbg !34
  %.01.i212 = select i1 %.not.i211, float %624, float %623, !dbg !34
  %625 = fcmp ult float %.01.i212, 0x3FE3333340000000, !dbg !34
  br i1 %625, label %__internal_fmad.exit3.i218, label %__internal_fmad.exit1.i213, !dbg !34

__internal_fmad.exit1.i213:                       ; preds = %__nv_tanhf.exit210
  %626 = fmul float %.01.i212, 0x4007154760000000, !dbg !34
  %627 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %626) #5, !dbg !34
  %628 = fadd float %627, 1.000000e+00, !dbg !34
  %629 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %628) #6, !dbg !34, !srcloc !35
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i214 = icmp eq i32 %630, 0, !dbg !34
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %629, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %629, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i215 = select i1 %.not6.i214, float %632, float %631, !dbg !34
  %633 = fcmp oge float %.01.i212, 0x4022059680000000, !dbg !34
  %s.0.i216 = select i1 %633, float 1.000000e+00, float %.03.i215, !dbg !34
  %634 = bitcast float %s.0.i216 to i32, !dbg !34
  %635 = bitcast float %222 to i32, !dbg !34
  %636 = and i32 %635, -2147483648, !dbg !34
  %637 = or i32 %636, %634, !dbg !34
  %638 = bitcast i32 %637 to float, !dbg !34
  br label %__nv_tanhf.exit229, !dbg !34

__internal_fmad.exit3.i218:                       ; preds = %__nv_tanhf.exit210
  %639 = fmul float %222, %222, !dbg !34
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i219 = icmp eq i32 %640, 0, !dbg !34
  %641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %639, float 0xBFAAC795C0000000) #5, !dbg !34
  %642 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %639, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i220 = select i1 %.not1.i219, float %642, float %641, !dbg !34
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i221 = icmp eq i32 %643, 0, !dbg !34
  %644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i220, float %639, float 0x3FC10B2820000000) #5, !dbg !34
  %645 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i220, float %639, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i222 = select i1 %.not2.i221, float %645, float %644, !dbg !34
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i223 = icmp eq i32 %646, 0, !dbg !34
  %647 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i222, float %639, float 0xBFD5553DA0000000) #5, !dbg !34
  %648 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i222, float %639, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i224 = select i1 %.not3.i223, float %648, float %647, !dbg !34
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i225 = icmp eq i32 %649, 0, !dbg !34
  %650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i224, float %639, float 0.000000e+00) #5, !dbg !34
  %651 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i224, float %639, float 0.000000e+00) #5, !dbg !34
  %.04.i226 = select i1 %.not4.i225, float %651, float %650, !dbg !34
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i227 = icmp eq i32 %652, 0, !dbg !34
  %653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i226, float %222, float %222) #5, !dbg !34
  %654 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i226, float %222, float %222) #5, !dbg !34
  %.02.i228 = select i1 %.not5.i227, float %654, float %653, !dbg !34
  br label %__nv_tanhf.exit229, !dbg !34

__nv_tanhf.exit229:                               ; preds = %__internal_fmad.exit1.i213, %__internal_fmad.exit3.i218
  %s.1.i217 = phi float [ %638, %__internal_fmad.exit1.i213 ], [ %.02.i228, %__internal_fmad.exit3.i218 ], !dbg !34
  %655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i230 = icmp eq i32 %655, 0, !dbg !34
  %656 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !34
  %657 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !34
  %.01.i231 = select i1 %.not.i230, float %657, float %656, !dbg !34
  %658 = fcmp ult float %.01.i231, 0x3FE3333340000000, !dbg !34
  br i1 %658, label %__internal_fmad.exit3.i237, label %__internal_fmad.exit1.i232, !dbg !34

__internal_fmad.exit1.i232:                       ; preds = %__nv_tanhf.exit229
  %659 = fmul float %.01.i231, 0x4007154760000000, !dbg !34
  %660 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %659) #5, !dbg !34
  %661 = fadd float %660, 1.000000e+00, !dbg !34
  %662 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %661) #6, !dbg !34, !srcloc !35
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i233 = icmp eq i32 %663, 0, !dbg !34
  %664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %662, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %665 = tail call float @llvm.nvvm.fma.rn.f(float %662, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i234 = select i1 %.not6.i233, float %665, float %664, !dbg !34
  %666 = fcmp oge float %.01.i231, 0x4022059680000000, !dbg !34
  %s.0.i235 = select i1 %666, float 1.000000e+00, float %.03.i234, !dbg !34
  %667 = bitcast float %s.0.i235 to i32, !dbg !34
  %668 = bitcast float %223 to i32, !dbg !34
  %669 = and i32 %668, -2147483648, !dbg !34
  %670 = or i32 %669, %667, !dbg !34
  %671 = bitcast i32 %670 to float, !dbg !34
  br label %__nv_tanhf.exit248, !dbg !34

__internal_fmad.exit3.i237:                       ; preds = %__nv_tanhf.exit229
  %672 = fmul float %223, %223, !dbg !34
  %673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i238 = icmp eq i32 %673, 0, !dbg !34
  %674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %672, float 0xBFAAC795C0000000) #5, !dbg !34
  %675 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %672, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i239 = select i1 %.not1.i238, float %675, float %674, !dbg !34
  %676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i240 = icmp eq i32 %676, 0, !dbg !34
  %677 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i239, float %672, float 0x3FC10B2820000000) #5, !dbg !34
  %678 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i239, float %672, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i241 = select i1 %.not2.i240, float %678, float %677, !dbg !34
  %679 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i242 = icmp eq i32 %679, 0, !dbg !34
  %680 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i241, float %672, float 0xBFD5553DA0000000) #5, !dbg !34
  %681 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i241, float %672, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i243 = select i1 %.not3.i242, float %681, float %680, !dbg !34
  %682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i244 = icmp eq i32 %682, 0, !dbg !34
  %683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i243, float %672, float 0.000000e+00) #5, !dbg !34
  %684 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i243, float %672, float 0.000000e+00) #5, !dbg !34
  %.04.i245 = select i1 %.not4.i244, float %684, float %683, !dbg !34
  %685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i246 = icmp eq i32 %685, 0, !dbg !34
  %686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i245, float %223, float %223) #5, !dbg !34
  %687 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i245, float %223, float %223) #5, !dbg !34
  %.02.i247 = select i1 %.not5.i246, float %687, float %686, !dbg !34
  br label %__nv_tanhf.exit248, !dbg !34

__nv_tanhf.exit248:                               ; preds = %__internal_fmad.exit1.i232, %__internal_fmad.exit3.i237
  %s.1.i236 = phi float [ %671, %__internal_fmad.exit1.i232 ], [ %.02.i247, %__internal_fmad.exit3.i237 ], !dbg !34
  %688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i249 = icmp eq i32 %688, 0, !dbg !34
  %689 = tail call float @llvm.nvvm.fabs.ftz.f(float %224) #5, !dbg !34
  %690 = tail call float @llvm.nvvm.fabs.f(float %224) #5, !dbg !34
  %.01.i250 = select i1 %.not.i249, float %690, float %689, !dbg !34
  %691 = fcmp ult float %.01.i250, 0x3FE3333340000000, !dbg !34
  br i1 %691, label %__internal_fmad.exit3.i256, label %__internal_fmad.exit1.i251, !dbg !34

__internal_fmad.exit1.i251:                       ; preds = %__nv_tanhf.exit248
  %692 = fmul float %.01.i250, 0x4007154760000000, !dbg !34
  %693 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %692) #5, !dbg !34
  %694 = fadd float %693, 1.000000e+00, !dbg !34
  %695 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %694) #6, !dbg !34, !srcloc !35
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i252 = icmp eq i32 %696, 0, !dbg !34
  %697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %695, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %698 = tail call float @llvm.nvvm.fma.rn.f(float %695, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i253 = select i1 %.not6.i252, float %698, float %697, !dbg !34
  %699 = fcmp oge float %.01.i250, 0x4022059680000000, !dbg !34
  %s.0.i254 = select i1 %699, float 1.000000e+00, float %.03.i253, !dbg !34
  %700 = bitcast float %s.0.i254 to i32, !dbg !34
  %701 = bitcast float %224 to i32, !dbg !34
  %702 = and i32 %701, -2147483648, !dbg !34
  %703 = or i32 %702, %700, !dbg !34
  %704 = bitcast i32 %703 to float, !dbg !34
  br label %__nv_tanhf.exit267, !dbg !34

__internal_fmad.exit3.i256:                       ; preds = %__nv_tanhf.exit248
  %705 = fmul float %224, %224, !dbg !34
  %706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i257 = icmp eq i32 %706, 0, !dbg !34
  %707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %705, float 0xBFAAC795C0000000) #5, !dbg !34
  %708 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %705, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i258 = select i1 %.not1.i257, float %708, float %707, !dbg !34
  %709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i259 = icmp eq i32 %709, 0, !dbg !34
  %710 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i258, float %705, float 0x3FC10B2820000000) #5, !dbg !34
  %711 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i258, float %705, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i260 = select i1 %.not2.i259, float %711, float %710, !dbg !34
  %712 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i261 = icmp eq i32 %712, 0, !dbg !34
  %713 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i260, float %705, float 0xBFD5553DA0000000) #5, !dbg !34
  %714 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i260, float %705, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i262 = select i1 %.not3.i261, float %714, float %713, !dbg !34
  %715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i263 = icmp eq i32 %715, 0, !dbg !34
  %716 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i262, float %705, float 0.000000e+00) #5, !dbg !34
  %717 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i262, float %705, float 0.000000e+00) #5, !dbg !34
  %.04.i264 = select i1 %.not4.i263, float %717, float %716, !dbg !34
  %718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i265 = icmp eq i32 %718, 0, !dbg !34
  %719 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i264, float %224, float %224) #5, !dbg !34
  %720 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i264, float %224, float %224) #5, !dbg !34
  %.02.i266 = select i1 %.not5.i265, float %720, float %719, !dbg !34
  br label %__nv_tanhf.exit267, !dbg !34

__nv_tanhf.exit267:                               ; preds = %__internal_fmad.exit1.i251, %__internal_fmad.exit3.i256
  %s.1.i255 = phi float [ %704, %__internal_fmad.exit1.i251 ], [ %.02.i266, %__internal_fmad.exit3.i256 ], !dbg !34
  %721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i268 = icmp eq i32 %721, 0, !dbg !34
  %722 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !34
  %723 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !34
  %.01.i269 = select i1 %.not.i268, float %723, float %722, !dbg !34
  %724 = fcmp ult float %.01.i269, 0x3FE3333340000000, !dbg !34
  br i1 %724, label %__internal_fmad.exit3.i275, label %__internal_fmad.exit1.i270, !dbg !34

__internal_fmad.exit1.i270:                       ; preds = %__nv_tanhf.exit267
  %725 = fmul float %.01.i269, 0x4007154760000000, !dbg !34
  %726 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %725) #5, !dbg !34
  %727 = fadd float %726, 1.000000e+00, !dbg !34
  %728 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %727) #6, !dbg !34, !srcloc !35
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not6.i271 = icmp eq i32 %729, 0, !dbg !34
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %728, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %728, float -2.000000e+00, float 1.000000e+00) #5, !dbg !34
  %.03.i272 = select i1 %.not6.i271, float %731, float %730, !dbg !34
  %732 = fcmp oge float %.01.i269, 0x4022059680000000, !dbg !34
  %s.0.i273 = select i1 %732, float 1.000000e+00, float %.03.i272, !dbg !34
  %733 = bitcast float %s.0.i273 to i32, !dbg !34
  %734 = bitcast float %225 to i32, !dbg !34
  %735 = and i32 %734, -2147483648, !dbg !34
  %736 = or i32 %735, %733, !dbg !34
  %737 = bitcast i32 %736 to float, !dbg !34
  br label %__nv_tanhf.exit286, !dbg !34

__internal_fmad.exit3.i275:                       ; preds = %__nv_tanhf.exit267
  %738 = fmul float %225, %225, !dbg !34
  %739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not1.i276 = icmp eq i32 %739, 0, !dbg !34
  %740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %738, float 0xBFAAC795C0000000) #5, !dbg !34
  %741 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %738, float 0xBFAAC795C0000000) #5, !dbg !34
  %.06.i277 = select i1 %.not1.i276, float %741, float %740, !dbg !34
  %742 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not2.i278 = icmp eq i32 %742, 0, !dbg !34
  %743 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i277, float %738, float 0x3FC10B2820000000) #5, !dbg !34
  %744 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i277, float %738, float 0x3FC10B2820000000) #5, !dbg !34
  %.05.i279 = select i1 %.not2.i278, float %744, float %743, !dbg !34
  %745 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not3.i280 = icmp eq i32 %745, 0, !dbg !34
  %746 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i279, float %738, float 0xBFD5553DA0000000) #5, !dbg !34
  %747 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i279, float %738, float 0xBFD5553DA0000000) #5, !dbg !34
  %.0.i281 = select i1 %.not3.i280, float %747, float %746, !dbg !34
  %748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not4.i282 = icmp eq i32 %748, 0, !dbg !34
  %749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i281, float %738, float 0.000000e+00) #5, !dbg !34
  %750 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i281, float %738, float 0.000000e+00) #5, !dbg !34
  %.04.i283 = select i1 %.not4.i282, float %750, float %749, !dbg !34
  %751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not5.i284 = icmp eq i32 %751, 0, !dbg !34
  %752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i283, float %225, float %225) #5, !dbg !34
  %753 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i283, float %225, float %225) #5, !dbg !34
  %.02.i285 = select i1 %.not5.i284, float %753, float %752, !dbg !34
  br label %__nv_tanhf.exit286, !dbg !34

__nv_tanhf.exit286:                               ; preds = %__internal_fmad.exit1.i270, %__internal_fmad.exit3.i275
  %s.1.i274 = phi float [ %737, %__internal_fmad.exit1.i270 ], [ %.02.i285, %__internal_fmad.exit3.i275 ], !dbg !34
  %754 = fadd float %s.1.i, 1.000000e+00, !dbg !36
  %755 = fadd float %s.1.i8, 1.000000e+00, !dbg !36
  %756 = fadd float %s.1.i27, 1.000000e+00, !dbg !36
  %757 = fadd float %s.1.i46, 1.000000e+00, !dbg !36
  %758 = fadd float %s.1.i65, 1.000000e+00, !dbg !36
  %759 = fadd float %s.1.i84, 1.000000e+00, !dbg !36
  %760 = fadd float %s.1.i103, 1.000000e+00, !dbg !36
  %761 = fadd float %s.1.i122, 1.000000e+00, !dbg !36
  %762 = fadd float %s.1.i141, 1.000000e+00, !dbg !36
  %763 = fadd float %s.1.i160, 1.000000e+00, !dbg !36
  %764 = fadd float %s.1.i179, 1.000000e+00, !dbg !36
  %765 = fadd float %s.1.i198, 1.000000e+00, !dbg !36
  %766 = fadd float %s.1.i217, 1.000000e+00, !dbg !36
  %767 = fadd float %s.1.i236, 1.000000e+00, !dbg !36
  %768 = fadd float %s.1.i255, 1.000000e+00, !dbg !36
  %769 = fadd float %s.1.i274, 1.000000e+00, !dbg !36
  %770 = fmul float %130, %754, !dbg !37
  %771 = fmul float %131, %755, !dbg !37
  %772 = fmul float %132, %756, !dbg !37
  %773 = fmul float %133, %757, !dbg !37
  %774 = fmul float %134, %758, !dbg !37
  %775 = fmul float %135, %759, !dbg !37
  %776 = fmul float %136, %760, !dbg !37
  %777 = fmul float %137, %761, !dbg !37
  %778 = fmul float %138, %762, !dbg !37
  %779 = fmul float %139, %763, !dbg !37
  %780 = fmul float %140, %764, !dbg !37
  %781 = fmul float %141, %765, !dbg !37
  %782 = fmul float %142, %766, !dbg !37
  %783 = fmul float %143, %767, !dbg !37
  %784 = fmul float %144, %768, !dbg !37
  %785 = fmul float %145, %769, !dbg !37
  %786 = select i1 %17, float %62, float %770, !dbg !38
  %787 = select i1 %17, float %63, float %771, !dbg !38
  %788 = select i1 %17, float %64, float %772, !dbg !38
  %789 = select i1 %17, float %65, float %773, !dbg !38
  %790 = select i1 %17, float %66, float %774, !dbg !38
  %791 = select i1 %17, float %67, float %775, !dbg !38
  %792 = select i1 %17, float %68, float %776, !dbg !38
  %793 = select i1 %17, float %69, float %777, !dbg !38
  %794 = select i1 %17, float %70, float %778, !dbg !38
  %795 = select i1 %17, float %71, float %779, !dbg !38
  %796 = select i1 %17, float %72, float %780, !dbg !38
  %797 = select i1 %17, float %73, float %781, !dbg !38
  %798 = select i1 %17, float %74, float %782, !dbg !38
  %799 = select i1 %17, float %75, float %783, !dbg !38
  %800 = select i1 %17, float %76, float %784, !dbg !38
  %801 = select i1 %17, float %77, float %785, !dbg !38
  %802 = select i1 %26, float %786, float 0x7FF0000000000000, !dbg !39
  %803 = select i1 %26, float %787, float 0x7FF0000000000000, !dbg !39
  %804 = select i1 %26, float %788, float 0x7FF0000000000000, !dbg !39
  %805 = select i1 %26, float %789, float 0x7FF0000000000000, !dbg !39
  %806 = select i1 %26, float %790, float 0x7FF0000000000000, !dbg !39
  %807 = select i1 %26, float %791, float 0x7FF0000000000000, !dbg !39
  %808 = select i1 %26, float %792, float 0x7FF0000000000000, !dbg !39
  %809 = select i1 %26, float %793, float 0x7FF0000000000000, !dbg !39
  %810 = select i1 %26, float %794, float 0x7FF0000000000000, !dbg !39
  %811 = select i1 %26, float %795, float 0x7FF0000000000000, !dbg !39
  %812 = select i1 %26, float %796, float 0x7FF0000000000000, !dbg !39
  %813 = select i1 %26, float %797, float 0x7FF0000000000000, !dbg !39
  %814 = select i1 %26, float %798, float 0x7FF0000000000000, !dbg !39
  %815 = select i1 %26, float %799, float 0x7FF0000000000000, !dbg !39
  %816 = select i1 %26, float %800, float 0x7FF0000000000000, !dbg !39
  %817 = select i1 %26, float %801, float 0x7FF0000000000000, !dbg !39
  %818 = select i1 %26, float %786, float 0xFFF0000000000000, !dbg !40
  %819 = select i1 %26, float %787, float 0xFFF0000000000000, !dbg !40
  %820 = select i1 %26, float %788, float 0xFFF0000000000000, !dbg !40
  %821 = select i1 %26, float %789, float 0xFFF0000000000000, !dbg !40
  %822 = select i1 %26, float %790, float 0xFFF0000000000000, !dbg !40
  %823 = select i1 %26, float %791, float 0xFFF0000000000000, !dbg !40
  %824 = select i1 %26, float %792, float 0xFFF0000000000000, !dbg !40
  %825 = select i1 %26, float %793, float 0xFFF0000000000000, !dbg !40
  %826 = select i1 %26, float %794, float 0xFFF0000000000000, !dbg !40
  %827 = select i1 %26, float %795, float 0xFFF0000000000000, !dbg !40
  %828 = select i1 %26, float %796, float 0xFFF0000000000000, !dbg !40
  %829 = select i1 %26, float %797, float 0xFFF0000000000000, !dbg !40
  %830 = select i1 %26, float %798, float 0xFFF0000000000000, !dbg !40
  %831 = select i1 %26, float %799, float 0xFFF0000000000000, !dbg !40
  %832 = select i1 %26, float %800, float 0xFFF0000000000000, !dbg !40
  %833 = select i1 %26, float %801, float 0xFFF0000000000000, !dbg !40
  %834 = fcmp olt float %802, %803, !dbg !41
  %835 = fcmp uno float %802, 0.000000e+00, !dbg !46
  %836 = or i1 %835, %834, !dbg !47
  %837 = select i1 %836, float %802, float %803, !dbg !48
  %838 = fcmp olt float %837, %804, !dbg !41
  %839 = fcmp uno float %837, 0.000000e+00, !dbg !46
  %840 = or i1 %839, %838, !dbg !47
  %841 = select i1 %840, float %837, float %804, !dbg !48
  %842 = fcmp olt float %841, %805, !dbg !41
  %843 = fcmp uno float %841, 0.000000e+00, !dbg !46
  %844 = or i1 %843, %842, !dbg !47
  %845 = select i1 %844, float %841, float %805, !dbg !48
  %846 = fcmp olt float %845, %806, !dbg !41
  %847 = fcmp uno float %845, 0.000000e+00, !dbg !46
  %848 = or i1 %847, %846, !dbg !47
  %849 = select i1 %848, float %845, float %806, !dbg !48
  %850 = fcmp olt float %849, %807, !dbg !41
  %851 = fcmp uno float %849, 0.000000e+00, !dbg !46
  %852 = or i1 %851, %850, !dbg !47
  %853 = select i1 %852, float %849, float %807, !dbg !48
  %854 = fcmp olt float %853, %808, !dbg !41
  %855 = fcmp uno float %853, 0.000000e+00, !dbg !46
  %856 = or i1 %855, %854, !dbg !47
  %857 = select i1 %856, float %853, float %808, !dbg !48
  %858 = fcmp olt float %857, %809, !dbg !41
  %859 = fcmp uno float %857, 0.000000e+00, !dbg !46
  %860 = or i1 %859, %858, !dbg !47
  %861 = select i1 %860, float %857, float %809, !dbg !48
  %862 = fcmp olt float %861, %810, !dbg !41
  %863 = fcmp uno float %861, 0.000000e+00, !dbg !46
  %864 = or i1 %863, %862, !dbg !47
  %865 = select i1 %864, float %861, float %810, !dbg !48
  %866 = fcmp olt float %865, %811, !dbg !41
  %867 = fcmp uno float %865, 0.000000e+00, !dbg !46
  %868 = or i1 %867, %866, !dbg !47
  %869 = select i1 %868, float %865, float %811, !dbg !48
  %870 = fcmp olt float %869, %812, !dbg !41
  %871 = fcmp uno float %869, 0.000000e+00, !dbg !46
  %872 = or i1 %871, %870, !dbg !47
  %873 = select i1 %872, float %869, float %812, !dbg !48
  %874 = fcmp olt float %873, %813, !dbg !41
  %875 = fcmp uno float %873, 0.000000e+00, !dbg !46
  %876 = or i1 %875, %874, !dbg !47
  %877 = select i1 %876, float %873, float %813, !dbg !48
  %878 = fcmp olt float %877, %814, !dbg !41
  %879 = fcmp uno float %877, 0.000000e+00, !dbg !46
  %880 = or i1 %879, %878, !dbg !47
  %881 = select i1 %880, float %877, float %814, !dbg !48
  %882 = fcmp olt float %881, %815, !dbg !41
  %883 = fcmp uno float %881, 0.000000e+00, !dbg !46
  %884 = or i1 %883, %882, !dbg !47
  %885 = select i1 %884, float %881, float %815, !dbg !48
  %886 = fcmp olt float %885, %816, !dbg !41
  %887 = fcmp uno float %885, 0.000000e+00, !dbg !46
  %888 = or i1 %887, %886, !dbg !47
  %889 = select i1 %888, float %885, float %816, !dbg !48
  %890 = fcmp olt float %889, %817, !dbg !41
  %891 = fcmp uno float %889, 0.000000e+00, !dbg !46
  %892 = or i1 %891, %890, !dbg !47
  %893 = select i1 %892, float %889, float %817, !dbg !48
  %894 = bitcast float %893 to i32, !dbg !49
  %895 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %894, i32 16, i32 31), !dbg !49
  %896 = bitcast i32 %895 to float, !dbg !49
  %897 = fcmp olt float %893, %896, !dbg !41
  %898 = fcmp uno float %893, 0.000000e+00, !dbg !46
  %899 = or i1 %897, %898, !dbg !47
  %900 = select i1 %899, float %893, float %896, !dbg !48
  %901 = bitcast float %900 to i32, !dbg !49
  %902 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %901, i32 8, i32 31), !dbg !49
  %903 = bitcast i32 %902 to float, !dbg !49
  %904 = fcmp olt float %900, %903, !dbg !41
  %905 = fcmp uno float %900, 0.000000e+00, !dbg !46
  %906 = or i1 %904, %905, !dbg !47
  %907 = select i1 %906, float %900, float %903, !dbg !48
  %908 = bitcast float %907 to i32, !dbg !49
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 4, i32 31), !dbg !49
  %910 = bitcast i32 %909 to float, !dbg !49
  %911 = fcmp olt float %907, %910, !dbg !41
  %912 = fcmp uno float %907, 0.000000e+00, !dbg !46
  %913 = or i1 %911, %912, !dbg !47
  %914 = select i1 %913, float %907, float %910, !dbg !48
  %915 = bitcast float %914 to i32, !dbg !49
  %916 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %915, i32 2, i32 31), !dbg !49
  %917 = bitcast i32 %916 to float, !dbg !49
  %918 = fcmp olt float %914, %917, !dbg !41
  %919 = fcmp uno float %914, 0.000000e+00, !dbg !46
  %920 = or i1 %918, %919, !dbg !47
  %921 = select i1 %920, float %914, float %917, !dbg !48
  %922 = bitcast float %921 to i32, !dbg !49
  %923 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %922, i32 1, i32 31), !dbg !49
  %924 = bitcast i32 %923 to float, !dbg !49
  %925 = fcmp olt float %921, %924, !dbg !41
  %926 = fcmp uno float %921, 0.000000e+00, !dbg !46
  %927 = or i1 %925, %926, !dbg !47
  %928 = and i32 %13, 31, !dbg !49
  %929 = icmp eq i32 %12, 0, !dbg !49
  %930 = getelementptr float, ptr addrspace(3) @global_smem, i32 %928, !dbg !49
  %931 = select i1 %927, i32 %922, i32 %923, !dbg !48
  %932 = insertelement <1 x i32> poison, i32 %931, i64 0, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %930, <1 x i32> %932, i1 %929) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %933 = icmp slt i32 %11, 32, !dbg !49
  %934 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !49
  %935 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %934, i1 %933) #5, !dbg !49
  %936 = bitcast i32 %935 to float, !dbg !49
  %937 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %935, i32 16, i32 31), !dbg !49
  %938 = bitcast i32 %937 to float, !dbg !49
  %939 = fcmp olt float %936, %938, !dbg !41
  %940 = fcmp uno float %936, 0.000000e+00, !dbg !46
  %941 = or i1 %940, %939, !dbg !47
  %942 = select i1 %941, float %936, float %938, !dbg !48
  %943 = bitcast float %942 to i32, !dbg !49
  %944 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %943, i32 8, i32 31), !dbg !49
  %945 = bitcast i32 %944 to float, !dbg !49
  %946 = fcmp olt float %942, %945, !dbg !41
  %947 = fcmp uno float %942, 0.000000e+00, !dbg !46
  %948 = or i1 %946, %947, !dbg !47
  %949 = select i1 %948, float %942, float %945, !dbg !48
  %950 = bitcast float %949 to i32, !dbg !49
  %951 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %950, i32 4, i32 31), !dbg !49
  %952 = bitcast i32 %951 to float, !dbg !49
  %953 = fcmp olt float %949, %952, !dbg !41
  %954 = fcmp uno float %949, 0.000000e+00, !dbg !46
  %955 = or i1 %953, %954, !dbg !47
  %956 = select i1 %955, float %949, float %952, !dbg !48
  %957 = bitcast float %956 to i32, !dbg !49
  %958 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %957, i32 2, i32 31), !dbg !49
  %959 = bitcast i32 %958 to float, !dbg !49
  %960 = fcmp olt float %956, %959, !dbg !41
  %961 = fcmp uno float %956, 0.000000e+00, !dbg !46
  %962 = or i1 %960, %961, !dbg !47
  %963 = select i1 %962, float %956, float %959, !dbg !48
  %964 = bitcast float %963 to i32, !dbg !49
  %965 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %964, i32 1, i32 31), !dbg !49
  %966 = bitcast i32 %965 to float, !dbg !49
  %967 = fcmp olt float %963, %966, !dbg !41
  %968 = fcmp uno float %963, 0.000000e+00, !dbg !46
  %969 = or i1 %967, %968, !dbg !47
  %970 = and i1 %933, %929, !dbg !49
  %971 = select i1 %969, i32 %964, i32 %965, !dbg !48
  %972 = insertelement <1 x i32> poison, i32 %971, i64 0, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %934, <1 x i32> %972, i1 %970) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %973 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %974 = fcmp ogt float %818, %819, !dbg !52
  %975 = fcmp uno float %818, 0.000000e+00, !dbg !53
  %976 = or i1 %975, %974, !dbg !54
  %977 = select i1 %976, float %818, float %819, !dbg !55
  %978 = fcmp ogt float %977, %820, !dbg !52
  %979 = fcmp uno float %977, 0.000000e+00, !dbg !53
  %980 = or i1 %979, %978, !dbg !54
  %981 = select i1 %980, float %977, float %820, !dbg !55
  %982 = fcmp ogt float %981, %821, !dbg !52
  %983 = fcmp uno float %981, 0.000000e+00, !dbg !53
  %984 = or i1 %983, %982, !dbg !54
  %985 = select i1 %984, float %981, float %821, !dbg !55
  %986 = fcmp ogt float %985, %822, !dbg !52
  %987 = fcmp uno float %985, 0.000000e+00, !dbg !53
  %988 = or i1 %987, %986, !dbg !54
  %989 = select i1 %988, float %985, float %822, !dbg !55
  %990 = fcmp ogt float %989, %823, !dbg !52
  %991 = fcmp uno float %989, 0.000000e+00, !dbg !53
  %992 = or i1 %991, %990, !dbg !54
  %993 = select i1 %992, float %989, float %823, !dbg !55
  %994 = fcmp ogt float %993, %824, !dbg !52
  %995 = fcmp uno float %993, 0.000000e+00, !dbg !53
  %996 = or i1 %995, %994, !dbg !54
  %997 = select i1 %996, float %993, float %824, !dbg !55
  %998 = fcmp ogt float %997, %825, !dbg !52
  %999 = fcmp uno float %997, 0.000000e+00, !dbg !53
  %1000 = or i1 %999, %998, !dbg !54
  %1001 = select i1 %1000, float %997, float %825, !dbg !55
  %1002 = fcmp ogt float %1001, %826, !dbg !52
  %1003 = fcmp uno float %1001, 0.000000e+00, !dbg !53
  %1004 = or i1 %1003, %1002, !dbg !54
  %1005 = select i1 %1004, float %1001, float %826, !dbg !55
  %1006 = fcmp ogt float %1005, %827, !dbg !52
  %1007 = fcmp uno float %1005, 0.000000e+00, !dbg !53
  %1008 = or i1 %1007, %1006, !dbg !54
  %1009 = select i1 %1008, float %1005, float %827, !dbg !55
  %1010 = fcmp ogt float %1009, %828, !dbg !52
  %1011 = fcmp uno float %1009, 0.000000e+00, !dbg !53
  %1012 = or i1 %1011, %1010, !dbg !54
  %1013 = select i1 %1012, float %1009, float %828, !dbg !55
  %1014 = fcmp ogt float %1013, %829, !dbg !52
  %1015 = fcmp uno float %1013, 0.000000e+00, !dbg !53
  %1016 = or i1 %1015, %1014, !dbg !54
  %1017 = select i1 %1016, float %1013, float %829, !dbg !55
  %1018 = fcmp ogt float %1017, %830, !dbg !52
  %1019 = fcmp uno float %1017, 0.000000e+00, !dbg !53
  %1020 = or i1 %1019, %1018, !dbg !54
  %1021 = select i1 %1020, float %1017, float %830, !dbg !55
  %1022 = fcmp ogt float %1021, %831, !dbg !52
  %1023 = fcmp uno float %1021, 0.000000e+00, !dbg !53
  %1024 = or i1 %1023, %1022, !dbg !54
  %1025 = select i1 %1024, float %1021, float %831, !dbg !55
  %1026 = fcmp ogt float %1025, %832, !dbg !52
  %1027 = fcmp uno float %1025, 0.000000e+00, !dbg !53
  %1028 = or i1 %1027, %1026, !dbg !54
  %1029 = select i1 %1028, float %1025, float %832, !dbg !55
  %1030 = fcmp ogt float %1029, %833, !dbg !52
  %1031 = fcmp uno float %1029, 0.000000e+00, !dbg !53
  %1032 = or i1 %1031, %1030, !dbg !54
  %1033 = select i1 %1032, float %1029, float %833, !dbg !55
  %1034 = bitcast float %1033 to i32, !dbg !50
  %1035 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1034, i32 16, i32 31), !dbg !50
  %1036 = bitcast i32 %1035 to float, !dbg !50
  %1037 = fcmp ogt float %1033, %1036, !dbg !52
  %1038 = fcmp uno float %1033, 0.000000e+00, !dbg !53
  %1039 = or i1 %1038, %1037, !dbg !54
  %1040 = select i1 %1039, float %1033, float %1036, !dbg !55
  %1041 = bitcast float %1040 to i32, !dbg !50
  %1042 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1041, i32 8, i32 31), !dbg !50
  %1043 = bitcast i32 %1042 to float, !dbg !50
  %1044 = fcmp ogt float %1040, %1043, !dbg !52
  %1045 = fcmp uno float %1040, 0.000000e+00, !dbg !53
  %1046 = or i1 %1044, %1045, !dbg !54
  %1047 = select i1 %1046, float %1040, float %1043, !dbg !55
  %1048 = bitcast float %1047 to i32, !dbg !50
  %1049 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1048, i32 4, i32 31), !dbg !50
  %1050 = bitcast i32 %1049 to float, !dbg !50
  %1051 = fcmp ogt float %1047, %1050, !dbg !52
  %1052 = fcmp uno float %1047, 0.000000e+00, !dbg !53
  %1053 = or i1 %1051, %1052, !dbg !54
  %1054 = select i1 %1053, float %1047, float %1050, !dbg !55
  %1055 = bitcast float %1054 to i32, !dbg !50
  %1056 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1055, i32 2, i32 31), !dbg !50
  %1057 = bitcast i32 %1056 to float, !dbg !50
  %1058 = fcmp ogt float %1054, %1057, !dbg !52
  %1059 = fcmp uno float %1054, 0.000000e+00, !dbg !53
  %1060 = or i1 %1058, %1059, !dbg !54
  %1061 = select i1 %1060, float %1054, float %1057, !dbg !55
  %1062 = bitcast float %1061 to i32, !dbg !50
  %1063 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1062, i32 1, i32 31), !dbg !50
  %1064 = bitcast i32 %1063 to float, !dbg !50
  %1065 = fcmp ogt float %1061, %1064, !dbg !52
  %1066 = fcmp uno float %1061, 0.000000e+00, !dbg !53
  %1067 = or i1 %1065, %1066, !dbg !54
  %1068 = select i1 %1067, i32 %1062, i32 %1063, !dbg !55
  %1069 = insertelement <1 x i32> poison, i32 %1068, i64 0, !dbg !50
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %930, <1 x i32> %1069, i1 %929) #5, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %1070 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %934, i1 %933) #5, !dbg !50
  %1071 = bitcast i32 %1070 to float, !dbg !50
  %1072 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1070, i32 16, i32 31), !dbg !50
  %1073 = bitcast i32 %1072 to float, !dbg !50
  %1074 = fcmp ogt float %1071, %1073, !dbg !52
  %1075 = fcmp uno float %1071, 0.000000e+00, !dbg !53
  %1076 = or i1 %1075, %1074, !dbg !54
  %1077 = select i1 %1076, float %1071, float %1073, !dbg !55
  %1078 = bitcast float %1077 to i32, !dbg !50
  %1079 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1078, i32 8, i32 31), !dbg !50
  %1080 = bitcast i32 %1079 to float, !dbg !50
  %1081 = fcmp ogt float %1077, %1080, !dbg !52
  %1082 = fcmp uno float %1077, 0.000000e+00, !dbg !53
  %1083 = or i1 %1081, %1082, !dbg !54
  %1084 = select i1 %1083, float %1077, float %1080, !dbg !55
  %1085 = bitcast float %1084 to i32, !dbg !50
  %1086 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1085, i32 4, i32 31), !dbg !50
  %1087 = bitcast i32 %1086 to float, !dbg !50
  %1088 = fcmp ogt float %1084, %1087, !dbg !52
  %1089 = fcmp uno float %1084, 0.000000e+00, !dbg !53
  %1090 = or i1 %1088, %1089, !dbg !54
  %1091 = select i1 %1090, float %1084, float %1087, !dbg !55
  %1092 = bitcast float %1091 to i32, !dbg !50
  %1093 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1092, i32 2, i32 31), !dbg !50
  %1094 = bitcast i32 %1093 to float, !dbg !50
  %1095 = fcmp ogt float %1091, %1094, !dbg !52
  %1096 = fcmp uno float %1091, 0.000000e+00, !dbg !53
  %1097 = or i1 %1095, %1096, !dbg !54
  %1098 = select i1 %1097, float %1091, float %1094, !dbg !55
  %1099 = bitcast float %1098 to i32, !dbg !50
  %1100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1099, i32 1, i32 31), !dbg !50
  %1101 = bitcast i32 %1100 to float, !dbg !50
  %1102 = fcmp ogt float %1098, %1101, !dbg !52
  %1103 = fcmp uno float %1098, 0.000000e+00, !dbg !53
  %1104 = or i1 %1102, %1103, !dbg !54
  %1105 = select i1 %1104, i32 %1099, i32 %1100, !dbg !55
  %1106 = insertelement <1 x i32> poison, i32 %1105, i64 0, !dbg !50
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %934, <1 x i32> %1106, i1 %970) #5, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %1107 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !50
  %1108 = sext i32 %9 to i64, !dbg !56
  %1109 = getelementptr bfloat, ptr addrspace(1) %2, i64 %1108, !dbg !56
  %1110 = fptrunc float %973 to bfloat, !dbg !57
  %1111 = and i32 %11, 1023, !dbg !57
  %1112 = icmp eq i32 %1111, 0, !dbg !57
  %1113 = bitcast bfloat %1110 to i16, !dbg !57
  %1114 = and i1 %10, %1112, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1113, ptr addrspace(1) %1109, i1 %1114) #5, !dbg !57
  %1115 = getelementptr bfloat, ptr addrspace(1) %3, i64 %1108, !dbg !58
  %1116 = fptrunc float %1107 to bfloat, !dbg !59
  %1117 = bitcast bfloat %1116 to i16, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1117, ptr addrspace(1) %1115, i1 %1114) #5, !dbg !59
  %1118 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %23, i1 %27) #5, !dbg !60
  %1119 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %25, i1 %27) #5, !dbg !60
  %1120 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %86, i1 %93) #5, !dbg !61
  %1121 = extractvalue { i32, i32, i32, i32 } %1120, 0, !dbg !61
  %1122 = extractvalue { i32, i32, i32, i32 } %1120, 1, !dbg !61
  %1123 = extractvalue { i32, i32, i32, i32 } %1120, 2, !dbg !61
  %1124 = extractvalue { i32, i32, i32, i32 } %1120, 3, !dbg !61
  %1125 = bitcast i32 %1121 to float, !dbg !61
  %1126 = bitcast i32 %1122 to float, !dbg !61
  %1127 = bitcast i32 %1123 to float, !dbg !61
  %1128 = bitcast i32 %1124 to float, !dbg !61
  %1129 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %88, i1 %93) #5, !dbg !61
  %1130 = extractvalue { i32, i32, i32, i32 } %1129, 0, !dbg !61
  %1131 = extractvalue { i32, i32, i32, i32 } %1129, 1, !dbg !61
  %1132 = extractvalue { i32, i32, i32, i32 } %1129, 2, !dbg !61
  %1133 = extractvalue { i32, i32, i32, i32 } %1129, 3, !dbg !61
  %1134 = bitcast i32 %1130 to float, !dbg !61
  %1135 = bitcast i32 %1131 to float, !dbg !61
  %1136 = bitcast i32 %1132 to float, !dbg !61
  %1137 = bitcast i32 %1133 to float, !dbg !61
  %1138 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %90, i1 %93) #5, !dbg !61
  %1139 = extractvalue { i32, i32, i32, i32 } %1138, 0, !dbg !61
  %1140 = extractvalue { i32, i32, i32, i32 } %1138, 1, !dbg !61
  %1141 = extractvalue { i32, i32, i32, i32 } %1138, 2, !dbg !61
  %1142 = extractvalue { i32, i32, i32, i32 } %1138, 3, !dbg !61
  %1143 = bitcast i32 %1139 to float, !dbg !61
  %1144 = bitcast i32 %1140 to float, !dbg !61
  %1145 = bitcast i32 %1141 to float, !dbg !61
  %1146 = bitcast i32 %1142 to float, !dbg !61
  %1147 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %92, i1 %93) #5, !dbg !61
  %1148 = extractvalue { i32, i32, i32, i32 } %1147, 0, !dbg !61
  %1149 = extractvalue { i32, i32, i32, i32 } %1147, 1, !dbg !61
  %1150 = extractvalue { i32, i32, i32, i32 } %1147, 2, !dbg !61
  %1151 = extractvalue { i32, i32, i32, i32 } %1147, 3, !dbg !61
  %1152 = bitcast i32 %1148 to float, !dbg !61
  %1153 = bitcast i32 %1149 to float, !dbg !61
  %1154 = bitcast i32 %1150 to float, !dbg !61
  %1155 = bitcast i32 %1151 to float, !dbg !61
  %1156 = fmul float %1125, %1125, !dbg !62
  %1157 = fmul float %1126, %1126, !dbg !62
  %1158 = fmul float %1127, %1127, !dbg !62
  %1159 = fmul float %1128, %1128, !dbg !62
  %1160 = fmul float %1134, %1134, !dbg !62
  %1161 = fmul float %1135, %1135, !dbg !62
  %1162 = fmul float %1136, %1136, !dbg !62
  %1163 = fmul float %1137, %1137, !dbg !62
  %1164 = fmul float %1143, %1143, !dbg !62
  %1165 = fmul float %1144, %1144, !dbg !62
  %1166 = fmul float %1145, %1145, !dbg !62
  %1167 = fmul float %1146, %1146, !dbg !62
  %1168 = fmul float %1152, %1152, !dbg !62
  %1169 = fmul float %1153, %1153, !dbg !62
  %1170 = fmul float %1154, %1154, !dbg !62
  %1171 = fmul float %1155, %1155, !dbg !62
  %1172 = fmul float %1156, %1125, !dbg !63
  %1173 = fmul float %1157, %1126, !dbg !63
  %1174 = fmul float %1158, %1127, !dbg !63
  %1175 = fmul float %1159, %1128, !dbg !63
  %1176 = fmul float %1160, %1134, !dbg !63
  %1177 = fmul float %1161, %1135, !dbg !63
  %1178 = fmul float %1162, %1136, !dbg !63
  %1179 = fmul float %1163, %1137, !dbg !63
  %1180 = fmul float %1164, %1143, !dbg !63
  %1181 = fmul float %1165, %1144, !dbg !63
  %1182 = fmul float %1166, %1145, !dbg !63
  %1183 = fmul float %1167, %1146, !dbg !63
  %1184 = fmul float %1168, %1152, !dbg !63
  %1185 = fmul float %1169, %1153, !dbg !63
  %1186 = fmul float %1170, %1154, !dbg !63
  %1187 = fmul float %1171, %1155, !dbg !63
  %1188 = fmul float %1172, 0x3FA6E4E260000000, !dbg !64
  %1189 = fmul float %1173, 0x3FA6E4E260000000, !dbg !64
  %1190 = fmul float %1174, 0x3FA6E4E260000000, !dbg !64
  %1191 = fmul float %1175, 0x3FA6E4E260000000, !dbg !64
  %1192 = fmul float %1176, 0x3FA6E4E260000000, !dbg !64
  %1193 = fmul float %1177, 0x3FA6E4E260000000, !dbg !64
  %1194 = fmul float %1178, 0x3FA6E4E260000000, !dbg !64
  %1195 = fmul float %1179, 0x3FA6E4E260000000, !dbg !64
  %1196 = fmul float %1180, 0x3FA6E4E260000000, !dbg !64
  %1197 = fmul float %1181, 0x3FA6E4E260000000, !dbg !64
  %1198 = fmul float %1182, 0x3FA6E4E260000000, !dbg !64
  %1199 = fmul float %1183, 0x3FA6E4E260000000, !dbg !64
  %1200 = fmul float %1184, 0x3FA6E4E260000000, !dbg !64
  %1201 = fmul float %1185, 0x3FA6E4E260000000, !dbg !64
  %1202 = fmul float %1186, 0x3FA6E4E260000000, !dbg !64
  %1203 = fmul float %1187, 0x3FA6E4E260000000, !dbg !64
  %1204 = fadd float %1188, %1125, !dbg !65
  %1205 = fadd float %1189, %1126, !dbg !65
  %1206 = fadd float %1190, %1127, !dbg !65
  %1207 = fadd float %1191, %1128, !dbg !65
  %1208 = fadd float %1192, %1134, !dbg !65
  %1209 = fadd float %1193, %1135, !dbg !65
  %1210 = fadd float %1194, %1136, !dbg !65
  %1211 = fadd float %1195, %1137, !dbg !65
  %1212 = fadd float %1196, %1143, !dbg !65
  %1213 = fadd float %1197, %1144, !dbg !65
  %1214 = fadd float %1198, %1145, !dbg !65
  %1215 = fadd float %1199, %1146, !dbg !65
  %1216 = fadd float %1200, %1152, !dbg !65
  %1217 = fadd float %1201, %1153, !dbg !65
  %1218 = fadd float %1202, %1154, !dbg !65
  %1219 = fadd float %1203, %1155, !dbg !65
  %1220 = fmul float %1204, 0x3FE9884540000000, !dbg !66
  %1221 = fmul float %1205, 0x3FE9884540000000, !dbg !66
  %1222 = fmul float %1206, 0x3FE9884540000000, !dbg !66
  %1223 = fmul float %1207, 0x3FE9884540000000, !dbg !66
  %1224 = fmul float %1208, 0x3FE9884540000000, !dbg !66
  %1225 = fmul float %1209, 0x3FE9884540000000, !dbg !66
  %1226 = fmul float %1210, 0x3FE9884540000000, !dbg !66
  %1227 = fmul float %1211, 0x3FE9884540000000, !dbg !66
  %1228 = fmul float %1212, 0x3FE9884540000000, !dbg !66
  %1229 = fmul float %1213, 0x3FE9884540000000, !dbg !66
  %1230 = fmul float %1214, 0x3FE9884540000000, !dbg !66
  %1231 = fmul float %1215, 0x3FE9884540000000, !dbg !66
  %1232 = fmul float %1216, 0x3FE9884540000000, !dbg !66
  %1233 = fmul float %1217, 0x3FE9884540000000, !dbg !66
  %1234 = fmul float %1218, 0x3FE9884540000000, !dbg !66
  %1235 = fmul float %1219, 0x3FE9884540000000, !dbg !66
  %1236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i287 = icmp eq i32 %1236, 0, !dbg !67
  %1237 = tail call float @llvm.nvvm.fabs.ftz.f(float %1220) #5, !dbg !67
  %1238 = tail call float @llvm.nvvm.fabs.f(float %1220) #5, !dbg !67
  %.01.i288 = select i1 %.not.i287, float %1238, float %1237, !dbg !67
  %1239 = fcmp ult float %.01.i288, 0x3FE3333340000000, !dbg !67
  br i1 %1239, label %__internal_fmad.exit3.i294, label %__internal_fmad.exit1.i289, !dbg !67

__internal_fmad.exit1.i289:                       ; preds = %__nv_tanhf.exit286
  %1240 = fmul float %.01.i288, 0x4007154760000000, !dbg !67
  %1241 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1240) #5, !dbg !67
  %1242 = fadd float %1241, 1.000000e+00, !dbg !67
  %1243 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1242) #6, !dbg !67, !srcloc !35
  %1244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i290 = icmp eq i32 %1244, 0, !dbg !67
  %1245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1243, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1246 = tail call float @llvm.nvvm.fma.rn.f(float %1243, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i291 = select i1 %.not6.i290, float %1246, float %1245, !dbg !67
  %1247 = fcmp oge float %.01.i288, 0x4022059680000000, !dbg !67
  %s.0.i292 = select i1 %1247, float 1.000000e+00, float %.03.i291, !dbg !67
  %1248 = bitcast float %s.0.i292 to i32, !dbg !67
  %1249 = bitcast float %1220 to i32, !dbg !67
  %1250 = and i32 %1249, -2147483648, !dbg !67
  %1251 = or i32 %1250, %1248, !dbg !67
  %1252 = bitcast i32 %1251 to float, !dbg !67
  br label %__nv_tanhf.exit305, !dbg !67

__internal_fmad.exit3.i294:                       ; preds = %__nv_tanhf.exit286
  %1253 = fmul float %1220, %1220, !dbg !67
  %1254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i295 = icmp eq i32 %1254, 0, !dbg !67
  %1255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1253, float 0xBFAAC795C0000000) #5, !dbg !67
  %1256 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1253, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i296 = select i1 %.not1.i295, float %1256, float %1255, !dbg !67
  %1257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i297 = icmp eq i32 %1257, 0, !dbg !67
  %1258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i296, float %1253, float 0x3FC10B2820000000) #5, !dbg !67
  %1259 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i296, float %1253, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i298 = select i1 %.not2.i297, float %1259, float %1258, !dbg !67
  %1260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i299 = icmp eq i32 %1260, 0, !dbg !67
  %1261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i298, float %1253, float 0xBFD5553DA0000000) #5, !dbg !67
  %1262 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i298, float %1253, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i300 = select i1 %.not3.i299, float %1262, float %1261, !dbg !67
  %1263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i301 = icmp eq i32 %1263, 0, !dbg !67
  %1264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i300, float %1253, float 0.000000e+00) #5, !dbg !67
  %1265 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i300, float %1253, float 0.000000e+00) #5, !dbg !67
  %.04.i302 = select i1 %.not4.i301, float %1265, float %1264, !dbg !67
  %1266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i303 = icmp eq i32 %1266, 0, !dbg !67
  %1267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i302, float %1220, float %1220) #5, !dbg !67
  %1268 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i302, float %1220, float %1220) #5, !dbg !67
  %.02.i304 = select i1 %.not5.i303, float %1268, float %1267, !dbg !67
  br label %__nv_tanhf.exit305, !dbg !67

__nv_tanhf.exit305:                               ; preds = %__internal_fmad.exit1.i289, %__internal_fmad.exit3.i294
  %s.1.i293 = phi float [ %1252, %__internal_fmad.exit1.i289 ], [ %.02.i304, %__internal_fmad.exit3.i294 ], !dbg !67
  %1269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i306 = icmp eq i32 %1269, 0, !dbg !67
  %1270 = tail call float @llvm.nvvm.fabs.ftz.f(float %1221) #5, !dbg !67
  %1271 = tail call float @llvm.nvvm.fabs.f(float %1221) #5, !dbg !67
  %.01.i307 = select i1 %.not.i306, float %1271, float %1270, !dbg !67
  %1272 = fcmp ult float %.01.i307, 0x3FE3333340000000, !dbg !67
  br i1 %1272, label %__internal_fmad.exit3.i313, label %__internal_fmad.exit1.i308, !dbg !67

__internal_fmad.exit1.i308:                       ; preds = %__nv_tanhf.exit305
  %1273 = fmul float %.01.i307, 0x4007154760000000, !dbg !67
  %1274 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1273) #5, !dbg !67
  %1275 = fadd float %1274, 1.000000e+00, !dbg !67
  %1276 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1275) #6, !dbg !67, !srcloc !35
  %1277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i309 = icmp eq i32 %1277, 0, !dbg !67
  %1278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1276, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1279 = tail call float @llvm.nvvm.fma.rn.f(float %1276, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i310 = select i1 %.not6.i309, float %1279, float %1278, !dbg !67
  %1280 = fcmp oge float %.01.i307, 0x4022059680000000, !dbg !67
  %s.0.i311 = select i1 %1280, float 1.000000e+00, float %.03.i310, !dbg !67
  %1281 = bitcast float %s.0.i311 to i32, !dbg !67
  %1282 = bitcast float %1221 to i32, !dbg !67
  %1283 = and i32 %1282, -2147483648, !dbg !67
  %1284 = or i32 %1283, %1281, !dbg !67
  %1285 = bitcast i32 %1284 to float, !dbg !67
  br label %__nv_tanhf.exit324, !dbg !67

__internal_fmad.exit3.i313:                       ; preds = %__nv_tanhf.exit305
  %1286 = fmul float %1221, %1221, !dbg !67
  %1287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i314 = icmp eq i32 %1287, 0, !dbg !67
  %1288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1286, float 0xBFAAC795C0000000) #5, !dbg !67
  %1289 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1286, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i315 = select i1 %.not1.i314, float %1289, float %1288, !dbg !67
  %1290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i316 = icmp eq i32 %1290, 0, !dbg !67
  %1291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i315, float %1286, float 0x3FC10B2820000000) #5, !dbg !67
  %1292 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i315, float %1286, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i317 = select i1 %.not2.i316, float %1292, float %1291, !dbg !67
  %1293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i318 = icmp eq i32 %1293, 0, !dbg !67
  %1294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i317, float %1286, float 0xBFD5553DA0000000) #5, !dbg !67
  %1295 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i317, float %1286, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i319 = select i1 %.not3.i318, float %1295, float %1294, !dbg !67
  %1296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i320 = icmp eq i32 %1296, 0, !dbg !67
  %1297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i319, float %1286, float 0.000000e+00) #5, !dbg !67
  %1298 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i319, float %1286, float 0.000000e+00) #5, !dbg !67
  %.04.i321 = select i1 %.not4.i320, float %1298, float %1297, !dbg !67
  %1299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i322 = icmp eq i32 %1299, 0, !dbg !67
  %1300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i321, float %1221, float %1221) #5, !dbg !67
  %1301 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i321, float %1221, float %1221) #5, !dbg !67
  %.02.i323 = select i1 %.not5.i322, float %1301, float %1300, !dbg !67
  br label %__nv_tanhf.exit324, !dbg !67

__nv_tanhf.exit324:                               ; preds = %__internal_fmad.exit1.i308, %__internal_fmad.exit3.i313
  %s.1.i312 = phi float [ %1285, %__internal_fmad.exit1.i308 ], [ %.02.i323, %__internal_fmad.exit3.i313 ], !dbg !67
  %1302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i325 = icmp eq i32 %1302, 0, !dbg !67
  %1303 = tail call float @llvm.nvvm.fabs.ftz.f(float %1222) #5, !dbg !67
  %1304 = tail call float @llvm.nvvm.fabs.f(float %1222) #5, !dbg !67
  %.01.i326 = select i1 %.not.i325, float %1304, float %1303, !dbg !67
  %1305 = fcmp ult float %.01.i326, 0x3FE3333340000000, !dbg !67
  br i1 %1305, label %__internal_fmad.exit3.i332, label %__internal_fmad.exit1.i327, !dbg !67

__internal_fmad.exit1.i327:                       ; preds = %__nv_tanhf.exit324
  %1306 = fmul float %.01.i326, 0x4007154760000000, !dbg !67
  %1307 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1306) #5, !dbg !67
  %1308 = fadd float %1307, 1.000000e+00, !dbg !67
  %1309 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1308) #6, !dbg !67, !srcloc !35
  %1310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i328 = icmp eq i32 %1310, 0, !dbg !67
  %1311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1309, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1312 = tail call float @llvm.nvvm.fma.rn.f(float %1309, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i329 = select i1 %.not6.i328, float %1312, float %1311, !dbg !67
  %1313 = fcmp oge float %.01.i326, 0x4022059680000000, !dbg !67
  %s.0.i330 = select i1 %1313, float 1.000000e+00, float %.03.i329, !dbg !67
  %1314 = bitcast float %s.0.i330 to i32, !dbg !67
  %1315 = bitcast float %1222 to i32, !dbg !67
  %1316 = and i32 %1315, -2147483648, !dbg !67
  %1317 = or i32 %1316, %1314, !dbg !67
  %1318 = bitcast i32 %1317 to float, !dbg !67
  br label %__nv_tanhf.exit343, !dbg !67

__internal_fmad.exit3.i332:                       ; preds = %__nv_tanhf.exit324
  %1319 = fmul float %1222, %1222, !dbg !67
  %1320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i333 = icmp eq i32 %1320, 0, !dbg !67
  %1321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1319, float 0xBFAAC795C0000000) #5, !dbg !67
  %1322 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1319, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i334 = select i1 %.not1.i333, float %1322, float %1321, !dbg !67
  %1323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i335 = icmp eq i32 %1323, 0, !dbg !67
  %1324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i334, float %1319, float 0x3FC10B2820000000) #5, !dbg !67
  %1325 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i334, float %1319, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i336 = select i1 %.not2.i335, float %1325, float %1324, !dbg !67
  %1326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i337 = icmp eq i32 %1326, 0, !dbg !67
  %1327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i336, float %1319, float 0xBFD5553DA0000000) #5, !dbg !67
  %1328 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i336, float %1319, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i338 = select i1 %.not3.i337, float %1328, float %1327, !dbg !67
  %1329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i339 = icmp eq i32 %1329, 0, !dbg !67
  %1330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i338, float %1319, float 0.000000e+00) #5, !dbg !67
  %1331 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i338, float %1319, float 0.000000e+00) #5, !dbg !67
  %.04.i340 = select i1 %.not4.i339, float %1331, float %1330, !dbg !67
  %1332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i341 = icmp eq i32 %1332, 0, !dbg !67
  %1333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i340, float %1222, float %1222) #5, !dbg !67
  %1334 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i340, float %1222, float %1222) #5, !dbg !67
  %.02.i342 = select i1 %.not5.i341, float %1334, float %1333, !dbg !67
  br label %__nv_tanhf.exit343, !dbg !67

__nv_tanhf.exit343:                               ; preds = %__internal_fmad.exit1.i327, %__internal_fmad.exit3.i332
  %s.1.i331 = phi float [ %1318, %__internal_fmad.exit1.i327 ], [ %.02.i342, %__internal_fmad.exit3.i332 ], !dbg !67
  %1335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i344 = icmp eq i32 %1335, 0, !dbg !67
  %1336 = tail call float @llvm.nvvm.fabs.ftz.f(float %1223) #5, !dbg !67
  %1337 = tail call float @llvm.nvvm.fabs.f(float %1223) #5, !dbg !67
  %.01.i345 = select i1 %.not.i344, float %1337, float %1336, !dbg !67
  %1338 = fcmp ult float %.01.i345, 0x3FE3333340000000, !dbg !67
  br i1 %1338, label %__internal_fmad.exit3.i351, label %__internal_fmad.exit1.i346, !dbg !67

__internal_fmad.exit1.i346:                       ; preds = %__nv_tanhf.exit343
  %1339 = fmul float %.01.i345, 0x4007154760000000, !dbg !67
  %1340 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1339) #5, !dbg !67
  %1341 = fadd float %1340, 1.000000e+00, !dbg !67
  %1342 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1341) #6, !dbg !67, !srcloc !35
  %1343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i347 = icmp eq i32 %1343, 0, !dbg !67
  %1344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1342, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1345 = tail call float @llvm.nvvm.fma.rn.f(float %1342, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i348 = select i1 %.not6.i347, float %1345, float %1344, !dbg !67
  %1346 = fcmp oge float %.01.i345, 0x4022059680000000, !dbg !67
  %s.0.i349 = select i1 %1346, float 1.000000e+00, float %.03.i348, !dbg !67
  %1347 = bitcast float %s.0.i349 to i32, !dbg !67
  %1348 = bitcast float %1223 to i32, !dbg !67
  %1349 = and i32 %1348, -2147483648, !dbg !67
  %1350 = or i32 %1349, %1347, !dbg !67
  %1351 = bitcast i32 %1350 to float, !dbg !67
  br label %__nv_tanhf.exit362, !dbg !67

__internal_fmad.exit3.i351:                       ; preds = %__nv_tanhf.exit343
  %1352 = fmul float %1223, %1223, !dbg !67
  %1353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i352 = icmp eq i32 %1353, 0, !dbg !67
  %1354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1352, float 0xBFAAC795C0000000) #5, !dbg !67
  %1355 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1352, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i353 = select i1 %.not1.i352, float %1355, float %1354, !dbg !67
  %1356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i354 = icmp eq i32 %1356, 0, !dbg !67
  %1357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i353, float %1352, float 0x3FC10B2820000000) #5, !dbg !67
  %1358 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i353, float %1352, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i355 = select i1 %.not2.i354, float %1358, float %1357, !dbg !67
  %1359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i356 = icmp eq i32 %1359, 0, !dbg !67
  %1360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i355, float %1352, float 0xBFD5553DA0000000) #5, !dbg !67
  %1361 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i355, float %1352, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i357 = select i1 %.not3.i356, float %1361, float %1360, !dbg !67
  %1362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i358 = icmp eq i32 %1362, 0, !dbg !67
  %1363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i357, float %1352, float 0.000000e+00) #5, !dbg !67
  %1364 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i357, float %1352, float 0.000000e+00) #5, !dbg !67
  %.04.i359 = select i1 %.not4.i358, float %1364, float %1363, !dbg !67
  %1365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i360 = icmp eq i32 %1365, 0, !dbg !67
  %1366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i359, float %1223, float %1223) #5, !dbg !67
  %1367 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i359, float %1223, float %1223) #5, !dbg !67
  %.02.i361 = select i1 %.not5.i360, float %1367, float %1366, !dbg !67
  br label %__nv_tanhf.exit362, !dbg !67

__nv_tanhf.exit362:                               ; preds = %__internal_fmad.exit1.i346, %__internal_fmad.exit3.i351
  %s.1.i350 = phi float [ %1351, %__internal_fmad.exit1.i346 ], [ %.02.i361, %__internal_fmad.exit3.i351 ], !dbg !67
  %1368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i363 = icmp eq i32 %1368, 0, !dbg !67
  %1369 = tail call float @llvm.nvvm.fabs.ftz.f(float %1224) #5, !dbg !67
  %1370 = tail call float @llvm.nvvm.fabs.f(float %1224) #5, !dbg !67
  %.01.i364 = select i1 %.not.i363, float %1370, float %1369, !dbg !67
  %1371 = fcmp ult float %.01.i364, 0x3FE3333340000000, !dbg !67
  br i1 %1371, label %__internal_fmad.exit3.i370, label %__internal_fmad.exit1.i365, !dbg !67

__internal_fmad.exit1.i365:                       ; preds = %__nv_tanhf.exit362
  %1372 = fmul float %.01.i364, 0x4007154760000000, !dbg !67
  %1373 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1372) #5, !dbg !67
  %1374 = fadd float %1373, 1.000000e+00, !dbg !67
  %1375 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1374) #6, !dbg !67, !srcloc !35
  %1376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i366 = icmp eq i32 %1376, 0, !dbg !67
  %1377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1375, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1378 = tail call float @llvm.nvvm.fma.rn.f(float %1375, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i367 = select i1 %.not6.i366, float %1378, float %1377, !dbg !67
  %1379 = fcmp oge float %.01.i364, 0x4022059680000000, !dbg !67
  %s.0.i368 = select i1 %1379, float 1.000000e+00, float %.03.i367, !dbg !67
  %1380 = bitcast float %s.0.i368 to i32, !dbg !67
  %1381 = bitcast float %1224 to i32, !dbg !67
  %1382 = and i32 %1381, -2147483648, !dbg !67
  %1383 = or i32 %1382, %1380, !dbg !67
  %1384 = bitcast i32 %1383 to float, !dbg !67
  br label %__nv_tanhf.exit381, !dbg !67

__internal_fmad.exit3.i370:                       ; preds = %__nv_tanhf.exit362
  %1385 = fmul float %1224, %1224, !dbg !67
  %1386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i371 = icmp eq i32 %1386, 0, !dbg !67
  %1387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1385, float 0xBFAAC795C0000000) #5, !dbg !67
  %1388 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1385, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i372 = select i1 %.not1.i371, float %1388, float %1387, !dbg !67
  %1389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i373 = icmp eq i32 %1389, 0, !dbg !67
  %1390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i372, float %1385, float 0x3FC10B2820000000) #5, !dbg !67
  %1391 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i372, float %1385, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i374 = select i1 %.not2.i373, float %1391, float %1390, !dbg !67
  %1392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i375 = icmp eq i32 %1392, 0, !dbg !67
  %1393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i374, float %1385, float 0xBFD5553DA0000000) #5, !dbg !67
  %1394 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i374, float %1385, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i376 = select i1 %.not3.i375, float %1394, float %1393, !dbg !67
  %1395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i377 = icmp eq i32 %1395, 0, !dbg !67
  %1396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i376, float %1385, float 0.000000e+00) #5, !dbg !67
  %1397 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i376, float %1385, float 0.000000e+00) #5, !dbg !67
  %.04.i378 = select i1 %.not4.i377, float %1397, float %1396, !dbg !67
  %1398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i379 = icmp eq i32 %1398, 0, !dbg !67
  %1399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i378, float %1224, float %1224) #5, !dbg !67
  %1400 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i378, float %1224, float %1224) #5, !dbg !67
  %.02.i380 = select i1 %.not5.i379, float %1400, float %1399, !dbg !67
  br label %__nv_tanhf.exit381, !dbg !67

__nv_tanhf.exit381:                               ; preds = %__internal_fmad.exit1.i365, %__internal_fmad.exit3.i370
  %s.1.i369 = phi float [ %1384, %__internal_fmad.exit1.i365 ], [ %.02.i380, %__internal_fmad.exit3.i370 ], !dbg !67
  %1401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i382 = icmp eq i32 %1401, 0, !dbg !67
  %1402 = tail call float @llvm.nvvm.fabs.ftz.f(float %1225) #5, !dbg !67
  %1403 = tail call float @llvm.nvvm.fabs.f(float %1225) #5, !dbg !67
  %.01.i383 = select i1 %.not.i382, float %1403, float %1402, !dbg !67
  %1404 = fcmp ult float %.01.i383, 0x3FE3333340000000, !dbg !67
  br i1 %1404, label %__internal_fmad.exit3.i389, label %__internal_fmad.exit1.i384, !dbg !67

__internal_fmad.exit1.i384:                       ; preds = %__nv_tanhf.exit381
  %1405 = fmul float %.01.i383, 0x4007154760000000, !dbg !67
  %1406 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1405) #5, !dbg !67
  %1407 = fadd float %1406, 1.000000e+00, !dbg !67
  %1408 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1407) #6, !dbg !67, !srcloc !35
  %1409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i385 = icmp eq i32 %1409, 0, !dbg !67
  %1410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1408, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1411 = tail call float @llvm.nvvm.fma.rn.f(float %1408, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i386 = select i1 %.not6.i385, float %1411, float %1410, !dbg !67
  %1412 = fcmp oge float %.01.i383, 0x4022059680000000, !dbg !67
  %s.0.i387 = select i1 %1412, float 1.000000e+00, float %.03.i386, !dbg !67
  %1413 = bitcast float %s.0.i387 to i32, !dbg !67
  %1414 = bitcast float %1225 to i32, !dbg !67
  %1415 = and i32 %1414, -2147483648, !dbg !67
  %1416 = or i32 %1415, %1413, !dbg !67
  %1417 = bitcast i32 %1416 to float, !dbg !67
  br label %__nv_tanhf.exit400, !dbg !67

__internal_fmad.exit3.i389:                       ; preds = %__nv_tanhf.exit381
  %1418 = fmul float %1225, %1225, !dbg !67
  %1419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i390 = icmp eq i32 %1419, 0, !dbg !67
  %1420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1418, float 0xBFAAC795C0000000) #5, !dbg !67
  %1421 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1418, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i391 = select i1 %.not1.i390, float %1421, float %1420, !dbg !67
  %1422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i392 = icmp eq i32 %1422, 0, !dbg !67
  %1423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i391, float %1418, float 0x3FC10B2820000000) #5, !dbg !67
  %1424 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i391, float %1418, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i393 = select i1 %.not2.i392, float %1424, float %1423, !dbg !67
  %1425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i394 = icmp eq i32 %1425, 0, !dbg !67
  %1426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i393, float %1418, float 0xBFD5553DA0000000) #5, !dbg !67
  %1427 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i393, float %1418, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i395 = select i1 %.not3.i394, float %1427, float %1426, !dbg !67
  %1428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i396 = icmp eq i32 %1428, 0, !dbg !67
  %1429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i395, float %1418, float 0.000000e+00) #5, !dbg !67
  %1430 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i395, float %1418, float 0.000000e+00) #5, !dbg !67
  %.04.i397 = select i1 %.not4.i396, float %1430, float %1429, !dbg !67
  %1431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i398 = icmp eq i32 %1431, 0, !dbg !67
  %1432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i397, float %1225, float %1225) #5, !dbg !67
  %1433 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i397, float %1225, float %1225) #5, !dbg !67
  %.02.i399 = select i1 %.not5.i398, float %1433, float %1432, !dbg !67
  br label %__nv_tanhf.exit400, !dbg !67

__nv_tanhf.exit400:                               ; preds = %__internal_fmad.exit1.i384, %__internal_fmad.exit3.i389
  %s.1.i388 = phi float [ %1417, %__internal_fmad.exit1.i384 ], [ %.02.i399, %__internal_fmad.exit3.i389 ], !dbg !67
  %1434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i401 = icmp eq i32 %1434, 0, !dbg !67
  %1435 = tail call float @llvm.nvvm.fabs.ftz.f(float %1226) #5, !dbg !67
  %1436 = tail call float @llvm.nvvm.fabs.f(float %1226) #5, !dbg !67
  %.01.i402 = select i1 %.not.i401, float %1436, float %1435, !dbg !67
  %1437 = fcmp ult float %.01.i402, 0x3FE3333340000000, !dbg !67
  br i1 %1437, label %__internal_fmad.exit3.i408, label %__internal_fmad.exit1.i403, !dbg !67

__internal_fmad.exit1.i403:                       ; preds = %__nv_tanhf.exit400
  %1438 = fmul float %.01.i402, 0x4007154760000000, !dbg !67
  %1439 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1438) #5, !dbg !67
  %1440 = fadd float %1439, 1.000000e+00, !dbg !67
  %1441 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1440) #6, !dbg !67, !srcloc !35
  %1442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i404 = icmp eq i32 %1442, 0, !dbg !67
  %1443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1441, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1444 = tail call float @llvm.nvvm.fma.rn.f(float %1441, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i405 = select i1 %.not6.i404, float %1444, float %1443, !dbg !67
  %1445 = fcmp oge float %.01.i402, 0x4022059680000000, !dbg !67
  %s.0.i406 = select i1 %1445, float 1.000000e+00, float %.03.i405, !dbg !67
  %1446 = bitcast float %s.0.i406 to i32, !dbg !67
  %1447 = bitcast float %1226 to i32, !dbg !67
  %1448 = and i32 %1447, -2147483648, !dbg !67
  %1449 = or i32 %1448, %1446, !dbg !67
  %1450 = bitcast i32 %1449 to float, !dbg !67
  br label %__nv_tanhf.exit419, !dbg !67

__internal_fmad.exit3.i408:                       ; preds = %__nv_tanhf.exit400
  %1451 = fmul float %1226, %1226, !dbg !67
  %1452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i409 = icmp eq i32 %1452, 0, !dbg !67
  %1453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1451, float 0xBFAAC795C0000000) #5, !dbg !67
  %1454 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1451, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i410 = select i1 %.not1.i409, float %1454, float %1453, !dbg !67
  %1455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i411 = icmp eq i32 %1455, 0, !dbg !67
  %1456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i410, float %1451, float 0x3FC10B2820000000) #5, !dbg !67
  %1457 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i410, float %1451, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i412 = select i1 %.not2.i411, float %1457, float %1456, !dbg !67
  %1458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i413 = icmp eq i32 %1458, 0, !dbg !67
  %1459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i412, float %1451, float 0xBFD5553DA0000000) #5, !dbg !67
  %1460 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i412, float %1451, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i414 = select i1 %.not3.i413, float %1460, float %1459, !dbg !67
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i415 = icmp eq i32 %1461, 0, !dbg !67
  %1462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i414, float %1451, float 0.000000e+00) #5, !dbg !67
  %1463 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i414, float %1451, float 0.000000e+00) #5, !dbg !67
  %.04.i416 = select i1 %.not4.i415, float %1463, float %1462, !dbg !67
  %1464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i417 = icmp eq i32 %1464, 0, !dbg !67
  %1465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i416, float %1226, float %1226) #5, !dbg !67
  %1466 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i416, float %1226, float %1226) #5, !dbg !67
  %.02.i418 = select i1 %.not5.i417, float %1466, float %1465, !dbg !67
  br label %__nv_tanhf.exit419, !dbg !67

__nv_tanhf.exit419:                               ; preds = %__internal_fmad.exit1.i403, %__internal_fmad.exit3.i408
  %s.1.i407 = phi float [ %1450, %__internal_fmad.exit1.i403 ], [ %.02.i418, %__internal_fmad.exit3.i408 ], !dbg !67
  %1467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i420 = icmp eq i32 %1467, 0, !dbg !67
  %1468 = tail call float @llvm.nvvm.fabs.ftz.f(float %1227) #5, !dbg !67
  %1469 = tail call float @llvm.nvvm.fabs.f(float %1227) #5, !dbg !67
  %.01.i421 = select i1 %.not.i420, float %1469, float %1468, !dbg !67
  %1470 = fcmp ult float %.01.i421, 0x3FE3333340000000, !dbg !67
  br i1 %1470, label %__internal_fmad.exit3.i427, label %__internal_fmad.exit1.i422, !dbg !67

__internal_fmad.exit1.i422:                       ; preds = %__nv_tanhf.exit419
  %1471 = fmul float %.01.i421, 0x4007154760000000, !dbg !67
  %1472 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1471) #5, !dbg !67
  %1473 = fadd float %1472, 1.000000e+00, !dbg !67
  %1474 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1473) #6, !dbg !67, !srcloc !35
  %1475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i423 = icmp eq i32 %1475, 0, !dbg !67
  %1476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1474, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1477 = tail call float @llvm.nvvm.fma.rn.f(float %1474, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i424 = select i1 %.not6.i423, float %1477, float %1476, !dbg !67
  %1478 = fcmp oge float %.01.i421, 0x4022059680000000, !dbg !67
  %s.0.i425 = select i1 %1478, float 1.000000e+00, float %.03.i424, !dbg !67
  %1479 = bitcast float %s.0.i425 to i32, !dbg !67
  %1480 = bitcast float %1227 to i32, !dbg !67
  %1481 = and i32 %1480, -2147483648, !dbg !67
  %1482 = or i32 %1481, %1479, !dbg !67
  %1483 = bitcast i32 %1482 to float, !dbg !67
  br label %__nv_tanhf.exit438, !dbg !67

__internal_fmad.exit3.i427:                       ; preds = %__nv_tanhf.exit419
  %1484 = fmul float %1227, %1227, !dbg !67
  %1485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i428 = icmp eq i32 %1485, 0, !dbg !67
  %1486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1484, float 0xBFAAC795C0000000) #5, !dbg !67
  %1487 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1484, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i429 = select i1 %.not1.i428, float %1487, float %1486, !dbg !67
  %1488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i430 = icmp eq i32 %1488, 0, !dbg !67
  %1489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i429, float %1484, float 0x3FC10B2820000000) #5, !dbg !67
  %1490 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i429, float %1484, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i431 = select i1 %.not2.i430, float %1490, float %1489, !dbg !67
  %1491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i432 = icmp eq i32 %1491, 0, !dbg !67
  %1492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i431, float %1484, float 0xBFD5553DA0000000) #5, !dbg !67
  %1493 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i431, float %1484, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i433 = select i1 %.not3.i432, float %1493, float %1492, !dbg !67
  %1494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i434 = icmp eq i32 %1494, 0, !dbg !67
  %1495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i433, float %1484, float 0.000000e+00) #5, !dbg !67
  %1496 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i433, float %1484, float 0.000000e+00) #5, !dbg !67
  %.04.i435 = select i1 %.not4.i434, float %1496, float %1495, !dbg !67
  %1497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i436 = icmp eq i32 %1497, 0, !dbg !67
  %1498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i435, float %1227, float %1227) #5, !dbg !67
  %1499 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i435, float %1227, float %1227) #5, !dbg !67
  %.02.i437 = select i1 %.not5.i436, float %1499, float %1498, !dbg !67
  br label %__nv_tanhf.exit438, !dbg !67

__nv_tanhf.exit438:                               ; preds = %__internal_fmad.exit1.i422, %__internal_fmad.exit3.i427
  %s.1.i426 = phi float [ %1483, %__internal_fmad.exit1.i422 ], [ %.02.i437, %__internal_fmad.exit3.i427 ], !dbg !67
  %1500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i439 = icmp eq i32 %1500, 0, !dbg !67
  %1501 = tail call float @llvm.nvvm.fabs.ftz.f(float %1228) #5, !dbg !67
  %1502 = tail call float @llvm.nvvm.fabs.f(float %1228) #5, !dbg !67
  %.01.i440 = select i1 %.not.i439, float %1502, float %1501, !dbg !67
  %1503 = fcmp ult float %.01.i440, 0x3FE3333340000000, !dbg !67
  br i1 %1503, label %__internal_fmad.exit3.i446, label %__internal_fmad.exit1.i441, !dbg !67

__internal_fmad.exit1.i441:                       ; preds = %__nv_tanhf.exit438
  %1504 = fmul float %.01.i440, 0x4007154760000000, !dbg !67
  %1505 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1504) #5, !dbg !67
  %1506 = fadd float %1505, 1.000000e+00, !dbg !67
  %1507 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1506) #6, !dbg !67, !srcloc !35
  %1508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i442 = icmp eq i32 %1508, 0, !dbg !67
  %1509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1507, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1510 = tail call float @llvm.nvvm.fma.rn.f(float %1507, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i443 = select i1 %.not6.i442, float %1510, float %1509, !dbg !67
  %1511 = fcmp oge float %.01.i440, 0x4022059680000000, !dbg !67
  %s.0.i444 = select i1 %1511, float 1.000000e+00, float %.03.i443, !dbg !67
  %1512 = bitcast float %s.0.i444 to i32, !dbg !67
  %1513 = bitcast float %1228 to i32, !dbg !67
  %1514 = and i32 %1513, -2147483648, !dbg !67
  %1515 = or i32 %1514, %1512, !dbg !67
  %1516 = bitcast i32 %1515 to float, !dbg !67
  br label %__nv_tanhf.exit457, !dbg !67

__internal_fmad.exit3.i446:                       ; preds = %__nv_tanhf.exit438
  %1517 = fmul float %1228, %1228, !dbg !67
  %1518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i447 = icmp eq i32 %1518, 0, !dbg !67
  %1519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1517, float 0xBFAAC795C0000000) #5, !dbg !67
  %1520 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1517, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i448 = select i1 %.not1.i447, float %1520, float %1519, !dbg !67
  %1521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i449 = icmp eq i32 %1521, 0, !dbg !67
  %1522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i448, float %1517, float 0x3FC10B2820000000) #5, !dbg !67
  %1523 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i448, float %1517, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i450 = select i1 %.not2.i449, float %1523, float %1522, !dbg !67
  %1524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i451 = icmp eq i32 %1524, 0, !dbg !67
  %1525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i450, float %1517, float 0xBFD5553DA0000000) #5, !dbg !67
  %1526 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i450, float %1517, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i452 = select i1 %.not3.i451, float %1526, float %1525, !dbg !67
  %1527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i453 = icmp eq i32 %1527, 0, !dbg !67
  %1528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i452, float %1517, float 0.000000e+00) #5, !dbg !67
  %1529 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i452, float %1517, float 0.000000e+00) #5, !dbg !67
  %.04.i454 = select i1 %.not4.i453, float %1529, float %1528, !dbg !67
  %1530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i455 = icmp eq i32 %1530, 0, !dbg !67
  %1531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i454, float %1228, float %1228) #5, !dbg !67
  %1532 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i454, float %1228, float %1228) #5, !dbg !67
  %.02.i456 = select i1 %.not5.i455, float %1532, float %1531, !dbg !67
  br label %__nv_tanhf.exit457, !dbg !67

__nv_tanhf.exit457:                               ; preds = %__internal_fmad.exit1.i441, %__internal_fmad.exit3.i446
  %s.1.i445 = phi float [ %1516, %__internal_fmad.exit1.i441 ], [ %.02.i456, %__internal_fmad.exit3.i446 ], !dbg !67
  %1533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i458 = icmp eq i32 %1533, 0, !dbg !67
  %1534 = tail call float @llvm.nvvm.fabs.ftz.f(float %1229) #5, !dbg !67
  %1535 = tail call float @llvm.nvvm.fabs.f(float %1229) #5, !dbg !67
  %.01.i459 = select i1 %.not.i458, float %1535, float %1534, !dbg !67
  %1536 = fcmp ult float %.01.i459, 0x3FE3333340000000, !dbg !67
  br i1 %1536, label %__internal_fmad.exit3.i465, label %__internal_fmad.exit1.i460, !dbg !67

__internal_fmad.exit1.i460:                       ; preds = %__nv_tanhf.exit457
  %1537 = fmul float %.01.i459, 0x4007154760000000, !dbg !67
  %1538 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1537) #5, !dbg !67
  %1539 = fadd float %1538, 1.000000e+00, !dbg !67
  %1540 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1539) #6, !dbg !67, !srcloc !35
  %1541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i461 = icmp eq i32 %1541, 0, !dbg !67
  %1542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1540, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1543 = tail call float @llvm.nvvm.fma.rn.f(float %1540, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i462 = select i1 %.not6.i461, float %1543, float %1542, !dbg !67
  %1544 = fcmp oge float %.01.i459, 0x4022059680000000, !dbg !67
  %s.0.i463 = select i1 %1544, float 1.000000e+00, float %.03.i462, !dbg !67
  %1545 = bitcast float %s.0.i463 to i32, !dbg !67
  %1546 = bitcast float %1229 to i32, !dbg !67
  %1547 = and i32 %1546, -2147483648, !dbg !67
  %1548 = or i32 %1547, %1545, !dbg !67
  %1549 = bitcast i32 %1548 to float, !dbg !67
  br label %__nv_tanhf.exit476, !dbg !67

__internal_fmad.exit3.i465:                       ; preds = %__nv_tanhf.exit457
  %1550 = fmul float %1229, %1229, !dbg !67
  %1551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i466 = icmp eq i32 %1551, 0, !dbg !67
  %1552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1550, float 0xBFAAC795C0000000) #5, !dbg !67
  %1553 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1550, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i467 = select i1 %.not1.i466, float %1553, float %1552, !dbg !67
  %1554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i468 = icmp eq i32 %1554, 0, !dbg !67
  %1555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i467, float %1550, float 0x3FC10B2820000000) #5, !dbg !67
  %1556 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i467, float %1550, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i469 = select i1 %.not2.i468, float %1556, float %1555, !dbg !67
  %1557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i470 = icmp eq i32 %1557, 0, !dbg !67
  %1558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i469, float %1550, float 0xBFD5553DA0000000) #5, !dbg !67
  %1559 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i469, float %1550, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i471 = select i1 %.not3.i470, float %1559, float %1558, !dbg !67
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i472 = icmp eq i32 %1560, 0, !dbg !67
  %1561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i471, float %1550, float 0.000000e+00) #5, !dbg !67
  %1562 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i471, float %1550, float 0.000000e+00) #5, !dbg !67
  %.04.i473 = select i1 %.not4.i472, float %1562, float %1561, !dbg !67
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i474 = icmp eq i32 %1563, 0, !dbg !67
  %1564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i473, float %1229, float %1229) #5, !dbg !67
  %1565 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i473, float %1229, float %1229) #5, !dbg !67
  %.02.i475 = select i1 %.not5.i474, float %1565, float %1564, !dbg !67
  br label %__nv_tanhf.exit476, !dbg !67

__nv_tanhf.exit476:                               ; preds = %__internal_fmad.exit1.i460, %__internal_fmad.exit3.i465
  %s.1.i464 = phi float [ %1549, %__internal_fmad.exit1.i460 ], [ %.02.i475, %__internal_fmad.exit3.i465 ], !dbg !67
  %1566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i477 = icmp eq i32 %1566, 0, !dbg !67
  %1567 = tail call float @llvm.nvvm.fabs.ftz.f(float %1230) #5, !dbg !67
  %1568 = tail call float @llvm.nvvm.fabs.f(float %1230) #5, !dbg !67
  %.01.i478 = select i1 %.not.i477, float %1568, float %1567, !dbg !67
  %1569 = fcmp ult float %.01.i478, 0x3FE3333340000000, !dbg !67
  br i1 %1569, label %__internal_fmad.exit3.i484, label %__internal_fmad.exit1.i479, !dbg !67

__internal_fmad.exit1.i479:                       ; preds = %__nv_tanhf.exit476
  %1570 = fmul float %.01.i478, 0x4007154760000000, !dbg !67
  %1571 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1570) #5, !dbg !67
  %1572 = fadd float %1571, 1.000000e+00, !dbg !67
  %1573 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1572) #6, !dbg !67, !srcloc !35
  %1574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i480 = icmp eq i32 %1574, 0, !dbg !67
  %1575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1573, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1576 = tail call float @llvm.nvvm.fma.rn.f(float %1573, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i481 = select i1 %.not6.i480, float %1576, float %1575, !dbg !67
  %1577 = fcmp oge float %.01.i478, 0x4022059680000000, !dbg !67
  %s.0.i482 = select i1 %1577, float 1.000000e+00, float %.03.i481, !dbg !67
  %1578 = bitcast float %s.0.i482 to i32, !dbg !67
  %1579 = bitcast float %1230 to i32, !dbg !67
  %1580 = and i32 %1579, -2147483648, !dbg !67
  %1581 = or i32 %1580, %1578, !dbg !67
  %1582 = bitcast i32 %1581 to float, !dbg !67
  br label %__nv_tanhf.exit495, !dbg !67

__internal_fmad.exit3.i484:                       ; preds = %__nv_tanhf.exit476
  %1583 = fmul float %1230, %1230, !dbg !67
  %1584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i485 = icmp eq i32 %1584, 0, !dbg !67
  %1585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1583, float 0xBFAAC795C0000000) #5, !dbg !67
  %1586 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1583, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i486 = select i1 %.not1.i485, float %1586, float %1585, !dbg !67
  %1587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i487 = icmp eq i32 %1587, 0, !dbg !67
  %1588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i486, float %1583, float 0x3FC10B2820000000) #5, !dbg !67
  %1589 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i486, float %1583, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i488 = select i1 %.not2.i487, float %1589, float %1588, !dbg !67
  %1590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i489 = icmp eq i32 %1590, 0, !dbg !67
  %1591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i488, float %1583, float 0xBFD5553DA0000000) #5, !dbg !67
  %1592 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i488, float %1583, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i490 = select i1 %.not3.i489, float %1592, float %1591, !dbg !67
  %1593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i491 = icmp eq i32 %1593, 0, !dbg !67
  %1594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i490, float %1583, float 0.000000e+00) #5, !dbg !67
  %1595 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i490, float %1583, float 0.000000e+00) #5, !dbg !67
  %.04.i492 = select i1 %.not4.i491, float %1595, float %1594, !dbg !67
  %1596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i493 = icmp eq i32 %1596, 0, !dbg !67
  %1597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i492, float %1230, float %1230) #5, !dbg !67
  %1598 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i492, float %1230, float %1230) #5, !dbg !67
  %.02.i494 = select i1 %.not5.i493, float %1598, float %1597, !dbg !67
  br label %__nv_tanhf.exit495, !dbg !67

__nv_tanhf.exit495:                               ; preds = %__internal_fmad.exit1.i479, %__internal_fmad.exit3.i484
  %s.1.i483 = phi float [ %1582, %__internal_fmad.exit1.i479 ], [ %.02.i494, %__internal_fmad.exit3.i484 ], !dbg !67
  %1599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i496 = icmp eq i32 %1599, 0, !dbg !67
  %1600 = tail call float @llvm.nvvm.fabs.ftz.f(float %1231) #5, !dbg !67
  %1601 = tail call float @llvm.nvvm.fabs.f(float %1231) #5, !dbg !67
  %.01.i497 = select i1 %.not.i496, float %1601, float %1600, !dbg !67
  %1602 = fcmp ult float %.01.i497, 0x3FE3333340000000, !dbg !67
  br i1 %1602, label %__internal_fmad.exit3.i503, label %__internal_fmad.exit1.i498, !dbg !67

__internal_fmad.exit1.i498:                       ; preds = %__nv_tanhf.exit495
  %1603 = fmul float %.01.i497, 0x4007154760000000, !dbg !67
  %1604 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1603) #5, !dbg !67
  %1605 = fadd float %1604, 1.000000e+00, !dbg !67
  %1606 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1605) #6, !dbg !67, !srcloc !35
  %1607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i499 = icmp eq i32 %1607, 0, !dbg !67
  %1608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1606, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1609 = tail call float @llvm.nvvm.fma.rn.f(float %1606, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i500 = select i1 %.not6.i499, float %1609, float %1608, !dbg !67
  %1610 = fcmp oge float %.01.i497, 0x4022059680000000, !dbg !67
  %s.0.i501 = select i1 %1610, float 1.000000e+00, float %.03.i500, !dbg !67
  %1611 = bitcast float %s.0.i501 to i32, !dbg !67
  %1612 = bitcast float %1231 to i32, !dbg !67
  %1613 = and i32 %1612, -2147483648, !dbg !67
  %1614 = or i32 %1613, %1611, !dbg !67
  %1615 = bitcast i32 %1614 to float, !dbg !67
  br label %__nv_tanhf.exit514, !dbg !67

__internal_fmad.exit3.i503:                       ; preds = %__nv_tanhf.exit495
  %1616 = fmul float %1231, %1231, !dbg !67
  %1617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i504 = icmp eq i32 %1617, 0, !dbg !67
  %1618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1616, float 0xBFAAC795C0000000) #5, !dbg !67
  %1619 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1616, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i505 = select i1 %.not1.i504, float %1619, float %1618, !dbg !67
  %1620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i506 = icmp eq i32 %1620, 0, !dbg !67
  %1621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i505, float %1616, float 0x3FC10B2820000000) #5, !dbg !67
  %1622 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i505, float %1616, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i507 = select i1 %.not2.i506, float %1622, float %1621, !dbg !67
  %1623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i508 = icmp eq i32 %1623, 0, !dbg !67
  %1624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i507, float %1616, float 0xBFD5553DA0000000) #5, !dbg !67
  %1625 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i507, float %1616, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i509 = select i1 %.not3.i508, float %1625, float %1624, !dbg !67
  %1626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i510 = icmp eq i32 %1626, 0, !dbg !67
  %1627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i509, float %1616, float 0.000000e+00) #5, !dbg !67
  %1628 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i509, float %1616, float 0.000000e+00) #5, !dbg !67
  %.04.i511 = select i1 %.not4.i510, float %1628, float %1627, !dbg !67
  %1629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i512 = icmp eq i32 %1629, 0, !dbg !67
  %1630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i511, float %1231, float %1231) #5, !dbg !67
  %1631 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i511, float %1231, float %1231) #5, !dbg !67
  %.02.i513 = select i1 %.not5.i512, float %1631, float %1630, !dbg !67
  br label %__nv_tanhf.exit514, !dbg !67

__nv_tanhf.exit514:                               ; preds = %__internal_fmad.exit1.i498, %__internal_fmad.exit3.i503
  %s.1.i502 = phi float [ %1615, %__internal_fmad.exit1.i498 ], [ %.02.i513, %__internal_fmad.exit3.i503 ], !dbg !67
  %1632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i515 = icmp eq i32 %1632, 0, !dbg !67
  %1633 = tail call float @llvm.nvvm.fabs.ftz.f(float %1232) #5, !dbg !67
  %1634 = tail call float @llvm.nvvm.fabs.f(float %1232) #5, !dbg !67
  %.01.i516 = select i1 %.not.i515, float %1634, float %1633, !dbg !67
  %1635 = fcmp ult float %.01.i516, 0x3FE3333340000000, !dbg !67
  br i1 %1635, label %__internal_fmad.exit3.i522, label %__internal_fmad.exit1.i517, !dbg !67

__internal_fmad.exit1.i517:                       ; preds = %__nv_tanhf.exit514
  %1636 = fmul float %.01.i516, 0x4007154760000000, !dbg !67
  %1637 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1636) #5, !dbg !67
  %1638 = fadd float %1637, 1.000000e+00, !dbg !67
  %1639 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1638) #6, !dbg !67, !srcloc !35
  %1640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i518 = icmp eq i32 %1640, 0, !dbg !67
  %1641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1639, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1642 = tail call float @llvm.nvvm.fma.rn.f(float %1639, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i519 = select i1 %.not6.i518, float %1642, float %1641, !dbg !67
  %1643 = fcmp oge float %.01.i516, 0x4022059680000000, !dbg !67
  %s.0.i520 = select i1 %1643, float 1.000000e+00, float %.03.i519, !dbg !67
  %1644 = bitcast float %s.0.i520 to i32, !dbg !67
  %1645 = bitcast float %1232 to i32, !dbg !67
  %1646 = and i32 %1645, -2147483648, !dbg !67
  %1647 = or i32 %1646, %1644, !dbg !67
  %1648 = bitcast i32 %1647 to float, !dbg !67
  br label %__nv_tanhf.exit533, !dbg !67

__internal_fmad.exit3.i522:                       ; preds = %__nv_tanhf.exit514
  %1649 = fmul float %1232, %1232, !dbg !67
  %1650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i523 = icmp eq i32 %1650, 0, !dbg !67
  %1651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1649, float 0xBFAAC795C0000000) #5, !dbg !67
  %1652 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1649, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i524 = select i1 %.not1.i523, float %1652, float %1651, !dbg !67
  %1653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i525 = icmp eq i32 %1653, 0, !dbg !67
  %1654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i524, float %1649, float 0x3FC10B2820000000) #5, !dbg !67
  %1655 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i524, float %1649, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i526 = select i1 %.not2.i525, float %1655, float %1654, !dbg !67
  %1656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i527 = icmp eq i32 %1656, 0, !dbg !67
  %1657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i526, float %1649, float 0xBFD5553DA0000000) #5, !dbg !67
  %1658 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i526, float %1649, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i528 = select i1 %.not3.i527, float %1658, float %1657, !dbg !67
  %1659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i529 = icmp eq i32 %1659, 0, !dbg !67
  %1660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i528, float %1649, float 0.000000e+00) #5, !dbg !67
  %1661 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i528, float %1649, float 0.000000e+00) #5, !dbg !67
  %.04.i530 = select i1 %.not4.i529, float %1661, float %1660, !dbg !67
  %1662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i531 = icmp eq i32 %1662, 0, !dbg !67
  %1663 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i530, float %1232, float %1232) #5, !dbg !67
  %1664 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i530, float %1232, float %1232) #5, !dbg !67
  %.02.i532 = select i1 %.not5.i531, float %1664, float %1663, !dbg !67
  br label %__nv_tanhf.exit533, !dbg !67

__nv_tanhf.exit533:                               ; preds = %__internal_fmad.exit1.i517, %__internal_fmad.exit3.i522
  %s.1.i521 = phi float [ %1648, %__internal_fmad.exit1.i517 ], [ %.02.i532, %__internal_fmad.exit3.i522 ], !dbg !67
  %1665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i534 = icmp eq i32 %1665, 0, !dbg !67
  %1666 = tail call float @llvm.nvvm.fabs.ftz.f(float %1233) #5, !dbg !67
  %1667 = tail call float @llvm.nvvm.fabs.f(float %1233) #5, !dbg !67
  %.01.i535 = select i1 %.not.i534, float %1667, float %1666, !dbg !67
  %1668 = fcmp ult float %.01.i535, 0x3FE3333340000000, !dbg !67
  br i1 %1668, label %__internal_fmad.exit3.i541, label %__internal_fmad.exit1.i536, !dbg !67

__internal_fmad.exit1.i536:                       ; preds = %__nv_tanhf.exit533
  %1669 = fmul float %.01.i535, 0x4007154760000000, !dbg !67
  %1670 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1669) #5, !dbg !67
  %1671 = fadd float %1670, 1.000000e+00, !dbg !67
  %1672 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1671) #6, !dbg !67, !srcloc !35
  %1673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i537 = icmp eq i32 %1673, 0, !dbg !67
  %1674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1672, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1675 = tail call float @llvm.nvvm.fma.rn.f(float %1672, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i538 = select i1 %.not6.i537, float %1675, float %1674, !dbg !67
  %1676 = fcmp oge float %.01.i535, 0x4022059680000000, !dbg !67
  %s.0.i539 = select i1 %1676, float 1.000000e+00, float %.03.i538, !dbg !67
  %1677 = bitcast float %s.0.i539 to i32, !dbg !67
  %1678 = bitcast float %1233 to i32, !dbg !67
  %1679 = and i32 %1678, -2147483648, !dbg !67
  %1680 = or i32 %1679, %1677, !dbg !67
  %1681 = bitcast i32 %1680 to float, !dbg !67
  br label %__nv_tanhf.exit552, !dbg !67

__internal_fmad.exit3.i541:                       ; preds = %__nv_tanhf.exit533
  %1682 = fmul float %1233, %1233, !dbg !67
  %1683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i542 = icmp eq i32 %1683, 0, !dbg !67
  %1684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1682, float 0xBFAAC795C0000000) #5, !dbg !67
  %1685 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1682, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i543 = select i1 %.not1.i542, float %1685, float %1684, !dbg !67
  %1686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i544 = icmp eq i32 %1686, 0, !dbg !67
  %1687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i543, float %1682, float 0x3FC10B2820000000) #5, !dbg !67
  %1688 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i543, float %1682, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i545 = select i1 %.not2.i544, float %1688, float %1687, !dbg !67
  %1689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i546 = icmp eq i32 %1689, 0, !dbg !67
  %1690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i545, float %1682, float 0xBFD5553DA0000000) #5, !dbg !67
  %1691 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i545, float %1682, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i547 = select i1 %.not3.i546, float %1691, float %1690, !dbg !67
  %1692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i548 = icmp eq i32 %1692, 0, !dbg !67
  %1693 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i547, float %1682, float 0.000000e+00) #5, !dbg !67
  %1694 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i547, float %1682, float 0.000000e+00) #5, !dbg !67
  %.04.i549 = select i1 %.not4.i548, float %1694, float %1693, !dbg !67
  %1695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i550 = icmp eq i32 %1695, 0, !dbg !67
  %1696 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i549, float %1233, float %1233) #5, !dbg !67
  %1697 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i549, float %1233, float %1233) #5, !dbg !67
  %.02.i551 = select i1 %.not5.i550, float %1697, float %1696, !dbg !67
  br label %__nv_tanhf.exit552, !dbg !67

__nv_tanhf.exit552:                               ; preds = %__internal_fmad.exit1.i536, %__internal_fmad.exit3.i541
  %s.1.i540 = phi float [ %1681, %__internal_fmad.exit1.i536 ], [ %.02.i551, %__internal_fmad.exit3.i541 ], !dbg !67
  %1698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i553 = icmp eq i32 %1698, 0, !dbg !67
  %1699 = tail call float @llvm.nvvm.fabs.ftz.f(float %1234) #5, !dbg !67
  %1700 = tail call float @llvm.nvvm.fabs.f(float %1234) #5, !dbg !67
  %.01.i554 = select i1 %.not.i553, float %1700, float %1699, !dbg !67
  %1701 = fcmp ult float %.01.i554, 0x3FE3333340000000, !dbg !67
  br i1 %1701, label %__internal_fmad.exit3.i560, label %__internal_fmad.exit1.i555, !dbg !67

__internal_fmad.exit1.i555:                       ; preds = %__nv_tanhf.exit552
  %1702 = fmul float %.01.i554, 0x4007154760000000, !dbg !67
  %1703 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1702) #5, !dbg !67
  %1704 = fadd float %1703, 1.000000e+00, !dbg !67
  %1705 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1704) #6, !dbg !67, !srcloc !35
  %1706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i556 = icmp eq i32 %1706, 0, !dbg !67
  %1707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1705, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1708 = tail call float @llvm.nvvm.fma.rn.f(float %1705, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i557 = select i1 %.not6.i556, float %1708, float %1707, !dbg !67
  %1709 = fcmp oge float %.01.i554, 0x4022059680000000, !dbg !67
  %s.0.i558 = select i1 %1709, float 1.000000e+00, float %.03.i557, !dbg !67
  %1710 = bitcast float %s.0.i558 to i32, !dbg !67
  %1711 = bitcast float %1234 to i32, !dbg !67
  %1712 = and i32 %1711, -2147483648, !dbg !67
  %1713 = or i32 %1712, %1710, !dbg !67
  %1714 = bitcast i32 %1713 to float, !dbg !67
  br label %__nv_tanhf.exit571, !dbg !67

__internal_fmad.exit3.i560:                       ; preds = %__nv_tanhf.exit552
  %1715 = fmul float %1234, %1234, !dbg !67
  %1716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i561 = icmp eq i32 %1716, 0, !dbg !67
  %1717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1715, float 0xBFAAC795C0000000) #5, !dbg !67
  %1718 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1715, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i562 = select i1 %.not1.i561, float %1718, float %1717, !dbg !67
  %1719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i563 = icmp eq i32 %1719, 0, !dbg !67
  %1720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i562, float %1715, float 0x3FC10B2820000000) #5, !dbg !67
  %1721 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i562, float %1715, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i564 = select i1 %.not2.i563, float %1721, float %1720, !dbg !67
  %1722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i565 = icmp eq i32 %1722, 0, !dbg !67
  %1723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i564, float %1715, float 0xBFD5553DA0000000) #5, !dbg !67
  %1724 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i564, float %1715, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i566 = select i1 %.not3.i565, float %1724, float %1723, !dbg !67
  %1725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i567 = icmp eq i32 %1725, 0, !dbg !67
  %1726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i566, float %1715, float 0.000000e+00) #5, !dbg !67
  %1727 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i566, float %1715, float 0.000000e+00) #5, !dbg !67
  %.04.i568 = select i1 %.not4.i567, float %1727, float %1726, !dbg !67
  %1728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i569 = icmp eq i32 %1728, 0, !dbg !67
  %1729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i568, float %1234, float %1234) #5, !dbg !67
  %1730 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i568, float %1234, float %1234) #5, !dbg !67
  %.02.i570 = select i1 %.not5.i569, float %1730, float %1729, !dbg !67
  br label %__nv_tanhf.exit571, !dbg !67

__nv_tanhf.exit571:                               ; preds = %__internal_fmad.exit1.i555, %__internal_fmad.exit3.i560
  %s.1.i559 = phi float [ %1714, %__internal_fmad.exit1.i555 ], [ %.02.i570, %__internal_fmad.exit3.i560 ], !dbg !67
  %1731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i572 = icmp eq i32 %1731, 0, !dbg !67
  %1732 = tail call float @llvm.nvvm.fabs.ftz.f(float %1235) #5, !dbg !67
  %1733 = tail call float @llvm.nvvm.fabs.f(float %1235) #5, !dbg !67
  %.01.i573 = select i1 %.not.i572, float %1733, float %1732, !dbg !67
  %1734 = fcmp ult float %.01.i573, 0x3FE3333340000000, !dbg !67
  br i1 %1734, label %__internal_fmad.exit3.i579, label %__internal_fmad.exit1.i574, !dbg !67

__internal_fmad.exit1.i574:                       ; preds = %__nv_tanhf.exit571
  %1735 = fmul float %.01.i573, 0x4007154760000000, !dbg !67
  %1736 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1735) #5, !dbg !67
  %1737 = fadd float %1736, 1.000000e+00, !dbg !67
  %1738 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1737) #6, !dbg !67, !srcloc !35
  %1739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not6.i575 = icmp eq i32 %1739, 0, !dbg !67
  %1740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1738, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %1741 = tail call float @llvm.nvvm.fma.rn.f(float %1738, float -2.000000e+00, float 1.000000e+00) #5, !dbg !67
  %.03.i576 = select i1 %.not6.i575, float %1741, float %1740, !dbg !67
  %1742 = fcmp oge float %.01.i573, 0x4022059680000000, !dbg !67
  %s.0.i577 = select i1 %1742, float 1.000000e+00, float %.03.i576, !dbg !67
  %1743 = bitcast float %s.0.i577 to i32, !dbg !67
  %1744 = bitcast float %1235 to i32, !dbg !67
  %1745 = and i32 %1744, -2147483648, !dbg !67
  %1746 = or i32 %1745, %1743, !dbg !67
  %1747 = bitcast i32 %1746 to float, !dbg !67
  br label %__nv_tanhf.exit590, !dbg !67

__internal_fmad.exit3.i579:                       ; preds = %__nv_tanhf.exit571
  %1748 = fmul float %1235, %1235, !dbg !67
  %1749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not1.i580 = icmp eq i32 %1749, 0, !dbg !67
  %1750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1748, float 0xBFAAC795C0000000) #5, !dbg !67
  %1751 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1748, float 0xBFAAC795C0000000) #5, !dbg !67
  %.06.i581 = select i1 %.not1.i580, float %1751, float %1750, !dbg !67
  %1752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not2.i582 = icmp eq i32 %1752, 0, !dbg !67
  %1753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i581, float %1748, float 0x3FC10B2820000000) #5, !dbg !67
  %1754 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i581, float %1748, float 0x3FC10B2820000000) #5, !dbg !67
  %.05.i583 = select i1 %.not2.i582, float %1754, float %1753, !dbg !67
  %1755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not3.i584 = icmp eq i32 %1755, 0, !dbg !67
  %1756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i583, float %1748, float 0xBFD5553DA0000000) #5, !dbg !67
  %1757 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i583, float %1748, float 0xBFD5553DA0000000) #5, !dbg !67
  %.0.i585 = select i1 %.not3.i584, float %1757, float %1756, !dbg !67
  %1758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not4.i586 = icmp eq i32 %1758, 0, !dbg !67
  %1759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i585, float %1748, float 0.000000e+00) #5, !dbg !67
  %1760 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i585, float %1748, float 0.000000e+00) #5, !dbg !67
  %.04.i587 = select i1 %.not4.i586, float %1760, float %1759, !dbg !67
  %1761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not5.i588 = icmp eq i32 %1761, 0, !dbg !67
  %1762 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i587, float %1235, float %1235) #5, !dbg !67
  %1763 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i587, float %1235, float %1235) #5, !dbg !67
  %.02.i589 = select i1 %.not5.i588, float %1763, float %1762, !dbg !67
  br label %__nv_tanhf.exit590, !dbg !67

__nv_tanhf.exit590:                               ; preds = %__internal_fmad.exit1.i574, %__internal_fmad.exit3.i579
  %s.1.i578 = phi float [ %1747, %__internal_fmad.exit1.i574 ], [ %.02.i589, %__internal_fmad.exit3.i579 ], !dbg !67
  %1764 = fmul float %1155, 5.000000e-01, !dbg !68
  %1765 = fmul float %1154, 5.000000e-01, !dbg !68
  %1766 = fmul float %1153, 5.000000e-01, !dbg !68
  %1767 = fmul float %1152, 5.000000e-01, !dbg !68
  %1768 = fmul float %1146, 5.000000e-01, !dbg !68
  %1769 = fmul float %1145, 5.000000e-01, !dbg !68
  %1770 = fmul float %1144, 5.000000e-01, !dbg !68
  %1771 = fmul float %1143, 5.000000e-01, !dbg !68
  %1772 = fmul float %1137, 5.000000e-01, !dbg !68
  %1773 = fmul float %1136, 5.000000e-01, !dbg !68
  %1774 = fmul float %1135, 5.000000e-01, !dbg !68
  %1775 = fmul float %1134, 5.000000e-01, !dbg !68
  %1776 = fmul float %1128, 5.000000e-01, !dbg !68
  %1777 = fmul float %1127, 5.000000e-01, !dbg !68
  %1778 = fmul float %1126, 5.000000e-01, !dbg !68
  %1779 = fmul float %1125, 5.000000e-01, !dbg !68
  %1780 = extractvalue { i32, i32, i32, i32 } %1119, 3, !dbg !60
  %1781 = bitcast i32 %1780 to <2 x bfloat>, !dbg !60
  %1782 = extractelement <2 x bfloat> %1781, i64 1, !dbg !60
  %1783 = fpext bfloat %1782 to float, !dbg !69
  %1784 = extractelement <2 x bfloat> %1781, i64 0, !dbg !60
  %1785 = fpext bfloat %1784 to float, !dbg !69
  %1786 = extractvalue { i32, i32, i32, i32 } %1119, 2, !dbg !60
  %1787 = bitcast i32 %1786 to <2 x bfloat>, !dbg !60
  %1788 = extractelement <2 x bfloat> %1787, i64 1, !dbg !60
  %1789 = fpext bfloat %1788 to float, !dbg !69
  %1790 = extractelement <2 x bfloat> %1787, i64 0, !dbg !60
  %1791 = fpext bfloat %1790 to float, !dbg !69
  %1792 = extractvalue { i32, i32, i32, i32 } %1119, 1, !dbg !60
  %1793 = bitcast i32 %1792 to <2 x bfloat>, !dbg !60
  %1794 = extractelement <2 x bfloat> %1793, i64 1, !dbg !60
  %1795 = fpext bfloat %1794 to float, !dbg !69
  %1796 = extractelement <2 x bfloat> %1793, i64 0, !dbg !60
  %1797 = fpext bfloat %1796 to float, !dbg !69
  %1798 = extractvalue { i32, i32, i32, i32 } %1119, 0, !dbg !60
  %1799 = bitcast i32 %1798 to <2 x bfloat>, !dbg !60
  %1800 = extractelement <2 x bfloat> %1799, i64 1, !dbg !60
  %1801 = fpext bfloat %1800 to float, !dbg !69
  %1802 = extractelement <2 x bfloat> %1799, i64 0, !dbg !60
  %1803 = fpext bfloat %1802 to float, !dbg !69
  %1804 = extractvalue { i32, i32, i32, i32 } %1118, 3, !dbg !60
  %1805 = bitcast i32 %1804 to <2 x bfloat>, !dbg !60
  %1806 = extractelement <2 x bfloat> %1805, i64 1, !dbg !60
  %1807 = fpext bfloat %1806 to float, !dbg !69
  %1808 = extractelement <2 x bfloat> %1805, i64 0, !dbg !60
  %1809 = fpext bfloat %1808 to float, !dbg !69
  %1810 = extractvalue { i32, i32, i32, i32 } %1118, 2, !dbg !60
  %1811 = bitcast i32 %1810 to <2 x bfloat>, !dbg !60
  %1812 = extractelement <2 x bfloat> %1811, i64 1, !dbg !60
  %1813 = fpext bfloat %1812 to float, !dbg !69
  %1814 = extractelement <2 x bfloat> %1811, i64 0, !dbg !60
  %1815 = fpext bfloat %1814 to float, !dbg !69
  %1816 = extractvalue { i32, i32, i32, i32 } %1118, 1, !dbg !60
  %1817 = bitcast i32 %1816 to <2 x bfloat>, !dbg !60
  %1818 = extractelement <2 x bfloat> %1817, i64 1, !dbg !60
  %1819 = fpext bfloat %1818 to float, !dbg !69
  %1820 = extractelement <2 x bfloat> %1817, i64 0, !dbg !60
  %1821 = fpext bfloat %1820 to float, !dbg !69
  %1822 = extractvalue { i32, i32, i32, i32 } %1118, 0, !dbg !60
  %1823 = bitcast i32 %1822 to <2 x bfloat>, !dbg !60
  %1824 = extractelement <2 x bfloat> %1823, i64 1, !dbg !60
  %1825 = fpext bfloat %1824 to float, !dbg !69
  %1826 = extractelement <2 x bfloat> %1823, i64 0, !dbg !60
  %1827 = fpext bfloat %1826 to float, !dbg !69
  %1828 = fadd float %s.1.i293, 1.000000e+00, !dbg !70
  %1829 = fadd float %s.1.i312, 1.000000e+00, !dbg !70
  %1830 = fadd float %s.1.i331, 1.000000e+00, !dbg !70
  %1831 = fadd float %s.1.i350, 1.000000e+00, !dbg !70
  %1832 = fadd float %s.1.i369, 1.000000e+00, !dbg !70
  %1833 = fadd float %s.1.i388, 1.000000e+00, !dbg !70
  %1834 = fadd float %s.1.i407, 1.000000e+00, !dbg !70
  %1835 = fadd float %s.1.i426, 1.000000e+00, !dbg !70
  %1836 = fadd float %s.1.i445, 1.000000e+00, !dbg !70
  %1837 = fadd float %s.1.i464, 1.000000e+00, !dbg !70
  %1838 = fadd float %s.1.i483, 1.000000e+00, !dbg !70
  %1839 = fadd float %s.1.i502, 1.000000e+00, !dbg !70
  %1840 = fadd float %s.1.i521, 1.000000e+00, !dbg !70
  %1841 = fadd float %s.1.i540, 1.000000e+00, !dbg !70
  %1842 = fadd float %s.1.i559, 1.000000e+00, !dbg !70
  %1843 = fadd float %s.1.i578, 1.000000e+00, !dbg !70
  %1844 = fmul float %1779, %1828, !dbg !71
  %1845 = fmul float %1778, %1829, !dbg !71
  %1846 = fmul float %1777, %1830, !dbg !71
  %1847 = fmul float %1776, %1831, !dbg !71
  %1848 = fmul float %1775, %1832, !dbg !71
  %1849 = fmul float %1774, %1833, !dbg !71
  %1850 = fmul float %1773, %1834, !dbg !71
  %1851 = fmul float %1772, %1835, !dbg !71
  %1852 = fmul float %1771, %1836, !dbg !71
  %1853 = fmul float %1770, %1837, !dbg !71
  %1854 = fmul float %1769, %1838, !dbg !71
  %1855 = fmul float %1768, %1839, !dbg !71
  %1856 = fmul float %1767, %1840, !dbg !71
  %1857 = fmul float %1766, %1841, !dbg !71
  %1858 = fmul float %1765, %1842, !dbg !71
  %1859 = fmul float %1764, %1843, !dbg !71
  %1860 = select i1 %17, float %1827, float %1844, !dbg !72
  %1861 = select i1 %17, float %1825, float %1845, !dbg !72
  %1862 = select i1 %17, float %1821, float %1846, !dbg !72
  %1863 = select i1 %17, float %1819, float %1847, !dbg !72
  %1864 = select i1 %17, float %1815, float %1848, !dbg !72
  %1865 = select i1 %17, float %1813, float %1849, !dbg !72
  %1866 = select i1 %17, float %1809, float %1850, !dbg !72
  %1867 = select i1 %17, float %1807, float %1851, !dbg !72
  %1868 = select i1 %17, float %1803, float %1852, !dbg !72
  %1869 = select i1 %17, float %1801, float %1853, !dbg !72
  %1870 = select i1 %17, float %1797, float %1854, !dbg !72
  %1871 = select i1 %17, float %1795, float %1855, !dbg !72
  %1872 = select i1 %17, float %1791, float %1856, !dbg !72
  %1873 = select i1 %17, float %1789, float %1857, !dbg !72
  %1874 = select i1 %17, float %1785, float %1858, !dbg !72
  %1875 = select i1 %17, float %1783, float %1859, !dbg !72
  %.inv = fcmp oge float %973, 0.000000e+00, !dbg !73
  %1876 = select i1 %.inv, float 0.000000e+00, float %973, !dbg !73
  %1877 = fsub float 0.000000e+00, %1876, !dbg !75
  %.inv1 = fcmp ole float %1107, 0.000000e+00, !dbg !76
  %1878 = select i1 %.inv1, float 0.000000e+00, float %1107, !dbg !76
  %1879 = fcmp ogt float %1877, %1878, !dbg !78
  %1880 = fcmp uno float %1877, 0.000000e+00, !dbg !80
  %1881 = or i1 %1880, %1879, !dbg !81
  %1882 = select i1 %1881, float %1877, float %1878, !dbg !82
  %1883 = fmul float %1882, 0x3F80204080000000, !dbg !83
  %1884 = fcmp ogt float %1883, 0x3EE4F8B580000000, !dbg !84
  %1885 = fcmp uno float %1883, 0.000000e+00, !dbg !86
  %1886 = or i1 %1884, %1885, !dbg !87
  %1887 = select i1 %1886, float %1883, float 0x3EE4F8B580000000, !dbg !88
  %1888 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %1887), !dbg !89
  %1889 = fmul float %1860, %1888, !dbg !90
  %1890 = fmul float %1861, %1888, !dbg !90
  %1891 = fmul float %1862, %1888, !dbg !90
  %1892 = fmul float %1863, %1888, !dbg !90
  %1893 = fmul float %1864, %1888, !dbg !90
  %1894 = fmul float %1865, %1888, !dbg !90
  %1895 = fmul float %1866, %1888, !dbg !90
  %1896 = fmul float %1867, %1888, !dbg !90
  %1897 = fmul float %1868, %1888, !dbg !90
  %1898 = fmul float %1869, %1888, !dbg !90
  %1899 = fmul float %1870, %1888, !dbg !90
  %1900 = fmul float %1871, %1888, !dbg !90
  %1901 = fmul float %1872, %1888, !dbg !90
  %1902 = fmul float %1873, %1888, !dbg !90
  %1903 = fmul float %1874, %1888, !dbg !90
  %1904 = fmul float %1888, %1875, !dbg !90
  %1905 = tail call float @llvm.nvvm.round.f(float %1889) #5, !dbg !91
  %1906 = tail call float @llvm.nvvm.round.f(float %1890) #5, !dbg !91
  %1907 = tail call float @llvm.nvvm.round.f(float %1891) #5, !dbg !91
  %1908 = tail call float @llvm.nvvm.round.f(float %1892) #5, !dbg !91
  %1909 = tail call float @llvm.nvvm.round.f(float %1893) #5, !dbg !91
  %1910 = tail call float @llvm.nvvm.round.f(float %1894) #5, !dbg !91
  %1911 = tail call float @llvm.nvvm.round.f(float %1895) #5, !dbg !91
  %1912 = tail call float @llvm.nvvm.round.f(float %1896) #5, !dbg !91
  %1913 = tail call float @llvm.nvvm.round.f(float %1897) #5, !dbg !91
  %1914 = tail call float @llvm.nvvm.round.f(float %1898) #5, !dbg !91
  %1915 = tail call float @llvm.nvvm.round.f(float %1899) #5, !dbg !91
  %1916 = tail call float @llvm.nvvm.round.f(float %1900) #5, !dbg !91
  %1917 = tail call float @llvm.nvvm.round.f(float %1901) #5, !dbg !91
  %1918 = tail call float @llvm.nvvm.round.f(float %1902) #5, !dbg !91
  %1919 = tail call float @llvm.nvvm.round.f(float %1903) #5, !dbg !91
  %1920 = tail call float @llvm.nvvm.round.f(float %1904) #5, !dbg !91
  %1921 = insertelement <4 x float> poison, float %1905, i64 0, !dbg !92
  %1922 = insertelement <4 x float> %1921, float %1906, i64 1, !dbg !92
  %1923 = insertelement <4 x float> %1922, float %1907, i64 2, !dbg !92
  %1924 = insertelement <4 x float> %1923, float %1908, i64 3, !dbg !92
  %1925 = fcmp ogt <4 x float> %1924, splat (float -1.270000e+02), !dbg !92
  %1926 = fcmp uno <4 x float> %1924, zeroinitializer, !dbg !94
  %1927 = or <4 x i1> %1925, %1926, !dbg !95
  %1928 = select <4 x i1> %1927, <4 x float> %1924, <4 x float> splat (float -1.270000e+02), !dbg !96
  %1929 = fcmp olt <4 x float> %1928, splat (float 1.270000e+02), !dbg !97
  %1930 = fcmp uno <4 x float> %1928, zeroinitializer, !dbg !99
  %1931 = or <4 x i1> %1929, %1930, !dbg !100
  %1932 = fptosi <4 x float> %1928 to <4 x i8>, !dbg !101
  %1933 = select <4 x i1> %1931, <4 x i8> %1932, <4 x i8> splat (i8 127), !dbg !102
  %1934 = insertelement <4 x float> poison, float %1909, i64 0, !dbg !92
  %1935 = insertelement <4 x float> %1934, float %1910, i64 1, !dbg !92
  %1936 = insertelement <4 x float> %1935, float %1911, i64 2, !dbg !92
  %1937 = insertelement <4 x float> %1936, float %1912, i64 3, !dbg !92
  %1938 = fcmp ogt <4 x float> %1937, splat (float -1.270000e+02), !dbg !92
  %1939 = fcmp uno <4 x float> %1937, zeroinitializer, !dbg !94
  %1940 = or <4 x i1> %1938, %1939, !dbg !95
  %1941 = select <4 x i1> %1940, <4 x float> %1937, <4 x float> splat (float -1.270000e+02), !dbg !96
  %1942 = fcmp olt <4 x float> %1941, splat (float 1.270000e+02), !dbg !97
  %1943 = fcmp uno <4 x float> %1941, zeroinitializer, !dbg !99
  %1944 = or <4 x i1> %1942, %1943, !dbg !100
  %1945 = fptosi <4 x float> %1941 to <4 x i8>, !dbg !101
  %1946 = select <4 x i1> %1944, <4 x i8> %1945, <4 x i8> splat (i8 127), !dbg !102
  %1947 = insertelement <4 x float> poison, float %1913, i64 0, !dbg !92
  %1948 = insertelement <4 x float> %1947, float %1914, i64 1, !dbg !92
  %1949 = insertelement <4 x float> %1948, float %1915, i64 2, !dbg !92
  %1950 = insertelement <4 x float> %1949, float %1916, i64 3, !dbg !92
  %1951 = fcmp ogt <4 x float> %1950, splat (float -1.270000e+02), !dbg !92
  %1952 = fcmp uno <4 x float> %1950, zeroinitializer, !dbg !94
  %1953 = or <4 x i1> %1951, %1952, !dbg !95
  %1954 = select <4 x i1> %1953, <4 x float> %1950, <4 x float> splat (float -1.270000e+02), !dbg !96
  %1955 = fcmp olt <4 x float> %1954, splat (float 1.270000e+02), !dbg !97
  %1956 = fcmp uno <4 x float> %1954, zeroinitializer, !dbg !99
  %1957 = or <4 x i1> %1955, %1956, !dbg !100
  %1958 = fptosi <4 x float> %1954 to <4 x i8>, !dbg !101
  %1959 = select <4 x i1> %1957, <4 x i8> %1958, <4 x i8> splat (i8 127), !dbg !102
  %1960 = insertelement <4 x float> poison, float %1917, i64 0, !dbg !92
  %1961 = insertelement <4 x float> %1960, float %1918, i64 1, !dbg !92
  %1962 = insertelement <4 x float> %1961, float %1919, i64 2, !dbg !92
  %1963 = insertelement <4 x float> %1962, float %1920, i64 3, !dbg !92
  %1964 = fcmp ogt <4 x float> %1963, splat (float -1.270000e+02), !dbg !92
  %1965 = fcmp uno <4 x float> %1963, zeroinitializer, !dbg !94
  %1966 = or <4 x i1> %1964, %1965, !dbg !95
  %1967 = select <4 x i1> %1966, <4 x float> %1963, <4 x float> splat (float -1.270000e+02), !dbg !96
  %1968 = fcmp olt <4 x float> %1967, splat (float 1.270000e+02), !dbg !97
  %1969 = fcmp uno <4 x float> %1967, zeroinitializer, !dbg !99
  %1970 = or <4 x i1> %1968, %1969, !dbg !100
  %1971 = fptosi <4 x float> %1967 to <4 x i8>, !dbg !101
  %1972 = select <4 x i1> %1970, <4 x i8> %1971, <4 x i8> splat (i8 127), !dbg !102
  %1973 = mul i32 %9, 15360, !dbg !103
  %1974 = add i32 %15, %1973, !dbg !104
  %1975 = sext i32 %1974 to i64, !dbg !105
  %1976 = getelementptr i8, ptr addrspace(1) %4, i64 %1975, !dbg !105
  %1977 = bitcast <4 x i8> %1933 to i32, !dbg !106
  %1978 = bitcast <4 x i8> %1946 to i32, !dbg !106
  %1979 = bitcast <4 x i8> %1959 to i32, !dbg !106
  %1980 = bitcast <4 x i8> %1972 to i32, !dbg !106
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1977, i32 %1978, i32 %1979, i32 %1980, ptr addrspace(1) %1976, i1 %26) #5, !dbg !106
  ret void, !dbg !107
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 1024}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 25, column: 21, scope: !6)
!11 = !DILocation(line: 26, column: 37, scope: !6)
!12 = !DILocation(line: 33, column: 29, scope: !6)
!13 = !DILocation(line: 41, column: 22, scope: !6)
!14 = !DILocation(line: 42, column: 39, scope: !6)
!15 = !DILocation(line: 42, column: 45, scope: !6)
!16 = !DILocation(line: 42, column: 34, scope: !6)
!17 = !DILocation(line: 42, column: 63, scope: !6)
!18 = !DILocation(line: 42, column: 71, scope: !6)
!19 = !DILocation(line: 42, column: 53, scope: !6)
!20 = !DILocation(line: 42, column: 121, scope: !6)
!21 = !DILocation(line: 43, column: 23, scope: !6)
!22 = !DILocation(line: 46, column: 40, scope: !6)
!23 = !DILocation(line: 46, column: 56, scope: !6)
!24 = !DILocation(line: 46, column: 46, scope: !6)
!25 = !DILocation(line: 46, column: 34, scope: !6)
!26 = !DILocation(line: 46, column: 82, scope: !6)
!27 = !DILocation(line: 46, column: 64, scope: !6)
!28 = !DILocation(line: 48, column: 23, scope: !6)
!29 = !DILocation(line: 49, column: 23, scope: !6)
!30 = !DILocation(line: 50, column: 24, scope: !6)
!31 = !DILocation(line: 52, column: 24, scope: !6)
!32 = !DILocation(line: 53, column: 23, scope: !6)
!33 = !DILocation(line: 55, column: 24, scope: !6)
!34 = !DILocation(line: 56, column: 31, scope: !6)
!35 = !{i32 21046}
!36 = !DILocation(line: 58, column: 24, scope: !6)
!37 = !DILocation(line: 59, column: 24, scope: !6)
!38 = !DILocation(line: 63, column: 37, scope: !6)
!39 = !DILocation(line: 66, column: 50, scope: !6)
!40 = !DILocation(line: 68, column: 50, scope: !6)
!41 = !DILocation(line: 94, column: 15, scope: !42, inlinedAt: !45)
!42 = distinct !DILexicalBlockFile(scope: !44, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!44 = distinct !DILexicalBlockFile(scope: !6, file: !43, discriminator: 0)
!45 = !DILocation(line: 69, column: 40, scope: !6)
!46 = !DILocation(line: 96, column: 21, scope: !42, inlinedAt: !45)
!47 = !DILocation(line: 96, column: 16, scope: !42, inlinedAt: !45)
!48 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !45)
!49 = !DILocation(line: 110, column: 29, scope: !44, inlinedAt: !45)
!50 = !DILocation(line: 115, column: 29, scope: !44, inlinedAt: !51)
!51 = !DILocation(line: 70, column: 40, scope: !6)
!52 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !51)
!53 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !51)
!54 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !51)
!55 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !51)
!56 = !DILocation(line: 71, column: 25, scope: !6)
!57 = !DILocation(line: 71, column: 37, scope: !6)
!58 = !DILocation(line: 72, column: 25, scope: !6)
!59 = !DILocation(line: 72, column: 37, scope: !6)
!60 = !DILocation(line: 84, column: 54, scope: !6)
!61 = !DILocation(line: 88, column: 65, scope: !6)
!62 = !DILocation(line: 91, column: 24, scope: !6)
!63 = !DILocation(line: 92, column: 24, scope: !6)
!64 = !DILocation(line: 94, column: 24, scope: !6)
!65 = !DILocation(line: 95, column: 24, scope: !6)
!66 = !DILocation(line: 97, column: 24, scope: !6)
!67 = !DILocation(line: 98, column: 31, scope: !6)
!68 = !DILocation(line: 90, column: 24, scope: !6)
!69 = !DILocation(line: 84, column: 123, scope: !6)
!70 = !DILocation(line: 100, column: 24, scope: !6)
!71 = !DILocation(line: 101, column: 24, scope: !6)
!72 = !DILocation(line: 105, column: 39, scope: !6)
!73 = !DILocation(line: 97, column: 29, scope: !44, inlinedAt: !74)
!74 = !DILocation(line: 107, column: 46, scope: !6)
!75 = !DILocation(line: 108, column: 17, scope: !6)
!76 = !DILocation(line: 105, column: 29, scope: !44, inlinedAt: !77)
!77 = !DILocation(line: 109, column: 46, scope: !6)
!78 = !DILocation(line: 102, column: 15, scope: !44, inlinedAt: !79)
!79 = !DILocation(line: 110, column: 46, scope: !6)
!80 = !DILocation(line: 104, column: 21, scope: !44, inlinedAt: !79)
!81 = !DILocation(line: 104, column: 16, scope: !44, inlinedAt: !79)
!82 = !DILocation(line: 105, column: 29, scope: !44, inlinedAt: !79)
!83 = !DILocation(line: 112, column: 24, scope: !6)
!84 = !DILocation(line: 102, column: 15, scope: !44, inlinedAt: !85)
!85 = !DILocation(line: 115, column: 46, scope: !6)
!86 = !DILocation(line: 104, column: 21, scope: !44, inlinedAt: !85)
!87 = !DILocation(line: 104, column: 16, scope: !44, inlinedAt: !85)
!88 = !DILocation(line: 105, column: 29, scope: !44, inlinedAt: !85)
!89 = !DILocation(line: 118, column: 25, scope: !6)
!90 = !DILocation(line: 121, column: 24, scope: !6)
!91 = !DILocation(line: 122, column: 36, scope: !6)
!92 = !DILocation(line: 102, column: 15, scope: !44, inlinedAt: !93)
!93 = !DILocation(line: 125, column: 46, scope: !6)
!94 = !DILocation(line: 104, column: 21, scope: !44, inlinedAt: !93)
!95 = !DILocation(line: 104, column: 16, scope: !44, inlinedAt: !93)
!96 = !DILocation(line: 105, column: 29, scope: !44, inlinedAt: !93)
!97 = !DILocation(line: 94, column: 15, scope: !44, inlinedAt: !98)
!98 = !DILocation(line: 127, column: 46, scope: !6)
!99 = !DILocation(line: 96, column: 21, scope: !44, inlinedAt: !98)
!100 = !DILocation(line: 96, column: 16, scope: !44, inlinedAt: !98)
!101 = !DILocation(line: 129, column: 25, scope: !6)
!102 = !DILocation(line: 97, column: 29, scope: !44, inlinedAt: !98)
!103 = !DILocation(line: 130, column: 42, scope: !6)
!104 = !DILocation(line: 130, column: 36, scope: !6)
!105 = !DILocation(line: 130, column: 29, scope: !6)
!106 = !DILocation(line: 130, column: 54, scope: !6)
!107 = !DILocation(line: 73, column: 4, scope: !6)
