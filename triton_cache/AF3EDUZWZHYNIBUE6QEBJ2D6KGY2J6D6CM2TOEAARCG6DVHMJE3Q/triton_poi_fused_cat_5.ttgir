#blocked = #ttg.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_5(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.280000e+02> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<512xbf16, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4112> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<526336> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<9216> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<24> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-512> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_4 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_6 : tensor<512xi64, #blocked> loc(#loc10)
    %11 = arith.muli %8, %cst_3 : tensor<512xi32, #blocked> loc(#loc11)
    %12 = arith.addi %7, %11 : tensor<512xi32, #blocked> loc(#loc12)
    %13 = arith.muli %6, %cst_7 : tensor<512xi32, #blocked> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<512xi32, #blocked> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %10, %cst_2 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc16)
    %18 = arith.extf %17 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc17)
    %19 = arith.muli %6, %cst_8 : tensor<512xi32, #blocked> loc(#loc18)
    %20 = arith.addi %8, %19 : tensor<512xi32, #blocked> loc(#loc19)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = tt.addptr %21, %20 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc20)
    %23 = tt.load %22, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %24 = arith.divf %23, %cst_0 : tensor<512xf32, #blocked> loc(#loc22)
    %25 = arith.addf %24, %cst_1 : tensor<512xf32, #blocked> loc(#loc23)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc24)
    %27 = arith.mulf %18, %26 : tensor<512xf32, #blocked> loc(#loc25)
    %28 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc26)
    %29 = tt.addptr %28, %7 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc26)
    %30 = tt.load %29, %10, %cst_2 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc27)
    %31 = arith.extf %30 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc28)
    %32 = arith.mulf %27, %31 : tensor<512xf32, #blocked> loc(#loc29)
    %33 = arith.cmpi sge, %9, %cst_6 : tensor<512xi64, #blocked> loc(#loc30)
    %34 = arith.addi %6, %cst_9 : tensor<512xi32, #blocked> loc(#loc31)
    %35 = arith.muli %34, %cst_7 : tensor<512xi32, #blocked> loc(#loc32)
    %36 = arith.addi %12, %35 : tensor<512xi32, #blocked> loc(#loc33)
    %37 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc34)
    %38 = tt.addptr %37, %36 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc34)
    %39 = tt.load %38, %33, %cst_2 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc35)
    %40 = arith.extf %39 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc36)
    %41 = arith.muli %34, %cst_8 : tensor<512xi32, #blocked> loc(#loc37)
    %42 = arith.addi %8, %41 : tensor<512xi32, #blocked> loc(#loc38)
    %43 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %44 = tt.addptr %43, %42 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc39)
    %45 = tt.load %44, %33, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %46 = arith.divf %45, %cst_0 : tensor<512xf32, #blocked> loc(#loc41)
    %47 = arith.addf %46, %cst_1 : tensor<512xf32, #blocked> loc(#loc42)
    %48 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc43)
    %49 = arith.mulf %40, %48 : tensor<512xf32, #blocked> loc(#loc44)
    %50 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc45)
    %51 = tt.addptr %50, %7 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc45)
    %52 = tt.load %51, %33, %cst_2 evictionPolicy = evict_last : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc46)
    %53 = arith.extf %52 : tensor<512xbf16, #blocked> to tensor<512xf32, #blocked> loc(#loc47)
    %54 = arith.mulf %49, %53 : tensor<512xf32, #blocked> loc(#loc48)
    %55 = arith.select %33, %54, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc49)
    %56 = arith.select %10, %32, %55 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc55)
    %57 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc52)
    %58 = tt.addptr %57, %4 : tensor<512x!tt.ptr<bf16>, #blocked>, tensor<512xi32, #blocked> loc(#loc52)
    %59 = arith.truncf %56 : tensor<512xf32, #blocked> to tensor<512xbf16, #blocked> loc(#loc53)
    tt.store %58, %59 : tensor<512x!tt.ptr<bf16>, #blocked> loc(#loc53)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":20:28)
#loc3 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":20:33)
#loc4 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":21:36)
#loc5 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":21:23)
#loc6 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":23:21)
#loc7 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":23:28)
#loc8 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":24:19)
#loc9 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":25:19)
#loc10 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":31:18)
#loc11 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:39)
#loc12 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:35)
#loc13 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:50)
#loc14 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:44)
#loc15 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:30)
#loc16 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:56)
#loc17 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":32:76)
#loc18 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":34:39)
#loc19 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":34:35)
#loc20 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":34:30)
#loc21 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":34:45)
#loc22 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":36:19)
#loc23 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":38:19)
#loc24 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":39:28)
#loc25 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":40:19)
#loc26 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":42:31)
#loc27 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":42:36)
#loc28 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":42:86)
#loc29 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":43:20)
#loc30 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":46:20)
#loc31 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:60)
#loc32 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:51)
#loc33 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:45)
#loc34 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:31)
#loc35 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:66)
#loc36 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":49:87)
#loc37 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":51:40)
#loc38 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":51:36)
#loc39 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":51:31)
#loc40 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":51:55)
#loc41 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":53:21)
#loc42 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":55:20)
#loc43 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":56:28)
#loc44 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":57:20)
#loc45 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":59:31)
#loc46 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":59:36)
#loc47 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":59:87)
#loc48 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":60:20)
#loc49 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":62:35)
#loc50 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":63:34)
#loc51 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":45:34)
#loc52 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":64:25)
#loc53 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":64:37)
#loc54 = loc("/tmp/torchinductor_root/fr/cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py":64:4)
#loc55 = loc(fused[#loc50, #loc51])
