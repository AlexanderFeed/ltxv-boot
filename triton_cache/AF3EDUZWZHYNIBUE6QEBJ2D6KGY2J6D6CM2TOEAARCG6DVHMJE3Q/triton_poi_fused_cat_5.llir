; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr !dbg !6 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %11 = shl i32 %10, 9, !dbg !10
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %13 = shl i32 %12, 1, !dbg !11
  %14 = and i32 %13, 510, !dbg !11
  %15 = or disjoint i32 %14, %11, !dbg !12
  %16 = sdiv i32 %15, 128, !dbg !13
  %17 = srem i32 %16, 4112, !dbg !14
  %18 = mul i32 %16, 128, !dbg !15
  %.decomposed = sub i32 %15, %18, !dbg !15
  %19 = sdiv i32 %15, 526336, !dbg !16
  %20 = icmp slt i32 %17, 512, !dbg !17
  %21 = shl nsw i32 %19, 7, !dbg !18
  %22 = add nsw i32 %21, %.decomposed, !dbg !19
  %23 = mul nsw i32 %17, 9216, !dbg !20
  %24 = add nsw i32 %22, %23, !dbg !21
  %25 = sext i32 %24 to i64, !dbg !22
  %26 = getelementptr bfloat, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %26, i1 %20) #3, !dbg !23
  %28 = mul nsw i32 %17, 24, !dbg !24
  %29 = add nsw i32 %28, %19, !dbg !25
  %30 = sext i32 %29 to i64, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !26
  %32 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %31, i1 %20) #3, !dbg !27
  %33 = bitcast i32 %32 to float, !dbg !27
  %34 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %31, i1 %20) #3, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = tail call float @llvm.nvvm.div.full(float %33, float 1.280000e+02), !dbg !28
  %37 = tail call float @llvm.nvvm.div.full(float %35, float 1.280000e+02), !dbg !28
  %38 = fadd float %36, 0x3EB0C6F7A0000000, !dbg !29
  %39 = fadd float %37, 0x3EB0C6F7A0000000, !dbg !29
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %40, 0, !dbg !30
  br i1 %.not.i, label %43, label %41, !dbg !30

41:                                               ; preds = %9
  %42 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %38), !dbg !30
  br label %__nv_rsqrtf.exit, !dbg !30

43:                                               ; preds = %9
  %44 = tail call float @llvm.nvvm.rsqrt.approx.f(float %38), !dbg !30
  br label %__nv_rsqrtf.exit, !dbg !30

__nv_rsqrtf.exit:                                 ; preds = %41, %43
  %.0.i = phi float [ %42, %41 ], [ %44, %43 ], !dbg !30
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i1 = icmp eq i32 %45, 0, !dbg !30
  br i1 %.not.i1, label %48, label %46, !dbg !30

46:                                               ; preds = %__nv_rsqrtf.exit
  %47 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %39), !dbg !30
  br label %__nv_rsqrtf.exit3, !dbg !30

48:                                               ; preds = %__nv_rsqrtf.exit
  %49 = tail call float @llvm.nvvm.rsqrt.approx.f(float %39), !dbg !30
  br label %__nv_rsqrtf.exit3, !dbg !30

__nv_rsqrtf.exit3:                                ; preds = %46, %48
  %.0.i2 = phi float [ %47, %46 ], [ %49, %48 ], !dbg !30
  %50 = sext i32 %.decomposed to i64, !dbg !31
  %51 = getelementptr bfloat, ptr addrspace(1) %2, i64 %50, !dbg !31
  %52 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %51, i1 %20) #3, !dbg !32
  %53 = icmp sgt i32 %17, 511, !dbg !33
  %54 = add nsw i32 %17, -512, !dbg !34
  %55 = mul nsw i32 %54, 9216, !dbg !35
  %56 = add nsw i32 %55, %22, !dbg !36
  %57 = sext i32 %56 to i64, !dbg !37
  %58 = getelementptr bfloat, ptr addrspace(1) %3, i64 %57, !dbg !37
  %59 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %58, i1 %53) #3, !dbg !38
  %60 = mul nsw i32 %54, 24, !dbg !39
  %61 = add nsw i32 %60, %19, !dbg !40
  %62 = sext i32 %61 to i64, !dbg !41
  %63 = getelementptr float, ptr addrspace(1) %4, i64 %62, !dbg !41
  %64 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %63, i1 %53) #3, !dbg !42
  %65 = bitcast i32 %64 to float, !dbg !42
  %66 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %63, i1 %53) #3, !dbg !42
  %67 = bitcast i32 %66 to float, !dbg !42
  %68 = tail call float @llvm.nvvm.div.full(float %65, float 1.280000e+02), !dbg !43
  %69 = tail call float @llvm.nvvm.div.full(float %67, float 1.280000e+02), !dbg !43
  %70 = fadd float %68, 0x3EB0C6F7A0000000, !dbg !44
  %71 = fadd float %69, 0x3EB0C6F7A0000000, !dbg !44
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not.i4 = icmp eq i32 %72, 0, !dbg !45
  br i1 %.not.i4, label %75, label %73, !dbg !45

73:                                               ; preds = %__nv_rsqrtf.exit3
  %74 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %70), !dbg !45
  br label %__nv_rsqrtf.exit6, !dbg !45

75:                                               ; preds = %__nv_rsqrtf.exit3
  %76 = tail call float @llvm.nvvm.rsqrt.approx.f(float %70), !dbg !45
  br label %__nv_rsqrtf.exit6, !dbg !45

__nv_rsqrtf.exit6:                                ; preds = %73, %75
  %.0.i5 = phi float [ %74, %73 ], [ %76, %75 ], !dbg !45
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not.i7 = icmp eq i32 %77, 0, !dbg !45
  br i1 %.not.i7, label %80, label %78, !dbg !45

78:                                               ; preds = %__nv_rsqrtf.exit6
  %79 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %71), !dbg !45
  br label %__nv_rsqrtf.exit9, !dbg !45

80:                                               ; preds = %__nv_rsqrtf.exit6
  %81 = tail call float @llvm.nvvm.rsqrt.approx.f(float %71), !dbg !45
  br label %__nv_rsqrtf.exit9, !dbg !45

__nv_rsqrtf.exit9:                                ; preds = %78, %80
  %.0.i8 = phi float [ %79, %78 ], [ %81, %80 ], !dbg !45
  %82 = bitcast i32 %59 to <2 x bfloat>, !dbg !38
  %83 = bitcast i32 %27 to <2 x bfloat>, !dbg !23
  %84 = bitcast i32 %52 to <2 x bfloat>, !dbg !32
  %85 = getelementptr bfloat, ptr addrspace(1) %5, i64 %50, !dbg !46
  %86 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %85, i1 %53) #3, !dbg !47
  %87 = bitcast i32 %86 to <2 x bfloat>, !dbg !47
  %88 = sext i32 %15 to i64, !dbg !48
  %89 = getelementptr bfloat, ptr addrspace(1) %6, i64 %88, !dbg !48
  %90 = fpext <2 x bfloat> %82 to <2 x float>, !dbg !49
  %91 = fpext <2 x bfloat> %83 to <2 x float>, !dbg !50
  %92 = insertelement <2 x float> poison, float %.0.i, i64 0, !dbg !51
  %93 = insertelement <2 x float> %92, float %.0.i2, i64 1, !dbg !51
  %94 = fmul <2 x float> %93, %91, !dbg !51
  %95 = fpext <2 x bfloat> %84 to <2 x float>, !dbg !52
  %96 = fmul <2 x float> %94, %95, !dbg !53
  %97 = insertelement <2 x float> poison, float %.0.i5, i64 0, !dbg !54
  %98 = insertelement <2 x float> %97, float %.0.i8, i64 1, !dbg !54
  %99 = fmul <2 x float> %98, %90, !dbg !54
  %100 = fpext <2 x bfloat> %87 to <2 x float>, !dbg !55
  %101 = fmul <2 x float> %99, %100, !dbg !56
  %102 = insertelement <2 x i1> poison, i1 %20, i64 0, !dbg !57
  %103 = shufflevector <2 x i1> %102, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !57
  %104 = select <2 x i1> %103, <2 x float> %96, <2 x float> %101, !dbg !57
  %105 = fptrunc <2 x float> %104 to <2 x bfloat>, !dbg !58
  %106 = bitcast <2 x bfloat> %105 to i32, !dbg !58
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %106, ptr addrspace(1) %89) #3, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfrhpq3l2u74kw33rn5scwa56uqur4qnbfws3qn2tkwloyb2siea.py", directory: "/tmp/torchinductor_root/fr")
!4 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 28, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 25, column: 19, scope: !6)
!17 = !DILocation(line: 31, column: 18, scope: !6)
!18 = !DILocation(line: 32, column: 39, scope: !6)
!19 = !DILocation(line: 32, column: 35, scope: !6)
!20 = !DILocation(line: 32, column: 50, scope: !6)
!21 = !DILocation(line: 32, column: 44, scope: !6)
!22 = !DILocation(line: 32, column: 30, scope: !6)
!23 = !DILocation(line: 32, column: 56, scope: !6)
!24 = !DILocation(line: 34, column: 39, scope: !6)
!25 = !DILocation(line: 34, column: 35, scope: !6)
!26 = !DILocation(line: 34, column: 30, scope: !6)
!27 = !DILocation(line: 34, column: 45, scope: !6)
!28 = !DILocation(line: 36, column: 19, scope: !6)
!29 = !DILocation(line: 38, column: 19, scope: !6)
!30 = !DILocation(line: 39, column: 28, scope: !6)
!31 = !DILocation(line: 42, column: 31, scope: !6)
!32 = !DILocation(line: 42, column: 36, scope: !6)
!33 = !DILocation(line: 46, column: 20, scope: !6)
!34 = !DILocation(line: 49, column: 60, scope: !6)
!35 = !DILocation(line: 49, column: 51, scope: !6)
!36 = !DILocation(line: 49, column: 45, scope: !6)
!37 = !DILocation(line: 49, column: 31, scope: !6)
!38 = !DILocation(line: 49, column: 66, scope: !6)
!39 = !DILocation(line: 51, column: 40, scope: !6)
!40 = !DILocation(line: 51, column: 36, scope: !6)
!41 = !DILocation(line: 51, column: 31, scope: !6)
!42 = !DILocation(line: 51, column: 55, scope: !6)
!43 = !DILocation(line: 53, column: 21, scope: !6)
!44 = !DILocation(line: 55, column: 20, scope: !6)
!45 = !DILocation(line: 56, column: 28, scope: !6)
!46 = !DILocation(line: 59, column: 31, scope: !6)
!47 = !DILocation(line: 59, column: 36, scope: !6)
!48 = !DILocation(line: 64, column: 25, scope: !6)
!49 = !DILocation(line: 49, column: 87, scope: !6)
!50 = !DILocation(line: 32, column: 76, scope: !6)
!51 = !DILocation(line: 40, column: 19, scope: !6)
!52 = !DILocation(line: 42, column: 86, scope: !6)
!53 = !DILocation(line: 43, column: 20, scope: !6)
!54 = !DILocation(line: 57, column: 20, scope: !6)
!55 = !DILocation(line: 59, column: 87, scope: !6)
!56 = !DILocation(line: 60, column: 20, scope: !6)
!57 = !DILocation(line: 0, scope: !6)
!58 = !DILocation(line: 64, column: 37, scope: !6)
!59 = !DILocation(line: 64, column: 4, scope: !6)
