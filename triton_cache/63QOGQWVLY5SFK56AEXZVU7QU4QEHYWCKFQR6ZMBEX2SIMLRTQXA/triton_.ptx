//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_
.visible .entry triton_(
	.param .u64 .ptr .global .align 1 triton__param_0,
	.param .u64 .ptr .global .align 1 triton__param_1,
	.param .u32 triton__param_2,
	.param .u64 .ptr .global .align 1 triton__param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<10>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<8>;
	.loc	1 22 0                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:22:0
$L__func_begin0:
	.loc	1 22 0                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:22:0

// %bb.0:
	ld.param.u64 	%rd4, [triton__param_0];
	ld.param.u64 	%rd5, [triton__param_1];
$L__tmp0:
	.loc	1 24 28                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:24:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 24 33                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:24:33
	shl.b32 	%r2, %r1, 9;
	.loc	1 25 36                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:25:36
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 511;
	.loc	1 25 23                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:25:23
	or.b32  	%r5, %r2, %r4;
	.loc	1 28 34                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:34
	mul.wide.s32 	%rd6, %r5, 2;
	add.s64 	%rd7, %rd4, %rd6;
	.loc	1 28 39                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:39
	// begin inline asm
	mov.u16 %rs2, 0x0;
	ld.global.b16 { %rs2 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 28 48                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:48
	cvt.f32.bf16 	%f1, %rs2;
	.loc	1 29 31                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:31
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 29 36                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:36
	// begin inline asm
	mov.u16 %rs3, 0x0;
	ld.global.b16 { %rs3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:32:18
	mul.f32 	%f7, %f1, %f1;
	.loc	1 33 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:33:18
	mul.f32 	%f8, %f7, %f1;
	.loc	1 36 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:36:18
	fma.rn.f32 	%f9, %f8, 0f3D372713, %f1;
	.loc	1 38 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:38:18
	mul.f32 	%f2, %f9, 0f3F4C422A;
	.loc	1 39 27                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:39:27
	abs.ftz.f32 	%f3, %f2;
	setp.ltu.f32 	%p1, %f3, 0f3F19999A;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f18, %f2, %f2;
	mov.f32 	%f19, 0fBD563CAE;
	mov.f32 	%f20, 0f3C80F082;
	fma.rn.ftz.f32 	%f21, %f20, %f18, %f19;
	mov.f32 	%f22, 0f3E085941;
	fma.rn.ftz.f32 	%f23, %f21, %f18, %f22;
	mov.f32 	%f24, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f25, %f23, %f18, %f24;
	mov.f32 	%f26, 0f00000000;
	fma.rn.ftz.f32 	%f27, %f25, %f18, %f26;
	fma.rn.ftz.f32 	%f33, %f27, %f2, %f2;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f12, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f13, %f12;
	add.f32 	%f11, %f13, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// end inline asm
	mov.f32 	%f14, 0f3F800000;
	mov.f32 	%f15, 0fC0000000;
	fma.rn.ftz.f32 	%f16, %f10, %f15, %f14;
	setp.ge.f32 	%p2, %f3, 0f41102CB4;
	selp.f32 	%f17, 0f3F800000, %f16, %p2;
	mov.b32 	%r6, %f17;
	mov.b32 	%r7, %f2;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f33, %r9;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 31 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:31:18
	mul.f32 	%f28, %f1, 0f3F000000;
	.loc	1 29 45                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:45
	cvt.f32.bf16 	%f29, %rs3;
	.loc	1 41 20                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:41:20
	add.f32 	%f30, %f33, 0f3F800000;
	.loc	1 42 19                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:42:19
	mul.f32 	%f31, %f28, %f30;
	.loc	1 43 20                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:43:20
	mul.f32 	%f32, %f31, %f29;
	.loc	1 44 40                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:44:40
	cvt.rn.bf16.f32 	%rs4, %f32;
	// begin inline asm
	st.global.b16 [ %rd7 + 0 ], { %rs4 };
	// end inline asm
	.loc	1 44 4                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/2u/c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 117
.b8 104
.b8 100
.b8 97
.b8 52
.b8 53
.b8 102
.b8 99
.b8 121
.b8 98
.b8 122
.b8 107
.b8 111
.b8 122
.b8 119
.b8 107
.b8 53
.b8 98
.b8 55
.b8 50
.b8 102
.b8 114
.b8 120
.b8 98
.b8 105
.b8 117
.b8 105
.b8 114
.b8 51
.b8 50
.b8 104
.b8 101
.b8 115
.b8 112
.b8 98
.b8 53
.b8 105
.b8 53
.b8 122
.b8 121
.b8 54
.b8 106
.b8 55
.b8 113
.b8 107
.b8 119
.b8 120
.b8 121
.b8 118
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 50
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
