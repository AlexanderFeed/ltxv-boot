; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr !dbg !6 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %6 = shl i32 %5, 9, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = and i32 %7, 511, !dbg !11
  %9 = or disjoint i32 %6, %8, !dbg !12
  %10 = sext i32 %9 to i64, !dbg !13
  %11 = getelementptr bfloat, ptr addrspace(1) %0, i64 %10, !dbg !13
  %12 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %11) #3, !dbg !14
  %13 = bitcast i16 %12 to bfloat, !dbg !14
  %14 = fpext bfloat %13 to float, !dbg !15
  %15 = getelementptr bfloat, ptr addrspace(1) %1, i64 %10, !dbg !16
  %16 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %15) #3, !dbg !17
  %17 = fmul float %14, %14, !dbg !18
  %18 = fmul float %17, %14, !dbg !19
  %19 = fmul float %18, 0x3FA6E4E260000000, !dbg !20
  %20 = fadd float %19, %14, !dbg !21
  %21 = fmul float %20, 0x3FE9884540000000, !dbg !22
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not.i = icmp eq i32 %22, 0, !dbg !23
  %23 = tail call float @llvm.nvvm.fabs.ftz.f(float %21) #3, !dbg !23
  %24 = tail call float @llvm.nvvm.fabs.f(float %21) #3, !dbg !23
  %.01.i = select i1 %.not.i, float %24, float %23, !dbg !23
  %25 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !23
  br i1 %25, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !23

__internal_fmad.exit1.i:                          ; preds = %4
  %26 = fmul float %.01.i, 0x4007154760000000, !dbg !23
  %27 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %26) #3, !dbg !23
  %28 = fadd float %27, 1.000000e+00, !dbg !23
  %29 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %28) #4, !dbg !23, !srcloc !24
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not6.i = icmp eq i32 %30, 0, !dbg !23
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %29, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %.03.i = select i1 %.not6.i, float %32, float %31, !dbg !23
  %33 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !23
  %s.0.i = select i1 %33, float 1.000000e+00, float %.03.i, !dbg !23
  %34 = bitcast float %s.0.i to i32, !dbg !23
  %35 = bitcast float %21 to i32, !dbg !23
  %36 = and i32 %35, -2147483648, !dbg !23
  %37 = or i32 %36, %34, !dbg !23
  %38 = bitcast i32 %37 to float, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__internal_fmad.exit3.i:                          ; preds = %4
  %39 = fmul float %21, %21, !dbg !23
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not1.i = icmp eq i32 %40, 0, !dbg !23
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %39, float 0xBFAAC795C0000000) #3, !dbg !23
  %42 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %39, float 0xBFAAC795C0000000) #3, !dbg !23
  %.06.i = select i1 %.not1.i, float %42, float %41, !dbg !23
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not2.i = icmp eq i32 %43, 0, !dbg !23
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %39, float 0x3FC10B2820000000) #3, !dbg !23
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %39, float 0x3FC10B2820000000) #3, !dbg !23
  %.05.i = select i1 %.not2.i, float %45, float %44, !dbg !23
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not3.i = icmp eq i32 %46, 0, !dbg !23
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %39, float 0xBFD5553DA0000000) #3, !dbg !23
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %39, float 0xBFD5553DA0000000) #3, !dbg !23
  %.0.i = select i1 %.not3.i, float %48, float %47, !dbg !23
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not4.i = icmp eq i32 %49, 0, !dbg !23
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %39, float 0.000000e+00) #3, !dbg !23
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %39, float 0.000000e+00) #3, !dbg !23
  %.04.i = select i1 %.not4.i, float %51, float %50, !dbg !23
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not5.i = icmp eq i32 %52, 0, !dbg !23
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %21, float %21) #3, !dbg !23
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %21, float %21) #3, !dbg !23
  %.02.i = select i1 %.not5.i, float %54, float %53, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %38, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !23
  %55 = fmul float %14, 5.000000e-01, !dbg !25
  %56 = bitcast i16 %16 to bfloat, !dbg !17
  %57 = fpext bfloat %56 to float, !dbg !26
  %58 = fadd float %s.1.i, 1.000000e+00, !dbg !27
  %59 = fmul float %55, %58, !dbg !28
  %60 = fmul float %59, %57, !dbg !29
  %61 = fptrunc float %60 to bfloat, !dbg !30
  %62 = bitcast bfloat %61 to i16, !dbg !30
  tail call void asm sideeffect "st.global.b16 [ $1 + 0 ], { $0 };", "c,l"(i16 %62, ptr addrspace(1) %11) #3, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py", directory: "/tmp/torchinductor_root/2u")
!4 = !{ptr @triton_, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 22, type: !7, scopeLine: 22, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 28, scope: !6)
!10 = !DILocation(line: 24, column: 33, scope: !6)
!11 = !DILocation(line: 25, column: 36, scope: !6)
!12 = !DILocation(line: 25, column: 23, scope: !6)
!13 = !DILocation(line: 28, column: 34, scope: !6)
!14 = !DILocation(line: 28, column: 39, scope: !6)
!15 = !DILocation(line: 28, column: 48, scope: !6)
!16 = !DILocation(line: 29, column: 31, scope: !6)
!17 = !DILocation(line: 29, column: 36, scope: !6)
!18 = !DILocation(line: 32, column: 18, scope: !6)
!19 = !DILocation(line: 33, column: 18, scope: !6)
!20 = !DILocation(line: 35, column: 18, scope: !6)
!21 = !DILocation(line: 36, column: 18, scope: !6)
!22 = !DILocation(line: 38, column: 18, scope: !6)
!23 = !DILocation(line: 39, column: 27, scope: !6)
!24 = !{i32 21046}
!25 = !DILocation(line: 31, column: 18, scope: !6)
!26 = !DILocation(line: 29, column: 45, scope: !6)
!27 = !DILocation(line: 41, column: 20, scope: !6)
!28 = !DILocation(line: 42, column: 19, scope: !6)
!29 = !DILocation(line: 43, column: 20, scope: !6)
!30 = !DILocation(line: 44, column: 40, scope: !6)
!31 = !DILocation(line: 44, column: 4, scope: !6)
