#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 16], threadsPerWarp = [1, 32], warpsPerCTA = [4, 2], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [2, 4], order = [1, 0]}>
#blocked3 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [4, 8], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0)
#loc1 = loc(unknown)
#loc33 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":47:79)
#loc94 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":87:40)
#loc98 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":88:40)
#loc154 = loc(callsite(#loc1 at #loc33))
#loc176 = loc(callsite(#loc1 at #loc94))
#loc182 = loc(callsite(#loc1 at #loc98))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_native_layer_norm_reciprocal_1(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg9: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg10: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg11: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg12: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg13: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg14: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg15: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0x7F800000> : tensor<4x1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<4x1024xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<3.072000e+03> : tensor<4x1xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999997E-7> : tensor<4x1xf32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<4x1xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.00787401571> : tensor<4x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<4x1xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<4x1024xf32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<9.99999974E-6> : tensor<4x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-1.270000e+02> : tensor<4x1024xf32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<1.270000e+02> : tensor<4x1024xf32, #blocked1> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_11 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<1x1024xbf16, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<0.000000e+00> : tensor<4x1024xbf16, #blocked1> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_15 = arith.constant dense<4112> : tensor<4x1xi32, #blocked1> loc(#loc1)
    %cst_16 = arith.constant dense<4112> : tensor<4x1xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<4112> : tensor<4x1xi32, #blocked2> loc(#loc1)
    %cst_18 = arith.constant dense<4112> : tensor<4x1xi32, #blocked3> loc(#loc1)
    %cst_19 = arith.constant dense<3072> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_20 = arith.constant dense<3072> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<3072> : tensor<1x1024xi32, #blocked2> loc(#loc1)
    %cst_22 = arith.constant dense<3072> : tensor<4x1xi32, #blocked1> loc(#loc1)
    %cst_23 = arith.constant dense<3072> : tensor<4x1xi32, #blocked2> loc(#loc1)
    %cst_24 = arith.constant dense<1.000000e+00> : tensor<4x1024xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc4)
    %5 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked3}>> loc(#loc4)
    %6 = tt.expand_dims %2 {axis = 1 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<4x1xi32, #blocked1> loc(#loc4)
    %7 = tt.expand_dims %3 {axis = 1 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<4x1xi32, #blocked> loc(#loc4)
    %8 = tt.expand_dims %4 {axis = 1 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<4x1xi32, #blocked2> loc(#loc4)
    %9 = tt.expand_dims %5 {axis = 1 : i32} : tensor<4xi32, #ttg.slice<{dim = 1, parent = #blocked3}>> -> tensor<4x1xi32, #blocked3> loc(#loc4)
    %10 = tt.splat %1 : i32 -> tensor<4x1xi32, #blocked1> loc(#loc5)
    %11 = tt.splat %1 : i32 -> tensor<4x1xi32, #blocked> loc(#loc5)
    %12 = tt.splat %1 : i32 -> tensor<4x1xi32, #blocked2> loc(#loc5)
    %13 = tt.splat %1 : i32 -> tensor<4x1xi32, #blocked3> loc(#loc5)
    %14 = arith.addi %10, %6 : tensor<4x1xi32, #blocked1> loc(#loc5)
    %15 = arith.addi %11, %7 : tensor<4x1xi32, #blocked> loc(#loc5)
    %16 = arith.addi %12, %8 : tensor<4x1xi32, #blocked2> loc(#loc5)
    %17 = arith.addi %13, %9 : tensor<4x1xi32, #blocked3> loc(#loc5)
    %18 = arith.cmpi slt, %14, %cst_15 : tensor<4x1xi32, #blocked1> loc(#loc6)
    %19 = arith.cmpi slt, %15, %cst_16 : tensor<4x1xi32, #blocked> loc(#loc6)
    %20 = arith.cmpi slt, %16, %cst_17 : tensor<4x1xi32, #blocked2> loc(#loc6)
    %21 = arith.cmpi slt, %17, %cst_18 : tensor<4x1xi32, #blocked3> loc(#loc6)
    %22 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %23 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %24 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc7)
    %25 = tt.expand_dims %22 {axis = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1024xi32, #blocked1> loc(#loc7)
    %26 = tt.expand_dims %23 {axis = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x1024xi32, #blocked> loc(#loc7)
    %27 = tt.expand_dims %24 {axis = 0 : i32} : tensor<1024xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x1024xi32, #blocked2> loc(#loc7)
    %28 = arith.muli %14, %cst_22 : tensor<4x1xi32, #blocked1> loc(#loc8)
    %29 = tt.broadcast %28 : tensor<4x1xi32, #blocked1> -> tensor<4x1024xi32, #blocked1> loc(#loc9)
    %30 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<4x1024x!tt.ptr<bf16>, #blocked1> loc(#loc10)
    %31 = tt.broadcast %18 : tensor<4x1xi1, #blocked1> -> tensor<4x1024xi1, #blocked1> loc(#loc11)
    %32:3 = scf.for %arg18 = %c0_i32 to %c3072_i32 step %c1024_i32 iter_args(%arg19 = %cst_7, %arg20 = %cst_7, %arg21 = %cst_7) -> (tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>)  : i32 {
      %101 = tt.splat %arg18 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc13)
      %102 = arith.addi %101, %25 : tensor<1x1024xi32, #blocked1> loc(#loc13)
      %103 = arith.cmpi slt, %102, %cst_19 : tensor<1x1024xi32, #blocked1> loc(#loc14)
      %104 = tt.broadcast %102 : tensor<1x1024xi32, #blocked1> -> tensor<4x1024xi32, #blocked1> loc(#loc9)
      %105 = arith.addi %104, %29 : tensor<4x1024xi32, #blocked1> loc(#loc9)
      %106 = tt.addptr %30, %105 : tensor<4x1024x!tt.ptr<bf16>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc10)
      %107 = tt.broadcast %103 : tensor<1x1024xi1, #blocked1> -> tensor<4x1024xi1, #blocked1> loc(#loc11)
      %108 = arith.andi %107, %31 : tensor<4x1024xi1, #blocked1> loc(#loc11)
      %109 = tt.load %106, %108, %cst_14 evictionPolicy = evict_last : tensor<4x1024x!tt.ptr<bf16>, #blocked1> loc(#loc15)
      %110 = arith.extf %109 : tensor<4x1024xbf16, #blocked1> to tensor<4x1024xf32, #blocked1> loc(#loc16)
      %111 = arith.cmpi eq, %arg18, %c0_i32 : i32 loc(#loc17)
      %112:3 = scf.if %111 -> (tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>) {
        scf.yield %cst_7, %110, %cst_24 : tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc145)
      } else {
        %116 = arith.subf %110, %arg19 : tensor<4x1024xf32, #blocked1> loc(#loc146)
        %117 = arith.addf %arg21, %cst_24 : tensor<4x1024xf32, #blocked1> loc(#loc147)
        %118 = arith.divf %116, %117 : tensor<4x1024xf32, #blocked1> loc(#loc148)
        %119 = arith.addf %arg19, %118 : tensor<4x1024xf32, #blocked1> loc(#loc149)
        %120 = arith.subf %110, %119 : tensor<4x1024xf32, #blocked1> loc(#loc150)
        %121 = arith.mulf %116, %120 : tensor<4x1024xf32, #blocked1> loc(#loc151)
        %122 = arith.addf %arg20, %121 : tensor<4x1024xf32, #blocked1> loc(#loc152)
        scf.yield %122, %119, %117 : tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc152)
      } loc(#loc144)
      %113 = arith.select %108, %112#1, %arg19 : tensor<4x1024xi1, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc28)
      %114 = arith.select %108, %112#0, %arg20 : tensor<4x1024xi1, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc29)
      %115 = arith.select %108, %112#2, %arg21 : tensor<4x1024xi1, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc30)
      scf.yield %113, %114, %115 : tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc31)
    } loc(#loc12)
    %33:3 = "tt.reduce"(%32#0, %32#1, %32#2) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc33)), %arg19: f32 loc(callsite(#loc1 at #loc33)), %arg20: f32 loc(callsite(#loc1 at #loc33)), %arg21: f32 loc(callsite(#loc1 at #loc33)), %arg22: f32 loc(callsite(#loc1 at #loc33)), %arg23: f32 loc(callsite(#loc1 at #loc33))):
      %101 = arith.subf %arg21, %arg18 : f32 loc(#loc211)
      %102 = arith.addf %arg20, %arg23 : f32 loc(#loc212)
      %103 = arith.cmpf oeq, %102, %cst_11 : f32 loc(#loc213)
      %104 = arith.divf %arg23, %102 : f32 loc(#loc214)
      %105 = arith.select %103, %cst_11, %104 : f32 loc(#loc215)
      %106 = arith.mulf %101, %105 : f32 loc(#loc216)
      %107 = arith.addf %arg18, %106 : f32 loc(#loc217)
      %108 = arith.addf %arg19, %arg22 : f32 loc(#loc218)
      %109 = arith.mulf %101, %101 : f32 loc(#loc219)
      %110 = arith.mulf %109, %arg20 : f32 loc(#loc220)
      %111 = arith.mulf %110, %105 : f32 loc(#loc221)
      %112 = arith.addf %108, %111 : f32 loc(#loc222)
      tt.reduce.return %107, %112, %102 : f32, f32, f32 loc(#loc153)
    }) : (tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>, tensor<4x1024xf32, #blocked1>) -> (tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked1}>>, tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked1}>>, tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked1}>>) loc(#loc153)
    %34 = tt.expand_dims %33#0 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<4x1xf32, #blocked1> loc(#loc46)
    %35 = tt.expand_dims %33#1 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<4x1xf32, #blocked1> loc(#loc47)
    %36 = arith.muli %16, %cst_23 : tensor<4x1xi32, #blocked2> loc(#loc48)
    %37 = tt.broadcast %36 : tensor<4x1xi32, #blocked2> -> tensor<4x1024xi32, #blocked2> loc(#loc49)
    %38 = tt.broadcast %19 : tensor<4x1xi1, #blocked> -> tensor<4x1024xi1, #blocked> loc(#loc50)
    %39 = tt.broadcast %20 : tensor<4x1xi1, #blocked2> -> tensor<4x1024xi1, #blocked2> loc(#loc50)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc51)
    %41 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x1024x!tt.ptr<bf16>, #blocked> loc(#loc52)
    %42 = tt.broadcast %34 : tensor<4x1xf32, #blocked1> -> tensor<4x1024xf32, #blocked1> loc(#loc53)
    %43 = arith.divf %35, %cst_1 : tensor<4x1xf32, #blocked1> loc(#loc54)
    %44 = arith.addf %43, %cst_2 : tensor<4x1xf32, #blocked1> loc(#loc55)
    %45 = tt.extern_elementwise %44 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<4x1xf32, #blocked1>) -> tensor<4x1xf32, #blocked1> loc(#loc56)
    %46 = tt.broadcast %45 : tensor<4x1xf32, #blocked1> -> tensor<4x1024xf32, #blocked1> loc(#loc57)
    %47 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<4x1024x!tt.ptr<bf16>, #blocked2> loc(#loc58)
    %48:2 = scf.for %arg18 = %c0_i32 to %c3072_i32 step %c1024_i32 iter_args(%arg19 = %cst, %arg20 = %cst_0) -> (tensor<4x1024xf32, #blocked>, tensor<4x1024xf32, #blocked>)  : i32 {
      %101 = tt.splat %arg18 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc60)
      %102 = tt.splat %arg18 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc60)
      %103 = tt.splat %arg18 : i32 -> tensor<1x1024xi32, #blocked2> loc(#loc60)
      %104 = arith.addi %101, %26 : tensor<1x1024xi32, #blocked> loc(#loc60)
      %105 = arith.addi %102, %25 : tensor<1x1024xi32, #blocked1> loc(#loc60)
      %106 = arith.addi %103, %27 : tensor<1x1024xi32, #blocked2> loc(#loc60)
      %107 = arith.cmpi slt, %104, %cst_20 : tensor<1x1024xi32, #blocked> loc(#loc61)
      %108 = arith.cmpi slt, %105, %cst_19 : tensor<1x1024xi32, #blocked1> loc(#loc61)
      %109 = arith.cmpi slt, %106, %cst_21 : tensor<1x1024xi32, #blocked2> loc(#loc61)
      %110 = tt.broadcast %105 : tensor<1x1024xi32, #blocked1> -> tensor<4x1024xi32, #blocked1> loc(#loc49)
      %111 = tt.broadcast %106 : tensor<1x1024xi32, #blocked2> -> tensor<4x1024xi32, #blocked2> loc(#loc49)
      %112 = arith.addi %110, %29 : tensor<4x1024xi32, #blocked1> loc(#loc49)
      %113 = arith.addi %111, %37 : tensor<4x1024xi32, #blocked2> loc(#loc49)
      %114 = tt.addptr %30, %112 : tensor<4x1024x!tt.ptr<bf16>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc62)
      %115 = tt.broadcast %107 : tensor<1x1024xi1, #blocked> -> tensor<4x1024xi1, #blocked> loc(#loc50)
      %116 = tt.broadcast %108 : tensor<1x1024xi1, #blocked1> -> tensor<4x1024xi1, #blocked1> loc(#loc50)
      %117 = tt.broadcast %109 : tensor<1x1024xi1, #blocked2> -> tensor<4x1024xi1, #blocked2> loc(#loc50)
      %118 = arith.andi %115, %38 : tensor<4x1024xi1, #blocked> loc(#loc50)
      %119 = arith.andi %116, %31 : tensor<4x1024xi1, #blocked1> loc(#loc50)
      %120 = arith.andi %117, %39 : tensor<4x1024xi1, #blocked2> loc(#loc50)
      %121 = tt.load %114, %119, %cst_14 evictionPolicy = evict_first : tensor<4x1024x!tt.ptr<bf16>, #blocked1> loc(#loc63)
      %122 = arith.extf %121 : tensor<4x1024xbf16, #blocked1> to tensor<4x1024xf32, #blocked1> loc(#loc64)
      %123 = arith.addi %104, %cst_20 : tensor<1x1024xi32, #blocked> loc(#loc65)
      %124 = tt.addptr %40, %123 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc51)
      %125 = tt.load %124, %107, %cst_13 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc66)
      %126 = tt.addptr %41, %123 : tensor<1x1024x!tt.ptr<bf16>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc52)
      %127 = tt.load %126, %107, %cst_12 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>, #blocked> loc(#loc67)
      %128 = arith.extf %127 : tensor<1x1024xbf16, #blocked> to tensor<1x1024xf32, #blocked> loc(#loc68)
      %129 = tt.addptr %40, %104 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc69)
      %130 = tt.load %129, %107, %cst_13 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc70)
      %131 = tt.addptr %41, %104 : tensor<1x1024x!tt.ptr<bf16>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc71)
      %132 = tt.load %131, %107, %cst_12 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>, #blocked> loc(#loc72)
      %133 = arith.extf %132 : tensor<1x1024xbf16, #blocked> to tensor<1x1024xf32, #blocked> loc(#loc73)
      %134 = arith.subf %122, %42 : tensor<4x1024xf32, #blocked1> loc(#loc53)
      %135 = arith.mulf %134, %46 : tensor<4x1024xf32, #blocked1> loc(#loc57)
      %136 = ttg.convert_layout %135 : tensor<4x1024xf32, #blocked1> -> tensor<4x1024xf32, #blocked> loc(#loc57)
      %137 = arith.addf %125, %128 : tensor<1x1024xf32, #blocked> loc(#loc74)
      %138 = arith.addf %137, %cst_3 : tensor<1x1024xf32, #blocked> loc(#loc75)
      %139 = tt.broadcast %138 : tensor<1x1024xf32, #blocked> -> tensor<4x1024xf32, #blocked> loc(#loc76)
      %140 = arith.mulf %136, %139 : tensor<4x1024xf32, #blocked> loc(#loc76)
      %141 = arith.addf %130, %133 : tensor<1x1024xf32, #blocked> loc(#loc77)
      %142 = tt.broadcast %141 : tensor<1x1024xf32, #blocked> -> tensor<4x1024xf32, #blocked> loc(#loc78)
      %143 = arith.addf %140, %142 : tensor<4x1024xf32, #blocked> loc(#loc78)
      %144 = arith.cmpf olt, %arg19, %143 : tensor<4x1024xf32, #blocked> loc(#loc167)
      %145 = arith.cmpf une, %arg19, %arg19 : tensor<4x1024xf32, #blocked> loc(#loc168)
      %146 = arith.ori %144, %145 : tensor<4x1024xi1, #blocked> loc(#loc169)
      %147 = arith.select %146, %arg19, %143 : tensor<4x1024xi1, #blocked>, tensor<4x1024xf32, #blocked> loc(#loc170)
      %148 = arith.select %118, %147, %arg19 : tensor<4x1024xi1, #blocked>, tensor<4x1024xf32, #blocked> loc(#loc84)
      %149 = arith.cmpf ogt, %arg20, %143 : tensor<4x1024xf32, #blocked> loc(#loc171)
      %150 = arith.cmpf une, %arg20, %arg20 : tensor<4x1024xf32, #blocked> loc(#loc172)
      %151 = arith.ori %149, %150 : tensor<4x1024xi1, #blocked> loc(#loc173)
      %152 = arith.select %151, %arg20, %143 : tensor<4x1024xi1, #blocked>, tensor<4x1024xf32, #blocked> loc(#loc174)
      %153 = arith.select %118, %152, %arg20 : tensor<4x1024xi1, #blocked>, tensor<4x1024xf32, #blocked> loc(#loc90)
      %154 = tt.addptr %47, %113 : tensor<4x1024x!tt.ptr<bf16>, #blocked2>, tensor<4x1024xi32, #blocked2> loc(#loc58)
      %155 = arith.truncf %143 : tensor<4x1024xf32, #blocked> to tensor<4x1024xbf16, #blocked> loc(#loc91)
      %156 = ttg.convert_layout %155 : tensor<4x1024xbf16, #blocked> -> tensor<4x1024xbf16, #blocked2> loc(#loc91)
      tt.store %154, %156, %120 : tensor<4x1024x!tt.ptr<bf16>, #blocked2> loc(#loc91)
      scf.yield %148, %153 : tensor<4x1024xf32, #blocked>, tensor<4x1024xf32, #blocked> loc(#loc92)
    } loc(#loc59)
    %49 = "tt.reduce"(%48#0) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc94)), %arg19: f32 loc(callsite(#loc1 at #loc94))):
      %101 = arith.cmpf olt, %arg18, %arg19 : f32 loc(#loc223)
      %102 = arith.cmpf une, %arg18, %arg18 : f32 loc(#loc224)
      %103 = arith.ori %101, %102 : i1 loc(#loc225)
      %104 = arith.select %103, %arg18, %arg19 : f32 loc(#loc226)
      tt.reduce.return %104 : f32 loc(#loc175)
    }) : (tensor<4x1024xf32, #blocked>) -> tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc175)
    %50 = ttg.convert_layout %49 : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked3}>> loc(#loc95)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked3}>> -> tensor<4x1xf32, #blocked3> loc(#loc96)
    %52 = tt.expand_dims %49 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<4x1xf32, #blocked> loc(#loc96)
    %53 = "tt.reduce"(%48#1) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc98)), %arg19: f32 loc(callsite(#loc1 at #loc98))):
      %101 = arith.cmpf ogt, %arg18, %arg19 : f32 loc(#loc227)
      %102 = arith.cmpf une, %arg18, %arg18 : f32 loc(#loc228)
      %103 = arith.ori %101, %102 : i1 loc(#loc229)
      %104 = arith.select %103, %arg18, %arg19 : f32 loc(#loc230)
      tt.reduce.return %104 : f32 loc(#loc181)
    }) : (tensor<4x1024xf32, #blocked>) -> tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc181)
    %54 = ttg.convert_layout %53 : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked3}>> loc(#loc99)
    %55 = tt.expand_dims %54 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked3}>> -> tensor<4x1xf32, #blocked3> loc(#loc100)
    %56 = tt.expand_dims %53 {axis = 1 : i32} : tensor<4xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<4x1xf32, #blocked> loc(#loc100)
    %57 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc101)
    %58 = tt.addptr %57, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc101)
    %59 = arith.truncf %51 : tensor<4x1xf32, #blocked3> to tensor<4x1xbf16, #blocked3> loc(#loc95)
    tt.store %58, %59, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc95)
    %60 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc102)
    %61 = tt.addptr %60, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc102)
    %62 = arith.truncf %55 : tensor<4x1xf32, #blocked3> to tensor<4x1xbf16, #blocked3> loc(#loc99)
    tt.store %61, %62, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc99)
    %63 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc103)
    %64 = tt.addptr %63, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc103)
    tt.store %64, %59, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc104)
    %65 = tt.splat %arg7 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc105)
    %66 = tt.addptr %65, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc105)
    tt.store %66, %62, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc106)
    %67 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc107)
    %68 = tt.addptr %67, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc107)
    tt.store %68, %59, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc108)
    %69 = tt.splat %arg9 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc109)
    %70 = tt.addptr %69, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc109)
    tt.store %70, %62, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc110)
    %71 = tt.splat %arg10 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc111)
    %72 = tt.addptr %71, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc111)
    tt.store %72, %59, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc112)
    %73 = tt.splat %arg11 : !tt.ptr<bf16> -> tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc113)
    %74 = tt.addptr %73, %17 : tensor<4x1x!tt.ptr<bf16>, #blocked3>, tensor<4x1xi32, #blocked3> loc(#loc113)
    tt.store %74, %62, %21 : tensor<4x1x!tt.ptr<bf16>, #blocked3> loc(#loc114)
    %75 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<4x1024x!tt.ptr<bf16>, #blocked1> loc(#loc115)
    %76 = arith.cmpf olt, %52, %cst_4 : tensor<4x1xf32, #blocked> loc(#loc187)
    %77 = arith.cmpf une, %52, %52 : tensor<4x1xf32, #blocked> loc(#loc188)
    %78 = arith.ori %76, %77 : tensor<4x1xi1, #blocked> loc(#loc189)
    %79 = arith.select %78, %52, %cst_4 : tensor<4x1xi1, #blocked>, tensor<4x1xf32, #blocked> loc(#loc190)
    %80 = arith.subf %cst_4, %79 : tensor<4x1xf32, #blocked> loc(#loc117)
    %81 = arith.cmpf ogt, %56, %cst_4 : tensor<4x1xf32, #blocked> loc(#loc191)
    %82 = arith.cmpf une, %56, %56 : tensor<4x1xf32, #blocked> loc(#loc192)
    %83 = arith.ori %81, %82 : tensor<4x1xi1, #blocked> loc(#loc193)
    %84 = arith.select %83, %56, %cst_4 : tensor<4x1xi1, #blocked>, tensor<4x1xf32, #blocked> loc(#loc194)
    %85 = arith.cmpf ogt, %80, %84 : tensor<4x1xf32, #blocked> loc(#loc195)
    %86 = arith.cmpf une, %80, %80 : tensor<4x1xf32, #blocked> loc(#loc196)
    %87 = arith.ori %85, %86 : tensor<4x1xi1, #blocked> loc(#loc197)
    %88 = arith.select %87, %80, %84 : tensor<4x1xi1, #blocked>, tensor<4x1xf32, #blocked> loc(#loc198)
    %89 = arith.mulf %88, %cst_5 : tensor<4x1xf32, #blocked> loc(#loc120)
    %90 = arith.cmpf ogt, %89, %cst_8 : tensor<4x1xf32, #blocked> loc(#loc199)
    %91 = arith.cmpf une, %89, %89 : tensor<4x1xf32, #blocked> loc(#loc200)
    %92 = arith.ori %90, %91 : tensor<4x1xi1, #blocked> loc(#loc201)
    %93 = arith.select %92, %89, %cst_8 : tensor<4x1xi1, #blocked>, tensor<4x1xf32, #blocked> loc(#loc202)
    %94 = arith.divf %cst_6, %93 : tensor<4x1xf32, #blocked> loc(#loc122)
    %95 = ttg.convert_layout %94 : tensor<4x1xf32, #blocked> -> tensor<4x1xf32, #blocked1> loc(#loc123)
    %96 = tt.broadcast %95 : tensor<4x1xf32, #blocked1> -> tensor<4x1024xf32, #blocked1> loc(#loc123)
    %97 = tt.splat %arg12 : !tt.ptr<i8> -> tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc124)
    %98 = tt.splat %arg13 : !tt.ptr<i8> -> tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc125)
    %99 = tt.splat %arg14 : !tt.ptr<i8> -> tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc126)
    %100 = tt.splat %arg15 : !tt.ptr<i8> -> tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc127)
    scf.for %arg18 = %c0_i32 to %c3072_i32 step %c1024_i32  : i32 {
      %101 = tt.splat %arg18 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc129)
      %102 = arith.addi %101, %25 : tensor<1x1024xi32, #blocked1> loc(#loc129)
      %103 = arith.cmpi slt, %102, %cst_19 : tensor<1x1024xi32, #blocked1> loc(#loc130)
      %104 = tt.broadcast %102 : tensor<1x1024xi32, #blocked1> -> tensor<4x1024xi32, #blocked1> loc(#loc131)
      %105 = arith.addi %104, %29 : tensor<4x1024xi32, #blocked1> loc(#loc131)
      %106 = tt.addptr %75, %105 : tensor<4x1024x!tt.ptr<bf16>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc115)
      %107 = tt.broadcast %103 : tensor<1x1024xi1, #blocked1> -> tensor<4x1024xi1, #blocked1> loc(#loc132)
      %108 = arith.andi %107, %31 : tensor<4x1024xi1, #blocked1> loc(#loc132)
      %109 = tt.load %106, %108, %cst_14 evictionPolicy = evict_first : tensor<4x1024x!tt.ptr<bf16>, #blocked1> loc(#loc133)
      %110 = arith.extf %109 : tensor<4x1024xbf16, #blocked1> to tensor<4x1024xf32, #blocked1> loc(#loc134)
      %111 = arith.mulf %110, %96 : tensor<4x1024xf32, #blocked1> loc(#loc123)
      %112 = tt.extern_elementwise %111 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<4x1024xf32, #blocked1>) -> tensor<4x1024xf32, #blocked1> loc(#loc135)
      %113 = arith.cmpf ogt, %112, %cst_9 : tensor<4x1024xf32, #blocked1> loc(#loc203)
      %114 = arith.cmpf une, %112, %112 : tensor<4x1024xf32, #blocked1> loc(#loc204)
      %115 = arith.ori %113, %114 : tensor<4x1024xi1, #blocked1> loc(#loc205)
      %116 = arith.select %115, %112, %cst_9 : tensor<4x1024xi1, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc206)
      %117 = arith.cmpf olt, %116, %cst_10 : tensor<4x1024xf32, #blocked1> loc(#loc207)
      %118 = arith.cmpf une, %116, %116 : tensor<4x1024xf32, #blocked1> loc(#loc208)
      %119 = arith.ori %117, %118 : tensor<4x1024xi1, #blocked1> loc(#loc209)
      %120 = arith.select %119, %116, %cst_10 : tensor<4x1024xi1, #blocked1>, tensor<4x1024xf32, #blocked1> loc(#loc210)
      %121 = arith.fptosi %120 : tensor<4x1024xf32, #blocked1> to tensor<4x1024xi8, #blocked1> loc(#loc138)
      %122 = tt.addptr %97, %105 : tensor<4x1024x!tt.ptr<i8>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc124)
      tt.store %122, %121, %108 : tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc139)
      %123 = tt.addptr %98, %105 : tensor<4x1024x!tt.ptr<i8>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc125)
      tt.store %123, %121, %108 : tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc140)
      %124 = tt.addptr %99, %105 : tensor<4x1024x!tt.ptr<i8>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc126)
      tt.store %124, %121, %108 : tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc141)
      %125 = tt.addptr %100, %105 : tensor<4x1024x!tt.ptr<i8>, #blocked1>, tensor<4x1024xi32, #blocked1> loc(#loc127)
      tt.store %125, %121, %108 : tensor<4x1024x!tt.ptr<i8>, #blocked1> loc(#loc142)
    } loc(#loc128)
    tt.return loc(#loc143)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:46)
#loc9 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:41)
#loc10 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:34)
#loc11 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:61)
#loc12 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":32:40)
#loc13 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":33:31)
#loc14 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":34:29)
#loc15 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:51)
#loc16 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:112)
#loc17 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":42:62)
#loc18 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":203:7)
#loc19 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":42:51)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":206:31)
#loc21 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":208:24)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":209:30)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:34)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:26)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:39)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:31)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:22)
#loc28 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":44:62)
#loc29 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":45:58)
#loc30 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":46:66)
#loc31 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":46:8)
#loc32 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc34 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc40 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc44 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc46 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":48:16)
#loc47 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":49:16)
#loc48 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:46)
#loc49 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:41)
#loc50 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:61)
#loc51 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:35)
#loc52 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:35)
#loc53 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":65:24)
#loc54 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":67:24)
#loc55 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":69:24)
#loc56 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":70:32)
#loc57 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":71:24)
#loc58 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:29)
#loc59 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":53:40)
#loc60 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":54:31)
#loc61 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":55:29)
#loc62 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:34)
#loc63 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:51)
#loc64 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:113)
#loc65 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:42)
#loc66 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:49)
#loc67 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:49)
#loc68 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:102)
#loc69 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":62:35)
#loc70 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":62:42)
#loc71 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:35)
#loc72 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:42)
#loc73 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:95)
#loc74 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":74:24)
#loc75 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":76:24)
#loc76 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":77:24)
#loc77 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":79:24)
#loc78 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":80:24)
#loc79 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc80 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":82:47)
#loc81 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc82 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc83 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc84 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":83:50)
#loc85 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc86 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":84:47)
#loc87 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc88 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc89 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc90 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":85:50)
#loc91 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:53)
#loc92 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:8)
#loc93 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc95 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":89:37)
#loc96 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":87:43)
#loc97 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc99 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":90:37)
#loc100 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":88:43)
#loc101 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":89:25)
#loc102 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":90:25)
#loc103 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":91:25)
#loc104 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":91:37)
#loc105 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":92:25)
#loc106 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":92:37)
#loc107 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":93:25)
#loc108 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":93:37)
#loc109 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":94:25)
#loc110 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":94:37)
#loc111 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":95:25)
#loc112 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":95:37)
#loc113 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":96:26)
#loc114 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":96:38)
#loc115 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:36)
#loc116 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":105:46)
#loc117 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":106:17)
#loc118 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":107:46)
#loc119 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":108:46)
#loc120 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":110:24)
#loc121 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":113:46)
#loc122 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":116:25)
#loc123 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":119:24)
#loc124 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":128:30)
#loc125 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":129:30)
#loc126 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":130:30)
#loc127 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":131:30)
#loc128 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":97:40)
#loc129 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":98:31)
#loc130 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":99:29)
#loc131 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:43)
#loc132 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:63)
#loc133 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:53)
#loc134 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:115)
#loc135 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":120:36)
#loc136 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":123:46)
#loc137 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":125:46)
#loc138 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":127:25)
#loc139 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":128:54)
#loc140 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":129:54)
#loc141 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":130:54)
#loc142 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":131:54)
#loc143 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":97:4)
#loc144 = loc(callsite(#loc18 at #loc19))
#loc145 = loc(callsite(#loc20 at #loc19))
#loc146 = loc(callsite(#loc21 at #loc19))
#loc147 = loc(callsite(#loc22 at #loc19))
#loc148 = loc(callsite(#loc23 at #loc19))
#loc149 = loc(callsite(#loc24 at #loc19))
#loc150 = loc(callsite(#loc25 at #loc19))
#loc151 = loc(callsite(#loc26 at #loc19))
#loc152 = loc(callsite(#loc27 at #loc19))
#loc153 = loc(callsite(#loc32 at #loc33))
#loc155 = loc(callsite(#loc34 at #loc32))
#loc156 = loc(callsite(#loc35 at #loc32))
#loc157 = loc(callsite(#loc36 at #loc32))
#loc158 = loc(callsite(#loc37 at #loc32))
#loc159 = loc(callsite(#loc38 at #loc32))
#loc160 = loc(callsite(#loc39 at #loc32))
#loc161 = loc(callsite(#loc40 at #loc32))
#loc162 = loc(callsite(#loc41 at #loc32))
#loc163 = loc(callsite(#loc42 at #loc32))
#loc164 = loc(callsite(#loc43 at #loc32))
#loc165 = loc(callsite(#loc44 at #loc32))
#loc166 = loc(callsite(#loc45 at #loc32))
#loc167 = loc(callsite(#loc79 at #loc80))
#loc168 = loc(callsite(#loc81 at #loc80))
#loc169 = loc(callsite(#loc82 at #loc80))
#loc170 = loc(callsite(#loc83 at #loc80))
#loc171 = loc(callsite(#loc85 at #loc86))
#loc172 = loc(callsite(#loc87 at #loc86))
#loc173 = loc(callsite(#loc88 at #loc86))
#loc174 = loc(callsite(#loc89 at #loc86))
#loc175 = loc(callsite(#loc93 at #loc94))
#loc177 = loc(callsite(#loc79 at #loc93))
#loc178 = loc(callsite(#loc81 at #loc93))
#loc179 = loc(callsite(#loc82 at #loc93))
#loc180 = loc(callsite(#loc83 at #loc93))
#loc181 = loc(callsite(#loc97 at #loc98))
#loc183 = loc(callsite(#loc85 at #loc97))
#loc184 = loc(callsite(#loc87 at #loc97))
#loc185 = loc(callsite(#loc88 at #loc97))
#loc186 = loc(callsite(#loc89 at #loc97))
#loc187 = loc(callsite(#loc79 at #loc116))
#loc188 = loc(callsite(#loc81 at #loc116))
#loc189 = loc(callsite(#loc82 at #loc116))
#loc190 = loc(callsite(#loc83 at #loc116))
#loc191 = loc(callsite(#loc85 at #loc118))
#loc192 = loc(callsite(#loc87 at #loc118))
#loc193 = loc(callsite(#loc88 at #loc118))
#loc194 = loc(callsite(#loc89 at #loc118))
#loc195 = loc(callsite(#loc85 at #loc119))
#loc196 = loc(callsite(#loc87 at #loc119))
#loc197 = loc(callsite(#loc88 at #loc119))
#loc198 = loc(callsite(#loc89 at #loc119))
#loc199 = loc(callsite(#loc85 at #loc121))
#loc200 = loc(callsite(#loc87 at #loc121))
#loc201 = loc(callsite(#loc88 at #loc121))
#loc202 = loc(callsite(#loc89 at #loc121))
#loc203 = loc(callsite(#loc85 at #loc136))
#loc204 = loc(callsite(#loc87 at #loc136))
#loc205 = loc(callsite(#loc88 at #loc136))
#loc206 = loc(callsite(#loc89 at #loc136))
#loc207 = loc(callsite(#loc79 at #loc137))
#loc208 = loc(callsite(#loc81 at #loc137))
#loc209 = loc(callsite(#loc82 at #loc137))
#loc210 = loc(callsite(#loc83 at #loc137))
#loc211 = loc(callsite(#loc155 at #loc33))
#loc212 = loc(callsite(#loc156 at #loc33))
#loc213 = loc(callsite(#loc157 at #loc33))
#loc214 = loc(callsite(#loc158 at #loc33))
#loc215 = loc(callsite(#loc159 at #loc33))
#loc216 = loc(callsite(#loc160 at #loc33))
#loc217 = loc(callsite(#loc161 at #loc33))
#loc218 = loc(callsite(#loc162 at #loc33))
#loc219 = loc(callsite(#loc163 at #loc33))
#loc220 = loc(callsite(#loc164 at #loc33))
#loc221 = loc(callsite(#loc165 at #loc33))
#loc222 = loc(callsite(#loc166 at #loc33))
#loc223 = loc(callsite(#loc177 at #loc94))
#loc224 = loc(callsite(#loc178 at #loc94))
#loc225 = loc(callsite(#loc179 at #loc94))
#loc226 = loc(callsite(#loc180 at #loc94))
#loc227 = loc(callsite(#loc183 at #loc98))
#loc228 = loc(callsite(#loc184 at #loc98))
#loc229 = loc(callsite(#loc185 at #loc98))
#loc230 = loc(callsite(#loc186 at #loc98))
