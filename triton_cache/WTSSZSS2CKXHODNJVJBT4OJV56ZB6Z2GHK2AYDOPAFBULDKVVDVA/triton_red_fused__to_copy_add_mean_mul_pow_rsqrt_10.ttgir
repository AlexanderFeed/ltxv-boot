#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [8, 2], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0)
#loc1 = loc(unknown)
#loc30 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":46:25)
#loc61 = loc(callsite(#loc1 at #loc30))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_10(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4.096000e+03> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x512xbf16, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x512xbf16, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<8x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<8x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<8x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %9 = tt.expand_dims %7 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %10 = tt.expand_dims %8 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc7)
    %11 = arith.muli %5, %cst_7 : tensor<8x1xi32, #blocked> loc(#loc8)
    %12 = tt.broadcast %11 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc9)
    %13 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %14 = tt.broadcast %6 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc11)
    %15 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc12)
    %16 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc13)
    %17 = scf.for %arg7 = %c0_i32 to %c4096_i32 step %c512_i32 iter_args(%arg8 = %cst) -> (tensor<8x512xf32, #blocked>)  : i32 {
      %26 = tt.splat %arg7 : i32 -> tensor<1x512xi32, #blocked> loc(#loc15)
      %27 = arith.addi %26, %9 : tensor<1x512xi32, #blocked> loc(#loc15)
      %28 = arith.cmpi slt, %27, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc16)
      %29 = tt.broadcast %27 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc9)
      %30 = arith.addi %29, %12 : tensor<8x512xi32, #blocked> loc(#loc9)
      %31 = tt.addptr %13, %30 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc10)
      %32 = tt.broadcast %28 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc11)
      %33 = arith.andi %14, %32 : tensor<8x512xi1, #blocked> loc(#loc11)
      %34 = tt.load %31, %33, %cst_4 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc17)
      %35 = arith.extf %34 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc18)
      %36 = tt.addptr %15, %30 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc12)
      %37 = tt.load %36, %33, %cst_4 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc19)
      %38 = arith.extf %37 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc20)
      %39 = tt.addptr %16, %30 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc13)
      %40 = tt.load %39, %33, %cst_4 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc21)
      %41 = arith.extf %40 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc22)
      %42 = arith.addf %35, %38 : tensor<8x512xf32, #blocked> loc(#loc23)
      %43 = arith.addf %42, %41 : tensor<8x512xf32, #blocked> loc(#loc24)
      %44 = arith.mulf %43, %43 : tensor<8x512xf32, #blocked> loc(#loc25)
      %45 = arith.addf %arg8, %44 : tensor<8x512xf32, #blocked> loc(#loc26)
      %46 = arith.select %33, %45, %arg8 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc27)
      scf.yield %46 : tensor<8x512xf32, #blocked> loc(#loc28)
    } loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc30)), %arg8: f32 loc(callsite(#loc1 at #loc30))):
      %26 = arith.addf %arg7, %arg8 : f32 loc(#loc63)
      tt.reduce.return %26 : f32 loc(#loc60)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc60)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc32)
    %20 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked1> loc(#loc33)
    %21 = arith.divf %19, %cst_0 : tensor<8x1xf32, #blocked> loc(#loc34)
    %22 = arith.addf %21, %cst_1 : tensor<8x1xf32, #blocked> loc(#loc35)
    %23 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc36)
    %24 = tt.broadcast %23 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc37)
    %25 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc38)
    scf.for %arg7 = %c0_i32 to %c4096_i32 step %c512_i32  : i32 {
      %26 = tt.splat %arg7 : i32 -> tensor<1x512xi32, #blocked> loc(#loc40)
      %27 = tt.splat %arg7 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc40)
      %28 = arith.addi %26, %9 : tensor<1x512xi32, #blocked> loc(#loc40)
      %29 = arith.addi %27, %10 : tensor<1x512xi32, #blocked1> loc(#loc40)
      %30 = arith.cmpi slt, %28, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc41)
      %31 = arith.cmpi slt, %29, %cst_3 : tensor<1x512xi32, #blocked1> loc(#loc41)
      %32 = tt.addptr %20, %29 : tensor<1x512x!tt.ptr<bf16>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc33)
      %33 = tt.load %32, %31, %cst_2 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked1> loc(#loc42)
      %34 = arith.extf %33 : tensor<1x512xbf16, #blocked1> to tensor<1x512xf32, #blocked1> loc(#loc43)
      %35 = tt.broadcast %28 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc44)
      %36 = arith.addi %35, %12 : tensor<8x512xi32, #blocked> loc(#loc44)
      %37 = tt.addptr %13, %36 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc45)
      %38 = tt.broadcast %30 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc46)
      %39 = arith.andi %14, %38 : tensor<8x512xi1, #blocked> loc(#loc46)
      %40 = tt.load %37, %39, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc47)
      %41 = arith.extf %40 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc48)
      %42 = tt.addptr %15, %36 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc49)
      %43 = tt.load %42, %39, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc50)
      %44 = arith.extf %43 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc51)
      %45 = tt.addptr %16, %36 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc52)
      %46 = tt.load %45, %39, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc53)
      %47 = arith.extf %46 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc54)
      %48 = arith.addf %41, %44 : tensor<8x512xf32, #blocked> loc(#loc55)
      %49 = arith.addf %48, %47 : tensor<8x512xf32, #blocked> loc(#loc56)
      %50 = arith.mulf %49, %24 : tensor<8x512xf32, #blocked> loc(#loc37)
      %51 = ttg.convert_layout %34 : tensor<1x512xf32, #blocked1> -> tensor<1x512xf32, #blocked> loc(#loc57)
      %52 = tt.broadcast %51 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc57)
      %53 = arith.mulf %52, %50 : tensor<8x512xf32, #blocked> loc(#loc57)
      %54 = tt.addptr %25, %36 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc38)
      %55 = arith.truncf %53 : tensor<8x512xf32, #blocked> to tensor<8x512xbf16, #blocked> loc(#loc58)
      tt.store %54, %55, %39 : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc58)
    } loc(#loc39)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:46)
#loc9 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:41)
#loc10 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:34)
#loc11 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:59)
#loc12 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":37:34)
#loc13 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":38:34)
#loc14 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":30:40)
#loc15 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":31:31)
#loc16 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":32:29)
#loc17 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:51)
#loc18 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":36:112)
#loc19 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":37:51)
#loc20 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":37:112)
#loc21 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":38:51)
#loc22 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":38:112)
#loc23 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":39:22)
#loc24 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":40:22)
#loc25 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":42:22)
#loc26 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":44:23)
#loc27 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":45:48)
#loc28 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":45:8)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc32 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":46:28)
#loc33 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":53:35)
#loc34 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":61:24)
#loc35 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":63:24)
#loc36 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":64:32)
#loc37 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":65:24)
#loc38 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":68:29)
#loc39 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":47:40)
#loc40 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":48:31)
#loc41 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":49:29)
#loc42 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":53:42)
#loc43 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":53:95)
#loc44 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":54:42)
#loc45 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":54:35)
#loc46 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":54:60)
#loc47 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":54:52)
#loc48 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":54:114)
#loc49 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":55:35)
#loc50 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":55:52)
#loc51 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":55:114)
#loc52 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":56:35)
#loc53 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":56:52)
#loc54 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":56:114)
#loc55 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":57:24)
#loc56 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":58:24)
#loc57 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":67:24)
#loc58 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":68:53)
#loc59 = loc("/tmp/torchinductor_root/m6/cm6asjslmly5ocj3s6mh3iu62oswtuony7ojqrjyoleomizjp2in.py":47:4)
#loc60 = loc(callsite(#loc29 at #loc30))
#loc62 = loc(callsite(#loc31 at #loc29))
#loc63 = loc(callsite(#loc62 at #loc30))
