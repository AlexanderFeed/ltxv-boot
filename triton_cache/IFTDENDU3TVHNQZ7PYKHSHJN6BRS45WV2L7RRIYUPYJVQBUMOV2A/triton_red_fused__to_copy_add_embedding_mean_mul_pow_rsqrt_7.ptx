//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 107, 47, 99, 118, 107, 97, 101, 98, 120, 121, 111, 109, 111, 120, 115, 113, 97, 120, 97, 118, 108, 108, 114, 102, 105, 98, 122, 99, 120, 108, 118, 121, 120, 100, 117, 52, 111, 109, 119, 97, 52, 114, 121, 121, 114, 122, 109, 106, 99, 97, 122, 110, 103, 106, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b16 	%rs<51>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<172>;
	.reg .b64 	%rd<98>;
	.loc	1 18 0                          // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:18:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_5];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_4];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_3];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_2];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_1];
	ld.param.u64 	%rd43, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7_param_0];
$L__tmp0:
	.loc	1 23 28                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:23:28
	mov.u32 	%r19, %ctaid.x;
	.loc	1 23 33                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:23:33
	shl.b32 	%r20, %r19, 3;
	.loc	1 24 44                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:24:44
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.u32 	%r3, %r1, 6, 3;
	.loc	1 24 23                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:24:23
	or.b32  	%r4, %r3, %r20;
	.loc	1 25 21                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:25:21
	setp.lt.s32 	%p2, %r4, 512;
	setp.gt.s32 	%p22, %r20, 511;
	setp.lt.s32 	%p18, %r20, 512;
	.loc	1 26 37                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:26:37
	and.b32  	%r5, %r1, 31;
	shl.b32 	%r21, %r1, 3;
	and.b32  	%r6, %r21, 504;
	and.b32  	%r7, %r1, 511;
	.loc	1 29 30                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:29:30
	mul.wide.s32 	%rd44, %r4, 8;
	add.s64 	%rd15, %rd43, %rd44;
	mul.wide.s32 	%rd45, %r20, 8;
	add.s64 	%rd32, %rd43, %rd45;
	add.s64 	%rd35, %rd32, 16;
	add.s64 	%rd38, %rd32, 32;
	add.s64 	%rd41, %rd32, 48;
	.loc	1 29 35                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:29:35
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd30, 0x0;
	mov.u64 %rd31, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd30, %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	mov.u64 %rd34, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd33, %rd34 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	mov.u64 %rd37, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd36, %rd37 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	mov.u64 %rd40, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd39, %rd40 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 37 46                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:37:46
	shl.b32 	%r22, %r4, 12;
	.loc	1 41 22                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:41:22
	setp.lt.s64 	%p23, %rd28, 0;
	.loc	1 40 22                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:40:22
	add.s64 	%rd46, %rd33, 32128;
	add.s64 	%rd47, %rd34, 32128;
	add.s64 	%rd48, %rd36, 32128;
	add.s64 	%rd49, %rd37, 32128;
	add.s64 	%rd50, %rd39, 32128;
	add.s64 	%rd51, %rd31, 32128;
	add.s64 	%rd52, %rd30, 32128;
	add.s64 	%rd53, %rd40, 32128;
	.loc	1 41 22                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:41:22
	setp.lt.s64 	%p24, %rd33, 0;
	setp.lt.s64 	%p25, %rd34, 0;
	setp.lt.s64 	%p26, %rd36, 0;
	setp.lt.s64 	%p27, %rd37, 0;
	setp.lt.s64 	%p28, %rd39, 0;
	setp.lt.s64 	%p29, %rd31, 0;
	setp.lt.s64 	%p30, %rd30, 0;
	setp.lt.s64 	%p31, %rd40, 0;
	.loc	1 42 36                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:42:36
	selp.b64 	%rd54, %rd53, %rd40, %p31;
	selp.b64 	%rd55, %rd52, %rd30, %p30;
	selp.b64 	%rd56, %rd51, %rd31, %p29;
	selp.b64 	%rd57, %rd50, %rd39, %p28;
	selp.b64 	%rd58, %rd49, %rd37, %p27;
	selp.b64 	%rd59, %rd48, %rd36, %p26;
	selp.b64 	%rd60, %rd47, %rd34, %p25;
	selp.b64 	%rd61, %rd46, %rd33, %p24;
	.loc	1 44 46                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:44:46
	shl.b64 	%rd62, %rd28, 12;
	add.s64 	%rd63, %rd62, 131596288;
	selp.b64 	%rd64, %rd63, %rd62, %p23;
	.loc	1 31 40                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:31:40
	or.b32  	%r8, %r6, %r22;
	max.u64 	%rd65, %rd61, %rd60;
	max.u64 	%rd66, %rd65, %rd59;
	max.u64 	%rd67, %rd66, %rd58;
	max.u64 	%rd68, %rd67, %rd57;
	max.u64 	%rd69, %rd68, %rd56;
	max.u64 	%rd70, %rd69, %rd55;
	max.u64 	%rd71, %rd70, %rd54;
	setp.lt.u64 	%p32, %rd71, 32128;
	or.pred  	%p1, %p32, %p22;
	cvt.u64.u32 	%rd72, %r6;
	or.b64  	%rd1, %rd64, %rd72;
	mov.f32 	%f164, 0f00000000;
	mov.b64 	%rd95, 0;
	mov.f32 	%f165, %f164;
	mov.f32 	%f166, %f164;
	mov.f32 	%f167, %f164;
	mov.f32 	%f168, %f164;
	mov.f32 	%f169, %f164;
	mov.f32 	%f170, %f164;
	mov.f32 	%f171, %f164;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:0:40
	cvt.u32.u64 	%r39, %rd95;
	or.b32  	%r40, %r8, %r39;
	.loc	1 37 34                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:37:34
	mul.wide.s32 	%rd75, %r40, 2;
	add.s64 	%rd73, %rd10, %rd75;
	mov.b32 	%r38, 0;
	.loc	1 37 51                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:37:51
	// begin inline asm
	mov.u32 %r23, %r38;
	mov.u32 %r24, %r38;
	mov.u32 %r25, %r38;
	mov.u32 %r26, %r38;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd73 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:38:34
	add.s64 	%rd74, %rd11, %rd75;
	.loc	1 38 51                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:38:51
	// begin inline asm
	mov.u32 %r31, %r38;
	mov.u32 %r32, %r38;
	mov.u32 %r33, %r38;
	mov.u32 %r34, %r38;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd74 + 0 ];
	// end inline asm
	.loc	1 43 68                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:43:68
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	bar.sync 	0;
	or.b64  	%rd83, %rd95, %rd1;
	.loc	1 44 34                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:44:34
	shl.b64 	%rd84, %rd83, 1;
	add.s64 	%rd82, %rd9, %rd84;
	.loc	1 44 53                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:44:53
	// begin inline asm
	mov.u32 %r41, %r38;
	mov.u32 %r42, %r38;
	mov.u32 %r43, %r38;
	mov.u32 %r44, %r38;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd82 + 0 ];
	// end inline asm
	.loc	1 38 112                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:38:112
	mov.b32 	{%rs1, %rs2}, %r31;
	cvt.f32.bf16 	%f27, %rs1;
	cvt.f32.bf16 	%f28, %rs2;
	mov.b32 	{%rs3, %rs4}, %r32;
	cvt.f32.bf16 	%f29, %rs3;
	cvt.f32.bf16 	%f30, %rs4;
	mov.b32 	{%rs5, %rs6}, %r33;
	cvt.f32.bf16 	%f31, %rs5;
	cvt.f32.bf16 	%f32, %rs6;
	mov.b32 	{%rs7, %rs8}, %r34;
	cvt.f32.bf16 	%f33, %rs7;
	cvt.f32.bf16 	%f34, %rs8;
	.loc	1 37 112                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:37:112
	mov.b32 	{%rs9, %rs10}, %r26;
	cvt.f32.bf16 	%f35, %rs10;
	cvt.f32.bf16 	%f36, %rs9;
	mov.b32 	{%rs11, %rs12}, %r25;
	cvt.f32.bf16 	%f37, %rs12;
	cvt.f32.bf16 	%f38, %rs11;
	mov.b32 	{%rs13, %rs14}, %r24;
	cvt.f32.bf16 	%f39, %rs14;
	cvt.f32.bf16 	%f40, %rs13;
	mov.b32 	{%rs15, %rs16}, %r23;
	cvt.f32.bf16 	%f41, %rs16;
	cvt.f32.bf16 	%f42, %rs15;
	.loc	1 44 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:44:114
	mov.b32 	{%rs17, %rs18}, %r44;
	cvt.f32.bf16 	%f43, %rs18;
	cvt.f32.bf16 	%f44, %rs17;
	mov.b32 	{%rs19, %rs20}, %r43;
	cvt.f32.bf16 	%f45, %rs20;
	cvt.f32.bf16 	%f46, %rs19;
	mov.b32 	{%rs21, %rs22}, %r42;
	cvt.f32.bf16 	%f47, %rs22;
	cvt.f32.bf16 	%f48, %rs21;
	mov.b32 	{%rs23, %rs24}, %r41;
	cvt.f32.bf16 	%f49, %rs24;
	cvt.f32.bf16 	%f50, %rs23;
	.loc	1 45 22                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:45:22
	add.f32 	%f51, %f42, %f50;
	add.f32 	%f52, %f41, %f49;
	add.f32 	%f53, %f40, %f48;
	add.f32 	%f54, %f39, %f47;
	add.f32 	%f55, %f38, %f46;
	add.f32 	%f56, %f37, %f45;
	add.f32 	%f57, %f36, %f44;
	add.f32 	%f58, %f35, %f43;
	.loc	1 46 23                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:46:23
	add.f32 	%f59, %f58, %f34;
	add.f32 	%f60, %f57, %f33;
	add.f32 	%f61, %f56, %f32;
	add.f32 	%f62, %f55, %f31;
	add.f32 	%f63, %f54, %f30;
	add.f32 	%f64, %f53, %f29;
	add.f32 	%f65, %f52, %f28;
	add.f32 	%f66, %f51, %f27;
	.loc	1 50 25                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:50:25
	fma.rn.f32 	%f67, %f66, %f66, %f164;
	fma.rn.f32 	%f68, %f65, %f65, %f165;
	fma.rn.f32 	%f69, %f64, %f64, %f166;
	fma.rn.f32 	%f70, %f63, %f63, %f167;
	fma.rn.f32 	%f71, %f62, %f62, %f168;
	fma.rn.f32 	%f72, %f61, %f61, %f169;
	fma.rn.f32 	%f73, %f60, %f60, %f170;
	fma.rn.f32 	%f74, %f59, %f59, %f171;
	.loc	1 51 50                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:51:50
	selp.f32 	%f171, %f74, %f171, %p2;
	selp.f32 	%f170, %f73, %f170, %p2;
	selp.f32 	%f169, %f72, %f169, %p2;
	selp.f32 	%f168, %f71, %f168, %p2;
	selp.f32 	%f167, %f70, %f167, %p2;
	selp.f32 	%f166, %f69, %f166, %p2;
	selp.f32 	%f165, %f68, %f165, %p2;
	selp.f32 	%f164, %f67, %f164, %p2;
	.loc	1 31 40                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:31:40
	add.s64 	%rd3, %rd95, 512;
	setp.lt.u64 	%p36, %rd95, 3584;
	mov.u64 	%rd95, %rd3;
	@%p36 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f164, %f165;
	add.f32 	%f76, %f166, %f75;
	add.f32 	%f77, %f167, %f76;
	add.f32 	%f78, %f168, %f77;
	add.f32 	%f79, %f169, %f78;
	add.f32 	%f80, %f170, %f79;
	add.f32 	%f81, %f171, %f80;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f81;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f82, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f83;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f84, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f85;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f86, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f87;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f88, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f89;
	shfl.sync.bfly.b32	%r64, %r63, 1, 31, -1;
	mov.b32 	%f90, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r65, %r2, 1;
	setp.eq.s32 	%p37, %r5, 0;
	shl.b32 	%r66, %r65, 2;
	shl.b32 	%r67, %r3, 3;
	or.b32  	%r68, %r67, %r66;
	mov.u32 	%r69, global_smem;
	add.s32 	%r49, %r69, %r68;
	mov.b32 	%r50, %f91;
	// begin inline asm
	@%p37 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p38, %r1, 16;
	shl.b32 	%r70, %r1, 2;
	add.s32 	%r52, %r69, %r70;
	// begin inline asm
	@%p38 ld.shared.b32 %r51, [ %r52 + 0 ];
	// end inline asm
	mov.b32 	%f92, %r51;
	shfl.sync.bfly.b32	%r71, %r51, 1, 31, -1;
	mov.b32 	%f93, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r72, %r1, 1;
	setp.eq.b32 	%p40, %r72, 1;
	not.pred 	%p41, %p40;
	and.pred  	%p39, %p38, %p41;
	mov.b32 	%r54, %f94;
	// begin inline asm
	@%p39 st.shared.b32 [ %r52 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r73, %r69, %r67;
	ld.shared.f32 	%f95, [%r73];
	mov.f32 	%f96, 0f45800000;
$L__tmp2:
	.loc	1 72 25                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:72:25
	div.full.f32 	%f97, %f95, %f96;
	.loc	1 74 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:74:24
	add.f32 	%f98, %f97, 0f358637BD;
	.loc	1 75 32                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:75:32
	rsqrt.approx.ftz.f32 	%f17, %f98;
	shl.b32 	%r74, %r7, 2;
	add.s32 	%r100, %r69, %r74;
	shl.b32 	%r75, %r6, 2;
	add.s32 	%r18, %r69, %r75;
	.loc	1 53 40                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:53:40
	mul.wide.u32 	%rd86, %r7, 2;
	add.s64 	%rd96, %rd12, %rd86;
	mov.b64 	%rd97, 0;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:0:40
	mov.b16 	%rs26, 0;
	mov.pred 	%p42, -1;
	.loc	1 59 42                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:59:42
	// begin inline asm
	mov.u16 %rs25, %rs26;
	@%p42 ld.global.L1::evict_last.b16 { %rs25 }, [ %rd96 + 0 ];
	// end inline asm
	cvt.u32.u64 	%r106, %rd97;
	or.b32  	%r107, %r8, %r106;
	.loc	1 60 35                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:35
	mul.wide.s32 	%rd92, %r107, 2;
	add.s64 	%rd88, %rd10, %rd92;
	mov.b32 	%r80, 0;
	.loc	1 60 52                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:52
	// begin inline asm
	mov.u32 %r76, %r80;
	mov.u32 %r77, %r80;
	mov.u32 %r78, %r80;
	mov.u32 %r79, %r80;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r76, %r77, %r78, %r79 }, [ %rd88 + 0 ];
	// end inline asm
	.loc	1 61 35                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:35
	add.s64 	%rd89, %rd11, %rd92;
	.loc	1 61 52                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:52
	// begin inline asm
	mov.u32 %r84, %r80;
	mov.u32 %r85, %r80;
	mov.u32 %r86, %r80;
	mov.u32 %r87, %r80;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r84, %r85, %r86, %r87 }, [ %rd89 + 0 ];
	// end inline asm
	.loc	1 59 95                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:59:95
	cvt.f32.bf16 	%f99, %rs25;
	.loc	1 66 70                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:66:70
	bar.sync 	0;
	or.b64  	%rd93, %rd97, %rd1;
	.loc	1 67 35                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:35
	shl.b64 	%rd94, %rd93, 1;
	add.s64 	%rd90, %rd9, %rd94;
	.loc	1 67 55                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:55
	// begin inline asm
	mov.u32 %r92, %r80;
	mov.u32 %r93, %r80;
	mov.u32 %r94, %r80;
	mov.u32 %r95, %r80;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r92, %r93, %r94, %r95 }, [ %rd90 + 0 ];
	// end inline asm
	.loc	1 78 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:78:24
	bar.sync 	0;
	mov.b32 	%r101, %f99;
	// begin inline asm
	@%p42 st.shared.b32 [ %r100 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	.loc	1 79 29                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:79:29
	add.s64 	%rd91, %rd13, %rd92;
	.loc	1 61 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:114
	mov.b32 	{%rs27, %rs28}, %r84;
	cvt.f32.bf16 	%f100, %rs28;
	cvt.f32.bf16 	%f101, %rs27;
	.loc	1 60 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:114
	mov.b32 	{%rs29, %rs30}, %r76;
	cvt.f32.bf16 	%f102, %rs29;
	cvt.f32.bf16 	%f103, %rs30;
	.loc	1 67 117                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:117
	mov.b32 	{%rs31, %rs32}, %r92;
	cvt.f32.bf16 	%f104, %rs31;
	cvt.f32.bf16 	%f105, %rs32;
	.loc	1 68 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:68:24
	add.f32 	%f106, %f103, %f105;
	add.f32 	%f107, %f102, %f104;
	.loc	1 69 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:69:24
	add.f32 	%f108, %f107, %f101;
	add.f32 	%f109, %f106, %f100;
	.loc	1 76 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:76:24
	mul.f32 	%f110, %f17, %f109;
	mul.f32 	%f111, %f17, %f108;
	.loc	1 78 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:78:24
	ld.shared.v4.f32 	{%f112, %f113, %f114, %f115}, [%r18];
	mul.f32 	%f116, %f112, %f111;
	mul.f32 	%f117, %f113, %f110;
	.loc	1 79 53                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:79:53
	cvt.rn.bf16x2.f32 	%r102, %f117, %f116;
	.loc	1 61 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:114
	mov.b32 	{%rs33, %rs34}, %r85;
	cvt.f32.bf16 	%f118, %rs34;
	cvt.f32.bf16 	%f119, %rs33;
	.loc	1 60 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:114
	mov.b32 	{%rs35, %rs36}, %r77;
	cvt.f32.bf16 	%f120, %rs35;
	cvt.f32.bf16 	%f121, %rs36;
	.loc	1 67 117                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:117
	mov.b32 	{%rs37, %rs38}, %r93;
	cvt.f32.bf16 	%f122, %rs37;
	cvt.f32.bf16 	%f123, %rs38;
	.loc	1 68 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:68:24
	add.f32 	%f124, %f121, %f123;
	add.f32 	%f125, %f120, %f122;
	.loc	1 69 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:69:24
	add.f32 	%f126, %f125, %f119;
	add.f32 	%f127, %f124, %f118;
	.loc	1 76 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:76:24
	mul.f32 	%f128, %f17, %f127;
	mul.f32 	%f129, %f17, %f126;
	.loc	1 78 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:78:24
	mul.f32 	%f130, %f114, %f129;
	mul.f32 	%f131, %f115, %f128;
	.loc	1 79 53                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:79:53
	cvt.rn.bf16x2.f32 	%r103, %f131, %f130;
	.loc	1 61 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:114
	mov.b32 	{%rs39, %rs40}, %r86;
	cvt.f32.bf16 	%f132, %rs40;
	cvt.f32.bf16 	%f133, %rs39;
	.loc	1 60 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:114
	mov.b32 	{%rs41, %rs42}, %r78;
	cvt.f32.bf16 	%f134, %rs41;
	cvt.f32.bf16 	%f135, %rs42;
	.loc	1 67 117                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:117
	mov.b32 	{%rs43, %rs44}, %r94;
	cvt.f32.bf16 	%f136, %rs43;
	cvt.f32.bf16 	%f137, %rs44;
	.loc	1 68 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:68:24
	add.f32 	%f138, %f135, %f137;
	add.f32 	%f139, %f134, %f136;
	.loc	1 69 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:69:24
	add.f32 	%f140, %f139, %f133;
	add.f32 	%f141, %f138, %f132;
	.loc	1 76 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:76:24
	mul.f32 	%f142, %f17, %f141;
	mul.f32 	%f143, %f17, %f140;
	.loc	1 78 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:78:24
	ld.shared.v4.f32 	{%f144, %f145, %f146, %f147}, [%r18+16];
	mul.f32 	%f148, %f144, %f143;
	mul.f32 	%f149, %f145, %f142;
	.loc	1 79 53                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:79:53
	cvt.rn.bf16x2.f32 	%r104, %f149, %f148;
	.loc	1 61 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:61:114
	mov.b32 	{%rs45, %rs46}, %r87;
	cvt.f32.bf16 	%f150, %rs46;
	cvt.f32.bf16 	%f151, %rs45;
	.loc	1 60 114                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:60:114
	mov.b32 	{%rs47, %rs48}, %r79;
	cvt.f32.bf16 	%f152, %rs47;
	cvt.f32.bf16 	%f153, %rs48;
	.loc	1 67 117                        // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:67:117
	mov.b32 	{%rs49, %rs50}, %r95;
	cvt.f32.bf16 	%f154, %rs49;
	cvt.f32.bf16 	%f155, %rs50;
	.loc	1 68 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:68:24
	add.f32 	%f156, %f153, %f155;
	add.f32 	%f157, %f152, %f154;
	.loc	1 69 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:69:24
	add.f32 	%f158, %f157, %f151;
	add.f32 	%f159, %f156, %f150;
	.loc	1 76 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:76:24
	mul.f32 	%f160, %f17, %f159;
	mul.f32 	%f161, %f17, %f158;
	.loc	1 78 24                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:78:24
	mul.f32 	%f162, %f146, %f161;
	mul.f32 	%f163, %f147, %f160;
	.loc	1 79 53                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:79:53
	cvt.rn.bf16x2.f32 	%r105, %f163, %f162;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd91 + 0 ], { %r102, %r103, %r104, %r105 };
	// end inline asm
	.loc	1 53 40                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:53:40
	add.s64 	%rd7, %rd97, 512;
	add.s64 	%rd96, %rd96, 1024;
	setp.lt.u64 	%p48, %rd97, 3584;
	mov.u64 	%rd97, %rd7;
	@%p48 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 53 4                          // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:53:4
	ret;
$L__BB0_2:
	.loc	1 43 68                         // cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py:43:68
	mov.u64 	%rd76, assertMessage_0;
	cvta.global.u64 	%rd77, %rd76;
	mov.u64 	%rd78, assertFile_0;
	cvta.global.u64 	%rd79, %rd78;
	mov.u64 	%rd80, assertFunc_0;
	cvta.global.u64 	%rd81, %rd80;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd77;
	.param .b64 param1;
	st.param.b64 	[param1], %rd79;
	.param .b32 param2;
	st.param.b32 	[param2], 43;
	.param .b64 param3;
	st.param.b64 	[param3], %rd81;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 107
.b8 97
.b8 101
.b8 98
.b8 120
.b8 121
.b8 111
.b8 109
.b8 111
.b8 120
.b8 115
.b8 113
.b8 97
.b8 120
.b8 97
.b8 118
.b8 108
.b8 108
.b8 114
.b8 102
.b8 105
.b8 98
.b8 122
.b8 99
.b8 120
.b8 108
.b8 118
.b8 121
.b8 120
.b8 100
.b8 117
.b8 52
.b8 111
.b8 109
.b8 119
.b8 97
.b8 52
.b8 114
.b8 121
.b8 121
.b8 114
.b8 122
.b8 109
.b8 106
.b8 99
.b8 97
.b8 122
.b8 110
.b8 103
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 118
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
