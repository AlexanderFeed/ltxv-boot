#blocked = #ttg.blocked<{sizePerThread = [1, 16], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0)
#loc1 = loc(unknown)
#loc58 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":74:85)
#loc104 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":114:40)
#loc108 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":115:40)
#loc149 = loc(callsite(#loc1 at #loc58))
#loc167 = loc(callsite(#loc1 at #loc104))
#loc173 = loc(callsite(#loc1 at #loc108))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_native_layer_norm_reciprocal_12(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg3: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg9: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg10: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg11: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg12: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.00787401571> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0x7F800000> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3.072000e+03> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-1.270000e+02> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<1.270000e+02> : tensor<1x4096xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_11 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_12 = arith.constant dense<0> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<1x4096xbf16, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<3072> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<3072> : tensor<1x4096xi32, #blocked1> loc(#loc1)
    %cst_16 = arith.constant dense<6144> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<12288> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<9216> : tensor<1x4096xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4096 : i32, start = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 4096 : i32, start = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4096xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<4096xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x4096xi32, #blocked1> loc(#loc4)
    %6 = tt.addptr %arg4, %0 : !tt.ptr<bf16>, i32 loc(#loc5)
    %7 = tt.splat %6 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked> loc(#loc6)
    %8 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc6)
    %9 = tt.load %7, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<bf16>, #blocked> loc(#loc6)
    %10 = arith.extf %9 : tensor<1x1xbf16, #blocked> to tensor<1x1xf32, #blocked> loc(#loc7)
    %11 = tt.addptr %arg5, %0 : !tt.ptr<bf16>, i32 loc(#loc8)
    %12 = tt.splat %11 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked> loc(#loc9)
    %13 = tt.load %12, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<bf16>, #blocked> loc(#loc9)
    %14 = arith.extf %13 : tensor<1x1xbf16, #blocked> to tensor<1x1xf32, #blocked> loc(#loc10)
    %15 = arith.cmpi slt, %4, %cst_14 : tensor<1x4096xi32, #blocked> loc(#loc11)
    %16 = arith.cmpi slt, %5, %cst_15 : tensor<1x4096xi32, #blocked1> loc(#loc11)
    %17 = arith.muli %0, %c3072_i32 : i32 loc(#loc12)
    %18 = tt.splat %17 : i32 -> tensor<1x4096xi32, #blocked> loc(#loc130)
    %19 = tt.splat %17 : i32 -> tensor<1x4096xi32, #blocked1> loc(#loc130)
    %20 = arith.addi %4, %18 : tensor<1x4096xi32, #blocked> loc(#loc13)
    %21 = arith.addi %5, %19 : tensor<1x4096xi32, #blocked1> loc(#loc13)
    %22 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc14)
    %23 = tt.addptr %22, %20 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc14)
    %24 = tt.splat %1 : i1 -> tensor<1x4096xi1, #blocked> loc(#loc131)
    %25 = tt.splat %1 : i1 -> tensor<1x4096xi1, #blocked1> loc(#loc131)
    %26 = arith.andi %24, %15 : tensor<1x4096xi1, #blocked> loc(#loc15)
    %27 = arith.andi %25, %16 : tensor<1x4096xi1, #blocked1> loc(#loc15)
    %28 = tt.load %23, %26, %cst_13 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc16)
    %29 = arith.extf %28 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc17)
    %30 = arith.addi %4, %cst_16 : tensor<1x4096xi32, #blocked> loc(#loc18)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc19)
    %32 = tt.addptr %31, %30 : tensor<1x4096x!tt.ptr<f32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc19)
    %33 = tt.load %32, %15, %cst evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc20)
    %34 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc21)
    %35 = tt.addptr %34, %30 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc21)
    %36 = tt.load %35, %15, %cst_13 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc22)
    %37 = arith.extf %36 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc23)
    %38 = tt.splat %arg3 : !tt.ptr<i32> -> tensor<1x4096x!tt.ptr<i32>, #blocked> loc(#loc24)
    %39 = tt.addptr %38, %20 : tensor<1x4096x!tt.ptr<i32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc24)
    %40 = tt.load %39, %26, %cst_12 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<i32>, #blocked> loc(#loc25)
    %41 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc26)
    %42 = tt.addptr %41, %4 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc26)
    %43 = tt.load %42, %15, %cst_13 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc27)
    %44 = arith.extf %43 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc28)
    %45 = tt.splat %arg7 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc29)
    %46 = tt.addptr %45, %4 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc29)
    %47 = tt.load %46, %15, %cst_13 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc30)
    %48 = arith.extf %47 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc31)
    %49 = arith.addf %33, %37 : tensor<1x4096xf32, #blocked> loc(#loc32)
    %50 = arith.sitofp %40 : tensor<1x4096xi32, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc33)
    %51 = arith.cmpf olt, %10, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc132)
    %52 = arith.cmpf une, %10, %10 : tensor<1x1xf32, #blocked> loc(#loc133)
    %53 = arith.ori %51, %52 : tensor<1x1xi1, #blocked> loc(#loc134)
    %54 = arith.select %53, %10, %cst_0 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc135)
    %55 = arith.subf %cst_0, %54 : tensor<1x1xf32, #blocked> loc(#loc39)
    %56 = arith.cmpf ogt, %14, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc136)
    %57 = arith.cmpf une, %14, %14 : tensor<1x1xf32, #blocked> loc(#loc137)
    %58 = arith.ori %56, %57 : tensor<1x1xi1, #blocked> loc(#loc138)
    %59 = arith.select %58, %14, %cst_0 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc139)
    %60 = arith.cmpf ogt, %55, %59 : tensor<1x1xf32, #blocked> loc(#loc140)
    %61 = arith.cmpf une, %55, %55 : tensor<1x1xf32, #blocked> loc(#loc141)
    %62 = arith.ori %60, %61 : tensor<1x1xi1, #blocked> loc(#loc142)
    %63 = arith.select %62, %55, %59 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc143)
    %64 = arith.mulf %63, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc46)
    %65 = arith.cmpf ogt, %64, %cst_8 : tensor<1x1xf32, #blocked> loc(#loc144)
    %66 = arith.cmpf une, %64, %64 : tensor<1x1xf32, #blocked> loc(#loc145)
    %67 = arith.ori %65, %66 : tensor<1x1xi1, #blocked> loc(#loc146)
    %68 = arith.select %67, %64, %cst_8 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc147)
    %69 = tt.broadcast %68 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc48)
    %70 = arith.mulf %50, %69 : tensor<1x4096xf32, #blocked> loc(#loc48)
    %71 = arith.mulf %70, %44 : tensor<1x4096xf32, #blocked> loc(#loc49)
    %72 = arith.addf %71, %48 : tensor<1x4096xf32, #blocked> loc(#loc50)
    %73 = arith.mulf %49, %72 : tensor<1x4096xf32, #blocked> loc(#loc51)
    %74 = arith.addf %29, %73 : tensor<1x4096xf32, #blocked> loc(#loc52)
    %75 = arith.select %26, %74, %cst : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc53)
    %76 = arith.select %26, %cst_6, %cst : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc54)
    %77 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked1> loc(#loc55)
    %78 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc55)
    %79 = tt.addptr %77, %21 : tensor<1x4096x!tt.ptr<bf16>, #blocked1>, tensor<1x4096xi32, #blocked1> loc(#loc55)
    %80 = tt.addptr %78, %20 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc55)
    %81 = arith.truncf %74 : tensor<1x4096xf32, #blocked> to tensor<1x4096xbf16, #blocked> loc(#loc56)
    %82 = ttg.convert_layout %81 : tensor<1x4096xbf16, #blocked> -> tensor<1x4096xbf16, #blocked1> loc(#loc56)
    tt.store %79, %82, %27 : tensor<1x4096x!tt.ptr<bf16>, #blocked1> loc(#loc56)
    %83:3 = "tt.reduce"(%75, %cst, %76) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc58)), %arg16: f32 loc(callsite(#loc1 at #loc58)), %arg17: f32 loc(callsite(#loc1 at #loc58)), %arg18: f32 loc(callsite(#loc1 at #loc58)), %arg19: f32 loc(callsite(#loc1 at #loc58)), %arg20: f32 loc(callsite(#loc1 at #loc58))):
      %174 = arith.subf %arg18, %arg15 : f32 loc(#loc202)
      %175 = arith.addf %arg17, %arg20 : f32 loc(#loc203)
      %176 = arith.cmpf oeq, %175, %cst_11 : f32 loc(#loc204)
      %177 = arith.divf %arg20, %175 : f32 loc(#loc205)
      %178 = arith.select %176, %cst_11, %177 : f32 loc(#loc206)
      %179 = arith.mulf %174, %178 : f32 loc(#loc207)
      %180 = arith.addf %arg15, %179 : f32 loc(#loc208)
      %181 = arith.addf %arg16, %arg19 : f32 loc(#loc209)
      %182 = arith.mulf %174, %174 : f32 loc(#loc210)
      %183 = arith.mulf %182, %arg17 : f32 loc(#loc211)
      %184 = arith.mulf %183, %178 : f32 loc(#loc212)
      %185 = arith.addf %181, %184 : f32 loc(#loc213)
      tt.reduce.return %180, %185, %175 : f32, f32, f32 loc(#loc148)
    }) : (tensor<1x4096xf32, #blocked>, tensor<1x4096xf32, #blocked>, tensor<1x4096xf32, #blocked>) -> (tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>) loc(#loc148)
    %84 = tt.expand_dims %83#0 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc71)
    %85 = tt.expand_dims %83#1 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc72)
    %86 = tt.load %80, %26, %cst_13 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc73)
    %87 = arith.extf %86 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc74)
    %88 = arith.addi %4, %cst_17 : tensor<1x4096xi32, #blocked> loc(#loc75)
    %89 = tt.addptr %31, %88 : tensor<1x4096x!tt.ptr<f32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc76)
    %90 = tt.load %89, %15, %cst evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc77)
    %91 = tt.addptr %34, %88 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc78)
    %92 = tt.load %91, %15, %cst_13 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc79)
    %93 = arith.extf %92 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc80)
    %94 = arith.addi %4, %cst_18 : tensor<1x4096xi32, #blocked> loc(#loc81)
    %95 = tt.addptr %31, %94 : tensor<1x4096x!tt.ptr<f32>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc82)
    %96 = tt.load %95, %15, %cst evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<f32>, #blocked> loc(#loc83)
    %97 = tt.addptr %34, %94 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc84)
    %98 = tt.load %97, %15, %cst_13 evictionPolicy = evict_last : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc85)
    %99 = arith.extf %98 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc86)
    %100 = tt.broadcast %84 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc87)
    %101 = arith.subf %87, %100 : tensor<1x4096xf32, #blocked> loc(#loc87)
    %102 = arith.divf %85, %cst_4 : tensor<1x1xf32, #blocked> loc(#loc88)
    %103 = arith.addf %102, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc89)
    %104 = tt.extern_elementwise %103 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc90)
    %105 = tt.broadcast %104 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc91)
    %106 = arith.mulf %101, %105 : tensor<1x4096xf32, #blocked> loc(#loc91)
    %107 = arith.addf %90, %93 : tensor<1x4096xf32, #blocked> loc(#loc92)
    %108 = arith.addf %107, %cst_6 : tensor<1x4096xf32, #blocked> loc(#loc93)
    %109 = arith.mulf %106, %108 : tensor<1x4096xf32, #blocked> loc(#loc94)
    %110 = arith.addf %96, %99 : tensor<1x4096xf32, #blocked> loc(#loc95)
    %111 = arith.addf %109, %110 : tensor<1x4096xf32, #blocked> loc(#loc96)
    %112 = arith.cmpf olt, %cst_2, %111 : tensor<1x4096xf32, #blocked> loc(#loc162)
    %113 = arith.select %112, %cst_2, %111 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc163)
    %114 = arith.select %26, %113, %cst_2 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc98)
    %115 = arith.cmpf ogt, %cst_3, %111 : tensor<1x4096xf32, #blocked> loc(#loc164)
    %116 = arith.select %115, %cst_3, %111 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc165)
    %117 = arith.select %26, %116, %cst_3 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc100)
    %118 = tt.splat %arg9 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked1> loc(#loc101)
    %119 = tt.splat %arg9 : !tt.ptr<bf16> -> tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc101)
    %120 = tt.addptr %118, %21 : tensor<1x4096x!tt.ptr<bf16>, #blocked1>, tensor<1x4096xi32, #blocked1> loc(#loc101)
    %121 = tt.addptr %119, %20 : tensor<1x4096x!tt.ptr<bf16>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc101)
    %122 = arith.truncf %111 : tensor<1x4096xf32, #blocked> to tensor<1x4096xbf16, #blocked> loc(#loc102)
    %123 = ttg.convert_layout %122 : tensor<1x4096xbf16, #blocked> -> tensor<1x4096xbf16, #blocked1> loc(#loc102)
    tt.store %120, %123, %27 : tensor<1x4096x!tt.ptr<bf16>, #blocked1> loc(#loc102)
    %124 = "tt.reduce"(%114) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc104)), %arg16: f32 loc(callsite(#loc1 at #loc104))):
      %174 = arith.cmpf olt, %arg15, %arg16 : f32 loc(#loc214)
      %175 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc215)
      %176 = arith.ori %174, %175 : i1 loc(#loc216)
      %177 = arith.select %176, %arg15, %arg16 : f32 loc(#loc217)
      tt.reduce.return %177 : f32 loc(#loc166)
    }) : (tensor<1x4096xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc166)
    %125 = ttg.convert_layout %124 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc105)
    %126 = tt.expand_dims %125 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc106)
    %127 = tt.expand_dims %124 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc106)
    %128 = "tt.reduce"(%117) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc108)), %arg16: f32 loc(callsite(#loc1 at #loc108))):
      %174 = arith.cmpf ogt, %arg15, %arg16 : f32 loc(#loc218)
      %175 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc219)
      %176 = arith.ori %174, %175 : i1 loc(#loc220)
      %177 = arith.select %176, %arg15, %arg16 : f32 loc(#loc221)
      tt.reduce.return %177 : f32 loc(#loc172)
    }) : (tensor<1x4096xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc172)
    %129 = ttg.convert_layout %128 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc109)
    %130 = tt.expand_dims %129 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc110)
    %131 = tt.expand_dims %128 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc110)
    %132 = tt.addptr %arg10, %0 : !tt.ptr<bf16>, i32 loc(#loc111)
    %133 = arith.truncf %126 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc105)
    %134 = tt.splat %132 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc105)
    %135 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked2> loc(#loc105)
    tt.store %134, %133, %135 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc105)
    %136 = tt.addptr %arg11, %0 : !tt.ptr<bf16>, i32 loc(#loc112)
    %137 = arith.truncf %130 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc109)
    %138 = tt.splat %136 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc109)
    tt.store %138, %137, %135 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc109)
    %139 = tt.load %121, %26, %cst_13 evictionPolicy = evict_first : tensor<1x4096x!tt.ptr<bf16>, #blocked> loc(#loc113)
    %140 = arith.extf %139 : tensor<1x4096xbf16, #blocked> to tensor<1x4096xf32, #blocked> loc(#loc114)
    %141 = arith.cmpf olt, %127, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc178)
    %142 = arith.cmpf une, %127, %127 : tensor<1x1xf32, #blocked> loc(#loc179)
    %143 = arith.ori %141, %142 : tensor<1x1xi1, #blocked> loc(#loc180)
    %144 = arith.select %143, %127, %cst_0 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc181)
    %145 = arith.subf %cst_0, %144 : tensor<1x1xf32, #blocked> loc(#loc116)
    %146 = arith.cmpf ogt, %131, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc182)
    %147 = arith.cmpf une, %131, %131 : tensor<1x1xf32, #blocked> loc(#loc183)
    %148 = arith.ori %146, %147 : tensor<1x1xi1, #blocked> loc(#loc184)
    %149 = arith.select %148, %131, %cst_0 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc185)
    %150 = arith.cmpf ogt, %145, %149 : tensor<1x1xf32, #blocked> loc(#loc186)
    %151 = arith.cmpf une, %145, %145 : tensor<1x1xf32, #blocked> loc(#loc187)
    %152 = arith.ori %150, %151 : tensor<1x1xi1, #blocked> loc(#loc188)
    %153 = arith.select %152, %145, %149 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc189)
    %154 = arith.mulf %153, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc119)
    %155 = arith.cmpf ogt, %154, %cst_8 : tensor<1x1xf32, #blocked> loc(#loc190)
    %156 = arith.cmpf une, %154, %154 : tensor<1x1xf32, #blocked> loc(#loc191)
    %157 = arith.ori %155, %156 : tensor<1x1xi1, #blocked> loc(#loc192)
    %158 = arith.select %157, %154, %cst_8 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc193)
    %159 = arith.divf %cst_7, %158 : tensor<1x1xf32, #blocked> loc(#loc121)
    %160 = tt.broadcast %159 : tensor<1x1xf32, #blocked> -> tensor<1x4096xf32, #blocked> loc(#loc122)
    %161 = arith.mulf %140, %160 : tensor<1x4096xf32, #blocked> loc(#loc122)
    %162 = tt.extern_elementwise %161 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x4096xf32, #blocked>) -> tensor<1x4096xf32, #blocked> loc(#loc123)
    %163 = arith.cmpf ogt, %162, %cst_9 : tensor<1x4096xf32, #blocked> loc(#loc194)
    %164 = arith.cmpf une, %162, %162 : tensor<1x4096xf32, #blocked> loc(#loc195)
    %165 = arith.ori %163, %164 : tensor<1x4096xi1, #blocked> loc(#loc196)
    %166 = arith.select %165, %162, %cst_9 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc197)
    %167 = arith.cmpf olt, %166, %cst_10 : tensor<1x4096xf32, #blocked> loc(#loc198)
    %168 = arith.cmpf une, %166, %166 : tensor<1x4096xf32, #blocked> loc(#loc199)
    %169 = arith.ori %167, %168 : tensor<1x4096xi1, #blocked> loc(#loc200)
    %170 = arith.select %169, %166, %cst_10 : tensor<1x4096xi1, #blocked>, tensor<1x4096xf32, #blocked> loc(#loc201)
    %171 = arith.fptosi %170 : tensor<1x4096xf32, #blocked> to tensor<1x4096xi8, #blocked> loc(#loc126)
    %172 = tt.splat %arg12 : !tt.ptr<i8> -> tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc127)
    %173 = tt.addptr %172, %20 : tensor<1x4096x!tt.ptr<i8>, #blocked>, tensor<1x4096xi32, #blocked> loc(#loc127)
    tt.store %173, %171, %26 : tensor<1x4096x!tt.ptr<i8>, #blocked> loc(#loc128)
    tt.return loc(#loc129)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":26:37)
#loc5 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":29:30)
#loc6 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":29:35)
#loc7 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":29:75)
#loc8 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":30:31)
#loc9 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":30:36)
#loc10 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":30:76)
#loc11 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":36:29)
#loc12 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:46)
#loc13 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:41)
#loc14 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:34)
#loc15 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:59)
#loc16 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:51)
#loc17 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":40:113)
#loc18 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":41:41)
#loc19 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":41:34)
#loc20 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":41:48)
#loc21 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":42:34)
#loc22 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":42:48)
#loc23 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":42:101)
#loc24 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":43:34)
#loc25 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":43:51)
#loc26 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":44:35)
#loc27 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":44:42)
#loc28 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":44:95)
#loc29 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":45:35)
#loc30 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":45:42)
#loc31 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":45:95)
#loc32 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":47:22)
#loc33 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":48:23)
#loc34 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc35 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":50:44)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc39 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":51:17)
#loc40 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc41 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":52:46)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc44 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc45 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":53:46)
#loc46 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":55:24)
#loc47 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":58:46)
#loc48 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":60:23)
#loc49 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":61:24)
#loc50 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":62:24)
#loc51 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":63:23)
#loc52 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":64:23)
#loc53 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":70:64)
#loc54 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":72:68)
#loc55 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":73:29)
#loc56 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":73:53)
#loc57 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc59 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc60 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc61 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc62 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc63 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc64 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc65 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc66 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc67 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc68 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc69 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc70 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc71 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":75:18)
#loc72 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":76:18)
#loc73 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":86:53)
#loc74 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":86:115)
#loc75 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":87:43)
#loc76 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":87:35)
#loc77 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":87:50)
#loc78 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":88:35)
#loc79 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":88:50)
#loc80 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":88:103)
#loc81 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":89:42)
#loc82 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":89:35)
#loc83 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":89:49)
#loc84 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":90:35)
#loc85 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":90:49)
#loc86 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":90:102)
#loc87 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":92:24)
#loc88 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":94:25)
#loc89 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":96:24)
#loc90 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":97:32)
#loc91 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":98:24)
#loc92 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":101:24)
#loc93 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":103:24)
#loc94 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":104:24)
#loc95 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":106:24)
#loc96 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":107:24)
#loc97 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":109:47)
#loc98 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":110:50)
#loc99 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":111:47)
#loc100 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":112:50)
#loc101 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":113:29)
#loc102 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":113:53)
#loc103 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc105 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":116:37)
#loc106 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":114:43)
#loc107 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc109 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":117:37)
#loc110 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":115:43)
#loc111 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":116:25)
#loc112 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":117:25)
#loc113 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":124:53)
#loc114 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":124:115)
#loc115 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":126:46)
#loc116 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":127:17)
#loc117 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":128:46)
#loc118 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":129:46)
#loc119 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":131:24)
#loc120 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":134:46)
#loc121 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":137:25)
#loc122 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":140:24)
#loc123 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":141:36)
#loc124 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":144:46)
#loc125 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":146:46)
#loc126 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":148:25)
#loc127 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":149:29)
#loc128 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":149:53)
#loc129 = loc("/tmp/torchinductor_root/ep/cep3b5yvbssyf4zp4o5lpqj7q6ijv23mrinq2mw6xdsxcptlwmtk.py":118:4)
#loc130 = loc(fused[#loc13, #loc12])
#loc131 = loc(fused[#loc15, #loc3])
#loc132 = loc(callsite(#loc34 at #loc35))
#loc133 = loc(callsite(#loc36 at #loc35))
#loc134 = loc(callsite(#loc37 at #loc35))
#loc135 = loc(callsite(#loc38 at #loc35))
#loc136 = loc(callsite(#loc40 at #loc41))
#loc137 = loc(callsite(#loc42 at #loc41))
#loc138 = loc(callsite(#loc43 at #loc41))
#loc139 = loc(callsite(#loc44 at #loc41))
#loc140 = loc(callsite(#loc40 at #loc45))
#loc141 = loc(callsite(#loc42 at #loc45))
#loc142 = loc(callsite(#loc43 at #loc45))
#loc143 = loc(callsite(#loc44 at #loc45))
#loc144 = loc(callsite(#loc40 at #loc47))
#loc145 = loc(callsite(#loc42 at #loc47))
#loc146 = loc(callsite(#loc43 at #loc47))
#loc147 = loc(callsite(#loc44 at #loc47))
#loc148 = loc(callsite(#loc57 at #loc58))
#loc150 = loc(callsite(#loc59 at #loc57))
#loc151 = loc(callsite(#loc60 at #loc57))
#loc152 = loc(callsite(#loc61 at #loc57))
#loc153 = loc(callsite(#loc62 at #loc57))
#loc154 = loc(callsite(#loc63 at #loc57))
#loc155 = loc(callsite(#loc64 at #loc57))
#loc156 = loc(callsite(#loc65 at #loc57))
#loc157 = loc(callsite(#loc66 at #loc57))
#loc158 = loc(callsite(#loc67 at #loc57))
#loc159 = loc(callsite(#loc68 at #loc57))
#loc160 = loc(callsite(#loc69 at #loc57))
#loc161 = loc(callsite(#loc70 at #loc57))
#loc162 = loc(callsite(#loc34 at #loc97))
#loc163 = loc(callsite(#loc38 at #loc97))
#loc164 = loc(callsite(#loc40 at #loc99))
#loc165 = loc(callsite(#loc44 at #loc99))
#loc166 = loc(callsite(#loc103 at #loc104))
#loc168 = loc(callsite(#loc34 at #loc103))
#loc169 = loc(callsite(#loc36 at #loc103))
#loc170 = loc(callsite(#loc37 at #loc103))
#loc171 = loc(callsite(#loc38 at #loc103))
#loc172 = loc(callsite(#loc107 at #loc108))
#loc174 = loc(callsite(#loc40 at #loc107))
#loc175 = loc(callsite(#loc42 at #loc107))
#loc176 = loc(callsite(#loc43 at #loc107))
#loc177 = loc(callsite(#loc44 at #loc107))
#loc178 = loc(callsite(#loc34 at #loc115))
#loc179 = loc(callsite(#loc36 at #loc115))
#loc180 = loc(callsite(#loc37 at #loc115))
#loc181 = loc(callsite(#loc38 at #loc115))
#loc182 = loc(callsite(#loc40 at #loc117))
#loc183 = loc(callsite(#loc42 at #loc117))
#loc184 = loc(callsite(#loc43 at #loc117))
#loc185 = loc(callsite(#loc44 at #loc117))
#loc186 = loc(callsite(#loc40 at #loc118))
#loc187 = loc(callsite(#loc42 at #loc118))
#loc188 = loc(callsite(#loc43 at #loc118))
#loc189 = loc(callsite(#loc44 at #loc118))
#loc190 = loc(callsite(#loc40 at #loc120))
#loc191 = loc(callsite(#loc42 at #loc120))
#loc192 = loc(callsite(#loc43 at #loc120))
#loc193 = loc(callsite(#loc44 at #loc120))
#loc194 = loc(callsite(#loc40 at #loc124))
#loc195 = loc(callsite(#loc42 at #loc124))
#loc196 = loc(callsite(#loc43 at #loc124))
#loc197 = loc(callsite(#loc44 at #loc124))
#loc198 = loc(callsite(#loc34 at #loc125))
#loc199 = loc(callsite(#loc36 at #loc125))
#loc200 = loc(callsite(#loc37 at #loc125))
#loc201 = loc(callsite(#loc38 at #loc125))
#loc202 = loc(callsite(#loc150 at #loc58))
#loc203 = loc(callsite(#loc151 at #loc58))
#loc204 = loc(callsite(#loc152 at #loc58))
#loc205 = loc(callsite(#loc153 at #loc58))
#loc206 = loc(callsite(#loc154 at #loc58))
#loc207 = loc(callsite(#loc155 at #loc58))
#loc208 = loc(callsite(#loc156 at #loc58))
#loc209 = loc(callsite(#loc157 at #loc58))
#loc210 = loc(callsite(#loc158 at #loc58))
#loc211 = loc(callsite(#loc159 at #loc58))
#loc212 = loc(callsite(#loc160 at #loc58))
#loc213 = loc(callsite(#loc161 at #loc58))
#loc214 = loc(callsite(#loc168 at #loc104))
#loc215 = loc(callsite(#loc169 at #loc104))
#loc216 = loc(callsite(#loc170 at #loc104))
#loc217 = loc(callsite(#loc171 at #loc104))
#loc218 = loc(callsite(#loc174 at #loc108))
#loc219 = loc(callsite(#loc175 at #loc108))
#loc220 = loc(callsite(#loc176 at #loc108))
#loc221 = loc(callsite(#loc177 at #loc108))
