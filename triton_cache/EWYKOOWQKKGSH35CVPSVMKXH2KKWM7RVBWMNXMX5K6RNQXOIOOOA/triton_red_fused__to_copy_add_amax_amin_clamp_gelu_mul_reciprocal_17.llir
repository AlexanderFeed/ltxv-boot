; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9, i32 %10, ptr addrspace(1) readnone captures(none) %11) local_unnamed_addr !dbg !6 {
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %14 = icmp slt i32 %13, 3600, !dbg !10
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %16 = and i32 %15, 31, !dbg !11
  %17 = shl i32 %15, 4, !dbg !11
  %18 = and i32 %17, 4080, !dbg !11
  %19 = or disjoint i32 %18, 4, !dbg !11
  %20 = or disjoint i32 %18, 8, !dbg !11
  %21 = or disjoint i32 %18, 12, !dbg !11
  %22 = shl i32 %15, 2, !dbg !11
  %23 = and i32 %22, 1020, !dbg !11
  %24 = or disjoint i32 %23, 1024, !dbg !11
  %25 = or disjoint i32 %23, 2048, !dbg !11
  %26 = or disjoint i32 %23, 3072, !dbg !11
  %27 = sext i32 %13 to i64, !dbg !12
  %28 = getelementptr bfloat, ptr addrspace(1) %1, i64 %27, !dbg !12
  %29 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %30 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %31 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %32 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %33 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %34 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %35 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %36 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %37 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %38 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %39 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %41 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %42 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %43 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %44 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %14) #5, !dbg !13
  %45 = bitcast i16 %44 to bfloat, !dbg !13
  %46 = getelementptr bfloat, ptr addrspace(1) %2, i64 %27, !dbg !14
  %47 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %48 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %49 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %50 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %51 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %52 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %53 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %54 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %55 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %56 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %57 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %58 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %59 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %60 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %61 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %62 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %14) #5, !dbg !15
  %63 = bitcast i16 %62 to bfloat, !dbg !15
  %64 = mul i32 %13, 12288, !dbg !16
  %.inv = fcmp oge bfloat %45, 0xR0000, !dbg !17
  %65 = select i1 %.inv, bfloat 0xR0000, bfloat %45, !dbg !17
  %66 = fpext bfloat %65 to float, !dbg !17
  %67 = fsub float 0.000000e+00, %66, !dbg !21
  %.inv2 = fcmp ole bfloat %63, 0xR0000, !dbg !22
  %68 = select i1 %.inv2, bfloat 0xR0000, bfloat %63, !dbg !22
  %69 = fpext bfloat %68 to float, !dbg !22
  %70 = fcmp ogt float %67, %69, !dbg !24
  %71 = fcmp uno float %67, 0.000000e+00, !dbg !26
  %72 = or i1 %71, %70, !dbg !27
  %73 = select i1 %72, float %67, float %69, !dbg !28
  %74 = fmul float %73, 0x3F80204080000000, !dbg !29
  %75 = fcmp ogt float %74, 0x3EE4F8B580000000, !dbg !30
  %76 = fcmp uno float %74, 0.000000e+00, !dbg !32
  %77 = or i1 %75, %76, !dbg !33
  %78 = select i1 %77, float %74, float 0x3EE4F8B580000000, !dbg !34
  %79 = or disjoint i32 %19, %64
  %80 = or disjoint i32 %21, %64
  %81 = or disjoint i32 %23, %64
  %82 = or disjoint i32 %24, %64
  %83 = or disjoint i32 %25, %64
  %84 = or disjoint i32 %26, %64
  %85 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %18
  %86 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %19
  %87 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %20
  %88 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %21
  %89 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %23
  %90 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %24
  %91 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %25
  %92 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %26
  %93 = zext nneg i32 %20 to i64, !dbg !35
  %94 = zext nneg i32 %18 to i64, !dbg !35
  %95 = getelementptr inbounds nuw i8, ptr addrspace(3) %89, i32 4
  %96 = getelementptr inbounds nuw i8, ptr addrspace(3) %89, i32 8
  %97 = getelementptr inbounds nuw i8, ptr addrspace(3) %89, i32 12
  %98 = insertelement <2 x i1> poison, i1 %14, i64 0, !dbg !36
  %99 = shufflevector <2 x i1> %98, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !36
  %100 = insertelement <2 x float> poison, float %78, i64 0, !dbg !37
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !37
  %102 = insertelement <8 x i1> poison, i1 %14, i64 0, !dbg !38
  %103 = shufflevector <8 x i1> %102, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !38
  %104 = insertelement <8 x float> poison, float %78, i64 0, !dbg !37
  %105 = shufflevector <8 x float> %104, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %106 = insertelement <4 x i1> poison, i1 %14, i64 0, !dbg !36
  %107 = shufflevector <4 x i1> %106, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !36
  %108 = insertelement <4 x float> poison, float %78, i64 0, !dbg !37
  %109 = shufflevector <4 x float> %108, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !37
  br label %110, !dbg !35

110:                                              ; preds = %12, %__nv_tanhf.exit623
  %indvars.iv = phi i64 [ 0, %12 ], [ %indvars.iv.next, %__nv_tanhf.exit623 ]
  %111 = phi float [ 0x7FF0000000000000, %12 ], [ %929, %__nv_tanhf.exit623 ]
  %112 = phi float [ 0x7FF0000000000000, %12 ], [ %930, %__nv_tanhf.exit623 ]
  %113 = phi <2 x float> [ splat (float 0xFFF0000000000000), %12 ], [ %949, %__nv_tanhf.exit623 ]
  %114 = phi <8 x float> [ splat (float 0x7FF0000000000000), %12 ], [ %916, %__nv_tanhf.exit623 ]
  %115 = phi <8 x float> [ splat (float 0xFFF0000000000000), %12 ], [ %952, %__nv_tanhf.exit623 ]
  %116 = phi <4 x float> [ splat (float 0xFFF0000000000000), %12 ], [ %951, %__nv_tanhf.exit623 ]
  %117 = phi <8 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %12 ], [ %950, %__nv_tanhf.exit623 ]
  %118 = or disjoint i64 %indvars.iv, %94, !dbg !39
  %119 = or disjoint i64 %indvars.iv, %93, !dbg !39
  %120 = trunc nuw nsw i64 %118 to i32, !dbg !40
  %121 = add i32 %64, %120, !dbg !40
  %122 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !40
  %123 = add i32 %79, %122, !dbg !40
  %124 = trunc nuw nsw i64 %119 to i32, !dbg !40
  %125 = add i32 %64, %124, !dbg !40
  %126 = add i32 %80, %122, !dbg !40
  %127 = add i32 %81, %122, !dbg !40
  %128 = add i32 %82, %122, !dbg !40
  %129 = add i32 %83, %122, !dbg !40
  %130 = add i32 %84, %122, !dbg !40
  %131 = sext i32 %121 to i64, !dbg !41
  %132 = getelementptr i32, ptr addrspace(1) %0, i64 %131, !dbg !41
  %133 = sext i32 %123 to i64, !dbg !41
  %134 = getelementptr i32, ptr addrspace(1) %0, i64 %133, !dbg !41
  %135 = sext i32 %125 to i64, !dbg !41
  %136 = getelementptr i32, ptr addrspace(1) %0, i64 %135, !dbg !41
  %137 = sext i32 %126 to i64, !dbg !41
  %138 = getelementptr i32, ptr addrspace(1) %0, i64 %137, !dbg !41
  %139 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %132, i1 %14) #5, !dbg !42
  %140 = extractvalue { i32, i32, i32, i32 } %139, 0, !dbg !42
  %141 = extractvalue { i32, i32, i32, i32 } %139, 1, !dbg !42
  %142 = extractvalue { i32, i32, i32, i32 } %139, 2, !dbg !42
  %143 = extractvalue { i32, i32, i32, i32 } %139, 3, !dbg !42
  %144 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %134, i1 %14) #5, !dbg !42
  %145 = extractvalue { i32, i32, i32, i32 } %144, 0, !dbg !42
  %146 = extractvalue { i32, i32, i32, i32 } %144, 1, !dbg !42
  %147 = extractvalue { i32, i32, i32, i32 } %144, 2, !dbg !42
  %148 = extractvalue { i32, i32, i32, i32 } %144, 3, !dbg !42
  %149 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %136, i1 %14) #5, !dbg !42
  %150 = extractvalue { i32, i32, i32, i32 } %149, 0, !dbg !42
  %151 = extractvalue { i32, i32, i32, i32 } %149, 1, !dbg !42
  %152 = extractvalue { i32, i32, i32, i32 } %149, 2, !dbg !42
  %153 = extractvalue { i32, i32, i32, i32 } %149, 3, !dbg !42
  %154 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %138, i1 %14) #5, !dbg !42
  %155 = extractvalue { i32, i32, i32, i32 } %154, 0, !dbg !42
  %156 = extractvalue { i32, i32, i32, i32 } %154, 1, !dbg !42
  %157 = extractvalue { i32, i32, i32, i32 } %154, 2, !dbg !42
  %158 = extractvalue { i32, i32, i32, i32 } %154, 3, !dbg !42
  %159 = getelementptr bfloat, ptr addrspace(1) %3, i64 %118, !dbg !43
  %160 = getelementptr bfloat, ptr addrspace(1) %3, i64 %119, !dbg !43
  %161 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %159, i1 true) #5, !dbg !44
  %162 = extractvalue { i32, i32, i32, i32 } %161, 0, !dbg !44
  %163 = bitcast i32 %162 to <2 x bfloat>, !dbg !44
  %164 = extractvalue { i32, i32, i32, i32 } %161, 1, !dbg !44
  %165 = bitcast i32 %164 to <2 x bfloat>, !dbg !44
  %166 = extractvalue { i32, i32, i32, i32 } %161, 2, !dbg !44
  %167 = bitcast i32 %166 to <2 x bfloat>, !dbg !44
  %168 = extractvalue { i32, i32, i32, i32 } %161, 3, !dbg !44
  %169 = bitcast i32 %168 to <2 x bfloat>, !dbg !44
  %170 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %160, i1 true) #5, !dbg !44
  %171 = extractvalue { i32, i32, i32, i32 } %170, 0, !dbg !44
  %172 = bitcast i32 %171 to <2 x bfloat>, !dbg !44
  %173 = extractvalue { i32, i32, i32, i32 } %170, 1, !dbg !44
  %174 = bitcast i32 %173 to <2 x bfloat>, !dbg !44
  %175 = extractvalue { i32, i32, i32, i32 } %170, 2, !dbg !44
  %176 = bitcast i32 %175 to <2 x bfloat>, !dbg !44
  %177 = extractvalue { i32, i32, i32, i32 } %170, 3, !dbg !44
  %178 = bitcast i32 %177 to <2 x bfloat>, !dbg !44
  %179 = getelementptr bfloat, ptr addrspace(1) %4, i64 %118, !dbg !45
  %180 = getelementptr bfloat, ptr addrspace(1) %4, i64 %119, !dbg !45
  %181 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %179, i1 true) #5, !dbg !46
  %182 = extractvalue { i32, i32, i32, i32 } %181, 0, !dbg !46
  %183 = bitcast i32 %182 to <2 x bfloat>, !dbg !46
  %184 = extractvalue { i32, i32, i32, i32 } %181, 1, !dbg !46
  %185 = bitcast i32 %184 to <2 x bfloat>, !dbg !46
  %186 = extractvalue { i32, i32, i32, i32 } %181, 2, !dbg !46
  %187 = bitcast i32 %186 to <2 x bfloat>, !dbg !46
  %188 = extractvalue { i32, i32, i32, i32 } %181, 3, !dbg !46
  %189 = bitcast i32 %188 to <2 x bfloat>, !dbg !46
  %190 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %180, i1 true) #5, !dbg !46
  %191 = extractvalue { i32, i32, i32, i32 } %190, 0, !dbg !46
  %192 = bitcast i32 %191 to <2 x bfloat>, !dbg !46
  %193 = extractvalue { i32, i32, i32, i32 } %190, 1, !dbg !46
  %194 = bitcast i32 %193 to <2 x bfloat>, !dbg !46
  %195 = extractvalue { i32, i32, i32, i32 } %190, 2, !dbg !46
  %196 = bitcast i32 %195 to <2 x bfloat>, !dbg !46
  %197 = extractvalue { i32, i32, i32, i32 } %190, 3, !dbg !46
  %198 = bitcast i32 %197 to <2 x bfloat>, !dbg !46
  %199 = fpext <2 x bfloat> %163 to <2 x float>, !dbg !47
  %200 = fpext <2 x bfloat> %183 to <2 x float>, !dbg !48
  %201 = insertelement <2 x i32> poison, i32 %140, i64 0, !dbg !49
  %202 = insertelement <2 x i32> %201, i32 %141, i64 1, !dbg !49
  %203 = sitofp <2 x i32> %202 to <2 x float>, !dbg !49
  %204 = fmul <2 x float> %101, %203, !dbg !37
  %205 = fmul <2 x float> %204, %199, !dbg !50
  %206 = fadd <2 x float> %205, %200, !dbg !51
  %207 = fpext <2 x bfloat> %165 to <2 x float>, !dbg !47
  %208 = fpext <2 x bfloat> %185 to <2 x float>, !dbg !48
  %209 = insertelement <2 x i32> poison, i32 %142, i64 0, !dbg !49
  %210 = insertelement <2 x i32> %209, i32 %143, i64 1, !dbg !49
  %211 = sitofp <2 x i32> %210 to <2 x float>, !dbg !49
  %212 = fmul <2 x float> %101, %211, !dbg !37
  %213 = fmul <2 x float> %212, %207, !dbg !50
  %214 = fadd <2 x float> %213, %208, !dbg !51
  %215 = shufflevector <2 x bfloat> %169, <2 x bfloat> %167, <4 x i32> <i32 1, i32 0, i32 3, i32 2>, !dbg !47
  %216 = fpext <4 x bfloat> %215 to <4 x float>, !dbg !47
  %217 = shufflevector <2 x bfloat> %189, <2 x bfloat> %187, <4 x i32> <i32 1, i32 0, i32 3, i32 2>, !dbg !48
  %218 = fpext <4 x bfloat> %217 to <4 x float>, !dbg !48
  %219 = insertelement <4 x i32> poison, i32 %148, i64 0, !dbg !49
  %220 = insertelement <4 x i32> %219, i32 %147, i64 1, !dbg !49
  %221 = insertelement <4 x i32> %220, i32 %146, i64 2, !dbg !49
  %222 = insertelement <4 x i32> %221, i32 %145, i64 3, !dbg !49
  %223 = sitofp <4 x i32> %222 to <4 x float>, !dbg !49
  %224 = fmul <4 x float> %109, %223, !dbg !37
  %225 = fmul <4 x float> %224, %216, !dbg !50
  %226 = fadd <4 x float> %225, %218, !dbg !51
  %227 = shufflevector <2 x bfloat> %178, <2 x bfloat> %176, <8 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !47
  %228 = shufflevector <2 x bfloat> %174, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !47
  %229 = shufflevector <8 x bfloat> %227, <8 x bfloat> %228, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 9, i32 poison, i32 poison, i32 poison>, !dbg !47
  %230 = shufflevector <2 x bfloat> %174, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !47
  %231 = shufflevector <8 x bfloat> %229, <8 x bfloat> %230, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !47
  %232 = shufflevector <2 x bfloat> %172, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !47
  %233 = shufflevector <8 x bfloat> %231, <8 x bfloat> %232, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 9, i32 poison>, !dbg !47
  %234 = shufflevector <2 x bfloat> %172, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !47
  %235 = shufflevector <8 x bfloat> %233, <8 x bfloat> %234, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !47
  %236 = fpext <8 x bfloat> %235 to <8 x float>, !dbg !47
  %237 = shufflevector <2 x bfloat> %198, <2 x bfloat> %196, <8 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !48
  %238 = shufflevector <2 x bfloat> %194, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !48
  %239 = shufflevector <8 x bfloat> %237, <8 x bfloat> %238, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 9, i32 poison, i32 poison, i32 poison>, !dbg !48
  %240 = shufflevector <2 x bfloat> %194, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !48
  %241 = shufflevector <8 x bfloat> %239, <8 x bfloat> %240, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !48
  %242 = shufflevector <2 x bfloat> %192, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !48
  %243 = shufflevector <8 x bfloat> %241, <8 x bfloat> %242, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 9, i32 poison>, !dbg !48
  %244 = shufflevector <2 x bfloat> %192, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !48
  %245 = shufflevector <8 x bfloat> %243, <8 x bfloat> %244, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !48
  %246 = fpext <8 x bfloat> %245 to <8 x float>, !dbg !48
  %247 = insertelement <8 x i32> poison, i32 %158, i64 0, !dbg !49
  %248 = insertelement <8 x i32> %247, i32 %157, i64 1, !dbg !49
  %249 = insertelement <8 x i32> %248, i32 %156, i64 2, !dbg !49
  %250 = insertelement <8 x i32> %249, i32 %155, i64 3, !dbg !49
  %251 = insertelement <8 x i32> %250, i32 %153, i64 4, !dbg !49
  %252 = insertelement <8 x i32> %251, i32 %152, i64 5, !dbg !49
  %253 = insertelement <8 x i32> %252, i32 %151, i64 6, !dbg !49
  %254 = insertelement <8 x i32> %253, i32 %150, i64 7, !dbg !49
  %255 = sitofp <8 x i32> %254 to <8 x float>, !dbg !49
  %256 = fmul <8 x float> %105, %255, !dbg !37
  %257 = fmul <8 x float> %256, %236, !dbg !50
  %258 = fadd <8 x float> %257, %246, !dbg !51
  %259 = fmul <2 x float> %206, splat (float 5.000000e-01), !dbg !52
  %260 = fmul <2 x float> %214, splat (float 5.000000e-01), !dbg !52
  %261 = fmul <4 x float> %226, splat (float 5.000000e-01), !dbg !52
  %262 = fmul <8 x float> %258, splat (float 5.000000e-01), !dbg !52
  %263 = extractelement <2 x float> %206, i64 0, !dbg !53
  %264 = fmul float %263, %263, !dbg !54
  %265 = extractelement <2 x float> %206, i64 1, !dbg !53
  %266 = fmul float %265, %265, !dbg !54
  %267 = extractelement <2 x float> %214, i64 0, !dbg !53
  %268 = fmul float %267, %267, !dbg !54
  %269 = extractelement <2 x float> %214, i64 1, !dbg !53
  %270 = fmul float %269, %269, !dbg !54
  %271 = extractelement <4 x float> %226, i64 3, !dbg !53
  %272 = fmul float %271, %271, !dbg !54
  %273 = extractelement <4 x float> %226, i64 2, !dbg !53
  %274 = fmul float %273, %273, !dbg !54
  %275 = extractelement <4 x float> %226, i64 1, !dbg !53
  %276 = fmul float %275, %275, !dbg !54
  %277 = extractelement <4 x float> %226, i64 0, !dbg !53
  %278 = fmul float %277, %277, !dbg !54
  %279 = extractelement <8 x float> %258, i64 7, !dbg !53
  %280 = fmul float %279, %279, !dbg !54
  %281 = extractelement <8 x float> %258, i64 6, !dbg !53
  %282 = fmul float %281, %281, !dbg !54
  %283 = extractelement <8 x float> %258, i64 5, !dbg !53
  %284 = fmul float %283, %283, !dbg !54
  %285 = extractelement <8 x float> %258, i64 4, !dbg !53
  %286 = fmul float %285, %285, !dbg !54
  %287 = extractelement <8 x float> %258, i64 3, !dbg !53
  %288 = fmul float %287, %287, !dbg !54
  %289 = extractelement <8 x float> %258, i64 2, !dbg !53
  %290 = fmul float %289, %289, !dbg !54
  %291 = extractelement <8 x float> %258, i64 1, !dbg !53
  %292 = fmul float %291, %291, !dbg !54
  %293 = extractelement <8 x float> %258, i64 0, !dbg !53
  %294 = fmul float %293, %293, !dbg !54
  %295 = fmul float %263, %264, !dbg !55
  %296 = fmul float %265, %266, !dbg !55
  %297 = fmul float %267, %268, !dbg !55
  %298 = fmul float %269, %270, !dbg !55
  %299 = fmul float %271, %272, !dbg !55
  %300 = fmul float %273, %274, !dbg !55
  %301 = fmul float %275, %276, !dbg !55
  %302 = fmul float %277, %278, !dbg !55
  %303 = fmul float %279, %280, !dbg !55
  %304 = fmul float %281, %282, !dbg !55
  %305 = fmul float %283, %284, !dbg !55
  %306 = fmul float %285, %286, !dbg !55
  %307 = fmul float %287, %288, !dbg !55
  %308 = fmul float %289, %290, !dbg !55
  %309 = fmul float %291, %292, !dbg !55
  %310 = fmul float %293, %294, !dbg !55
  %311 = fmul float %295, 0x3FA6E4E260000000, !dbg !56
  %312 = fmul float %296, 0x3FA6E4E260000000, !dbg !56
  %313 = fmul float %297, 0x3FA6E4E260000000, !dbg !56
  %314 = fmul float %298, 0x3FA6E4E260000000, !dbg !56
  %315 = fmul float %299, 0x3FA6E4E260000000, !dbg !56
  %316 = fmul float %300, 0x3FA6E4E260000000, !dbg !56
  %317 = fmul float %301, 0x3FA6E4E260000000, !dbg !56
  %318 = fmul float %302, 0x3FA6E4E260000000, !dbg !56
  %319 = fmul float %303, 0x3FA6E4E260000000, !dbg !56
  %320 = fmul float %304, 0x3FA6E4E260000000, !dbg !56
  %321 = fmul float %305, 0x3FA6E4E260000000, !dbg !56
  %322 = fmul float %306, 0x3FA6E4E260000000, !dbg !56
  %323 = fmul float %307, 0x3FA6E4E260000000, !dbg !56
  %324 = fmul float %308, 0x3FA6E4E260000000, !dbg !56
  %325 = fmul float %309, 0x3FA6E4E260000000, !dbg !56
  %326 = fmul float %310, 0x3FA6E4E260000000, !dbg !56
  %327 = fadd float %263, %311, !dbg !53
  %328 = fadd float %265, %312, !dbg !53
  %329 = fadd float %267, %313, !dbg !53
  %330 = fadd float %269, %314, !dbg !53
  %331 = fadd float %271, %315, !dbg !53
  %332 = fadd float %273, %316, !dbg !53
  %333 = fadd float %275, %317, !dbg !53
  %334 = fadd float %277, %318, !dbg !53
  %335 = fadd float %279, %319, !dbg !53
  %336 = fadd float %281, %320, !dbg !53
  %337 = fadd float %283, %321, !dbg !53
  %338 = fadd float %285, %322, !dbg !53
  %339 = fadd float %287, %323, !dbg !53
  %340 = fadd float %289, %324, !dbg !53
  %341 = fadd float %291, %325, !dbg !53
  %342 = fadd float %293, %326, !dbg !53
  %343 = fmul float %327, 0x3FE9884540000000, !dbg !57
  %344 = fmul float %328, 0x3FE9884540000000, !dbg !57
  %345 = fmul float %329, 0x3FE9884540000000, !dbg !57
  %346 = fmul float %330, 0x3FE9884540000000, !dbg !57
  %347 = fmul float %331, 0x3FE9884540000000, !dbg !57
  %348 = fmul float %332, 0x3FE9884540000000, !dbg !57
  %349 = fmul float %333, 0x3FE9884540000000, !dbg !57
  %350 = fmul float %334, 0x3FE9884540000000, !dbg !57
  %351 = fmul float %335, 0x3FE9884540000000, !dbg !57
  %352 = fmul float %336, 0x3FE9884540000000, !dbg !57
  %353 = fmul float %337, 0x3FE9884540000000, !dbg !57
  %354 = fmul float %338, 0x3FE9884540000000, !dbg !57
  %355 = fmul float %339, 0x3FE9884540000000, !dbg !57
  %356 = fmul float %340, 0x3FE9884540000000, !dbg !57
  %357 = fmul float %341, 0x3FE9884540000000, !dbg !57
  %358 = fmul float %342, 0x3FE9884540000000, !dbg !57
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i320 = icmp eq i32 %359, 0, !dbg !58
  %360 = tail call float @llvm.nvvm.fabs.ftz.f(float %343) #5, !dbg !58
  %361 = tail call float @llvm.nvvm.fabs.f(float %343) #5, !dbg !58
  %.01.i321 = select i1 %.not.i320, float %361, float %360, !dbg !58
  %362 = fcmp ult float %.01.i321, 0x3FE3333340000000, !dbg !58
  br i1 %362, label %__internal_fmad.exit3.i327, label %__internal_fmad.exit1.i322, !dbg !58

__internal_fmad.exit1.i322:                       ; preds = %110
  %363 = fmul float %.01.i321, 0x4007154760000000, !dbg !58
  %364 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %363) #5, !dbg !58
  %365 = fadd float %364, 1.000000e+00, !dbg !58
  %366 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %365) #6, !dbg !58, !srcloc !59
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i323 = icmp eq i32 %367, 0, !dbg !58
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %366, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %366, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i324 = select i1 %.not6.i323, float %369, float %368, !dbg !58
  %370 = fcmp oge float %.01.i321, 0x4022059680000000, !dbg !58
  %s.0.i325 = select i1 %370, float 1.000000e+00, float %.03.i324, !dbg !58
  %371 = bitcast float %s.0.i325 to i32, !dbg !58
  %372 = bitcast float %343 to i32, !dbg !58
  %373 = and i32 %372, -2147483648, !dbg !58
  %374 = or i32 %373, %371, !dbg !58
  %375 = bitcast i32 %374 to float, !dbg !58
  br label %__nv_tanhf.exit338, !dbg !58

__internal_fmad.exit3.i327:                       ; preds = %110
  %376 = fmul float %343, %343, !dbg !58
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i328 = icmp eq i32 %377, 0, !dbg !58
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %376, float 0xBFAAC795C0000000) #5, !dbg !58
  %379 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %376, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i329 = select i1 %.not1.i328, float %379, float %378, !dbg !58
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i330 = icmp eq i32 %380, 0, !dbg !58
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i329, float %376, float 0x3FC10B2820000000) #5, !dbg !58
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i329, float %376, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i331 = select i1 %.not2.i330, float %382, float %381, !dbg !58
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i332 = icmp eq i32 %383, 0, !dbg !58
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i331, float %376, float 0xBFD5553DA0000000) #5, !dbg !58
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i331, float %376, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i333 = select i1 %.not3.i332, float %385, float %384, !dbg !58
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i334 = icmp eq i32 %386, 0, !dbg !58
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i333, float %376, float 0.000000e+00) #5, !dbg !58
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i333, float %376, float 0.000000e+00) #5, !dbg !58
  %.04.i335 = select i1 %.not4.i334, float %388, float %387, !dbg !58
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i336 = icmp eq i32 %389, 0, !dbg !58
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i335, float %343, float %343) #5, !dbg !58
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i335, float %343, float %343) #5, !dbg !58
  %.02.i337 = select i1 %.not5.i336, float %391, float %390, !dbg !58
  br label %__nv_tanhf.exit338, !dbg !58

__nv_tanhf.exit338:                               ; preds = %__internal_fmad.exit1.i322, %__internal_fmad.exit3.i327
  %s.1.i326 = phi float [ %375, %__internal_fmad.exit1.i322 ], [ %.02.i337, %__internal_fmad.exit3.i327 ], !dbg !58
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i339 = icmp eq i32 %392, 0, !dbg !58
  %393 = tail call float @llvm.nvvm.fabs.ftz.f(float %344) #5, !dbg !58
  %394 = tail call float @llvm.nvvm.fabs.f(float %344) #5, !dbg !58
  %.01.i340 = select i1 %.not.i339, float %394, float %393, !dbg !58
  %395 = fcmp ult float %.01.i340, 0x3FE3333340000000, !dbg !58
  br i1 %395, label %__internal_fmad.exit3.i346, label %__internal_fmad.exit1.i341, !dbg !58

__internal_fmad.exit1.i341:                       ; preds = %__nv_tanhf.exit338
  %396 = fmul float %.01.i340, 0x4007154760000000, !dbg !58
  %397 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %396) #5, !dbg !58
  %398 = fadd float %397, 1.000000e+00, !dbg !58
  %399 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %398) #6, !dbg !58, !srcloc !59
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i342 = icmp eq i32 %400, 0, !dbg !58
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %399, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %399, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i343 = select i1 %.not6.i342, float %402, float %401, !dbg !58
  %403 = fcmp oge float %.01.i340, 0x4022059680000000, !dbg !58
  %s.0.i344 = select i1 %403, float 1.000000e+00, float %.03.i343, !dbg !58
  %404 = bitcast float %s.0.i344 to i32, !dbg !58
  %405 = bitcast float %344 to i32, !dbg !58
  %406 = and i32 %405, -2147483648, !dbg !58
  %407 = or i32 %406, %404, !dbg !58
  %408 = bitcast i32 %407 to float, !dbg !58
  br label %__nv_tanhf.exit357, !dbg !58

__internal_fmad.exit3.i346:                       ; preds = %__nv_tanhf.exit338
  %409 = fmul float %344, %344, !dbg !58
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i347 = icmp eq i32 %410, 0, !dbg !58
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %409, float 0xBFAAC795C0000000) #5, !dbg !58
  %412 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %409, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i348 = select i1 %.not1.i347, float %412, float %411, !dbg !58
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i349 = icmp eq i32 %413, 0, !dbg !58
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i348, float %409, float 0x3FC10B2820000000) #5, !dbg !58
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i348, float %409, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i350 = select i1 %.not2.i349, float %415, float %414, !dbg !58
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i351 = icmp eq i32 %416, 0, !dbg !58
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i350, float %409, float 0xBFD5553DA0000000) #5, !dbg !58
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i350, float %409, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i352 = select i1 %.not3.i351, float %418, float %417, !dbg !58
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i353 = icmp eq i32 %419, 0, !dbg !58
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i352, float %409, float 0.000000e+00) #5, !dbg !58
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i352, float %409, float 0.000000e+00) #5, !dbg !58
  %.04.i354 = select i1 %.not4.i353, float %421, float %420, !dbg !58
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i355 = icmp eq i32 %422, 0, !dbg !58
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i354, float %344, float %344) #5, !dbg !58
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i354, float %344, float %344) #5, !dbg !58
  %.02.i356 = select i1 %.not5.i355, float %424, float %423, !dbg !58
  br label %__nv_tanhf.exit357, !dbg !58

__nv_tanhf.exit357:                               ; preds = %__internal_fmad.exit1.i341, %__internal_fmad.exit3.i346
  %s.1.i345 = phi float [ %408, %__internal_fmad.exit1.i341 ], [ %.02.i356, %__internal_fmad.exit3.i346 ], !dbg !58
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i358 = icmp eq i32 %425, 0, !dbg !58
  %426 = tail call float @llvm.nvvm.fabs.ftz.f(float %345) #5, !dbg !58
  %427 = tail call float @llvm.nvvm.fabs.f(float %345) #5, !dbg !58
  %.01.i359 = select i1 %.not.i358, float %427, float %426, !dbg !58
  %428 = fcmp ult float %.01.i359, 0x3FE3333340000000, !dbg !58
  br i1 %428, label %__internal_fmad.exit3.i365, label %__internal_fmad.exit1.i360, !dbg !58

__internal_fmad.exit1.i360:                       ; preds = %__nv_tanhf.exit357
  %429 = fmul float %.01.i359, 0x4007154760000000, !dbg !58
  %430 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %429) #5, !dbg !58
  %431 = fadd float %430, 1.000000e+00, !dbg !58
  %432 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %431) #6, !dbg !58, !srcloc !59
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i361 = icmp eq i32 %433, 0, !dbg !58
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i362 = select i1 %.not6.i361, float %435, float %434, !dbg !58
  %436 = fcmp oge float %.01.i359, 0x4022059680000000, !dbg !58
  %s.0.i363 = select i1 %436, float 1.000000e+00, float %.03.i362, !dbg !58
  %437 = bitcast float %s.0.i363 to i32, !dbg !58
  %438 = bitcast float %345 to i32, !dbg !58
  %439 = and i32 %438, -2147483648, !dbg !58
  %440 = or i32 %439, %437, !dbg !58
  %441 = bitcast i32 %440 to float, !dbg !58
  br label %__nv_tanhf.exit376, !dbg !58

__internal_fmad.exit3.i365:                       ; preds = %__nv_tanhf.exit357
  %442 = fmul float %345, %345, !dbg !58
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i366 = icmp eq i32 %443, 0, !dbg !58
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #5, !dbg !58
  %445 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i367 = select i1 %.not1.i366, float %445, float %444, !dbg !58
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i368 = icmp eq i32 %446, 0, !dbg !58
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i367, float %442, float 0x3FC10B2820000000) #5, !dbg !58
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i367, float %442, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i369 = select i1 %.not2.i368, float %448, float %447, !dbg !58
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i370 = icmp eq i32 %449, 0, !dbg !58
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i369, float %442, float 0xBFD5553DA0000000) #5, !dbg !58
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i369, float %442, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i371 = select i1 %.not3.i370, float %451, float %450, !dbg !58
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i372 = icmp eq i32 %452, 0, !dbg !58
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i371, float %442, float 0.000000e+00) #5, !dbg !58
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i371, float %442, float 0.000000e+00) #5, !dbg !58
  %.04.i373 = select i1 %.not4.i372, float %454, float %453, !dbg !58
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i374 = icmp eq i32 %455, 0, !dbg !58
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i373, float %345, float %345) #5, !dbg !58
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i373, float %345, float %345) #5, !dbg !58
  %.02.i375 = select i1 %.not5.i374, float %457, float %456, !dbg !58
  br label %__nv_tanhf.exit376, !dbg !58

__nv_tanhf.exit376:                               ; preds = %__internal_fmad.exit1.i360, %__internal_fmad.exit3.i365
  %s.1.i364 = phi float [ %441, %__internal_fmad.exit1.i360 ], [ %.02.i375, %__internal_fmad.exit3.i365 ], !dbg !58
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i377 = icmp eq i32 %458, 0, !dbg !58
  %459 = tail call float @llvm.nvvm.fabs.ftz.f(float %346) #5, !dbg !58
  %460 = tail call float @llvm.nvvm.fabs.f(float %346) #5, !dbg !58
  %.01.i378 = select i1 %.not.i377, float %460, float %459, !dbg !58
  %461 = fcmp ult float %.01.i378, 0x3FE3333340000000, !dbg !58
  br i1 %461, label %__internal_fmad.exit3.i384, label %__internal_fmad.exit1.i379, !dbg !58

__internal_fmad.exit1.i379:                       ; preds = %__nv_tanhf.exit376
  %462 = fmul float %.01.i378, 0x4007154760000000, !dbg !58
  %463 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %462) #5, !dbg !58
  %464 = fadd float %463, 1.000000e+00, !dbg !58
  %465 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %464) #6, !dbg !58, !srcloc !59
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i380 = icmp eq i32 %466, 0, !dbg !58
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %465, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %465, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i381 = select i1 %.not6.i380, float %468, float %467, !dbg !58
  %469 = fcmp oge float %.01.i378, 0x4022059680000000, !dbg !58
  %s.0.i382 = select i1 %469, float 1.000000e+00, float %.03.i381, !dbg !58
  %470 = bitcast float %s.0.i382 to i32, !dbg !58
  %471 = bitcast float %346 to i32, !dbg !58
  %472 = and i32 %471, -2147483648, !dbg !58
  %473 = or i32 %472, %470, !dbg !58
  %474 = bitcast i32 %473 to float, !dbg !58
  br label %__nv_tanhf.exit395, !dbg !58

__internal_fmad.exit3.i384:                       ; preds = %__nv_tanhf.exit376
  %475 = fmul float %346, %346, !dbg !58
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i385 = icmp eq i32 %476, 0, !dbg !58
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #5, !dbg !58
  %478 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i386 = select i1 %.not1.i385, float %478, float %477, !dbg !58
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i387 = icmp eq i32 %479, 0, !dbg !58
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i386, float %475, float 0x3FC10B2820000000) #5, !dbg !58
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i386, float %475, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i388 = select i1 %.not2.i387, float %481, float %480, !dbg !58
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i389 = icmp eq i32 %482, 0, !dbg !58
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i388, float %475, float 0xBFD5553DA0000000) #5, !dbg !58
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i388, float %475, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i390 = select i1 %.not3.i389, float %484, float %483, !dbg !58
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i391 = icmp eq i32 %485, 0, !dbg !58
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i390, float %475, float 0.000000e+00) #5, !dbg !58
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i390, float %475, float 0.000000e+00) #5, !dbg !58
  %.04.i392 = select i1 %.not4.i391, float %487, float %486, !dbg !58
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i393 = icmp eq i32 %488, 0, !dbg !58
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i392, float %346, float %346) #5, !dbg !58
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i392, float %346, float %346) #5, !dbg !58
  %.02.i394 = select i1 %.not5.i393, float %490, float %489, !dbg !58
  br label %__nv_tanhf.exit395, !dbg !58

__nv_tanhf.exit395:                               ; preds = %__internal_fmad.exit1.i379, %__internal_fmad.exit3.i384
  %s.1.i383 = phi float [ %474, %__internal_fmad.exit1.i379 ], [ %.02.i394, %__internal_fmad.exit3.i384 ], !dbg !58
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i396 = icmp eq i32 %491, 0, !dbg !58
  %492 = tail call float @llvm.nvvm.fabs.ftz.f(float %347) #5, !dbg !58
  %493 = tail call float @llvm.nvvm.fabs.f(float %347) #5, !dbg !58
  %.01.i397 = select i1 %.not.i396, float %493, float %492, !dbg !58
  %494 = fcmp ult float %.01.i397, 0x3FE3333340000000, !dbg !58
  br i1 %494, label %__internal_fmad.exit3.i403, label %__internal_fmad.exit1.i398, !dbg !58

__internal_fmad.exit1.i398:                       ; preds = %__nv_tanhf.exit395
  %495 = fmul float %.01.i397, 0x4007154760000000, !dbg !58
  %496 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %495) #5, !dbg !58
  %497 = fadd float %496, 1.000000e+00, !dbg !58
  %498 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %497) #6, !dbg !58, !srcloc !59
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i399 = icmp eq i32 %499, 0, !dbg !58
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %498, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %498, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i400 = select i1 %.not6.i399, float %501, float %500, !dbg !58
  %502 = fcmp oge float %.01.i397, 0x4022059680000000, !dbg !58
  %s.0.i401 = select i1 %502, float 1.000000e+00, float %.03.i400, !dbg !58
  %503 = bitcast float %s.0.i401 to i32, !dbg !58
  %504 = bitcast float %347 to i32, !dbg !58
  %505 = and i32 %504, -2147483648, !dbg !58
  %506 = or i32 %505, %503, !dbg !58
  %507 = bitcast i32 %506 to float, !dbg !58
  br label %__nv_tanhf.exit414, !dbg !58

__internal_fmad.exit3.i403:                       ; preds = %__nv_tanhf.exit395
  %508 = fmul float %347, %347, !dbg !58
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i404 = icmp eq i32 %509, 0, !dbg !58
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #5, !dbg !58
  %511 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i405 = select i1 %.not1.i404, float %511, float %510, !dbg !58
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i406 = icmp eq i32 %512, 0, !dbg !58
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i405, float %508, float 0x3FC10B2820000000) #5, !dbg !58
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i405, float %508, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i407 = select i1 %.not2.i406, float %514, float %513, !dbg !58
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i408 = icmp eq i32 %515, 0, !dbg !58
  %516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i407, float %508, float 0xBFD5553DA0000000) #5, !dbg !58
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i407, float %508, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i409 = select i1 %.not3.i408, float %517, float %516, !dbg !58
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i410 = icmp eq i32 %518, 0, !dbg !58
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i409, float %508, float 0.000000e+00) #5, !dbg !58
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i409, float %508, float 0.000000e+00) #5, !dbg !58
  %.04.i411 = select i1 %.not4.i410, float %520, float %519, !dbg !58
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i412 = icmp eq i32 %521, 0, !dbg !58
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i411, float %347, float %347) #5, !dbg !58
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i411, float %347, float %347) #5, !dbg !58
  %.02.i413 = select i1 %.not5.i412, float %523, float %522, !dbg !58
  br label %__nv_tanhf.exit414, !dbg !58

__nv_tanhf.exit414:                               ; preds = %__internal_fmad.exit1.i398, %__internal_fmad.exit3.i403
  %s.1.i402 = phi float [ %507, %__internal_fmad.exit1.i398 ], [ %.02.i413, %__internal_fmad.exit3.i403 ], !dbg !58
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i415 = icmp eq i32 %524, 0, !dbg !58
  %525 = tail call float @llvm.nvvm.fabs.ftz.f(float %348) #5, !dbg !58
  %526 = tail call float @llvm.nvvm.fabs.f(float %348) #5, !dbg !58
  %.01.i416 = select i1 %.not.i415, float %526, float %525, !dbg !58
  %527 = fcmp ult float %.01.i416, 0x3FE3333340000000, !dbg !58
  br i1 %527, label %__internal_fmad.exit3.i422, label %__internal_fmad.exit1.i417, !dbg !58

__internal_fmad.exit1.i417:                       ; preds = %__nv_tanhf.exit414
  %528 = fmul float %.01.i416, 0x4007154760000000, !dbg !58
  %529 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %528) #5, !dbg !58
  %530 = fadd float %529, 1.000000e+00, !dbg !58
  %531 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %530) #6, !dbg !58, !srcloc !59
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i418 = icmp eq i32 %532, 0, !dbg !58
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %531, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %531, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i419 = select i1 %.not6.i418, float %534, float %533, !dbg !58
  %535 = fcmp oge float %.01.i416, 0x4022059680000000, !dbg !58
  %s.0.i420 = select i1 %535, float 1.000000e+00, float %.03.i419, !dbg !58
  %536 = bitcast float %s.0.i420 to i32, !dbg !58
  %537 = bitcast float %348 to i32, !dbg !58
  %538 = and i32 %537, -2147483648, !dbg !58
  %539 = or i32 %538, %536, !dbg !58
  %540 = bitcast i32 %539 to float, !dbg !58
  br label %__nv_tanhf.exit433, !dbg !58

__internal_fmad.exit3.i422:                       ; preds = %__nv_tanhf.exit414
  %541 = fmul float %348, %348, !dbg !58
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i423 = icmp eq i32 %542, 0, !dbg !58
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #5, !dbg !58
  %544 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i424 = select i1 %.not1.i423, float %544, float %543, !dbg !58
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i425 = icmp eq i32 %545, 0, !dbg !58
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i424, float %541, float 0x3FC10B2820000000) #5, !dbg !58
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i424, float %541, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i426 = select i1 %.not2.i425, float %547, float %546, !dbg !58
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i427 = icmp eq i32 %548, 0, !dbg !58
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i426, float %541, float 0xBFD5553DA0000000) #5, !dbg !58
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i426, float %541, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i428 = select i1 %.not3.i427, float %550, float %549, !dbg !58
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i429 = icmp eq i32 %551, 0, !dbg !58
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i428, float %541, float 0.000000e+00) #5, !dbg !58
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i428, float %541, float 0.000000e+00) #5, !dbg !58
  %.04.i430 = select i1 %.not4.i429, float %553, float %552, !dbg !58
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i431 = icmp eq i32 %554, 0, !dbg !58
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i430, float %348, float %348) #5, !dbg !58
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i430, float %348, float %348) #5, !dbg !58
  %.02.i432 = select i1 %.not5.i431, float %556, float %555, !dbg !58
  br label %__nv_tanhf.exit433, !dbg !58

__nv_tanhf.exit433:                               ; preds = %__internal_fmad.exit1.i417, %__internal_fmad.exit3.i422
  %s.1.i421 = phi float [ %540, %__internal_fmad.exit1.i417 ], [ %.02.i432, %__internal_fmad.exit3.i422 ], !dbg !58
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i434 = icmp eq i32 %557, 0, !dbg !58
  %558 = tail call float @llvm.nvvm.fabs.ftz.f(float %349) #5, !dbg !58
  %559 = tail call float @llvm.nvvm.fabs.f(float %349) #5, !dbg !58
  %.01.i435 = select i1 %.not.i434, float %559, float %558, !dbg !58
  %560 = fcmp ult float %.01.i435, 0x3FE3333340000000, !dbg !58
  br i1 %560, label %__internal_fmad.exit3.i441, label %__internal_fmad.exit1.i436, !dbg !58

__internal_fmad.exit1.i436:                       ; preds = %__nv_tanhf.exit433
  %561 = fmul float %.01.i435, 0x4007154760000000, !dbg !58
  %562 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %561) #5, !dbg !58
  %563 = fadd float %562, 1.000000e+00, !dbg !58
  %564 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %563) #6, !dbg !58, !srcloc !59
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i437 = icmp eq i32 %565, 0, !dbg !58
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i438 = select i1 %.not6.i437, float %567, float %566, !dbg !58
  %568 = fcmp oge float %.01.i435, 0x4022059680000000, !dbg !58
  %s.0.i439 = select i1 %568, float 1.000000e+00, float %.03.i438, !dbg !58
  %569 = bitcast float %s.0.i439 to i32, !dbg !58
  %570 = bitcast float %349 to i32, !dbg !58
  %571 = and i32 %570, -2147483648, !dbg !58
  %572 = or i32 %571, %569, !dbg !58
  %573 = bitcast i32 %572 to float, !dbg !58
  br label %__nv_tanhf.exit452, !dbg !58

__internal_fmad.exit3.i441:                       ; preds = %__nv_tanhf.exit433
  %574 = fmul float %349, %349, !dbg !58
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i442 = icmp eq i32 %575, 0, !dbg !58
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #5, !dbg !58
  %577 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i443 = select i1 %.not1.i442, float %577, float %576, !dbg !58
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i444 = icmp eq i32 %578, 0, !dbg !58
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i443, float %574, float 0x3FC10B2820000000) #5, !dbg !58
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i443, float %574, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i445 = select i1 %.not2.i444, float %580, float %579, !dbg !58
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i446 = icmp eq i32 %581, 0, !dbg !58
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i445, float %574, float 0xBFD5553DA0000000) #5, !dbg !58
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i445, float %574, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i447 = select i1 %.not3.i446, float %583, float %582, !dbg !58
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i448 = icmp eq i32 %584, 0, !dbg !58
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i447, float %574, float 0.000000e+00) #5, !dbg !58
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i447, float %574, float 0.000000e+00) #5, !dbg !58
  %.04.i449 = select i1 %.not4.i448, float %586, float %585, !dbg !58
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i450 = icmp eq i32 %587, 0, !dbg !58
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i449, float %349, float %349) #5, !dbg !58
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i449, float %349, float %349) #5, !dbg !58
  %.02.i451 = select i1 %.not5.i450, float %589, float %588, !dbg !58
  br label %__nv_tanhf.exit452, !dbg !58

__nv_tanhf.exit452:                               ; preds = %__internal_fmad.exit1.i436, %__internal_fmad.exit3.i441
  %s.1.i440 = phi float [ %573, %__internal_fmad.exit1.i436 ], [ %.02.i451, %__internal_fmad.exit3.i441 ], !dbg !58
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i453 = icmp eq i32 %590, 0, !dbg !58
  %591 = tail call float @llvm.nvvm.fabs.ftz.f(float %350) #5, !dbg !58
  %592 = tail call float @llvm.nvvm.fabs.f(float %350) #5, !dbg !58
  %.01.i454 = select i1 %.not.i453, float %592, float %591, !dbg !58
  %593 = fcmp ult float %.01.i454, 0x3FE3333340000000, !dbg !58
  br i1 %593, label %__internal_fmad.exit3.i460, label %__internal_fmad.exit1.i455, !dbg !58

__internal_fmad.exit1.i455:                       ; preds = %__nv_tanhf.exit452
  %594 = fmul float %.01.i454, 0x4007154760000000, !dbg !58
  %595 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %594) #5, !dbg !58
  %596 = fadd float %595, 1.000000e+00, !dbg !58
  %597 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %596) #6, !dbg !58, !srcloc !59
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i456 = icmp eq i32 %598, 0, !dbg !58
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i457 = select i1 %.not6.i456, float %600, float %599, !dbg !58
  %601 = fcmp oge float %.01.i454, 0x4022059680000000, !dbg !58
  %s.0.i458 = select i1 %601, float 1.000000e+00, float %.03.i457, !dbg !58
  %602 = bitcast float %s.0.i458 to i32, !dbg !58
  %603 = bitcast float %350 to i32, !dbg !58
  %604 = and i32 %603, -2147483648, !dbg !58
  %605 = or i32 %604, %602, !dbg !58
  %606 = bitcast i32 %605 to float, !dbg !58
  br label %__nv_tanhf.exit471, !dbg !58

__internal_fmad.exit3.i460:                       ; preds = %__nv_tanhf.exit452
  %607 = fmul float %350, %350, !dbg !58
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i461 = icmp eq i32 %608, 0, !dbg !58
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #5, !dbg !58
  %610 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i462 = select i1 %.not1.i461, float %610, float %609, !dbg !58
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i463 = icmp eq i32 %611, 0, !dbg !58
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i462, float %607, float 0x3FC10B2820000000) #5, !dbg !58
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i462, float %607, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i464 = select i1 %.not2.i463, float %613, float %612, !dbg !58
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i465 = icmp eq i32 %614, 0, !dbg !58
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i464, float %607, float 0xBFD5553DA0000000) #5, !dbg !58
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i464, float %607, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i466 = select i1 %.not3.i465, float %616, float %615, !dbg !58
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i467 = icmp eq i32 %617, 0, !dbg !58
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i466, float %607, float 0.000000e+00) #5, !dbg !58
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i466, float %607, float 0.000000e+00) #5, !dbg !58
  %.04.i468 = select i1 %.not4.i467, float %619, float %618, !dbg !58
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i469 = icmp eq i32 %620, 0, !dbg !58
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i468, float %350, float %350) #5, !dbg !58
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i468, float %350, float %350) #5, !dbg !58
  %.02.i470 = select i1 %.not5.i469, float %622, float %621, !dbg !58
  br label %__nv_tanhf.exit471, !dbg !58

__nv_tanhf.exit471:                               ; preds = %__internal_fmad.exit1.i455, %__internal_fmad.exit3.i460
  %s.1.i459 = phi float [ %606, %__internal_fmad.exit1.i455 ], [ %.02.i470, %__internal_fmad.exit3.i460 ], !dbg !58
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i472 = icmp eq i32 %623, 0, !dbg !58
  %624 = tail call float @llvm.nvvm.fabs.ftz.f(float %351) #5, !dbg !58
  %625 = tail call float @llvm.nvvm.fabs.f(float %351) #5, !dbg !58
  %.01.i473 = select i1 %.not.i472, float %625, float %624, !dbg !58
  %626 = fcmp ult float %.01.i473, 0x3FE3333340000000, !dbg !58
  br i1 %626, label %__internal_fmad.exit3.i479, label %__internal_fmad.exit1.i474, !dbg !58

__internal_fmad.exit1.i474:                       ; preds = %__nv_tanhf.exit471
  %627 = fmul float %.01.i473, 0x4007154760000000, !dbg !58
  %628 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %627) #5, !dbg !58
  %629 = fadd float %628, 1.000000e+00, !dbg !58
  %630 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %629) #6, !dbg !58, !srcloc !59
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i475 = icmp eq i32 %631, 0, !dbg !58
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i476 = select i1 %.not6.i475, float %633, float %632, !dbg !58
  %634 = fcmp oge float %.01.i473, 0x4022059680000000, !dbg !58
  %s.0.i477 = select i1 %634, float 1.000000e+00, float %.03.i476, !dbg !58
  %635 = bitcast float %s.0.i477 to i32, !dbg !58
  %636 = bitcast float %351 to i32, !dbg !58
  %637 = and i32 %636, -2147483648, !dbg !58
  %638 = or i32 %637, %635, !dbg !58
  %639 = bitcast i32 %638 to float, !dbg !58
  br label %__nv_tanhf.exit490, !dbg !58

__internal_fmad.exit3.i479:                       ; preds = %__nv_tanhf.exit471
  %640 = fmul float %351, %351, !dbg !58
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i480 = icmp eq i32 %641, 0, !dbg !58
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #5, !dbg !58
  %643 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i481 = select i1 %.not1.i480, float %643, float %642, !dbg !58
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i482 = icmp eq i32 %644, 0, !dbg !58
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i481, float %640, float 0x3FC10B2820000000) #5, !dbg !58
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i481, float %640, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i483 = select i1 %.not2.i482, float %646, float %645, !dbg !58
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i484 = icmp eq i32 %647, 0, !dbg !58
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i483, float %640, float 0xBFD5553DA0000000) #5, !dbg !58
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i483, float %640, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i485 = select i1 %.not3.i484, float %649, float %648, !dbg !58
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i486 = icmp eq i32 %650, 0, !dbg !58
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i485, float %640, float 0.000000e+00) #5, !dbg !58
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i485, float %640, float 0.000000e+00) #5, !dbg !58
  %.04.i487 = select i1 %.not4.i486, float %652, float %651, !dbg !58
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i488 = icmp eq i32 %653, 0, !dbg !58
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i487, float %351, float %351) #5, !dbg !58
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i487, float %351, float %351) #5, !dbg !58
  %.02.i489 = select i1 %.not5.i488, float %655, float %654, !dbg !58
  br label %__nv_tanhf.exit490, !dbg !58

__nv_tanhf.exit490:                               ; preds = %__internal_fmad.exit1.i474, %__internal_fmad.exit3.i479
  %s.1.i478 = phi float [ %639, %__internal_fmad.exit1.i474 ], [ %.02.i489, %__internal_fmad.exit3.i479 ], !dbg !58
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i491 = icmp eq i32 %656, 0, !dbg !58
  %657 = tail call float @llvm.nvvm.fabs.ftz.f(float %352) #5, !dbg !58
  %658 = tail call float @llvm.nvvm.fabs.f(float %352) #5, !dbg !58
  %.01.i492 = select i1 %.not.i491, float %658, float %657, !dbg !58
  %659 = fcmp ult float %.01.i492, 0x3FE3333340000000, !dbg !58
  br i1 %659, label %__internal_fmad.exit3.i498, label %__internal_fmad.exit1.i493, !dbg !58

__internal_fmad.exit1.i493:                       ; preds = %__nv_tanhf.exit490
  %660 = fmul float %.01.i492, 0x4007154760000000, !dbg !58
  %661 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %660) #5, !dbg !58
  %662 = fadd float %661, 1.000000e+00, !dbg !58
  %663 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %662) #6, !dbg !58, !srcloc !59
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i494 = icmp eq i32 %664, 0, !dbg !58
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %666 = tail call float @llvm.nvvm.fma.rn.f(float %663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i495 = select i1 %.not6.i494, float %666, float %665, !dbg !58
  %667 = fcmp oge float %.01.i492, 0x4022059680000000, !dbg !58
  %s.0.i496 = select i1 %667, float 1.000000e+00, float %.03.i495, !dbg !58
  %668 = bitcast float %s.0.i496 to i32, !dbg !58
  %669 = bitcast float %352 to i32, !dbg !58
  %670 = and i32 %669, -2147483648, !dbg !58
  %671 = or i32 %670, %668, !dbg !58
  %672 = bitcast i32 %671 to float, !dbg !58
  br label %__nv_tanhf.exit509, !dbg !58

__internal_fmad.exit3.i498:                       ; preds = %__nv_tanhf.exit490
  %673 = fmul float %352, %352, !dbg !58
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i499 = icmp eq i32 %674, 0, !dbg !58
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #5, !dbg !58
  %676 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i500 = select i1 %.not1.i499, float %676, float %675, !dbg !58
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i501 = icmp eq i32 %677, 0, !dbg !58
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i500, float %673, float 0x3FC10B2820000000) #5, !dbg !58
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i500, float %673, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i502 = select i1 %.not2.i501, float %679, float %678, !dbg !58
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i503 = icmp eq i32 %680, 0, !dbg !58
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i502, float %673, float 0xBFD5553DA0000000) #5, !dbg !58
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i502, float %673, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i504 = select i1 %.not3.i503, float %682, float %681, !dbg !58
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i505 = icmp eq i32 %683, 0, !dbg !58
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i504, float %673, float 0.000000e+00) #5, !dbg !58
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i504, float %673, float 0.000000e+00) #5, !dbg !58
  %.04.i506 = select i1 %.not4.i505, float %685, float %684, !dbg !58
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i507 = icmp eq i32 %686, 0, !dbg !58
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i506, float %352, float %352) #5, !dbg !58
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i506, float %352, float %352) #5, !dbg !58
  %.02.i508 = select i1 %.not5.i507, float %688, float %687, !dbg !58
  br label %__nv_tanhf.exit509, !dbg !58

__nv_tanhf.exit509:                               ; preds = %__internal_fmad.exit1.i493, %__internal_fmad.exit3.i498
  %s.1.i497 = phi float [ %672, %__internal_fmad.exit1.i493 ], [ %.02.i508, %__internal_fmad.exit3.i498 ], !dbg !58
  %689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i510 = icmp eq i32 %689, 0, !dbg !58
  %690 = tail call float @llvm.nvvm.fabs.ftz.f(float %353) #5, !dbg !58
  %691 = tail call float @llvm.nvvm.fabs.f(float %353) #5, !dbg !58
  %.01.i511 = select i1 %.not.i510, float %691, float %690, !dbg !58
  %692 = fcmp ult float %.01.i511, 0x3FE3333340000000, !dbg !58
  br i1 %692, label %__internal_fmad.exit3.i517, label %__internal_fmad.exit1.i512, !dbg !58

__internal_fmad.exit1.i512:                       ; preds = %__nv_tanhf.exit509
  %693 = fmul float %.01.i511, 0x4007154760000000, !dbg !58
  %694 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %693) #5, !dbg !58
  %695 = fadd float %694, 1.000000e+00, !dbg !58
  %696 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %695) #6, !dbg !58, !srcloc !59
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i513 = icmp eq i32 %697, 0, !dbg !58
  %698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %699 = tail call float @llvm.nvvm.fma.rn.f(float %696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i514 = select i1 %.not6.i513, float %699, float %698, !dbg !58
  %700 = fcmp oge float %.01.i511, 0x4022059680000000, !dbg !58
  %s.0.i515 = select i1 %700, float 1.000000e+00, float %.03.i514, !dbg !58
  %701 = bitcast float %s.0.i515 to i32, !dbg !58
  %702 = bitcast float %353 to i32, !dbg !58
  %703 = and i32 %702, -2147483648, !dbg !58
  %704 = or i32 %703, %701, !dbg !58
  %705 = bitcast i32 %704 to float, !dbg !58
  br label %__nv_tanhf.exit528, !dbg !58

__internal_fmad.exit3.i517:                       ; preds = %__nv_tanhf.exit509
  %706 = fmul float %353, %353, !dbg !58
  %707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i518 = icmp eq i32 %707, 0, !dbg !58
  %708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %706, float 0xBFAAC795C0000000) #5, !dbg !58
  %709 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %706, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i519 = select i1 %.not1.i518, float %709, float %708, !dbg !58
  %710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i520 = icmp eq i32 %710, 0, !dbg !58
  %711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i519, float %706, float 0x3FC10B2820000000) #5, !dbg !58
  %712 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i519, float %706, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i521 = select i1 %.not2.i520, float %712, float %711, !dbg !58
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i522 = icmp eq i32 %713, 0, !dbg !58
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i521, float %706, float 0xBFD5553DA0000000) #5, !dbg !58
  %715 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i521, float %706, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i523 = select i1 %.not3.i522, float %715, float %714, !dbg !58
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i524 = icmp eq i32 %716, 0, !dbg !58
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i523, float %706, float 0.000000e+00) #5, !dbg !58
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i523, float %706, float 0.000000e+00) #5, !dbg !58
  %.04.i525 = select i1 %.not4.i524, float %718, float %717, !dbg !58
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i526 = icmp eq i32 %719, 0, !dbg !58
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i525, float %353, float %353) #5, !dbg !58
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i525, float %353, float %353) #5, !dbg !58
  %.02.i527 = select i1 %.not5.i526, float %721, float %720, !dbg !58
  br label %__nv_tanhf.exit528, !dbg !58

__nv_tanhf.exit528:                               ; preds = %__internal_fmad.exit1.i512, %__internal_fmad.exit3.i517
  %s.1.i516 = phi float [ %705, %__internal_fmad.exit1.i512 ], [ %.02.i527, %__internal_fmad.exit3.i517 ], !dbg !58
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i529 = icmp eq i32 %722, 0, !dbg !58
  %723 = tail call float @llvm.nvvm.fabs.ftz.f(float %354) #5, !dbg !58
  %724 = tail call float @llvm.nvvm.fabs.f(float %354) #5, !dbg !58
  %.01.i530 = select i1 %.not.i529, float %724, float %723, !dbg !58
  %725 = fcmp ult float %.01.i530, 0x3FE3333340000000, !dbg !58
  br i1 %725, label %__internal_fmad.exit3.i536, label %__internal_fmad.exit1.i531, !dbg !58

__internal_fmad.exit1.i531:                       ; preds = %__nv_tanhf.exit528
  %726 = fmul float %.01.i530, 0x4007154760000000, !dbg !58
  %727 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %726) #5, !dbg !58
  %728 = fadd float %727, 1.000000e+00, !dbg !58
  %729 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %728) #6, !dbg !58, !srcloc !59
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i532 = icmp eq i32 %730, 0, !dbg !58
  %731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %732 = tail call float @llvm.nvvm.fma.rn.f(float %729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i533 = select i1 %.not6.i532, float %732, float %731, !dbg !58
  %733 = fcmp oge float %.01.i530, 0x4022059680000000, !dbg !58
  %s.0.i534 = select i1 %733, float 1.000000e+00, float %.03.i533, !dbg !58
  %734 = bitcast float %s.0.i534 to i32, !dbg !58
  %735 = bitcast float %354 to i32, !dbg !58
  %736 = and i32 %735, -2147483648, !dbg !58
  %737 = or i32 %736, %734, !dbg !58
  %738 = bitcast i32 %737 to float, !dbg !58
  br label %__nv_tanhf.exit547, !dbg !58

__internal_fmad.exit3.i536:                       ; preds = %__nv_tanhf.exit528
  %739 = fmul float %354, %354, !dbg !58
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i537 = icmp eq i32 %740, 0, !dbg !58
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %739, float 0xBFAAC795C0000000) #5, !dbg !58
  %742 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %739, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i538 = select i1 %.not1.i537, float %742, float %741, !dbg !58
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i539 = icmp eq i32 %743, 0, !dbg !58
  %744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i538, float %739, float 0x3FC10B2820000000) #5, !dbg !58
  %745 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i538, float %739, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i540 = select i1 %.not2.i539, float %745, float %744, !dbg !58
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i541 = icmp eq i32 %746, 0, !dbg !58
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i540, float %739, float 0xBFD5553DA0000000) #5, !dbg !58
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i540, float %739, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i542 = select i1 %.not3.i541, float %748, float %747, !dbg !58
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i543 = icmp eq i32 %749, 0, !dbg !58
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i542, float %739, float 0.000000e+00) #5, !dbg !58
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i542, float %739, float 0.000000e+00) #5, !dbg !58
  %.04.i544 = select i1 %.not4.i543, float %751, float %750, !dbg !58
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i545 = icmp eq i32 %752, 0, !dbg !58
  %753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i544, float %354, float %354) #5, !dbg !58
  %754 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i544, float %354, float %354) #5, !dbg !58
  %.02.i546 = select i1 %.not5.i545, float %754, float %753, !dbg !58
  br label %__nv_tanhf.exit547, !dbg !58

__nv_tanhf.exit547:                               ; preds = %__internal_fmad.exit1.i531, %__internal_fmad.exit3.i536
  %s.1.i535 = phi float [ %738, %__internal_fmad.exit1.i531 ], [ %.02.i546, %__internal_fmad.exit3.i536 ], !dbg !58
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i548 = icmp eq i32 %755, 0, !dbg !58
  %756 = tail call float @llvm.nvvm.fabs.ftz.f(float %355) #5, !dbg !58
  %757 = tail call float @llvm.nvvm.fabs.f(float %355) #5, !dbg !58
  %.01.i549 = select i1 %.not.i548, float %757, float %756, !dbg !58
  %758 = fcmp ult float %.01.i549, 0x3FE3333340000000, !dbg !58
  br i1 %758, label %__internal_fmad.exit3.i555, label %__internal_fmad.exit1.i550, !dbg !58

__internal_fmad.exit1.i550:                       ; preds = %__nv_tanhf.exit547
  %759 = fmul float %.01.i549, 0x4007154760000000, !dbg !58
  %760 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %759) #5, !dbg !58
  %761 = fadd float %760, 1.000000e+00, !dbg !58
  %762 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %761) #6, !dbg !58, !srcloc !59
  %763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i551 = icmp eq i32 %763, 0, !dbg !58
  %764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %765 = tail call float @llvm.nvvm.fma.rn.f(float %762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i552 = select i1 %.not6.i551, float %765, float %764, !dbg !58
  %766 = fcmp oge float %.01.i549, 0x4022059680000000, !dbg !58
  %s.0.i553 = select i1 %766, float 1.000000e+00, float %.03.i552, !dbg !58
  %767 = bitcast float %s.0.i553 to i32, !dbg !58
  %768 = bitcast float %355 to i32, !dbg !58
  %769 = and i32 %768, -2147483648, !dbg !58
  %770 = or i32 %769, %767, !dbg !58
  %771 = bitcast i32 %770 to float, !dbg !58
  br label %__nv_tanhf.exit566, !dbg !58

__internal_fmad.exit3.i555:                       ; preds = %__nv_tanhf.exit547
  %772 = fmul float %355, %355, !dbg !58
  %773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i556 = icmp eq i32 %773, 0, !dbg !58
  %774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %772, float 0xBFAAC795C0000000) #5, !dbg !58
  %775 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %772, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i557 = select i1 %.not1.i556, float %775, float %774, !dbg !58
  %776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i558 = icmp eq i32 %776, 0, !dbg !58
  %777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i557, float %772, float 0x3FC10B2820000000) #5, !dbg !58
  %778 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i557, float %772, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i559 = select i1 %.not2.i558, float %778, float %777, !dbg !58
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i560 = icmp eq i32 %779, 0, !dbg !58
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i559, float %772, float 0xBFD5553DA0000000) #5, !dbg !58
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i559, float %772, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i561 = select i1 %.not3.i560, float %781, float %780, !dbg !58
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i562 = icmp eq i32 %782, 0, !dbg !58
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i561, float %772, float 0.000000e+00) #5, !dbg !58
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i561, float %772, float 0.000000e+00) #5, !dbg !58
  %.04.i563 = select i1 %.not4.i562, float %784, float %783, !dbg !58
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i564 = icmp eq i32 %785, 0, !dbg !58
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i563, float %355, float %355) #5, !dbg !58
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i563, float %355, float %355) #5, !dbg !58
  %.02.i565 = select i1 %.not5.i564, float %787, float %786, !dbg !58
  br label %__nv_tanhf.exit566, !dbg !58

__nv_tanhf.exit566:                               ; preds = %__internal_fmad.exit1.i550, %__internal_fmad.exit3.i555
  %s.1.i554 = phi float [ %771, %__internal_fmad.exit1.i550 ], [ %.02.i565, %__internal_fmad.exit3.i555 ], !dbg !58
  %788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i567 = icmp eq i32 %788, 0, !dbg !58
  %789 = tail call float @llvm.nvvm.fabs.ftz.f(float %356) #5, !dbg !58
  %790 = tail call float @llvm.nvvm.fabs.f(float %356) #5, !dbg !58
  %.01.i568 = select i1 %.not.i567, float %790, float %789, !dbg !58
  %791 = fcmp ult float %.01.i568, 0x3FE3333340000000, !dbg !58
  br i1 %791, label %__internal_fmad.exit3.i574, label %__internal_fmad.exit1.i569, !dbg !58

__internal_fmad.exit1.i569:                       ; preds = %__nv_tanhf.exit566
  %792 = fmul float %.01.i568, 0x4007154760000000, !dbg !58
  %793 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %792) #5, !dbg !58
  %794 = fadd float %793, 1.000000e+00, !dbg !58
  %795 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %794) #6, !dbg !58, !srcloc !59
  %796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i570 = icmp eq i32 %796, 0, !dbg !58
  %797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %798 = tail call float @llvm.nvvm.fma.rn.f(float %795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i571 = select i1 %.not6.i570, float %798, float %797, !dbg !58
  %799 = fcmp oge float %.01.i568, 0x4022059680000000, !dbg !58
  %s.0.i572 = select i1 %799, float 1.000000e+00, float %.03.i571, !dbg !58
  %800 = bitcast float %s.0.i572 to i32, !dbg !58
  %801 = bitcast float %356 to i32, !dbg !58
  %802 = and i32 %801, -2147483648, !dbg !58
  %803 = or i32 %802, %800, !dbg !58
  %804 = bitcast i32 %803 to float, !dbg !58
  br label %__nv_tanhf.exit585, !dbg !58

__internal_fmad.exit3.i574:                       ; preds = %__nv_tanhf.exit566
  %805 = fmul float %356, %356, !dbg !58
  %806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i575 = icmp eq i32 %806, 0, !dbg !58
  %807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %805, float 0xBFAAC795C0000000) #5, !dbg !58
  %808 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %805, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i576 = select i1 %.not1.i575, float %808, float %807, !dbg !58
  %809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i577 = icmp eq i32 %809, 0, !dbg !58
  %810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i576, float %805, float 0x3FC10B2820000000) #5, !dbg !58
  %811 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i576, float %805, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i578 = select i1 %.not2.i577, float %811, float %810, !dbg !58
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i579 = icmp eq i32 %812, 0, !dbg !58
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i578, float %805, float 0xBFD5553DA0000000) #5, !dbg !58
  %814 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i578, float %805, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i580 = select i1 %.not3.i579, float %814, float %813, !dbg !58
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i581 = icmp eq i32 %815, 0, !dbg !58
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i580, float %805, float 0.000000e+00) #5, !dbg !58
  %817 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i580, float %805, float 0.000000e+00) #5, !dbg !58
  %.04.i582 = select i1 %.not4.i581, float %817, float %816, !dbg !58
  %818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i583 = icmp eq i32 %818, 0, !dbg !58
  %819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i582, float %356, float %356) #5, !dbg !58
  %820 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i582, float %356, float %356) #5, !dbg !58
  %.02.i584 = select i1 %.not5.i583, float %820, float %819, !dbg !58
  br label %__nv_tanhf.exit585, !dbg !58

__nv_tanhf.exit585:                               ; preds = %__internal_fmad.exit1.i569, %__internal_fmad.exit3.i574
  %s.1.i573 = phi float [ %804, %__internal_fmad.exit1.i569 ], [ %.02.i584, %__internal_fmad.exit3.i574 ], !dbg !58
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i586 = icmp eq i32 %821, 0, !dbg !58
  %822 = tail call float @llvm.nvvm.fabs.ftz.f(float %357) #5, !dbg !58
  %823 = tail call float @llvm.nvvm.fabs.f(float %357) #5, !dbg !58
  %.01.i587 = select i1 %.not.i586, float %823, float %822, !dbg !58
  %824 = fcmp ult float %.01.i587, 0x3FE3333340000000, !dbg !58
  br i1 %824, label %__internal_fmad.exit3.i593, label %__internal_fmad.exit1.i588, !dbg !58

__internal_fmad.exit1.i588:                       ; preds = %__nv_tanhf.exit585
  %825 = fmul float %.01.i587, 0x4007154760000000, !dbg !58
  %826 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %825) #5, !dbg !58
  %827 = fadd float %826, 1.000000e+00, !dbg !58
  %828 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %827) #6, !dbg !58, !srcloc !59
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i589 = icmp eq i32 %829, 0, !dbg !58
  %830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %831 = tail call float @llvm.nvvm.fma.rn.f(float %828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i590 = select i1 %.not6.i589, float %831, float %830, !dbg !58
  %832 = fcmp oge float %.01.i587, 0x4022059680000000, !dbg !58
  %s.0.i591 = select i1 %832, float 1.000000e+00, float %.03.i590, !dbg !58
  %833 = bitcast float %s.0.i591 to i32, !dbg !58
  %834 = bitcast float %357 to i32, !dbg !58
  %835 = and i32 %834, -2147483648, !dbg !58
  %836 = or i32 %835, %833, !dbg !58
  %837 = bitcast i32 %836 to float, !dbg !58
  br label %__nv_tanhf.exit604, !dbg !58

__internal_fmad.exit3.i593:                       ; preds = %__nv_tanhf.exit585
  %838 = fmul float %357, %357, !dbg !58
  %839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i594 = icmp eq i32 %839, 0, !dbg !58
  %840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %838, float 0xBFAAC795C0000000) #5, !dbg !58
  %841 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %838, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i595 = select i1 %.not1.i594, float %841, float %840, !dbg !58
  %842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i596 = icmp eq i32 %842, 0, !dbg !58
  %843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i595, float %838, float 0x3FC10B2820000000) #5, !dbg !58
  %844 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i595, float %838, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i597 = select i1 %.not2.i596, float %844, float %843, !dbg !58
  %845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i598 = icmp eq i32 %845, 0, !dbg !58
  %846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i597, float %838, float 0xBFD5553DA0000000) #5, !dbg !58
  %847 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i597, float %838, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i599 = select i1 %.not3.i598, float %847, float %846, !dbg !58
  %848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i600 = icmp eq i32 %848, 0, !dbg !58
  %849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i599, float %838, float 0.000000e+00) #5, !dbg !58
  %850 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i599, float %838, float 0.000000e+00) #5, !dbg !58
  %.04.i601 = select i1 %.not4.i600, float %850, float %849, !dbg !58
  %851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i602 = icmp eq i32 %851, 0, !dbg !58
  %852 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i601, float %357, float %357) #5, !dbg !58
  %853 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i601, float %357, float %357) #5, !dbg !58
  %.02.i603 = select i1 %.not5.i602, float %853, float %852, !dbg !58
  br label %__nv_tanhf.exit604, !dbg !58

__nv_tanhf.exit604:                               ; preds = %__internal_fmad.exit1.i588, %__internal_fmad.exit3.i593
  %s.1.i592 = phi float [ %837, %__internal_fmad.exit1.i588 ], [ %.02.i603, %__internal_fmad.exit3.i593 ], !dbg !58
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not.i605 = icmp eq i32 %854, 0, !dbg !58
  %855 = tail call float @llvm.nvvm.fabs.ftz.f(float %358) #5, !dbg !58
  %856 = tail call float @llvm.nvvm.fabs.f(float %358) #5, !dbg !58
  %.01.i606 = select i1 %.not.i605, float %856, float %855, !dbg !58
  %857 = fcmp ult float %.01.i606, 0x3FE3333340000000, !dbg !58
  br i1 %857, label %__internal_fmad.exit3.i612, label %__internal_fmad.exit1.i607, !dbg !58

__internal_fmad.exit1.i607:                       ; preds = %__nv_tanhf.exit604
  %858 = fmul float %.01.i606, 0x4007154760000000, !dbg !58
  %859 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %858) #5, !dbg !58
  %860 = fadd float %859, 1.000000e+00, !dbg !58
  %861 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %860) #6, !dbg !58, !srcloc !59
  %862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not6.i608 = icmp eq i32 %862, 0, !dbg !58
  %863 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %864 = tail call float @llvm.nvvm.fma.rn.f(float %861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !58
  %.03.i609 = select i1 %.not6.i608, float %864, float %863, !dbg !58
  %865 = fcmp oge float %.01.i606, 0x4022059680000000, !dbg !58
  %s.0.i610 = select i1 %865, float 1.000000e+00, float %.03.i609, !dbg !58
  %866 = bitcast float %s.0.i610 to i32, !dbg !58
  %867 = bitcast float %358 to i32, !dbg !58
  %868 = and i32 %867, -2147483648, !dbg !58
  %869 = or i32 %868, %866, !dbg !58
  %870 = bitcast i32 %869 to float, !dbg !58
  br label %__nv_tanhf.exit623, !dbg !58

__internal_fmad.exit3.i612:                       ; preds = %__nv_tanhf.exit604
  %871 = fmul float %358, %358, !dbg !58
  %872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not1.i613 = icmp eq i32 %872, 0, !dbg !58
  %873 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %871, float 0xBFAAC795C0000000) #5, !dbg !58
  %874 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %871, float 0xBFAAC795C0000000) #5, !dbg !58
  %.06.i614 = select i1 %.not1.i613, float %874, float %873, !dbg !58
  %875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not2.i615 = icmp eq i32 %875, 0, !dbg !58
  %876 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i614, float %871, float 0x3FC10B2820000000) #5, !dbg !58
  %877 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i614, float %871, float 0x3FC10B2820000000) #5, !dbg !58
  %.05.i616 = select i1 %.not2.i615, float %877, float %876, !dbg !58
  %878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not3.i617 = icmp eq i32 %878, 0, !dbg !58
  %879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i616, float %871, float 0xBFD5553DA0000000) #5, !dbg !58
  %880 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i616, float %871, float 0xBFD5553DA0000000) #5, !dbg !58
  %.0.i618 = select i1 %.not3.i617, float %880, float %879, !dbg !58
  %881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not4.i619 = icmp eq i32 %881, 0, !dbg !58
  %882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i618, float %871, float 0.000000e+00) #5, !dbg !58
  %883 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i618, float %871, float 0.000000e+00) #5, !dbg !58
  %.04.i620 = select i1 %.not4.i619, float %883, float %882, !dbg !58
  %884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !58
  %.not5.i621 = icmp eq i32 %884, 0, !dbg !58
  %885 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i620, float %358, float %358) #5, !dbg !58
  %886 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i620, float %358, float %358) #5, !dbg !58
  %.02.i622 = select i1 %.not5.i621, float %886, float %885, !dbg !58
  br label %__nv_tanhf.exit623, !dbg !58

__nv_tanhf.exit623:                               ; preds = %__internal_fmad.exit1.i607, %__internal_fmad.exit3.i612
  %s.1.i611 = phi float [ %870, %__internal_fmad.exit1.i607 ], [ %.02.i622, %__internal_fmad.exit3.i612 ], !dbg !58
  %887 = insertelement <2 x float> poison, float %s.1.i326, i64 0, !dbg !60
  %888 = insertelement <2 x float> %887, float %s.1.i345, i64 1, !dbg !60
  %889 = fadd <2 x float> %888, splat (float 1.000000e+00), !dbg !60
  %890 = insertelement <2 x float> poison, float %s.1.i364, i64 0, !dbg !60
  %891 = insertelement <2 x float> %890, float %s.1.i383, i64 1, !dbg !60
  %892 = fadd <2 x float> %891, splat (float 1.000000e+00), !dbg !60
  %893 = insertelement <4 x float> poison, float %s.1.i459, i64 0, !dbg !60
  %894 = insertelement <4 x float> %893, float %s.1.i440, i64 1, !dbg !60
  %895 = insertelement <4 x float> %894, float %s.1.i421, i64 2, !dbg !60
  %896 = insertelement <4 x float> %895, float %s.1.i402, i64 3, !dbg !60
  %897 = fadd <4 x float> %896, splat (float 1.000000e+00), !dbg !60
  %898 = insertelement <8 x float> poison, float %s.1.i611, i64 0, !dbg !60
  %899 = insertelement <8 x float> %898, float %s.1.i592, i64 1, !dbg !60
  %900 = insertelement <8 x float> %899, float %s.1.i573, i64 2, !dbg !60
  %901 = insertelement <8 x float> %900, float %s.1.i554, i64 3, !dbg !60
  %902 = insertelement <8 x float> %901, float %s.1.i535, i64 4, !dbg !60
  %903 = insertelement <8 x float> %902, float %s.1.i516, i64 5, !dbg !60
  %904 = insertelement <8 x float> %903, float %s.1.i497, i64 6, !dbg !60
  %905 = insertelement <8 x float> %904, float %s.1.i478, i64 7, !dbg !60
  %906 = fadd <8 x float> %905, splat (float 1.000000e+00), !dbg !60
  %907 = fmul <2 x float> %260, %892, !dbg !61
  %908 = fcmp uno float %111, 0.000000e+00, !dbg !62
  %909 = fcmp uno float %112, 0.000000e+00, !dbg !62
  %910 = fcmp uno <8 x float> %117, zeroinitializer, !dbg !64
  %911 = fcmp uno <8 x float> %114, zeroinitializer, !dbg !62
  %912 = fmul <8 x float> %262, %906, !dbg !61
  %913 = fcmp olt <8 x float> %114, %912, !dbg !66
  %914 = or <8 x i1> %911, %913, !dbg !67
  %915 = select <8 x i1> %914, <8 x float> %114, <8 x float> %912, !dbg !68
  %916 = select <8 x i1> %103, <8 x float> %915, <8 x float> %114, !dbg !38
  %917 = fcmp uno <2 x float> %113, zeroinitializer, !dbg !64
  %918 = fcmp uno <4 x float> %116, zeroinitializer, !dbg !64
  %919 = fcmp uno <8 x float> %115, zeroinitializer, !dbg !64
  %920 = fmul <2 x float> %259, %889, !dbg !61
  %921 = extractelement <2 x float> %920, i64 0, !dbg !68
  %922 = fcmp olt float %111, %921, !dbg !66
  %923 = extractelement <2 x float> %920, i64 1, !dbg !68
  %924 = fcmp olt float %112, %923, !dbg !66
  %925 = or i1 %908, %922, !dbg !67
  %926 = or i1 %909, %924, !dbg !67
  %927 = select i1 %925, float %111, float %921, !dbg !68
  %928 = select i1 %926, float %112, float %923, !dbg !68
  %929 = select i1 %14, float %927, float %111, !dbg !38
  %930 = select i1 %14, float %928, float %112, !dbg !38
  %931 = fcmp ogt <2 x float> %113, %920, !dbg !69
  %932 = or <2 x i1> %917, %931, !dbg !70
  %933 = select <2 x i1> %932, <2 x float> %113, <2 x float> %920, !dbg !71
  %934 = fmul <4 x float> %261, %897, !dbg !61
  %935 = shufflevector <4 x float> %934, <4 x float> poison, <8 x i32> <i32 poison, i32 poison, i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison>, !dbg !69
  %936 = shufflevector <2 x float> %907, <2 x float> poison, <8 x i32> <i32 1, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %937 = shufflevector <8 x float> %936, <8 x float> %935, <8 x i32> <i32 0, i32 1, i32 10, i32 11, i32 12, i32 13, i32 0, i32 1>, !dbg !69
  %938 = fcmp ogt <8 x float> %117, %937, !dbg !69
  %939 = fcmp olt <8 x float> %117, %937, !dbg !69
  %940 = shufflevector <8 x i1> %938, <8 x i1> %939, <8 x i32> <i32 0, i32 1, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !69
  %941 = or <8 x i1> %910, %940, !dbg !70
  %942 = select <8 x i1> %941, <8 x float> %117, <8 x float> %937, !dbg !71
  %943 = fcmp ogt <4 x float> %116, %934, !dbg !69
  %944 = or <4 x i1> %918, %943, !dbg !70
  %945 = select <4 x i1> %944, <4 x float> %116, <4 x float> %934, !dbg !71
  %946 = fcmp ogt <8 x float> %115, %912, !dbg !69
  %947 = or <8 x i1> %919, %946, !dbg !70
  %948 = select <8 x i1> %947, <8 x float> %115, <8 x float> %912, !dbg !71
  %949 = select <2 x i1> %99, <2 x float> %933, <2 x float> %113, !dbg !36
  %950 = select <8 x i1> %103, <8 x float> %942, <8 x float> %117, !dbg !36
  %951 = select <4 x i1> %107, <4 x float> %945, <4 x float> %116, !dbg !36
  %952 = select <8 x i1> %103, <8 x float> %948, <8 x float> %115, !dbg !36
  %953 = sext i32 %127 to i64, !dbg !72
  %954 = getelementptr float, ptr addrspace(1) %5, i64 %953, !dbg !72
  %955 = sext i32 %128 to i64, !dbg !72
  %956 = getelementptr float, ptr addrspace(1) %5, i64 %955, !dbg !72
  %957 = sext i32 %129 to i64, !dbg !72
  %958 = getelementptr float, ptr addrspace(1) %5, i64 %957, !dbg !72
  %959 = sext i32 %130 to i64, !dbg !72
  %960 = getelementptr float, ptr addrspace(1) %5, i64 %959, !dbg !72
  tail call void @llvm.nvvm.barrier0(), !dbg !73
  %961 = bitcast float %263 to i32, !dbg !73
  %962 = bitcast float %265 to i32, !dbg !73
  %963 = bitcast float %267 to i32, !dbg !73
  %964 = bitcast float %269 to i32, !dbg !73
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %85, i32 %961, i32 %962, i32 %963, i32 %964, i1 true) #5, !dbg !73
  %965 = bitcast float %271 to i32, !dbg !73
  %966 = bitcast float %273 to i32, !dbg !73
  %967 = bitcast float %275 to i32, !dbg !73
  %968 = bitcast float %277 to i32, !dbg !73
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %86, i32 %965, i32 %966, i32 %967, i32 %968, i1 true) #5, !dbg !73
  %969 = bitcast float %279 to i32, !dbg !73
  %970 = bitcast float %281 to i32, !dbg !73
  %971 = bitcast float %283 to i32, !dbg !73
  %972 = bitcast float %285 to i32, !dbg !73
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %87, i32 %969, i32 %970, i32 %971, i32 %972, i1 true) #5, !dbg !73
  %973 = bitcast float %287 to i32, !dbg !73
  %974 = bitcast float %289 to i32, !dbg !73
  %975 = bitcast float %291 to i32, !dbg !73
  %976 = bitcast float %293 to i32, !dbg !73
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) nonnull %88, i32 %973, i32 %974, i32 %975, i32 %976, i1 true) #5, !dbg !73
  tail call void @llvm.nvvm.barrier0(), !dbg !73
  %977 = load <4 x i32>, ptr addrspace(3) %90, align 16, !dbg !73
  %978 = load <4 x i32>, ptr addrspace(3) %91, align 16, !dbg !73
  %979 = load <4 x i32>, ptr addrspace(3) %92, align 16, !dbg !73
  %.extract = load i32, ptr addrspace(3) %89, align 16, !dbg !73
  %.extract20 = load i32, ptr addrspace(3) %95, align 4, !dbg !73
  %.extract21 = load i32, ptr addrspace(3) %96, align 8, !dbg !73
  %.extract22 = load i32, ptr addrspace(3) %97, align 4, !dbg !73
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract20, i32 %.extract21, i32 %.extract22, ptr addrspace(1) %954, i1 %14) #5, !dbg !73
  %.extract23 = extractelement <4 x i32> %977, i64 0, !dbg !73
  %.extract24 = extractelement <4 x i32> %977, i64 1, !dbg !73
  %.extract25 = extractelement <4 x i32> %977, i64 2, !dbg !73
  %.extract26 = extractelement <4 x i32> %977, i64 3, !dbg !73
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract23, i32 %.extract24, i32 %.extract25, i32 %.extract26, ptr addrspace(1) %956, i1 %14) #5, !dbg !73
  %.extract27 = extractelement <4 x i32> %978, i64 0, !dbg !73
  %.extract28 = extractelement <4 x i32> %978, i64 1, !dbg !73
  %.extract29 = extractelement <4 x i32> %978, i64 2, !dbg !73
  %.extract30 = extractelement <4 x i32> %978, i64 3, !dbg !73
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract27, i32 %.extract28, i32 %.extract29, i32 %.extract30, ptr addrspace(1) %958, i1 %14) #5, !dbg !73
  %.extract31 = extractelement <4 x i32> %979, i64 0, !dbg !73
  %.extract32 = extractelement <4 x i32> %979, i64 1, !dbg !73
  %.extract33 = extractelement <4 x i32> %979, i64 2, !dbg !73
  %.extract34 = extractelement <4 x i32> %979, i64 3, !dbg !73
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract31, i32 %.extract32, i32 %.extract33, i32 %.extract34, ptr addrspace(1) %960, i1 %14) #5, !dbg !73
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4096, !dbg !35
  %980 = icmp samesign ult i64 %indvars.iv, 8192, !dbg !35
  br i1 %980, label %110, label %981, !dbg !35

981:                                              ; preds = %__nv_tanhf.exit623
  %982 = lshr i32 %15, 5, !dbg !11
  tail call void @llvm.nvvm.barrier0(), !dbg !74
  %983 = fcmp olt float %929, %930, !dbg !76
  %984 = fcmp uno float %929, 0.000000e+00, !dbg !78
  %985 = or i1 %983, %984, !dbg !79
  %986 = select i1 %985, float %929, float %930, !dbg !80
  %987 = extractelement <8 x float> %950, i64 7, !dbg !76
  %988 = fcmp olt float %986, %987, !dbg !76
  %989 = fcmp uno float %986, 0.000000e+00, !dbg !78
  %990 = or i1 %988, %989, !dbg !79
  %991 = select i1 %990, float %986, float %987, !dbg !80
  %992 = extractelement <8 x float> %950, i64 6, !dbg !76
  %993 = fcmp olt float %991, %992, !dbg !76
  %994 = fcmp uno float %991, 0.000000e+00, !dbg !78
  %995 = or i1 %993, %994, !dbg !79
  %996 = select i1 %995, float %991, float %992, !dbg !80
  %997 = extractelement <8 x float> %950, i64 5, !dbg !76
  %998 = fcmp olt float %996, %997, !dbg !76
  %999 = fcmp uno float %996, 0.000000e+00, !dbg !78
  %1000 = or i1 %998, %999, !dbg !79
  %1001 = select i1 %1000, float %996, float %997, !dbg !80
  %1002 = extractelement <8 x float> %950, i64 4, !dbg !76
  %1003 = fcmp olt float %1001, %1002, !dbg !76
  %1004 = fcmp uno float %1001, 0.000000e+00, !dbg !78
  %1005 = or i1 %1003, %1004, !dbg !79
  %1006 = select i1 %1005, float %1001, float %1002, !dbg !80
  %1007 = extractelement <8 x float> %950, i64 3, !dbg !76
  %1008 = fcmp olt float %1006, %1007, !dbg !76
  %1009 = fcmp uno float %1006, 0.000000e+00, !dbg !78
  %1010 = or i1 %1008, %1009, !dbg !79
  %1011 = select i1 %1010, float %1006, float %1007, !dbg !80
  %1012 = extractelement <8 x float> %950, i64 2, !dbg !76
  %1013 = fcmp olt float %1011, %1012, !dbg !76
  %1014 = fcmp uno float %1011, 0.000000e+00, !dbg !78
  %1015 = or i1 %1013, %1014, !dbg !79
  %1016 = select i1 %1015, float %1011, float %1012, !dbg !80
  %1017 = extractelement <8 x float> %916, i64 7, !dbg !76
  %1018 = fcmp olt float %1016, %1017, !dbg !76
  %1019 = fcmp uno float %1016, 0.000000e+00, !dbg !78
  %1020 = or i1 %1018, %1019, !dbg !79
  %1021 = select i1 %1020, float %1016, float %1017, !dbg !80
  %1022 = extractelement <8 x float> %916, i64 6, !dbg !76
  %1023 = fcmp olt float %1021, %1022, !dbg !76
  %1024 = fcmp uno float %1021, 0.000000e+00, !dbg !78
  %1025 = or i1 %1023, %1024, !dbg !79
  %1026 = select i1 %1025, float %1021, float %1022, !dbg !80
  %1027 = extractelement <8 x float> %916, i64 5, !dbg !76
  %1028 = fcmp olt float %1026, %1027, !dbg !76
  %1029 = fcmp uno float %1026, 0.000000e+00, !dbg !78
  %1030 = or i1 %1028, %1029, !dbg !79
  %1031 = select i1 %1030, float %1026, float %1027, !dbg !80
  %1032 = extractelement <8 x float> %916, i64 4, !dbg !76
  %1033 = fcmp olt float %1031, %1032, !dbg !76
  %1034 = fcmp uno float %1031, 0.000000e+00, !dbg !78
  %1035 = or i1 %1033, %1034, !dbg !79
  %1036 = select i1 %1035, float %1031, float %1032, !dbg !80
  %1037 = extractelement <8 x float> %916, i64 3, !dbg !76
  %1038 = fcmp olt float %1036, %1037, !dbg !76
  %1039 = fcmp uno float %1036, 0.000000e+00, !dbg !78
  %1040 = or i1 %1038, %1039, !dbg !79
  %1041 = select i1 %1040, float %1036, float %1037, !dbg !80
  %1042 = extractelement <8 x float> %916, i64 2, !dbg !76
  %1043 = fcmp olt float %1041, %1042, !dbg !76
  %1044 = fcmp uno float %1041, 0.000000e+00, !dbg !78
  %1045 = or i1 %1043, %1044, !dbg !79
  %1046 = select i1 %1045, float %1041, float %1042, !dbg !80
  %1047 = extractelement <8 x float> %916, i64 1, !dbg !76
  %1048 = fcmp olt float %1046, %1047, !dbg !76
  %1049 = fcmp uno float %1046, 0.000000e+00, !dbg !78
  %1050 = or i1 %1048, %1049, !dbg !79
  %1051 = select i1 %1050, float %1046, float %1047, !dbg !80
  %1052 = extractelement <8 x float> %916, i64 0, !dbg !76
  %1053 = fcmp olt float %1051, %1052, !dbg !76
  %1054 = fcmp uno float %1051, 0.000000e+00, !dbg !78
  %1055 = or i1 %1053, %1054, !dbg !79
  %1056 = select i1 %1055, float %1051, float %1052, !dbg !80
  %1057 = bitcast float %1056 to i32, !dbg !74
  %1058 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1057, i32 16, i32 31), !dbg !74
  %1059 = bitcast i32 %1058 to float, !dbg !74
  %1060 = fcmp olt float %1056, %1059, !dbg !76
  %1061 = fcmp uno float %1056, 0.000000e+00, !dbg !78
  %1062 = or i1 %1061, %1060, !dbg !79
  %1063 = select i1 %1062, float %1056, float %1059, !dbg !80
  %1064 = bitcast float %1063 to i32, !dbg !74
  %1065 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1064, i32 8, i32 31), !dbg !74
  %1066 = bitcast i32 %1065 to float, !dbg !74
  %1067 = fcmp olt float %1063, %1066, !dbg !76
  %1068 = fcmp uno float %1063, 0.000000e+00, !dbg !78
  %1069 = or i1 %1067, %1068, !dbg !79
  %1070 = select i1 %1069, float %1063, float %1066, !dbg !80
  %1071 = bitcast float %1070 to i32, !dbg !74
  %1072 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1071, i32 4, i32 31), !dbg !74
  %1073 = bitcast i32 %1072 to float, !dbg !74
  %1074 = fcmp olt float %1070, %1073, !dbg !76
  %1075 = fcmp uno float %1070, 0.000000e+00, !dbg !78
  %1076 = or i1 %1074, %1075, !dbg !79
  %1077 = select i1 %1076, float %1070, float %1073, !dbg !80
  %1078 = bitcast float %1077 to i32, !dbg !74
  %1079 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1078, i32 2, i32 31), !dbg !74
  %1080 = bitcast i32 %1079 to float, !dbg !74
  %1081 = fcmp olt float %1077, %1080, !dbg !76
  %1082 = fcmp uno float %1077, 0.000000e+00, !dbg !78
  %1083 = or i1 %1081, %1082, !dbg !79
  %1084 = select i1 %1083, float %1077, float %1080, !dbg !80
  %1085 = bitcast float %1084 to i32, !dbg !74
  %1086 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1085, i32 1, i32 31), !dbg !74
  %1087 = bitcast i32 %1086 to float, !dbg !74
  %1088 = fcmp olt float %1084, %1087, !dbg !76
  %1089 = fcmp uno float %1084, 0.000000e+00, !dbg !78
  %1090 = or i1 %1088, %1089, !dbg !79
  %1091 = and i32 %982, 7, !dbg !74
  %1092 = icmp eq i32 %16, 0, !dbg !74
  %1093 = getelementptr float, ptr addrspace(3) @global_smem, i32 %1091, !dbg !74
  %1094 = select i1 %1090, i32 %1085, i32 %1086, !dbg !80
  %1095 = insertelement <1 x i32> poison, i32 %1094, i64 0, !dbg !74
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1093, <1 x i32> %1095, i1 %1092) #5, !dbg !74
  tail call void @llvm.nvvm.barrier0(), !dbg !74
  %1096 = icmp slt i32 %15, 8, !dbg !74
  %1097 = getelementptr float, ptr addrspace(3) @global_smem, i32 %15, !dbg !74
  %1098 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1097, i1 %1096) #5, !dbg !74
  %1099 = bitcast i32 %1098 to float, !dbg !74
  %1100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1098, i32 4, i32 31), !dbg !74
  %1101 = bitcast i32 %1100 to float, !dbg !74
  %1102 = fcmp olt float %1099, %1101, !dbg !76
  %1103 = fcmp uno float %1099, 0.000000e+00, !dbg !78
  %1104 = or i1 %1103, %1102, !dbg !79
  %1105 = select i1 %1104, float %1099, float %1101, !dbg !80
  %1106 = bitcast float %1105 to i32, !dbg !74
  %1107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1106, i32 2, i32 31), !dbg !74
  %1108 = bitcast i32 %1107 to float, !dbg !74
  %1109 = fcmp olt float %1105, %1108, !dbg !76
  %1110 = fcmp uno float %1105, 0.000000e+00, !dbg !78
  %1111 = or i1 %1109, %1110, !dbg !79
  %1112 = select i1 %1111, float %1105, float %1108, !dbg !80
  %1113 = bitcast float %1112 to i32, !dbg !74
  %1114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1113, i32 1, i32 31), !dbg !74
  %1115 = bitcast i32 %1114 to float, !dbg !74
  %1116 = fcmp olt float %1112, %1115, !dbg !76
  %1117 = fcmp uno float %1112, 0.000000e+00, !dbg !78
  %1118 = or i1 %1116, %1117, !dbg !79
  %1119 = and i32 %15, 7, !dbg !74
  %1120 = icmp eq i32 %1119, 0, !dbg !74
  %1121 = and i1 %1096, %1120, !dbg !74
  %1122 = select i1 %1118, i32 %1113, i32 %1114, !dbg !80
  %1123 = insertelement <1 x i32> poison, i32 %1122, i64 0, !dbg !74
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1097, <1 x i32> %1123, i1 %1121) #5, !dbg !74
  tail call void @llvm.nvvm.barrier0(), !dbg !74
  %1124 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !74
  tail call void @llvm.nvvm.barrier0(), !dbg !81
  %1125 = shufflevector <2 x float> <float 0.000000e+00, float poison>, <2 x float> %949, <2 x i32> <i32 0, i32 2>, !dbg !83
  %1126 = fcmp ogt <2 x float> %1125, %949, !dbg !83
  %1127 = fcmp uno <2 x float> %1125, %949, !dbg !83
  %shift = shufflevector <2 x i1> %1126, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !84
  %1128 = or <2 x i1> %shift, %1127, !dbg !84
  %1129 = extractelement <2 x i1> %1128, i64 0, !dbg !84
  %1130 = extractelement <2 x float> %949, i64 0, !dbg !85
  %1131 = extractelement <2 x float> %949, i64 1, !dbg !85
  %1132 = select i1 %1129, float %1130, float %1131, !dbg !85
  %1133 = extractelement <8 x float> %950, i64 1, !dbg !83
  %1134 = fcmp ogt float %1132, %1133, !dbg !83
  %1135 = fcmp uno float %1132, 0.000000e+00, !dbg !86
  %1136 = or i1 %1134, %1135, !dbg !84
  %1137 = select i1 %1136, float %1132, float %1133, !dbg !85
  %1138 = extractelement <8 x float> %950, i64 0, !dbg !83
  %1139 = fcmp ogt float %1137, %1138, !dbg !83
  %1140 = fcmp uno float %1137, 0.000000e+00, !dbg !86
  %1141 = or i1 %1139, %1140, !dbg !84
  %1142 = select i1 %1141, float %1137, float %1138, !dbg !85
  %1143 = extractelement <4 x float> %951, i64 3, !dbg !83
  %1144 = fcmp ogt float %1142, %1143, !dbg !83
  %1145 = fcmp uno float %1142, 0.000000e+00, !dbg !86
  %1146 = or i1 %1144, %1145, !dbg !84
  %1147 = select i1 %1146, float %1142, float %1143, !dbg !85
  %1148 = extractelement <4 x float> %951, i64 2, !dbg !83
  %1149 = fcmp ogt float %1147, %1148, !dbg !83
  %1150 = fcmp uno float %1147, 0.000000e+00, !dbg !86
  %1151 = or i1 %1149, %1150, !dbg !84
  %1152 = select i1 %1151, float %1147, float %1148, !dbg !85
  %1153 = extractelement <4 x float> %951, i64 1, !dbg !83
  %1154 = fcmp ogt float %1152, %1153, !dbg !83
  %1155 = fcmp uno float %1152, 0.000000e+00, !dbg !86
  %1156 = or i1 %1154, %1155, !dbg !84
  %1157 = select i1 %1156, float %1152, float %1153, !dbg !85
  %1158 = extractelement <4 x float> %951, i64 0, !dbg !83
  %1159 = fcmp ogt float %1157, %1158, !dbg !83
  %1160 = fcmp uno float %1157, 0.000000e+00, !dbg !86
  %1161 = or i1 %1159, %1160, !dbg !84
  %1162 = select i1 %1161, float %1157, float %1158, !dbg !85
  %1163 = extractelement <8 x float> %952, i64 7, !dbg !83
  %1164 = fcmp ogt float %1162, %1163, !dbg !83
  %1165 = fcmp uno float %1162, 0.000000e+00, !dbg !86
  %1166 = or i1 %1164, %1165, !dbg !84
  %1167 = select i1 %1166, float %1162, float %1163, !dbg !85
  %1168 = extractelement <8 x float> %952, i64 6, !dbg !83
  %1169 = fcmp ogt float %1167, %1168, !dbg !83
  %1170 = fcmp uno float %1167, 0.000000e+00, !dbg !86
  %1171 = or i1 %1169, %1170, !dbg !84
  %1172 = select i1 %1171, float %1167, float %1168, !dbg !85
  %1173 = extractelement <8 x float> %952, i64 5, !dbg !83
  %1174 = fcmp ogt float %1172, %1173, !dbg !83
  %1175 = fcmp uno float %1172, 0.000000e+00, !dbg !86
  %1176 = or i1 %1174, %1175, !dbg !84
  %1177 = select i1 %1176, float %1172, float %1173, !dbg !85
  %1178 = extractelement <8 x float> %952, i64 4, !dbg !83
  %1179 = fcmp ogt float %1177, %1178, !dbg !83
  %1180 = fcmp uno float %1177, 0.000000e+00, !dbg !86
  %1181 = or i1 %1179, %1180, !dbg !84
  %1182 = select i1 %1181, float %1177, float %1178, !dbg !85
  %1183 = extractelement <8 x float> %952, i64 3, !dbg !83
  %1184 = fcmp ogt float %1182, %1183, !dbg !83
  %1185 = fcmp uno float %1182, 0.000000e+00, !dbg !86
  %1186 = or i1 %1184, %1185, !dbg !84
  %1187 = select i1 %1186, float %1182, float %1183, !dbg !85
  %1188 = extractelement <8 x float> %952, i64 2, !dbg !83
  %1189 = fcmp ogt float %1187, %1188, !dbg !83
  %1190 = fcmp uno float %1187, 0.000000e+00, !dbg !86
  %1191 = or i1 %1189, %1190, !dbg !84
  %1192 = select i1 %1191, float %1187, float %1188, !dbg !85
  %1193 = extractelement <8 x float> %952, i64 1, !dbg !83
  %1194 = fcmp ogt float %1192, %1193, !dbg !83
  %1195 = fcmp uno float %1192, 0.000000e+00, !dbg !86
  %1196 = or i1 %1194, %1195, !dbg !84
  %1197 = select i1 %1196, float %1192, float %1193, !dbg !85
  %1198 = extractelement <8 x float> %952, i64 0, !dbg !83
  %1199 = fcmp ogt float %1197, %1198, !dbg !83
  %1200 = fcmp uno float %1197, 0.000000e+00, !dbg !86
  %1201 = or i1 %1199, %1200, !dbg !84
  %1202 = select i1 %1201, float %1197, float %1198, !dbg !85
  %1203 = bitcast float %1202 to i32, !dbg !81
  %1204 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1203, i32 16, i32 31), !dbg !81
  %1205 = bitcast i32 %1204 to float, !dbg !81
  %1206 = fcmp ogt float %1202, %1205, !dbg !83
  %1207 = fcmp uno float %1202, 0.000000e+00, !dbg !86
  %1208 = or i1 %1207, %1206, !dbg !84
  %1209 = select i1 %1208, float %1202, float %1205, !dbg !85
  %1210 = bitcast float %1209 to i32, !dbg !81
  %1211 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1210, i32 8, i32 31), !dbg !81
  %1212 = bitcast i32 %1211 to float, !dbg !81
  %1213 = fcmp ogt float %1209, %1212, !dbg !83
  %1214 = fcmp uno float %1209, 0.000000e+00, !dbg !86
  %1215 = or i1 %1213, %1214, !dbg !84
  %1216 = select i1 %1215, float %1209, float %1212, !dbg !85
  %1217 = bitcast float %1216 to i32, !dbg !81
  %1218 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1217, i32 4, i32 31), !dbg !81
  %1219 = bitcast i32 %1218 to float, !dbg !81
  %1220 = fcmp ogt float %1216, %1219, !dbg !83
  %1221 = fcmp uno float %1216, 0.000000e+00, !dbg !86
  %1222 = or i1 %1220, %1221, !dbg !84
  %1223 = select i1 %1222, float %1216, float %1219, !dbg !85
  %1224 = bitcast float %1223 to i32, !dbg !81
  %1225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1224, i32 2, i32 31), !dbg !81
  %1226 = bitcast i32 %1225 to float, !dbg !81
  %1227 = fcmp ogt float %1223, %1226, !dbg !83
  %1228 = fcmp uno float %1223, 0.000000e+00, !dbg !86
  %1229 = or i1 %1227, %1228, !dbg !84
  %1230 = select i1 %1229, float %1223, float %1226, !dbg !85
  %1231 = bitcast float %1230 to i32, !dbg !81
  %1232 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1231, i32 1, i32 31), !dbg !81
  %1233 = bitcast i32 %1232 to float, !dbg !81
  %1234 = fcmp ogt float %1230, %1233, !dbg !83
  %1235 = fcmp uno float %1230, 0.000000e+00, !dbg !86
  %1236 = or i1 %1234, %1235, !dbg !84
  %1237 = select i1 %1236, i32 %1231, i32 %1232, !dbg !85
  %1238 = insertelement <1 x i32> poison, i32 %1237, i64 0, !dbg !81
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1093, <1 x i32> %1238, i1 %1092) #5, !dbg !81
  tail call void @llvm.nvvm.barrier0(), !dbg !81
  %1239 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1097, i1 %1096) #5, !dbg !81
  %1240 = bitcast i32 %1239 to float, !dbg !81
  %1241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1239, i32 4, i32 31), !dbg !81
  %1242 = bitcast i32 %1241 to float, !dbg !81
  %1243 = fcmp ogt float %1240, %1242, !dbg !83
  %1244 = fcmp uno float %1240, 0.000000e+00, !dbg !86
  %1245 = or i1 %1244, %1243, !dbg !84
  %1246 = select i1 %1245, float %1240, float %1242, !dbg !85
  %1247 = bitcast float %1246 to i32, !dbg !81
  %1248 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1247, i32 2, i32 31), !dbg !81
  %1249 = bitcast i32 %1248 to float, !dbg !81
  %1250 = fcmp ogt float %1246, %1249, !dbg !83
  %1251 = fcmp uno float %1246, 0.000000e+00, !dbg !86
  %1252 = or i1 %1250, %1251, !dbg !84
  %1253 = select i1 %1252, float %1246, float %1249, !dbg !85
  %1254 = bitcast float %1253 to i32, !dbg !81
  %1255 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1254, i32 1, i32 31), !dbg !81
  %1256 = bitcast i32 %1255 to float, !dbg !81
  %1257 = fcmp ogt float %1253, %1256, !dbg !83
  %1258 = fcmp uno float %1253, 0.000000e+00, !dbg !86
  %1259 = or i1 %1257, %1258, !dbg !84
  %1260 = select i1 %1259, i32 %1254, i32 %1255, !dbg !85
  %1261 = insertelement <1 x i32> poison, i32 %1260, i64 0, !dbg !81
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1097, <1 x i32> %1261, i1 %1121) #5, !dbg !81
  tail call void @llvm.nvvm.barrier0(), !dbg !81
  %1262 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !81
  %1263 = getelementptr bfloat, ptr addrspace(1) %6, i64 %27, !dbg !87
  %1264 = fptrunc float %1124 to bfloat, !dbg !88
  %1265 = and i32 %15, 255, !dbg !88
  %1266 = icmp eq i32 %1265, 0, !dbg !88
  %1267 = bitcast bfloat %1264 to i16, !dbg !88
  %1268 = and i1 %14, %1266, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1267, ptr addrspace(1) %1263, i1 %1268) #5, !dbg !88
  %1269 = getelementptr bfloat, ptr addrspace(1) %7, i64 %27, !dbg !89
  %1270 = fptrunc float %1262 to bfloat, !dbg !90
  %1271 = bitcast bfloat %1270 to i16, !dbg !90
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1271, ptr addrspace(1) %1269, i1 %1268) #5, !dbg !90
  %.inv3 = fcmp oge float %1124, 0.000000e+00, !dbg !91
  %1272 = select i1 %.inv3, float 0.000000e+00, float %1124, !dbg !91
  %1273 = fsub float 0.000000e+00, %1272, !dbg !93
  %.inv4 = fcmp ole float %1262, 0.000000e+00, !dbg !94
  %1274 = select i1 %.inv4, float 0.000000e+00, float %1262, !dbg !94
  %1275 = fcmp ogt float %1273, %1274, !dbg !96
  %1276 = fcmp uno float %1273, 0.000000e+00, !dbg !98
  %1277 = or i1 %1276, %1275, !dbg !99
  %1278 = select i1 %1277, float %1273, float %1274, !dbg !100
  %1279 = fmul float %1278, 0x3F80204080000000, !dbg !101
  %1280 = fcmp ogt float %1279, 0x3EE4F8B580000000, !dbg !102
  %1281 = fcmp uno float %1279, 0.000000e+00, !dbg !104
  %1282 = or i1 %1280, %1281, !dbg !105
  %1283 = select i1 %1282, float %1279, float 0x3EE4F8B580000000, !dbg !106
  %1284 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %1283), !dbg !107
  %1285 = or disjoint i32 %18, %64
  %1286 = or disjoint i32 %20, %64
  br label %1287, !dbg !108

1287:                                             ; preds = %981, %__nv_tanhf.exit319
  %indvars.iv656 = phi i64 [ 0, %981 ], [ %indvars.iv.next657, %__nv_tanhf.exit319 ]
  %1288 = trunc nuw nsw i64 %indvars.iv656 to i32, !dbg !109
  %1289 = add i32 %1285, %1288, !dbg !109
  %1290 = add i32 %79, %1288, !dbg !109
  %1291 = add i32 %1286, %1288, !dbg !109
  %1292 = add i32 %80, %1288, !dbg !109
  %1293 = sext i32 %1289 to i64, !dbg !110
  %1294 = getelementptr float, ptr addrspace(1) %5, i64 %1293, !dbg !110
  %1295 = sext i32 %1290 to i64, !dbg !110
  %1296 = getelementptr float, ptr addrspace(1) %5, i64 %1295, !dbg !110
  %1297 = sext i32 %1291 to i64, !dbg !110
  %1298 = getelementptr float, ptr addrspace(1) %5, i64 %1297, !dbg !110
  %1299 = sext i32 %1292 to i64, !dbg !110
  %1300 = getelementptr float, ptr addrspace(1) %5, i64 %1299, !dbg !110
  %1301 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1294, i1 %14) #5, !dbg !111
  %1302 = extractvalue { i32, i32, i32, i32 } %1301, 0, !dbg !111
  %1303 = extractvalue { i32, i32, i32, i32 } %1301, 1, !dbg !111
  %1304 = extractvalue { i32, i32, i32, i32 } %1301, 2, !dbg !111
  %1305 = extractvalue { i32, i32, i32, i32 } %1301, 3, !dbg !111
  %1306 = bitcast i32 %1302 to float, !dbg !111
  %1307 = bitcast i32 %1303 to float, !dbg !111
  %1308 = bitcast i32 %1304 to float, !dbg !111
  %1309 = bitcast i32 %1305 to float, !dbg !111
  %1310 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1296, i1 %14) #5, !dbg !111
  %1311 = extractvalue { i32, i32, i32, i32 } %1310, 0, !dbg !111
  %1312 = extractvalue { i32, i32, i32, i32 } %1310, 1, !dbg !111
  %1313 = extractvalue { i32, i32, i32, i32 } %1310, 2, !dbg !111
  %1314 = extractvalue { i32, i32, i32, i32 } %1310, 3, !dbg !111
  %1315 = bitcast i32 %1311 to float, !dbg !111
  %1316 = bitcast i32 %1312 to float, !dbg !111
  %1317 = bitcast i32 %1313 to float, !dbg !111
  %1318 = bitcast i32 %1314 to float, !dbg !111
  %1319 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1298, i1 %14) #5, !dbg !111
  %1320 = extractvalue { i32, i32, i32, i32 } %1319, 0, !dbg !111
  %1321 = extractvalue { i32, i32, i32, i32 } %1319, 1, !dbg !111
  %1322 = extractvalue { i32, i32, i32, i32 } %1319, 2, !dbg !111
  %1323 = extractvalue { i32, i32, i32, i32 } %1319, 3, !dbg !111
  %1324 = bitcast i32 %1320 to float, !dbg !111
  %1325 = bitcast i32 %1321 to float, !dbg !111
  %1326 = bitcast i32 %1322 to float, !dbg !111
  %1327 = bitcast i32 %1323 to float, !dbg !111
  %1328 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1300, i1 %14) #5, !dbg !111
  %1329 = extractvalue { i32, i32, i32, i32 } %1328, 0, !dbg !111
  %1330 = extractvalue { i32, i32, i32, i32 } %1328, 1, !dbg !111
  %1331 = extractvalue { i32, i32, i32, i32 } %1328, 2, !dbg !111
  %1332 = extractvalue { i32, i32, i32, i32 } %1328, 3, !dbg !111
  %1333 = bitcast i32 %1329 to float, !dbg !111
  %1334 = bitcast i32 %1330 to float, !dbg !111
  %1335 = bitcast i32 %1331 to float, !dbg !111
  %1336 = bitcast i32 %1332 to float, !dbg !111
  %1337 = fmul float %1306, 5.000000e-01, !dbg !112
  %1338 = fmul float %1307, 5.000000e-01, !dbg !112
  %1339 = fmul float %1308, 5.000000e-01, !dbg !112
  %1340 = fmul float %1309, 5.000000e-01, !dbg !112
  %1341 = fmul float %1315, 5.000000e-01, !dbg !112
  %1342 = fmul float %1316, 5.000000e-01, !dbg !112
  %1343 = fmul float %1317, 5.000000e-01, !dbg !112
  %1344 = fmul float %1318, 5.000000e-01, !dbg !112
  %1345 = fmul float %1324, 5.000000e-01, !dbg !112
  %1346 = fmul float %1325, 5.000000e-01, !dbg !112
  %1347 = fmul float %1326, 5.000000e-01, !dbg !112
  %1348 = fmul float %1327, 5.000000e-01, !dbg !112
  %1349 = fmul float %1333, 5.000000e-01, !dbg !112
  %1350 = fmul float %1334, 5.000000e-01, !dbg !112
  %1351 = fmul float %1335, 5.000000e-01, !dbg !112
  %1352 = fmul float %1336, 5.000000e-01, !dbg !112
  %1353 = fmul float %1306, %1306, !dbg !113
  %1354 = fmul float %1307, %1307, !dbg !113
  %1355 = fmul float %1308, %1308, !dbg !113
  %1356 = fmul float %1309, %1309, !dbg !113
  %1357 = fmul float %1315, %1315, !dbg !113
  %1358 = fmul float %1316, %1316, !dbg !113
  %1359 = fmul float %1317, %1317, !dbg !113
  %1360 = fmul float %1318, %1318, !dbg !113
  %1361 = fmul float %1324, %1324, !dbg !113
  %1362 = fmul float %1325, %1325, !dbg !113
  %1363 = fmul float %1326, %1326, !dbg !113
  %1364 = fmul float %1327, %1327, !dbg !113
  %1365 = fmul float %1333, %1333, !dbg !113
  %1366 = fmul float %1334, %1334, !dbg !113
  %1367 = fmul float %1335, %1335, !dbg !113
  %1368 = fmul float %1336, %1336, !dbg !113
  %1369 = fmul float %1353, %1306, !dbg !114
  %1370 = fmul float %1354, %1307, !dbg !114
  %1371 = fmul float %1355, %1308, !dbg !114
  %1372 = fmul float %1356, %1309, !dbg !114
  %1373 = fmul float %1357, %1315, !dbg !114
  %1374 = fmul float %1358, %1316, !dbg !114
  %1375 = fmul float %1359, %1317, !dbg !114
  %1376 = fmul float %1360, %1318, !dbg !114
  %1377 = fmul float %1361, %1324, !dbg !114
  %1378 = fmul float %1362, %1325, !dbg !114
  %1379 = fmul float %1363, %1326, !dbg !114
  %1380 = fmul float %1364, %1327, !dbg !114
  %1381 = fmul float %1365, %1333, !dbg !114
  %1382 = fmul float %1366, %1334, !dbg !114
  %1383 = fmul float %1367, %1335, !dbg !114
  %1384 = fmul float %1368, %1336, !dbg !114
  %1385 = fmul float %1369, 0x3FA6E4E260000000, !dbg !115
  %1386 = fmul float %1370, 0x3FA6E4E260000000, !dbg !115
  %1387 = fmul float %1371, 0x3FA6E4E260000000, !dbg !115
  %1388 = fmul float %1372, 0x3FA6E4E260000000, !dbg !115
  %1389 = fmul float %1373, 0x3FA6E4E260000000, !dbg !115
  %1390 = fmul float %1374, 0x3FA6E4E260000000, !dbg !115
  %1391 = fmul float %1375, 0x3FA6E4E260000000, !dbg !115
  %1392 = fmul float %1376, 0x3FA6E4E260000000, !dbg !115
  %1393 = fmul float %1377, 0x3FA6E4E260000000, !dbg !115
  %1394 = fmul float %1378, 0x3FA6E4E260000000, !dbg !115
  %1395 = fmul float %1379, 0x3FA6E4E260000000, !dbg !115
  %1396 = fmul float %1380, 0x3FA6E4E260000000, !dbg !115
  %1397 = fmul float %1381, 0x3FA6E4E260000000, !dbg !115
  %1398 = fmul float %1382, 0x3FA6E4E260000000, !dbg !115
  %1399 = fmul float %1383, 0x3FA6E4E260000000, !dbg !115
  %1400 = fmul float %1384, 0x3FA6E4E260000000, !dbg !115
  %1401 = fadd float %1385, %1306, !dbg !116
  %1402 = fadd float %1386, %1307, !dbg !116
  %1403 = fadd float %1387, %1308, !dbg !116
  %1404 = fadd float %1388, %1309, !dbg !116
  %1405 = fadd float %1389, %1315, !dbg !116
  %1406 = fadd float %1390, %1316, !dbg !116
  %1407 = fadd float %1391, %1317, !dbg !116
  %1408 = fadd float %1392, %1318, !dbg !116
  %1409 = fadd float %1393, %1324, !dbg !116
  %1410 = fadd float %1394, %1325, !dbg !116
  %1411 = fadd float %1395, %1326, !dbg !116
  %1412 = fadd float %1396, %1327, !dbg !116
  %1413 = fadd float %1397, %1333, !dbg !116
  %1414 = fadd float %1398, %1334, !dbg !116
  %1415 = fadd float %1399, %1335, !dbg !116
  %1416 = fadd float %1400, %1336, !dbg !116
  %1417 = fmul float %1401, 0x3FE9884540000000, !dbg !117
  %1418 = fmul float %1402, 0x3FE9884540000000, !dbg !117
  %1419 = fmul float %1403, 0x3FE9884540000000, !dbg !117
  %1420 = fmul float %1404, 0x3FE9884540000000, !dbg !117
  %1421 = fmul float %1405, 0x3FE9884540000000, !dbg !117
  %1422 = fmul float %1406, 0x3FE9884540000000, !dbg !117
  %1423 = fmul float %1407, 0x3FE9884540000000, !dbg !117
  %1424 = fmul float %1408, 0x3FE9884540000000, !dbg !117
  %1425 = fmul float %1409, 0x3FE9884540000000, !dbg !117
  %1426 = fmul float %1410, 0x3FE9884540000000, !dbg !117
  %1427 = fmul float %1411, 0x3FE9884540000000, !dbg !117
  %1428 = fmul float %1412, 0x3FE9884540000000, !dbg !117
  %1429 = fmul float %1413, 0x3FE9884540000000, !dbg !117
  %1430 = fmul float %1414, 0x3FE9884540000000, !dbg !117
  %1431 = fmul float %1415, 0x3FE9884540000000, !dbg !117
  %1432 = fmul float %1416, 0x3FE9884540000000, !dbg !117
  %1433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i = icmp eq i32 %1433, 0, !dbg !118
  %1434 = tail call float @llvm.nvvm.fabs.ftz.f(float %1417) #5, !dbg !118
  %1435 = tail call float @llvm.nvvm.fabs.f(float %1417) #5, !dbg !118
  %.01.i = select i1 %.not.i, float %1435, float %1434, !dbg !118
  %1436 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !118
  br i1 %1436, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !118

__internal_fmad.exit1.i:                          ; preds = %1287
  %1437 = fmul float %.01.i, 0x4007154760000000, !dbg !118
  %1438 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1437) #5, !dbg !118
  %1439 = fadd float %1438, 1.000000e+00, !dbg !118
  %1440 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1439) #6, !dbg !118, !srcloc !59
  %1441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i = icmp eq i32 %1441, 0, !dbg !118
  %1442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1440, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1443 = tail call float @llvm.nvvm.fma.rn.f(float %1440, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i = select i1 %.not6.i, float %1443, float %1442, !dbg !118
  %1444 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !118
  %s.0.i = select i1 %1444, float 1.000000e+00, float %.03.i, !dbg !118
  %1445 = bitcast float %s.0.i to i32, !dbg !118
  %1446 = bitcast float %1417 to i32, !dbg !118
  %1447 = and i32 %1446, -2147483648, !dbg !118
  %1448 = or i32 %1447, %1445, !dbg !118
  %1449 = bitcast i32 %1448 to float, !dbg !118
  br label %__nv_tanhf.exit, !dbg !118

__internal_fmad.exit3.i:                          ; preds = %1287
  %1450 = fmul float %1417, %1417, !dbg !118
  %1451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i = icmp eq i32 %1451, 0, !dbg !118
  %1452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1450, float 0xBFAAC795C0000000) #5, !dbg !118
  %1453 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1450, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i = select i1 %.not1.i, float %1453, float %1452, !dbg !118
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i = icmp eq i32 %1454, 0, !dbg !118
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %1450, float 0x3FC10B2820000000) #5, !dbg !118
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %1450, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i = select i1 %.not2.i, float %1456, float %1455, !dbg !118
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i = icmp eq i32 %1457, 0, !dbg !118
  %1458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %1450, float 0xBFD5553DA0000000) #5, !dbg !118
  %1459 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %1450, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i = select i1 %.not3.i, float %1459, float %1458, !dbg !118
  %1460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i = icmp eq i32 %1460, 0, !dbg !118
  %1461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %1450, float 0.000000e+00) #5, !dbg !118
  %1462 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %1450, float 0.000000e+00) #5, !dbg !118
  %.04.i = select i1 %.not4.i, float %1462, float %1461, !dbg !118
  %1463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i = icmp eq i32 %1463, 0, !dbg !118
  %1464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %1417, float %1417) #5, !dbg !118
  %1465 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %1417, float %1417) #5, !dbg !118
  %.02.i = select i1 %.not5.i, float %1465, float %1464, !dbg !118
  br label %__nv_tanhf.exit, !dbg !118

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %1449, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !118
  %1466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i35 = icmp eq i32 %1466, 0, !dbg !118
  %1467 = tail call float @llvm.nvvm.fabs.ftz.f(float %1418) #5, !dbg !118
  %1468 = tail call float @llvm.nvvm.fabs.f(float %1418) #5, !dbg !118
  %.01.i36 = select i1 %.not.i35, float %1468, float %1467, !dbg !118
  %1469 = fcmp ult float %.01.i36, 0x3FE3333340000000, !dbg !118
  br i1 %1469, label %__internal_fmad.exit3.i42, label %__internal_fmad.exit1.i37, !dbg !118

__internal_fmad.exit1.i37:                        ; preds = %__nv_tanhf.exit
  %1470 = fmul float %.01.i36, 0x4007154760000000, !dbg !118
  %1471 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1470) #5, !dbg !118
  %1472 = fadd float %1471, 1.000000e+00, !dbg !118
  %1473 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1472) #6, !dbg !118, !srcloc !59
  %1474 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i38 = icmp eq i32 %1474, 0, !dbg !118
  %1475 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1473, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1476 = tail call float @llvm.nvvm.fma.rn.f(float %1473, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i39 = select i1 %.not6.i38, float %1476, float %1475, !dbg !118
  %1477 = fcmp oge float %.01.i36, 0x4022059680000000, !dbg !118
  %s.0.i40 = select i1 %1477, float 1.000000e+00, float %.03.i39, !dbg !118
  %1478 = bitcast float %s.0.i40 to i32, !dbg !118
  %1479 = bitcast float %1418 to i32, !dbg !118
  %1480 = and i32 %1479, -2147483648, !dbg !118
  %1481 = or i32 %1480, %1478, !dbg !118
  %1482 = bitcast i32 %1481 to float, !dbg !118
  br label %__nv_tanhf.exit53, !dbg !118

__internal_fmad.exit3.i42:                        ; preds = %__nv_tanhf.exit
  %1483 = fmul float %1418, %1418, !dbg !118
  %1484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i43 = icmp eq i32 %1484, 0, !dbg !118
  %1485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1483, float 0xBFAAC795C0000000) #5, !dbg !118
  %1486 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1483, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i44 = select i1 %.not1.i43, float %1486, float %1485, !dbg !118
  %1487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i45 = icmp eq i32 %1487, 0, !dbg !118
  %1488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %1483, float 0x3FC10B2820000000) #5, !dbg !118
  %1489 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %1483, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i46 = select i1 %.not2.i45, float %1489, float %1488, !dbg !118
  %1490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i47 = icmp eq i32 %1490, 0, !dbg !118
  %1491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float %1483, float 0xBFD5553DA0000000) #5, !dbg !118
  %1492 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float %1483, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i48 = select i1 %.not3.i47, float %1492, float %1491, !dbg !118
  %1493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i49 = icmp eq i32 %1493, 0, !dbg !118
  %1494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %1483, float 0.000000e+00) #5, !dbg !118
  %1495 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %1483, float 0.000000e+00) #5, !dbg !118
  %.04.i50 = select i1 %.not4.i49, float %1495, float %1494, !dbg !118
  %1496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i51 = icmp eq i32 %1496, 0, !dbg !118
  %1497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i50, float %1418, float %1418) #5, !dbg !118
  %1498 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i50, float %1418, float %1418) #5, !dbg !118
  %.02.i52 = select i1 %.not5.i51, float %1498, float %1497, !dbg !118
  br label %__nv_tanhf.exit53, !dbg !118

__nv_tanhf.exit53:                                ; preds = %__internal_fmad.exit1.i37, %__internal_fmad.exit3.i42
  %s.1.i41 = phi float [ %1482, %__internal_fmad.exit1.i37 ], [ %.02.i52, %__internal_fmad.exit3.i42 ], !dbg !118
  %1499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i54 = icmp eq i32 %1499, 0, !dbg !118
  %1500 = tail call float @llvm.nvvm.fabs.ftz.f(float %1419) #5, !dbg !118
  %1501 = tail call float @llvm.nvvm.fabs.f(float %1419) #5, !dbg !118
  %.01.i55 = select i1 %.not.i54, float %1501, float %1500, !dbg !118
  %1502 = fcmp ult float %.01.i55, 0x3FE3333340000000, !dbg !118
  br i1 %1502, label %__internal_fmad.exit3.i61, label %__internal_fmad.exit1.i56, !dbg !118

__internal_fmad.exit1.i56:                        ; preds = %__nv_tanhf.exit53
  %1503 = fmul float %.01.i55, 0x4007154760000000, !dbg !118
  %1504 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1503) #5, !dbg !118
  %1505 = fadd float %1504, 1.000000e+00, !dbg !118
  %1506 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1505) #6, !dbg !118, !srcloc !59
  %1507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i57 = icmp eq i32 %1507, 0, !dbg !118
  %1508 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1506, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1509 = tail call float @llvm.nvvm.fma.rn.f(float %1506, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i58 = select i1 %.not6.i57, float %1509, float %1508, !dbg !118
  %1510 = fcmp oge float %.01.i55, 0x4022059680000000, !dbg !118
  %s.0.i59 = select i1 %1510, float 1.000000e+00, float %.03.i58, !dbg !118
  %1511 = bitcast float %s.0.i59 to i32, !dbg !118
  %1512 = bitcast float %1419 to i32, !dbg !118
  %1513 = and i32 %1512, -2147483648, !dbg !118
  %1514 = or i32 %1513, %1511, !dbg !118
  %1515 = bitcast i32 %1514 to float, !dbg !118
  br label %__nv_tanhf.exit72, !dbg !118

__internal_fmad.exit3.i61:                        ; preds = %__nv_tanhf.exit53
  %1516 = fmul float %1419, %1419, !dbg !118
  %1517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i62 = icmp eq i32 %1517, 0, !dbg !118
  %1518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1516, float 0xBFAAC795C0000000) #5, !dbg !118
  %1519 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1516, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i63 = select i1 %.not1.i62, float %1519, float %1518, !dbg !118
  %1520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i64 = icmp eq i32 %1520, 0, !dbg !118
  %1521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i63, float %1516, float 0x3FC10B2820000000) #5, !dbg !118
  %1522 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i63, float %1516, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i65 = select i1 %.not2.i64, float %1522, float %1521, !dbg !118
  %1523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i66 = icmp eq i32 %1523, 0, !dbg !118
  %1524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %1516, float 0xBFD5553DA0000000) #5, !dbg !118
  %1525 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %1516, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i67 = select i1 %.not3.i66, float %1525, float %1524, !dbg !118
  %1526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i68 = icmp eq i32 %1526, 0, !dbg !118
  %1527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %1516, float 0.000000e+00) #5, !dbg !118
  %1528 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %1516, float 0.000000e+00) #5, !dbg !118
  %.04.i69 = select i1 %.not4.i68, float %1528, float %1527, !dbg !118
  %1529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i70 = icmp eq i32 %1529, 0, !dbg !118
  %1530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i69, float %1419, float %1419) #5, !dbg !118
  %1531 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i69, float %1419, float %1419) #5, !dbg !118
  %.02.i71 = select i1 %.not5.i70, float %1531, float %1530, !dbg !118
  br label %__nv_tanhf.exit72, !dbg !118

__nv_tanhf.exit72:                                ; preds = %__internal_fmad.exit1.i56, %__internal_fmad.exit3.i61
  %s.1.i60 = phi float [ %1515, %__internal_fmad.exit1.i56 ], [ %.02.i71, %__internal_fmad.exit3.i61 ], !dbg !118
  %1532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i73 = icmp eq i32 %1532, 0, !dbg !118
  %1533 = tail call float @llvm.nvvm.fabs.ftz.f(float %1420) #5, !dbg !118
  %1534 = tail call float @llvm.nvvm.fabs.f(float %1420) #5, !dbg !118
  %.01.i74 = select i1 %.not.i73, float %1534, float %1533, !dbg !118
  %1535 = fcmp ult float %.01.i74, 0x3FE3333340000000, !dbg !118
  br i1 %1535, label %__internal_fmad.exit3.i80, label %__internal_fmad.exit1.i75, !dbg !118

__internal_fmad.exit1.i75:                        ; preds = %__nv_tanhf.exit72
  %1536 = fmul float %.01.i74, 0x4007154760000000, !dbg !118
  %1537 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1536) #5, !dbg !118
  %1538 = fadd float %1537, 1.000000e+00, !dbg !118
  %1539 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1538) #6, !dbg !118, !srcloc !59
  %1540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i76 = icmp eq i32 %1540, 0, !dbg !118
  %1541 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1539, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1542 = tail call float @llvm.nvvm.fma.rn.f(float %1539, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i77 = select i1 %.not6.i76, float %1542, float %1541, !dbg !118
  %1543 = fcmp oge float %.01.i74, 0x4022059680000000, !dbg !118
  %s.0.i78 = select i1 %1543, float 1.000000e+00, float %.03.i77, !dbg !118
  %1544 = bitcast float %s.0.i78 to i32, !dbg !118
  %1545 = bitcast float %1420 to i32, !dbg !118
  %1546 = and i32 %1545, -2147483648, !dbg !118
  %1547 = or i32 %1546, %1544, !dbg !118
  %1548 = bitcast i32 %1547 to float, !dbg !118
  br label %__nv_tanhf.exit91, !dbg !118

__internal_fmad.exit3.i80:                        ; preds = %__nv_tanhf.exit72
  %1549 = fmul float %1420, %1420, !dbg !118
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i81 = icmp eq i32 %1550, 0, !dbg !118
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1549, float 0xBFAAC795C0000000) #5, !dbg !118
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1549, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i82 = select i1 %.not1.i81, float %1552, float %1551, !dbg !118
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i83 = icmp eq i32 %1553, 0, !dbg !118
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i82, float %1549, float 0x3FC10B2820000000) #5, !dbg !118
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i82, float %1549, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i84 = select i1 %.not2.i83, float %1555, float %1554, !dbg !118
  %1556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i85 = icmp eq i32 %1556, 0, !dbg !118
  %1557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i84, float %1549, float 0xBFD5553DA0000000) #5, !dbg !118
  %1558 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i84, float %1549, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i86 = select i1 %.not3.i85, float %1558, float %1557, !dbg !118
  %1559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i87 = icmp eq i32 %1559, 0, !dbg !118
  %1560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i86, float %1549, float 0.000000e+00) #5, !dbg !118
  %1561 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i86, float %1549, float 0.000000e+00) #5, !dbg !118
  %.04.i88 = select i1 %.not4.i87, float %1561, float %1560, !dbg !118
  %1562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i89 = icmp eq i32 %1562, 0, !dbg !118
  %1563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i88, float %1420, float %1420) #5, !dbg !118
  %1564 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i88, float %1420, float %1420) #5, !dbg !118
  %.02.i90 = select i1 %.not5.i89, float %1564, float %1563, !dbg !118
  br label %__nv_tanhf.exit91, !dbg !118

__nv_tanhf.exit91:                                ; preds = %__internal_fmad.exit1.i75, %__internal_fmad.exit3.i80
  %s.1.i79 = phi float [ %1548, %__internal_fmad.exit1.i75 ], [ %.02.i90, %__internal_fmad.exit3.i80 ], !dbg !118
  %1565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i92 = icmp eq i32 %1565, 0, !dbg !118
  %1566 = tail call float @llvm.nvvm.fabs.ftz.f(float %1421) #5, !dbg !118
  %1567 = tail call float @llvm.nvvm.fabs.f(float %1421) #5, !dbg !118
  %.01.i93 = select i1 %.not.i92, float %1567, float %1566, !dbg !118
  %1568 = fcmp ult float %.01.i93, 0x3FE3333340000000, !dbg !118
  br i1 %1568, label %__internal_fmad.exit3.i99, label %__internal_fmad.exit1.i94, !dbg !118

__internal_fmad.exit1.i94:                        ; preds = %__nv_tanhf.exit91
  %1569 = fmul float %.01.i93, 0x4007154760000000, !dbg !118
  %1570 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1569) #5, !dbg !118
  %1571 = fadd float %1570, 1.000000e+00, !dbg !118
  %1572 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1571) #6, !dbg !118, !srcloc !59
  %1573 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i95 = icmp eq i32 %1573, 0, !dbg !118
  %1574 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1572, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1575 = tail call float @llvm.nvvm.fma.rn.f(float %1572, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i96 = select i1 %.not6.i95, float %1575, float %1574, !dbg !118
  %1576 = fcmp oge float %.01.i93, 0x4022059680000000, !dbg !118
  %s.0.i97 = select i1 %1576, float 1.000000e+00, float %.03.i96, !dbg !118
  %1577 = bitcast float %s.0.i97 to i32, !dbg !118
  %1578 = bitcast float %1421 to i32, !dbg !118
  %1579 = and i32 %1578, -2147483648, !dbg !118
  %1580 = or i32 %1579, %1577, !dbg !118
  %1581 = bitcast i32 %1580 to float, !dbg !118
  br label %__nv_tanhf.exit110, !dbg !118

__internal_fmad.exit3.i99:                        ; preds = %__nv_tanhf.exit91
  %1582 = fmul float %1421, %1421, !dbg !118
  %1583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i100 = icmp eq i32 %1583, 0, !dbg !118
  %1584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1582, float 0xBFAAC795C0000000) #5, !dbg !118
  %1585 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1582, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i101 = select i1 %.not1.i100, float %1585, float %1584, !dbg !118
  %1586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i102 = icmp eq i32 %1586, 0, !dbg !118
  %1587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i101, float %1582, float 0x3FC10B2820000000) #5, !dbg !118
  %1588 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i101, float %1582, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i103 = select i1 %.not2.i102, float %1588, float %1587, !dbg !118
  %1589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i104 = icmp eq i32 %1589, 0, !dbg !118
  %1590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i103, float %1582, float 0xBFD5553DA0000000) #5, !dbg !118
  %1591 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i103, float %1582, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i105 = select i1 %.not3.i104, float %1591, float %1590, !dbg !118
  %1592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i106 = icmp eq i32 %1592, 0, !dbg !118
  %1593 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i105, float %1582, float 0.000000e+00) #5, !dbg !118
  %1594 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i105, float %1582, float 0.000000e+00) #5, !dbg !118
  %.04.i107 = select i1 %.not4.i106, float %1594, float %1593, !dbg !118
  %1595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i108 = icmp eq i32 %1595, 0, !dbg !118
  %1596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i107, float %1421, float %1421) #5, !dbg !118
  %1597 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i107, float %1421, float %1421) #5, !dbg !118
  %.02.i109 = select i1 %.not5.i108, float %1597, float %1596, !dbg !118
  br label %__nv_tanhf.exit110, !dbg !118

__nv_tanhf.exit110:                               ; preds = %__internal_fmad.exit1.i94, %__internal_fmad.exit3.i99
  %s.1.i98 = phi float [ %1581, %__internal_fmad.exit1.i94 ], [ %.02.i109, %__internal_fmad.exit3.i99 ], !dbg !118
  %1598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i111 = icmp eq i32 %1598, 0, !dbg !118
  %1599 = tail call float @llvm.nvvm.fabs.ftz.f(float %1422) #5, !dbg !118
  %1600 = tail call float @llvm.nvvm.fabs.f(float %1422) #5, !dbg !118
  %.01.i112 = select i1 %.not.i111, float %1600, float %1599, !dbg !118
  %1601 = fcmp ult float %.01.i112, 0x3FE3333340000000, !dbg !118
  br i1 %1601, label %__internal_fmad.exit3.i118, label %__internal_fmad.exit1.i113, !dbg !118

__internal_fmad.exit1.i113:                       ; preds = %__nv_tanhf.exit110
  %1602 = fmul float %.01.i112, 0x4007154760000000, !dbg !118
  %1603 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1602) #5, !dbg !118
  %1604 = fadd float %1603, 1.000000e+00, !dbg !118
  %1605 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1604) #6, !dbg !118, !srcloc !59
  %1606 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i114 = icmp eq i32 %1606, 0, !dbg !118
  %1607 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1605, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1608 = tail call float @llvm.nvvm.fma.rn.f(float %1605, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i115 = select i1 %.not6.i114, float %1608, float %1607, !dbg !118
  %1609 = fcmp oge float %.01.i112, 0x4022059680000000, !dbg !118
  %s.0.i116 = select i1 %1609, float 1.000000e+00, float %.03.i115, !dbg !118
  %1610 = bitcast float %s.0.i116 to i32, !dbg !118
  %1611 = bitcast float %1422 to i32, !dbg !118
  %1612 = and i32 %1611, -2147483648, !dbg !118
  %1613 = or i32 %1612, %1610, !dbg !118
  %1614 = bitcast i32 %1613 to float, !dbg !118
  br label %__nv_tanhf.exit129, !dbg !118

__internal_fmad.exit3.i118:                       ; preds = %__nv_tanhf.exit110
  %1615 = fmul float %1422, %1422, !dbg !118
  %1616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i119 = icmp eq i32 %1616, 0, !dbg !118
  %1617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1615, float 0xBFAAC795C0000000) #5, !dbg !118
  %1618 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1615, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i120 = select i1 %.not1.i119, float %1618, float %1617, !dbg !118
  %1619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i121 = icmp eq i32 %1619, 0, !dbg !118
  %1620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i120, float %1615, float 0x3FC10B2820000000) #5, !dbg !118
  %1621 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i120, float %1615, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i122 = select i1 %.not2.i121, float %1621, float %1620, !dbg !118
  %1622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i123 = icmp eq i32 %1622, 0, !dbg !118
  %1623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %1615, float 0xBFD5553DA0000000) #5, !dbg !118
  %1624 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %1615, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i124 = select i1 %.not3.i123, float %1624, float %1623, !dbg !118
  %1625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i125 = icmp eq i32 %1625, 0, !dbg !118
  %1626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i124, float %1615, float 0.000000e+00) #5, !dbg !118
  %1627 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i124, float %1615, float 0.000000e+00) #5, !dbg !118
  %.04.i126 = select i1 %.not4.i125, float %1627, float %1626, !dbg !118
  %1628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i127 = icmp eq i32 %1628, 0, !dbg !118
  %1629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i126, float %1422, float %1422) #5, !dbg !118
  %1630 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i126, float %1422, float %1422) #5, !dbg !118
  %.02.i128 = select i1 %.not5.i127, float %1630, float %1629, !dbg !118
  br label %__nv_tanhf.exit129, !dbg !118

__nv_tanhf.exit129:                               ; preds = %__internal_fmad.exit1.i113, %__internal_fmad.exit3.i118
  %s.1.i117 = phi float [ %1614, %__internal_fmad.exit1.i113 ], [ %.02.i128, %__internal_fmad.exit3.i118 ], !dbg !118
  %1631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i130 = icmp eq i32 %1631, 0, !dbg !118
  %1632 = tail call float @llvm.nvvm.fabs.ftz.f(float %1423) #5, !dbg !118
  %1633 = tail call float @llvm.nvvm.fabs.f(float %1423) #5, !dbg !118
  %.01.i131 = select i1 %.not.i130, float %1633, float %1632, !dbg !118
  %1634 = fcmp ult float %.01.i131, 0x3FE3333340000000, !dbg !118
  br i1 %1634, label %__internal_fmad.exit3.i137, label %__internal_fmad.exit1.i132, !dbg !118

__internal_fmad.exit1.i132:                       ; preds = %__nv_tanhf.exit129
  %1635 = fmul float %.01.i131, 0x4007154760000000, !dbg !118
  %1636 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1635) #5, !dbg !118
  %1637 = fadd float %1636, 1.000000e+00, !dbg !118
  %1638 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1637) #6, !dbg !118, !srcloc !59
  %1639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i133 = icmp eq i32 %1639, 0, !dbg !118
  %1640 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1638, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1641 = tail call float @llvm.nvvm.fma.rn.f(float %1638, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i134 = select i1 %.not6.i133, float %1641, float %1640, !dbg !118
  %1642 = fcmp oge float %.01.i131, 0x4022059680000000, !dbg !118
  %s.0.i135 = select i1 %1642, float 1.000000e+00, float %.03.i134, !dbg !118
  %1643 = bitcast float %s.0.i135 to i32, !dbg !118
  %1644 = bitcast float %1423 to i32, !dbg !118
  %1645 = and i32 %1644, -2147483648, !dbg !118
  %1646 = or i32 %1645, %1643, !dbg !118
  %1647 = bitcast i32 %1646 to float, !dbg !118
  br label %__nv_tanhf.exit148, !dbg !118

__internal_fmad.exit3.i137:                       ; preds = %__nv_tanhf.exit129
  %1648 = fmul float %1423, %1423, !dbg !118
  %1649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i138 = icmp eq i32 %1649, 0, !dbg !118
  %1650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1648, float 0xBFAAC795C0000000) #5, !dbg !118
  %1651 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1648, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i139 = select i1 %.not1.i138, float %1651, float %1650, !dbg !118
  %1652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i140 = icmp eq i32 %1652, 0, !dbg !118
  %1653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i139, float %1648, float 0x3FC10B2820000000) #5, !dbg !118
  %1654 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i139, float %1648, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i141 = select i1 %.not2.i140, float %1654, float %1653, !dbg !118
  %1655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i142 = icmp eq i32 %1655, 0, !dbg !118
  %1656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i141, float %1648, float 0xBFD5553DA0000000) #5, !dbg !118
  %1657 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i141, float %1648, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i143 = select i1 %.not3.i142, float %1657, float %1656, !dbg !118
  %1658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i144 = icmp eq i32 %1658, 0, !dbg !118
  %1659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i143, float %1648, float 0.000000e+00) #5, !dbg !118
  %1660 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i143, float %1648, float 0.000000e+00) #5, !dbg !118
  %.04.i145 = select i1 %.not4.i144, float %1660, float %1659, !dbg !118
  %1661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i146 = icmp eq i32 %1661, 0, !dbg !118
  %1662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i145, float %1423, float %1423) #5, !dbg !118
  %1663 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i145, float %1423, float %1423) #5, !dbg !118
  %.02.i147 = select i1 %.not5.i146, float %1663, float %1662, !dbg !118
  br label %__nv_tanhf.exit148, !dbg !118

__nv_tanhf.exit148:                               ; preds = %__internal_fmad.exit1.i132, %__internal_fmad.exit3.i137
  %s.1.i136 = phi float [ %1647, %__internal_fmad.exit1.i132 ], [ %.02.i147, %__internal_fmad.exit3.i137 ], !dbg !118
  %1664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i149 = icmp eq i32 %1664, 0, !dbg !118
  %1665 = tail call float @llvm.nvvm.fabs.ftz.f(float %1424) #5, !dbg !118
  %1666 = tail call float @llvm.nvvm.fabs.f(float %1424) #5, !dbg !118
  %.01.i150 = select i1 %.not.i149, float %1666, float %1665, !dbg !118
  %1667 = fcmp ult float %.01.i150, 0x3FE3333340000000, !dbg !118
  br i1 %1667, label %__internal_fmad.exit3.i156, label %__internal_fmad.exit1.i151, !dbg !118

__internal_fmad.exit1.i151:                       ; preds = %__nv_tanhf.exit148
  %1668 = fmul float %.01.i150, 0x4007154760000000, !dbg !118
  %1669 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1668) #5, !dbg !118
  %1670 = fadd float %1669, 1.000000e+00, !dbg !118
  %1671 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1670) #6, !dbg !118, !srcloc !59
  %1672 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i152 = icmp eq i32 %1672, 0, !dbg !118
  %1673 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1671, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1674 = tail call float @llvm.nvvm.fma.rn.f(float %1671, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i153 = select i1 %.not6.i152, float %1674, float %1673, !dbg !118
  %1675 = fcmp oge float %.01.i150, 0x4022059680000000, !dbg !118
  %s.0.i154 = select i1 %1675, float 1.000000e+00, float %.03.i153, !dbg !118
  %1676 = bitcast float %s.0.i154 to i32, !dbg !118
  %1677 = bitcast float %1424 to i32, !dbg !118
  %1678 = and i32 %1677, -2147483648, !dbg !118
  %1679 = or i32 %1678, %1676, !dbg !118
  %1680 = bitcast i32 %1679 to float, !dbg !118
  br label %__nv_tanhf.exit167, !dbg !118

__internal_fmad.exit3.i156:                       ; preds = %__nv_tanhf.exit148
  %1681 = fmul float %1424, %1424, !dbg !118
  %1682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i157 = icmp eq i32 %1682, 0, !dbg !118
  %1683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1681, float 0xBFAAC795C0000000) #5, !dbg !118
  %1684 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1681, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i158 = select i1 %.not1.i157, float %1684, float %1683, !dbg !118
  %1685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i159 = icmp eq i32 %1685, 0, !dbg !118
  %1686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i158, float %1681, float 0x3FC10B2820000000) #5, !dbg !118
  %1687 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i158, float %1681, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i160 = select i1 %.not2.i159, float %1687, float %1686, !dbg !118
  %1688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i161 = icmp eq i32 %1688, 0, !dbg !118
  %1689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i160, float %1681, float 0xBFD5553DA0000000) #5, !dbg !118
  %1690 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i160, float %1681, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i162 = select i1 %.not3.i161, float %1690, float %1689, !dbg !118
  %1691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i163 = icmp eq i32 %1691, 0, !dbg !118
  %1692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i162, float %1681, float 0.000000e+00) #5, !dbg !118
  %1693 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i162, float %1681, float 0.000000e+00) #5, !dbg !118
  %.04.i164 = select i1 %.not4.i163, float %1693, float %1692, !dbg !118
  %1694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i165 = icmp eq i32 %1694, 0, !dbg !118
  %1695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i164, float %1424, float %1424) #5, !dbg !118
  %1696 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i164, float %1424, float %1424) #5, !dbg !118
  %.02.i166 = select i1 %.not5.i165, float %1696, float %1695, !dbg !118
  br label %__nv_tanhf.exit167, !dbg !118

__nv_tanhf.exit167:                               ; preds = %__internal_fmad.exit1.i151, %__internal_fmad.exit3.i156
  %s.1.i155 = phi float [ %1680, %__internal_fmad.exit1.i151 ], [ %.02.i166, %__internal_fmad.exit3.i156 ], !dbg !118
  %1697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i168 = icmp eq i32 %1697, 0, !dbg !118
  %1698 = tail call float @llvm.nvvm.fabs.ftz.f(float %1425) #5, !dbg !118
  %1699 = tail call float @llvm.nvvm.fabs.f(float %1425) #5, !dbg !118
  %.01.i169 = select i1 %.not.i168, float %1699, float %1698, !dbg !118
  %1700 = fcmp ult float %.01.i169, 0x3FE3333340000000, !dbg !118
  br i1 %1700, label %__internal_fmad.exit3.i175, label %__internal_fmad.exit1.i170, !dbg !118

__internal_fmad.exit1.i170:                       ; preds = %__nv_tanhf.exit167
  %1701 = fmul float %.01.i169, 0x4007154760000000, !dbg !118
  %1702 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1701) #5, !dbg !118
  %1703 = fadd float %1702, 1.000000e+00, !dbg !118
  %1704 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1703) #6, !dbg !118, !srcloc !59
  %1705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i171 = icmp eq i32 %1705, 0, !dbg !118
  %1706 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1704, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1707 = tail call float @llvm.nvvm.fma.rn.f(float %1704, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i172 = select i1 %.not6.i171, float %1707, float %1706, !dbg !118
  %1708 = fcmp oge float %.01.i169, 0x4022059680000000, !dbg !118
  %s.0.i173 = select i1 %1708, float 1.000000e+00, float %.03.i172, !dbg !118
  %1709 = bitcast float %s.0.i173 to i32, !dbg !118
  %1710 = bitcast float %1425 to i32, !dbg !118
  %1711 = and i32 %1710, -2147483648, !dbg !118
  %1712 = or i32 %1711, %1709, !dbg !118
  %1713 = bitcast i32 %1712 to float, !dbg !118
  br label %__nv_tanhf.exit186, !dbg !118

__internal_fmad.exit3.i175:                       ; preds = %__nv_tanhf.exit167
  %1714 = fmul float %1425, %1425, !dbg !118
  %1715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i176 = icmp eq i32 %1715, 0, !dbg !118
  %1716 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1714, float 0xBFAAC795C0000000) #5, !dbg !118
  %1717 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1714, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i177 = select i1 %.not1.i176, float %1717, float %1716, !dbg !118
  %1718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i178 = icmp eq i32 %1718, 0, !dbg !118
  %1719 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i177, float %1714, float 0x3FC10B2820000000) #5, !dbg !118
  %1720 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i177, float %1714, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i179 = select i1 %.not2.i178, float %1720, float %1719, !dbg !118
  %1721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i180 = icmp eq i32 %1721, 0, !dbg !118
  %1722 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i179, float %1714, float 0xBFD5553DA0000000) #5, !dbg !118
  %1723 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i179, float %1714, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i181 = select i1 %.not3.i180, float %1723, float %1722, !dbg !118
  %1724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i182 = icmp eq i32 %1724, 0, !dbg !118
  %1725 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i181, float %1714, float 0.000000e+00) #5, !dbg !118
  %1726 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i181, float %1714, float 0.000000e+00) #5, !dbg !118
  %.04.i183 = select i1 %.not4.i182, float %1726, float %1725, !dbg !118
  %1727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i184 = icmp eq i32 %1727, 0, !dbg !118
  %1728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i183, float %1425, float %1425) #5, !dbg !118
  %1729 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i183, float %1425, float %1425) #5, !dbg !118
  %.02.i185 = select i1 %.not5.i184, float %1729, float %1728, !dbg !118
  br label %__nv_tanhf.exit186, !dbg !118

__nv_tanhf.exit186:                               ; preds = %__internal_fmad.exit1.i170, %__internal_fmad.exit3.i175
  %s.1.i174 = phi float [ %1713, %__internal_fmad.exit1.i170 ], [ %.02.i185, %__internal_fmad.exit3.i175 ], !dbg !118
  %1730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i187 = icmp eq i32 %1730, 0, !dbg !118
  %1731 = tail call float @llvm.nvvm.fabs.ftz.f(float %1426) #5, !dbg !118
  %1732 = tail call float @llvm.nvvm.fabs.f(float %1426) #5, !dbg !118
  %.01.i188 = select i1 %.not.i187, float %1732, float %1731, !dbg !118
  %1733 = fcmp ult float %.01.i188, 0x3FE3333340000000, !dbg !118
  br i1 %1733, label %__internal_fmad.exit3.i194, label %__internal_fmad.exit1.i189, !dbg !118

__internal_fmad.exit1.i189:                       ; preds = %__nv_tanhf.exit186
  %1734 = fmul float %.01.i188, 0x4007154760000000, !dbg !118
  %1735 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1734) #5, !dbg !118
  %1736 = fadd float %1735, 1.000000e+00, !dbg !118
  %1737 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1736) #6, !dbg !118, !srcloc !59
  %1738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i190 = icmp eq i32 %1738, 0, !dbg !118
  %1739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1737, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1740 = tail call float @llvm.nvvm.fma.rn.f(float %1737, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i191 = select i1 %.not6.i190, float %1740, float %1739, !dbg !118
  %1741 = fcmp oge float %.01.i188, 0x4022059680000000, !dbg !118
  %s.0.i192 = select i1 %1741, float 1.000000e+00, float %.03.i191, !dbg !118
  %1742 = bitcast float %s.0.i192 to i32, !dbg !118
  %1743 = bitcast float %1426 to i32, !dbg !118
  %1744 = and i32 %1743, -2147483648, !dbg !118
  %1745 = or i32 %1744, %1742, !dbg !118
  %1746 = bitcast i32 %1745 to float, !dbg !118
  br label %__nv_tanhf.exit205, !dbg !118

__internal_fmad.exit3.i194:                       ; preds = %__nv_tanhf.exit186
  %1747 = fmul float %1426, %1426, !dbg !118
  %1748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i195 = icmp eq i32 %1748, 0, !dbg !118
  %1749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1747, float 0xBFAAC795C0000000) #5, !dbg !118
  %1750 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1747, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i196 = select i1 %.not1.i195, float %1750, float %1749, !dbg !118
  %1751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i197 = icmp eq i32 %1751, 0, !dbg !118
  %1752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i196, float %1747, float 0x3FC10B2820000000) #5, !dbg !118
  %1753 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i196, float %1747, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i198 = select i1 %.not2.i197, float %1753, float %1752, !dbg !118
  %1754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i199 = icmp eq i32 %1754, 0, !dbg !118
  %1755 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i198, float %1747, float 0xBFD5553DA0000000) #5, !dbg !118
  %1756 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i198, float %1747, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i200 = select i1 %.not3.i199, float %1756, float %1755, !dbg !118
  %1757 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i201 = icmp eq i32 %1757, 0, !dbg !118
  %1758 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i200, float %1747, float 0.000000e+00) #5, !dbg !118
  %1759 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i200, float %1747, float 0.000000e+00) #5, !dbg !118
  %.04.i202 = select i1 %.not4.i201, float %1759, float %1758, !dbg !118
  %1760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i203 = icmp eq i32 %1760, 0, !dbg !118
  %1761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i202, float %1426, float %1426) #5, !dbg !118
  %1762 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i202, float %1426, float %1426) #5, !dbg !118
  %.02.i204 = select i1 %.not5.i203, float %1762, float %1761, !dbg !118
  br label %__nv_tanhf.exit205, !dbg !118

__nv_tanhf.exit205:                               ; preds = %__internal_fmad.exit1.i189, %__internal_fmad.exit3.i194
  %s.1.i193 = phi float [ %1746, %__internal_fmad.exit1.i189 ], [ %.02.i204, %__internal_fmad.exit3.i194 ], !dbg !118
  %1763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i206 = icmp eq i32 %1763, 0, !dbg !118
  %1764 = tail call float @llvm.nvvm.fabs.ftz.f(float %1427) #5, !dbg !118
  %1765 = tail call float @llvm.nvvm.fabs.f(float %1427) #5, !dbg !118
  %.01.i207 = select i1 %.not.i206, float %1765, float %1764, !dbg !118
  %1766 = fcmp ult float %.01.i207, 0x3FE3333340000000, !dbg !118
  br i1 %1766, label %__internal_fmad.exit3.i213, label %__internal_fmad.exit1.i208, !dbg !118

__internal_fmad.exit1.i208:                       ; preds = %__nv_tanhf.exit205
  %1767 = fmul float %.01.i207, 0x4007154760000000, !dbg !118
  %1768 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1767) #5, !dbg !118
  %1769 = fadd float %1768, 1.000000e+00, !dbg !118
  %1770 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1769) #6, !dbg !118, !srcloc !59
  %1771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i209 = icmp eq i32 %1771, 0, !dbg !118
  %1772 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1770, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1773 = tail call float @llvm.nvvm.fma.rn.f(float %1770, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i210 = select i1 %.not6.i209, float %1773, float %1772, !dbg !118
  %1774 = fcmp oge float %.01.i207, 0x4022059680000000, !dbg !118
  %s.0.i211 = select i1 %1774, float 1.000000e+00, float %.03.i210, !dbg !118
  %1775 = bitcast float %s.0.i211 to i32, !dbg !118
  %1776 = bitcast float %1427 to i32, !dbg !118
  %1777 = and i32 %1776, -2147483648, !dbg !118
  %1778 = or i32 %1777, %1775, !dbg !118
  %1779 = bitcast i32 %1778 to float, !dbg !118
  br label %__nv_tanhf.exit224, !dbg !118

__internal_fmad.exit3.i213:                       ; preds = %__nv_tanhf.exit205
  %1780 = fmul float %1427, %1427, !dbg !118
  %1781 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i214 = icmp eq i32 %1781, 0, !dbg !118
  %1782 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1780, float 0xBFAAC795C0000000) #5, !dbg !118
  %1783 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1780, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i215 = select i1 %.not1.i214, float %1783, float %1782, !dbg !118
  %1784 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i216 = icmp eq i32 %1784, 0, !dbg !118
  %1785 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i215, float %1780, float 0x3FC10B2820000000) #5, !dbg !118
  %1786 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i215, float %1780, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i217 = select i1 %.not2.i216, float %1786, float %1785, !dbg !118
  %1787 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i218 = icmp eq i32 %1787, 0, !dbg !118
  %1788 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i217, float %1780, float 0xBFD5553DA0000000) #5, !dbg !118
  %1789 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i217, float %1780, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i219 = select i1 %.not3.i218, float %1789, float %1788, !dbg !118
  %1790 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i220 = icmp eq i32 %1790, 0, !dbg !118
  %1791 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i219, float %1780, float 0.000000e+00) #5, !dbg !118
  %1792 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i219, float %1780, float 0.000000e+00) #5, !dbg !118
  %.04.i221 = select i1 %.not4.i220, float %1792, float %1791, !dbg !118
  %1793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i222 = icmp eq i32 %1793, 0, !dbg !118
  %1794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i221, float %1427, float %1427) #5, !dbg !118
  %1795 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i221, float %1427, float %1427) #5, !dbg !118
  %.02.i223 = select i1 %.not5.i222, float %1795, float %1794, !dbg !118
  br label %__nv_tanhf.exit224, !dbg !118

__nv_tanhf.exit224:                               ; preds = %__internal_fmad.exit1.i208, %__internal_fmad.exit3.i213
  %s.1.i212 = phi float [ %1779, %__internal_fmad.exit1.i208 ], [ %.02.i223, %__internal_fmad.exit3.i213 ], !dbg !118
  %1796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i225 = icmp eq i32 %1796, 0, !dbg !118
  %1797 = tail call float @llvm.nvvm.fabs.ftz.f(float %1428) #5, !dbg !118
  %1798 = tail call float @llvm.nvvm.fabs.f(float %1428) #5, !dbg !118
  %.01.i226 = select i1 %.not.i225, float %1798, float %1797, !dbg !118
  %1799 = fcmp ult float %.01.i226, 0x3FE3333340000000, !dbg !118
  br i1 %1799, label %__internal_fmad.exit3.i232, label %__internal_fmad.exit1.i227, !dbg !118

__internal_fmad.exit1.i227:                       ; preds = %__nv_tanhf.exit224
  %1800 = fmul float %.01.i226, 0x4007154760000000, !dbg !118
  %1801 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1800) #5, !dbg !118
  %1802 = fadd float %1801, 1.000000e+00, !dbg !118
  %1803 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1802) #6, !dbg !118, !srcloc !59
  %1804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i228 = icmp eq i32 %1804, 0, !dbg !118
  %1805 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1803, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1806 = tail call float @llvm.nvvm.fma.rn.f(float %1803, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i229 = select i1 %.not6.i228, float %1806, float %1805, !dbg !118
  %1807 = fcmp oge float %.01.i226, 0x4022059680000000, !dbg !118
  %s.0.i230 = select i1 %1807, float 1.000000e+00, float %.03.i229, !dbg !118
  %1808 = bitcast float %s.0.i230 to i32, !dbg !118
  %1809 = bitcast float %1428 to i32, !dbg !118
  %1810 = and i32 %1809, -2147483648, !dbg !118
  %1811 = or i32 %1810, %1808, !dbg !118
  %1812 = bitcast i32 %1811 to float, !dbg !118
  br label %__nv_tanhf.exit243, !dbg !118

__internal_fmad.exit3.i232:                       ; preds = %__nv_tanhf.exit224
  %1813 = fmul float %1428, %1428, !dbg !118
  %1814 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i233 = icmp eq i32 %1814, 0, !dbg !118
  %1815 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1813, float 0xBFAAC795C0000000) #5, !dbg !118
  %1816 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1813, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i234 = select i1 %.not1.i233, float %1816, float %1815, !dbg !118
  %1817 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i235 = icmp eq i32 %1817, 0, !dbg !118
  %1818 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i234, float %1813, float 0x3FC10B2820000000) #5, !dbg !118
  %1819 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i234, float %1813, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i236 = select i1 %.not2.i235, float %1819, float %1818, !dbg !118
  %1820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i237 = icmp eq i32 %1820, 0, !dbg !118
  %1821 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i236, float %1813, float 0xBFD5553DA0000000) #5, !dbg !118
  %1822 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i236, float %1813, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i238 = select i1 %.not3.i237, float %1822, float %1821, !dbg !118
  %1823 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i239 = icmp eq i32 %1823, 0, !dbg !118
  %1824 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i238, float %1813, float 0.000000e+00) #5, !dbg !118
  %1825 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i238, float %1813, float 0.000000e+00) #5, !dbg !118
  %.04.i240 = select i1 %.not4.i239, float %1825, float %1824, !dbg !118
  %1826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i241 = icmp eq i32 %1826, 0, !dbg !118
  %1827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i240, float %1428, float %1428) #5, !dbg !118
  %1828 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i240, float %1428, float %1428) #5, !dbg !118
  %.02.i242 = select i1 %.not5.i241, float %1828, float %1827, !dbg !118
  br label %__nv_tanhf.exit243, !dbg !118

__nv_tanhf.exit243:                               ; preds = %__internal_fmad.exit1.i227, %__internal_fmad.exit3.i232
  %s.1.i231 = phi float [ %1812, %__internal_fmad.exit1.i227 ], [ %.02.i242, %__internal_fmad.exit3.i232 ], !dbg !118
  %1829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i244 = icmp eq i32 %1829, 0, !dbg !118
  %1830 = tail call float @llvm.nvvm.fabs.ftz.f(float %1429) #5, !dbg !118
  %1831 = tail call float @llvm.nvvm.fabs.f(float %1429) #5, !dbg !118
  %.01.i245 = select i1 %.not.i244, float %1831, float %1830, !dbg !118
  %1832 = fcmp ult float %.01.i245, 0x3FE3333340000000, !dbg !118
  br i1 %1832, label %__internal_fmad.exit3.i251, label %__internal_fmad.exit1.i246, !dbg !118

__internal_fmad.exit1.i246:                       ; preds = %__nv_tanhf.exit243
  %1833 = fmul float %.01.i245, 0x4007154760000000, !dbg !118
  %1834 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1833) #5, !dbg !118
  %1835 = fadd float %1834, 1.000000e+00, !dbg !118
  %1836 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1835) #6, !dbg !118, !srcloc !59
  %1837 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i247 = icmp eq i32 %1837, 0, !dbg !118
  %1838 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1836, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1839 = tail call float @llvm.nvvm.fma.rn.f(float %1836, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i248 = select i1 %.not6.i247, float %1839, float %1838, !dbg !118
  %1840 = fcmp oge float %.01.i245, 0x4022059680000000, !dbg !118
  %s.0.i249 = select i1 %1840, float 1.000000e+00, float %.03.i248, !dbg !118
  %1841 = bitcast float %s.0.i249 to i32, !dbg !118
  %1842 = bitcast float %1429 to i32, !dbg !118
  %1843 = and i32 %1842, -2147483648, !dbg !118
  %1844 = or i32 %1843, %1841, !dbg !118
  %1845 = bitcast i32 %1844 to float, !dbg !118
  br label %__nv_tanhf.exit262, !dbg !118

__internal_fmad.exit3.i251:                       ; preds = %__nv_tanhf.exit243
  %1846 = fmul float %1429, %1429, !dbg !118
  %1847 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i252 = icmp eq i32 %1847, 0, !dbg !118
  %1848 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1846, float 0xBFAAC795C0000000) #5, !dbg !118
  %1849 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1846, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i253 = select i1 %.not1.i252, float %1849, float %1848, !dbg !118
  %1850 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i254 = icmp eq i32 %1850, 0, !dbg !118
  %1851 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i253, float %1846, float 0x3FC10B2820000000) #5, !dbg !118
  %1852 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i253, float %1846, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i255 = select i1 %.not2.i254, float %1852, float %1851, !dbg !118
  %1853 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i256 = icmp eq i32 %1853, 0, !dbg !118
  %1854 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i255, float %1846, float 0xBFD5553DA0000000) #5, !dbg !118
  %1855 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i255, float %1846, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i257 = select i1 %.not3.i256, float %1855, float %1854, !dbg !118
  %1856 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i258 = icmp eq i32 %1856, 0, !dbg !118
  %1857 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i257, float %1846, float 0.000000e+00) #5, !dbg !118
  %1858 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i257, float %1846, float 0.000000e+00) #5, !dbg !118
  %.04.i259 = select i1 %.not4.i258, float %1858, float %1857, !dbg !118
  %1859 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i260 = icmp eq i32 %1859, 0, !dbg !118
  %1860 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i259, float %1429, float %1429) #5, !dbg !118
  %1861 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i259, float %1429, float %1429) #5, !dbg !118
  %.02.i261 = select i1 %.not5.i260, float %1861, float %1860, !dbg !118
  br label %__nv_tanhf.exit262, !dbg !118

__nv_tanhf.exit262:                               ; preds = %__internal_fmad.exit1.i246, %__internal_fmad.exit3.i251
  %s.1.i250 = phi float [ %1845, %__internal_fmad.exit1.i246 ], [ %.02.i261, %__internal_fmad.exit3.i251 ], !dbg !118
  %1862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i263 = icmp eq i32 %1862, 0, !dbg !118
  %1863 = tail call float @llvm.nvvm.fabs.ftz.f(float %1430) #5, !dbg !118
  %1864 = tail call float @llvm.nvvm.fabs.f(float %1430) #5, !dbg !118
  %.01.i264 = select i1 %.not.i263, float %1864, float %1863, !dbg !118
  %1865 = fcmp ult float %.01.i264, 0x3FE3333340000000, !dbg !118
  br i1 %1865, label %__internal_fmad.exit3.i270, label %__internal_fmad.exit1.i265, !dbg !118

__internal_fmad.exit1.i265:                       ; preds = %__nv_tanhf.exit262
  %1866 = fmul float %.01.i264, 0x4007154760000000, !dbg !118
  %1867 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1866) #5, !dbg !118
  %1868 = fadd float %1867, 1.000000e+00, !dbg !118
  %1869 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1868) #6, !dbg !118, !srcloc !59
  %1870 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i266 = icmp eq i32 %1870, 0, !dbg !118
  %1871 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1869, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1872 = tail call float @llvm.nvvm.fma.rn.f(float %1869, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i267 = select i1 %.not6.i266, float %1872, float %1871, !dbg !118
  %1873 = fcmp oge float %.01.i264, 0x4022059680000000, !dbg !118
  %s.0.i268 = select i1 %1873, float 1.000000e+00, float %.03.i267, !dbg !118
  %1874 = bitcast float %s.0.i268 to i32, !dbg !118
  %1875 = bitcast float %1430 to i32, !dbg !118
  %1876 = and i32 %1875, -2147483648, !dbg !118
  %1877 = or i32 %1876, %1874, !dbg !118
  %1878 = bitcast i32 %1877 to float, !dbg !118
  br label %__nv_tanhf.exit281, !dbg !118

__internal_fmad.exit3.i270:                       ; preds = %__nv_tanhf.exit262
  %1879 = fmul float %1430, %1430, !dbg !118
  %1880 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i271 = icmp eq i32 %1880, 0, !dbg !118
  %1881 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1879, float 0xBFAAC795C0000000) #5, !dbg !118
  %1882 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1879, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i272 = select i1 %.not1.i271, float %1882, float %1881, !dbg !118
  %1883 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i273 = icmp eq i32 %1883, 0, !dbg !118
  %1884 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i272, float %1879, float 0x3FC10B2820000000) #5, !dbg !118
  %1885 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i272, float %1879, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i274 = select i1 %.not2.i273, float %1885, float %1884, !dbg !118
  %1886 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i275 = icmp eq i32 %1886, 0, !dbg !118
  %1887 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i274, float %1879, float 0xBFD5553DA0000000) #5, !dbg !118
  %1888 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i274, float %1879, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i276 = select i1 %.not3.i275, float %1888, float %1887, !dbg !118
  %1889 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i277 = icmp eq i32 %1889, 0, !dbg !118
  %1890 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i276, float %1879, float 0.000000e+00) #5, !dbg !118
  %1891 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i276, float %1879, float 0.000000e+00) #5, !dbg !118
  %.04.i278 = select i1 %.not4.i277, float %1891, float %1890, !dbg !118
  %1892 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i279 = icmp eq i32 %1892, 0, !dbg !118
  %1893 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i278, float %1430, float %1430) #5, !dbg !118
  %1894 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i278, float %1430, float %1430) #5, !dbg !118
  %.02.i280 = select i1 %.not5.i279, float %1894, float %1893, !dbg !118
  br label %__nv_tanhf.exit281, !dbg !118

__nv_tanhf.exit281:                               ; preds = %__internal_fmad.exit1.i265, %__internal_fmad.exit3.i270
  %s.1.i269 = phi float [ %1878, %__internal_fmad.exit1.i265 ], [ %.02.i280, %__internal_fmad.exit3.i270 ], !dbg !118
  %1895 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i282 = icmp eq i32 %1895, 0, !dbg !118
  %1896 = tail call float @llvm.nvvm.fabs.ftz.f(float %1431) #5, !dbg !118
  %1897 = tail call float @llvm.nvvm.fabs.f(float %1431) #5, !dbg !118
  %.01.i283 = select i1 %.not.i282, float %1897, float %1896, !dbg !118
  %1898 = fcmp ult float %.01.i283, 0x3FE3333340000000, !dbg !118
  br i1 %1898, label %__internal_fmad.exit3.i289, label %__internal_fmad.exit1.i284, !dbg !118

__internal_fmad.exit1.i284:                       ; preds = %__nv_tanhf.exit281
  %1899 = fmul float %.01.i283, 0x4007154760000000, !dbg !118
  %1900 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1899) #5, !dbg !118
  %1901 = fadd float %1900, 1.000000e+00, !dbg !118
  %1902 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1901) #6, !dbg !118, !srcloc !59
  %1903 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i285 = icmp eq i32 %1903, 0, !dbg !118
  %1904 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1902, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1905 = tail call float @llvm.nvvm.fma.rn.f(float %1902, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i286 = select i1 %.not6.i285, float %1905, float %1904, !dbg !118
  %1906 = fcmp oge float %.01.i283, 0x4022059680000000, !dbg !118
  %s.0.i287 = select i1 %1906, float 1.000000e+00, float %.03.i286, !dbg !118
  %1907 = bitcast float %s.0.i287 to i32, !dbg !118
  %1908 = bitcast float %1431 to i32, !dbg !118
  %1909 = and i32 %1908, -2147483648, !dbg !118
  %1910 = or i32 %1909, %1907, !dbg !118
  %1911 = bitcast i32 %1910 to float, !dbg !118
  br label %__nv_tanhf.exit300, !dbg !118

__internal_fmad.exit3.i289:                       ; preds = %__nv_tanhf.exit281
  %1912 = fmul float %1431, %1431, !dbg !118
  %1913 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i290 = icmp eq i32 %1913, 0, !dbg !118
  %1914 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1912, float 0xBFAAC795C0000000) #5, !dbg !118
  %1915 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1912, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i291 = select i1 %.not1.i290, float %1915, float %1914, !dbg !118
  %1916 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i292 = icmp eq i32 %1916, 0, !dbg !118
  %1917 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i291, float %1912, float 0x3FC10B2820000000) #5, !dbg !118
  %1918 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i291, float %1912, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i293 = select i1 %.not2.i292, float %1918, float %1917, !dbg !118
  %1919 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i294 = icmp eq i32 %1919, 0, !dbg !118
  %1920 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i293, float %1912, float 0xBFD5553DA0000000) #5, !dbg !118
  %1921 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i293, float %1912, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i295 = select i1 %.not3.i294, float %1921, float %1920, !dbg !118
  %1922 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i296 = icmp eq i32 %1922, 0, !dbg !118
  %1923 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i295, float %1912, float 0.000000e+00) #5, !dbg !118
  %1924 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i295, float %1912, float 0.000000e+00) #5, !dbg !118
  %.04.i297 = select i1 %.not4.i296, float %1924, float %1923, !dbg !118
  %1925 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i298 = icmp eq i32 %1925, 0, !dbg !118
  %1926 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i297, float %1431, float %1431) #5, !dbg !118
  %1927 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i297, float %1431, float %1431) #5, !dbg !118
  %.02.i299 = select i1 %.not5.i298, float %1927, float %1926, !dbg !118
  br label %__nv_tanhf.exit300, !dbg !118

__nv_tanhf.exit300:                               ; preds = %__internal_fmad.exit1.i284, %__internal_fmad.exit3.i289
  %s.1.i288 = phi float [ %1911, %__internal_fmad.exit1.i284 ], [ %.02.i299, %__internal_fmad.exit3.i289 ], !dbg !118
  %1928 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not.i301 = icmp eq i32 %1928, 0, !dbg !118
  %1929 = tail call float @llvm.nvvm.fabs.ftz.f(float %1432) #5, !dbg !118
  %1930 = tail call float @llvm.nvvm.fabs.f(float %1432) #5, !dbg !118
  %.01.i302 = select i1 %.not.i301, float %1930, float %1929, !dbg !118
  %1931 = fcmp ult float %.01.i302, 0x3FE3333340000000, !dbg !118
  br i1 %1931, label %__internal_fmad.exit3.i308, label %__internal_fmad.exit1.i303, !dbg !118

__internal_fmad.exit1.i303:                       ; preds = %__nv_tanhf.exit300
  %1932 = fmul float %.01.i302, 0x4007154760000000, !dbg !118
  %1933 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1932) #5, !dbg !118
  %1934 = fadd float %1933, 1.000000e+00, !dbg !118
  %1935 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1934) #6, !dbg !118, !srcloc !59
  %1936 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not6.i304 = icmp eq i32 %1936, 0, !dbg !118
  %1937 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1935, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %1938 = tail call float @llvm.nvvm.fma.rn.f(float %1935, float -2.000000e+00, float 1.000000e+00) #5, !dbg !118
  %.03.i305 = select i1 %.not6.i304, float %1938, float %1937, !dbg !118
  %1939 = fcmp oge float %.01.i302, 0x4022059680000000, !dbg !118
  %s.0.i306 = select i1 %1939, float 1.000000e+00, float %.03.i305, !dbg !118
  %1940 = bitcast float %s.0.i306 to i32, !dbg !118
  %1941 = bitcast float %1432 to i32, !dbg !118
  %1942 = and i32 %1941, -2147483648, !dbg !118
  %1943 = or i32 %1942, %1940, !dbg !118
  %1944 = bitcast i32 %1943 to float, !dbg !118
  br label %__nv_tanhf.exit319, !dbg !118

__internal_fmad.exit3.i308:                       ; preds = %__nv_tanhf.exit300
  %1945 = fmul float %1432, %1432, !dbg !118
  %1946 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not1.i309 = icmp eq i32 %1946, 0, !dbg !118
  %1947 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1945, float 0xBFAAC795C0000000) #5, !dbg !118
  %1948 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1945, float 0xBFAAC795C0000000) #5, !dbg !118
  %.06.i310 = select i1 %.not1.i309, float %1948, float %1947, !dbg !118
  %1949 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not2.i311 = icmp eq i32 %1949, 0, !dbg !118
  %1950 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i310, float %1945, float 0x3FC10B2820000000) #5, !dbg !118
  %1951 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i310, float %1945, float 0x3FC10B2820000000) #5, !dbg !118
  %.05.i312 = select i1 %.not2.i311, float %1951, float %1950, !dbg !118
  %1952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not3.i313 = icmp eq i32 %1952, 0, !dbg !118
  %1953 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i312, float %1945, float 0xBFD5553DA0000000) #5, !dbg !118
  %1954 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i312, float %1945, float 0xBFD5553DA0000000) #5, !dbg !118
  %.0.i314 = select i1 %.not3.i313, float %1954, float %1953, !dbg !118
  %1955 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not4.i315 = icmp eq i32 %1955, 0, !dbg !118
  %1956 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i314, float %1945, float 0.000000e+00) #5, !dbg !118
  %1957 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i314, float %1945, float 0.000000e+00) #5, !dbg !118
  %.04.i316 = select i1 %.not4.i315, float %1957, float %1956, !dbg !118
  %1958 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !118
  %.not5.i317 = icmp eq i32 %1958, 0, !dbg !118
  %1959 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i316, float %1432, float %1432) #5, !dbg !118
  %1960 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i316, float %1432, float %1432) #5, !dbg !118
  %.02.i318 = select i1 %.not5.i317, float %1960, float %1959, !dbg !118
  br label %__nv_tanhf.exit319, !dbg !118

__nv_tanhf.exit319:                               ; preds = %__internal_fmad.exit1.i303, %__internal_fmad.exit3.i308
  %s.1.i307 = phi float [ %1944, %__internal_fmad.exit1.i303 ], [ %.02.i318, %__internal_fmad.exit3.i308 ], !dbg !118
  %1961 = fadd float %s.1.i, 1.000000e+00, !dbg !119
  %1962 = fadd float %s.1.i41, 1.000000e+00, !dbg !119
  %1963 = fadd float %s.1.i60, 1.000000e+00, !dbg !119
  %1964 = fadd float %s.1.i79, 1.000000e+00, !dbg !119
  %1965 = fadd float %s.1.i98, 1.000000e+00, !dbg !119
  %1966 = fadd float %s.1.i117, 1.000000e+00, !dbg !119
  %1967 = fadd float %s.1.i136, 1.000000e+00, !dbg !119
  %1968 = fadd float %s.1.i155, 1.000000e+00, !dbg !119
  %1969 = fadd float %s.1.i174, 1.000000e+00, !dbg !119
  %1970 = fadd float %s.1.i193, 1.000000e+00, !dbg !119
  %1971 = fadd float %s.1.i212, 1.000000e+00, !dbg !119
  %1972 = fadd float %s.1.i231, 1.000000e+00, !dbg !119
  %1973 = fadd float %s.1.i250, 1.000000e+00, !dbg !119
  %1974 = fadd float %s.1.i269, 1.000000e+00, !dbg !119
  %1975 = fadd float %s.1.i288, 1.000000e+00, !dbg !119
  %1976 = fadd float %s.1.i307, 1.000000e+00, !dbg !119
  %1977 = fmul float %1337, %1961, !dbg !120
  %1978 = fmul float %1338, %1962, !dbg !120
  %1979 = fmul float %1339, %1963, !dbg !120
  %1980 = fmul float %1340, %1964, !dbg !120
  %1981 = fmul float %1341, %1965, !dbg !120
  %1982 = fmul float %1342, %1966, !dbg !120
  %1983 = fmul float %1343, %1967, !dbg !120
  %1984 = fmul float %1344, %1968, !dbg !120
  %1985 = fmul float %1345, %1969, !dbg !120
  %1986 = fmul float %1346, %1970, !dbg !120
  %1987 = fmul float %1347, %1971, !dbg !120
  %1988 = fmul float %1348, %1972, !dbg !120
  %1989 = fmul float %1349, %1973, !dbg !120
  %1990 = fmul float %1350, %1974, !dbg !120
  %1991 = fmul float %1351, %1975, !dbg !120
  %1992 = fmul float %1352, %1976, !dbg !120
  %1993 = fmul float %1284, %1977, !dbg !121
  %1994 = fmul float %1284, %1978, !dbg !121
  %1995 = fmul float %1284, %1979, !dbg !121
  %1996 = fmul float %1284, %1980, !dbg !121
  %1997 = fmul float %1284, %1981, !dbg !121
  %1998 = fmul float %1284, %1982, !dbg !121
  %1999 = fmul float %1284, %1983, !dbg !121
  %2000 = fmul float %1284, %1984, !dbg !121
  %2001 = fmul float %1284, %1985, !dbg !121
  %2002 = fmul float %1284, %1986, !dbg !121
  %2003 = fmul float %1284, %1987, !dbg !121
  %2004 = fmul float %1284, %1988, !dbg !121
  %2005 = fmul float %1284, %1989, !dbg !121
  %2006 = fmul float %1284, %1990, !dbg !121
  %2007 = fmul float %1284, %1991, !dbg !121
  %2008 = fmul float %1284, %1992, !dbg !121
  %2009 = tail call float @llvm.nvvm.round.f(float %1993) #5, !dbg !122
  %2010 = tail call float @llvm.nvvm.round.f(float %1994) #5, !dbg !122
  %2011 = tail call float @llvm.nvvm.round.f(float %1995) #5, !dbg !122
  %2012 = tail call float @llvm.nvvm.round.f(float %1996) #5, !dbg !122
  %2013 = tail call float @llvm.nvvm.round.f(float %1997) #5, !dbg !122
  %2014 = tail call float @llvm.nvvm.round.f(float %1998) #5, !dbg !122
  %2015 = tail call float @llvm.nvvm.round.f(float %1999) #5, !dbg !122
  %2016 = tail call float @llvm.nvvm.round.f(float %2000) #5, !dbg !122
  %2017 = tail call float @llvm.nvvm.round.f(float %2001) #5, !dbg !122
  %2018 = tail call float @llvm.nvvm.round.f(float %2002) #5, !dbg !122
  %2019 = tail call float @llvm.nvvm.round.f(float %2003) #5, !dbg !122
  %2020 = tail call float @llvm.nvvm.round.f(float %2004) #5, !dbg !122
  %2021 = tail call float @llvm.nvvm.round.f(float %2005) #5, !dbg !122
  %2022 = tail call float @llvm.nvvm.round.f(float %2006) #5, !dbg !122
  %2023 = tail call float @llvm.nvvm.round.f(float %2007) #5, !dbg !122
  %2024 = tail call float @llvm.nvvm.round.f(float %2008) #5, !dbg !122
  %2025 = insertelement <4 x float> poison, float %2009, i64 0, !dbg !123
  %2026 = insertelement <4 x float> %2025, float %2010, i64 1, !dbg !123
  %2027 = insertelement <4 x float> %2026, float %2011, i64 2, !dbg !123
  %2028 = insertelement <4 x float> %2027, float %2012, i64 3, !dbg !123
  %2029 = fcmp ogt <4 x float> %2028, splat (float -1.270000e+02), !dbg !123
  %2030 = fcmp uno <4 x float> %2028, zeroinitializer, !dbg !125
  %2031 = or <4 x i1> %2029, %2030, !dbg !126
  %2032 = select <4 x i1> %2031, <4 x float> %2028, <4 x float> splat (float -1.270000e+02), !dbg !127
  %2033 = fcmp olt <4 x float> %2032, splat (float 1.270000e+02), !dbg !128
  %2034 = fcmp uno <4 x float> %2032, zeroinitializer, !dbg !130
  %2035 = or <4 x i1> %2033, %2034, !dbg !131
  %2036 = fptosi <4 x float> %2032 to <4 x i8>, !dbg !132
  %2037 = select <4 x i1> %2035, <4 x i8> %2036, <4 x i8> splat (i8 127), !dbg !133
  %2038 = insertelement <4 x float> poison, float %2013, i64 0, !dbg !123
  %2039 = insertelement <4 x float> %2038, float %2014, i64 1, !dbg !123
  %2040 = insertelement <4 x float> %2039, float %2015, i64 2, !dbg !123
  %2041 = insertelement <4 x float> %2040, float %2016, i64 3, !dbg !123
  %2042 = fcmp ogt <4 x float> %2041, splat (float -1.270000e+02), !dbg !123
  %2043 = fcmp uno <4 x float> %2041, zeroinitializer, !dbg !125
  %2044 = or <4 x i1> %2042, %2043, !dbg !126
  %2045 = select <4 x i1> %2044, <4 x float> %2041, <4 x float> splat (float -1.270000e+02), !dbg !127
  %2046 = fcmp olt <4 x float> %2045, splat (float 1.270000e+02), !dbg !128
  %2047 = fcmp uno <4 x float> %2045, zeroinitializer, !dbg !130
  %2048 = or <4 x i1> %2046, %2047, !dbg !131
  %2049 = fptosi <4 x float> %2045 to <4 x i8>, !dbg !132
  %2050 = select <4 x i1> %2048, <4 x i8> %2049, <4 x i8> splat (i8 127), !dbg !133
  %2051 = insertelement <4 x float> poison, float %2017, i64 0, !dbg !123
  %2052 = insertelement <4 x float> %2051, float %2018, i64 1, !dbg !123
  %2053 = insertelement <4 x float> %2052, float %2019, i64 2, !dbg !123
  %2054 = insertelement <4 x float> %2053, float %2020, i64 3, !dbg !123
  %2055 = fcmp ogt <4 x float> %2054, splat (float -1.270000e+02), !dbg !123
  %2056 = fcmp uno <4 x float> %2054, zeroinitializer, !dbg !125
  %2057 = or <4 x i1> %2055, %2056, !dbg !126
  %2058 = select <4 x i1> %2057, <4 x float> %2054, <4 x float> splat (float -1.270000e+02), !dbg !127
  %2059 = fcmp olt <4 x float> %2058, splat (float 1.270000e+02), !dbg !128
  %2060 = fcmp uno <4 x float> %2058, zeroinitializer, !dbg !130
  %2061 = or <4 x i1> %2059, %2060, !dbg !131
  %2062 = fptosi <4 x float> %2058 to <4 x i8>, !dbg !132
  %2063 = select <4 x i1> %2061, <4 x i8> %2062, <4 x i8> splat (i8 127), !dbg !133
  %2064 = insertelement <4 x float> poison, float %2021, i64 0, !dbg !123
  %2065 = insertelement <4 x float> %2064, float %2022, i64 1, !dbg !123
  %2066 = insertelement <4 x float> %2065, float %2023, i64 2, !dbg !123
  %2067 = insertelement <4 x float> %2066, float %2024, i64 3, !dbg !123
  %2068 = fcmp ogt <4 x float> %2067, splat (float -1.270000e+02), !dbg !123
  %2069 = fcmp uno <4 x float> %2067, zeroinitializer, !dbg !125
  %2070 = or <4 x i1> %2068, %2069, !dbg !126
  %2071 = select <4 x i1> %2070, <4 x float> %2067, <4 x float> splat (float -1.270000e+02), !dbg !127
  %2072 = fcmp olt <4 x float> %2071, splat (float 1.270000e+02), !dbg !128
  %2073 = fcmp uno <4 x float> %2071, zeroinitializer, !dbg !130
  %2074 = or <4 x i1> %2072, %2073, !dbg !131
  %2075 = fptosi <4 x float> %2071 to <4 x i8>, !dbg !132
  %2076 = select <4 x i1> %2074, <4 x i8> %2075, <4 x i8> splat (i8 127), !dbg !133
  %2077 = getelementptr i8, ptr addrspace(1) %8, i64 %1293, !dbg !134
  %2078 = bitcast <4 x i8> %2037 to i32, !dbg !135
  %2079 = bitcast <4 x i8> %2050 to i32, !dbg !135
  %2080 = bitcast <4 x i8> %2063 to i32, !dbg !135
  %2081 = bitcast <4 x i8> %2076 to i32, !dbg !135
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %2078, i32 %2079, i32 %2080, i32 %2081, ptr addrspace(1) %2077, i1 %14) #5, !dbg !135
  %indvars.iv.next657 = add nuw nsw i64 %indvars.iv656, 4096, !dbg !108
  %2082 = icmp samesign ult i64 %indvars.iv656, 8192, !dbg !108
  br i1 %2082, label %1287, label %2083, !dbg !108

2083:                                             ; preds = %__nv_tanhf.exit319
  ret void, !dbg !136
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6gkrgu5alm7ohqdvz5epi37xuicsuvj6jhl357dxwzhi7uhuweg.py", directory: "/tmp/torchinductor_root/6g")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_17, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_17", linkageName: "triton_red_fused__to_copy_add_amax_amin_clamp_gelu_mul_reciprocal_17", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 25, column: 21, scope: !6)
!11 = !DILocation(line: 26, column: 37, scope: !6)
!12 = !DILocation(line: 29, column: 30, scope: !6)
!13 = !DILocation(line: 29, column: 35, scope: !6)
!14 = !DILocation(line: 30, column: 30, scope: !6)
!15 = !DILocation(line: 30, column: 35, scope: !6)
!16 = !DILocation(line: 39, column: 47, scope: !6)
!17 = !DILocation(line: 97, column: 29, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !6, file: !19, discriminator: 0)
!19 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!20 = !DILocation(line: 44, column: 44, scope: !6)
!21 = !DILocation(line: 45, column: 16, scope: !6)
!22 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !23)
!23 = !DILocation(line: 46, column: 44, scope: !6)
!24 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !25)
!25 = !DILocation(line: 47, column: 44, scope: !6)
!26 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !25)
!27 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !25)
!28 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !25)
!29 = !DILocation(line: 49, column: 23, scope: !6)
!30 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !31)
!31 = !DILocation(line: 52, column: 46, scope: !6)
!32 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !31)
!33 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !31)
!34 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !31)
!35 = !DILocation(line: 33, column: 40, scope: !6)
!36 = !DILocation(line: 76, column: 50, scope: !6)
!37 = !DILocation(line: 54, column: 23, scope: !6)
!38 = !DILocation(line: 74, column: 50, scope: !6)
!39 = !DILocation(line: 34, column: 31, scope: !6)
!40 = !DILocation(line: 39, column: 41, scope: !6)
!41 = !DILocation(line: 39, column: 34, scope: !6)
!42 = !DILocation(line: 39, column: 52, scope: !6)
!43 = !DILocation(line: 40, column: 35, scope: !6)
!44 = !DILocation(line: 40, column: 42, scope: !6)
!45 = !DILocation(line: 41, column: 35, scope: !6)
!46 = !DILocation(line: 41, column: 42, scope: !6)
!47 = !DILocation(line: 40, column: 95, scope: !6)
!48 = !DILocation(line: 41, column: 95, scope: !6)
!49 = !DILocation(line: 42, column: 23, scope: !6)
!50 = !DILocation(line: 55, column: 24, scope: !6)
!51 = !DILocation(line: 56, column: 24, scope: !6)
!52 = !DILocation(line: 59, column: 24, scope: !6)
!53 = !DILocation(line: 64, column: 24, scope: !6)
!54 = !DILocation(line: 60, column: 24, scope: !6)
!55 = !DILocation(line: 61, column: 24, scope: !6)
!56 = !DILocation(line: 63, column: 24, scope: !6)
!57 = !DILocation(line: 66, column: 24, scope: !6)
!58 = !DILocation(line: 67, column: 31, scope: !6)
!59 = !{i32 21046}
!60 = !DILocation(line: 69, column: 24, scope: !6)
!61 = !DILocation(line: 70, column: 24, scope: !6)
!62 = !DILocation(line: 96, column: 21, scope: !18, inlinedAt: !63)
!63 = !DILocation(line: 73, column: 47, scope: !6)
!64 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !65)
!65 = !DILocation(line: 75, column: 47, scope: !6)
!66 = !DILocation(line: 94, column: 15, scope: !18, inlinedAt: !63)
!67 = !DILocation(line: 96, column: 16, scope: !18, inlinedAt: !63)
!68 = !DILocation(line: 97, column: 29, scope: !18, inlinedAt: !63)
!69 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !65)
!70 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !65)
!71 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !65)
!72 = !DILocation(line: 77, column: 29, scope: !6)
!73 = !DILocation(line: 77, column: 54, scope: !6)
!74 = !DILocation(line: 110, column: 29, scope: !18, inlinedAt: !75)
!75 = !DILocation(line: 78, column: 40, scope: !6)
!76 = !DILocation(line: 94, column: 15, scope: !77, inlinedAt: !75)
!77 = distinct !DILexicalBlockFile(scope: !18, file: !19, discriminator: 0)
!78 = !DILocation(line: 96, column: 21, scope: !77, inlinedAt: !75)
!79 = !DILocation(line: 96, column: 16, scope: !77, inlinedAt: !75)
!80 = !DILocation(line: 97, column: 29, scope: !77, inlinedAt: !75)
!81 = !DILocation(line: 115, column: 29, scope: !18, inlinedAt: !82)
!82 = !DILocation(line: 79, column: 40, scope: !6)
!83 = !DILocation(line: 102, column: 15, scope: !77, inlinedAt: !82)
!84 = !DILocation(line: 104, column: 16, scope: !77, inlinedAt: !82)
!85 = !DILocation(line: 105, column: 29, scope: !77, inlinedAt: !82)
!86 = !DILocation(line: 104, column: 21, scope: !77, inlinedAt: !82)
!87 = !DILocation(line: 80, column: 25, scope: !6)
!88 = !DILocation(line: 80, column: 37, scope: !6)
!89 = !DILocation(line: 81, column: 25, scope: !6)
!90 = !DILocation(line: 81, column: 37, scope: !6)
!91 = !DILocation(line: 97, column: 29, scope: !18, inlinedAt: !92)
!92 = !DILocation(line: 104, column: 46, scope: !6)
!93 = !DILocation(line: 105, column: 17, scope: !6)
!94 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !95)
!95 = !DILocation(line: 106, column: 46, scope: !6)
!96 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !97)
!97 = !DILocation(line: 107, column: 46, scope: !6)
!98 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !97)
!99 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !97)
!100 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !97)
!101 = !DILocation(line: 109, column: 24, scope: !6)
!102 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !103)
!103 = !DILocation(line: 112, column: 46, scope: !6)
!104 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !103)
!105 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !103)
!106 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !103)
!107 = !DILocation(line: 115, column: 25, scope: !6)
!108 = !DILocation(line: 82, column: 40, scope: !6)
!109 = !DILocation(line: 88, column: 43, scope: !6)
!110 = !DILocation(line: 88, column: 36, scope: !6)
!111 = !DILocation(line: 88, column: 54, scope: !6)
!112 = !DILocation(line: 90, column: 24, scope: !6)
!113 = !DILocation(line: 91, column: 24, scope: !6)
!114 = !DILocation(line: 92, column: 24, scope: !6)
!115 = !DILocation(line: 94, column: 24, scope: !6)
!116 = !DILocation(line: 95, column: 24, scope: !6)
!117 = !DILocation(line: 97, column: 24, scope: !6)
!118 = !DILocation(line: 98, column: 31, scope: !6)
!119 = !DILocation(line: 100, column: 24, scope: !6)
!120 = !DILocation(line: 101, column: 24, scope: !6)
!121 = !DILocation(line: 117, column: 24, scope: !6)
!122 = !DILocation(line: 118, column: 36, scope: !6)
!123 = !DILocation(line: 102, column: 15, scope: !18, inlinedAt: !124)
!124 = !DILocation(line: 121, column: 46, scope: !6)
!125 = !DILocation(line: 104, column: 21, scope: !18, inlinedAt: !124)
!126 = !DILocation(line: 104, column: 16, scope: !18, inlinedAt: !124)
!127 = !DILocation(line: 105, column: 29, scope: !18, inlinedAt: !124)
!128 = !DILocation(line: 94, column: 15, scope: !18, inlinedAt: !129)
!129 = !DILocation(line: 123, column: 46, scope: !6)
!130 = !DILocation(line: 96, column: 21, scope: !18, inlinedAt: !129)
!131 = !DILocation(line: 96, column: 16, scope: !18, inlinedAt: !129)
!132 = !DILocation(line: 125, column: 25, scope: !6)
!133 = !DILocation(line: 97, column: 29, scope: !18, inlinedAt: !129)
!134 = !DILocation(line: 126, column: 29, scope: !6)
!135 = !DILocation(line: 126, column: 54, scope: !6)
!136 = !DILocation(line: 82, column: 4, scope: !6)
