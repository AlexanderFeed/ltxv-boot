//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<457>;
	.reg .f32 	%f<154>;
	.reg .b64 	%rd<67>;
	.loc	1 17 0                          // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:17:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_mm_param_2];
	ld.param.u64 	%rd21, [triton_mm_param_0];
	ld.param.u64 	%rd22, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:40:24
	mov.u32 	%r57, %ctaid.x;
	.loc	1 46 22                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:46:22
	mul.hi.s32 	%r58, %r57, 715827883;
	shr.u32 	%r59, %r58, 31;
	shr.s32 	%r60, %r58, 5;
	add.s32 	%r61, %r60, %r59;
	.loc	1 47 41                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:47:41
	shl.b32 	%r62, %r61, 3;
	.loc	1 47 30                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:47:30
	sub.s32 	%r63, 3, %r62;
	.loc	1 47 50                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:47:50
	min.s32 	%r64, %r63, 8;
	.loc	1 48 40                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:48:40
	rem.s32 	%r65, %r57, %r64;
	.loc	1 48 34                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:48:34
	add.s32 	%r66, %r65, %r62;
	.loc	1 49 19                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:49:19
	mul.lo.s32 	%r67, %r61, 192;
	sub.s32 	%r68, %r57, %r67;
	.loc	1 49 30                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:49:30
	div.s32 	%r69, %r68, %r64;
	.loc	1 51 17                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:51:17
	shl.b32 	%r1, %r66, 5;
	.loc	1 51 40                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	and.b32  	%r4, %r2, 64;
	bfe.u32 	%r70, %r2, 4, 3;
	or.b32  	%r71, %r70, 8;
	or.b32  	%r72, %r70, 16;
	or.b32  	%r73, %r70, 24;
	shr.u32 	%r5, %r2, 2;
	and.b32  	%r6, %r5, 8;
	shr.u32 	%r7, %r4, 2;
	shl.b32 	%r8, %r2, 3;
	and.b32  	%r74, %r8, 8;
	and.b32  	%r75, %r8, 16;
	and.b32  	%r9, %r8, 24;
	.loc	1 51 27                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:51:27
	or.b32  	%r76, %r1, %r70;
	or.b32  	%r77, %r1, %r71;
	or.b32  	%r78, %r1, %r72;
	or.b32  	%r79, %r1, %r73;
	.loc	1 52 17                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:52:17
	shl.b32 	%r10, %r69, 5;
	.loc	1 52 27                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:52:27
	or.b32  	%r80, %r10, %r70;
	or.b32  	%r81, %r10, %r71;
	or.b32  	%r82, %r10, %r72;
	or.b32  	%r83, %r10, %r73;
	.loc	1 54 57                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:54:57
	mul.hi.s32 	%r84, %r76, 892460737;
	shr.u32 	%r85, %r84, 31;
	shr.u32 	%r86, %r84, 4;
	add.s32 	%r87, %r86, %r85;
	mul.lo.s32 	%r88, %r87, 77;
	sub.s32 	%r89, %r76, %r88;
	mul.hi.s32 	%r90, %r77, 892460737;
	shr.u32 	%r91, %r90, 31;
	shr.u32 	%r92, %r90, 4;
	add.s32 	%r93, %r92, %r91;
	mul.lo.s32 	%r94, %r93, 77;
	sub.s32 	%r95, %r77, %r94;
	mul.hi.s32 	%r96, %r78, 892460737;
	shr.u32 	%r97, %r96, 31;
	shr.u32 	%r98, %r96, 4;
	add.s32 	%r99, %r98, %r97;
	mul.lo.s32 	%r100, %r99, 77;
	sub.s32 	%r101, %r78, %r100;
	mul.hi.s32 	%r102, %r79, 892460737;
	shr.u32 	%r103, %r102, 31;
	shr.u32 	%r104, %r102, 4;
	add.s32 	%r105, %r104, %r103;
	mul.lo.s32 	%r106, %r105, 77;
	sub.s32 	%r107, %r79, %r106;
	.loc	1 58 57                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:58:57
	mul.hi.s32 	%r108, %r80, 715827883;
	shr.u32 	%r109, %r108, 31;
	shr.u32 	%r110, %r108, 7;
	add.s32 	%r111, %r110, %r109;
	mul.lo.s32 	%r112, %r111, 768;
	sub.s32 	%r113, %r80, %r112;
	mul.hi.s32 	%r114, %r81, 715827883;
	shr.u32 	%r115, %r114, 31;
	shr.u32 	%r116, %r114, 7;
	add.s32 	%r117, %r116, %r115;
	mul.lo.s32 	%r118, %r117, 768;
	sub.s32 	%r119, %r81, %r118;
	mul.hi.s32 	%r120, %r82, 715827883;
	shr.u32 	%r121, %r120, 31;
	shr.u32 	%r122, %r120, 7;
	add.s32 	%r123, %r122, %r121;
	mul.lo.s32 	%r124, %r123, 768;
	sub.s32 	%r125, %r82, %r124;
	mul.hi.s32 	%r126, %r83, 715827883;
	shr.u32 	%r127, %r126, 31;
	shr.u32 	%r128, %r126, 7;
	add.s32 	%r129, %r128, %r127;
	mul.lo.s32 	%r130, %r129, 768;
	sub.s32 	%r131, %r83, %r130;
	.loc	1 66 30                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:66:30
	and.b32  	%r11, %r8, 32;
	and.b32  	%r132, %r8, 56;
	and.b32  	%r12, %r8, 120;
	.loc	1 71 29                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:71:29
	mul.lo.s32 	%r133, %r89, 768;
	mul.lo.s32 	%r134, %r95, 768;
	mul.lo.s32 	%r135, %r101, 768;
	mul.lo.s32 	%r136, %r107, 768;
	.loc	1 77 54                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:54
	mul.lo.s32 	%r137, %r113, 768;
	mul.lo.s32 	%r138, %r119, 768;
	mul.lo.s32 	%r139, %r125, 768;
	mul.lo.s32 	%r140, %r131, 768;
	.loc	1 71 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:71:25
	or.b32  	%r141, %r133, %r12;
	or.b32  	%r142, %r134, %r12;
	or.b32  	%r143, %r135, %r12;
	or.b32  	%r144, %r136, %r12;
	.loc	1 72 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:72:25
	mul.wide.s32 	%rd23, %r141, 2;
	add.s64 	%rd12, %rd21, %rd23;
	mul.wide.s32 	%rd24, %r142, 2;
	add.s64 	%rd13, %rd21, %rd24;
	mul.wide.s32 	%rd25, %r143, 2;
	add.s64 	%rd14, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r144, 2;
	add.s64 	%rd15, %rd21, %rd26;
	.loc	1 72 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:72:20
	shr.u32 	%r145, %r3, 1;
	shr.u32 	%r146, %r2, 1;
	and.b32  	%r147, %r146, 56;
	xor.b32  	%r148, %r12, %r147;
	shl.b32 	%r149, %r148, 1;
	shl.b32 	%r150, %r70, 8;
	or.b32  	%r151, %r150, %r149;
	mov.u32 	%r152, global_smem;
	add.s32 	%r362, %r152, %r151;
	add.s32 	%r364, %r362, 2048;
	add.s32 	%r366, %r362, 4096;
	add.s32 	%r368, %r362, 6144;
	mov.b32 	%r41, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r362 + 0 ], [ %rd12 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r364 + 0 ], [ %rd13 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r366 + 0 ], [ %rd14 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r368 + 0 ], [ %rd15 + 0 ], 0x10, %r41;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:50
	or.b32  	%r153, %r137, %r12;
	or.b32  	%r154, %r138, %r12;
	or.b32  	%r155, %r139, %r12;
	or.b32  	%r156, %r140, %r12;
	.loc	1 77 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:25
	mul.wide.s32 	%rd27, %r153, 2;
	add.s64 	%rd16, %rd22, %rd27;
	mul.wide.s32 	%rd28, %r154, 2;
	add.s64 	%rd17, %rd22, %rd28;
	mul.wide.s32 	%rd29, %r155, 2;
	add.s64 	%rd18, %rd22, %rd29;
	mul.wide.s32 	%rd30, %r156, 2;
	add.s64 	%rd19, %rd22, %rd30;
	.loc	1 77 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:20
	add.s32 	%r48, %r362, 8192;
	add.s32 	%r50, %r362, 10240;
	add.s32 	%r52, %r362, 12288;
	add.s32 	%r54, %r362, 14336;
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd16 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r50 + 0 ], [ %rd17 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r52 + 0 ], [ %rd18 + 0 ], 0x10, %r41;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r54 + 0 ], [ %rd19 + 0 ], 0x10, %r41;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:64:26
	or.b32  	%r157, %r11, %r145;
	and.b32  	%r158, %r2, 7;
	and.b32  	%r159, %r2, 15;
	xor.b32  	%r160, %r132, %r145;
	or.b32  	%r161, %r7, %r159;
	shl.b32 	%r162, %r161, 7;
	or.b32  	%r21, %r162, %r160;
	or.b32  	%r163, %r74, 16;
	xor.b32  	%r164, %r163, %r75;
	or.b32  	%r165, %r164, %r11;
	xor.b32  	%r166, %r165, %r145;
	or.b32  	%r22, %r166, %r162;
	or.b32  	%r167, %r9, 32;
	xor.b32  	%r168, %r167, %r157;
	or.b32  	%r23, %r168, %r162;
	or.b32  	%r169, %r74, 48;
	and.b32  	%r170, %r8, 48;
	or.b32  	%r171, %r145, %r170;
	xor.b32  	%r172, %r171, %r169;
	or.b32  	%r24, %r172, %r162;
	or.b32  	%r173, %r132, 64;
	xor.b32  	%r174, %r173, %r145;
	or.b32  	%r25, %r174, %r162;
	or.b32  	%r175, %r74, 80;
	xor.b32  	%r176, %r175, %r75;
	or.b32  	%r177, %r176, %r11;
	xor.b32  	%r178, %r177, %r145;
	or.b32  	%r26, %r178, %r162;
	or.b32  	%r179, %r9, 96;
	xor.b32  	%r180, %r179, %r157;
	or.b32  	%r27, %r180, %r162;
	or.b32  	%r181, %r74, 112;
	xor.b32  	%r182, %r171, %r181;
	or.b32  	%r28, %r182, %r162;
	and.b32  	%r183, %r2, 24;
	xor.b32  	%r29, %r132, %r183;
	or.b32  	%r184, %r6, %r158;
	shl.b32 	%r30, %r184, 7;
	or.b32  	%r31, %r30, %r29;
	or.b32  	%r185, %r11, %r183;
	xor.b32  	%r32, %r185, %r167;
	or.b32  	%r33, %r32, %r30;
	xor.b32  	%r34, %r173, %r183;
	or.b32  	%r35, %r34, %r30;
	xor.b32  	%r36, %r185, %r179;
	or.b32  	%r37, %r36, %r30;
	mul.wide.u32 	%rd31, %r159, 16;
	mul.wide.s32 	%rd32, %r140, 2;
	or.b64  	%rd33, %rd31, %rd32;
	add.s64 	%rd34, %rd33, %rd22;
	add.s64 	%rd1, %rd34, 256;
	mul.wide.s32 	%rd35, %r139, 2;
	or.b64  	%rd36, %rd31, %rd35;
	add.s64 	%rd37, %rd36, %rd22;
	add.s64 	%rd2, %rd37, 256;
	mul.wide.s32 	%rd38, %r138, 2;
	or.b64  	%rd39, %rd31, %rd38;
	add.s64 	%rd40, %rd39, %rd22;
	add.s64 	%rd3, %rd40, 256;
	mul.wide.s32 	%rd41, %r137, 2;
	or.b64  	%rd42, %rd31, %rd41;
	add.s64 	%rd43, %rd42, %rd22;
	add.s64 	%rd4, %rd43, 256;
	mul.wide.s32 	%rd44, %r136, 2;
	or.b64  	%rd45, %rd31, %rd44;
	add.s64 	%rd46, %rd45, %rd21;
	add.s64 	%rd5, %rd46, 256;
	mul.wide.s32 	%rd47, %r135, 2;
	or.b64  	%rd48, %rd31, %rd47;
	add.s64 	%rd49, %rd48, %rd21;
	add.s64 	%rd6, %rd49, 256;
	mul.wide.s32 	%rd50, %r134, 2;
	or.b64  	%rd51, %rd31, %rd50;
	add.s64 	%rd52, %rd51, %rd21;
	add.s64 	%rd7, %rd52, 256;
	mul.wide.s32 	%rd53, %r133, 2;
	or.b64  	%rd54, %rd31, %rd53;
	add.s64 	%rd55, %rd54, %rd21;
	add.s64 	%rd8, %rd55, 256;
	mov.f32 	%f146, 0f00000000;
	mov.b32 	%r456, -1;
	mov.b64 	%rd66, 0;
	shl.b32 	%r382, %r21, 1;
	shl.b32 	%r383, %r22, 1;
	shl.b32 	%r384, %r23, 1;
	shl.b32 	%r385, %r24, 1;
	shl.b32 	%r386, %r25, 1;
	shl.b32 	%r387, %r26, 1;
	shl.b32 	%r388, %r27, 1;
	shl.b32 	%r389, %r28, 1;
	shl.b32 	%r391, %r31, 1;
	shl.b32 	%r392, %r33, 1;
	shl.b32 	%r393, %r35, 1;
	shl.b32 	%r394, %r37, 1;
	mov.f32 	%f147, %f146;
	mov.f32 	%f148, %f146;
	mov.f32 	%f149, %f146;
	mov.f32 	%f150, %f146;
	mov.f32 	%f151, %f146;
	mov.f32 	%f152, %f146;
	mov.f32 	%f153, %f146;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd66, 1280;
	add.s32 	%r378, %r456, 1;
	setp.gt.u32 	%p2, %r456, 2147483646;
	selp.b32 	%r456, %r378, 0, %p2;
	.loc	1 72 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r379, %r456, 13;
	add.s32 	%r381, %r152, %r379;
	add.s32 	%r190, %r381, %r382;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r266, %r267, %r268, %r269}, [%r190];
	// end inline asm
	add.s32 	%r195, %r381, %r383;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r278, %r279, %r280, %r281}, [%r195];
	// end inline asm
	add.s32 	%r200, %r381, %r384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r290, %r291, %r292, %r293}, [%r200];
	// end inline asm
	add.s32 	%r205, %r381, %r385;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r302, %r303, %r304, %r305}, [%r205];
	// end inline asm
	add.s32 	%r210, %r381, %r386;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r314, %r315, %r316, %r317}, [%r210];
	// end inline asm
	add.s32 	%r215, %r381, %r387;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r326, %r327, %r328, %r329}, [%r215];
	// end inline asm
	add.s32 	%r220, %r381, %r388;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r338, %r339, %r340, %r341}, [%r220];
	// end inline asm
	add.s32 	%r225, %r381, %r389;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r350, %r351, %r352, %r353}, [%r225];
	// end inline asm
	.loc	1 77 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:20
	add.s32 	%r390, %r381, 8192;
	add.s32 	%r230, %r390, %r391;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r226, %r227, %r228, %r229}, [%r230];
	// end inline asm
	add.s32 	%r235, %r390, %r392;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r231, %r232, %r233, %r234}, [%r235];
	// end inline asm
	add.s32 	%r240, %r390, %r393;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r236, %r237, %r238, %r239}, [%r240];
	// end inline asm
	add.s32 	%r245, %r390, %r394;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r241, %r242, %r243, %r244}, [%r245];
	// end inline asm
	add.s32 	%r395, %r30, %r29;
	shl.b32 	%r396, %r395, 1;
	add.s32 	%r397, %r390, %r396;
	add.s32 	%r250, %r397, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r246, %r247, %r248, %r249}, [%r250];
	// end inline asm
	add.s32 	%r398, %r32, %r30;
	shl.b32 	%r399, %r398, 1;
	add.s32 	%r400, %r390, %r399;
	add.s32 	%r255, %r400, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r251, %r252, %r253, %r254}, [%r255];
	// end inline asm
	add.s32 	%r401, %r30, %r34;
	shl.b32 	%r402, %r401, 1;
	add.s32 	%r403, %r390, %r402;
	add.s32 	%r260, %r403, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r256, %r257, %r258, %r259}, [%r260];
	// end inline asm
	add.s32 	%r404, %r36, %r30;
	shl.b32 	%r405, %r404, 1;
	add.s32 	%r406, %r390, %r405;
	add.s32 	%r265, %r406, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r261, %r262, %r263, %r264}, [%r265];
	// end inline asm
	.loc	1 78 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r266, %r267, %r268, %r269 }, { %r226, %r227 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r266, %r267, %r268, %r269 }, { %r246, %r247 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r278, %r279, %r280, %r281 }, { %r228, %r229 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r278, %r279, %r280, %r281 }, { %r248, %r249 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r290, %r291, %r292, %r293 }, { %r231, %r232 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r290, %r291, %r292, %r293 }, { %r251, %r252 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r302, %r303, %r304, %r305 }, { %r233, %r234 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r302, %r303, %r304, %r305 }, { %r253, %r254 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r314, %r315, %r316, %r317 }, { %r236, %r237 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r314, %r315, %r316, %r317 }, { %r256, %r257 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r326, %r327, %r328, %r329 }, { %r238, %r239 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r326, %r327, %r328, %r329 }, { %r258, %r259 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r338, %r339, %r340, %r341 }, { %r241, %r242 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r338, %r339, %r340, %r341 }, { %r261, %r262 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r350, %r351, %r352, %r353 }, { %r243, %r244 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r350, %r351, %r352, %r353 }, { %r263, %r264 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	.loc	1 72 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:72:25
	add.s64 	%rd56, %rd8, %rd66;
	add.s64 	%rd57, %rd7, %rd66;
	add.s64 	%rd58, %rd6, %rd66;
	.loc	1 72 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:72:20
	add.s64 	%rd59, %rd5, %rd66;
	bar.sync 	0;
	selp.b32 	%r363, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r362 + 0 ], [ %rd56 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r364 + 0 ], [ %rd57 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r366 + 0 ], [ %rd58 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r368 + 0 ], [ %rd59 + 0 ], 0x10, %r363;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:25
	add.s64 	%rd60, %rd4, %rd66;
	add.s64 	%rd61, %rd3, %rd66;
	add.s64 	%rd62, %rd2, %rd66;
	.loc	1 77 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:77:20
	add.s64 	%rd63, %rd1, %rd66;
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd60 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r50 + 0 ], [ %rd61 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r52 + 0 ], [ %rd62 + 0 ], 0x10, %r363;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r54 + 0 ], [ %rd63 + 0 ], 0x10, %r363;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:64:26
	add.s64 	%rd66, %rd66, 256;
	setp.ne.s64 	%p3, %rd66, 1536;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 66 30                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:66:30
	and.b32  	%r415, %r8, 64;
	.loc	1 52 27                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:52:27
	or.b32  	%r416, %r10, %r9;
	.loc	1 51 40                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:51:40
	and.b32  	%r417, %r5, 15;
	or.b32  	%r418, %r417, %r7;
	.loc	1 51 27                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:51:27
	or.b32  	%r419, %r418, %r1;
	.loc	1 64 26                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:85:20
	setp.lt.s32 	%p9, %r419, 77;
	.loc	1 85 34                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:85:34
	setp.lt.s32 	%p10, %r416, 768;
	.loc	1 85 26                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:85:26
	and.pred  	%p8, %p9, %p10;
	.loc	1 88 21                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:88:21
	mad.lo.s32 	%r420, %r419, 768, %r416;
	.loc	1 89 25                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:89:25
	mul.wide.s32 	%rd65, %r420, 2;
	add.s64 	%rd64, %rd11, %rd65;
	.loc	1 89 67                         // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f146;
	cvt.rn.bf16.f32 	%rs2, %f147;
	cvt.rn.bf16.f32 	%rs3, %f148;
	cvt.rn.bf16.f32 	%rs4, %f149;
	cvt.rn.bf16.f32 	%rs5, %f150;
	cvt.rn.bf16.f32 	%rs6, %f151;
	cvt.rn.bf16.f32 	%rs7, %f152;
	cvt.rn.bf16.f32 	%rs8, %f153;
	shl.b32 	%r421, %r2, 1;
	and.b32  	%r422, %r421, 6;
	shl.b32 	%r423, %r3, 3;
	or.b32  	%r424, %r422, %r423;
	or.b32  	%r425, %r424, %r415;
	or.b32  	%r426, %r425, %r11;
	or.b32  	%r427, %r426, %r6;
	shl.b32 	%r428, %r4, 3;
	or.b32  	%r429, %r427, %r428;
	and.b32  	%r430, %r8, 384;
	or.b32  	%r431, %r428, %r430;
	or.b32  	%r432, %r431, %r12;
	shr.u32 	%r433, %r429, 2;
	and.b32  	%r434, %r433, 1073741816;
	add.s32 	%r435, %r434, %r429;
	shl.b32 	%r436, %r435, 1;
	add.s32 	%r407, %r152, %r436;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r407 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r438, %r429, 256;
	shr.u32 	%r439, %r438, 2;
	and.b32  	%r440, %r439, 1073741816;
	add.s32 	%r441, %r440, %r438;
	shl.b32 	%r442, %r441, 1;
	add.s32 	%r408, %r152, %r442;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r408 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r443, %r429, 16;
	add.s32 	%r444, %r434, %r443;
	shl.b32 	%r445, %r444, 1;
	add.s32 	%r409, %r152, %r445;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r409 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r446, %r429, 272;
	shr.u32 	%r447, %r446, 2;
	and.b32  	%r448, %r447, 1073741816;
	add.s32 	%r449, %r448, %r446;
	shl.b32 	%r450, %r449, 1;
	add.s32 	%r410, %r152, %r450;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r410 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r451, %r432, 2;
	and.b32  	%r452, %r451, 248;
	add.s32 	%r453, %r452, %r432;
	shl.b32 	%r454, %r453, 1;
	add.s32 	%r455, %r152, %r454;
	ld.shared.v4.u32 	{%r411, %r412, %r413, %r414}, [%r455];
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd64 + 0 ], { %r411, %r412, %r413, %r414 };
	// end inline asm
	.loc	1 89 4                          // czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/zd/czdijkrrugtlasbtkeav75ftjn2vxixbjurt56656xl5yviy5a2w.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 100
.b8 105
.b8 106
.b8 107
.b8 114
.b8 114
.b8 117
.b8 103
.b8 116
.b8 108
.b8 97
.b8 115
.b8 98
.b8 116
.b8 107
.b8 101
.b8 97
.b8 118
.b8 55
.b8 53
.b8 102
.b8 116
.b8 106
.b8 110
.b8 50
.b8 118
.b8 120
.b8 105
.b8 120
.b8 98
.b8 106
.b8 117
.b8 114
.b8 116
.b8 53
.b8 54
.b8 54
.b8 53
.b8 54
.b8 120
.b8 108
.b8 53
.b8 121
.b8 118
.b8 105
.b8 121
.b8 53
.b8 97
.b8 50
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 122
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
