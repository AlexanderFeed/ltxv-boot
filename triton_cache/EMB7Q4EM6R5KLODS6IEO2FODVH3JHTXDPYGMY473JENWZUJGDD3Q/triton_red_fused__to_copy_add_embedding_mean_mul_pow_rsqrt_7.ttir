#loc = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0)
#loc1 = loc(unknown)
#loc44 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":52:27)
#loc87 = loc(callsite(#loc1 at #loc44))
module {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<64x1xi64> loc(#loc1)
    %cst_0 = arith.constant dense<32128> : tensor<64x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xbf16> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x64xbf16> loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4.096000e+03> : tensor<64x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<true> : tensor<64x1xi1> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<64x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<1x64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_10 = arith.constant dense<512> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_10 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>> loc(#loc9)
    %9 = tt.addptr %8, %5 : tensor<64x1x!tt.ptr<i64>>, tensor<64x1xi32> loc(#loc9)
    %10 = tt.load %9, %6 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>> loc(#loc10)
    %11 = scf.for %arg8 = %c0_i32 to %c4096_i32 step %c64_i32 iter_args(%arg9 = %cst_9) -> (tensor<64x64xf32>)  : i32 {
      %14 = tt.splat %arg8 : i32 -> tensor<1x64xi32> loc(#loc12)
      %15 = arith.addi %14, %7 : tensor<1x64xi32> loc(#loc12)
      %16 = arith.cmpi slt, %15, %cst_8 : tensor<1x64xi32> loc(#loc13)
      %17 = arith.muli %5, %cst_7 : tensor<64x1xi32> loc(#loc14)
      %18 = tt.broadcast %15 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc15)
      %19 = tt.broadcast %17 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc15)
      %20 = arith.addi %18, %19 : tensor<64x64xi32> loc(#loc15)
      %21 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc16)
      %22 = tt.addptr %21, %20 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc16)
      %23 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc17)
      %24 = tt.broadcast %16 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc17)
      %25 = arith.andi %23, %24 : tensor<64x64xi1> loc(#loc17)
      %26 = tt.load %22, %25, %cst_3 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc18)
      %27 = arith.extf %26 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc19)
      %28 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc20)
      %29 = tt.addptr %28, %20 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc20)
      %30 = tt.load %29, %25, %cst_3 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc21)
      %31 = arith.extf %30 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc22)
      %32 = arith.addi %10, %cst_0 : tensor<64x1xi64> loc(#loc23)
      %33 = arith.cmpi slt, %10, %cst_2 : tensor<64x1xi64> loc(#loc24)
      %34 = arith.select %33, %32, %10 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc25)
      %35 = arith.cmpi sge, %34, %cst_2 : tensor<64x1xi64> loc(#loc26)
      %36 = arith.cmpi slt, %34, %cst_0 : tensor<64x1xi64> loc(#loc27)
      %37 = arith.andi %35, %36 : tensor<64x1xi1> loc(#loc28)
      %38 = arith.xori %6, %cst_6 : tensor<64x1xi1> loc(#loc29)
      %39 = arith.ori %37, %38 : tensor<64x1xi1> loc(#loc30)
      %40 = tt.broadcast %39 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc30)
      tt.assert %40, "index out of bounds: 0 <= tmp4 < 32128" : tensor<64x64xi1> loc(#loc31)
      %41 = arith.muli %34, %cst : tensor<64x1xi64> loc(#loc32)
      %42 = tt.broadcast %41 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc32)
      %43 = arith.extsi %15 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc33)
      %44 = tt.broadcast %43 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc33)
      %45 = arith.addi %44, %42 : tensor<64x64xi64> loc(#loc33)
      %46 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc34)
      %47 = tt.addptr %46, %45 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc34)
      %48 = tt.load %47, %25, %cst_3 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc35)
      %49 = arith.extf %48 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc36)
      %50 = arith.addf %49, %27 : tensor<64x64xf32> loc(#loc37)
      %51 = arith.addf %50, %31 : tensor<64x64xf32> loc(#loc38)
      %52 = arith.mulf %51, %51 : tensor<64x64xf32> loc(#loc39)
      %53 = arith.addf %arg9, %52 : tensor<64x64xf32> loc(#loc40)
      %54 = arith.select %25, %53, %arg9 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc41)
      scf.yield %54 : tensor<64x64xf32> loc(#loc42)
    } loc(#loc11)
    %12 = "tt.reduce"(%11) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc44)), %arg9: f32 loc(callsite(#loc1 at #loc44))):
      %14 = arith.addf %arg8, %arg9 : f32 loc(#loc89)
      tt.reduce.return %14 : f32 loc(#loc86)
    }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc86)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc46)
    scf.for %arg8 = %c0_i32 to %c4096_i32 step %c64_i32  : i32 {
      %14 = tt.splat %arg8 : i32 -> tensor<1x64xi32> loc(#loc48)
      %15 = arith.addi %14, %7 : tensor<1x64xi32> loc(#loc48)
      %16 = arith.cmpi slt, %15, %cst_8 : tensor<1x64xi32> loc(#loc49)
      %17 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc50)
      %18 = tt.addptr %17, %15 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc50)
      %19 = tt.load %18, %16, %cst_1 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<bf16>> loc(#loc51)
      %20 = arith.extf %19 : tensor<1x64xbf16> to tensor<1x64xf32> loc(#loc52)
      %21 = arith.muli %5, %cst_7 : tensor<64x1xi32> loc(#loc53)
      %22 = tt.broadcast %15 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc54)
      %23 = tt.broadcast %21 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc54)
      %24 = arith.addi %22, %23 : tensor<64x64xi32> loc(#loc54)
      %25 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc55)
      %26 = tt.addptr %25, %24 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc55)
      %27 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc56)
      %28 = tt.broadcast %16 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc56)
      %29 = arith.andi %27, %28 : tensor<64x64xi1> loc(#loc56)
      %30 = tt.load %26, %29, %cst_3 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc57)
      %31 = arith.extf %30 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc58)
      %32 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc59)
      %33 = tt.addptr %32, %24 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc59)
      %34 = tt.load %33, %29, %cst_3 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc60)
      %35 = arith.extf %34 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc61)
      %36 = arith.addi %10, %cst_0 : tensor<64x1xi64> loc(#loc62)
      %37 = arith.cmpi slt, %10, %cst_2 : tensor<64x1xi64> loc(#loc63)
      %38 = arith.select %37, %36, %10 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc64)
      %39 = arith.cmpi sge, %38, %cst_2 : tensor<64x1xi64> loc(#loc65)
      %40 = arith.cmpi slt, %38, %cst_0 : tensor<64x1xi64> loc(#loc66)
      %41 = arith.andi %39, %40 : tensor<64x1xi1> loc(#loc67)
      %42 = arith.xori %6, %cst_6 : tensor<64x1xi1> loc(#loc68)
      %43 = arith.ori %41, %42 : tensor<64x1xi1> loc(#loc69)
      %44 = tt.broadcast %43 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc69)
      tt.assert %44, "index out of bounds: 0 <= tmp20 < 32128" : tensor<64x64xi1> loc(#loc70)
      %45 = arith.muli %38, %cst : tensor<64x1xi64> loc(#loc71)
      %46 = tt.broadcast %45 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc71)
      %47 = arith.extsi %15 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc72)
      %48 = tt.broadcast %47 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc72)
      %49 = arith.addi %48, %46 : tensor<64x64xi64> loc(#loc72)
      %50 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc73)
      %51 = tt.addptr %50, %49 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc73)
      %52 = tt.load %51, %29, %cst_3 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc74)
      %53 = arith.extf %52 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc75)
      %54 = arith.addf %53, %31 : tensor<64x64xf32> loc(#loc76)
      %55 = arith.addf %54, %35 : tensor<64x64xf32> loc(#loc77)
      %56 = arith.divf %13, %cst_5 : tensor<64x1xf32> loc(#loc78)
      %57 = arith.addf %56, %cst_4 : tensor<64x1xf32> loc(#loc79)
      %58 = tt.extern_elementwise %57 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc80)
      %59 = tt.broadcast %58 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc81)
      %60 = arith.mulf %55, %59 : tensor<64x64xf32> loc(#loc81)
      %61 = tt.broadcast %20 : tensor<1x64xf32> -> tensor<64x64xf32> loc(#loc82)
      %62 = arith.mulf %61, %60 : tensor<64x64xf32> loc(#loc82)
      %63 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc83)
      %64 = tt.addptr %63, %24 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc83)
      %65 = arith.truncf %62 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc84)
      tt.store %64, %65, %29 : tensor<64x64x!tt.ptr<bf16>> loc(#loc84)
    } loc(#loc47)
    tt.return loc(#loc85)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":24:36)
#loc5 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":24:44)
#loc6 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":24:23)
#loc7 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":25:21)
#loc8 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":26:37)
#loc9 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":29:30)
#loc10 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":29:35)
#loc11 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":31:40)
#loc12 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":32:31)
#loc13 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":33:29)
#loc14 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:46)
#loc15 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:41)
#loc16 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:34)
#loc17 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:59)
#loc18 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:51)
#loc19 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:112)
#loc20 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:34)
#loc21 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:51)
#loc22 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:112)
#loc23 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":40:22)
#loc24 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":41:22)
#loc25 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":42:36)
#loc26 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:32)
#loc27 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:48)
#loc28 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:41)
#loc29 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:60)
#loc30 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:58)
#loc31 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:68)
#loc32 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:46)
#loc33 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:41)
#loc34 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:34)
#loc35 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:53)
#loc36 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:114)
#loc37 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":45:22)
#loc38 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":46:23)
#loc39 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":48:24)
#loc40 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":50:25)
#loc41 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":51:50)
#loc42 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":51:8)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc46 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":52:30)
#loc47 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":53:40)
#loc48 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":54:31)
#loc49 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":55:29)
#loc50 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:35)
#loc51 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:42)
#loc52 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:95)
#loc53 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:47)
#loc54 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:42)
#loc55 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:35)
#loc56 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:60)
#loc57 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:52)
#loc58 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:114)
#loc59 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:35)
#loc60 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:52)
#loc61 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:114)
#loc62 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":63:23)
#loc63 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":64:23)
#loc64 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":65:39)
#loc65 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:32)
#loc66 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:50)
#loc67 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:42)
#loc68 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:62)
#loc69 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:60)
#loc70 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:70)
#loc71 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:47)
#loc72 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:42)
#loc73 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:35)
#loc74 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:55)
#loc75 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:117)
#loc76 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":68:24)
#loc77 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":69:24)
#loc78 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":72:25)
#loc79 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":74:24)
#loc80 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":75:32)
#loc81 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":76:24)
#loc82 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":78:24)
#loc83 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":79:29)
#loc84 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":79:53)
#loc85 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":53:4)
#loc86 = loc(callsite(#loc43 at #loc44))
#loc88 = loc(callsite(#loc45 at #loc43))
#loc89 = loc(callsite(#loc88 at #loc44))
