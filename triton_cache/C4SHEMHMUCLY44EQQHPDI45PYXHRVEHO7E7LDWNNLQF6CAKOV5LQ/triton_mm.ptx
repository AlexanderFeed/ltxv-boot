//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<39>;
	.reg .b32 	%r<329>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<45>;
	.loc	1 17 0                          // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:17:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_mm_param_2];
	ld.param.u64 	%rd13, [triton_mm_param_0];
	ld.param.u64 	%rd14, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:40:24
	mov.u32 	%r28, %ctaid.x;
	.loc	1 46 22                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:46:22
	shr.s32 	%r29, %r28, 31;
	shr.u32 	%r30, %r29, 23;
	add.s32 	%r31, %r28, %r30;
	shr.s32 	%r32, %r31, 9;
	.loc	1 47 41                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:47:41
	shl.b32 	%r33, %r32, 3;
	.loc	1 47 30                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:47:30
	sub.s32 	%r34, 8, %r33;
	.loc	1 47 50                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:47:50
	min.s32 	%r35, %r34, 8;
	.loc	1 48 40                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:48:40
	rem.s32 	%r36, %r28, %r35;
	.loc	1 48 34                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:48:34
	add.s32 	%r37, %r36, %r33;
	.loc	1 49 19                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:49:19
	and.b32  	%r38, %r31, -512;
	sub.s32 	%r39, %r28, %r38;
	.loc	1 49 30                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:49:30
	div.s32 	%r40, %r39, %r35;
	.loc	1 51 17                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:17
	shl.b32 	%r1, %r37, 6;
	.loc	1 51 40                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r41, %r2, 8;
	shr.u32 	%r42, %r2, 2;
	and.b32  	%r3, %r42, 8;
	and.b32  	%r43, %r42, 16;
	bfe.u32 	%r44, %r2, 2, 5;
	or.b32  	%r45, %r44, 32;
	shl.b32 	%r4, %r2, 3;
	and.b32  	%r46, %r4, 24;
	.loc	1 51 27                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:27
	or.b32  	%r47, %r1, %r44;
	or.b32  	%r48, %r1, %r45;
	.loc	1 52 17                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:52:17
	shl.b32 	%r5, %r40, 6;
	.loc	1 52 27                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:52:27
	or.b32  	%r49, %r5, %r44;
	or.b32  	%r50, %r5, %r45;
	.loc	1 54 57                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:54:57
	bfe.s32 	%r51, %r37, 25, 1;
	shr.u32 	%r52, %r51, 23;
	add.s32 	%r53, %r47, %r52;
	and.b32  	%r54, %r53, 1048064;
	sub.s32 	%r55, %r47, %r54;
	add.s32 	%r56, %r48, %r52;
	and.b32  	%r57, %r56, 1048064;
	sub.s32 	%r58, %r48, %r57;
	.loc	1 58 57                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:58:57
	bfe.s32 	%r59, %r40, 25, 1;
	shr.u32 	%r60, %r59, 20;
	add.s32 	%r61, %r49, %r60;
	and.b32  	%r62, %r61, 1044480;
	sub.s32 	%r63, %r49, %r62;
	cvt.u16.u32 	%rs1, %r50;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 4;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -4096;
	sub.s16 	%rs6, %rs1, %rs5;
	.loc	1 71 30                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:71:30
	shl.b32 	%r64, %r55, 12;
	shl.b32 	%r65, %r58, 12;
	.loc	1 77 55                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:55
	shl.b32 	%r66, %r63, 12;
	mul.wide.s16 	%r67, %rs6, 4096;
	.loc	1 71 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:71:25
	or.b32  	%r68, %r64, %r46;
	or.b32  	%r69, %r65, %r46;
	.loc	1 72 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:72:25
	mul.wide.s32 	%rd15, %r68, 2;
	add.s64 	%rd8, %rd13, %rd15;
	mul.wide.s32 	%rd16, %r69, 2;
	add.s64 	%rd9, %rd13, %rd16;
	.loc	1 72 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:72:20
	xor.b32  	%r70, %r4, %r2;
	and.b32  	%r71, %r70, 24;
	shl.b32 	%r72, %r71, 1;
	shl.b32 	%r73, %r44, 6;
	or.b32  	%r74, %r73, %r72;
	mov.u32 	%r75, global_smem;
	add.s32 	%r235, %r75, %r74;
	add.s32 	%r237, %r235, 2048;
	mov.b32 	%r20, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r235 + 0 ], [ %rd8 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r237 + 0 ], [ %rd9 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:50
	or.b32  	%r76, %r66, %r46;
	or.b32  	%r77, %r67, %r46;
	.loc	1 77 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:25
	mul.wide.s32 	%rd17, %r76, 2;
	add.s64 	%rd10, %rd14, %rd17;
	mul.wide.s32 	%rd18, %r77, 2;
	add.s64 	%rd11, %rd14, %rd18;
	.loc	1 77 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:20
	add.s32 	%r23, %r235, 4096;
	add.s32 	%r25, %r235, 6144;
	// begin inline asm
	cp.async.cg.shared.global [ %r23 + 0 ], [ %rd10 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r25 + 0 ], [ %rd11 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:64:26
	or.b32  	%r78, %r41, %r43;
	and.b32  	%r79, %r2, 7;
	or.b32  	%r80, %r78, %r79;
	shl.b32 	%r81, %r2, 2;
	and.b32  	%r82, %r81, 8;
	and.b32  	%r83, %r81, 16;
	and.b32  	%r84, %r81, 24;
	and.b32  	%r85, %r2, 15;
	shr.u32 	%r86, %r2, 1;
	and.b32  	%r87, %r86, 8;
	xor.b32  	%r88, %r84, %r87;
	or.b32  	%r89, %r43, %r85;
	shl.b32 	%r90, %r89, 5;
	or.b32  	%r10, %r88, %r90;
	or.b32  	%r91, %r82, 16;
	or.b32  	%r92, %r87, %r83;
	xor.b32  	%r93, %r92, %r91;
	or.b32  	%r11, %r93, %r90;
	shl.b32 	%r94, %r80, 5;
	or.b32  	%r95, %r94, 1024;
	or.b32  	%r12, %r95, %r88;
	or.b32  	%r13, %r93, %r95;
	xor.b32  	%r96, %r81, %r2;
	and.b32  	%r14, %r96, 24;
	or.b32  	%r97, %r3, %r79;
	shl.b32 	%r15, %r97, 5;
	or.b32  	%r16, %r14, %r15;
	and.b32  	%r98, %r2, 3;
	mul.wide.u32 	%rd19, %r98, 16;
	mul.wide.s32 	%rd20, %r67, 2;
	or.b64  	%rd21, %rd19, %rd20;
	add.s64 	%rd22, %rd21, %rd14;
	add.s64 	%rd1, %rd22, 64;
	mul.wide.s32 	%rd23, %r66, 2;
	or.b64  	%rd24, %rd19, %rd23;
	add.s64 	%rd25, %rd24, %rd14;
	add.s64 	%rd2, %rd25, 64;
	mul.wide.s32 	%rd26, %r65, 2;
	or.b64  	%rd27, %rd19, %rd26;
	add.s64 	%rd28, %rd27, %rd13;
	add.s64 	%rd3, %rd28, 64;
	mul.wide.s32 	%rd29, %r64, 2;
	or.b64  	%rd30, %rd19, %rd29;
	add.s64 	%rd31, %rd30, %rd13;
	add.s64 	%rd4, %rd31, 64;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r328, -1;
	mov.b64 	%rd44, 0;
	shl.b32 	%r247, %r10, 1;
	shl.b32 	%r248, %r11, 1;
	shl.b32 	%r249, %r12, 1;
	shl.b32 	%r250, %r13, 1;
	shl.b32 	%r252, %r16, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd44, 8128;
	add.s32 	%r243, %r328, 1;
	setp.gt.u32 	%p2, %r328, 2147483646;
	selp.b32 	%r328, %r243, 0, %p2;
	.loc	1 72 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r244, %r328, 12;
	add.s32 	%r246, %r75, %r244;
	add.s32 	%r103, %r246, %r247;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r139, %r140, %r141, %r142}, [%r103];
	// end inline asm
	add.s32 	%r108, %r246, %r248;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r187, %r188, %r189, %r190}, [%r108];
	// end inline asm
	add.s32 	%r113, %r246, %r249;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r163, %r164, %r165, %r166}, [%r113];
	// end inline asm
	add.s32 	%r118, %r246, %r250;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r211, %r212, %r213, %r214}, [%r118];
	// end inline asm
	.loc	1 77 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:20
	add.s32 	%r251, %r246, 4096;
	add.s32 	%r123, %r251, %r252;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r143, %r144, %r191, %r192}, [%r123];
	// end inline asm
	add.s32 	%r128, %r123, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r149, %r150, %r197, %r198}, [%r128];
	// end inline asm
	add.s32 	%r253, %r14, %r15;
	shl.b32 	%r254, %r253, 1;
	add.s32 	%r255, %r251, %r254;
	add.s32 	%r133, %r255, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r155, %r156, %r203, %r204}, [%r133];
	// end inline asm
	add.s32 	%r138, %r123, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r161, %r162, %r209, %r210}, [%r138];
	// end inline asm
	.loc	1 78 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r139, %r140, %r141, %r142 }, { %r143, %r144 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r139, %r140, %r141, %r142 }, { %r149, %r150 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r139, %r140, %r141, %r142 }, { %r155, %r156 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r139, %r140, %r141, %r142 }, { %r161, %r162 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r163, %r164, %r165, %r166 }, { %r143, %r144 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r163, %r164, %r165, %r166 }, { %r149, %r150 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r163, %r164, %r165, %r166 }, { %r155, %r156 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r163, %r164, %r165, %r166 }, { %r161, %r162 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r187, %r188, %r189, %r190 }, { %r191, %r192 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r187, %r188, %r189, %r190 }, { %r197, %r198 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r187, %r188, %r189, %r190 }, { %r203, %r204 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r187, %r188, %r189, %r190 }, { %r209, %r210 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r211, %r212, %r213, %r214 }, { %r191, %r192 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r211, %r212, %r213, %r214 }, { %r197, %r198 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r211, %r212, %r213, %r214 }, { %r203, %r204 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r211, %r212, %r213, %r214 }, { %r209, %r210 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 72 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:72:25
	add.s64 	%rd32, %rd4, %rd44;
	.loc	1 72 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:72:20
	add.s64 	%rd33, %rd3, %rd44;
	bar.sync 	0;
	selp.b32 	%r236, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r235 + 0 ], [ %rd32 + 0 ], 0x10, %r236;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r237 + 0 ], [ %rd33 + 0 ], 0x10, %r236;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:25
	add.s64 	%rd34, %rd2, %rd44;
	.loc	1 77 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:77:20
	add.s64 	%rd35, %rd1, %rd44;
	// begin inline asm
	cp.async.cg.shared.global [ %r23 + 0 ], [ %rd34 + 0 ], 0x10, %r236;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r25 + 0 ], [ %rd35 + 0 ], 0x10, %r236;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:64:26
	add.s64 	%rd44, %rd44, 64;
	setp.ne.s64 	%p3, %rd44, 8192;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:40
	and.b32  	%r288, %r4, 56;
	.loc	1 52 27                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:52:27
	or.b32  	%r289, %r5, %r288;
	.loc	1 51 40                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:40
	bfe.u32 	%r290, %r2, 3, 4;
	.loc	1 51 27                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:51:27
	or.b32  	%r291, %r290, %r1;
	or.b32  	%r292, %r291, 48;
	or.b32  	%r293, %r291, 32;
	or.b32  	%r294, %r291, 16;
	.loc	1 64 26                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:85:20
	setp.lt.s32 	%p24, %r291, 512;
	setp.lt.s32 	%p25, %r294, 512;
	setp.lt.s32 	%p26, %r293, 512;
	setp.lt.s32 	%p27, %r292, 512;
	.loc	1 85 34                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:85:34
	setp.lt.s32 	%p28, %r289, 4096;
	.loc	1 85 26                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:85:26
	and.pred  	%p20, %p24, %p28;
	and.pred  	%p21, %p25, %p28;
	and.pred  	%p22, %p26, %p28;
	and.pred  	%p23, %p27, %p28;
	.loc	1 88 26                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:88:26
	shl.b32 	%r295, %r291, 12;
	shl.b32 	%r296, %r294, 12;
	shl.b32 	%r297, %r293, 12;
	shl.b32 	%r298, %r292, 12;
	.loc	1 88 21                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:88:21
	add.s32 	%r299, %r295, %r289;
	add.s32 	%r300, %r296, %r289;
	add.s32 	%r301, %r297, %r289;
	add.s32 	%r302, %r298, %r289;
	.loc	1 89 25                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:89:25
	mul.wide.s32 	%rd40, %r299, 2;
	add.s64 	%rd36, %rd7, %rd40;
	mul.wide.s32 	%rd41, %r300, 2;
	add.s64 	%rd37, %rd7, %rd41;
	mul.wide.s32 	%rd42, %r301, 2;
	add.s64 	%rd38, %rd7, %rd42;
	mul.wide.s32 	%rd43, %r302, 2;
	add.s64 	%rd39, %rd7, %rd43;
	.loc	1 89 67                         // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:89:67
	cvt.rn.bf16.f32 	%rs7, %f194;
	cvt.rn.bf16.f32 	%rs8, %f195;
	cvt.rn.bf16.f32 	%rs9, %f196;
	cvt.rn.bf16.f32 	%rs10, %f197;
	cvt.rn.bf16.f32 	%rs11, %f198;
	cvt.rn.bf16.f32 	%rs12, %f199;
	cvt.rn.bf16.f32 	%rs13, %f200;
	cvt.rn.bf16.f32 	%rs14, %f201;
	cvt.rn.bf16.f32 	%rs15, %f202;
	cvt.rn.bf16.f32 	%rs16, %f203;
	cvt.rn.bf16.f32 	%rs17, %f204;
	cvt.rn.bf16.f32 	%rs18, %f205;
	cvt.rn.bf16.f32 	%rs19, %f206;
	cvt.rn.bf16.f32 	%rs20, %f207;
	cvt.rn.bf16.f32 	%rs21, %f208;
	cvt.rn.bf16.f32 	%rs22, %f209;
	cvt.rn.bf16.f32 	%rs23, %f210;
	cvt.rn.bf16.f32 	%rs24, %f211;
	cvt.rn.bf16.f32 	%rs25, %f212;
	cvt.rn.bf16.f32 	%rs26, %f213;
	cvt.rn.bf16.f32 	%rs27, %f214;
	cvt.rn.bf16.f32 	%rs28, %f215;
	cvt.rn.bf16.f32 	%rs29, %f216;
	cvt.rn.bf16.f32 	%rs30, %f217;
	cvt.rn.bf16.f32 	%rs31, %f218;
	cvt.rn.bf16.f32 	%rs32, %f219;
	cvt.rn.bf16.f32 	%rs33, %f220;
	cvt.rn.bf16.f32 	%rs34, %f221;
	cvt.rn.bf16.f32 	%rs35, %f222;
	cvt.rn.bf16.f32 	%rs36, %f223;
	cvt.rn.bf16.f32 	%rs37, %f224;
	cvt.rn.bf16.f32 	%rs38, %f225;
	shl.b32 	%r303, %r2, 1;
	and.b32  	%r304, %r303, 6;
	shl.b32 	%r305, %r2, 4;
	and.b32  	%r306, %r305, 1472;
	or.b32  	%r307, %r306, %r304;
	or.b32  	%r308, %r307, %r3;
	and.b32  	%r309, %r4, 1016;
	shr.u32 	%r310, %r306, 2;
	add.s32 	%r312, %r75, %r310;
	shl.b32 	%r313, %r308, 1;
	add.s32 	%r256, %r312, %r313;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r256 + 0 ], { %rs7, %rs8 };
	// end inline asm
	or.b32  	%r314, %r306, 512;
	shr.u32 	%r315, %r314, 2;
	add.s32 	%r316, %r75, %r315;
	add.s32 	%r317, %r316, %r313;
	add.s32 	%r257, %r317, 1024;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r257 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r258, %r256, 32;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r258 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r259, %r317, 1056;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r259 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r260, %r256, 64;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r260 + 0 ], { %rs15, %rs16 };
	// end inline asm
	add.s32 	%r261, %r317, 1088;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r261 + 0 ], { %rs17, %rs18 };
	// end inline asm
	add.s32 	%r262, %r256, 96;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r262 + 0 ], { %rs19, %rs20 };
	// end inline asm
	add.s32 	%r263, %r317, 1120;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r263 + 0 ], { %rs21, %rs22 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r318, %r2, 120;
	shl.b32 	%r319, %r318, 1;
	add.s32 	%r320, %r75, %r319;
	shl.b32 	%r321, %r309, 1;
	add.s32 	%r322, %r320, %r321;
	ld.shared.v4.u32 	{%r272, %r273, %r274, %r275}, [%r322];
	or.b32  	%r323, %r309, 1024;
	shr.u32 	%r324, %r323, 2;
	and.b32  	%r325, %r324, 496;
	add.s32 	%r326, %r75, %r325;
	add.s32 	%r327, %r326, %r321;
	ld.shared.v4.u32 	{%r276, %r277, %r278, %r279}, [%r327+2048];
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r256 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r257 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r258 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r259 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r260 + 0 ], { %rs31, %rs32 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r261 + 0 ], { %rs33, %rs34 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r262 + 0 ], { %rs35, %rs36 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r263 + 0 ], { %rs37, %rs38 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r280, %r281, %r282, %r283}, [%r322];
	ld.shared.v4.u32 	{%r284, %r285, %r286, %r287}, [%r327+2048];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd36 + 0 ], { %r272, %r273, %r274, %r275 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd37 + 0 ], { %r276, %r277, %r278, %r279 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd38 + 0 ], { %r280, %r281, %r282, %r283 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd39 + 0 ], { %r284, %r285, %r286, %r287 };
	// end inline asm
	.loc	1 89 4                          // cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/gi/cgiwipao45tjdmlenemqzzneiqr6ahu4z35kayw7352q6xaego5o.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 105
.b8 119
.b8 105
.b8 112
.b8 97
.b8 111
.b8 52
.b8 53
.b8 116
.b8 106
.b8 100
.b8 109
.b8 108
.b8 101
.b8 110
.b8 101
.b8 109
.b8 113
.b8 122
.b8 122
.b8 110
.b8 101
.b8 105
.b8 113
.b8 114
.b8 54
.b8 97
.b8 104
.b8 117
.b8 52
.b8 122
.b8 51
.b8 53
.b8 107
.b8 97
.b8 121
.b8 119
.b8 55
.b8 51
.b8 53
.b8 50
.b8 113
.b8 54
.b8 120
.b8 97
.b8 101
.b8 103
.b8 111
.b8 53
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 103
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
