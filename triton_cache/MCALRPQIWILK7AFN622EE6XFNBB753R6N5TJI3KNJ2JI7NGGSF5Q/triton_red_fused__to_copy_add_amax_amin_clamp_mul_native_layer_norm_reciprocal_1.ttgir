#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [16, 2], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 2], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0)
#loc1 = loc(unknown)
#loc33 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":47:79)
#loc93 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":87:40)
#loc97 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":88:40)
#loc153 = loc(callsite(#loc1 at #loc33))
#loc175 = loc(callsite(#loc1 at #loc93))
#loc181 = loc(callsite(#loc1 at #loc97))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_native_layer_norm_reciprocal_1(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg9: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg10: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg11: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg12: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg13: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg14: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg15: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0x7F800000> : tensor<64x8xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<64x8xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<3.072000e+03> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.00787401571> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1.000000e+00> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<64x8xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-1.270000e+02> : tensor<64x8xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<1.270000e+02> : tensor<64x8xf32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_10 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_11 = arith.constant dense<0.000000e+00> : tensor<64x8xbf16, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<4112> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<4112> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_14 = arith.constant dense<3072> : tensor<1x8xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<3072> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<0.000000e+00> : tensor<1x8xf32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<1.000000e+00> : tensor<1x8xf32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<0.000000e+00> : tensor<1x8xbf16, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<1.000000e+00> : tensor<64x8xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<64x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<64x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_12 : tensor<64x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_13 : tensor<64x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi32, #blocked> loc(#loc7)
    %14 = arith.muli %8, %cst_15 : tensor<64x1xi32, #blocked> loc(#loc8)
    %15 = tt.broadcast %14 : tensor<64x1xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc9)
    %16 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %17 = tt.broadcast %10 : tensor<64x1xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc11)
    %18:3 = scf.for %arg18 = %c0_i32 to %c3072_i32 step %c8_i32 iter_args(%arg19 = %cst_6, %arg20 = %cst_6, %arg21 = %cst_6) -> (tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>)  : i32 {
      %81 = tt.splat %arg18 : i32 -> tensor<1x8xi32, #blocked> loc(#loc13)
      %82 = arith.addi %81, %13 : tensor<1x8xi32, #blocked> loc(#loc13)
      %83 = arith.cmpi slt, %82, %cst_14 : tensor<1x8xi32, #blocked> loc(#loc14)
      %84 = tt.broadcast %82 : tensor<1x8xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc9)
      %85 = arith.addi %84, %15 : tensor<64x8xi32, #blocked> loc(#loc9)
      %86 = tt.addptr %16, %85 : tensor<64x8x!tt.ptr<bf16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc10)
      %87 = tt.broadcast %83 : tensor<1x8xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc11)
      %88 = arith.andi %87, %17 : tensor<64x8xi1, #blocked> loc(#loc11)
      %89 = tt.load %86, %88, %cst_11 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc15)
      %90 = arith.extf %89 : tensor<64x8xbf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc16)
      %91 = arith.cmpi eq, %arg18, %c0_i32 : i32 loc(#loc17)
      %92:3 = scf.if %91 -> (tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>) {
        scf.yield %cst_6, %90, %cst_19 : tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked> loc(#loc144)
      } else {
        %96 = arith.subf %90, %arg19 : tensor<64x8xf32, #blocked> loc(#loc145)
        %97 = arith.addf %arg21, %cst_19 : tensor<64x8xf32, #blocked> loc(#loc146)
        %98 = arith.divf %96, %97 : tensor<64x8xf32, #blocked> loc(#loc147)
        %99 = arith.addf %arg19, %98 : tensor<64x8xf32, #blocked> loc(#loc148)
        %100 = arith.subf %90, %99 : tensor<64x8xf32, #blocked> loc(#loc149)
        %101 = arith.mulf %96, %100 : tensor<64x8xf32, #blocked> loc(#loc150)
        %102 = arith.addf %arg20, %101 : tensor<64x8xf32, #blocked> loc(#loc151)
        scf.yield %102, %99, %97 : tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked> loc(#loc151)
      } loc(#loc143)
      %93 = arith.select %88, %92#1, %arg19 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc28)
      %94 = arith.select %88, %92#0, %arg20 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc29)
      %95 = arith.select %88, %92#2, %arg21 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc30)
      scf.yield %93, %94, %95 : tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked> loc(#loc31)
    } loc(#loc12)
    %19:3 = "tt.reduce"(%18#0, %18#1, %18#2) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc33)), %arg19: f32 loc(callsite(#loc1 at #loc33)), %arg20: f32 loc(callsite(#loc1 at #loc33)), %arg21: f32 loc(callsite(#loc1 at #loc33)), %arg22: f32 loc(callsite(#loc1 at #loc33)), %arg23: f32 loc(callsite(#loc1 at #loc33))):
      %81 = arith.subf %arg21, %arg18 : f32 loc(#loc210)
      %82 = arith.addf %arg20, %arg23 : f32 loc(#loc211)
      %83 = arith.cmpf oeq, %82, %cst_10 : f32 loc(#loc212)
      %84 = arith.divf %arg23, %82 : f32 loc(#loc213)
      %85 = arith.select %83, %cst_10, %84 : f32 loc(#loc214)
      %86 = arith.mulf %81, %85 : f32 loc(#loc215)
      %87 = arith.addf %arg18, %86 : f32 loc(#loc216)
      %88 = arith.addf %arg19, %arg22 : f32 loc(#loc217)
      %89 = arith.mulf %81, %81 : f32 loc(#loc218)
      %90 = arith.mulf %89, %arg20 : f32 loc(#loc219)
      %91 = arith.mulf %90, %85 : f32 loc(#loc220)
      %92 = arith.addf %88, %91 : f32 loc(#loc221)
      tt.reduce.return %87, %92, %82 : f32, f32, f32 loc(#loc152)
    }) : (tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>) -> (tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>) loc(#loc152)
    %20 = tt.expand_dims %19#0 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc46)
    %21 = tt.expand_dims %19#1 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc47)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc48)
    %23 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x8x!tt.ptr<bf16>, #blocked> loc(#loc49)
    %24 = tt.broadcast %20 : tensor<64x1xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc50)
    %25 = arith.divf %21, %cst_1 : tensor<64x1xf32, #blocked> loc(#loc51)
    %26 = arith.addf %25, %cst_2 : tensor<64x1xf32, #blocked> loc(#loc52)
    %27 = tt.extern_elementwise %26 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32, #blocked>) -> tensor<64x1xf32, #blocked> loc(#loc53)
    %28 = tt.broadcast %27 : tensor<64x1xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc54)
    %29 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc55)
    %30:2 = scf.for %arg18 = %c0_i32 to %c3072_i32 step %c8_i32 iter_args(%arg19 = %cst, %arg20 = %cst_0) -> (tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked>)  : i32 {
      %81 = tt.splat %arg18 : i32 -> tensor<1x8xi32, #blocked> loc(#loc57)
      %82 = arith.addi %81, %13 : tensor<1x8xi32, #blocked> loc(#loc57)
      %83 = arith.cmpi slt, %82, %cst_14 : tensor<1x8xi32, #blocked> loc(#loc58)
      %84 = tt.broadcast %82 : tensor<1x8xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc59)
      %85 = arith.addi %84, %15 : tensor<64x8xi32, #blocked> loc(#loc59)
      %86 = tt.addptr %16, %85 : tensor<64x8x!tt.ptr<bf16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc60)
      %87 = tt.broadcast %83 : tensor<1x8xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc61)
      %88 = arith.andi %87, %17 : tensor<64x8xi1, #blocked> loc(#loc61)
      %89 = tt.load %86, %88, %cst_11 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc62)
      %90 = arith.extf %89 : tensor<64x8xbf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc63)
      %91 = arith.addi %82, %cst_14 : tensor<1x8xi32, #blocked> loc(#loc64)
      %92 = tt.addptr %22, %91 : tensor<1x8x!tt.ptr<f32>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc48)
      %93 = tt.load %92, %83, %cst_16 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc65)
      %94 = tt.addptr %23, %91 : tensor<1x8x!tt.ptr<bf16>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc49)
      %95 = tt.load %94, %83, %cst_18 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<bf16>, #blocked> loc(#loc66)
      %96 = arith.extf %95 : tensor<1x8xbf16, #blocked> to tensor<1x8xf32, #blocked> loc(#loc67)
      %97 = tt.addptr %22, %82 : tensor<1x8x!tt.ptr<f32>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc68)
      %98 = tt.load %97, %83, %cst_16 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc69)
      %99 = tt.addptr %23, %82 : tensor<1x8x!tt.ptr<bf16>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc70)
      %100 = tt.load %99, %83, %cst_18 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<bf16>, #blocked> loc(#loc71)
      %101 = arith.extf %100 : tensor<1x8xbf16, #blocked> to tensor<1x8xf32, #blocked> loc(#loc72)
      %102 = arith.subf %90, %24 : tensor<64x8xf32, #blocked> loc(#loc50)
      %103 = arith.mulf %102, %28 : tensor<64x8xf32, #blocked> loc(#loc54)
      %104 = arith.addf %93, %96 : tensor<1x8xf32, #blocked> loc(#loc73)
      %105 = arith.addf %104, %cst_17 : tensor<1x8xf32, #blocked> loc(#loc74)
      %106 = tt.broadcast %105 : tensor<1x8xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc75)
      %107 = arith.mulf %103, %106 : tensor<64x8xf32, #blocked> loc(#loc75)
      %108 = arith.addf %98, %101 : tensor<1x8xf32, #blocked> loc(#loc76)
      %109 = tt.broadcast %108 : tensor<1x8xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc77)
      %110 = arith.addf %107, %109 : tensor<64x8xf32, #blocked> loc(#loc77)
      %111 = arith.cmpf olt, %arg19, %110 : tensor<64x8xf32, #blocked> loc(#loc166)
      %112 = arith.cmpf une, %arg19, %arg19 : tensor<64x8xf32, #blocked> loc(#loc167)
      %113 = arith.ori %111, %112 : tensor<64x8xi1, #blocked> loc(#loc168)
      %114 = arith.select %113, %arg19, %110 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc169)
      %115 = arith.select %88, %114, %arg19 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc83)
      %116 = arith.cmpf ogt, %arg20, %110 : tensor<64x8xf32, #blocked> loc(#loc170)
      %117 = arith.cmpf une, %arg20, %arg20 : tensor<64x8xf32, #blocked> loc(#loc171)
      %118 = arith.ori %116, %117 : tensor<64x8xi1, #blocked> loc(#loc172)
      %119 = arith.select %118, %arg20, %110 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc173)
      %120 = arith.select %88, %119, %arg20 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc89)
      %121 = tt.addptr %29, %85 : tensor<64x8x!tt.ptr<bf16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc55)
      %122 = arith.truncf %110 : tensor<64x8xf32, #blocked> to tensor<64x8xbf16, #blocked> loc(#loc90)
      tt.store %121, %122, %88 : tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc90)
      scf.yield %115, %120 : tensor<64x8xf32, #blocked>, tensor<64x8xf32, #blocked> loc(#loc91)
    } loc(#loc56)
    %31 = "tt.reduce"(%30#0) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc93)), %arg19: f32 loc(callsite(#loc1 at #loc93))):
      %81 = arith.cmpf olt, %arg18, %arg19 : f32 loc(#loc222)
      %82 = arith.cmpf une, %arg18, %arg18 : f32 loc(#loc223)
      %83 = arith.ori %81, %82 : i1 loc(#loc224)
      %84 = arith.select %83, %arg18, %arg19 : f32 loc(#loc225)
      tt.reduce.return %84 : f32 loc(#loc174)
    }) : (tensor<64x8xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc174)
    %32 = ttg.convert_layout %31 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc94)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xf32, #blocked1> loc(#loc95)
    %34 = tt.expand_dims %31 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc95)
    %35 = "tt.reduce"(%30#1) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc97)), %arg19: f32 loc(callsite(#loc1 at #loc97))):
      %81 = arith.cmpf ogt, %arg18, %arg19 : f32 loc(#loc226)
      %82 = arith.cmpf une, %arg18, %arg18 : f32 loc(#loc227)
      %83 = arith.ori %81, %82 : i1 loc(#loc228)
      %84 = arith.select %83, %arg18, %arg19 : f32 loc(#loc229)
      tt.reduce.return %84 : f32 loc(#loc180)
    }) : (tensor<64x8xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc180)
    %36 = ttg.convert_layout %35 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc98)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xf32, #blocked1> loc(#loc99)
    %38 = tt.expand_dims %35 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc99)
    %39 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc100)
    %40 = tt.addptr %39, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc100)
    %41 = arith.truncf %33 : tensor<64x1xf32, #blocked1> to tensor<64x1xbf16, #blocked1> loc(#loc94)
    tt.store %40, %41, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc94)
    %42 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc101)
    %43 = tt.addptr %42, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc101)
    %44 = arith.truncf %37 : tensor<64x1xf32, #blocked1> to tensor<64x1xbf16, #blocked1> loc(#loc98)
    tt.store %43, %44, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc98)
    %45 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc102)
    %46 = tt.addptr %45, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc102)
    tt.store %46, %41, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc103)
    %47 = tt.splat %arg7 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc104)
    %48 = tt.addptr %47, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc104)
    tt.store %48, %44, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc105)
    %49 = tt.splat %arg8 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc106)
    %50 = tt.addptr %49, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc106)
    tt.store %50, %41, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc107)
    %51 = tt.splat %arg9 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc108)
    %52 = tt.addptr %51, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc108)
    tt.store %52, %44, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc109)
    %53 = tt.splat %arg10 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc110)
    %54 = tt.addptr %53, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc110)
    tt.store %54, %41, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc111)
    %55 = tt.splat %arg11 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc112)
    %56 = tt.addptr %55, %9 : tensor<64x1x!tt.ptr<bf16>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc112)
    tt.store %56, %44, %11 : tensor<64x1x!tt.ptr<bf16>, #blocked1> loc(#loc113)
    %57 = arith.cmpf olt, %34, %cst_3 : tensor<64x1xf32, #blocked> loc(#loc186)
    %58 = arith.cmpf une, %34, %34 : tensor<64x1xf32, #blocked> loc(#loc187)
    %59 = arith.ori %57, %58 : tensor<64x1xi1, #blocked> loc(#loc188)
    %60 = arith.select %59, %34, %cst_3 : tensor<64x1xi1, #blocked>, tensor<64x1xf32, #blocked> loc(#loc189)
    %61 = arith.subf %cst_3, %60 : tensor<64x1xf32, #blocked> loc(#loc115)
    %62 = arith.cmpf ogt, %38, %cst_3 : tensor<64x1xf32, #blocked> loc(#loc190)
    %63 = arith.cmpf une, %38, %38 : tensor<64x1xf32, #blocked> loc(#loc191)
    %64 = arith.ori %62, %63 : tensor<64x1xi1, #blocked> loc(#loc192)
    %65 = arith.select %64, %38, %cst_3 : tensor<64x1xi1, #blocked>, tensor<64x1xf32, #blocked> loc(#loc193)
    %66 = arith.cmpf ogt, %61, %65 : tensor<64x1xf32, #blocked> loc(#loc194)
    %67 = arith.cmpf une, %61, %61 : tensor<64x1xf32, #blocked> loc(#loc195)
    %68 = arith.ori %66, %67 : tensor<64x1xi1, #blocked> loc(#loc196)
    %69 = arith.select %68, %61, %65 : tensor<64x1xi1, #blocked>, tensor<64x1xf32, #blocked> loc(#loc197)
    %70 = arith.mulf %69, %cst_4 : tensor<64x1xf32, #blocked> loc(#loc118)
    %71 = arith.cmpf ogt, %70, %cst_7 : tensor<64x1xf32, #blocked> loc(#loc198)
    %72 = arith.cmpf une, %70, %70 : tensor<64x1xf32, #blocked> loc(#loc199)
    %73 = arith.ori %71, %72 : tensor<64x1xi1, #blocked> loc(#loc200)
    %74 = arith.select %73, %70, %cst_7 : tensor<64x1xi1, #blocked>, tensor<64x1xf32, #blocked> loc(#loc201)
    %75 = arith.divf %cst_5, %74 : tensor<64x1xf32, #blocked> loc(#loc120)
    %76 = tt.broadcast %75 : tensor<64x1xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc121)
    %77 = tt.splat %arg12 : !tt.ptr<i8> -> tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc122)
    %78 = tt.splat %arg13 : !tt.ptr<i8> -> tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc123)
    %79 = tt.splat %arg14 : !tt.ptr<i8> -> tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc124)
    %80 = tt.splat %arg15 : !tt.ptr<i8> -> tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc125)
    scf.for %arg18 = %c0_i32 to %c3072_i32 step %c8_i32  : i32 {
      %81 = tt.splat %arg18 : i32 -> tensor<1x8xi32, #blocked> loc(#loc127)
      %82 = arith.addi %81, %13 : tensor<1x8xi32, #blocked> loc(#loc127)
      %83 = arith.cmpi slt, %82, %cst_14 : tensor<1x8xi32, #blocked> loc(#loc128)
      %84 = tt.broadcast %82 : tensor<1x8xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc129)
      %85 = arith.addi %84, %15 : tensor<64x8xi32, #blocked> loc(#loc129)
      %86 = tt.addptr %29, %85 : tensor<64x8x!tt.ptr<bf16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc130)
      %87 = tt.broadcast %83 : tensor<1x8xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc131)
      %88 = arith.andi %87, %17 : tensor<64x8xi1, #blocked> loc(#loc131)
      %89 = tt.load %86, %88, %cst_11 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<bf16>, #blocked> loc(#loc132)
      %90 = arith.extf %89 : tensor<64x8xbf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc133)
      %91 = arith.mulf %90, %76 : tensor<64x8xf32, #blocked> loc(#loc121)
      %92 = tt.extern_elementwise %91 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<64x8xf32, #blocked>) -> tensor<64x8xf32, #blocked> loc(#loc134)
      %93 = arith.cmpf ogt, %92, %cst_8 : tensor<64x8xf32, #blocked> loc(#loc202)
      %94 = arith.cmpf une, %92, %92 : tensor<64x8xf32, #blocked> loc(#loc203)
      %95 = arith.ori %93, %94 : tensor<64x8xi1, #blocked> loc(#loc204)
      %96 = arith.select %95, %92, %cst_8 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc205)
      %97 = arith.cmpf olt, %96, %cst_9 : tensor<64x8xf32, #blocked> loc(#loc206)
      %98 = arith.cmpf une, %96, %96 : tensor<64x8xf32, #blocked> loc(#loc207)
      %99 = arith.ori %97, %98 : tensor<64x8xi1, #blocked> loc(#loc208)
      %100 = arith.select %99, %96, %cst_9 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc209)
      %101 = arith.fptosi %100 : tensor<64x8xf32, #blocked> to tensor<64x8xi8, #blocked> loc(#loc137)
      %102 = tt.addptr %77, %85 : tensor<64x8x!tt.ptr<i8>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc122)
      tt.store %102, %101, %88 : tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc138)
      %103 = tt.addptr %78, %85 : tensor<64x8x!tt.ptr<i8>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc123)
      tt.store %103, %101, %88 : tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc139)
      %104 = tt.addptr %79, %85 : tensor<64x8x!tt.ptr<i8>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc124)
      tt.store %104, %101, %88 : tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc140)
      %105 = tt.addptr %80, %85 : tensor<64x8x!tt.ptr<i8>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc125)
      tt.store %105, %101, %88 : tensor<64x8x!tt.ptr<i8>, #blocked> loc(#loc141)
    } loc(#loc126)
    tt.return loc(#loc142)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:46)
#loc9 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:41)
#loc10 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:34)
#loc11 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:61)
#loc12 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":32:40)
#loc13 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":33:31)
#loc14 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":34:29)
#loc15 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:51)
#loc16 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":38:112)
#loc17 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":42:62)
#loc18 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":203:7)
#loc19 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":42:51)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":206:31)
#loc21 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":208:24)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":209:30)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:34)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:26)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:39)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:31)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:22)
#loc28 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":44:62)
#loc29 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":45:58)
#loc30 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":46:66)
#loc31 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":46:8)
#loc32 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc34 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc40 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc44 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc46 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":48:16)
#loc47 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":49:16)
#loc48 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:35)
#loc49 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:35)
#loc50 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":65:24)
#loc51 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":67:24)
#loc52 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":69:24)
#loc53 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":70:32)
#loc54 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":71:24)
#loc55 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:29)
#loc56 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":53:40)
#loc57 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":54:31)
#loc58 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":55:29)
#loc59 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:41)
#loc60 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:34)
#loc61 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:61)
#loc62 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:51)
#loc63 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":59:113)
#loc64 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:42)
#loc65 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":60:49)
#loc66 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:49)
#loc67 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":61:102)
#loc68 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":62:35)
#loc69 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":62:42)
#loc70 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:35)
#loc71 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:42)
#loc72 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":63:95)
#loc73 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":74:24)
#loc74 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":76:24)
#loc75 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":77:24)
#loc76 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":79:24)
#loc77 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":80:24)
#loc78 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc79 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":82:47)
#loc80 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc81 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc82 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc83 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":83:50)
#loc84 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc85 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":84:47)
#loc86 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc87 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc88 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc89 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":85:50)
#loc90 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:53)
#loc91 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":86:8)
#loc92 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc94 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":89:37)
#loc95 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":87:43)
#loc96 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc98 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":90:37)
#loc99 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":88:43)
#loc100 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":89:25)
#loc101 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":90:25)
#loc102 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":91:25)
#loc103 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":91:37)
#loc104 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":92:25)
#loc105 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":92:37)
#loc106 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":93:25)
#loc107 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":93:37)
#loc108 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":94:25)
#loc109 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":94:37)
#loc110 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":95:25)
#loc111 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":95:37)
#loc112 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":96:26)
#loc113 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":96:38)
#loc114 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":105:46)
#loc115 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":106:17)
#loc116 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":107:46)
#loc117 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":108:46)
#loc118 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":110:24)
#loc119 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":113:46)
#loc120 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":116:25)
#loc121 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":119:24)
#loc122 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":128:30)
#loc123 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":129:30)
#loc124 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":130:30)
#loc125 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":131:30)
#loc126 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":97:40)
#loc127 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":98:31)
#loc128 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":99:29)
#loc129 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:43)
#loc130 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:36)
#loc131 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:63)
#loc132 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:53)
#loc133 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":103:115)
#loc134 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":120:36)
#loc135 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":123:46)
#loc136 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":125:46)
#loc137 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":127:25)
#loc138 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":128:54)
#loc139 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":129:54)
#loc140 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":130:54)
#loc141 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":131:54)
#loc142 = loc("/tmp/torchinductor_root/ts/ctsirzfzzd3q6hzmst3ijql2wxprbyku6agjaau5y4tork4ec7an.py":97:4)
#loc143 = loc(callsite(#loc18 at #loc19))
#loc144 = loc(callsite(#loc20 at #loc19))
#loc145 = loc(callsite(#loc21 at #loc19))
#loc146 = loc(callsite(#loc22 at #loc19))
#loc147 = loc(callsite(#loc23 at #loc19))
#loc148 = loc(callsite(#loc24 at #loc19))
#loc149 = loc(callsite(#loc25 at #loc19))
#loc150 = loc(callsite(#loc26 at #loc19))
#loc151 = loc(callsite(#loc27 at #loc19))
#loc152 = loc(callsite(#loc32 at #loc33))
#loc154 = loc(callsite(#loc34 at #loc32))
#loc155 = loc(callsite(#loc35 at #loc32))
#loc156 = loc(callsite(#loc36 at #loc32))
#loc157 = loc(callsite(#loc37 at #loc32))
#loc158 = loc(callsite(#loc38 at #loc32))
#loc159 = loc(callsite(#loc39 at #loc32))
#loc160 = loc(callsite(#loc40 at #loc32))
#loc161 = loc(callsite(#loc41 at #loc32))
#loc162 = loc(callsite(#loc42 at #loc32))
#loc163 = loc(callsite(#loc43 at #loc32))
#loc164 = loc(callsite(#loc44 at #loc32))
#loc165 = loc(callsite(#loc45 at #loc32))
#loc166 = loc(callsite(#loc78 at #loc79))
#loc167 = loc(callsite(#loc80 at #loc79))
#loc168 = loc(callsite(#loc81 at #loc79))
#loc169 = loc(callsite(#loc82 at #loc79))
#loc170 = loc(callsite(#loc84 at #loc85))
#loc171 = loc(callsite(#loc86 at #loc85))
#loc172 = loc(callsite(#loc87 at #loc85))
#loc173 = loc(callsite(#loc88 at #loc85))
#loc174 = loc(callsite(#loc92 at #loc93))
#loc176 = loc(callsite(#loc78 at #loc92))
#loc177 = loc(callsite(#loc80 at #loc92))
#loc178 = loc(callsite(#loc81 at #loc92))
#loc179 = loc(callsite(#loc82 at #loc92))
#loc180 = loc(callsite(#loc96 at #loc97))
#loc182 = loc(callsite(#loc84 at #loc96))
#loc183 = loc(callsite(#loc86 at #loc96))
#loc184 = loc(callsite(#loc87 at #loc96))
#loc185 = loc(callsite(#loc88 at #loc96))
#loc186 = loc(callsite(#loc78 at #loc114))
#loc187 = loc(callsite(#loc80 at #loc114))
#loc188 = loc(callsite(#loc81 at #loc114))
#loc189 = loc(callsite(#loc82 at #loc114))
#loc190 = loc(callsite(#loc84 at #loc116))
#loc191 = loc(callsite(#loc86 at #loc116))
#loc192 = loc(callsite(#loc87 at #loc116))
#loc193 = loc(callsite(#loc88 at #loc116))
#loc194 = loc(callsite(#loc84 at #loc117))
#loc195 = loc(callsite(#loc86 at #loc117))
#loc196 = loc(callsite(#loc87 at #loc117))
#loc197 = loc(callsite(#loc88 at #loc117))
#loc198 = loc(callsite(#loc84 at #loc119))
#loc199 = loc(callsite(#loc86 at #loc119))
#loc200 = loc(callsite(#loc87 at #loc119))
#loc201 = loc(callsite(#loc88 at #loc119))
#loc202 = loc(callsite(#loc84 at #loc135))
#loc203 = loc(callsite(#loc86 at #loc135))
#loc204 = loc(callsite(#loc87 at #loc135))
#loc205 = loc(callsite(#loc88 at #loc135))
#loc206 = loc(callsite(#loc78 at #loc136))
#loc207 = loc(callsite(#loc80 at #loc136))
#loc208 = loc(callsite(#loc81 at #loc136))
#loc209 = loc(callsite(#loc82 at #loc136))
#loc210 = loc(callsite(#loc154 at #loc33))
#loc211 = loc(callsite(#loc155 at #loc33))
#loc212 = loc(callsite(#loc156 at #loc33))
#loc213 = loc(callsite(#loc157 at #loc33))
#loc214 = loc(callsite(#loc158 at #loc33))
#loc215 = loc(callsite(#loc159 at #loc33))
#loc216 = loc(callsite(#loc160 at #loc33))
#loc217 = loc(callsite(#loc161 at #loc33))
#loc218 = loc(callsite(#loc162 at #loc33))
#loc219 = loc(callsite(#loc163 at #loc33))
#loc220 = loc(callsite(#loc164 at #loc33))
#loc221 = loc(callsite(#loc165 at #loc33))
#loc222 = loc(callsite(#loc176 at #loc93))
#loc223 = loc(callsite(#loc177 at #loc93))
#loc224 = loc(callsite(#loc178 at #loc93))
#loc225 = loc(callsite(#loc179 at #loc93))
#loc226 = loc(callsite(#loc182 at #loc97))
#loc227 = loc(callsite(#loc183 at #loc97))
#loc228 = loc(callsite(#loc184 at #loc97))
#loc229 = loc(callsite(#loc185 at #loc97))
