; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [83 x i8] c"/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py\00"
@assertMessage_0 = internal constant [37 x i8] c"index out of bounds: 0 <= tmp28 < 32\00"
@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

; Function Attrs: noreturn
declare !dbg !6 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define ptx_kernel void @triton_red_fused__softmax__to_copy_add_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !10 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = sdiv i32 %7, 512, !dbg !13
  %12 = mul i32 %11, 512, !dbg !14
  %.decomposed = sub i32 %7, %12, !dbg !14
  %13 = shl i32 %7, 9, !dbg !15
  %14 = or disjoint i32 %10, %13, !dbg !16
  %15 = sext i32 %14 to i64, !dbg !17
  %16 = getelementptr bfloat, ptr addrspace(1) %0, i64 %15, !dbg !17
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %16, i1 true) #7, !dbg !18
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !18
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !18
  %extelt.offset = lshr i32 %18, 16, !dbg !18
  %20 = trunc nuw i32 %extelt.offset to i16, !dbg !18
  %extelt.offset1 = lshr i32 %19, 16, !dbg !18
  %21 = trunc nuw i32 %extelt.offset1 to i16, !dbg !18
  %22 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %10, !dbg !19
  %23 = trunc i32 %18 to i16, !dbg !19
  %24 = trunc i32 %19 to i16, !dbg !19
  tail call void asm sideeffect "@$5 st.shared.v4.b16 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,h,h,h,h,b"(ptr addrspace(3) %22, i16 %23, i16 %20, i16 %24, i16 %21, i1 true) #7, !dbg !19
  tail call void @llvm.nvvm.barrier0(), !dbg !19
  %25 = and i32 %8, 127, !dbg !12
  %26 = or disjoint i32 %25, 128, !dbg !12
  %27 = or disjoint i32 %25, 256, !dbg !12
  %28 = or disjoint i32 %25, 384, !dbg !12
  %29 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %25, !dbg !19
  %30 = load bfloat, ptr addrspace(3) %29, align 2, !dbg !19
  %31 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %26, !dbg !19
  %32 = load bfloat, ptr addrspace(3) %31, align 2, !dbg !19
  %33 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %27, !dbg !19
  %34 = load bfloat, ptr addrspace(3) %33, align 2, !dbg !19
  %35 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %28, !dbg !19
  %36 = load bfloat, ptr addrspace(3) %35, align 2, !dbg !19
  %37 = insertelement <4 x i32> poison, i32 %26, i64 0, !dbg !20
  %38 = insertelement <4 x i32> %37, i32 %25, i64 1, !dbg !20
  %39 = insertelement <4 x i32> %38, i32 %27, i64 2, !dbg !20
  %40 = insertelement <4 x i32> %39, i32 %28, i64 3, !dbg !20
  %41 = insertelement <4 x i32> poison, i32 %.decomposed, i64 0, !dbg !20
  %42 = shufflevector <4 x i32> %41, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !20
  %43 = sub nsw <4 x i32> %40, %42, !dbg !20
  %44 = icmp sgt <4 x i32> %43, zeroinitializer, !dbg !21
  %45 = select <4 x i1> %44, <4 x i64> splat (i64 16), <4 x i64> zeroinitializer, !dbg !22
  %46 = tail call <4 x i32> @llvm.abs.v4i32(<4 x i32> %43, i1 true), !dbg !23
  %47 = zext nneg <4 x i32> %46 to <4 x i64>, !dbg !24
  %48 = icmp samesign ult <4 x i32> %46, splat (i32 8), !dbg !24
  %49 = extractelement <4 x i32> %46, i64 1, !dbg !25
  %50 = uitofp nneg i32 %49 to float, !dbg !25
  %51 = extractelement <4 x i32> %46, i64 0, !dbg !25
  %52 = uitofp nneg i32 %51 to float, !dbg !25
  %53 = extractelement <4 x i32> %46, i64 2, !dbg !25
  %54 = uitofp nneg i32 %53 to float, !dbg !25
  %55 = extractelement <4 x i32> %46, i64 3, !dbg !25
  %56 = uitofp nneg i32 %55 to float, !dbg !25
  %57 = fmul float %50, 1.250000e-01, !dbg !26
  %58 = fmul float %52, 1.250000e-01, !dbg !26
  %59 = fmul float %54, 1.250000e-01, !dbg !26
  %60 = fmul float %56, 1.250000e-01, !dbg !26
  %61 = fcmp olt float %57, 0x3810000000000000, !dbg !27
  %62 = fmul float %57, 0x4160000000000000, !dbg !27
  %.02.i = select i1 %61, float %62, float %57, !dbg !27
  %i.i.0.i = select i1 %61, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %63 = bitcast float %.02.i to i32, !dbg !27
  %64 = add nsw i32 %63, -1059760811, !dbg !27
  %65 = and i32 %64, -8388608, !dbg !27
  %66 = sub i32 %63, %65, !dbg !27
  %67 = bitcast i32 %66 to float, !dbg !27
  %68 = sitofp i32 %65 to float, !dbg !27
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i = icmp eq i32 %69, 0, !dbg !27
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float 0x3E80000000000000, float %i.i.0.i) #7, !dbg !27
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float 0x3E80000000000000, float %i.i.0.i) #7, !dbg !27
  %.08.i = select i1 %.not.i, float %71, float %70, !dbg !27
  %72 = fadd float %67, -1.000000e+00, !dbg !27
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i = icmp eq i32 %73, 0, !dbg !27
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %72, float 0x3FC2073EC0000000) #7, !dbg !27
  %75 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %72, float 0x3FC2073EC0000000) #7, !dbg !27
  %.010.i = select i1 %.not1.i, float %75, float %74, !dbg !27
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i = icmp eq i32 %76, 0, !dbg !27
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %72, float 0xBFBF19B980000000) #7, !dbg !27
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %72, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i = select i1 %.not2.i, float %78, float %77, !dbg !27
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i = icmp eq i32 %79, 0, !dbg !27
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %72, float 0x3FC1E52AA0000000) #7, !dbg !27
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %72, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i = select i1 %.not3.i, float %81, float %80, !dbg !27
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i = icmp eq i32 %82, 0, !dbg !27
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %72, float 0xBFC55B1720000000) #7, !dbg !27
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %72, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i = select i1 %.not4.i, float %84, float %83, !dbg !27
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i = icmp eq i32 %85, 0, !dbg !27
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %72, float 0x3FC99DA160000000) #7, !dbg !27
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %72, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i = select i1 %.not5.i, float %87, float %86, !dbg !27
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i = icmp eq i32 %88, 0, !dbg !27
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %72, float 0xBFCFFFE440000000) #7, !dbg !27
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %72, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i = select i1 %.not6.i, float %90, float %89, !dbg !27
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i = icmp eq i32 %91, 0, !dbg !27
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %72, float 0x3FD5554F00000000) #7, !dbg !27
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %72, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i = select i1 %.not7.i, float %93, float %92, !dbg !27
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i = icmp eq i32 %94, 0, !dbg !27
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %72, float -5.000000e-01) #7, !dbg !27
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %72, float -5.000000e-01) #7, !dbg !27
  %.07.i = select i1 %.not8.i, float %96, float %95, !dbg !27
  %97 = fmul float %72, %.07.i, !dbg !27
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i = icmp eq i32 %98, 0, !dbg !27
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %97, float %72, float %72) #7, !dbg !27
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %97, float %72, float %72) #7, !dbg !27
  %.06.i = select i1 %.not9.i, float %100, float %99, !dbg !27
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i = icmp eq i32 %101, 0, !dbg !27
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #7, !dbg !27
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #7, !dbg !27
  %.04.i = select i1 %.not10.i, float %103, float %102, !dbg !27
  %104 = icmp samesign ugt i32 %63, 2139095039, !dbg !27
  br i1 %104, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !27

__nv_fmaf_rn.exit.i.i:                            ; preds = %6
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i = icmp eq i32 %105, 0, !dbg !27
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i = select i1 %.not11.i, float %107, float %106, !dbg !27
  br label %__nv_logf.exit, !dbg !27

__nv_logf.exit:                                   ; preds = %6, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %6 ], !dbg !27
  %108 = fcmp olt float %58, 0x3810000000000000, !dbg !27
  %109 = fmul float %58, 0x4160000000000000, !dbg !27
  %.02.i12 = select i1 %108, float %109, float %58, !dbg !27
  %i.i.0.i13 = select i1 %108, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %110 = bitcast float %.02.i12 to i32, !dbg !27
  %111 = add nsw i32 %110, -1059760811, !dbg !27
  %112 = and i32 %111, -8388608, !dbg !27
  %113 = sub i32 %110, %112, !dbg !27
  %114 = bitcast i32 %113 to float, !dbg !27
  %115 = sitofp i32 %112 to float, !dbg !27
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i14 = icmp eq i32 %116, 0, !dbg !27
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float 0x3E80000000000000, float %i.i.0.i13) #7, !dbg !27
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float 0x3E80000000000000, float %i.i.0.i13) #7, !dbg !27
  %.08.i15 = select i1 %.not.i14, float %118, float %117, !dbg !27
  %119 = fadd float %114, -1.000000e+00, !dbg !27
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i16 = icmp eq i32 %120, 0, !dbg !27
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #7, !dbg !27
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #7, !dbg !27
  %.010.i17 = select i1 %.not1.i16, float %122, float %121, !dbg !27
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i18 = icmp eq i32 %123, 0, !dbg !27
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i17, float %119, float 0xBFBF19B980000000) #7, !dbg !27
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i17, float %119, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i19 = select i1 %.not2.i18, float %125, float %124, !dbg !27
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i20 = icmp eq i32 %126, 0, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i19, float %119, float 0x3FC1E52AA0000000) #7, !dbg !27
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i19, float %119, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i21 = select i1 %.not3.i20, float %128, float %127, !dbg !27
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i22 = icmp eq i32 %129, 0, !dbg !27
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i21, float %119, float 0xBFC55B1720000000) #7, !dbg !27
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i21, float %119, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i23 = select i1 %.not4.i22, float %131, float %130, !dbg !27
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i24 = icmp eq i32 %132, 0, !dbg !27
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i23, float %119, float 0x3FC99DA160000000) #7, !dbg !27
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i23, float %119, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i25 = select i1 %.not5.i24, float %134, float %133, !dbg !27
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i26 = icmp eq i32 %135, 0, !dbg !27
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i25, float %119, float 0xBFCFFFE440000000) #7, !dbg !27
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i25, float %119, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i27 = select i1 %.not6.i26, float %137, float %136, !dbg !27
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i28 = icmp eq i32 %138, 0, !dbg !27
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i27, float %119, float 0x3FD5554F00000000) #7, !dbg !27
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i27, float %119, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i29 = select i1 %.not7.i28, float %140, float %139, !dbg !27
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i30 = icmp eq i32 %141, 0, !dbg !27
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %119, float -5.000000e-01) #7, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %119, float -5.000000e-01) #7, !dbg !27
  %.07.i31 = select i1 %.not8.i30, float %143, float %142, !dbg !27
  %144 = fmul float %119, %.07.i31, !dbg !27
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i32 = icmp eq i32 %145, 0, !dbg !27
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float %119, float %119) #7, !dbg !27
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float %119, float %119) #7, !dbg !27
  %.06.i33 = select i1 %.not9.i32, float %147, float %146, !dbg !27
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i34 = icmp eq i32 %148, 0, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i15, float 0x3FE62E4300000000, float %.06.i33) #7, !dbg !27
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i15, float 0x3FE62E4300000000, float %.06.i33) #7, !dbg !27
  %.04.i35 = select i1 %.not10.i34, float %150, float %149, !dbg !27
  %151 = icmp samesign ugt i32 %110, 2139095039, !dbg !27
  br i1 %151, label %__nv_fmaf_rn.exit.i.i38, label %__nv_logf.exit41, !dbg !27

__nv_fmaf_rn.exit.i.i38:                          ; preds = %__nv_logf.exit
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i39 = icmp eq i32 %152, 0, !dbg !27
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i40 = select i1 %.not11.i39, float %154, float %153, !dbg !27
  br label %__nv_logf.exit41, !dbg !27

__nv_logf.exit41:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i38
  %r.i.0.i36 = phi float [ %.03.i40, %__nv_fmaf_rn.exit.i.i38 ], [ %.04.i35, %__nv_logf.exit ], !dbg !27
  %155 = fcmp olt float %59, 0x3810000000000000, !dbg !27
  %156 = fmul float %59, 0x4160000000000000, !dbg !27
  %.02.i42 = select i1 %155, float %156, float %59, !dbg !27
  %i.i.0.i43 = select i1 %155, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %157 = bitcast float %.02.i42 to i32, !dbg !27
  %158 = add nsw i32 %157, -1059760811, !dbg !27
  %159 = and i32 %158, -8388608, !dbg !27
  %160 = sub i32 %157, %159, !dbg !27
  %161 = bitcast i32 %160 to float, !dbg !27
  %162 = sitofp i32 %159 to float, !dbg !27
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i44 = icmp eq i32 %163, 0, !dbg !27
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0x3E80000000000000, float %i.i.0.i43) #7, !dbg !27
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0x3E80000000000000, float %i.i.0.i43) #7, !dbg !27
  %.08.i45 = select i1 %.not.i44, float %165, float %164, !dbg !27
  %166 = fadd float %161, -1.000000e+00, !dbg !27
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i46 = icmp eq i32 %167, 0, !dbg !27
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %166, float 0x3FC2073EC0000000) #7, !dbg !27
  %169 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %166, float 0x3FC2073EC0000000) #7, !dbg !27
  %.010.i47 = select i1 %.not1.i46, float %169, float %168, !dbg !27
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i48 = icmp eq i32 %170, 0, !dbg !27
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i47, float %166, float 0xBFBF19B980000000) #7, !dbg !27
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i47, float %166, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i49 = select i1 %.not2.i48, float %172, float %171, !dbg !27
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i50 = icmp eq i32 %173, 0, !dbg !27
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i49, float %166, float 0x3FC1E52AA0000000) #7, !dbg !27
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i49, float %166, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i51 = select i1 %.not3.i50, float %175, float %174, !dbg !27
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i52 = icmp eq i32 %176, 0, !dbg !27
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i51, float %166, float 0xBFC55B1720000000) #7, !dbg !27
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i51, float %166, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i53 = select i1 %.not4.i52, float %178, float %177, !dbg !27
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i54 = icmp eq i32 %179, 0, !dbg !27
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i53, float %166, float 0x3FC99DA160000000) #7, !dbg !27
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i53, float %166, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i55 = select i1 %.not5.i54, float %181, float %180, !dbg !27
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i56 = icmp eq i32 %182, 0, !dbg !27
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i55, float %166, float 0xBFCFFFE440000000) #7, !dbg !27
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i55, float %166, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i57 = select i1 %.not6.i56, float %184, float %183, !dbg !27
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i58 = icmp eq i32 %185, 0, !dbg !27
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i57, float %166, float 0x3FD5554F00000000) #7, !dbg !27
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i57, float %166, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i59 = select i1 %.not7.i58, float %187, float %186, !dbg !27
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i60 = icmp eq i32 %188, 0, !dbg !27
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i59, float %166, float -5.000000e-01) #7, !dbg !27
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i59, float %166, float -5.000000e-01) #7, !dbg !27
  %.07.i61 = select i1 %.not8.i60, float %190, float %189, !dbg !27
  %191 = fmul float %166, %.07.i61, !dbg !27
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i62 = icmp eq i32 %192, 0, !dbg !27
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %191, float %166, float %166) #7, !dbg !27
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %191, float %166, float %166) #7, !dbg !27
  %.06.i63 = select i1 %.not9.i62, float %194, float %193, !dbg !27
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i64 = icmp eq i32 %195, 0, !dbg !27
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i45, float 0x3FE62E4300000000, float %.06.i63) #7, !dbg !27
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i45, float 0x3FE62E4300000000, float %.06.i63) #7, !dbg !27
  %.04.i65 = select i1 %.not10.i64, float %197, float %196, !dbg !27
  %198 = icmp samesign ugt i32 %157, 2139095039, !dbg !27
  br i1 %198, label %__nv_fmaf_rn.exit.i.i68, label %__nv_logf.exit71, !dbg !27

__nv_fmaf_rn.exit.i.i68:                          ; preds = %__nv_logf.exit41
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i69 = icmp eq i32 %199, 0, !dbg !27
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i70 = select i1 %.not11.i69, float %201, float %200, !dbg !27
  br label %__nv_logf.exit71, !dbg !27

__nv_logf.exit71:                                 ; preds = %__nv_logf.exit41, %__nv_fmaf_rn.exit.i.i68
  %r.i.0.i66 = phi float [ %.03.i70, %__nv_fmaf_rn.exit.i.i68 ], [ %.04.i65, %__nv_logf.exit41 ], !dbg !27
  %202 = fcmp olt float %60, 0x3810000000000000, !dbg !27
  %203 = fmul float %60, 0x4160000000000000, !dbg !27
  %.02.i72 = select i1 %202, float %203, float %60, !dbg !27
  %i.i.0.i73 = select i1 %202, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %204 = bitcast float %.02.i72 to i32, !dbg !27
  %205 = add nsw i32 %204, -1059760811, !dbg !27
  %206 = and i32 %205, -8388608, !dbg !27
  %207 = sub i32 %204, %206, !dbg !27
  %208 = bitcast i32 %207 to float, !dbg !27
  %209 = sitofp i32 %206 to float, !dbg !27
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i74 = icmp eq i32 %210, 0, !dbg !27
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float 0x3E80000000000000, float %i.i.0.i73) #7, !dbg !27
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %209, float 0x3E80000000000000, float %i.i.0.i73) #7, !dbg !27
  %.08.i75 = select i1 %.not.i74, float %212, float %211, !dbg !27
  %213 = fadd float %208, -1.000000e+00, !dbg !27
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i76 = icmp eq i32 %214, 0, !dbg !27
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #7, !dbg !27
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #7, !dbg !27
  %.010.i77 = select i1 %.not1.i76, float %216, float %215, !dbg !27
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i78 = icmp eq i32 %217, 0, !dbg !27
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i77, float %213, float 0xBFBF19B980000000) #7, !dbg !27
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i77, float %213, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i79 = select i1 %.not2.i78, float %219, float %218, !dbg !27
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i80 = icmp eq i32 %220, 0, !dbg !27
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i79, float %213, float 0x3FC1E52AA0000000) #7, !dbg !27
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i79, float %213, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i81 = select i1 %.not3.i80, float %222, float %221, !dbg !27
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i82 = icmp eq i32 %223, 0, !dbg !27
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i81, float %213, float 0xBFC55B1720000000) #7, !dbg !27
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i81, float %213, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i83 = select i1 %.not4.i82, float %225, float %224, !dbg !27
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i84 = icmp eq i32 %226, 0, !dbg !27
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i83, float %213, float 0x3FC99DA160000000) #7, !dbg !27
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i83, float %213, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i85 = select i1 %.not5.i84, float %228, float %227, !dbg !27
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i86 = icmp eq i32 %229, 0, !dbg !27
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i85, float %213, float 0xBFCFFFE440000000) #7, !dbg !27
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i85, float %213, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i87 = select i1 %.not6.i86, float %231, float %230, !dbg !27
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i88 = icmp eq i32 %232, 0, !dbg !27
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i87, float %213, float 0x3FD5554F00000000) #7, !dbg !27
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i87, float %213, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i89 = select i1 %.not7.i88, float %234, float %233, !dbg !27
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i90 = icmp eq i32 %235, 0, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i89, float %213, float -5.000000e-01) #7, !dbg !27
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i89, float %213, float -5.000000e-01) #7, !dbg !27
  %.07.i91 = select i1 %.not8.i90, float %237, float %236, !dbg !27
  %238 = fmul float %213, %.07.i91, !dbg !27
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i92 = icmp eq i32 %239, 0, !dbg !27
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float %213, float %213) #7, !dbg !27
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float %213, float %213) #7, !dbg !27
  %.06.i93 = select i1 %.not9.i92, float %241, float %240, !dbg !27
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i94 = icmp eq i32 %242, 0, !dbg !27
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i75, float 0x3FE62E4300000000, float %.06.i93) #7, !dbg !27
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i75, float 0x3FE62E4300000000, float %.06.i93) #7, !dbg !27
  %.04.i95 = select i1 %.not10.i94, float %244, float %243, !dbg !27
  %245 = icmp samesign ugt i32 %204, 2139095039, !dbg !27
  br i1 %245, label %__nv_fmaf_rn.exit.i.i98, label %__nv_logf.exit101, !dbg !27

__nv_fmaf_rn.exit.i.i98:                          ; preds = %__nv_logf.exit71
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i99 = icmp eq i32 %246, 0, !dbg !27
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i100 = select i1 %.not11.i99, float %248, float %247, !dbg !27
  br label %__nv_logf.exit101, !dbg !27

__nv_logf.exit101:                                ; preds = %__nv_logf.exit71, %__nv_fmaf_rn.exit.i.i98
  %r.i.0.i96 = phi float [ %.03.i100, %__nv_fmaf_rn.exit.i.i98 ], [ %.04.i95, %__nv_logf.exit71 ], !dbg !27
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i104 = icmp eq i32 %249, 0, !dbg !27
  %.08.i105 = select i1 %.not.i104, float %71, float %70, !dbg !27
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i106 = icmp eq i32 %250, 0, !dbg !27
  %.010.i107 = select i1 %.not1.i106, float %75, float %74, !dbg !27
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i108 = icmp eq i32 %251, 0, !dbg !27
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i107, float %72, float 0xBFBF19B980000000) #7, !dbg !27
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i107, float %72, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i109 = select i1 %.not2.i108, float %253, float %252, !dbg !27
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i110 = icmp eq i32 %254, 0, !dbg !27
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i109, float %72, float 0x3FC1E52AA0000000) #7, !dbg !27
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i109, float %72, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i111 = select i1 %.not3.i110, float %256, float %255, !dbg !27
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i112 = icmp eq i32 %257, 0, !dbg !27
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i111, float %72, float 0xBFC55B1720000000) #7, !dbg !27
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i111, float %72, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i113 = select i1 %.not4.i112, float %259, float %258, !dbg !27
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i114 = icmp eq i32 %260, 0, !dbg !27
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i113, float %72, float 0x3FC99DA160000000) #7, !dbg !27
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i113, float %72, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i115 = select i1 %.not5.i114, float %262, float %261, !dbg !27
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i116 = icmp eq i32 %263, 0, !dbg !27
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i115, float %72, float 0xBFCFFFE440000000) #7, !dbg !27
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i115, float %72, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i117 = select i1 %.not6.i116, float %265, float %264, !dbg !27
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i118 = icmp eq i32 %266, 0, !dbg !27
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i117, float %72, float 0x3FD5554F00000000) #7, !dbg !27
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i117, float %72, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i119 = select i1 %.not7.i118, float %268, float %267, !dbg !27
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i120 = icmp eq i32 %269, 0, !dbg !27
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i119, float %72, float -5.000000e-01) #7, !dbg !27
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i119, float %72, float -5.000000e-01) #7, !dbg !27
  %.07.i121 = select i1 %.not8.i120, float %271, float %270, !dbg !27
  %272 = fmul float %72, %.07.i121, !dbg !27
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i122 = icmp eq i32 %273, 0, !dbg !27
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %272, float %72, float %72) #7, !dbg !27
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %272, float %72, float %72) #7, !dbg !27
  %.06.i123 = select i1 %.not9.i122, float %275, float %274, !dbg !27
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i124 = icmp eq i32 %276, 0, !dbg !27
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i105, float 0x3FE62E4300000000, float %.06.i123) #7, !dbg !27
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i105, float 0x3FE62E4300000000, float %.06.i123) #7, !dbg !27
  %.04.i125 = select i1 %.not10.i124, float %278, float %277, !dbg !27
  br i1 %104, label %__nv_fmaf_rn.exit.i.i128, label %__nv_logf.exit131, !dbg !27

__nv_fmaf_rn.exit.i.i128:                         ; preds = %__nv_logf.exit101
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i129 = icmp eq i32 %279, 0, !dbg !27
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i130 = select i1 %.not11.i129, float %281, float %280, !dbg !27
  br label %__nv_logf.exit131, !dbg !27

__nv_logf.exit131:                                ; preds = %__nv_logf.exit101, %__nv_fmaf_rn.exit.i.i128
  %r.i.0.i126 = phi float [ %.03.i130, %__nv_fmaf_rn.exit.i.i128 ], [ %.04.i125, %__nv_logf.exit101 ], !dbg !27
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i134 = icmp eq i32 %282, 0, !dbg !27
  %.08.i135 = select i1 %.not.i134, float %118, float %117, !dbg !27
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i136 = icmp eq i32 %283, 0, !dbg !27
  %.010.i137 = select i1 %.not1.i136, float %122, float %121, !dbg !27
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i138 = icmp eq i32 %284, 0, !dbg !27
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i137, float %119, float 0xBFBF19B980000000) #7, !dbg !27
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i137, float %119, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i139 = select i1 %.not2.i138, float %286, float %285, !dbg !27
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i140 = icmp eq i32 %287, 0, !dbg !27
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i139, float %119, float 0x3FC1E52AA0000000) #7, !dbg !27
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i139, float %119, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i141 = select i1 %.not3.i140, float %289, float %288, !dbg !27
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i142 = icmp eq i32 %290, 0, !dbg !27
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i141, float %119, float 0xBFC55B1720000000) #7, !dbg !27
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i141, float %119, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i143 = select i1 %.not4.i142, float %292, float %291, !dbg !27
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i144 = icmp eq i32 %293, 0, !dbg !27
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i143, float %119, float 0x3FC99DA160000000) #7, !dbg !27
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i143, float %119, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i145 = select i1 %.not5.i144, float %295, float %294, !dbg !27
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i146 = icmp eq i32 %296, 0, !dbg !27
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i145, float %119, float 0xBFCFFFE440000000) #7, !dbg !27
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i145, float %119, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i147 = select i1 %.not6.i146, float %298, float %297, !dbg !27
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i148 = icmp eq i32 %299, 0, !dbg !27
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i147, float %119, float 0x3FD5554F00000000) #7, !dbg !27
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i147, float %119, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i149 = select i1 %.not7.i148, float %301, float %300, !dbg !27
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i150 = icmp eq i32 %302, 0, !dbg !27
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %119, float -5.000000e-01) #7, !dbg !27
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %119, float -5.000000e-01) #7, !dbg !27
  %.07.i151 = select i1 %.not8.i150, float %304, float %303, !dbg !27
  %305 = fmul float %119, %.07.i151, !dbg !27
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i152 = icmp eq i32 %306, 0, !dbg !27
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %305, float %119, float %119) #7, !dbg !27
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %305, float %119, float %119) #7, !dbg !27
  %.06.i153 = select i1 %.not9.i152, float %308, float %307, !dbg !27
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i154 = icmp eq i32 %309, 0, !dbg !27
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i135, float 0x3FE62E4300000000, float %.06.i153) #7, !dbg !27
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i135, float 0x3FE62E4300000000, float %.06.i153) #7, !dbg !27
  %.04.i155 = select i1 %.not10.i154, float %311, float %310, !dbg !27
  br i1 %151, label %__nv_fmaf_rn.exit.i.i158, label %__nv_logf.exit161, !dbg !27

__nv_fmaf_rn.exit.i.i158:                         ; preds = %__nv_logf.exit131
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i159 = icmp eq i32 %312, 0, !dbg !27
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i160 = select i1 %.not11.i159, float %314, float %313, !dbg !27
  br label %__nv_logf.exit161, !dbg !27

__nv_logf.exit161:                                ; preds = %__nv_logf.exit131, %__nv_fmaf_rn.exit.i.i158
  %r.i.0.i156 = phi float [ %.03.i160, %__nv_fmaf_rn.exit.i.i158 ], [ %.04.i155, %__nv_logf.exit131 ], !dbg !27
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i164 = icmp eq i32 %315, 0, !dbg !27
  %.08.i165 = select i1 %.not.i164, float %165, float %164, !dbg !27
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i166 = icmp eq i32 %316, 0, !dbg !27
  %.010.i167 = select i1 %.not1.i166, float %169, float %168, !dbg !27
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i168 = icmp eq i32 %317, 0, !dbg !27
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i167, float %166, float 0xBFBF19B980000000) #7, !dbg !27
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i167, float %166, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i169 = select i1 %.not2.i168, float %319, float %318, !dbg !27
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i170 = icmp eq i32 %320, 0, !dbg !27
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i169, float %166, float 0x3FC1E52AA0000000) #7, !dbg !27
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i169, float %166, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i171 = select i1 %.not3.i170, float %322, float %321, !dbg !27
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i172 = icmp eq i32 %323, 0, !dbg !27
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i171, float %166, float 0xBFC55B1720000000) #7, !dbg !27
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i171, float %166, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i173 = select i1 %.not4.i172, float %325, float %324, !dbg !27
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i174 = icmp eq i32 %326, 0, !dbg !27
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i173, float %166, float 0x3FC99DA160000000) #7, !dbg !27
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i173, float %166, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i175 = select i1 %.not5.i174, float %328, float %327, !dbg !27
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i176 = icmp eq i32 %329, 0, !dbg !27
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i175, float %166, float 0xBFCFFFE440000000) #7, !dbg !27
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i175, float %166, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i177 = select i1 %.not6.i176, float %331, float %330, !dbg !27
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i178 = icmp eq i32 %332, 0, !dbg !27
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i177, float %166, float 0x3FD5554F00000000) #7, !dbg !27
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i177, float %166, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i179 = select i1 %.not7.i178, float %334, float %333, !dbg !27
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i180 = icmp eq i32 %335, 0, !dbg !27
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i179, float %166, float -5.000000e-01) #7, !dbg !27
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i179, float %166, float -5.000000e-01) #7, !dbg !27
  %.07.i181 = select i1 %.not8.i180, float %337, float %336, !dbg !27
  %338 = fmul float %166, %.07.i181, !dbg !27
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i182 = icmp eq i32 %339, 0, !dbg !27
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %338, float %166, float %166) #7, !dbg !27
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %338, float %166, float %166) #7, !dbg !27
  %.06.i183 = select i1 %.not9.i182, float %341, float %340, !dbg !27
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i184 = icmp eq i32 %342, 0, !dbg !27
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i165, float 0x3FE62E4300000000, float %.06.i183) #7, !dbg !27
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i165, float 0x3FE62E4300000000, float %.06.i183) #7, !dbg !27
  %.04.i185 = select i1 %.not10.i184, float %344, float %343, !dbg !27
  br i1 %198, label %__nv_fmaf_rn.exit.i.i188, label %__nv_logf.exit191, !dbg !27

__nv_fmaf_rn.exit.i.i188:                         ; preds = %__nv_logf.exit161
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i189 = icmp eq i32 %345, 0, !dbg !27
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i190 = select i1 %.not11.i189, float %347, float %346, !dbg !27
  br label %__nv_logf.exit191, !dbg !27

__nv_logf.exit191:                                ; preds = %__nv_logf.exit161, %__nv_fmaf_rn.exit.i.i188
  %r.i.0.i186 = phi float [ %.03.i190, %__nv_fmaf_rn.exit.i.i188 ], [ %.04.i185, %__nv_logf.exit161 ], !dbg !27
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not.i194 = icmp eq i32 %348, 0, !dbg !27
  %.08.i195 = select i1 %.not.i194, float %212, float %211, !dbg !27
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not1.i196 = icmp eq i32 %349, 0, !dbg !27
  %.010.i197 = select i1 %.not1.i196, float %216, float %215, !dbg !27
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not2.i198 = icmp eq i32 %350, 0, !dbg !27
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i197, float %213, float 0xBFBF19B980000000) #7, !dbg !27
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i197, float %213, float 0xBFBF19B980000000) #7, !dbg !27
  %.011.i199 = select i1 %.not2.i198, float %352, float %351, !dbg !27
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not3.i200 = icmp eq i32 %353, 0, !dbg !27
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i199, float %213, float 0x3FC1E52AA0000000) #7, !dbg !27
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i199, float %213, float 0x3FC1E52AA0000000) #7, !dbg !27
  %.012.i201 = select i1 %.not3.i200, float %355, float %354, !dbg !27
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not4.i202 = icmp eq i32 %356, 0, !dbg !27
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i201, float %213, float 0xBFC55B1720000000) #7, !dbg !27
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i201, float %213, float 0xBFC55B1720000000) #7, !dbg !27
  %.09.i203 = select i1 %.not4.i202, float %358, float %357, !dbg !27
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not5.i204 = icmp eq i32 %359, 0, !dbg !27
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i203, float %213, float 0x3FC99DA160000000) #7, !dbg !27
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i203, float %213, float 0x3FC99DA160000000) #7, !dbg !27
  %.05.i205 = select i1 %.not5.i204, float %361, float %360, !dbg !27
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not6.i206 = icmp eq i32 %362, 0, !dbg !27
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i205, float %213, float 0xBFCFFFE440000000) #7, !dbg !27
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i205, float %213, float 0xBFCFFFE440000000) #7, !dbg !27
  %.01.i207 = select i1 %.not6.i206, float %364, float %363, !dbg !27
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not7.i208 = icmp eq i32 %365, 0, !dbg !27
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i207, float %213, float 0x3FD5554F00000000) #7, !dbg !27
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i207, float %213, float 0x3FD5554F00000000) #7, !dbg !27
  %.0.i209 = select i1 %.not7.i208, float %367, float %366, !dbg !27
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not8.i210 = icmp eq i32 %368, 0, !dbg !27
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i209, float %213, float -5.000000e-01) #7, !dbg !27
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i209, float %213, float -5.000000e-01) #7, !dbg !27
  %.07.i211 = select i1 %.not8.i210, float %370, float %369, !dbg !27
  %371 = fmul float %213, %.07.i211, !dbg !27
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not9.i212 = icmp eq i32 %372, 0, !dbg !27
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %371, float %213, float %213) #7, !dbg !27
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %371, float %213, float %213) #7, !dbg !27
  %.06.i213 = select i1 %.not9.i212, float %374, float %373, !dbg !27
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not10.i214 = icmp eq i32 %375, 0, !dbg !27
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i195, float 0x3FE62E4300000000, float %.06.i213) #7, !dbg !27
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i195, float 0x3FE62E4300000000, float %.06.i213) #7, !dbg !27
  %.04.i215 = select i1 %.not10.i214, float %377, float %376, !dbg !27
  br i1 %245, label %__nv_fmaf_rn.exit.i.i218, label %__nv_logf.exit221, !dbg !27

__nv_fmaf_rn.exit.i.i218:                         ; preds = %__nv_logf.exit191
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #7, !dbg !27
  %.not11.i219 = icmp eq i32 %378, 0, !dbg !27
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #7, !dbg !27
  %.03.i220 = select i1 %.not11.i219, float %380, float %379, !dbg !27
  br label %__nv_logf.exit221, !dbg !27

__nv_logf.exit221:                                ; preds = %__nv_logf.exit191, %__nv_fmaf_rn.exit.i.i218
  %r.i.0.i216 = phi float [ %.03.i220, %__nv_fmaf_rn.exit.i.i218 ], [ %.04.i215, %__nv_logf.exit191 ], !dbg !27
  %381 = insertelement <4 x float> poison, float %r.i.0.i156, i64 0, !dbg !28
  %382 = insertelement <4 x float> %381, float %r.i.0.i126, i64 1, !dbg !28
  %383 = insertelement <4 x float> %382, float %r.i.0.i186, i64 2, !dbg !28
  %384 = insertelement <4 x float> %383, float %r.i.0.i216, i64 3, !dbg !28
  %385 = fmul <4 x float> %384, splat (float 0x3FD7154760000000), !dbg !28
  %386 = fmul <4 x float> %385, splat (float 8.000000e+00), !dbg !29
  %387 = fptosi <4 x float> %386 to <4 x i64>, !dbg !30
  %388 = add <4 x i64> %387, splat (i64 8), !dbg !31
  %389 = tail call <4 x i64> @llvm.smin.v4i64(<4 x i64> %388, <4 x i64> splat (i64 15)), !dbg !32
  %390 = select <4 x i1> %48, <4 x i64> %47, <4 x i64> %389, !dbg !36
  %391 = add nsw <4 x i64> %390, %45, !dbg !37
  %392 = lshr <4 x i64> %391, splat (i64 58), !dbg !38
  %393 = and <4 x i64> %392, splat (i64 32), !dbg !38
  %394 = add nsw <4 x i64> %393, %391, !dbg !38
  %395 = tail call i64 @llvm.vector.reduce.or.v4i64(<4 x i64> %394), !dbg !39
  %.not = icmp ult i64 %395, 32, !dbg !39
  br i1 %.not, label %397, label %396, !dbg !39

396:                                              ; preds = %__nv_logf.exit221
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 68, ptr nonnull @assertFunc_0, i64 1), !dbg !39
  unreachable, !dbg !39

397:                                              ; preds = %__nv_logf.exit221
  %398 = fcmp oeq float %.02.i72, 0.000000e+00, !dbg !27
  %399 = fcmp oeq float %.02.i42, 0.000000e+00, !dbg !27
  %400 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !27
  %401 = fcmp oeq float %.02.i12, 0.000000e+00, !dbg !27
  %402 = fmul float %r.i.0.i96, 0x3FD7154760000000, !dbg !28
  %403 = fmul float %402, 8.000000e+00, !dbg !29
  %404 = select i1 %398, float 0xFFF0000000000000, float %403, !dbg !27
  %405 = fptosi float %404 to i64, !dbg !30
  %406 = add i64 %405, 8, !dbg !31
  %407 = tail call i64 @llvm.smin.i64(i64 %406, i64 15), !dbg !32
  %408 = extractelement <4 x i1> %48, i64 3, !dbg !36
  %409 = extractelement <4 x i64> %47, i64 3, !dbg !36
  %410 = select i1 %408, i64 %409, i64 %407, !dbg !36
  %411 = extractelement <4 x i64> %45, i64 3, !dbg !37
  %412 = add nsw i64 %410, %411, !dbg !37
  %413 = lshr i64 %412, 58, !dbg !38
  %414 = and i64 %413, 32, !dbg !38
  %415 = add nsw i64 %414, %412, !dbg !38
  %416 = fmul float %r.i.0.i66, 0x3FD7154760000000, !dbg !28
  %417 = fmul float %416, 8.000000e+00, !dbg !29
  %418 = select i1 %399, float 0xFFF0000000000000, float %417, !dbg !27
  %419 = fptosi float %418 to i64, !dbg !30
  %420 = add i64 %419, 8, !dbg !31
  %421 = tail call i64 @llvm.smin.i64(i64 %420, i64 15), !dbg !32
  %422 = extractelement <4 x i1> %48, i64 2, !dbg !36
  %423 = extractelement <4 x i64> %47, i64 2, !dbg !36
  %424 = select i1 %422, i64 %423, i64 %421, !dbg !36
  %425 = extractelement <4 x i64> %45, i64 2, !dbg !37
  %426 = add nsw i64 %424, %425, !dbg !37
  %427 = lshr i64 %426, 58, !dbg !38
  %428 = and i64 %427, 32, !dbg !38
  %429 = add nsw i64 %428, %426, !dbg !38
  %430 = fmul float %r.i.0.i36, 0x3FD7154760000000, !dbg !28
  %431 = fmul float %430, 8.000000e+00, !dbg !29
  %432 = select i1 %401, float 0xFFF0000000000000, float %431, !dbg !27
  %433 = fptosi float %432 to i64, !dbg !30
  %434 = add i64 %433, 8, !dbg !31
  %435 = tail call i64 @llvm.smin.i64(i64 %434, i64 15), !dbg !32
  %436 = extractelement <4 x i1> %48, i64 0, !dbg !36
  %437 = extractelement <4 x i64> %47, i64 0, !dbg !36
  %438 = select i1 %436, i64 %437, i64 %435, !dbg !36
  %439 = extractelement <4 x i64> %45, i64 0, !dbg !37
  %440 = add nsw i64 %438, %439, !dbg !37
  %441 = lshr i64 %440, 58, !dbg !38
  %442 = and i64 %441, 32, !dbg !38
  %443 = add nsw i64 %442, %440, !dbg !38
  %444 = fmul float %r.i.0.i, 0x3FD7154760000000, !dbg !28
  %445 = fmul float %444, 8.000000e+00, !dbg !29
  %446 = select i1 %400, float 0xFFF0000000000000, float %445, !dbg !27
  %447 = fptosi float %446 to i64, !dbg !30
  %448 = add i64 %447, 8, !dbg !31
  %449 = tail call i64 @llvm.smin.i64(i64 %448, i64 15), !dbg !32
  %450 = extractelement <4 x i1> %48, i64 1, !dbg !36
  %451 = extractelement <4 x i64> %47, i64 1, !dbg !36
  %452 = select i1 %450, i64 %451, i64 %449, !dbg !36
  %453 = extractelement <4 x i64> %45, i64 1, !dbg !37
  %454 = add nsw i64 %452, %453, !dbg !37
  %455 = lshr i64 %454, 58, !dbg !38
  %456 = and i64 %455, 32, !dbg !38
  %457 = add nsw i64 %456, %454, !dbg !38
  %458 = insertelement <2 x bfloat> poison, bfloat %34, i64 0, !dbg !19
  %459 = insertelement <2 x bfloat> %458, bfloat %36, i64 1, !dbg !19
  %460 = fpext <2 x bfloat> %459 to <2 x float>, !dbg !19
  %461 = insertelement <2 x bfloat> poison, bfloat %30, i64 0, !dbg !19
  %462 = insertelement <2 x bfloat> %461, bfloat %32, i64 1, !dbg !19
  %463 = fpext <2 x bfloat> %462 to <2 x float>, !dbg !19
  %464 = lshr i32 %8, 5, !dbg !12
  %465 = and i32 %8, 31, !dbg !12
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %466 = sext i32 %11 to i64, !dbg !40
  %.idx = shl i64 %457, 7, !dbg !41
  %467 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx, !dbg !41
  %468 = getelementptr bfloat, ptr addrspace(1) %467, i64 %466, !dbg !41
  %.idx2 = shl i64 %443, 7, !dbg !41
  %469 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx2, !dbg !41
  %470 = getelementptr bfloat, ptr addrspace(1) %469, i64 %466, !dbg !41
  %.idx3 = shl i64 %429, 7, !dbg !41
  %471 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx3, !dbg !41
  %472 = getelementptr bfloat, ptr addrspace(1) %471, i64 %466, !dbg !41
  %.idx4 = shl i64 %415, 7, !dbg !41
  %473 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx4, !dbg !41
  %474 = getelementptr bfloat, ptr addrspace(1) %473, i64 %466, !dbg !41
  %475 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %468, i1 true) #7, !dbg !42
  %476 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %470, i1 true) #7, !dbg !42
  %477 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %472, i1 true) #7, !dbg !42
  %478 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %474, i1 true) #7, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %479 = and i32 %464, 3, !dbg !43
  %480 = icmp eq i32 %465, 0, !dbg !43
  %481 = getelementptr float, ptr addrspace(3) @global_smem, i32 %479, !dbg !43
  %482 = icmp slt i32 %8, 4, !dbg !43
  %483 = getelementptr float, ptr addrspace(3) @global_smem, i32 %8, !dbg !43
  %484 = and i32 %8, 3, !dbg !43
  %485 = icmp eq i32 %484, 0, !dbg !43
  %486 = and i1 %482, %485, !dbg !43
  %487 = insertelement <2 x i16> poison, i16 %477, i64 0, !dbg !42
  %488 = insertelement <2 x i16> %487, i16 %478, i64 1, !dbg !42
  %489 = bitcast <2 x i16> %488 to <2 x bfloat>, !dbg !42
  %490 = fpext <2 x bfloat> %489 to <2 x float>, !dbg !46
  %491 = fadd <2 x float> %460, %490, !dbg !47
  %492 = fcmp oeq <2 x float> %491, splat (float 0xFFF0000000000000), !dbg !48
  %493 = extractelement <2 x float> %491, i64 0, !dbg !50
  %494 = fsub float 0xFFF0000000000000, %493, !dbg !52
  %495 = extractelement <2 x float> %491, i64 1, !dbg !50
  %496 = fsub float 0xFFF0000000000000, %495, !dbg !52
  %497 = fmul float %494, 0x3FF7154760000000, !dbg !53
  %498 = tail call float @llvm.nvvm.ex2.approx.f(float %497), !dbg !53
  %499 = fmul float %496, 0x3FF7154760000000, !dbg !53
  %500 = tail call float @llvm.nvvm.ex2.approx.f(float %499), !dbg !53
  %501 = fsub float %493, %493, !dbg !54
  %502 = fsub float %495, %495, !dbg !54
  %503 = fmul float %501, 0x3FF7154760000000, !dbg !53
  %504 = tail call float @llvm.nvvm.ex2.approx.f(float %503), !dbg !53
  %505 = fmul float %502, 0x3FF7154760000000, !dbg !53
  %506 = tail call float @llvm.nvvm.ex2.approx.f(float %505), !dbg !53
  %507 = insertelement <2 x float> poison, float %498, i64 0, !dbg !55
  %508 = insertelement <2 x float> %507, float %500, i64 1, !dbg !55
  %509 = fmul <2 x float> %508, zeroinitializer, !dbg !55
  %510 = insertelement <2 x float> poison, float %504, i64 0, !dbg !56
  %511 = insertelement <2 x float> %510, float %506, i64 1, !dbg !56
  %512 = fadd <2 x float> %509, %511, !dbg !56
  %513 = select <2 x i1> %492, <2 x float> splat (float 1.000000e+00), <2 x float> %512, !dbg !56
  %514 = insertelement <2 x i16> poison, i16 %475, i64 0, !dbg !42
  %515 = insertelement <2 x i16> %514, i16 %476, i64 1, !dbg !42
  %516 = bitcast <2 x i16> %515 to <2 x bfloat>, !dbg !42
  %517 = fpext <2 x bfloat> %516 to <2 x float>, !dbg !46
  %518 = fadd <2 x float> %463, %517, !dbg !47
  %519 = fcmp oeq <2 x float> %518, splat (float 0xFFF0000000000000), !dbg !48
  %520 = extractelement <2 x float> %518, i64 0, !dbg !50
  %521 = fsub float 0xFFF0000000000000, %520, !dbg !52
  %522 = extractelement <2 x float> %518, i64 1, !dbg !50
  %523 = fsub float 0xFFF0000000000000, %522, !dbg !52
  %524 = fmul float %521, 0x3FF7154760000000, !dbg !53
  %525 = tail call float @llvm.nvvm.ex2.approx.f(float %524), !dbg !53
  %526 = fmul float %523, 0x3FF7154760000000, !dbg !53
  %527 = tail call float @llvm.nvvm.ex2.approx.f(float %526), !dbg !53
  %528 = fsub float %520, %520, !dbg !54
  %529 = fsub float %522, %522, !dbg !54
  %530 = fmul float %528, 0x3FF7154760000000, !dbg !53
  %531 = tail call float @llvm.nvvm.ex2.approx.f(float %530), !dbg !53
  %532 = fmul float %529, 0x3FF7154760000000, !dbg !53
  %533 = tail call float @llvm.nvvm.ex2.approx.f(float %532), !dbg !53
  %534 = insertelement <2 x float> poison, float %525, i64 0, !dbg !55
  %535 = insertelement <2 x float> %534, float %527, i64 1, !dbg !55
  %536 = fmul <2 x float> %535, zeroinitializer, !dbg !55
  %537 = insertelement <2 x float> poison, float %531, i64 0, !dbg !56
  %538 = insertelement <2 x float> %537, float %533, i64 1, !dbg !56
  %539 = fadd <2 x float> %536, %538, !dbg !56
  %540 = select <2 x i1> %519, <2 x float> splat (float 1.000000e+00), <2 x float> %539, !dbg !56
  %541 = fcmp ogt float %520, %522, !dbg !50
  %542 = fcmp uno float %520, 0.000000e+00, !dbg !57
  %543 = or i1 %542, %541, !dbg !58
  %544 = select i1 %543, float %520, float %522, !dbg !59
  %545 = fcmp uno float %544, 0.000000e+00, !dbg !57
  %546 = fcmp ogt float %544, %493, !dbg !50
  %547 = or i1 %546, %545, !dbg !58
  %548 = select i1 %547, float %544, float %493, !dbg !59
  %549 = fcmp ogt float %548, %495, !dbg !50
  %550 = fcmp uno float %548, 0.000000e+00, !dbg !57
  %551 = or i1 %549, %550, !dbg !58
  %552 = select i1 %551, float %548, float %495, !dbg !59
  %553 = bitcast float %552 to i32, !dbg !43
  %554 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %553, i32 16, i32 31), !dbg !43
  %555 = bitcast i32 %554 to float, !dbg !43
  %556 = fcmp ogt float %552, %555, !dbg !50
  %557 = fcmp uno float %552, 0.000000e+00, !dbg !57
  %558 = or i1 %557, %556, !dbg !58
  %559 = select i1 %558, float %552, float %555, !dbg !59
  %560 = bitcast float %559 to i32, !dbg !43
  %561 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %560, i32 8, i32 31), !dbg !43
  %562 = bitcast i32 %561 to float, !dbg !43
  %563 = fcmp ogt float %559, %562, !dbg !50
  %564 = fcmp uno float %559, 0.000000e+00, !dbg !57
  %565 = or i1 %563, %564, !dbg !58
  %566 = select i1 %565, float %559, float %562, !dbg !59
  %567 = bitcast float %566 to i32, !dbg !43
  %568 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %567, i32 4, i32 31), !dbg !43
  %569 = bitcast i32 %568 to float, !dbg !43
  %570 = fcmp ogt float %566, %569, !dbg !50
  %571 = fcmp uno float %566, 0.000000e+00, !dbg !57
  %572 = or i1 %570, %571, !dbg !58
  %573 = select i1 %572, float %566, float %569, !dbg !59
  %574 = bitcast float %573 to i32, !dbg !43
  %575 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %574, i32 2, i32 31), !dbg !43
  %576 = bitcast i32 %575 to float, !dbg !43
  %577 = fcmp ogt float %573, %576, !dbg !50
  %578 = fcmp uno float %573, 0.000000e+00, !dbg !57
  %579 = or i1 %577, %578, !dbg !58
  %580 = select i1 %579, float %573, float %576, !dbg !59
  %581 = bitcast float %580 to i32, !dbg !43
  %582 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %581, i32 1, i32 31), !dbg !43
  %583 = bitcast i32 %582 to float, !dbg !43
  %584 = fcmp ogt float %580, %583, !dbg !50
  %585 = fcmp uno float %580, 0.000000e+00, !dbg !57
  %586 = or i1 %584, %585, !dbg !58
  %587 = select i1 %586, i32 %581, i32 %582, !dbg !59
  %588 = insertelement <1 x i32> poison, i32 %587, i64 0, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %481, <1 x i32> %588, i1 %480) #7, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %589 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %483, i1 %482) #7, !dbg !43
  %590 = bitcast i32 %589 to float, !dbg !43
  %591 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %589, i32 2, i32 31), !dbg !43
  %592 = bitcast i32 %591 to float, !dbg !43
  %593 = fcmp ogt float %590, %592, !dbg !50
  %594 = fcmp uno float %590, 0.000000e+00, !dbg !57
  %595 = or i1 %594, %593, !dbg !58
  %596 = select i1 %595, float %590, float %592, !dbg !59
  %597 = bitcast float %596 to i32, !dbg !43
  %598 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %597, i32 1, i32 31), !dbg !43
  %599 = bitcast i32 %598 to float, !dbg !43
  %600 = fcmp ogt float %596, %599, !dbg !50
  %601 = fcmp uno float %596, 0.000000e+00, !dbg !57
  %602 = or i1 %600, %601, !dbg !58
  %603 = select i1 %602, i32 %597, i32 %598, !dbg !59
  %604 = insertelement <1 x i32> poison, i32 %603, i64 0, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %483, <1 x i32> %604, i1 %486) #7, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %605 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !43
  %606 = fcmp oeq float %605, 0xFFF0000000000000, !dbg !60
  %607 = fsub float %520, %605, !dbg !61
  %608 = fsub float %522, %605, !dbg !61
  %609 = fsub float %493, %605, !dbg !61
  %610 = fsub float %495, %605, !dbg !61
  %611 = fmul float %607, 0x3FF7154760000000, !dbg !62
  %612 = select i1 %606, float 0.000000e+00, float %611, !dbg !63
  %613 = tail call float @llvm.nvvm.ex2.approx.f(float %612), !dbg !62
  %614 = fmul float %608, 0x3FF7154760000000, !dbg !62
  %615 = select i1 %606, float 0.000000e+00, float %614, !dbg !63
  %616 = tail call float @llvm.nvvm.ex2.approx.f(float %615), !dbg !62
  %617 = fmul float %609, 0x3FF7154760000000, !dbg !62
  %618 = select i1 %606, float 0.000000e+00, float %617, !dbg !63
  %619 = tail call float @llvm.nvvm.ex2.approx.f(float %618), !dbg !62
  %620 = fmul float %610, 0x3FF7154760000000, !dbg !62
  %621 = select i1 %606, float 0.000000e+00, float %620, !dbg !63
  %622 = tail call float @llvm.nvvm.ex2.approx.f(float %621), !dbg !62
  %623 = insertelement <2 x float> poison, float %613, i64 0, !dbg !64
  %624 = insertelement <2 x float> %623, float %616, i64 1, !dbg !64
  %625 = fmul <2 x float> %540, %624, !dbg !64
  %626 = insertelement <2 x float> poison, float %619, i64 0, !dbg !64
  %627 = insertelement <2 x float> %626, float %622, i64 1, !dbg !64
  %628 = fmul <2 x float> %513, %627, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %shift = shufflevector <2 x float> %625, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !68
  %629 = fadd <2 x float> %625, %shift, !dbg !68
  %630 = fadd <2 x float> %629, %628, !dbg !68
  %shift222 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !68
  %631 = fadd <2 x float> %630, %shift222, !dbg !68
  %632 = extractelement <2 x float> %631, i64 0, !dbg !68
  %633 = bitcast float %632 to i32, !dbg !65
  %634 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %633, i32 16, i32 31), !dbg !65
  %635 = bitcast i32 %634 to float, !dbg !65
  %636 = fadd float %632, %635, !dbg !68
  %637 = bitcast float %636 to i32, !dbg !65
  %638 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %637, i32 8, i32 31), !dbg !65
  %639 = bitcast i32 %638 to float, !dbg !65
  %640 = fadd float %636, %639, !dbg !68
  %641 = bitcast float %640 to i32, !dbg !65
  %642 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %641, i32 4, i32 31), !dbg !65
  %643 = bitcast i32 %642 to float, !dbg !65
  %644 = fadd float %640, %643, !dbg !68
  %645 = bitcast float %644 to i32, !dbg !65
  %646 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %645, i32 2, i32 31), !dbg !65
  %647 = bitcast i32 %646 to float, !dbg !65
  %648 = fadd float %644, %647, !dbg !68
  %649 = bitcast float %648 to i32, !dbg !65
  %650 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %649, i32 1, i32 31), !dbg !65
  %651 = bitcast i32 %650 to float, !dbg !65
  %652 = fadd float %648, %651, !dbg !68
  %653 = bitcast float %652 to <1 x i32>, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %481, <1 x i32> %653, i1 %480) #7, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %654 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %483, i1 %482) #7, !dbg !65
  %655 = bitcast i32 %654 to float, !dbg !65
  %656 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %654, i32 2, i32 31), !dbg !65
  %657 = bitcast i32 %656 to float, !dbg !65
  %658 = fadd float %655, %657, !dbg !68
  %659 = bitcast float %658 to i32, !dbg !65
  %660 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %659, i32 1, i32 31), !dbg !65
  %661 = bitcast i32 %660 to float, !dbg !65
  %662 = fadd float %658, %661, !dbg !68
  %663 = bitcast float %662 to <1 x i32>, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %483, <1 x i32> %663, i1 %486) #7, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %664 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !65
  %665 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_first.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %16, i1 true) #7, !dbg !70
  %666 = extractvalue { i32, i32 } %665, 0, !dbg !70
  %667 = extractvalue { i32, i32 } %665, 1, !dbg !70
  %extelt.offset5 = lshr i32 %666, 16, !dbg !70
  %668 = trunc nuw i32 %extelt.offset5 to i16, !dbg !70
  %extelt.offset6 = lshr i32 %667, 16, !dbg !70
  %669 = trunc nuw i32 %extelt.offset6 to i16, !dbg !70
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %670 = trunc i32 %666 to i16, !dbg !71
  %671 = trunc i32 %667 to i16, !dbg !71
  tail call void asm sideeffect "@$5 st.shared.v4.b16 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,h,h,h,h,b"(ptr addrspace(3) %22, i16 %670, i16 %668, i16 %671, i16 %669, i1 true) #7, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %672 = load bfloat, ptr addrspace(3) %29, align 2, !dbg !71
  %673 = load bfloat, ptr addrspace(3) %31, align 2, !dbg !71
  %674 = load bfloat, ptr addrspace(3) %33, align 2, !dbg !71
  %675 = load bfloat, ptr addrspace(3) %35, align 2, !dbg !71
  %676 = fpext bfloat %672 to float, !dbg !71
  %677 = fpext bfloat %673 to float, !dbg !71
  %678 = fpext bfloat %674 to float, !dbg !71
  %679 = fpext bfloat %675 to float, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !72
  %680 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %468, i1 true) #7, !dbg !73
  %681 = bitcast i16 %680 to bfloat, !dbg !73
  %682 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %470, i1 true) #7, !dbg !73
  %683 = bitcast i16 %682 to bfloat, !dbg !73
  %684 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %472, i1 true) #7, !dbg !73
  %685 = bitcast i16 %684 to bfloat, !dbg !73
  %686 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %474, i1 true) #7, !dbg !73
  %687 = bitcast i16 %686 to bfloat, !dbg !73
  %688 = fpext bfloat %681 to float, !dbg !74
  %689 = fpext bfloat %683 to float, !dbg !74
  %690 = fpext bfloat %685 to float, !dbg !74
  %691 = fpext bfloat %687 to float, !dbg !74
  %692 = fadd float %676, %688, !dbg !75
  %693 = fadd float %677, %689, !dbg !75
  %694 = fadd float %678, %690, !dbg !75
  %695 = fadd float %679, %691, !dbg !75
  %696 = fsub float %692, %605, !dbg !76
  %697 = fsub float %693, %605, !dbg !76
  %698 = fsub float %694, %605, !dbg !76
  %699 = fsub float %695, %605, !dbg !76
  %700 = fmul float %696, 0x3FF7154760000000, !dbg !77
  %701 = tail call float @llvm.nvvm.ex2.approx.f(float %700), !dbg !77
  %702 = fmul float %697, 0x3FF7154760000000, !dbg !77
  %703 = tail call float @llvm.nvvm.ex2.approx.f(float %702), !dbg !77
  %704 = fmul float %698, 0x3FF7154760000000, !dbg !77
  %705 = tail call float @llvm.nvvm.ex2.approx.f(float %704), !dbg !77
  %706 = fmul float %699, 0x3FF7154760000000, !dbg !77
  %707 = tail call float @llvm.nvvm.ex2.approx.f(float %706), !dbg !77
  %708 = tail call float @llvm.nvvm.div.full(float %701, float %664), !dbg !78
  %709 = tail call float @llvm.nvvm.div.full(float %703, float %664), !dbg !78
  %710 = tail call float @llvm.nvvm.div.full(float %705, float %664), !dbg !78
  %711 = tail call float @llvm.nvvm.div.full(float %707, float %664), !dbg !78
  %712 = getelementptr bfloat, ptr addrspace(1) %2, i64 %15, !dbg !79
  %713 = fptrunc float %708 to bfloat, !dbg !80
  %714 = fptrunc float %709 to bfloat, !dbg !80
  %715 = fptrunc float %710 to bfloat, !dbg !80
  %716 = fptrunc float %711 to bfloat, !dbg !80
  tail call void @llvm.nvvm.barrier0(), !dbg !80
  %717 = bitcast bfloat %713 to <1 x i16>, !dbg !80
  tail call void asm sideeffect "@$2 st.shared.b16 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) %29, <1 x i16> %717, i1 true) #7, !dbg !80
  %718 = bitcast bfloat %714 to <1 x i16>, !dbg !80
  tail call void asm sideeffect "@$2 st.shared.b16 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) nonnull %31, <1 x i16> %718, i1 true) #7, !dbg !80
  %719 = bitcast bfloat %715 to <1 x i16>, !dbg !80
  tail call void asm sideeffect "@$2 st.shared.b16 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) nonnull %33, <1 x i16> %719, i1 true) #7, !dbg !80
  %720 = bitcast bfloat %716 to <1 x i16>, !dbg !80
  tail call void asm sideeffect "@$2 st.shared.b16 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) nonnull %35, <1 x i16> %720, i1 true) #7, !dbg !80
  tail call void @llvm.nvvm.barrier0(), !dbg !80
  %.uncasted.extract = load i32, ptr addrspace(3) %22, align 8, !dbg !80
  %721 = getelementptr inbounds nuw i8, ptr addrspace(3) %22, i32 4, !dbg !80
  %.uncasted.extract11 = load i32, ptr addrspace(3) %721, align 4, !dbg !80
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.uncasted.extract, i32 %.uncasted.extract11, ptr addrspace(1) %712, i1 true) #7, !dbg !80
  ret void, !dbg !81
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.abs.v4i32(<4 x i32>, i1 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i64> @llvm.smin.v4i64(<4 x i64>, <4 x i64>) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.vector.reduce.or.v4i64(<4 x i64>) #6

attributes #0 = { noreturn }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #5 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py", directory: "/tmp/torchinductor_root/h4")
!4 = !{ptr @triton_red_fused__softmax__to_copy_add_2, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !7, file: !7, type: !8, spFlags: DISPFlagOptimized)
!7 = !DIFile(filename: "<unknown>", directory: "")
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = distinct !DISubprogram(name: "triton_red_fused__softmax__to_copy_add_2", linkageName: "triton_red_fused__softmax__to_copy_add_2", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!11 = !DILocation(line: 23, column: 28, scope: !10)
!12 = !DILocation(line: 26, column: 37, scope: !10)
!13 = !DILocation(line: 30, column: 19, scope: !10)
!14 = !DILocation(line: 29, column: 19, scope: !10)
!15 = !DILocation(line: 39, column: 45, scope: !10)
!16 = !DILocation(line: 39, column: 41, scope: !10)
!17 = !DILocation(line: 39, column: 34, scope: !10)
!18 = !DILocation(line: 39, column: 50, scope: !10)
!19 = !DILocation(line: 39, column: 103, scope: !10)
!20 = !DILocation(line: 40, column: 23, scope: !10)
!21 = !DILocation(line: 42, column: 22, scope: !10)
!22 = !DILocation(line: 45, column: 22, scope: !10)
!23 = !DILocation(line: 47, column: 27, scope: !10)
!24 = !DILocation(line: 49, column: 23, scope: !10)
!25 = !DILocation(line: 50, column: 24, scope: !10)
!26 = !DILocation(line: 52, column: 24, scope: !10)
!27 = !DILocation(line: 53, column: 28, scope: !10)
!28 = !DILocation(line: 55, column: 24, scope: !10)
!29 = !DILocation(line: 57, column: 24, scope: !10)
!30 = !DILocation(line: 58, column: 25, scope: !10)
!31 = !DILocation(line: 59, column: 24, scope: !10)
!32 = !DILocation(line: 97, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !10, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 61, column: 46, scope: !10)
!36 = !DILocation(line: 62, column: 38, scope: !10)
!37 = !DILocation(line: 63, column: 23, scope: !10)
!38 = !DILocation(line: 67, column: 39, scope: !10)
!39 = !DILocation(line: 68, column: 69, scope: !10)
!40 = !DILocation(line: 69, column: 40, scope: !10)
!41 = !DILocation(line: 69, column: 35, scope: !10)
!42 = !DILocation(line: 69, column: 51, scope: !10)
!43 = !DILocation(line: 115, column: 29, scope: !44, inlinedAt: !45)
!44 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!45 = !DILocation(line: 82, column: 35, scope: !10)
!46 = !DILocation(line: 69, column: 93, scope: !10)
!47 = !DILocation(line: 70, column: 23, scope: !10)
!48 = !DILocation(line: 188, column: 19, scope: !33, inlinedAt: !49)
!49 = !DILocation(line: 75, column: 43, scope: !10)
!50 = !DILocation(line: 102, column: 15, scope: !51, inlinedAt: !45)
!51 = distinct !DILexicalBlockFile(scope: !44, file: !34, discriminator: 0)
!52 = !DILocation(line: 188, column: 53, scope: !33, inlinedAt: !49)
!53 = !DILocation(line: 165, column: 24, scope: !44, inlinedAt: !49)
!54 = !DILocation(line: 191, column: 53, scope: !33, inlinedAt: !49)
!55 = !DILocation(line: 197, column: 24, scope: !33, inlinedAt: !49)
!56 = !DILocation(line: 197, column: 36, scope: !33, inlinedAt: !49)
!57 = !DILocation(line: 104, column: 21, scope: !51, inlinedAt: !45)
!58 = !DILocation(line: 104, column: 16, scope: !51, inlinedAt: !45)
!59 = !DILocation(line: 105, column: 29, scope: !51, inlinedAt: !45)
!60 = !DILocation(line: 172, column: 40, scope: !33, inlinedAt: !45)
!61 = !DILocation(line: 172, column: 68, scope: !33, inlinedAt: !45)
!62 = !DILocation(line: 165, column: 24, scope: !44, inlinedAt: !45)
!63 = !DILocation(line: 172, column: 58, scope: !33, inlinedAt: !45)
!64 = !DILocation(line: 173, column: 31, scope: !33, inlinedAt: !45)
!65 = !DILocation(line: 286, column: 36, scope: !66, inlinedAt: !45)
!66 = distinct !DILexicalBlockFile(scope: !33, file: !67, discriminator: 0)
!67 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/dist-packages/triton/language")
!68 = !DILocation(line: 256, column: 15, scope: !69, inlinedAt: !45)
!69 = distinct !DILexicalBlockFile(scope: !66, file: !67, discriminator: 0)
!70 = !DILocation(line: 93, column: 51, scope: !10)
!71 = !DILocation(line: 93, column: 105, scope: !10)
!72 = !DILocation(line: 122, column: 69, scope: !10)
!73 = !DILocation(line: 123, column: 51, scope: !10)
!74 = !DILocation(line: 123, column: 93, scope: !10)
!75 = !DILocation(line: 124, column: 24, scope: !10)
!76 = !DILocation(line: 126, column: 24, scope: !10)
!77 = !DILocation(line: 127, column: 28, scope: !10)
!78 = !DILocation(line: 128, column: 25, scope: !10)
!79 = !DILocation(line: 130, column: 29, scope: !10)
!80 = !DILocation(line: 130, column: 52, scope: !10)
!81 = !DILocation(line: 87, column: 4, scope: !10)
