//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<230>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<30>;
	.loc	1 17 0                          // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:17:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_bmm_param_2];
	ld.param.u64 	%rd16, [triton_bmm_param_0];
	ld.param.u64 	%rd17, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:41:24
	mov.u32 	%r42, %ctaid.x;
	.loc	1 47 22                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:47:22
	shr.s32 	%r43, %r42, 31;
	shr.u32 	%r44, %r43, 29;
	add.s32 	%r45, %r42, %r44;
	.loc	1 48 41                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:48:41
	and.b32  	%r46, %r45, -8;
	.loc	1 48 30                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:48:30
	sub.s32 	%r47, 16, %r46;
	.loc	1 48 50                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:48:50
	min.s32 	%r48, %r47, 8;
	.loc	1 49 40                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:49:40
	rem.s32 	%r49, %r42, %r48;
	.loc	1 49 34                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:49:34
	add.s32 	%r50, %r49, %r46;
	.loc	1 50 19                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:50:19
	sub.s32 	%r51, %r42, %r46;
	.loc	1 50 30                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:50:30
	div.s32 	%r52, %r51, %r48;
	.loc	1 52 17                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:52:17
	shl.b32 	%r53, %r50, 5;
	.loc	1 52 40                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:52:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 16;
	bfe.u32 	%r54, %r1, 3, 4;
	and.b32  	%r3, %r1, 128;
	shr.u32 	%r55, %r3, 3;
	or.b32  	%r56, %r54, %r55;
	.loc	1 52 27                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:52:27
	or.b32  	%r4, %r53, %r56;
	.loc	1 53 17                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:53:17
	shl.b32 	%r57, %r52, 6;
	.loc	1 53 40                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:53:40
	shl.b32 	%r5, %r1, 3;
	and.b32  	%r58, %r5, 8;
	and.b32  	%r59, %r1, 2;
	shl.b32 	%r60, %r59, 3;
	or.b32  	%r61, %r58, %r60;
	and.b32  	%r62, %r1, 4;
	shl.b32 	%r63, %r62, 3;
	or.b32  	%r6, %r61, %r63;
	.loc	1 53 27                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:53:27
	or.b32  	%r7, %r57, %r6;
	.loc	1 55 52                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:55:52
	bfe.s32 	%r64, %r50, 26, 1;
	shr.u32 	%r65, %r64, 23;
	add.s32 	%r66, %r4, %r65;
	and.b32  	%r67, %r66, 8388096;
	sub.s32 	%r68, %r4, %r67;
	.loc	1 61 19                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:61:19
	bfe.s32 	%r69, %r52, 25, 1;
	shr.u32 	%r70, %r69, 26;
	add.s32 	%r71, %r7, %r70;
	and.b32  	%r72, %r71, -64;
	sub.s32 	%r73, %r7, %r72;
	.loc	1 65 26                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:65:26
	mov.u32 	%r8, %ctaid.y;
	.loc	1 66 28                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:28
	shl.b32 	%r74, %r68, 9;
	.loc	1 66 43                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:43
	shl.b32 	%r75, %r59, 2;
	shl.b32 	%r76, %r1, 2;
	and.b32  	%r77, %r76, 12;
	shl.b32 	%r78, %r62, 2;
	or.b32  	%r79, %r77, %r78;
	.loc	1 66 72                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:72
	shl.b32 	%r80, %r8, 18;
	.loc	1 66 40                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:40
	or.b32  	%r81, %r79, %r80;
	.loc	1 66 66                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:66
	add.s32 	%r82, %r81, %r74;
	.loc	1 66 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:66:13
	mul.wide.s32 	%rd18, %r82, 2;
	add.s64 	%rd8, %rd16, %rd18;
	.loc	1 67 27                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:67:27
	shl.b32 	%r83, %r56, 12;
	.loc	1 67 72                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:67:72
	shl.b32 	%r84, %r8, 6;
	.loc	1 67 39                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:67:39
	add.s32 	%r85, %r83, %r84;
	.loc	1 67 66                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:67:66
	add.s32 	%r86, %r85, %r73;
	.loc	1 67 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:67:13
	mul.wide.s32 	%rd19, %r86, 2;
	add.s64 	%rd9, %rd17, %rd19;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	shr.u32 	%r87, %r2, 1;
	shr.u32 	%r88, %r1, 1;
	and.b32  	%r89, %r88, 24;
	xor.b32  	%r90, %r79, %r89;
	shl.b32 	%r91, %r56, 6;
	shl.b32 	%r92, %r90, 1;
	or.b32  	%r93, %r91, %r92;
	mov.u32 	%r94, global_smem;
	add.s32 	%r95, %r94, %r93;
	add.s32 	%r23, %r95, 16384;
	mov.b32 	%r24, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r23 + 0 ], [ %rd8 + 0 ], 0x8, %r24;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	and.b32  	%r96, %r1, 56;
	xor.b32  	%r97, %r6, %r96;
	shl.b32 	%r98, %r56, 7;
	shl.b32 	%r99, %r97, 1;
	or.b32  	%r100, %r98, %r99;
	add.s32 	%r25, %r94, %r100;
	mov.b32 	%r26, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r25 + 0 ], [ %rd9 + 0 ], 0x10, %r26;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:78:13
	add.s64 	%rd10, %rd8, 64;
	.loc	1 79 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:79:13
	add.s64 	%rd11, %rd9, 262144;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	bar.sync 	0;
	add.s32 	%r27, %r95, 18432;
	// begin inline asm
	cp.async.ca.shared.global [ %r27 + 0 ], [ %rd10 + 0 ], 0x8, %r24;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	add.s32 	%r29, %r25, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd11 + 0 ], 0x10, %r26;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:78:13
	add.s64 	%rd12, %rd8, 128;
	.loc	1 79 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:79:13
	add.s64 	%rd13, %rd9, 524288;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	bar.sync 	0;
	add.s32 	%r31, %r95, 20480;
	// begin inline asm
	cp.async.ca.shared.global [ %r31 + 0 ], [ %rd12 + 0 ], 0x8, %r24;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	add.s32 	%r33, %r25, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd13 + 0 ], 0x10, %r26;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:78:13
	add.s64 	%rd14, %rd8, 192;
	.loc	1 79 13                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:79:13
	add.s64 	%rd15, %rd9, 786432;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	bar.sync 	0;
	add.s32 	%r35, %r95, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r35 + 0 ], [ %rd14 + 0 ], 0x8, %r24;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	add.s32 	%r37, %r25, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r37 + 0 ], [ %rd15 + 0 ], 0x10, %r26;
	// end inline asm
	cp.async.commit_group;
	or.b32  	%r101, %r75, %r78;
	and.b32  	%r102, %r1, 15;
	xor.b32  	%r103, %r101, %r87;
	or.b32  	%r104, %r55, %r102;
	shl.b32 	%r105, %r104, 5;
	or.b32  	%r11, %r103, %r105;
	or.b32  	%r106, %r75, 16;
	or.b32  	%r107, %r87, %r78;
	xor.b32  	%r108, %r107, %r106;
	or.b32  	%r12, %r108, %r105;
	shr.u32 	%r109, %r1, 2;
	and.b32  	%r13, %r109, 24;
	xor.b32  	%r110, %r13, %r6;
	shl.b32 	%r111, %r1, 6;
	and.b32  	%r14, %r111, 1984;
	or.b32  	%r15, %r110, %r14;
	or.b32  	%r112, %r61, 32;
	or.b32  	%r113, %r13, %r63;
	xor.b32  	%r16, %r113, %r112;
	.loc	1 70 25                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:70:25
	shl.b32 	%r114, %r1, 9;
	and.b32  	%r115, %r114, 65536;
	add.s32 	%r116, %r73, %r115;
	shl.b32 	%r117, %r54, 12;
	add.s32 	%r118, %r116, %r117;
	add.s32 	%r119, %r118, %r84;
	mul.wide.s32 	%rd20, %r119, 2;
	add.s64 	%rd21, %rd20, %rd17;
	add.s64 	%rd29, %rd21, 1048576;
	add.s32 	%r120, %r80, %r74;
	or.b32  	%r121, %r120, %r78;
	or.b32  	%r122, %r121, %r77;
	mul.wide.s32 	%rd22, %r122, 2;
	add.s64 	%rd23, %rd22, %rd16;
	add.s64 	%rd28, %rd23, 256;
	mov.f32 	%f50, 0f00000000;
	mov.b32 	%r229, 3;
	mov.b32 	%r228, -1;
	mov.b32 	%r227, -32;
	shl.b32 	%r176, %r11, 1;
	shl.b32 	%r177, %r12, 1;
	shl.b32 	%r180, %r15, 1;
	shl.b32 	%r181, %r16, 1;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r227, %r227, 32;
	setp.lt.u32 	%p1, %r227, 384;
	add.s32 	%r171, %r228, 1;
	setp.lt.s32 	%p2, %r171, 4;
	selp.b32 	%r228, %r171, 0, %p2;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r172, %r228, 11;
	add.s32 	%r174, %r94, %r172;
	add.s32 	%r175, %r174, 16384;
	add.s32 	%r127, %r175, %r176;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r143, %r144, %r145, %r146}, [%r127];
	// end inline asm
	add.s32 	%r132, %r175, %r177;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r155, %r156, %r157, %r158}, [%r132];
	// end inline asm
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	shl.b32 	%r178, %r228, 12;
	add.s32 	%r179, %r94, %r178;
	add.s32 	%r137, %r179, %r180;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r133, %r134, %r135, %r136}, [%r137];
	// end inline asm
	add.s32 	%r182, %r179, %r181;
	shl.b32 	%r183, %r14, 1;
	add.s32 	%r142, %r182, %r183;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r138, %r139, %r140, %r141}, [%r142];
	// end inline asm
	.loc	1 77 25                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r143, %r144, %r145, %r146 }, { %r133, %r134 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r143, %r144, %r145, %r146 }, { %r138, %r139 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r155, %r156, %r157, %r158 }, { %r135, %r136 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r155, %r156, %r157, %r158 }, { %r140, %r141 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	.loc	1 70 25                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:70:25
	add.s32 	%r184, %r229, 1;
	setp.lt.s32 	%p3, %r184, 4;
	selp.b32 	%r229, %r184, 0, %p3;
	.loc	1 72 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:72:24
	shl.b32 	%r185, %r229, 11;
	bar.sync 	0;
	add.s32 	%r167, %r23, %r185;
	selp.b32 	%r168, 8, 0, %p1;
	// begin inline asm
	cp.async.ca.shared.global [ %r167 + 0 ], [ %rd28 + 0 ], 0x8, %r168;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:73:24
	shl.b32 	%r186, %r229, 12;
	add.s32 	%r169, %r25, %r186;
	selp.b32 	%r170, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r169 + 0 ], [ %rd29 + 0 ], 0x10, %r170;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:70:25
	add.s64 	%rd29, %rd29, 262144;
	add.s64 	%rd28, %rd28, 64;
	setp.lt.u32 	%p4, %r227, 480;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:87:20
	setp.lt.s32 	%p10, %r4, 512;
	.loc	1 87 34                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:87:34
	setp.lt.s32 	%p11, %r7, 64;
	.loc	1 87 26                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:87:26
	and.pred  	%p9, %p10, %p11;
	.loc	1 90 24                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:90:24
	shl.b32 	%r195, %r4, 6;
	.loc	1 90 38                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:90:38
	shl.b32 	%r196, %r8, 15;
	.loc	1 90 21                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:90:21
	add.s32 	%r197, %r7, %r196;
	.loc	1 90 32                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:90:32
	add.s32 	%r198, %r197, %r195;
	.loc	1 91 25                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:91:25
	mul.wide.s32 	%rd27, %r198, 2;
	add.s64 	%rd26, %rd7, %rd27;
	.loc	1 91 67                         // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f50;
	cvt.rn.bf16.f32 	%rs2, %f51;
	cvt.rn.bf16.f32 	%rs3, %f52;
	cvt.rn.bf16.f32 	%rs4, %f53;
	cvt.rn.bf16.f32 	%rs5, %f54;
	cvt.rn.bf16.f32 	%rs6, %f55;
	cvt.rn.bf16.f32 	%rs7, %f56;
	cvt.rn.bf16.f32 	%rs8, %f57;
	shl.b32 	%r199, %r1, 1;
	and.b32  	%r200, %r199, 6;
	shl.b32 	%r201, %r1, 4;
	and.b32  	%r202, %r201, 192;
	or.b32  	%r203, %r202, %r200;
	shl.b32 	%r204, %r2, 4;
	or.b32  	%r205, %r203, %r204;
	or.b32  	%r206, %r205, %r13;
	shl.b32 	%r207, %r3, 3;
	or.b32  	%r208, %r206, %r207;
	and.b32  	%r209, %r5, 960;
	or.b32  	%r210, %r207, %r209;
	or.b32  	%r211, %r210, %r6;
	shr.u32 	%r212, %r208, 2;
	and.b32  	%r213, %r212, 496;
	add.s32 	%r215, %r94, %r213;
	shl.b32 	%r216, %r208, 1;
	add.s32 	%r187, %r215, %r216;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r187 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r217, %r208, 512;
	shr.u32 	%r218, %r217, 2;
	and.b32  	%r219, %r218, 1073741808;
	add.s32 	%r220, %r94, %r219;
	add.s32 	%r221, %r220, %r216;
	add.s32 	%r188, %r221, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r188 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r189, %r187, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r189 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r190, %r221, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r190 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r222, %r210, 2;
	and.b32  	%r223, %r222, 496;
	add.s32 	%r224, %r94, %r223;
	shl.b32 	%r225, %r211, 1;
	add.s32 	%r226, %r224, %r225;
	ld.shared.v4.u32 	{%r191, %r192, %r193, %r194}, [%r226];
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd26 + 0 ], { %r191, %r192, %r193, %r194 };
	// end inline asm
	.loc	1 91 4                          // cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/qh/cqhsxaoblwtr5pqlpnibfa4g5vrwz3lfkq543kr2u5cfboikz4cp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 104
.b8 115
.b8 120
.b8 97
.b8 111
.b8 98
.b8 108
.b8 119
.b8 116
.b8 114
.b8 53
.b8 112
.b8 113
.b8 108
.b8 112
.b8 110
.b8 105
.b8 98
.b8 102
.b8 97
.b8 52
.b8 103
.b8 53
.b8 118
.b8 114
.b8 119
.b8 122
.b8 51
.b8 108
.b8 102
.b8 107
.b8 113
.b8 53
.b8 52
.b8 51
.b8 107
.b8 114
.b8 50
.b8 117
.b8 53
.b8 99
.b8 102
.b8 98
.b8 111
.b8 105
.b8 107
.b8 122
.b8 52
.b8 99
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 113
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
