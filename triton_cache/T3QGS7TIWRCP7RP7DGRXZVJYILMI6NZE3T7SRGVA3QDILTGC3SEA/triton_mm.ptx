//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<429>;
	.reg .f32 	%f<154>;
	.reg .b64 	%rd<67>;
	.loc	1 17 0                          // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:17:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_mm_param_2];
	ld.param.u64 	%rd21, [triton_mm_param_0];
	ld.param.u64 	%rd22, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:40:24
	mov.u32 	%r54, %ctaid.x;
	.loc	1 46 22                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:46:22
	shr.s32 	%r55, %r54, 31;
	shr.u32 	%r56, %r55, 22;
	add.s32 	%r57, %r54, %r56;
	shr.s32 	%r58, %r57, 10;
	.loc	1 47 41                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:47:41
	shl.b32 	%r59, %r58, 3;
	.loc	1 47 30                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:47:30
	sub.s32 	%r60, 16, %r59;
	.loc	1 47 50                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:47:50
	min.s32 	%r61, %r60, 8;
	.loc	1 48 40                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:48:40
	rem.s32 	%r62, %r54, %r61;
	.loc	1 48 34                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:48:34
	add.s32 	%r63, %r62, %r59;
	.loc	1 49 19                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:49:19
	and.b32  	%r64, %r57, -1024;
	sub.s32 	%r65, %r54, %r64;
	.loc	1 49 30                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:49:30
	div.s32 	%r66, %r65, %r61;
	.loc	1 51 17                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:51:17
	shl.b32 	%r1, %r63, 5;
	.loc	1 51 40                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	and.b32  	%r4, %r2, 64;
	bfe.u32 	%r67, %r2, 4, 3;
	or.b32  	%r68, %r67, 8;
	or.b32  	%r69, %r67, 16;
	or.b32  	%r70, %r67, 24;
	shr.u32 	%r5, %r2, 2;
	and.b32  	%r6, %r5, 8;
	shr.u32 	%r7, %r4, 2;
	shl.b32 	%r8, %r2, 3;
	and.b32  	%r71, %r8, 8;
	and.b32  	%r72, %r8, 16;
	and.b32  	%r9, %r8, 24;
	.loc	1 51 27                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:51:27
	or.b32  	%r73, %r1, %r67;
	or.b32  	%r74, %r1, %r68;
	or.b32  	%r75, %r1, %r69;
	or.b32  	%r76, %r1, %r70;
	.loc	1 52 17                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:52:17
	shl.b32 	%r10, %r66, 5;
	.loc	1 52 27                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:52:27
	or.b32  	%r77, %r10, %r67;
	or.b32  	%r78, %r10, %r68;
	or.b32  	%r79, %r10, %r69;
	or.b32  	%r80, %r10, %r70;
	.loc	1 54 57                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:54:57
	bfe.s32 	%r81, %r63, 26, 1;
	shr.u32 	%r82, %r81, 23;
	add.s32 	%r83, %r73, %r82;
	and.b32  	%r84, %r83, 2096640;
	sub.s32 	%r85, %r73, %r84;
	add.s32 	%r86, %r74, %r82;
	and.b32  	%r87, %r86, 2096640;
	sub.s32 	%r88, %r74, %r87;
	add.s32 	%r89, %r75, %r82;
	and.b32  	%r90, %r89, 2096640;
	sub.s32 	%r91, %r75, %r90;
	add.s32 	%r92, %r76, %r82;
	and.b32  	%r93, %r92, 2096640;
	sub.s32 	%r94, %r76, %r93;
	.loc	1 58 57                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:58:57
	bfe.s32 	%r95, %r66, 26, 1;
	shr.u32 	%r96, %r95, 20;
	add.s32 	%r97, %r77, %r96;
	and.b32  	%r98, %r97, 2093056;
	sub.s32 	%r99, %r77, %r98;
	add.s32 	%r100, %r78, %r96;
	and.b32  	%r101, %r100, 2093056;
	sub.s32 	%r102, %r78, %r101;
	add.s32 	%r103, %r79, %r96;
	and.b32  	%r104, %r103, 2093056;
	sub.s32 	%r105, %r79, %r104;
	add.s32 	%r106, %r80, %r96;
	and.b32  	%r107, %r106, 2093056;
	sub.s32 	%r108, %r80, %r107;
	.loc	1 66 30                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:66:30
	and.b32  	%r11, %r8, 32;
	and.b32  	%r109, %r8, 56;
	and.b32  	%r12, %r8, 120;
	.loc	1 71 31                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:71:31
	mul.lo.s32 	%r110, %r85, 10240;
	mul.lo.s32 	%r111, %r88, 10240;
	mul.lo.s32 	%r112, %r91, 10240;
	mul.lo.s32 	%r113, %r94, 10240;
	.loc	1 77 56                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:56
	mul.lo.s32 	%r114, %r99, 10240;
	mul.lo.s32 	%r115, %r102, 10240;
	mul.lo.s32 	%r116, %r105, 10240;
	mul.lo.s32 	%r117, %r108, 10240;
	.loc	1 71 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:71:25
	or.b32  	%r118, %r110, %r12;
	or.b32  	%r119, %r111, %r12;
	or.b32  	%r120, %r112, %r12;
	or.b32  	%r121, %r113, %r12;
	.loc	1 72 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:72:25
	mul.wide.s32 	%rd23, %r118, 2;
	add.s64 	%rd12, %rd21, %rd23;
	mul.wide.s32 	%rd24, %r119, 2;
	add.s64 	%rd13, %rd21, %rd24;
	mul.wide.s32 	%rd25, %r120, 2;
	add.s64 	%rd14, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r121, 2;
	add.s64 	%rd15, %rd21, %rd26;
	.loc	1 72 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:72:20
	shr.u32 	%r122, %r3, 1;
	shr.u32 	%r123, %r2, 1;
	and.b32  	%r124, %r123, 56;
	xor.b32  	%r125, %r12, %r124;
	shl.b32 	%r126, %r125, 1;
	shl.b32 	%r127, %r67, 8;
	or.b32  	%r128, %r127, %r126;
	mov.u32 	%r129, global_smem;
	add.s32 	%r339, %r129, %r128;
	add.s32 	%r341, %r339, 2048;
	add.s32 	%r343, %r339, 4096;
	add.s32 	%r345, %r339, 6144;
	mov.b32 	%r38, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r339 + 0 ], [ %rd12 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r341 + 0 ], [ %rd13 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r343 + 0 ], [ %rd14 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r345 + 0 ], [ %rd15 + 0 ], 0x10, %r38;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:50
	or.b32  	%r130, %r114, %r12;
	or.b32  	%r131, %r115, %r12;
	or.b32  	%r132, %r116, %r12;
	or.b32  	%r133, %r117, %r12;
	.loc	1 77 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:25
	mul.wide.s32 	%rd27, %r130, 2;
	add.s64 	%rd16, %rd22, %rd27;
	mul.wide.s32 	%rd28, %r131, 2;
	add.s64 	%rd17, %rd22, %rd28;
	mul.wide.s32 	%rd29, %r132, 2;
	add.s64 	%rd18, %rd22, %rd29;
	mul.wide.s32 	%rd30, %r133, 2;
	add.s64 	%rd19, %rd22, %rd30;
	.loc	1 77 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:20
	add.s32 	%r45, %r339, 8192;
	add.s32 	%r47, %r339, 10240;
	add.s32 	%r49, %r339, 12288;
	add.s32 	%r51, %r339, 14336;
	// begin inline asm
	cp.async.cg.shared.global [ %r45 + 0 ], [ %rd16 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r47 + 0 ], [ %rd17 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r49 + 0 ], [ %rd18 + 0 ], 0x10, %r38;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r51 + 0 ], [ %rd19 + 0 ], 0x10, %r38;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:64:26
	or.b32  	%r134, %r11, %r122;
	and.b32  	%r135, %r2, 7;
	and.b32  	%r136, %r2, 15;
	xor.b32  	%r137, %r109, %r122;
	or.b32  	%r138, %r7, %r136;
	shl.b32 	%r139, %r138, 7;
	or.b32  	%r21, %r139, %r137;
	or.b32  	%r140, %r71, 16;
	xor.b32  	%r141, %r140, %r72;
	or.b32  	%r142, %r141, %r11;
	xor.b32  	%r143, %r142, %r122;
	or.b32  	%r22, %r143, %r139;
	or.b32  	%r144, %r9, 32;
	xor.b32  	%r145, %r144, %r134;
	or.b32  	%r23, %r145, %r139;
	or.b32  	%r146, %r71, 48;
	and.b32  	%r147, %r8, 48;
	or.b32  	%r148, %r122, %r147;
	xor.b32  	%r149, %r148, %r146;
	or.b32  	%r24, %r149, %r139;
	or.b32  	%r150, %r109, 64;
	xor.b32  	%r151, %r150, %r122;
	or.b32  	%r25, %r151, %r139;
	or.b32  	%r152, %r71, 80;
	xor.b32  	%r153, %r152, %r72;
	or.b32  	%r154, %r153, %r11;
	xor.b32  	%r155, %r154, %r122;
	or.b32  	%r26, %r155, %r139;
	or.b32  	%r156, %r9, 96;
	xor.b32  	%r157, %r156, %r134;
	or.b32  	%r27, %r157, %r139;
	or.b32  	%r158, %r71, 112;
	xor.b32  	%r159, %r148, %r158;
	or.b32  	%r28, %r159, %r139;
	and.b32  	%r160, %r2, 24;
	xor.b32  	%r29, %r109, %r160;
	or.b32  	%r161, %r6, %r135;
	shl.b32 	%r30, %r161, 7;
	or.b32  	%r31, %r30, %r29;
	or.b32  	%r162, %r11, %r160;
	xor.b32  	%r32, %r162, %r144;
	xor.b32  	%r33, %r150, %r160;
	xor.b32  	%r34, %r162, %r156;
	mul.wide.u32 	%rd31, %r136, 16;
	mul.wide.s32 	%rd32, %r117, 2;
	or.b64  	%rd33, %rd31, %rd32;
	add.s64 	%rd34, %rd33, %rd22;
	add.s64 	%rd1, %rd34, 256;
	mul.wide.s32 	%rd35, %r116, 2;
	or.b64  	%rd36, %rd31, %rd35;
	add.s64 	%rd37, %rd36, %rd22;
	add.s64 	%rd2, %rd37, 256;
	mul.wide.s32 	%rd38, %r115, 2;
	or.b64  	%rd39, %rd31, %rd38;
	add.s64 	%rd40, %rd39, %rd22;
	add.s64 	%rd3, %rd40, 256;
	mul.wide.s32 	%rd41, %r114, 2;
	or.b64  	%rd42, %rd31, %rd41;
	add.s64 	%rd43, %rd42, %rd22;
	add.s64 	%rd4, %rd43, 256;
	mul.wide.s32 	%rd44, %r113, 2;
	or.b64  	%rd45, %rd31, %rd44;
	add.s64 	%rd46, %rd45, %rd21;
	add.s64 	%rd5, %rd46, 256;
	mul.wide.s32 	%rd47, %r112, 2;
	or.b64  	%rd48, %rd31, %rd47;
	add.s64 	%rd49, %rd48, %rd21;
	add.s64 	%rd6, %rd49, 256;
	mul.wide.s32 	%rd50, %r111, 2;
	or.b64  	%rd51, %rd31, %rd50;
	add.s64 	%rd52, %rd51, %rd21;
	add.s64 	%rd7, %rd52, 256;
	mul.wide.s32 	%rd53, %r110, 2;
	or.b64  	%rd54, %rd31, %rd53;
	add.s64 	%rd55, %rd54, %rd21;
	add.s64 	%rd8, %rd55, 256;
	mov.f32 	%f146, 0f00000000;
	mov.b32 	%r428, -1;
	mov.b64 	%rd66, 0;
	shl.b32 	%r359, %r21, 1;
	shl.b32 	%r360, %r22, 1;
	shl.b32 	%r361, %r23, 1;
	shl.b32 	%r362, %r24, 1;
	shl.b32 	%r363, %r25, 1;
	shl.b32 	%r364, %r26, 1;
	shl.b32 	%r365, %r27, 1;
	shl.b32 	%r366, %r28, 1;
	shl.b32 	%r368, %r31, 1;
	shl.b32 	%r369, %r32, 1;
	shl.b32 	%r372, %r33, 1;
	shl.b32 	%r374, %r34, 1;
	mov.f32 	%f147, %f146;
	mov.f32 	%f148, %f146;
	mov.f32 	%f149, %f146;
	mov.f32 	%f150, %f146;
	mov.f32 	%f151, %f146;
	mov.f32 	%f152, %f146;
	mov.f32 	%f153, %f146;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd66, 20224;
	add.s32 	%r355, %r428, 1;
	setp.gt.u32 	%p2, %r428, 2147483646;
	selp.b32 	%r428, %r355, 0, %p2;
	.loc	1 72 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r356, %r428, 13;
	add.s32 	%r358, %r129, %r356;
	add.s32 	%r167, %r358, %r359;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r243, %r244, %r245, %r246}, [%r167];
	// end inline asm
	add.s32 	%r172, %r358, %r360;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r255, %r256, %r257, %r258}, [%r172];
	// end inline asm
	add.s32 	%r177, %r358, %r361;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r267, %r268, %r269, %r270}, [%r177];
	// end inline asm
	add.s32 	%r182, %r358, %r362;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r279, %r280, %r281, %r282}, [%r182];
	// end inline asm
	add.s32 	%r187, %r358, %r363;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r291, %r292, %r293, %r294}, [%r187];
	// end inline asm
	add.s32 	%r192, %r358, %r364;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r303, %r304, %r305, %r306}, [%r192];
	// end inline asm
	add.s32 	%r197, %r358, %r365;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r315, %r316, %r317, %r318}, [%r197];
	// end inline asm
	add.s32 	%r202, %r358, %r366;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r327, %r328, %r329, %r330}, [%r202];
	// end inline asm
	.loc	1 77 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:20
	add.s32 	%r367, %r358, 8192;
	add.s32 	%r207, %r367, %r368;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r203, %r204, %r205, %r206}, [%r207];
	// end inline asm
	add.s32 	%r370, %r367, %r369;
	shl.b32 	%r371, %r30, 1;
	add.s32 	%r212, %r370, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r208, %r209, %r210, %r211}, [%r212];
	// end inline asm
	add.s32 	%r373, %r367, %r372;
	add.s32 	%r217, %r373, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r213, %r214, %r215, %r216}, [%r217];
	// end inline asm
	add.s32 	%r375, %r367, %r374;
	add.s32 	%r222, %r375, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r218, %r219, %r220, %r221}, [%r222];
	// end inline asm
	add.s32 	%r376, %r30, %r29;
	shl.b32 	%r377, %r376, 1;
	add.s32 	%r378, %r367, %r377;
	add.s32 	%r227, %r378, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r223, %r224, %r225, %r226}, [%r227];
	// end inline asm
	add.s32 	%r232, %r212, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r228, %r229, %r230, %r231}, [%r232];
	// end inline asm
	add.s32 	%r237, %r217, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r233, %r234, %r235, %r236}, [%r237];
	// end inline asm
	add.s32 	%r242, %r222, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r238, %r239, %r240, %r241}, [%r242];
	// end inline asm
	.loc	1 78 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r243, %r244, %r245, %r246 }, { %r203, %r204 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r243, %r244, %r245, %r246 }, { %r223, %r224 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r255, %r256, %r257, %r258 }, { %r205, %r206 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r255, %r256, %r257, %r258 }, { %r225, %r226 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r267, %r268, %r269, %r270 }, { %r208, %r209 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r267, %r268, %r269, %r270 }, { %r228, %r229 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r279, %r280, %r281, %r282 }, { %r210, %r211 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r279, %r280, %r281, %r282 }, { %r230, %r231 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r291, %r292, %r293, %r294 }, { %r213, %r214 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r291, %r292, %r293, %r294 }, { %r233, %r234 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r303, %r304, %r305, %r306 }, { %r215, %r216 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r303, %r304, %r305, %r306 }, { %r235, %r236 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r315, %r316, %r317, %r318 }, { %r218, %r219 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r315, %r316, %r317, %r318 }, { %r238, %r239 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r327, %r328, %r329, %r330 }, { %r220, %r221 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r327, %r328, %r329, %r330 }, { %r240, %r241 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	.loc	1 72 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:72:25
	add.s64 	%rd56, %rd8, %rd66;
	add.s64 	%rd57, %rd7, %rd66;
	add.s64 	%rd58, %rd6, %rd66;
	.loc	1 72 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:72:20
	add.s64 	%rd59, %rd5, %rd66;
	bar.sync 	0;
	selp.b32 	%r340, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r339 + 0 ], [ %rd56 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r341 + 0 ], [ %rd57 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r343 + 0 ], [ %rd58 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r345 + 0 ], [ %rd59 + 0 ], 0x10, %r340;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:25
	add.s64 	%rd60, %rd4, %rd66;
	add.s64 	%rd61, %rd3, %rd66;
	add.s64 	%rd62, %rd2, %rd66;
	.loc	1 77 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:77:20
	add.s64 	%rd63, %rd1, %rd66;
	// begin inline asm
	cp.async.cg.shared.global [ %r45 + 0 ], [ %rd60 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r47 + 0 ], [ %rd61 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r49 + 0 ], [ %rd62 + 0 ], 0x10, %r340;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r51 + 0 ], [ %rd63 + 0 ], 0x10, %r340;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:64:26
	add.s64 	%rd66, %rd66, 256;
	setp.ne.s64 	%p3, %rd66, 20480;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 66 30                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:66:30
	and.b32  	%r387, %r8, 64;
	.loc	1 52 27                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:52:27
	or.b32  	%r388, %r10, %r9;
	.loc	1 51 40                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:51:40
	and.b32  	%r389, %r5, 15;
	or.b32  	%r390, %r389, %r7;
	.loc	1 51 27                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:51:27
	or.b32  	%r391, %r390, %r1;
	.loc	1 64 26                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:85:20
	setp.lt.s32 	%p9, %r391, 512;
	.loc	1 85 34                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:85:34
	setp.lt.s32 	%p10, %r388, 4096;
	.loc	1 85 26                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:85:26
	and.pred  	%p8, %p9, %p10;
	.loc	1 88 26                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:88:26
	shl.b32 	%r392, %r391, 12;
	.loc	1 88 21                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:88:21
	add.s32 	%r393, %r392, %r388;
	.loc	1 89 25                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:89:25
	mul.wide.s32 	%rd65, %r393, 2;
	add.s64 	%rd64, %rd11, %rd65;
	.loc	1 89 67                         // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f146;
	cvt.rn.bf16.f32 	%rs2, %f147;
	cvt.rn.bf16.f32 	%rs3, %f148;
	cvt.rn.bf16.f32 	%rs4, %f149;
	cvt.rn.bf16.f32 	%rs5, %f150;
	cvt.rn.bf16.f32 	%rs6, %f151;
	cvt.rn.bf16.f32 	%rs7, %f152;
	cvt.rn.bf16.f32 	%rs8, %f153;
	shl.b32 	%r394, %r2, 1;
	and.b32  	%r395, %r394, 6;
	shl.b32 	%r396, %r3, 3;
	or.b32  	%r397, %r395, %r396;
	or.b32  	%r398, %r397, %r387;
	or.b32  	%r399, %r398, %r11;
	or.b32  	%r400, %r399, %r6;
	shl.b32 	%r401, %r4, 3;
	or.b32  	%r402, %r400, %r401;
	and.b32  	%r403, %r8, 384;
	or.b32  	%r404, %r401, %r403;
	or.b32  	%r405, %r404, %r12;
	shr.u32 	%r406, %r402, 1;
	and.b32  	%r407, %r406, 2147483632;
	add.s32 	%r409, %r129, %r407;
	shl.b32 	%r410, %r402, 1;
	add.s32 	%r379, %r409, %r410;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r379 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r411, %r402, 256;
	shr.u32 	%r412, %r411, 1;
	and.b32  	%r413, %r412, 2147483632;
	add.s32 	%r414, %r129, %r413;
	shl.b32 	%r415, %r411, 1;
	add.s32 	%r380, %r414, %r415;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r380 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r416, %r402, 16;
	shl.b32 	%r417, %r416, 1;
	add.s32 	%r381, %r409, %r417;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r381 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r418, %r402, 272;
	shr.u32 	%r419, %r418, 1;
	and.b32  	%r420, %r419, 2147483632;
	add.s32 	%r421, %r129, %r420;
	shl.b32 	%r422, %r418, 1;
	add.s32 	%r382, %r421, %r422;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r382 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r423, %r405, 1;
	and.b32  	%r424, %r423, 496;
	add.s32 	%r425, %r129, %r424;
	shl.b32 	%r426, %r405, 1;
	add.s32 	%r427, %r425, %r426;
	ld.shared.v4.u32 	{%r383, %r384, %r385, %r386}, [%r427];
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd64 + 0 ], { %r383, %r384, %r385, %r386 };
	// end inline asm
	.loc	1 89 4                          // cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/u6/cu6ghlvtdjqpscex3omvhqnh64oojtxt2lcwmx6ljosji7s4ngyz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 54
.b8 103
.b8 104
.b8 108
.b8 118
.b8 116
.b8 100
.b8 106
.b8 113
.b8 112
.b8 115
.b8 99
.b8 101
.b8 120
.b8 51
.b8 111
.b8 109
.b8 118
.b8 104
.b8 113
.b8 110
.b8 104
.b8 54
.b8 52
.b8 111
.b8 111
.b8 106
.b8 116
.b8 120
.b8 116
.b8 50
.b8 108
.b8 99
.b8 119
.b8 109
.b8 120
.b8 54
.b8 108
.b8 106
.b8 111
.b8 115
.b8 106
.b8 105
.b8 55
.b8 115
.b8 52
.b8 110
.b8 103
.b8 121
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 117
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
