#blocked = #ttg.blocked<{sizePerThread = [1, 16], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0)
#loc1 = loc(unknown)
#loc30 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":47:79)
#loc91 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":87:40)
#loc95 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":88:40)
#loc147 = loc(callsite(#loc1 at #loc30))
#loc171 = loc(callsite(#loc1 at #loc91))
#loc177 = loc(callsite(#loc1 at #loc95))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_native_layer_norm_reciprocal_1(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg7: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg8: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg9: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg10: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg11: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg12: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0x7F800000> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3.072000e+03> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.00787401571> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-1.270000e+02> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<1.270000e+02> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %c3600_i32 = arith.constant 3600 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_11 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<3072> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<3072> : tensor<1x2048xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c3600_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x2048xi32, #blocked1> loc(#loc4)
    %6 = arith.muli %0, %c3072_i32 : i32 loc(#loc5)
    %7 = tt.splat %6 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc135)
    %8 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc136)
    %10:3 = scf.for %arg15 = %c0_i32 to %c3072_i32 step %c2048_i32 iter_args(%arg16 = %cst, %arg17 = %cst, %arg18 = %cst) -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>)  : i32 {
      %72 = tt.splat %arg15 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc10)
      %73 = arith.addi %72, %4 : tensor<1x2048xi32, #blocked> loc(#loc10)
      %74 = arith.cmpi slt, %73, %cst_13 : tensor<1x2048xi32, #blocked> loc(#loc11)
      %75 = arith.addi %73, %7 : tensor<1x2048xi32, #blocked> loc(#loc6)
      %76 = tt.addptr %8, %75 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc7)
      %77 = arith.andi %9, %74 : tensor<1x2048xi1, #blocked> loc(#loc8)
      %78 = tt.load %76, %77, %cst_12 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc12)
      %79 = arith.extf %78 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc13)
      %80 = arith.cmpi eq, %arg15, %c0_i32 : i32 loc(#loc14)
      %81:3 = scf.if %80 -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>) {
        scf.yield %cst, %79, %cst_4 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc138)
      } else {
        %85 = arith.subf %79, %arg16 : tensor<1x2048xf32, #blocked> loc(#loc139)
        %86 = arith.addf %arg18, %cst_4 : tensor<1x2048xf32, #blocked> loc(#loc140)
        %87 = arith.divf %85, %86 : tensor<1x2048xf32, #blocked> loc(#loc141)
        %88 = arith.addf %arg16, %87 : tensor<1x2048xf32, #blocked> loc(#loc142)
        %89 = arith.subf %79, %88 : tensor<1x2048xf32, #blocked> loc(#loc143)
        %90 = arith.mulf %85, %89 : tensor<1x2048xf32, #blocked> loc(#loc144)
        %91 = arith.addf %arg17, %90 : tensor<1x2048xf32, #blocked> loc(#loc145)
        scf.yield %91, %88, %86 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc145)
      } loc(#loc137)
      %82 = arith.select %77, %81#1, %arg16 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc25)
      %83 = arith.select %77, %81#0, %arg17 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc26)
      %84 = arith.select %77, %81#2, %arg18 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc27)
      scf.yield %82, %83, %84 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc28)
    } loc(#loc9)
    %11:3 = "tt.reduce"(%10#0, %10#1, %10#2) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc30)), %arg16: f32 loc(callsite(#loc1 at #loc30)), %arg17: f32 loc(callsite(#loc1 at #loc30)), %arg18: f32 loc(callsite(#loc1 at #loc30)), %arg19: f32 loc(callsite(#loc1 at #loc30)), %arg20: f32 loc(callsite(#loc1 at #loc30))):
      %72 = arith.subf %arg18, %arg15 : f32 loc(#loc206)
      %73 = arith.addf %arg17, %arg20 : f32 loc(#loc207)
      %74 = arith.cmpf oeq, %73, %cst_11 : f32 loc(#loc208)
      %75 = arith.divf %arg20, %73 : f32 loc(#loc209)
      %76 = arith.select %74, %cst_11, %75 : f32 loc(#loc210)
      %77 = arith.mulf %72, %76 : f32 loc(#loc211)
      %78 = arith.addf %arg15, %77 : f32 loc(#loc212)
      %79 = arith.addf %arg16, %arg19 : f32 loc(#loc213)
      %80 = arith.mulf %72, %72 : f32 loc(#loc214)
      %81 = arith.mulf %80, %arg17 : f32 loc(#loc215)
      %82 = arith.mulf %81, %76 : f32 loc(#loc216)
      %83 = arith.addf %79, %82 : f32 loc(#loc217)
      tt.reduce.return %78, %83, %73 : f32, f32, f32 loc(#loc146)
    }) : (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>) -> (tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>>) loc(#loc146)
    %12 = tt.expand_dims %11#0 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc43)
    %13 = tt.expand_dims %11#1 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc44)
    %14 = tt.splat %6 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc160)
    %15 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked1> loc(#loc161)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc48)
    %17 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc49)
    %18 = tt.broadcast %12 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc50)
    %19 = arith.divf %13, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc51)
    %20 = arith.addf %19, %cst_3 : tensor<1x1xf32, #blocked> loc(#loc52)
    %21 = tt.extern_elementwise %20 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc53)
    %22 = tt.broadcast %21 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc54)
    %23 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked1> loc(#loc55)
    %24:2 = scf.for %arg15 = %c0_i32 to %c3072_i32 step %c2048_i32 iter_args(%arg16 = %cst_0, %arg17 = %cst_1) -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>)  : i32 {
      %72 = tt.splat %arg15 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc57)
      %73 = tt.splat %arg15 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc57)
      %74 = arith.addi %72, %4 : tensor<1x2048xi32, #blocked> loc(#loc57)
      %75 = arith.addi %73, %5 : tensor<1x2048xi32, #blocked1> loc(#loc57)
      %76 = arith.cmpi slt, %74, %cst_13 : tensor<1x2048xi32, #blocked> loc(#loc58)
      %77 = arith.cmpi slt, %75, %cst_14 : tensor<1x2048xi32, #blocked1> loc(#loc58)
      %78 = arith.addi %74, %7 : tensor<1x2048xi32, #blocked> loc(#loc45)
      %79 = arith.addi %75, %14 : tensor<1x2048xi32, #blocked1> loc(#loc45)
      %80 = tt.addptr %8, %78 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc59)
      %81 = arith.andi %9, %76 : tensor<1x2048xi1, #blocked> loc(#loc47)
      %82 = arith.andi %15, %77 : tensor<1x2048xi1, #blocked1> loc(#loc47)
      %83 = tt.load %80, %81, %cst_12 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc60)
      %84 = arith.extf %83 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc61)
      %85 = arith.addi %74, %cst_13 : tensor<1x2048xi32, #blocked> loc(#loc62)
      %86 = tt.addptr %16, %85 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc48)
      %87 = tt.load %86, %76, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc63)
      %88 = tt.addptr %17, %85 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc49)
      %89 = tt.load %88, %76, %cst_12 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc64)
      %90 = arith.extf %89 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc65)
      %91 = tt.addptr %16, %74 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc66)
      %92 = tt.load %91, %76, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc67)
      %93 = tt.addptr %17, %74 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc68)
      %94 = tt.load %93, %76, %cst_12 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc69)
      %95 = arith.extf %94 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc70)
      %96 = arith.subf %84, %18 : tensor<1x2048xf32, #blocked> loc(#loc50)
      %97 = arith.mulf %96, %22 : tensor<1x2048xf32, #blocked> loc(#loc54)
      %98 = arith.addf %87, %90 : tensor<1x2048xf32, #blocked> loc(#loc71)
      %99 = arith.addf %98, %cst_4 : tensor<1x2048xf32, #blocked> loc(#loc72)
      %100 = arith.mulf %97, %99 : tensor<1x2048xf32, #blocked> loc(#loc73)
      %101 = arith.addf %92, %95 : tensor<1x2048xf32, #blocked> loc(#loc74)
      %102 = arith.addf %100, %101 : tensor<1x2048xf32, #blocked> loc(#loc75)
      %103 = arith.cmpf olt, %arg16, %102 : tensor<1x2048xf32, #blocked> loc(#loc162)
      %104 = arith.cmpf une, %arg16, %arg16 : tensor<1x2048xf32, #blocked> loc(#loc163)
      %105 = arith.ori %103, %104 : tensor<1x2048xi1, #blocked> loc(#loc164)
      %106 = arith.select %105, %arg16, %102 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc165)
      %107 = arith.select %81, %106, %arg16 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc81)
      %108 = arith.cmpf ogt, %arg17, %102 : tensor<1x2048xf32, #blocked> loc(#loc166)
      %109 = arith.cmpf une, %arg17, %arg17 : tensor<1x2048xf32, #blocked> loc(#loc167)
      %110 = arith.ori %108, %109 : tensor<1x2048xi1, #blocked> loc(#loc168)
      %111 = arith.select %110, %arg17, %102 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc169)
      %112 = arith.select %81, %111, %arg17 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc87)
      %113 = tt.addptr %23, %79 : tensor<1x2048x!tt.ptr<bf16>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc55)
      %114 = arith.truncf %102 : tensor<1x2048xf32, #blocked> to tensor<1x2048xbf16, #blocked> loc(#loc88)
      %115 = ttg.convert_layout %114 : tensor<1x2048xbf16, #blocked> -> tensor<1x2048xbf16, #blocked1> loc(#loc88)
      tt.store %113, %115, %82 : tensor<1x2048x!tt.ptr<bf16>, #blocked1> loc(#loc88)
      scf.yield %107, %112 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc89)
    } loc(#loc56)
    %25 = "tt.reduce"(%24#0) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc91)), %arg16: f32 loc(callsite(#loc1 at #loc91))):
      %72 = arith.cmpf olt, %arg15, %arg16 : f32 loc(#loc218)
      %73 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc219)
      %74 = arith.ori %72, %73 : i1 loc(#loc220)
      %75 = arith.select %74, %arg15, %arg16 : f32 loc(#loc221)
      tt.reduce.return %75 : f32 loc(#loc170)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc170)
    %26 = ttg.convert_layout %25 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc92)
    %27 = tt.expand_dims %26 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc93)
    %28 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc93)
    %29 = "tt.reduce"(%24#1) <{axis = 1 : i32}> ({
    ^bb0(%arg15: f32 loc(callsite(#loc1 at #loc95)), %arg16: f32 loc(callsite(#loc1 at #loc95))):
      %72 = arith.cmpf ogt, %arg15, %arg16 : f32 loc(#loc222)
      %73 = arith.cmpf une, %arg15, %arg15 : f32 loc(#loc223)
      %74 = arith.ori %72, %73 : i1 loc(#loc224)
      %75 = arith.select %74, %arg15, %arg16 : f32 loc(#loc225)
      tt.reduce.return %75 : f32 loc(#loc176)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc176)
    %30 = ttg.convert_layout %29 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc96)
    %31 = tt.expand_dims %30 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc97)
    %32 = tt.expand_dims %29 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc97)
    %33 = tt.addptr %arg4, %0 : !tt.ptr<bf16>, i32 loc(#loc98)
    %34 = arith.truncf %27 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc92)
    %35 = tt.splat %33 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc92)
    %36 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked2> loc(#loc92)
    tt.store %35, %34, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc92)
    %37 = tt.addptr %arg5, %0 : !tt.ptr<bf16>, i32 loc(#loc99)
    %38 = arith.truncf %31 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc96)
    %39 = tt.splat %37 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc96)
    tt.store %39, %38, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc96)
    %40 = tt.addptr %arg6, %0 : !tt.ptr<bf16>, i32 loc(#loc100)
    %41 = tt.splat %40 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc101)
    tt.store %41, %34, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc101)
    %42 = tt.addptr %arg7, %0 : !tt.ptr<bf16>, i32 loc(#loc102)
    %43 = tt.splat %42 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc103)
    tt.store %43, %38, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc103)
    %44 = tt.addptr %arg8, %0 : !tt.ptr<bf16>, i32 loc(#loc104)
    %45 = tt.splat %44 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc105)
    tt.store %45, %34, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc105)
    %46 = tt.addptr %arg9, %0 : !tt.ptr<bf16>, i32 loc(#loc106)
    %47 = tt.splat %46 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc107)
    tt.store %47, %38, %36 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc107)
    %48 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc108)
    %49 = arith.cmpf olt, %28, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc182)
    %50 = arith.cmpf une, %28, %28 : tensor<1x1xf32, #blocked> loc(#loc183)
    %51 = arith.ori %49, %50 : tensor<1x1xi1, #blocked> loc(#loc184)
    %52 = arith.select %51, %28, %cst_5 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc185)
    %53 = arith.subf %cst_5, %52 : tensor<1x1xf32, #blocked> loc(#loc110)
    %54 = arith.cmpf ogt, %32, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc186)
    %55 = arith.cmpf une, %32, %32 : tensor<1x1xf32, #blocked> loc(#loc187)
    %56 = arith.ori %54, %55 : tensor<1x1xi1, #blocked> loc(#loc188)
    %57 = arith.select %56, %32, %cst_5 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc189)
    %58 = arith.cmpf ogt, %53, %57 : tensor<1x1xf32, #blocked> loc(#loc190)
    %59 = arith.cmpf une, %53, %53 : tensor<1x1xf32, #blocked> loc(#loc191)
    %60 = arith.ori %58, %59 : tensor<1x1xi1, #blocked> loc(#loc192)
    %61 = arith.select %60, %53, %57 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc193)
    %62 = arith.mulf %61, %cst_6 : tensor<1x1xf32, #blocked> loc(#loc113)
    %63 = arith.cmpf ogt, %62, %cst_8 : tensor<1x1xf32, #blocked> loc(#loc194)
    %64 = arith.cmpf une, %62, %62 : tensor<1x1xf32, #blocked> loc(#loc195)
    %65 = arith.ori %63, %64 : tensor<1x1xi1, #blocked> loc(#loc196)
    %66 = arith.select %65, %62, %cst_8 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc197)
    %67 = arith.divf %cst_7, %66 : tensor<1x1xf32, #blocked> loc(#loc115)
    %68 = tt.broadcast %67 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc116)
    %69 = tt.splat %arg10 : !tt.ptr<i8> -> tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc117)
    %70 = tt.splat %arg11 : !tt.ptr<i8> -> tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc118)
    %71 = tt.splat %arg12 : !tt.ptr<i8> -> tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc119)
    scf.for %arg15 = %c0_i32 to %c3072_i32 step %c2048_i32  : i32 {
      %72 = tt.splat %arg15 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc121)
      %73 = arith.addi %72, %4 : tensor<1x2048xi32, #blocked> loc(#loc121)
      %74 = arith.cmpi slt, %73, %cst_13 : tensor<1x2048xi32, #blocked> loc(#loc122)
      %75 = arith.addi %73, %7 : tensor<1x2048xi32, #blocked> loc(#loc123)
      %76 = tt.addptr %48, %75 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc108)
      %77 = arith.andi %9, %74 : tensor<1x2048xi1, #blocked> loc(#loc124)
      %78 = tt.load %76, %77, %cst_12 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc125)
      %79 = arith.extf %78 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc126)
      %80 = arith.mulf %79, %68 : tensor<1x2048xf32, #blocked> loc(#loc116)
      %81 = tt.extern_elementwise %80 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x2048xf32, #blocked>) -> tensor<1x2048xf32, #blocked> loc(#loc127)
      %82 = arith.cmpf ogt, %81, %cst_9 : tensor<1x2048xf32, #blocked> loc(#loc198)
      %83 = arith.cmpf une, %81, %81 : tensor<1x2048xf32, #blocked> loc(#loc199)
      %84 = arith.ori %82, %83 : tensor<1x2048xi1, #blocked> loc(#loc200)
      %85 = arith.select %84, %81, %cst_9 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc201)
      %86 = arith.cmpf olt, %85, %cst_10 : tensor<1x2048xf32, #blocked> loc(#loc202)
      %87 = arith.cmpf une, %85, %85 : tensor<1x2048xf32, #blocked> loc(#loc203)
      %88 = arith.ori %86, %87 : tensor<1x2048xi1, #blocked> loc(#loc204)
      %89 = arith.select %88, %85, %cst_10 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc205)
      %90 = arith.fptosi %89 : tensor<1x2048xf32, #blocked> to tensor<1x2048xi8, #blocked> loc(#loc130)
      %91 = tt.addptr %69, %75 : tensor<1x2048x!tt.ptr<i8>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc117)
      tt.store %91, %90, %77 : tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc131)
      %92 = tt.addptr %70, %75 : tensor<1x2048x!tt.ptr<i8>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc118)
      tt.store %92, %90, %77 : tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc132)
      %93 = tt.addptr %71, %75 : tensor<1x2048x!tt.ptr<i8>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc119)
      tt.store %93, %90, %77 : tensor<1x2048x!tt.ptr<i8>, #blocked> loc(#loc133)
    } loc(#loc120)
    tt.return loc(#loc134)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":26:37)
#loc5 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:46)
#loc6 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:41)
#loc7 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:34)
#loc8 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:59)
#loc9 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":32:40)
#loc10 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":33:31)
#loc11 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":34:29)
#loc12 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:51)
#loc13 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":38:112)
#loc14 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":42:62)
#loc15 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":203:7)
#loc16 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":42:51)
#loc17 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":206:31)
#loc18 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":208:24)
#loc19 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":209:30)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:34)
#loc21 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:26)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:39)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:31)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:22)
#loc25 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":44:62)
#loc26 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":45:58)
#loc27 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":46:66)
#loc28 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":46:8)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc32 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc33 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc34 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc40 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc43 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":48:16)
#loc44 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":49:16)
#loc45 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:41)
#loc46 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:46)
#loc47 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:59)
#loc48 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:35)
#loc49 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:35)
#loc50 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":65:24)
#loc51 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":67:24)
#loc52 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":69:24)
#loc53 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":70:32)
#loc54 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":71:24)
#loc55 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":86:29)
#loc56 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":53:40)
#loc57 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":54:31)
#loc58 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":55:29)
#loc59 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:34)
#loc60 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:51)
#loc61 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":59:113)
#loc62 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:42)
#loc63 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":60:49)
#loc64 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:49)
#loc65 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":61:102)
#loc66 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":62:35)
#loc67 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":62:42)
#loc68 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:35)
#loc69 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:42)
#loc70 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":63:95)
#loc71 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":74:24)
#loc72 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":76:24)
#loc73 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":77:24)
#loc74 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":79:24)
#loc75 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":80:24)
#loc76 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc77 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":82:47)
#loc78 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc79 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc80 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc81 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":83:50)
#loc82 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc83 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":84:47)
#loc84 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc85 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc86 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc87 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":85:50)
#loc88 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":86:53)
#loc89 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":86:8)
#loc90 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc92 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":89:37)
#loc93 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":87:43)
#loc94 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc96 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":90:37)
#loc97 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":88:43)
#loc98 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":89:25)
#loc99 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":90:25)
#loc100 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":91:25)
#loc101 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":91:37)
#loc102 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":92:25)
#loc103 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":92:37)
#loc104 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":93:25)
#loc105 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":93:37)
#loc106 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":94:25)
#loc107 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":94:37)
#loc108 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:36)
#loc109 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":103:46)
#loc110 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":104:17)
#loc111 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":105:46)
#loc112 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":106:46)
#loc113 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":108:24)
#loc114 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":111:46)
#loc115 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":114:25)
#loc116 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":117:24)
#loc117 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":126:29)
#loc118 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":127:30)
#loc119 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":128:30)
#loc120 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":95:40)
#loc121 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":96:31)
#loc122 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":97:29)
#loc123 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:43)
#loc124 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:61)
#loc125 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:53)
#loc126 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":101:115)
#loc127 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":118:36)
#loc128 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":121:46)
#loc129 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":123:46)
#loc130 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":125:25)
#loc131 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":126:53)
#loc132 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":127:54)
#loc133 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":128:54)
#loc134 = loc("/tmp/torchinductor_root/i2/ci2cxutkcxztiurxzrcvzyj7vz7b2tlgrw5gszfwmy4fe2evxbbp.py":95:4)
#loc135 = loc(fused[#loc6, #loc5])
#loc136 = loc(fused[#loc8, #loc3])
#loc137 = loc(callsite(#loc15 at #loc16))
#loc138 = loc(callsite(#loc17 at #loc16))
#loc139 = loc(callsite(#loc18 at #loc16))
#loc140 = loc(callsite(#loc19 at #loc16))
#loc141 = loc(callsite(#loc20 at #loc16))
#loc142 = loc(callsite(#loc21 at #loc16))
#loc143 = loc(callsite(#loc22 at #loc16))
#loc144 = loc(callsite(#loc23 at #loc16))
#loc145 = loc(callsite(#loc24 at #loc16))
#loc146 = loc(callsite(#loc29 at #loc30))
#loc148 = loc(callsite(#loc31 at #loc29))
#loc149 = loc(callsite(#loc32 at #loc29))
#loc150 = loc(callsite(#loc33 at #loc29))
#loc151 = loc(callsite(#loc34 at #loc29))
#loc152 = loc(callsite(#loc35 at #loc29))
#loc153 = loc(callsite(#loc36 at #loc29))
#loc154 = loc(callsite(#loc37 at #loc29))
#loc155 = loc(callsite(#loc38 at #loc29))
#loc156 = loc(callsite(#loc39 at #loc29))
#loc157 = loc(callsite(#loc40 at #loc29))
#loc158 = loc(callsite(#loc41 at #loc29))
#loc159 = loc(callsite(#loc42 at #loc29))
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc3])
#loc162 = loc(callsite(#loc76 at #loc77))
#loc163 = loc(callsite(#loc78 at #loc77))
#loc164 = loc(callsite(#loc79 at #loc77))
#loc165 = loc(callsite(#loc80 at #loc77))
#loc166 = loc(callsite(#loc82 at #loc83))
#loc167 = loc(callsite(#loc84 at #loc83))
#loc168 = loc(callsite(#loc85 at #loc83))
#loc169 = loc(callsite(#loc86 at #loc83))
#loc170 = loc(callsite(#loc90 at #loc91))
#loc172 = loc(callsite(#loc76 at #loc90))
#loc173 = loc(callsite(#loc78 at #loc90))
#loc174 = loc(callsite(#loc79 at #loc90))
#loc175 = loc(callsite(#loc80 at #loc90))
#loc176 = loc(callsite(#loc94 at #loc95))
#loc178 = loc(callsite(#loc82 at #loc94))
#loc179 = loc(callsite(#loc84 at #loc94))
#loc180 = loc(callsite(#loc85 at #loc94))
#loc181 = loc(callsite(#loc86 at #loc94))
#loc182 = loc(callsite(#loc76 at #loc109))
#loc183 = loc(callsite(#loc78 at #loc109))
#loc184 = loc(callsite(#loc79 at #loc109))
#loc185 = loc(callsite(#loc80 at #loc109))
#loc186 = loc(callsite(#loc82 at #loc111))
#loc187 = loc(callsite(#loc84 at #loc111))
#loc188 = loc(callsite(#loc85 at #loc111))
#loc189 = loc(callsite(#loc86 at #loc111))
#loc190 = loc(callsite(#loc82 at #loc112))
#loc191 = loc(callsite(#loc84 at #loc112))
#loc192 = loc(callsite(#loc85 at #loc112))
#loc193 = loc(callsite(#loc86 at #loc112))
#loc194 = loc(callsite(#loc82 at #loc114))
#loc195 = loc(callsite(#loc84 at #loc114))
#loc196 = loc(callsite(#loc85 at #loc114))
#loc197 = loc(callsite(#loc86 at #loc114))
#loc198 = loc(callsite(#loc82 at #loc128))
#loc199 = loc(callsite(#loc84 at #loc128))
#loc200 = loc(callsite(#loc85 at #loc128))
#loc201 = loc(callsite(#loc86 at #loc128))
#loc202 = loc(callsite(#loc76 at #loc129))
#loc203 = loc(callsite(#loc78 at #loc129))
#loc204 = loc(callsite(#loc79 at #loc129))
#loc205 = loc(callsite(#loc80 at #loc129))
#loc206 = loc(callsite(#loc148 at #loc30))
#loc207 = loc(callsite(#loc149 at #loc30))
#loc208 = loc(callsite(#loc150 at #loc30))
#loc209 = loc(callsite(#loc151 at #loc30))
#loc210 = loc(callsite(#loc152 at #loc30))
#loc211 = loc(callsite(#loc153 at #loc30))
#loc212 = loc(callsite(#loc154 at #loc30))
#loc213 = loc(callsite(#loc155 at #loc30))
#loc214 = loc(callsite(#loc156 at #loc30))
#loc215 = loc(callsite(#loc157 at #loc30))
#loc216 = loc(callsite(#loc158 at #loc30))
#loc217 = loc(callsite(#loc159 at #loc30))
#loc218 = loc(callsite(#loc172 at #loc91))
#loc219 = loc(callsite(#loc173 at #loc91))
#loc220 = loc(callsite(#loc174 at #loc91))
#loc221 = loc(callsite(#loc175 at #loc91))
#loc222 = loc(callsite(#loc178 at #loc95))
#loc223 = loc(callsite(#loc179 at #loc95))
#loc224 = loc(callsite(#loc180 at #loc95))
#loc225 = loc(callsite(#loc181 at #loc95))
