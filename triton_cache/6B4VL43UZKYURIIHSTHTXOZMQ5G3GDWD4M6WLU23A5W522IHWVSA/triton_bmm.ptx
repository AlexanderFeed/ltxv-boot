//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<347>;
	.reg .f32 	%f<129>;
	.reg .b64 	%rd<16>;
	.loc	1 17 0                          // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:17:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_bmm_param_0];
	ld.param.u64 	%rd8, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:41:24
	mov.u32 	%r189, %ctaid.x;
	.loc	1 47 22                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:47:22
	shr.s32 	%r190, %r189, 31;
	shr.u32 	%r191, %r190, 26;
	add.s32 	%r192, %r189, %r191;
	shr.s32 	%r193, %r192, 6;
	ld.param.u64 	%rd9, [triton_bmm_param_2];
	.loc	1 48 41                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:48:41
	shl.b32 	%r194, %r193, 3;
	.loc	1 48 30                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:48:30
	sub.s32 	%r195, 8, %r194;
	.loc	1 48 50                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:48:50
	min.s32 	%r196, %r195, 8;
	.loc	1 49 40                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:49:40
	rem.s32 	%r197, %r189, %r196;
	.loc	1 49 34                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:49:34
	add.s32 	%r198, %r197, %r194;
	.loc	1 50 19                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:50:19
	and.b32  	%r199, %r192, -64;
	sub.s32 	%r200, %r189, %r199;
	.loc	1 50 30                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:50:30
	div.s32 	%r201, %r200, %r196;
	.loc	1 52 17                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:52:17
	shl.b32 	%r202, %r198, 6;
	.loc	1 52 40                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:52:40
	mov.u32 	%r203, %tid.x;
	and.b32  	%r204, %r203, 8;
	and.b32  	%r205, %r203, 16;
	and.b32  	%r206, %r203, 32;
	bfe.u32 	%r207, %r203, 3, 4;
	and.b32  	%r208, %r203, 128;
	shr.u32 	%r209, %r208, 3;
	or.b32  	%r210, %r207, %r209;
	or.b32  	%r211, %r210, 32;
	shl.b32 	%r212, %r203, 3;
	and.b32  	%r213, %r212, 8;
	and.b32  	%r214, %r212, 16;
	and.b32  	%r215, %r212, 24;
	and.b32  	%r216, %r212, 32;
	and.b32  	%r217, %r212, 56;
	.loc	1 52 27                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:52:27
	or.b32  	%r218, %r202, %r210;
	or.b32  	%r219, %r202, %r211;
	.loc	1 53 17                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:53:17
	shl.b32 	%r220, %r201, 6;
	.loc	1 53 27                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:53:27
	or.b32  	%r221, %r220, %r210;
	or.b32  	%r222, %r220, %r211;
	or.b32  	%r223, %r220, %r217;
	.loc	1 57 19                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:57:19
	bfe.s32 	%r224, %r198, 25, 1;
	shr.u32 	%r225, %r224, 23;
	add.s32 	%r226, %r218, %r225;
	and.b32  	%r227, %r226, 1048064;
	sub.s32 	%r228, %r218, %r227;
	add.s32 	%r229, %r219, %r225;
	and.b32  	%r230, %r229, 1048064;
	sub.s32 	%r231, %r219, %r230;
	.loc	1 61 19                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:61:19
	bfe.s32 	%r232, %r201, 25, 1;
	shr.u32 	%r233, %r232, 23;
	add.s32 	%r234, %r221, %r233;
	and.b32  	%r235, %r234, 1048064;
	sub.s32 	%r236, %r221, %r235;
	cvt.u16.u32 	%rs17, %r222;
	shr.s16 	%rs18, %rs17, 15;
	shr.u16 	%rs19, %rs18, 7;
	add.s16 	%rs20, %rs17, %rs19;
	and.b16  	%rs21, %rs20, -512;
	sub.s16 	%rs22, %rs17, %rs21;
	.loc	1 65 26                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:65:26
	mov.u32 	%r237, %ctaid.y;
	.loc	1 66 28                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:66:28
	shl.b32 	%r238, %r228, 12;
	shl.b32 	%r239, %r231, 12;
	.loc	1 66 72                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:66:72
	shl.b32 	%r240, %r237, 6;
	.loc	1 66 40                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:66:40
	or.b32  	%r241, %r217, %r240;
	.loc	1 66 66                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:66:66
	add.s32 	%r242, %r241, %r238;
	add.s32 	%r243, %r241, %r239;
	.loc	1 66 13                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:66:13
	mul.wide.s32 	%rd10, %r242, 2;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r243, 2;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 67 54                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:67:54
	shl.b32 	%r244, %r236, 12;
	mul.wide.s16 	%r245, %rs22, 4096;
	.loc	1 67 66                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:67:66
	add.s32 	%r246, %r241, %r244;
	add.s32 	%r247, %r241, %r245;
	.loc	1 67 13                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:67:13
	mul.wide.s32 	%rd12, %r246, 2;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r247, 2;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 72 24                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:72:24
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32  	%r248, %r203, 24;
	xor.b32  	%r249, %r217, %r248;
	xor.b32  	%r250, %r249, %r206;
	shl.b32 	%r251, %r210, 7;
	shl.b32 	%r252, %r250, 1;
	or.b32  	%r253, %r251, %r252;
	mov.u32 	%r254, global_smem;
	add.s32 	%r255, %r254, %r253;
	st.shared.v4.b32 	[%r255], {%r1, %r2, %r3, %r4};
	st.shared.v4.b32 	[%r255+4096], {%r5, %r6, %r7, %r8};
	.loc	1 73 24                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:73:24
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];
	// end inline asm
	add.s32 	%r256, %r254, 8192;
	add.s32 	%r257, %r256, %r253;
	st.shared.v4.b32 	[%r257], {%r9, %r10, %r11, %r12};
	st.shared.v4.b32 	[%r257+4096], {%r13, %r14, %r15, %r16};
	.loc	1 72 24                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:72:24
	bar.sync 	0;
	and.b32  	%r258, %r203, 7;
	and.b32  	%r259, %r203, 15;
	shr.u32 	%r260, %r205, 1;
	xor.b32  	%r261, %r217, %r260;
	or.b32  	%r262, %r209, %r259;
	shl.b32 	%r263, %r262, 6;
	or.b32  	%r264, %r263, %r261;
	shl.b32 	%r265, %r264, 1;
	add.s32 	%r21, %r254, %r265;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r77, %r78, %r79, %r80}, [%r21];
	// end inline asm
	or.b32  	%r266, %r213, 16;
	xor.b32  	%r267, %r266, %r214;
	or.b32  	%r268, %r267, %r216;
	xor.b32  	%r269, %r268, %r260;
	or.b32  	%r270, %r269, %r263;
	shl.b32 	%r271, %r270, 1;
	add.s32 	%r26, %r254, %r271;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r101, %r102, %r103, %r104}, [%r26];
	// end inline asm
	or.b32  	%r272, %r215, 32;
	xor.b32  	%r273, %r272, %r216;
	xor.b32  	%r274, %r273, %r260;
	or.b32  	%r275, %r274, %r263;
	shl.b32 	%r276, %r275, 1;
	add.s32 	%r31, %r254, %r276;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r125, %r126, %r127, %r128}, [%r31];
	// end inline asm
	or.b32  	%r277, %r213, 48;
	and.b32  	%r278, %r212, 48;
	or.b32  	%r279, %r260, %r278;
	xor.b32  	%r280, %r279, %r277;
	or.b32  	%r281, %r280, %r263;
	shl.b32 	%r282, %r281, 1;
	add.s32 	%r36, %r254, %r282;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r149, %r150, %r151, %r152}, [%r36];
	// end inline asm
	or.b32  	%r283, %r258, 32;
	or.b32  	%r284, %r283, %r204;
	or.b32  	%r285, %r284, %r209;
	shl.b32 	%r286, %r285, 6;
	or.b32  	%r287, %r286, %r261;
	shl.b32 	%r288, %r287, 1;
	add.s32 	%r41, %r254, %r288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r89, %r90, %r91, %r92}, [%r41];
	// end inline asm
	or.b32  	%r289, %r269, %r286;
	shl.b32 	%r290, %r289, 1;
	add.s32 	%r46, %r254, %r290;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r113, %r114, %r115, %r116}, [%r46];
	// end inline asm
	or.b32  	%r291, %r274, %r286;
	shl.b32 	%r292, %r291, 1;
	add.s32 	%r51, %r254, %r292;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r137, %r138, %r139, %r140}, [%r51];
	// end inline asm
	or.b32  	%r293, %r280, %r286;
	shl.b32 	%r294, %r293, 1;
	add.s32 	%r56, %r254, %r294;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r161, %r162, %r163, %r164}, [%r56];
	// end inline asm
	.loc	1 73 24                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:73:24
	shr.u32 	%r295, %r206, 2;
	shr.u32 	%r296, %r203, 2;
	and.b32  	%r297, %r296, 16;
	or.b32  	%r298, %r297, %r295;
	or.b32  	%r299, %r298, %r258;
	shl.b32 	%r300, %r299, 7;
	shl.b32 	%r301, %r249, 1;
	or.b32  	%r302, %r300, %r301;
	add.s32 	%r61, %r256, %r302;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r81, %r82, %r105, %r106}, [%r61];
	// end inline asm
	xor.b32  	%r303, %r273, %r248;
	shl.b32 	%r304, %r303, 1;
	add.s32 	%r305, %r256, %r304;
	add.s32 	%r66, %r305, %r300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r129, %r130, %r153, %r154}, [%r66];
	// end inline asm
	or.b32  	%r306, %r298, %r283;
	shl.b32 	%r307, %r306, 7;
	or.b32  	%r308, %r307, %r301;
	add.s32 	%r71, %r256, %r308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r87, %r88, %r111, %r112}, [%r71];
	// end inline asm
	add.s32 	%r76, %r305, %r307;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r135, %r136, %r159, %r160}, [%r76];
	// end inline asm
	mov.f32 	%f57, 0f00000000;
	.loc	1 77 25                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:77:25
	mov.f32 	%f33, %f57;
	mov.f32 	%f34, %f57;
	mov.f32 	%f35, %f57;
	mov.f32 	%f36, %f57;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f33, %f34, %f35, %f36 }, { %r77, %r78, %r79, %r80 }, { %r81, %r82 }, { %f33, %f34, %f35, %f36 };
	// end inline asm
	mov.f32 	%f41, %f57;
	mov.f32 	%f42, %f57;
	mov.f32 	%f43, %f57;
	mov.f32 	%f44, %f57;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f41, %f42, %f43, %f44 }, { %r77, %r78, %r79, %r80 }, { %r87, %r88 }, { %f41, %f42, %f43, %f44 };
	// end inline asm
	mov.f32 	%f49, %f57;
	mov.f32 	%f50, %f57;
	mov.f32 	%f51, %f57;
	mov.f32 	%f52, %f57;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f49, %f50, %f51, %f52 }, { %r89, %r90, %r91, %r92 }, { %r81, %r82 }, { %f49, %f50, %f51, %f52 };
	// end inline asm
	mov.f32 	%f58, %f57;
	mov.f32 	%f59, %f57;
	mov.f32 	%f60, %f57;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f57, %f58, %f59, %f60 }, { %r89, %r90, %r91, %r92 }, { %r87, %r88 }, { %f57, %f58, %f59, %f60 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f33, %f34, %f35, %f36 }, { %r101, %r102, %r103, %r104 }, { %r105, %r106 }, { %f33, %f34, %f35, %f36 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f41, %f42, %f43, %f44 }, { %r101, %r102, %r103, %r104 }, { %r111, %r112 }, { %f41, %f42, %f43, %f44 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f49, %f50, %f51, %f52 }, { %r113, %r114, %r115, %r116 }, { %r105, %r106 }, { %f49, %f50, %f51, %f52 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f57, %f58, %f59, %f60 }, { %r113, %r114, %r115, %r116 }, { %r111, %r112 }, { %f57, %f58, %f59, %f60 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f33, %f34, %f35, %f36 }, { %r125, %r126, %r127, %r128 }, { %r129, %r130 }, { %f33, %f34, %f35, %f36 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f41, %f42, %f43, %f44 }, { %r125, %r126, %r127, %r128 }, { %r135, %r136 }, { %f41, %f42, %f43, %f44 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f49, %f50, %f51, %f52 }, { %r137, %r138, %r139, %r140 }, { %r129, %r130 }, { %f49, %f50, %f51, %f52 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f57, %f58, %f59, %f60 }, { %r137, %r138, %r139, %r140 }, { %r135, %r136 }, { %f57, %f58, %f59, %f60 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f33, %f34, %f35, %f36 }, { %r149, %r150, %r151, %r152 }, { %r153, %r154 }, { %f33, %f34, %f35, %f36 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f41, %f42, %f43, %f44 }, { %r149, %r150, %r151, %r152 }, { %r159, %r160 }, { %f41, %f42, %f43, %f44 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f49, %f50, %f51, %f52 }, { %r161, %r162, %r163, %r164 }, { %r153, %r154 }, { %f49, %f50, %f51, %f52 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f57, %f58, %f59, %f60 }, { %r161, %r162, %r163, %r164 }, { %r159, %r160 }, { %f57, %f58, %f59, %f60 };
	// end inline asm
	.loc	1 87 20                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:87:20
	setp.lt.s32 	%p11, %r218, 512;
	setp.lt.s32 	%p12, %r219, 512;
	.loc	1 87 34                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:87:34
	setp.lt.s32 	%p13, %r223, 512;
	.loc	1 87 26                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:87:26
	and.pred  	%p9, %p11, %p13;
	and.pred  	%p10, %p12, %p13;
	.loc	1 90 25                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:90:25
	shl.b32 	%r309, %r218, 9;
	shl.b32 	%r310, %r219, 9;
	.loc	1 90 40                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:90:40
	shl.b32 	%r311, %r237, 18;
	.loc	1 90 21                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:90:21
	add.s32 	%r312, %r223, %r311;
	.loc	1 90 33                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:90:33
	add.s32 	%r313, %r312, %r309;
	add.s32 	%r314, %r312, %r310;
	.loc	1 91 25                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:91:25
	mul.wide.s32 	%rd14, %r313, 2;
	add.s64 	%rd5, %rd9, %rd14;
	mul.wide.s32 	%rd15, %r314, 2;
	add.s64 	%rd6, %rd9, %rd15;
	.loc	1 91 67                         // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f33;
	cvt.rn.bf16.f32 	%rs2, %f34;
	cvt.rn.bf16.f32 	%rs3, %f35;
	cvt.rn.bf16.f32 	%rs4, %f36;
	cvt.rn.bf16.f32 	%rs5, %f41;
	cvt.rn.bf16.f32 	%rs6, %f42;
	cvt.rn.bf16.f32 	%rs7, %f43;
	cvt.rn.bf16.f32 	%rs8, %f44;
	cvt.rn.bf16.f32 	%rs9, %f49;
	cvt.rn.bf16.f32 	%rs10, %f50;
	cvt.rn.bf16.f32 	%rs11, %f51;
	cvt.rn.bf16.f32 	%rs12, %f52;
	cvt.rn.bf16.f32 	%rs13, %f57;
	cvt.rn.bf16.f32 	%rs14, %f58;
	cvt.rn.bf16.f32 	%rs15, %f59;
	cvt.rn.bf16.f32 	%rs16, %f60;
	bar.sync 	0;
	shl.b32 	%r315, %r203, 1;
	and.b32  	%r316, %r315, 6;
	shl.b32 	%r317, %r203, 4;
	and.b32  	%r318, %r317, 192;
	or.b32  	%r319, %r318, %r316;
	shl.b32 	%r320, %r205, 4;
	or.b32  	%r321, %r319, %r320;
	or.b32  	%r322, %r321, %r295;
	or.b32  	%r323, %r322, %r297;
	shl.b32 	%r324, %r208, 3;
	or.b32  	%r325, %r323, %r324;
	and.b32  	%r326, %r212, 1016;
	or.b32  	%r327, %r326, %r324;
	shr.u32 	%r328, %r325, 2;
	and.b32  	%r329, %r328, 1073741808;
	add.s32 	%r330, %r254, %r329;
	shl.b32 	%r331, %r325, 1;
	add.s32 	%r173, %r330, %r331;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r173 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r332, %r325, 512;
	shr.u32 	%r333, %r332, 2;
	and.b32  	%r334, %r333, 1073741808;
	add.s32 	%r335, %r254, %r334;
	shl.b32 	%r336, %r332, 1;
	add.s32 	%r174, %r335, %r336;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r174 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r179, %r173, 64;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r179 + 0 ], { %rs5, %rs6 };
	// end inline asm
	or.b32  	%r337, %r325, 544;
	shr.u32 	%r338, %r337, 2;
	and.b32  	%r339, %r338, 1073741808;
	add.s32 	%r340, %r254, %r339;
	shl.b32 	%r341, %r337, 1;
	add.s32 	%r176, %r340, %r341;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r176 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r342, %r327, 2;
	and.b32  	%r343, %r342, 496;
	add.s32 	%r344, %r254, %r343;
	shl.b32 	%r345, %r327, 1;
	add.s32 	%r346, %r344, %r345;
	ld.shared.v4.u32 	{%r181, %r182, %r183, %r184}, [%r346];
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r173 + 0 ], { %rs9, %rs10 };
	// end inline asm
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r174 + 0 ], { %rs11, %rs12 };
	// end inline asm
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r179 + 0 ], { %rs13, %rs14 };
	// end inline asm
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r176 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r185, %r186, %r187, %r188}, [%r346];
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd5 + 0 ], { %r181, %r182, %r183, %r184 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd6 + 0 ], { %r185, %r186, %r187, %r188 };
	// end inline asm
	.loc	1 91 4                          // cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/no/cnopmmzu5rvthcw762477t5sipljwy4j7zthg5v3zfgpize6jpbi.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 111
.b8 112
.b8 109
.b8 109
.b8 122
.b8 117
.b8 53
.b8 114
.b8 118
.b8 116
.b8 104
.b8 99
.b8 119
.b8 55
.b8 54
.b8 50
.b8 52
.b8 55
.b8 55
.b8 116
.b8 53
.b8 115
.b8 105
.b8 112
.b8 108
.b8 106
.b8 119
.b8 121
.b8 52
.b8 106
.b8 55
.b8 122
.b8 116
.b8 104
.b8 103
.b8 53
.b8 118
.b8 51
.b8 122
.b8 102
.b8 103
.b8 112
.b8 105
.b8 122
.b8 101
.b8 54
.b8 106
.b8 112
.b8 98
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 110
.b8 111
.b8 0
	}
	.section	.debug_macinfo	{	}
