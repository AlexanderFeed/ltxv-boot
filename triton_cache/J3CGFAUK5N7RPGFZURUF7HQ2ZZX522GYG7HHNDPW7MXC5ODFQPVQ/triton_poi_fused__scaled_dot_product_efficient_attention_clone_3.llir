; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused__scaled_dot_product_efficient_attention_clone_3(ptr addrspace(1) %0, i32 %1, ptr addrspace(1) readnone captures(none) %2) local_unnamed_addr !dbg !6 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %5 = shl i32 %4, 8, !dbg !10
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %7 = and i32 %6, 127, !dbg !11
  %8 = or disjoint i32 %5, %7, !dbg !12
  %9 = or disjoint i32 %8, 128, !dbg !12
  %10 = icmp slt i32 %8, 5929, !dbg !13
  %11 = icmp slt i32 %9, 5929, !dbg !13
  %12 = sdiv i32 %8, 77, !dbg !14
  %13 = mul i32 %12, 77, !dbg !15
  %.decomposed = sub i32 %8, %13, !dbg !15
  %14 = sdiv i32 %9, 77, !dbg !14
  %15 = mul i32 %14, 77, !dbg !15
  %.decomposed2 = sub i32 %9, %15, !dbg !15
  %.not = icmp sgt i32 %.decomposed, %12, !dbg !16
  %.not1 = icmp sgt i32 %.decomposed2, %14, !dbg !16
  %16 = mul i32 %12, 80, !dbg !17
  %17 = mul i32 %14, 80, !dbg !17
  %18 = add i32 %16, %.decomposed, !dbg !18
  %19 = add i32 %17, %.decomposed2, !dbg !18
  %20 = sext i32 %18 to i64, !dbg !19
  %21 = getelementptr bfloat, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = sext i32 %19 to i64, !dbg !19
  %23 = getelementptr bfloat, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = select i1 %.not, i16 -129, i16 0, !dbg !20
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %24, ptr addrspace(1) %21, i1 %10) #1, !dbg !21
  %25 = select i1 %.not1, i16 -129, i16 0, !dbg !20
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %25, ptr addrspace(1) %23, i1 %11) #1, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckbmj2jjzubcrwed3je3e4763lpbqmbozc33e5tvp45tcxhwtdsr.py", directory: "/tmp/torchinductor_root/kb")
!4 = !{ptr @triton_poi_fused__scaled_dot_product_efficient_attention_clone_3, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused__scaled_dot_product_efficient_attention_clone_3", linkageName: "triton_poi_fused__scaled_dot_product_efficient_attention_clone_3", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 22, column: 21, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 23, column: 19, scope: !6)
!16 = !DILocation(line: 30, column: 18, scope: !6)
!17 = !DILocation(line: 37, column: 33, scope: !6)
!18 = !DILocation(line: 37, column: 30, scope: !6)
!19 = !DILocation(line: 37, column: 25, scope: !6)
!20 = !DILocation(line: 33, column: 32, scope: !6)
!21 = !DILocation(line: 37, column: 45, scope: !6)
!22 = !DILocation(line: 37, column: 4, scope: !6)
