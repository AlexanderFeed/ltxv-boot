//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<372>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<65>;
	.loc	1 17 0                          // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd19, [triton_mm_param_0];
	ld.param.u64 	%rd20, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:40:24
	mov.u32 	%r45, %ctaid.x;
	.loc	1 46 22                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:46:22
	mul.hi.s32 	%r46, %r45, 1717986919;
	shr.u32 	%r47, %r46, 31;
	shr.s32 	%r48, %r46, 9;
	add.s32 	%r49, %r48, %r47;
	.loc	1 47 41                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:47:41
	shl.b32 	%r50, %r49, 3;
	.loc	1 47 30                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:47:30
	sub.s32 	%r51, 8, %r50;
	.loc	1 47 50                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:47:50
	min.s32 	%r52, %r51, 8;
	.loc	1 48 40                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:48:40
	rem.s32 	%r53, %r45, %r52;
	.loc	1 48 34                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:48:34
	add.s32 	%r54, %r53, %r50;
	.loc	1 49 19                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:49:19
	mul.lo.s32 	%r55, %r49, 1280;
	sub.s32 	%r56, %r45, %r55;
	.loc	1 49 30                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:49:30
	div.s32 	%r57, %r56, %r52;
	.loc	1 51 17                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:51:17
	shl.b32 	%r58, %r54, 6;
	.loc	1 51 40                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:51:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r59, %r1, 8;
	and.b32  	%r2, %r1, 16;
	and.b32  	%r60, %r1, 32;
	bfe.u32 	%r61, %r1, 3, 4;
	and.b32  	%r3, %r1, 128;
	shr.u32 	%r62, %r3, 3;
	or.b32  	%r63, %r61, %r62;
	or.b32  	%r64, %r63, 32;
	shl.b32 	%r4, %r1, 3;
	and.b32  	%r65, %r4, 8;
	and.b32  	%r66, %r4, 16;
	and.b32  	%r67, %r4, 24;
	and.b32  	%r68, %r4, 32;
	and.b32  	%r5, %r4, 56;
	.loc	1 51 27                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:51:27
	or.b32  	%r6, %r58, %r63;
	or.b32  	%r7, %r58, %r64;
	.loc	1 52 17                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:52:17
	shl.b32 	%r8, %r57, 6;
	.loc	1 52 27                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:52:27
	or.b32  	%r69, %r8, %r63;
	or.b32  	%r70, %r8, %r64;
	.loc	1 54 57                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:54:57
	bfe.s32 	%r71, %r54, 25, 1;
	shr.u32 	%r72, %r71, 23;
	add.s32 	%r73, %r6, %r72;
	and.b32  	%r74, %r73, 1048064;
	sub.s32 	%r75, %r6, %r74;
	add.s32 	%r76, %r7, %r72;
	and.b32  	%r77, %r76, 1048064;
	sub.s32 	%r78, %r7, %r77;
	.loc	1 58 57                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:58:57
	mul.hi.s32 	%r79, %r69, 1717986919;
	shr.u32 	%r80, %r79, 31;
	shr.u32 	%r81, %r79, 12;
	add.s32 	%r82, %r81, %r80;
	mul.lo.s32 	%r83, %r82, 10240;
	sub.s32 	%r84, %r69, %r83;
	mul.hi.s32 	%r85, %r70, 1717986919;
	shr.u32 	%r86, %r85, 31;
	shr.u32 	%r87, %r85, 12;
	add.s32 	%r88, %r87, %r86;
	mul.lo.s32 	%r89, %r88, 10240;
	sub.s32 	%r90, %r70, %r89;
	.loc	1 71 30                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:71:30
	shl.b32 	%r91, %r75, 12;
	shl.b32 	%r92, %r78, 12;
	.loc	1 77 55                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:55
	shl.b32 	%r93, %r84, 12;
	shl.b32 	%r94, %r90, 12;
	.loc	1 71 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:71:25
	or.b32  	%r95, %r91, %r5;
	or.b32  	%r96, %r92, %r5;
	.loc	1 72 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:25
	mul.wide.s32 	%rd21, %r95, 2;
	add.s64 	%rd10, %rd19, %rd21;
	mul.wide.s32 	%rd22, %r96, 2;
	add.s64 	%rd11, %rd19, %rd22;
	.loc	1 72 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:20
	and.b32  	%r97, %r1, 24;
	xor.b32  	%r98, %r5, %r97;
	xor.b32  	%r99, %r98, %r60;
	shl.b32 	%r100, %r63, 6;
	or.b32  	%r9, %r99, %r100;
	shl.b32 	%r101, %r9, 1;
	mov.u32 	%r102, global_smem;
	add.s32 	%r27, %r102, %r101;
	add.s32 	%r29, %r27, 4096;
	mov.b32 	%r28, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd10 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd11 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:50
	or.b32  	%r103, %r93, %r5;
	or.b32  	%r104, %r94, %r5;
	.loc	1 77 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:25
	mul.wide.s32 	%rd23, %r103, 2;
	add.s64 	%rd12, %rd20, %rd23;
	mul.wide.s32 	%rd24, %r104, 2;
	add.s64 	%rd13, %rd20, %rd24;
	.loc	1 77 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:20
	add.s32 	%r31, %r27, 16384;
	add.s32 	%r33, %r27, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd12 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd13 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:25
	cvt.s64.s32 	%rd25, %r91;
	cvt.u64.u32 	%rd26, %r5;
	or.b64  	%rd27, %rd25, %rd26;
	shl.b64 	%rd28, %rd27, 1;
	add.s64 	%rd29, %rd19, %rd28;
	add.s64 	%rd14, %rd29, 128;
	cvt.s64.s32 	%rd30, %r92;
	or.b64  	%rd31, %rd30, %rd26;
	shl.b64 	%rd32, %rd31, 1;
	add.s64 	%rd33, %rd19, %rd32;
	add.s64 	%rd15, %rd33, 128;
	.loc	1 72 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:20
	bar.sync 	0;
	add.s32 	%r35, %r27, 8192;
	add.s32 	%r37, %r27, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r35 + 0 ], [ %rd14 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r37 + 0 ], [ %rd15 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:25
	cvt.s64.s32 	%rd34, %r93;
	or.b64  	%rd35, %rd34, %rd26;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd20, %rd36;
	add.s64 	%rd16, %rd37, 128;
	cvt.s64.s32 	%rd38, %r94;
	or.b64  	%rd39, %rd38, %rd26;
	shl.b64 	%rd40, %rd39, 1;
	add.s64 	%rd41, %rd20, %rd40;
	add.s64 	%rd17, %rd41, 128;
	.loc	1 77 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:20
	add.s32 	%r39, %r27, 24576;
	add.s32 	%r41, %r27, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r39 + 0 ], [ %rd16 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r41 + 0 ], [ %rd17 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:64:26
	or.b32  	%r105, %r59, %r62;
	and.b32  	%r106, %r1, 7;
	or.b32  	%r107, %r105, %r106;
	and.b32  	%r108, %r1, 15;
	shr.u32 	%r109, %r2, 1;
	xor.b32  	%r110, %r5, %r109;
	or.b32  	%r111, %r62, %r108;
	shl.b32 	%r112, %r111, 6;
	or.b32  	%r10, %r112, %r110;
	or.b32  	%r113, %r65, 16;
	xor.b32  	%r114, %r113, %r66;
	or.b32  	%r115, %r114, %r68;
	xor.b32  	%r116, %r115, %r109;
	or.b32  	%r11, %r116, %r112;
	or.b32  	%r117, %r67, 32;
	xor.b32  	%r118, %r117, %r68;
	xor.b32  	%r119, %r118, %r109;
	or.b32  	%r12, %r119, %r112;
	or.b32  	%r120, %r65, 48;
	and.b32  	%r121, %r4, 48;
	or.b32  	%r122, %r109, %r121;
	xor.b32  	%r123, %r122, %r120;
	or.b32  	%r13, %r123, %r112;
	shr.u32 	%r124, %r60, 2;
	or.b32  	%r125, %r106, %r124;
	shl.b32 	%r126, %r107, 6;
	or.b32  	%r127, %r126, 2048;
	or.b32  	%r14, %r127, %r110;
	or.b32  	%r15, %r116, %r127;
	or.b32  	%r16, %r119, %r127;
	or.b32  	%r17, %r123, %r127;
	shr.u32 	%r18, %r1, 2;
	and.b32  	%r128, %r18, 16;
	or.b32  	%r129, %r128, %r124;
	or.b32  	%r130, %r129, %r106;
	shl.b32 	%r131, %r130, 6;
	or.b32  	%r19, %r131, %r98;
	xor.b32  	%r132, %r118, %r97;
	or.b32  	%r20, %r132, %r131;
	or.b32  	%r133, %r125, %r128;
	shl.b32 	%r134, %r133, 6;
	or.b32  	%r135, %r134, 2048;
	or.b32  	%r21, %r135, %r98;
	or.b32  	%r22, %r132, %r135;
	mul.wide.u32 	%rd42, %r106, 16;
	mul.wide.s32 	%rd43, %r94, 2;
	or.b64  	%rd44, %rd42, %rd43;
	add.s64 	%rd45, %rd44, %rd20;
	add.s64 	%rd1, %rd45, 256;
	mul.wide.s32 	%rd46, %r93, 2;
	or.b64  	%rd47, %rd42, %rd46;
	add.s64 	%rd48, %rd47, %rd20;
	add.s64 	%rd2, %rd48, 256;
	mul.wide.s32 	%rd49, %r92, 2;
	or.b64  	%rd50, %rd42, %rd49;
	add.s64 	%rd51, %rd50, %rd19;
	add.s64 	%rd3, %rd51, 256;
	mul.wide.s32 	%rd52, %r91, 2;
	or.b64  	%rd53, %rd42, %rd52;
	add.s64 	%rd54, %rd53, %rd19;
	add.s64 	%rd4, %rd54, 256;
	mov.f32 	%f162, 0f00000000;
	mov.b32 	%r371, 1;
	mov.b32 	%r370, -1;
	mov.b64 	%rd63, 0;
	shl.b32 	%r304, %r10, 1;
	shl.b32 	%r305, %r11, 1;
	shl.b32 	%r306, %r12, 1;
	shl.b32 	%r307, %r13, 1;
	shl.b32 	%r308, %r14, 1;
	shl.b32 	%r309, %r15, 1;
	shl.b32 	%r310, %r16, 1;
	shl.b32 	%r311, %r17, 1;
	shl.b32 	%r314, %r19, 1;
	shl.b32 	%r315, %r20, 1;
	shl.b32 	%r316, %r21, 1;
	shl.b32 	%r317, %r22, 1;
	mov.u64 	%rd64, %rd63;
	mov.f32 	%f163, %f162;
	mov.f32 	%f164, %f162;
	mov.f32 	%f165, %f162;
	mov.f32 	%f166, %f162;
	mov.f32 	%f167, %f162;
	mov.f32 	%f168, %f162;
	mov.f32 	%f169, %f162;
	mov.f32 	%f170, %f162;
	mov.f32 	%f171, %f162;
	mov.f32 	%f172, %f162;
	mov.f32 	%f173, %f162;
	mov.f32 	%f174, %f162;
	mov.f32 	%f175, %f162;
	mov.f32 	%f176, %f162;
	mov.f32 	%f177, %f162;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd64, 62;
	add.s32 	%r300, %r370, 1;
	setp.lt.s32 	%p2, %r300, 2;
	selp.b32 	%r370, %r300, 0, %p2;
	.loc	1 72 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r301, %r370, 13;
	add.s32 	%r303, %r102, %r301;
	add.s32 	%r140, %r303, %r304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r196, %r197, %r198, %r199}, [%r140];
	// end inline asm
	add.s32 	%r145, %r303, %r305;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r220, %r221, %r222, %r223}, [%r145];
	// end inline asm
	add.s32 	%r150, %r303, %r306;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r244, %r245, %r246, %r247}, [%r150];
	// end inline asm
	add.s32 	%r155, %r303, %r307;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r268, %r269, %r270, %r271}, [%r155];
	// end inline asm
	add.s32 	%r160, %r303, %r308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r208, %r209, %r210, %r211}, [%r160];
	// end inline asm
	add.s32 	%r165, %r303, %r309;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r232, %r233, %r234, %r235}, [%r165];
	// end inline asm
	add.s32 	%r170, %r303, %r310;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r256, %r257, %r258, %r259}, [%r170];
	// end inline asm
	add.s32 	%r175, %r303, %r311;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r280, %r281, %r282, %r283}, [%r175];
	// end inline asm
	.loc	1 77 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:20
	add.s32 	%r312, %r102, 16384;
	add.s32 	%r313, %r312, %r301;
	add.s32 	%r180, %r313, %r314;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r200, %r201, %r224, %r225}, [%r180];
	// end inline asm
	add.s32 	%r185, %r313, %r315;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r248, %r249, %r272, %r273}, [%r185];
	// end inline asm
	add.s32 	%r190, %r313, %r316;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r206, %r207, %r230, %r231}, [%r190];
	// end inline asm
	add.s32 	%r195, %r313, %r317;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r254, %r255, %r278, %r279}, [%r195];
	// end inline asm
	.loc	1 78 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r196, %r197, %r198, %r199 }, { %r200, %r201 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r196, %r197, %r198, %r199 }, { %r206, %r207 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r208, %r209, %r210, %r211 }, { %r200, %r201 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r208, %r209, %r210, %r211 }, { %r206, %r207 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r220, %r221, %r222, %r223 }, { %r224, %r225 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r220, %r221, %r222, %r223 }, { %r230, %r231 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r232, %r233, %r234, %r235 }, { %r224, %r225 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r232, %r233, %r234, %r235 }, { %r230, %r231 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r244, %r245, %r246, %r247 }, { %r248, %r249 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r244, %r245, %r246, %r247 }, { %r254, %r255 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r256, %r257, %r258, %r259 }, { %r248, %r249 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r256, %r257, %r258, %r259 }, { %r254, %r255 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r268, %r269, %r270, %r271 }, { %r272, %r273 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r268, %r269, %r270, %r271 }, { %r278, %r279 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r280, %r281, %r282, %r283 }, { %r272, %r273 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r280, %r281, %r282, %r283 }, { %r278, %r279 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	.loc	1 64 26                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:64:26
	add.s32 	%r318, %r371, 1;
	setp.lt.s32 	%p3, %r318, 2;
	selp.b32 	%r371, %r318, 0, %p3;
	.loc	1 72 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:25
	add.s64 	%rd55, %rd4, %rd63;
	.loc	1 72 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:72:20
	add.s64 	%rd56, %rd3, %rd63;
	shl.b32 	%r319, %r371, 13;
	add.s32 	%r320, %r102, %r319;
	bar.sync 	0;
	add.s32 	%r292, %r320, %r101;
	add.s32 	%r294, %r292, 4096;
	selp.b32 	%r293, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r292 + 0 ], [ %rd55 + 0 ], 0x10, %r293;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r294 + 0 ], [ %rd56 + 0 ], 0x10, %r293;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:25
	add.s64 	%rd57, %rd2, %rd63;
	.loc	1 77 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:77:20
	add.s64 	%rd58, %rd1, %rd63;
	add.s32 	%r322, %r312, %r319;
	add.s32 	%r296, %r322, %r101;
	add.s32 	%r298, %r296, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r296 + 0 ], [ %rd57 + 0 ], 0x10, %r293;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r298 + 0 ], [ %rd58 + 0 ], 0x10, %r293;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:64:26
	add.s64 	%rd64, %rd64, 1;
	add.s64 	%rd63, %rd63, 128;
	setp.ne.s64 	%p4, %rd63, 8192;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 27                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:52:27
	or.b32  	%r339, %r8, %r5;
	.loc	1 64 26                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:85:20
	setp.lt.s32 	%p15, %r6, 512;
	setp.lt.s32 	%p16, %r7, 512;
	.loc	1 85 34                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:85:34
	setp.lt.s32 	%p17, %r339, 10240;
	.loc	1 85 26                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:85:26
	and.pred  	%p13, %p15, %p17;
	and.pred  	%p14, %p16, %p17;
	.loc	1 88 21                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:88:21
	mad.lo.s32 	%r340, %r6, 10240, %r339;
	mad.lo.s32 	%r341, %r7, 10240, %r339;
	.loc	1 89 25                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:89:25
	mul.wide.s32 	%rd61, %r340, 2;
	add.s64 	%rd59, %rd9, %rd61;
	mul.wide.s32 	%rd62, %r341, 2;
	add.s64 	%rd60, %rd9, %rd62;
	.loc	1 89 67                         // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f162;
	cvt.rn.bf16.f32 	%rs2, %f163;
	cvt.rn.bf16.f32 	%rs3, %f164;
	cvt.rn.bf16.f32 	%rs4, %f165;
	cvt.rn.bf16.f32 	%rs5, %f166;
	cvt.rn.bf16.f32 	%rs6, %f167;
	cvt.rn.bf16.f32 	%rs7, %f168;
	cvt.rn.bf16.f32 	%rs8, %f169;
	cvt.rn.bf16.f32 	%rs9, %f170;
	cvt.rn.bf16.f32 	%rs10, %f171;
	cvt.rn.bf16.f32 	%rs11, %f172;
	cvt.rn.bf16.f32 	%rs12, %f173;
	cvt.rn.bf16.f32 	%rs13, %f174;
	cvt.rn.bf16.f32 	%rs14, %f175;
	cvt.rn.bf16.f32 	%rs15, %f176;
	cvt.rn.bf16.f32 	%rs16, %f177;
	shl.b32 	%r342, %r1, 1;
	and.b32  	%r343, %r342, 6;
	shl.b32 	%r344, %r1, 4;
	and.b32  	%r345, %r344, 192;
	or.b32  	%r346, %r345, %r343;
	shl.b32 	%r347, %r2, 4;
	or.b32  	%r348, %r346, %r347;
	and.b32  	%r349, %r18, 24;
	or.b32  	%r350, %r348, %r349;
	shl.b32 	%r351, %r3, 3;
	or.b32  	%r352, %r350, %r351;
	and.b32  	%r353, %r4, 1016;
	or.b32  	%r354, %r353, %r351;
	shr.u32 	%r355, %r352, 2;
	and.b32  	%r356, %r355, 496;
	add.s32 	%r358, %r102, %r356;
	shl.b32 	%r359, %r352, 1;
	add.s32 	%r323, %r358, %r359;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r323 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r360, %r352, 512;
	shr.u32 	%r361, %r360, 2;
	and.b32  	%r362, %r361, 1073741808;
	add.s32 	%r363, %r102, %r362;
	add.s32 	%r364, %r363, %r359;
	add.s32 	%r324, %r364, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r324 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r325, %r323, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r325 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r326, %r364, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r326 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r365, %r354, 2;
	and.b32  	%r366, %r365, 496;
	add.s32 	%r367, %r102, %r366;
	shl.b32 	%r368, %r354, 1;
	add.s32 	%r369, %r367, %r368;
	ld.shared.v4.u32 	{%r331, %r332, %r333, %r334}, [%r369];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r323 + 0 ], { %rs9, %rs10 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r324 + 0 ], { %rs11, %rs12 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r325 + 0 ], { %rs13, %rs14 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r326 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r335, %r336, %r337, %r338}, [%r369];
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd59 + 0 ], { %r331, %r332, %r333, %r334 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd60 + 0 ], { %r335, %r336, %r337, %r338 };
	// end inline asm
	.loc	1 89 4                          // cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/uy/cuyuwcqrae3kdp7sswf325egrw4fgd4ybb5w6kpfeaaf4tnckzzx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 121
.b8 117
.b8 119
.b8 99
.b8 113
.b8 114
.b8 97
.b8 101
.b8 51
.b8 107
.b8 100
.b8 112
.b8 55
.b8 115
.b8 115
.b8 119
.b8 102
.b8 51
.b8 50
.b8 53
.b8 101
.b8 103
.b8 114
.b8 119
.b8 52
.b8 102
.b8 103
.b8 100
.b8 52
.b8 121
.b8 98
.b8 98
.b8 53
.b8 119
.b8 54
.b8 107
.b8 112
.b8 102
.b8 101
.b8 97
.b8 97
.b8 102
.b8 52
.b8 116
.b8 110
.b8 99
.b8 107
.b8 122
.b8 122
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 117
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
