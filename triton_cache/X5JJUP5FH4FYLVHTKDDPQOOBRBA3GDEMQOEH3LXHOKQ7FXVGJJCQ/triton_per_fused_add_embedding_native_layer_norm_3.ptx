//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused_add_embedding_native_layer_norm_3 // -- Begin function triton_per_fused_add_embedding_native_layer_norm_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 52, 101, 47, 99, 52, 101, 116, 50, 105, 118, 104, 110, 115, 98, 122, 117, 118, 103, 118, 107, 115, 107, 104, 118, 117, 115, 120, 122, 116, 97, 102, 113, 108, 118, 110, 107, 105, 55, 110, 113, 52, 118, 121, 118, 101, 99, 51, 116, 53, 55, 122, 51, 111, 119, 117, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 49, 32, 60, 32, 55, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 52, 101, 47, 99, 52, 101, 116, 50, 105, 118, 104, 110, 115, 98, 122, 117, 118, 103, 118, 107, 115, 107, 104, 118, 117, 115, 120, 122, 116, 97, 102, 113, 108, 118, 110, 107, 105, 55, 110, 113, 52, 118, 121, 118, 101, 99, 51, 116, 53, 55, 122, 51, 111, 119, 117, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52, 57, 52, 48, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_embedding_native_layer_norm_3
.visible .entry triton_per_fused_add_embedding_native_layer_norm_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_8,
	.param .u32 triton_per_fused_add_embedding_native_layer_norm_3_param_9,
	.param .u32 triton_per_fused_add_embedding_native_layer_norm_3_param_10,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_native_layer_norm_3_param_11
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<94>;
	.reg .f32 	%f<101>;
	.reg .b64 	%rd<72>;
	.loc	1 18 0                          // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:18:0

// %bb.0:
	ld.param.u64 	%rd34, [triton_per_fused_add_embedding_native_layer_norm_3_param_0];
	ld.param.u64 	%rd35, [triton_per_fused_add_embedding_native_layer_norm_3_param_1];
$L__tmp0:
	.loc	1 25 28                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:25:28
	mov.u32 	%r28, %ctaid.x;
	.loc	1 28 28                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:28:28
	mov.u32 	%r1, %tid.x;
	shl.b32 	%r29, %r1, 2;
	ld.param.u64 	%rd36, [triton_per_fused_add_embedding_native_layer_norm_3_param_3];
	and.b32  	%r30, %r29, 1020;
	.loc	1 30 25                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:30:25
	setp.lt.u32 	%p1, %r30, 768;
	ld.param.u64 	%rd37, [triton_per_fused_add_embedding_native_layer_norm_3_param_5];
	ld.param.u64 	%rd38, [triton_per_fused_add_embedding_native_layer_norm_3_param_6];
	.loc	1 35 30                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:35:30
	mul.wide.s32 	%rd39, %r28, 8;
	add.s64 	%rd11, %rd35, %rd39;
	ld.param.u64 	%rd40, [triton_per_fused_add_embedding_native_layer_norm_3_param_7];
	.loc	1 35 35                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:35:35
	// begin inline asm
	mov.u64 %rd10, 0x0;
	ld.global.L1::evict_last.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	ld.global.L1::evict_last.b64 { %rd12 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	ld.global.L1::evict_last.b64 { %rd14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	ld.global.L1::evict_last.b64 { %rd16 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	ld.global.L1::evict_last.b64 { %rd18 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 30                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:36:30
	add.s64 	%rd21, %rd36, %rd39;
	.loc	1 36 35                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:36:35
	// begin inline asm
	mov.u64 %rd20, 0x0;
	ld.global.L1::evict_last.b64 { %rd20 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	ld.global.L1::evict_last.b64 { %rd22 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	ld.global.L1::evict_last.b64 { %rd24 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	ld.global.L1::evict_last.b64 { %rd26 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	ld.global.L1::evict_last.b64 { %rd28 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 37 42                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:37:42
	mad.lo.s32 	%r31, %r28, 768, %r30;
	.loc	1 37 35                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:37:35
	mul.wide.s32 	%rd41, %r31, 2;
	add.s64 	%rd30, %rd34, %rd41;
	mov.b32 	%r27, 0;
	.loc	1 37 51                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:37:51
	// begin inline asm
	mov.u32 %r12, %r27;
	mov.u32 %r13, %r27;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 38 31                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:38:31
	mul.wide.u32 	%rd42, %r30, 2;
	add.s64 	%rd31, %rd37, %rd42;
	.loc	1 38 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:38:38
	// begin inline asm
	mov.u32 %r16, %r27;
	mov.u32 %r17, %r27;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 39 31                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:31
	add.s64 	%rd32, %rd38, %rd42;
	.loc	1 39 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:38
	// begin inline asm
	mov.u32 %r20, %r27;
	mov.u32 %r21, %r27;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 40 31                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:31
	add.s64 	%rd33, %rd40, %rd42;
	.loc	1 40 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:38
	// begin inline asm
	mov.u32 %r24, %r27;
	mov.u32 %r25, %r27;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r24, %r25 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 42 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:42:18
	add.s64 	%rd43, %rd18, 49408;
	.loc	1 43 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:43:18
	setp.lt.s64 	%p5, %rd18, 0;
	.loc	1 44 32                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:44:32
	selp.b64 	%rd44, %rd43, %rd18, %p5;
	.loc	1 45 36                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:45:36
	setp.lt.u64 	%p6, %rd44, 49408;
	.loc	1 45 51                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:45:51
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 51                          // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:0:51
	ld.param.u64 	%rd7, [triton_per_fused_add_embedding_native_layer_norm_3_param_2];
	cvt.u64.u32 	%rd6, %r30;
	cvt.u32.u64 	%r36, %rd6;
	.loc	1 30 25                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:30:25
	setp.lt.u32 	%p7, %r36, 768;
	.loc	1 43 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:43:18
	setp.lt.s64 	%p8, %rd16, 0;
	.loc	1 42 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:42:18
	add.s64 	%rd46, %rd16, 49408;
	.loc	1 44 32                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:44:32
	selp.b64 	%rd47, %rd46, %rd16, %p8;
	.loc	1 45 51                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:45:51
	bar.sync 	0;
	.loc	1 46 30                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:46:30
	mad.lo.s64 	%rd48, %rd47, 1536, %rd7;
	shl.b64 	%rd49, %rd6, 1;
	add.s64 	%rd45, %rd48, %rd49;
	.loc	1 46 48                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:46:48
	// begin inline asm
	mov.u32 %r32, %r27;
	mov.u32 %r33, %r27;
	@%p7 ld.global.v2.b32 { %r32, %r33 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 48 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:48:18
	add.s64 	%rd50, %rd28, 77;
	.loc	1 49 19                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:49:19
	setp.lt.s64 	%p9, %rd28, 0;
	.loc	1 50 34                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:50:34
	selp.b64 	%rd51, %rd50, %rd28, %p9;
	.loc	1 51 37                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:51:37
	setp.lt.u64 	%p10, %rd51, 77;
	.loc	1 51 50                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:51:50
	@%p10 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	1 0 50                          // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:0:50
	ld.param.u64 	%rd9, [triton_per_fused_add_embedding_native_layer_norm_3_param_8];
	ld.param.u64 	%rd8, [triton_per_fused_add_embedding_native_layer_norm_3_param_4];
	cvt.s64.s32 	%rd4, %r31;
	.loc	1 49 19                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:49:19
	setp.lt.s64 	%p20, %rd26, 0;
	.loc	1 48 18                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:48:18
	add.s64 	%rd55, %rd26, 77;
	.loc	1 50 34                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:50:34
	selp.b64 	%rd56, %rd55, %rd26, %p20;
	.loc	1 28 28                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:28:28
	and.b32  	%r58, %r1, 31;
	.loc	1 51 50                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:51:50
	bar.sync 	0;
	.loc	1 52 31                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:52:31
	mad.lo.s64 	%rd57, %rd56, 1536, %rd8;
	add.s64 	%rd52, %rd57, %rd49;
	mov.b32 	%r39, 0;
	.loc	1 52 50                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:52:50
	// begin inline asm
	mov.u32 %r37, %r39;
	mov.u32 %r38, %r39;
	@%p7 ld.global.v2.b32 { %r37, %r38 }, [ %rd52 + 0 ];
	// end inline asm
	.loc	1 46 71                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:46:71
	mov.b32 	{%rs1, %rs2}, %r32;
	cvt.f32.bf16 	%f1, %rs2;
	cvt.f32.bf16 	%f2, %rs1;
	.loc	1 38 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:38:91
	mov.b32 	{%rs3, %rs4}, %r16;
	cvt.f32.bf16 	%f3, %rs4;
	cvt.f32.bf16 	%f4, %rs3;
	.loc	1 37 74                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:37:74
	mov.b32 	{%rs5, %rs6}, %r12;
	cvt.f32.bf16 	%f5, %rs6;
	cvt.f32.bf16 	%f6, %rs5;
	.loc	1 52 73                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:52:73
	mov.b32 	{%rs7, %rs8}, %r37;
	cvt.f32.bf16 	%f7, %rs8;
	cvt.f32.bf16 	%f8, %rs7;
	.loc	1 53 19                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:53:19
	add.f32 	%f9, %f2, %f8;
	add.f32 	%f10, %f1, %f7;
	.loc	1 54 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:54:20
	add.f32 	%f11, %f6, %f4;
	add.f32 	%f12, %f5, %f3;
	.loc	1 55 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:55:20
	add.f32 	%f13, %f12, %f10;
	add.f32 	%f14, %f11, %f9;
	.loc	1 46 71                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:46:71
	mov.b32 	{%rs9, %rs10}, %r33;
	cvt.f32.bf16 	%f15, %rs10;
	cvt.f32.bf16 	%f16, %rs9;
	.loc	1 38 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:38:91
	mov.b32 	{%rs11, %rs12}, %r17;
	cvt.f32.bf16 	%f17, %rs12;
	cvt.f32.bf16 	%f18, %rs11;
	.loc	1 37 74                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:37:74
	mov.b32 	{%rs13, %rs14}, %r13;
	cvt.f32.bf16 	%f19, %rs14;
	cvt.f32.bf16 	%f20, %rs13;
	.loc	1 52 73                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:52:73
	mov.b32 	{%rs15, %rs16}, %r38;
	cvt.f32.bf16 	%f21, %rs16;
	cvt.f32.bf16 	%f22, %rs15;
	.loc	1 53 19                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:53:19
	add.f32 	%f23, %f16, %f22;
	add.f32 	%f24, %f15, %f21;
	.loc	1 54 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:54:20
	add.f32 	%f25, %f20, %f18;
	add.f32 	%f26, %f19, %f17;
	.loc	1 55 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:55:20
	add.f32 	%f27, %f26, %f24;
	add.f32 	%f28, %f25, %f23;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f14, %f13;
	add.f32 	%f30, %f28, %f29;
	add.f32 	%f31, %f27, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p7;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f32;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f33, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f34;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f35, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f36;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f37, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r65, %f38;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f39, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r67, %f40;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f41, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p12, %r58, 0;
	shr.u32 	%r69, %r1, 3;
	and.b32  	%r70, %r69, 28;
	mov.u32 	%r71, global_smem;
	add.s32 	%r41, %r71, %r70;
	mov.b32 	%r42, %f42;
	// begin inline asm
	@%p12 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r1, 8;
	add.s32 	%r44, %r71, %r29;
	// begin inline asm
	@%p13 ld.shared.b32 %r43, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r43;
	shfl.sync.bfly.b32	%r73, %r43, 4, 31, -1;
	mov.b32 	%f44, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r74, %f45;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f46, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r76, %f47;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f48, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r78, %r1, 7;
	setp.eq.s32 	%p21, %r78, 0;
	and.pred  	%p14, %p13, %p21;
	mov.b32 	%r46, %f49;
	// begin inline asm
	@%p14 st.shared.b32 [ %r44 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f50, [global_smem];
$L__tmp2:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f51, %f50, 0f00000000;
	mov.f32 	%f52, 0f44400000;
$L__tmp3:
	.loc	1 64 21                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:64:21
	div.full.f32 	%f53, %f51, %f52;
	.loc	1 65 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:65:20
	sub.f32 	%f54, %f14, %f53;
	sub.f32 	%f55, %f13, %f53;
	sub.f32 	%f56, %f28, %f53;
	sub.f32 	%f57, %f27, %f53;
	.loc	1 66 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:66:20
	mul.f32 	%f58, %f55, %f55;
$L__tmp4:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f59, %f54, %f54, %f58;
	fma.rn.f32 	%f60, %f56, %f56, %f59;
	fma.rn.f32 	%f61, %f57, %f57, %f60;
	selp.f32 	%f62, %f61, 0f00000000, %p7;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f62;
	shfl.sync.bfly.b32	%r80, %r79, 16, 31, -1;
	mov.b32 	%f63, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r81, %f64;
	shfl.sync.bfly.b32	%r82, %r81, 8, 31, -1;
	mov.b32 	%f65, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f66;
	shfl.sync.bfly.b32	%r84, %r83, 4, 31, -1;
	mov.b32 	%f67, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r85, %f68;
	shfl.sync.bfly.b32	%r86, %r85, 2, 31, -1;
	mov.b32 	%f69, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r87, %f70;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f71, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f72;
	// begin inline asm
	@%p12 st.shared.b32 [ %r41 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p13 ld.shared.b32 %r49, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r49;
	shfl.sync.bfly.b32	%r89, %r49, 4, 31, -1;
	mov.b32 	%f74, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r90, %f75;
	shfl.sync.bfly.b32	%r91, %r90, 2, 31, -1;
	mov.b32 	%f76, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r92, %f77;
	shfl.sync.bfly.b32	%r93, %r92, 1, 31, -1;
	mov.b32 	%f78, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r52, %f79;
	// begin inline asm
	@%p14 st.shared.b32 [ %r44 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f80, [global_smem];
$L__tmp5:
	.loc	3 57 15                         // triton_helpers.py:57:15
	add.f32 	%f81, %f80, 0f00000000;
$L__tmp6:
	.loc	1 72 21                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:72:21
	div.full.f32 	%f82, %f81, %f52;
	.loc	1 74 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:74:20
	add.f32 	%f83, %f82, 0f3727C5AC;
	.loc	1 75 28                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:75:28
	rsqrt.approx.ftz.f32 	%f84, %f83;
	.loc	1 39 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:38
	mov.b32 	{%rs17, %rs18}, %r20;
	.loc	1 39 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:91
	cvt.f32.bf16 	%f85, %rs17;
	cvt.f32.bf16 	%f86, %rs18;
	.loc	1 39 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:38
	mov.b32 	{%rs19, %rs20}, %r21;
	.loc	1 39 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:39:91
	cvt.f32.bf16 	%f87, %rs19;
	cvt.f32.bf16 	%f88, %rs20;
	.loc	1 40 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:38
	mov.b32 	{%rs21, %rs22}, %r24;
	.loc	1 40 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:91
	cvt.f32.bf16 	%f89, %rs21;
	cvt.f32.bf16 	%f90, %rs22;
	.loc	1 40 38                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:38
	mov.b32 	{%rs23, %rs24}, %r25;
	.loc	1 40 91                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:40:91
	cvt.f32.bf16 	%f91, %rs23;
	cvt.f32.bf16 	%f92, %rs24;
	.loc	1 76 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:76:20
	mul.f32 	%f93, %f54, %f84;
	mul.f32 	%f94, %f55, %f84;
	mul.f32 	%f95, %f56, %f84;
	mul.f32 	%f96, %f57, %f84;
	.loc	1 80 20                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:80:20
	fma.rn.f32 	%f97, %f93, %f85, %f89;
	fma.rn.f32 	%f98, %f94, %f86, %f90;
	fma.rn.f32 	%f99, %f95, %f87, %f91;
	fma.rn.f32 	%f100, %f96, %f88, %f92;
	.loc	1 82 51                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:82:51
	cvt.rn.bf16x2.f32 	%r53, %f13, %f14;
	cvt.rn.bf16x2.f32 	%r54, %f27, %f28;
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd30 + 0 ], { %r53, %r54 };
	// end inline asm
	.loc	1 83 25                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:83:25
	shl.b64 	%rd59, %rd4, 1;
	add.s64 	%rd54, %rd9, %rd59;
	.loc	1 83 48                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:83:48
	cvt.rn.bf16x2.f32 	%r55, %f98, %f97;
	cvt.rn.bf16x2.f32 	%r56, %f100, %f99;
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd54 + 0 ], { %r55, %r56 };
	// end inline asm
	.loc	1 83 4                          // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:83:4
	ret;
$L__BB0_1:
	.loc	1 45 51                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:45:51
	mov.u64 	%rd66, assertMessage_0;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFile_0;
	cvta.global.u64 	%rd69, %rd68;
	mov.u64 	%rd70, assertFunc_0;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd67;
	.param .b64 param1;
	st.param.b64 	[param1], %rd69;
	.param .b32 param2;
	st.param.b32 	[param2], 45;
	.param .b64 param3;
	st.param.b64 	[param3], %rd71;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_3:
	.loc	1 51 50                         // c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py:51:50
	mov.u64 	%rd60, assertMessage_1;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, assertFile_1;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, assertFunc_1;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd61;
	.param .b64 param1;
	st.param.b64 	[param1], %rd63;
	.param .b32 param2;
	st.param.b32 	[param2], 51;
	.param .b64 param3;
	st.param.b64 	[param3], %rd65;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/4e/c4et2ivhnsbzuvgvkskhvusxztafqlvnki7nq4vyvec3t57z3owu.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.file	3 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 276                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10d DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 101
.b8 116
.b8 50
.b8 105
.b8 118
.b8 104
.b8 110
.b8 115
.b8 98
.b8 122
.b8 117
.b8 118
.b8 103
.b8 118
.b8 107
.b8 115
.b8 107
.b8 104
.b8 118
.b8 117
.b8 115
.b8 120
.b8 122
.b8 116
.b8 97
.b8 102
.b8 113
.b8 108
.b8 118
.b8 110
.b8 107
.b8 105
.b8 55
.b8 110
.b8 113
.b8 52
.b8 118
.b8 121
.b8 118
.b8 101
.b8 99
.b8 51
.b8 116
.b8 53
.b8 55
.b8 122
.b8 51
.b8 111
.b8 119
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 52
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfe:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
