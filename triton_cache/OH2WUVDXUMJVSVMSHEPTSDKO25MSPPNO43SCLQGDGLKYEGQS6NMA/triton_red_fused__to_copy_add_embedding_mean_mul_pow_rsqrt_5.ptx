//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 113, 113, 47, 99, 113, 113, 116, 110, 53, 108, 109, 98, 97, 105, 100, 97, 55, 100, 119, 102, 106, 104, 54, 119, 50, 111, 100, 112, 107, 103, 112, 117, 108, 54, 109, 109, 103, 104, 117, 99, 121, 121, 52, 120, 114, 103, 113, 119, 115, 116, 100, 119, 114, 107, 114, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<45>;
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1];
	ld.param.u64 	%rd17, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0];
$L__tmp0:
	.loc	1 23 28                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:28
	mov.u32 	%r3, %ctaid.x;
	.loc	1 23 33                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:33
	shl.b32 	%r4, %r3, 6;
	.loc	1 24 44                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:44
	mov.u32 	%r5, %tid.x;
	bfe.u32 	%r6, %r5, 2, 6;
	.loc	1 24 23                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:23
	or.b32  	%r1, %r6, %r4;
	.loc	1 25 21                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:25:21
	setp.lt.s32 	%p2, %r1, 512;
	.loc	1 26 37                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:26:37
	and.b32  	%r7, %r5, 3;
	.loc	1 29 30                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:30
	mul.wide.s32 	%rd18, %r1, 8;
	add.s64 	%rd15, %rd17, %rd18;
	.loc	1 29 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:35
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 37 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:46
	shl.b32 	%r8, %r1, 12;
	.loc	1 39 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:39:22
	add.s64 	%rd19, %rd14, 32128;
	.loc	1 40 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:40:22
	setp.lt.s64 	%p3, %rd14, 0;
	.loc	1 41 36                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:41:36
	selp.b64 	%rd20, %rd19, %rd14, %p3;
	.loc	1 42 41                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:41
	setp.gt.u64 	%p4, %rd20, 32127;
	.loc	1 43 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:46
	and.pred  	%p1, %p2, %p4;
	shl.b64 	%rd21, %rd20, 12;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	or.b32  	%r2, %r7, %r8;
	cvt.u64.u32 	%rd1, %r7;
	or.b64  	%rd2, %rd21, %rd1;
	mov.f32 	%f22, 0f00000000;
	mov.b64 	%rd42, 0;
	not.pred 	%p6, %p1;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	cvt.u32.u64 	%r9, %rd42;
	or.b32  	%r10, %r2, %r9;
	.loc	1 37 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:34
	mul.wide.s32 	%rd23, %r10, 2;
	add.s64 	%rd22, %rd11, %rd23;
	mov.b16 	%rs3, 0;
	.loc	1 37 51                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:51
	// begin inline asm
	mov.u16 %rs2, %rs3;
	@%p2 ld.global.L1::evict_last.b16 { %rs2 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	@%p6 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	.loc	1 37 112                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:112
	cvt.f32.bf16 	%f5, %rs2;
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	bar.sync 	0;
	or.b64  	%rd25, %rd42, %rd2;
	.loc	1 43 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:34
	shl.b64 	%rd26, %rd25, 1;
	add.s64 	%rd24, %rd10, %rd26;
	.loc	1 43 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:53
	// begin inline asm
	mov.u16 %rs4, %rs3;
	@%p2 ld.global.L1::evict_last.b16 { %rs4 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 43 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:114
	cvt.f32.bf16 	%f6, %rs4;
	.loc	1 44 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:44:22
	add.f32 	%f7, %f5, %f6;
	.loc	1 48 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:48:25
	fma.rn.f32 	%f8, %f7, %f7, %f22;
	.loc	1 49 50                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:49:50
	selp.f32 	%f22, %f8, %f22, %p2;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	add.s64 	%rd4, %rd42, 4;
	setp.lt.u64 	%p8, %rd42, 4092;
	mov.u64 	%rd42, %rd4;
	@%p8 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r11, %f22;
	shfl.sync.bfly.b32	%r12, %r11, 2, 31, -1;
	mov.b32 	%f9, %r12;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f22, %f9;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r13, %f10;
	shfl.sync.bfly.b32	%r14, %r13, 1, 31, -1;
	mov.b32 	%f11, %r14;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	mov.f32 	%f13, 0f45800000;
$L__tmp2:
	.loc	1 68 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:68:25
	div.full.f32 	%f14, %f12, %f13;
	.loc	1 70 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:70:24
	add.f32 	%f15, %f14, 0f358637BD;
	.loc	1 71 32                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:71:32
	rsqrt.approx.ftz.f32 	%f3, %f15;
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	shl.b64 	%rd28, %rd1, 1;
	add.s64 	%rd43, %rd12, %rd28;
	mov.b64 	%rd44, 0;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	mov.b16 	%rs7, 0;
	mov.pred 	%p9, -1;
	.loc	1 57 42                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:42
	// begin inline asm
	mov.u16 %rs6, %rs7;
	@%p9 ld.global.L1::evict_last.b16 { %rs6 }, [ %rd43 + 0 ];
	// end inline asm
	cvt.u32.u64 	%r15, %rd44;
	or.b32  	%r16, %r2, %r15;
	.loc	1 58 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:35
	mul.wide.s32 	%rd33, %r16, 2;
	add.s64 	%rd30, %rd11, %rd33;
	.loc	1 58 52                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:52
	// begin inline asm
	mov.u16 %rs8, %rs7;
	@%p2 ld.global.L1::evict_first.b16 { %rs8 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	cvt.f32.bf16 	%f16, %rs8;
	.loc	1 57 95                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:95
	cvt.f32.bf16 	%f17, %rs6;
	.loc	1 63 70                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:63:70
	bar.sync 	0;
	or.b64  	%rd34, %rd44, %rd2;
	.loc	1 64 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:35
	shl.b64 	%rd35, %rd34, 1;
	add.s64 	%rd31, %rd10, %rd35;
	.loc	1 64 55                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:55
	// begin inline asm
	mov.u16 %rs10, %rs7;
	@%p2 ld.global.L1::evict_first.b16 { %rs10 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	cvt.f32.bf16 	%f18, %rs10;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f19, %f16, %f18;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f20, %f3, %f19;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	mul.f32 	%f21, %f20, %f17;
	.loc	1 75 29                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:29
	add.s64 	%rd32, %rd13, %rd33;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16.f32 	%rs12, %f21;
	// begin inline asm
	@%p2 st.global.b16 [ %rd32 + 0 ], { %rs12 };
	// end inline asm
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	add.s64 	%rd8, %rd44, 4;
	add.s64 	%rd43, %rd43, 8;
	setp.lt.u64 	%p13, %rd44, 4092;
	mov.u64 	%rd44, %rd8;
	@%p13 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 51 4                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:4
	ret;
$L__BB0_2:
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 116
.b8 110
.b8 53
.b8 108
.b8 109
.b8 98
.b8 97
.b8 105
.b8 100
.b8 97
.b8 55
.b8 100
.b8 119
.b8 102
.b8 106
.b8 104
.b8 54
.b8 119
.b8 50
.b8 111
.b8 100
.b8 112
.b8 107
.b8 103
.b8 112
.b8 117
.b8 108
.b8 54
.b8 109
.b8 109
.b8 103
.b8 104
.b8 117
.b8 99
.b8 121
.b8 121
.b8 52
.b8 120
.b8 114
.b8 103
.b8 113
.b8 119
.b8 115
.b8 116
.b8 100
.b8 119
.b8 114
.b8 107
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 113
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
