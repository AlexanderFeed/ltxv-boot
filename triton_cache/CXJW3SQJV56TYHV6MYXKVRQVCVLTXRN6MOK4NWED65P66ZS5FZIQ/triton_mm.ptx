//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<480>;
	.reg .b64 	%rd<42>;
	.loc	1 17 0                          // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd17, [triton_mm_param_0];
	ld.param.u64 	%rd18, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:40:24
	mov.u32 	%r96, %ctaid.x;
	.loc	1 46 22                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:46:22
	mul.hi.s32 	%r97, %r96, 715827883;
	shr.u32 	%r98, %r97, 31;
	shr.s32 	%r99, %r97, 5;
	add.s32 	%r100, %r99, %r98;
	.loc	1 47 41                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:47:41
	shl.b32 	%r101, %r100, 3;
	.loc	1 47 30                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:47:30
	sub.s32 	%r102, 65, %r101;
	.loc	1 47 50                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:47:50
	min.s32 	%r103, %r102, 8;
	.loc	1 48 40                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:48:40
	rem.s32 	%r104, %r96, %r103;
	.loc	1 48 34                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:48:34
	add.s32 	%r105, %r104, %r101;
	.loc	1 49 19                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:49:19
	mul.lo.s32 	%r106, %r100, 192;
	sub.s32 	%r107, %r96, %r106;
	.loc	1 49 30                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:49:30
	div.s32 	%r108, %r107, %r103;
	.loc	1 51 17                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:51:17
	shl.b32 	%r1, %r105, 6;
	.loc	1 51 40                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r109, %r2, 8;
	and.b32  	%r3, %r2, 16;
	shr.u32 	%r110, %r2, 2;
	and.b32  	%r4, %r2, 128;
	bfe.u32 	%r111, %r2, 2, 6;
	.loc	1 51 27                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:51:27
	or.b32  	%r112, %r1, %r111;
	.loc	1 52 17                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:52:17
	shl.b32 	%r5, %r108, 7;
	.loc	1 52 40                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:52:40
	bfe.u32 	%r113, %r2, 1, 7;
	shl.b32 	%r6, %r2, 2;
	and.b32  	%r114, %r6, 16;
	.loc	1 52 27                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:52:27
	or.b32  	%r115, %r5, %r113;
	.loc	1 54 57                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:54:57
	mul.hi.s32 	%r116, %r112, 2139127681;
	shr.u32 	%r117, %r116, 31;
	shr.s32 	%r118, %r116, 11;
	add.s32 	%r119, %r118, %r117;
	mul.lo.s32 	%r120, %r119, 4112;
	sub.s32 	%r121, %r112, %r120;
	.loc	1 58 57                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:58:57
	mul.hi.s32 	%r122, %r115, 715827883;
	shr.u32 	%r123, %r122, 31;
	shr.u32 	%r124, %r122, 9;
	add.s32 	%r125, %r124, %r123;
	mul.lo.s32 	%r126, %r125, 3072;
	sub.s32 	%r127, %r115, %r126;
	.loc	1 66 30                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:66:30
	shl.b32 	%r128, %r2, 3;
	and.b32  	%r129, %r128, 24;
	.loc	1 67 30                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:67:30
	shl.b32 	%r130, %r2, 4;
	and.b32  	%r131, %r130, 16;
	.loc	1 71 31                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:71:31
	mul.lo.s32 	%r132, %r121, 15360;
	.loc	1 77 56                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:56
	mul.lo.s32 	%r133, %r127, 15360;
	.loc	1 71 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:71:25
	or.b32  	%r134, %r132, %r129;
	.loc	1 72 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:25
	cvt.s64.s32 	%rd19, %r134;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	xor.b32  	%r135, %r129, %r3;
	shl.b32 	%r136, %r111, 5;
	or.b32  	%r137, %r135, %r136;
	mov.u32 	%r138, global_smem;
	add.s32 	%r139, %r138, %r137;
	add.s32 	%r81, %r139, 12288;
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	add.s64 	%rd10, %rd19, %rd17;
	mov.b32 	%r82, 8;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	// begin inline asm
	cp.async.ca.shared.global [ %r81 + 0 ], [ %rd10 + 0 ], 0x8, %r82;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:50
	or.b32  	%r140, %r133, %r131;
	.loc	1 77 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:25
	cvt.s64.s32 	%rd20, %r140;
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	shl.b32 	%r141, %r109, 1;
	xor.b32  	%r142, %r131, %r141;
	shl.b32 	%r143, %r113, 5;
	or.b32  	%r144, %r142, %r143;
	add.s32 	%r83, %r138, %r144;
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	add.s64 	%rd11, %rd20, %rd18;
	mov.b32 	%r84, 16;
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	// begin inline asm
	cp.async.cg.shared.global [ %r83 + 0 ], [ %rd11 + 0 ], 0x10, %r84;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:25
	add.s64 	%rd12, %rd10, 32;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	bar.sync 	0;
	add.s32 	%r85, %r139, 14336;
	// begin inline asm
	cp.async.ca.shared.global [ %r85 + 0 ], [ %rd12 + 0 ], 0x8, %r82;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:25
	add.s64 	%rd13, %rd11, 32;
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	add.s32 	%r87, %r83, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r87 + 0 ], [ %rd13 + 0 ], 0x10, %r84;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:25
	add.s64 	%rd14, %rd10, 64;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	bar.sync 	0;
	add.s32 	%r89, %r139, 16384;
	// begin inline asm
	cp.async.ca.shared.global [ %r89 + 0 ], [ %rd14 + 0 ], 0x8, %r82;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:25
	add.s64 	%rd15, %rd11, 64;
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	add.s32 	%r91, %r83, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r91 + 0 ], [ %rd15 + 0 ], 0x10, %r84;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r145, %r2, 7;
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	or.b32  	%r146, %r109, %r145;
	and.b32  	%r147, %r2, 15;
	xor.b32  	%r148, %r114, %r3;
	shr.u32 	%r149, %r4, 3;
	or.b32  	%r150, %r149, %r147;
	shl.b32 	%r151, %r150, 5;
	or.b32  	%r9, %r151, %r148;
	or.b32  	%r152, %r146, %r149;
	shl.b32 	%r153, %r152, 5;
	or.b32  	%r154, %r153, %r148;
	or.b32  	%r10, %r154, 1024;
	xor.b32  	%r155, %r114, %r141;
	and.b32  	%r11, %r110, 24;
	or.b32  	%r156, %r11, %r145;
	shl.b32 	%r157, %r156, 5;
	or.b32  	%r12, %r157, %r155;
	add.s64 	%rd40, %rd11, 96;
	add.s64 	%rd39, %rd10, 96;
	mov.b32 	%r448, 0;
	mov.b32 	%r447, 2;
	mov.b32 	%r446, -1;
	mov.b64 	%rd41, 0;
	mov.u32 	%r449, %r448;
	mov.u32 	%r450, %r448;
	mov.u32 	%r451, %r448;
	mov.u32 	%r452, %r448;
	mov.u32 	%r453, %r448;
	mov.u32 	%r454, %r448;
	mov.u32 	%r455, %r448;
	mov.u32 	%r456, %r448;
	mov.u32 	%r457, %r448;
	mov.u32 	%r458, %r448;
	mov.u32 	%r459, %r448;
	mov.u32 	%r460, %r448;
	mov.u32 	%r461, %r448;
	mov.u32 	%r462, %r448;
	mov.u32 	%r463, %r448;
	mov.u32 	%r464, %r448;
	mov.u32 	%r465, %r448;
	mov.u32 	%r466, %r448;
	mov.u32 	%r467, %r448;
	mov.u32 	%r468, %r448;
	mov.u32 	%r469, %r448;
	mov.u32 	%r470, %r448;
	mov.u32 	%r471, %r448;
	mov.u32 	%r472, %r448;
	mov.u32 	%r473, %r448;
	mov.u32 	%r474, %r448;
	mov.u32 	%r475, %r448;
	mov.u32 	%r476, %r448;
	mov.u32 	%r477, %r448;
	mov.u32 	%r478, %r448;
	mov.u32 	%r479, %r448;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd41, 477;
	add.s32 	%r296, %r446, 1;
	setp.lt.s32 	%p2, %r296, 3;
	selp.b32 	%r446, %r296, 0, %p2;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r297, %r446, 11;
	add.s32 	%r299, %r138, %r297;
	add.s32 	%r300, %r299, 12288;
	add.s32 	%r162, %r300, %r9;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r188, %r189, %r190, %r191}, [%r162];
	// end inline asm
	add.s32 	%r167, %r300, %r10;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r244, %r245, %r246, %r247}, [%r167];
	// end inline asm
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	shl.b32 	%r301, %r446, 12;
	add.s32 	%r302, %r138, %r301;
	add.s32 	%r170, %r302, %r12;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r192, %r193}, [%r170];
	// end inline asm
	add.s32 	%r173, %r170, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r206, %r207}, [%r173];
	// end inline asm
	add.s32 	%r176, %r170, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r220, %r221}, [%r176];
	// end inline asm
	add.s32 	%r179, %r170, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r234, %r235}, [%r179];
	// end inline asm
	.loc	1 78 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r448, %r449, %r450, %r451 }, { %r188, %r189, %r190, %r191 }, { %r192, %r193 }, { %r448, %r449, %r450, %r451 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r452, %r453, %r454, %r455 }, { %r188, %r189, %r190, %r191 }, { %r206, %r207 }, { %r452, %r453, %r454, %r455 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r456, %r457, %r458, %r459 }, { %r188, %r189, %r190, %r191 }, { %r220, %r221 }, { %r456, %r457, %r458, %r459 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r460, %r461, %r462, %r463 }, { %r188, %r189, %r190, %r191 }, { %r234, %r235 }, { %r460, %r461, %r462, %r463 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r464, %r465, %r466, %r467 }, { %r244, %r245, %r246, %r247 }, { %r192, %r193 }, { %r464, %r465, %r466, %r467 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r468, %r469, %r470, %r471 }, { %r244, %r245, %r246, %r247 }, { %r206, %r207 }, { %r468, %r469, %r470, %r471 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r472, %r473, %r474, %r475 }, { %r244, %r245, %r246, %r247 }, { %r220, %r221 }, { %r472, %r473, %r474, %r475 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r476, %r477, %r478, %r479 }, { %r244, %r245, %r246, %r247 }, { %r234, %r235 }, { %r476, %r477, %r478, %r479 };
	// end inline asm
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	add.s32 	%r303, %r447, 1;
	setp.lt.s32 	%p3, %r303, 3;
	selp.b32 	%r447, %r303, 0, %p3;
	.loc	1 72 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:72:20
	shl.b32 	%r304, %r447, 11;
	bar.sync 	0;
	add.s32 	%r292, %r81, %r304;
	selp.b32 	%r293, 8, 0, %p1;
	// begin inline asm
	cp.async.ca.shared.global [ %r292 + 0 ], [ %rd39 + 0 ], 0x8, %r293;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:77:20
	shl.b32 	%r305, %r447, 12;
	add.s32 	%r294, %r83, %r305;
	selp.b32 	%r295, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r294 + 0 ], [ %rd40 + 0 ], 0x10, %r295;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	add.s64 	%rd41, %rd41, 1;
	add.s64 	%rd40, %rd40, 32;
	add.s64 	%rd39, %rd39, 32;
	setp.ne.s64 	%p4, %rd41, 480;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:52:40
	and.b32  	%r386, %r6, 124;
	.loc	1 52 27                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:52:27
	or.b32  	%r387, %r5, %r386;
	.loc	1 51 40                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:51:40
	bfe.u32 	%r388, %r2, 5, 3;
	.loc	1 51 27                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:51:27
	or.b32  	%r389, %r388, %r1;
	or.b32  	%r390, %r389, 56;
	or.b32  	%r391, %r389, 48;
	or.b32  	%r392, %r389, 40;
	or.b32  	%r393, %r389, 32;
	or.b32  	%r394, %r389, 24;
	or.b32  	%r395, %r389, 16;
	or.b32  	%r396, %r389, 8;
	.loc	1 64 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:85:20
	setp.lt.s32 	%p29, %r389, 4112;
	setp.lt.s32 	%p30, %r396, 4112;
	setp.lt.s32 	%p31, %r395, 4112;
	setp.lt.s32 	%p32, %r394, 4112;
	setp.lt.s32 	%p33, %r393, 4112;
	setp.lt.s32 	%p34, %r392, 4112;
	setp.lt.s32 	%p35, %r391, 4112;
	setp.lt.s32 	%p36, %r390, 4112;
	.loc	1 85 34                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:85:34
	setp.lt.s32 	%p37, %r387, 3072;
	.loc	1 85 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:85:26
	and.pred  	%p21, %p29, %p37;
	and.pred  	%p22, %p30, %p37;
	and.pred  	%p23, %p31, %p37;
	and.pred  	%p24, %p32, %p37;
	and.pred  	%p25, %p33, %p37;
	and.pred  	%p26, %p34, %p37;
	and.pred  	%p27, %p35, %p37;
	and.pred  	%p28, %p36, %p37;
	.loc	1 88 26                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:88:26
	mad.lo.s32 	%r397, %r389, 3072, %r387;
	add.s32 	%r398, %r397, 24576;
	add.s32 	%r399, %r397, 49152;
	add.s32 	%r400, %r397, 73728;
	add.s32 	%r401, %r397, 98304;
	add.s32 	%r402, %r397, 122880;
	add.s32 	%r403, %r397, 147456;
	.loc	1 88 21                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:88:21
	add.s32 	%r404, %r397, 172032;
	.loc	1 89 25                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:89:25
	mul.wide.s32 	%rd31, %r397, 4;
	add.s64 	%rd23, %rd9, %rd31;
	mul.wide.s32 	%rd32, %r398, 4;
	add.s64 	%rd24, %rd9, %rd32;
	mul.wide.s32 	%rd33, %r399, 4;
	add.s64 	%rd25, %rd9, %rd33;
	mul.wide.s32 	%rd34, %r400, 4;
	add.s64 	%rd26, %rd9, %rd34;
	mul.wide.s32 	%rd35, %r401, 4;
	add.s64 	%rd27, %rd9, %rd35;
	mul.wide.s32 	%rd36, %r402, 4;
	add.s64 	%rd28, %rd9, %rd36;
	mul.wide.s32 	%rd37, %r403, 4;
	add.s64 	%rd29, %rd9, %rd37;
	mul.wide.s32 	%rd38, %r404, 4;
	add.s64 	%rd30, %rd9, %rd38;
	.loc	1 89 67                         // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:89:67
	shl.b32 	%r405, %r2, 1;
	and.b32  	%r406, %r405, 6;
	shl.b32 	%r407, %r2, 5;
	and.b32  	%r408, %r407, 384;
	or.b32  	%r409, %r408, %r406;
	shl.b32 	%r410, %r3, 5;
	or.b32  	%r411, %r409, %r410;
	shl.b32 	%r412, %r4, 4;
	or.b32  	%r413, %r411, %r412;
	or.b32  	%r414, %r11, %r413;
	and.b32  	%r415, %r6, 1020;
	shr.u32 	%r416, %r413, 3;
	and.b32  	%r417, %r416, 508;
	add.s32 	%r419, %r138, %r417;
	shl.b32 	%r420, %r414, 2;
	add.s32 	%r306, %r419, %r420;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r306 + 0 ], { %r448, %r449 };
	// end inline asm
	or.b32  	%r421, %r413, 1024;
	shr.u32 	%r422, %r421, 3;
	and.b32  	%r423, %r422, 496;
	add.s32 	%r424, %r138, %r423;
	add.s32 	%r425, %r424, %r420;
	add.s32 	%r309, %r425, 4096;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r309 + 0 ], { %r450, %r451 };
	// end inline asm
	add.s32 	%r312, %r306, 128;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r312 + 0 ], { %r452, %r453 };
	// end inline asm
	add.s32 	%r315, %r425, 4224;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r315 + 0 ], { %r454, %r455 };
	// end inline asm
	add.s32 	%r318, %r306, 256;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r318 + 0 ], { %r456, %r457 };
	// end inline asm
	add.s32 	%r321, %r425, 4352;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r321 + 0 ], { %r458, %r459 };
	// end inline asm
	add.s32 	%r324, %r306, 384;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r324 + 0 ], { %r460, %r461 };
	// end inline asm
	add.s32 	%r327, %r425, 4480;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r327 + 0 ], { %r462, %r463 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r426, %r6, 3;
	and.b32  	%r427, %r426, 112;
	add.s32 	%r428, %r138, %r427;
	shl.b32 	%r429, %r415, 2;
	add.s32 	%r430, %r428, %r429;
	ld.shared.v4.u32 	{%r354, %r355, %r356, %r357}, [%r430];
	or.b32  	%r431, %r415, 1024;
	shr.u32 	%r432, %r431, 3;
	and.b32  	%r433, %r432, 240;
	add.s32 	%r434, %r138, %r433;
	add.s32 	%r435, %r434, %r429;
	ld.shared.v4.u32 	{%r358, %r359, %r360, %r361}, [%r435+4096];
	or.b32  	%r436, %r415, 2048;
	shr.u32 	%r437, %r436, 3;
	and.b32  	%r438, %r437, 368;
	add.s32 	%r439, %r138, %r438;
	add.s32 	%r440, %r439, %r429;
	ld.shared.v4.u32 	{%r362, %r363, %r364, %r365}, [%r440+8192];
	or.b32  	%r441, %r415, 3072;
	shr.u32 	%r442, %r441, 3;
	and.b32  	%r443, %r442, 496;
	add.s32 	%r444, %r138, %r443;
	add.s32 	%r445, %r444, %r429;
	ld.shared.v4.u32 	{%r366, %r367, %r368, %r369}, [%r445+12288];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r306 + 0 ], { %r464, %r465 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r309 + 0 ], { %r466, %r467 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r312 + 0 ], { %r468, %r469 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r315 + 0 ], { %r470, %r471 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r318 + 0 ], { %r472, %r473 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r321 + 0 ], { %r474, %r475 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r324 + 0 ], { %r476, %r477 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r327 + 0 ], { %r478, %r479 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r370, %r371, %r372, %r373}, [%r430];
	ld.shared.v4.u32 	{%r374, %r375, %r376, %r377}, [%r435+4096];
	ld.shared.v4.u32 	{%r378, %r379, %r380, %r381}, [%r440+8192];
	ld.shared.v4.u32 	{%r382, %r383, %r384, %r385}, [%r445+12288];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd23 + 0 ], { %r354, %r355, %r356, %r357 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd24 + 0 ], { %r358, %r359, %r360, %r361 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd25 + 0 ], { %r362, %r363, %r364, %r365 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd26 + 0 ], { %r366, %r367, %r368, %r369 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd27 + 0 ], { %r370, %r371, %r372, %r373 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd28 + 0 ], { %r374, %r375, %r376, %r377 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd29 + 0 ], { %r378, %r379, %r380, %r381 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd30 + 0 ], { %r382, %r383, %r384, %r385 };
	// end inline asm
	.loc	1 89 4                          // cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/wm/cwm2rbg5gkjrvg3hmspg5unssvklkp7xszci5kp5sybtf3wjmstr.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 109
.b8 50
.b8 114
.b8 98
.b8 103
.b8 53
.b8 103
.b8 107
.b8 106
.b8 114
.b8 118
.b8 103
.b8 51
.b8 104
.b8 109
.b8 115
.b8 112
.b8 103
.b8 53
.b8 117
.b8 110
.b8 115
.b8 115
.b8 118
.b8 107
.b8 108
.b8 107
.b8 112
.b8 55
.b8 120
.b8 115
.b8 122
.b8 99
.b8 105
.b8 53
.b8 107
.b8 112
.b8 53
.b8 115
.b8 121
.b8 98
.b8 116
.b8 102
.b8 51
.b8 119
.b8 106
.b8 109
.b8 115
.b8 116
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 119
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
