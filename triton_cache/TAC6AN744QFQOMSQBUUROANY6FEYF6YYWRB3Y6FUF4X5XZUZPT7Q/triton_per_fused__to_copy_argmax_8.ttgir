#blocked = #ttg.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":18:0)
#loc1 = loc(unknown)
#loc9 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":38:67)
#loc21 = loc(callsite(#loc1 at #loc9))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_argmax_8(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":18:0), %arg2: i32 loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-2147483648> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x128xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<77> : tensor<1x128xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc2)
    %2 = arith.cmpi slt, %1, %cst_1 : tensor<1x128xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x128x!tt.ptr<i64>, #blocked> loc(#loc4)
    %4 = tt.addptr %3, %1 : tensor<1x128x!tt.ptr<i64>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc4)
    %5 = tt.load %4, %2, %cst_0 : tensor<1x128x!tt.ptr<i64>, #blocked> loc(#loc5)
    %6 = arith.trunci %5 : tensor<1x128xi64, #blocked> to tensor<1x128xi32, #blocked> loc(#loc6)
    %7 = arith.select %2, %6, %cst : tensor<1x128xi1, #blocked>, tensor<1x128xi32, #blocked> loc(#loc7)
    %8:2 = "tt.reduce"(%7, %1) <{axis = 1 : i32}> ({
    ^bb0(%arg3: i32 loc(callsite(#loc1 at #loc9)), %arg4: i32 loc(callsite(#loc1 at #loc9)), %arg5: i32 loc(callsite(#loc1 at #loc9)), %arg6: i32 loc(callsite(#loc1 at #loc9))):
      %13 = arith.cmpi sgt, %arg3, %arg5 : i32 loc(#loc29)
      %14 = arith.cmpi eq, %arg3, %arg5 : i32 loc(#loc30)
      %15 = arith.cmpi slt, %arg4, %arg6 : i32 loc(#loc31)
      %16 = arith.andi %14, %15 : i1 loc(#loc32)
      %17 = arith.ori %13, %16 : i1 loc(#loc33)
      %18 = arith.select %17, %arg3, %arg5 : i32 loc(#loc34)
      %19 = arith.select %17, %arg4, %arg6 : i32 loc(#loc35)
      tt.reduce.return %18, %19 : i32, i32 loc(#loc20)
    }) : (tensor<1x128xi32, #blocked>, tensor<1x128xi32, #blocked>) -> (tensor<1xi32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<1xi32, #ttg.slice<{dim = 1, parent = #blocked}>>) loc(#loc20)
    %9 = tt.expand_dims %8#1 {axis = 1 : i32} : tensor<1xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xi32, #blocked> loc(#loc17)
    %10 = ttg.convert_layout %9 : tensor<1x1xi32, #blocked> -> tensor<1x1xi32, #blocked1> loc(#loc18)
    %11 = arith.extsi %10 : tensor<1x1xi32, #blocked1> to tensor<1x1xi64, #blocked1> loc(#loc18)
    %12 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>, #blocked1> loc(#loc18)
    tt.store %12, %11 : tensor<1x1x!tt.ptr<i64>, #blocked1> loc(#loc18)
    tt.return loc(#loc19)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":27:38)
#loc3 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":29:25)
#loc4 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":33:30)
#loc5 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":33:37)
#loc6 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":34:19)
#loc7 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":36:35)
#loc8 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":157:42)
#loc10 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":136:21)
#loc11 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":137:23)
#loc12 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":146:31)
#loc13 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":146:21)
#loc14 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":146:12)
#loc15 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":147:35)
#loc16 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":147:69)
#loc17 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":39:20)
#loc18 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":40:67)
#loc19 = loc("/tmp/torchinductor_root/k5/ck5hfyaur72qse63n4hmqh32l42vaxnglabcc7vjmxcibztzh2a3.py":40:4)
#loc20 = loc(callsite(#loc8 at #loc9))
#loc22 = loc(callsite(#loc10 at #loc8))
#loc23 = loc(callsite(#loc11 at #loc8))
#loc24 = loc(callsite(#loc12 at #loc8))
#loc25 = loc(callsite(#loc13 at #loc8))
#loc26 = loc(callsite(#loc14 at #loc8))
#loc27 = loc(callsite(#loc15 at #loc8))
#loc28 = loc(callsite(#loc16 at #loc8))
#loc29 = loc(callsite(#loc22 at #loc9))
#loc30 = loc(callsite(#loc23 at #loc9))
#loc31 = loc(callsite(#loc24 at #loc9))
#loc32 = loc(callsite(#loc25 at #loc9))
#loc33 = loc(callsite(#loc26 at #loc9))
#loc34 = loc(callsite(#loc27 at #loc9))
#loc35 = loc(callsite(#loc28 at #loc9))
