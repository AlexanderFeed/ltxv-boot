; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 6, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = lshr i32 %11, 3, !dbg !11
  %13 = and i32 %12, 63, !dbg !11
  %14 = or disjoint i32 %13, %10, !dbg !12
  %15 = icmp slt i32 %14, 4112, !dbg !13
  %16 = shl i32 %11, 3, !dbg !14
  %17 = and i32 %16, 56, !dbg !14
  %18 = or disjoint i32 %17, 4, !dbg !14
  %19 = mul i32 %14, 3072, !dbg !15
  %20 = mul i32 %14, 12288, !dbg !16
  %21 = add i32 %20, -3072
  %22 = or disjoint i32 %21, %18
  %23 = insertelement <8 x i1> poison, i1 %15, i64 0, !dbg !17
  %24 = shufflevector <8 x i1> %23, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !17
  br label %25, !dbg !18

25:                                               ; preds = %8, %__nv_tanhf.exit289
  %indvars.iv = phi i64 [ 0, %8 ], [ %indvars.iv.next, %__nv_tanhf.exit289 ]
  %26 = phi <8 x float> [ splat (float 0xFFF0000000000000), %8 ], [ %417, %__nv_tanhf.exit289 ]
  %27 = phi <8 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %413, %__nv_tanhf.exit289 ]
  %28 = icmp samesign ult i64 %indvars.iv, 3072, !dbg !19
  %29 = trunc i64 %indvars.iv to i32, !dbg !20
  %30 = or disjoint i32 %17, %29, !dbg !20
  %31 = add i32 %30, %19, !dbg !20
  %32 = sext i32 %31 to i64, !dbg !21
  %33 = getelementptr bfloat, ptr addrspace(1) %0, i64 %32, !dbg !21
  %34 = and i1 %15, %28, !dbg !22
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %33, i1 %34) #5, !dbg !23
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !23
  %37 = bitcast i32 %36 to <2 x bfloat>, !dbg !23
  %38 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !23
  %39 = bitcast i32 %38 to <2 x bfloat>, !dbg !23
  %40 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !23
  %41 = bitcast i32 %40 to <2 x bfloat>, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !23
  %43 = bitcast i32 %42 to <2 x bfloat>, !dbg !23
  %44 = shufflevector <2 x bfloat> %43, <2 x bfloat> %41, <8 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !24
  %45 = shufflevector <2 x bfloat> %39, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !24
  %46 = shufflevector <8 x bfloat> %44, <8 x bfloat> %45, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 9, i32 poison, i32 poison, i32 poison>, !dbg !24
  %47 = shufflevector <2 x bfloat> %39, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !24
  %48 = shufflevector <8 x bfloat> %46, <8 x bfloat> %47, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !24
  %49 = shufflevector <2 x bfloat> %37, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !24
  %50 = shufflevector <8 x bfloat> %48, <8 x bfloat> %49, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 9, i32 poison>, !dbg !24
  %51 = shufflevector <2 x bfloat> %37, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !24
  %52 = shufflevector <8 x bfloat> %50, <8 x bfloat> %51, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !24
  %53 = fpext <8 x bfloat> %52 to <8 x float>, !dbg !24
  %54 = icmp samesign ugt i64 %indvars.iv, 3071, !dbg !25
  %55 = add i32 %21, %30, !dbg !26
  %56 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !26
  %57 = add i32 %22, %56, !dbg !26
  %58 = sext i32 %55 to i64, !dbg !27
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !27
  %60 = sext i32 %57 to i64, !dbg !27
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %60, !dbg !27
  %62 = and i1 %15, %54, !dbg !28
  %63 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %59, i1 %62) #5, !dbg !29
  %64 = extractvalue { i32, i32, i32, i32 } %63, 0, !dbg !29
  %65 = extractvalue { i32, i32, i32, i32 } %63, 1, !dbg !29
  %66 = extractvalue { i32, i32, i32, i32 } %63, 2, !dbg !29
  %67 = extractvalue { i32, i32, i32, i32 } %63, 3, !dbg !29
  %68 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %61, i1 %62) #5, !dbg !29
  %69 = extractvalue { i32, i32, i32, i32 } %68, 0, !dbg !29
  %70 = extractvalue { i32, i32, i32, i32 } %68, 1, !dbg !29
  %71 = extractvalue { i32, i32, i32, i32 } %68, 2, !dbg !29
  %72 = extractvalue { i32, i32, i32, i32 } %68, 3, !dbg !29
  %73 = insertelement <8 x i32> poison, i32 %72, i64 0, !dbg !29
  %74 = insertelement <8 x i32> %73, i32 %71, i64 1, !dbg !29
  %75 = insertelement <8 x i32> %74, i32 %70, i64 2, !dbg !29
  %76 = insertelement <8 x i32> %75, i32 %69, i64 3, !dbg !29
  %77 = insertelement <8 x i32> %76, i32 %67, i64 4, !dbg !29
  %78 = insertelement <8 x i32> %77, i32 %66, i64 5, !dbg !29
  %79 = insertelement <8 x i32> %78, i32 %65, i64 6, !dbg !29
  %80 = insertelement <8 x i32> %79, i32 %64, i64 7, !dbg !29
  %81 = bitcast <8 x i32> %80 to <8 x float>, !dbg !29
  %82 = fmul <8 x float> %81, splat (float 5.000000e-01), !dbg !30
  %83 = bitcast i32 %64 to float, !dbg !31
  %84 = fmul float %83, %83, !dbg !31
  %85 = bitcast i32 %65 to float, !dbg !31
  %86 = fmul float %85, %85, !dbg !31
  %87 = bitcast i32 %66 to float, !dbg !31
  %88 = fmul float %87, %87, !dbg !31
  %89 = bitcast i32 %67 to float, !dbg !31
  %90 = fmul float %89, %89, !dbg !31
  %91 = bitcast i32 %69 to float, !dbg !31
  %92 = fmul float %91, %91, !dbg !31
  %93 = bitcast i32 %70 to float, !dbg !31
  %94 = fmul float %93, %93, !dbg !31
  %95 = bitcast i32 %71 to float, !dbg !31
  %96 = fmul float %95, %95, !dbg !31
  %97 = bitcast i32 %72 to float, !dbg !31
  %98 = fmul float %97, %97, !dbg !31
  %99 = fmul float %84, %83, !dbg !32
  %100 = fmul float %86, %85, !dbg !32
  %101 = fmul float %88, %87, !dbg !32
  %102 = fmul float %90, %89, !dbg !32
  %103 = fmul float %92, %91, !dbg !32
  %104 = fmul float %94, %93, !dbg !32
  %105 = fmul float %96, %95, !dbg !32
  %106 = fmul float %98, %97, !dbg !32
  %107 = fmul float %99, 0x3FA6E4E260000000, !dbg !33
  %108 = fmul float %100, 0x3FA6E4E260000000, !dbg !33
  %109 = fmul float %101, 0x3FA6E4E260000000, !dbg !33
  %110 = fmul float %102, 0x3FA6E4E260000000, !dbg !33
  %111 = fmul float %103, 0x3FA6E4E260000000, !dbg !33
  %112 = fmul float %104, 0x3FA6E4E260000000, !dbg !33
  %113 = fmul float %105, 0x3FA6E4E260000000, !dbg !33
  %114 = fmul float %106, 0x3FA6E4E260000000, !dbg !33
  %115 = fadd float %107, %83, !dbg !34
  %116 = fadd float %108, %85, !dbg !34
  %117 = fadd float %109, %87, !dbg !34
  %118 = fadd float %110, %89, !dbg !34
  %119 = fadd float %111, %91, !dbg !34
  %120 = fadd float %112, %93, !dbg !34
  %121 = fadd float %113, %95, !dbg !34
  %122 = fadd float %114, %97, !dbg !34
  %123 = fmul float %115, 0x3FE9884540000000, !dbg !35
  %124 = fmul float %116, 0x3FE9884540000000, !dbg !35
  %125 = fmul float %117, 0x3FE9884540000000, !dbg !35
  %126 = fmul float %118, 0x3FE9884540000000, !dbg !35
  %127 = fmul float %119, 0x3FE9884540000000, !dbg !35
  %128 = fmul float %120, 0x3FE9884540000000, !dbg !35
  %129 = fmul float %121, 0x3FE9884540000000, !dbg !35
  %130 = fmul float %122, 0x3FE9884540000000, !dbg !35
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i138 = icmp eq i32 %131, 0, !dbg !36
  %132 = tail call float @llvm.nvvm.fabs.ftz.f(float %123) #5, !dbg !36
  %133 = tail call float @llvm.nvvm.fabs.f(float %123) #5, !dbg !36
  %.01.i139 = select i1 %.not.i138, float %133, float %132, !dbg !36
  %134 = fcmp ult float %.01.i139, 0x3FE3333340000000, !dbg !36
  br i1 %134, label %__internal_fmad.exit3.i145, label %__internal_fmad.exit1.i140, !dbg !36

__internal_fmad.exit1.i140:                       ; preds = %25
  %135 = fmul float %.01.i139, 0x4007154760000000, !dbg !36
  %136 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %135) #5, !dbg !36
  %137 = fadd float %136, 1.000000e+00, !dbg !36
  %138 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %137) #6, !dbg !36, !srcloc !37
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i141 = icmp eq i32 %139, 0, !dbg !36
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i142 = select i1 %.not6.i141, float %141, float %140, !dbg !36
  %142 = fcmp oge float %.01.i139, 0x4022059680000000, !dbg !36
  %s.0.i143 = select i1 %142, float 1.000000e+00, float %.03.i142, !dbg !36
  %143 = bitcast float %s.0.i143 to i32, !dbg !36
  %144 = bitcast float %123 to i32, !dbg !36
  %145 = and i32 %144, -2147483648, !dbg !36
  %146 = or i32 %145, %143, !dbg !36
  %147 = bitcast i32 %146 to float, !dbg !36
  br label %__nv_tanhf.exit156, !dbg !36

__internal_fmad.exit3.i145:                       ; preds = %25
  %148 = fmul float %123, %123, !dbg !36
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i146 = icmp eq i32 %149, 0, !dbg !36
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %148, float 0xBFAAC795C0000000) #5, !dbg !36
  %151 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %148, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i147 = select i1 %.not1.i146, float %151, float %150, !dbg !36
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i148 = icmp eq i32 %152, 0, !dbg !36
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i147, float %148, float 0x3FC10B2820000000) #5, !dbg !36
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i147, float %148, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i149 = select i1 %.not2.i148, float %154, float %153, !dbg !36
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i150 = icmp eq i32 %155, 0, !dbg !36
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i149, float %148, float 0xBFD5553DA0000000) #5, !dbg !36
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i149, float %148, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i151 = select i1 %.not3.i150, float %157, float %156, !dbg !36
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i152 = icmp eq i32 %158, 0, !dbg !36
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i151, float %148, float 0.000000e+00) #5, !dbg !36
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i151, float %148, float 0.000000e+00) #5, !dbg !36
  %.04.i153 = select i1 %.not4.i152, float %160, float %159, !dbg !36
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i154 = icmp eq i32 %161, 0, !dbg !36
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i153, float %123, float %123) #5, !dbg !36
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i153, float %123, float %123) #5, !dbg !36
  %.02.i155 = select i1 %.not5.i154, float %163, float %162, !dbg !36
  br label %__nv_tanhf.exit156, !dbg !36

__nv_tanhf.exit156:                               ; preds = %__internal_fmad.exit1.i140, %__internal_fmad.exit3.i145
  %s.1.i144 = phi float [ %147, %__internal_fmad.exit1.i140 ], [ %.02.i155, %__internal_fmad.exit3.i145 ], !dbg !36
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i157 = icmp eq i32 %164, 0, !dbg !36
  %165 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #5, !dbg !36
  %166 = tail call float @llvm.nvvm.fabs.f(float %124) #5, !dbg !36
  %.01.i158 = select i1 %.not.i157, float %166, float %165, !dbg !36
  %167 = fcmp ult float %.01.i158, 0x3FE3333340000000, !dbg !36
  br i1 %167, label %__internal_fmad.exit3.i164, label %__internal_fmad.exit1.i159, !dbg !36

__internal_fmad.exit1.i159:                       ; preds = %__nv_tanhf.exit156
  %168 = fmul float %.01.i158, 0x4007154760000000, !dbg !36
  %169 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %168) #5, !dbg !36
  %170 = fadd float %169, 1.000000e+00, !dbg !36
  %171 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %170) #6, !dbg !36, !srcloc !37
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i160 = icmp eq i32 %172, 0, !dbg !36
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %171, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i161 = select i1 %.not6.i160, float %174, float %173, !dbg !36
  %175 = fcmp oge float %.01.i158, 0x4022059680000000, !dbg !36
  %s.0.i162 = select i1 %175, float 1.000000e+00, float %.03.i161, !dbg !36
  %176 = bitcast float %s.0.i162 to i32, !dbg !36
  %177 = bitcast float %124 to i32, !dbg !36
  %178 = and i32 %177, -2147483648, !dbg !36
  %179 = or i32 %178, %176, !dbg !36
  %180 = bitcast i32 %179 to float, !dbg !36
  br label %__nv_tanhf.exit175, !dbg !36

__internal_fmad.exit3.i164:                       ; preds = %__nv_tanhf.exit156
  %181 = fmul float %124, %124, !dbg !36
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i165 = icmp eq i32 %182, 0, !dbg !36
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %181, float 0xBFAAC795C0000000) #5, !dbg !36
  %184 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %181, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i166 = select i1 %.not1.i165, float %184, float %183, !dbg !36
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i167 = icmp eq i32 %185, 0, !dbg !36
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i166, float %181, float 0x3FC10B2820000000) #5, !dbg !36
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i166, float %181, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i168 = select i1 %.not2.i167, float %187, float %186, !dbg !36
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i169 = icmp eq i32 %188, 0, !dbg !36
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i168, float %181, float 0xBFD5553DA0000000) #5, !dbg !36
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i168, float %181, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i170 = select i1 %.not3.i169, float %190, float %189, !dbg !36
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i171 = icmp eq i32 %191, 0, !dbg !36
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i170, float %181, float 0.000000e+00) #5, !dbg !36
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i170, float %181, float 0.000000e+00) #5, !dbg !36
  %.04.i172 = select i1 %.not4.i171, float %193, float %192, !dbg !36
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i173 = icmp eq i32 %194, 0, !dbg !36
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i172, float %124, float %124) #5, !dbg !36
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i172, float %124, float %124) #5, !dbg !36
  %.02.i174 = select i1 %.not5.i173, float %196, float %195, !dbg !36
  br label %__nv_tanhf.exit175, !dbg !36

__nv_tanhf.exit175:                               ; preds = %__internal_fmad.exit1.i159, %__internal_fmad.exit3.i164
  %s.1.i163 = phi float [ %180, %__internal_fmad.exit1.i159 ], [ %.02.i174, %__internal_fmad.exit3.i164 ], !dbg !36
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i176 = icmp eq i32 %197, 0, !dbg !36
  %198 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #5, !dbg !36
  %199 = tail call float @llvm.nvvm.fabs.f(float %125) #5, !dbg !36
  %.01.i177 = select i1 %.not.i176, float %199, float %198, !dbg !36
  %200 = fcmp ult float %.01.i177, 0x3FE3333340000000, !dbg !36
  br i1 %200, label %__internal_fmad.exit3.i183, label %__internal_fmad.exit1.i178, !dbg !36

__internal_fmad.exit1.i178:                       ; preds = %__nv_tanhf.exit175
  %201 = fmul float %.01.i177, 0x4007154760000000, !dbg !36
  %202 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %201) #5, !dbg !36
  %203 = fadd float %202, 1.000000e+00, !dbg !36
  %204 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %203) #6, !dbg !36, !srcloc !37
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i179 = icmp eq i32 %205, 0, !dbg !36
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %204, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %204, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i180 = select i1 %.not6.i179, float %207, float %206, !dbg !36
  %208 = fcmp oge float %.01.i177, 0x4022059680000000, !dbg !36
  %s.0.i181 = select i1 %208, float 1.000000e+00, float %.03.i180, !dbg !36
  %209 = bitcast float %s.0.i181 to i32, !dbg !36
  %210 = bitcast float %125 to i32, !dbg !36
  %211 = and i32 %210, -2147483648, !dbg !36
  %212 = or i32 %211, %209, !dbg !36
  %213 = bitcast i32 %212 to float, !dbg !36
  br label %__nv_tanhf.exit194, !dbg !36

__internal_fmad.exit3.i183:                       ; preds = %__nv_tanhf.exit175
  %214 = fmul float %125, %125, !dbg !36
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i184 = icmp eq i32 %215, 0, !dbg !36
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %214, float 0xBFAAC795C0000000) #5, !dbg !36
  %217 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %214, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i185 = select i1 %.not1.i184, float %217, float %216, !dbg !36
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i186 = icmp eq i32 %218, 0, !dbg !36
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i185, float %214, float 0x3FC10B2820000000) #5, !dbg !36
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i185, float %214, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i187 = select i1 %.not2.i186, float %220, float %219, !dbg !36
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i188 = icmp eq i32 %221, 0, !dbg !36
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i187, float %214, float 0xBFD5553DA0000000) #5, !dbg !36
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i187, float %214, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i189 = select i1 %.not3.i188, float %223, float %222, !dbg !36
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i190 = icmp eq i32 %224, 0, !dbg !36
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i189, float %214, float 0.000000e+00) #5, !dbg !36
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i189, float %214, float 0.000000e+00) #5, !dbg !36
  %.04.i191 = select i1 %.not4.i190, float %226, float %225, !dbg !36
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i192 = icmp eq i32 %227, 0, !dbg !36
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i191, float %125, float %125) #5, !dbg !36
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i191, float %125, float %125) #5, !dbg !36
  %.02.i193 = select i1 %.not5.i192, float %229, float %228, !dbg !36
  br label %__nv_tanhf.exit194, !dbg !36

__nv_tanhf.exit194:                               ; preds = %__internal_fmad.exit1.i178, %__internal_fmad.exit3.i183
  %s.1.i182 = phi float [ %213, %__internal_fmad.exit1.i178 ], [ %.02.i193, %__internal_fmad.exit3.i183 ], !dbg !36
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i195 = icmp eq i32 %230, 0, !dbg !36
  %231 = tail call float @llvm.nvvm.fabs.ftz.f(float %126) #5, !dbg !36
  %232 = tail call float @llvm.nvvm.fabs.f(float %126) #5, !dbg !36
  %.01.i196 = select i1 %.not.i195, float %232, float %231, !dbg !36
  %233 = fcmp ult float %.01.i196, 0x3FE3333340000000, !dbg !36
  br i1 %233, label %__internal_fmad.exit3.i202, label %__internal_fmad.exit1.i197, !dbg !36

__internal_fmad.exit1.i197:                       ; preds = %__nv_tanhf.exit194
  %234 = fmul float %.01.i196, 0x4007154760000000, !dbg !36
  %235 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %234) #5, !dbg !36
  %236 = fadd float %235, 1.000000e+00, !dbg !36
  %237 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %236) #6, !dbg !36, !srcloc !37
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i198 = icmp eq i32 %238, 0, !dbg !36
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i199 = select i1 %.not6.i198, float %240, float %239, !dbg !36
  %241 = fcmp oge float %.01.i196, 0x4022059680000000, !dbg !36
  %s.0.i200 = select i1 %241, float 1.000000e+00, float %.03.i199, !dbg !36
  %242 = bitcast float %s.0.i200 to i32, !dbg !36
  %243 = bitcast float %126 to i32, !dbg !36
  %244 = and i32 %243, -2147483648, !dbg !36
  %245 = or i32 %244, %242, !dbg !36
  %246 = bitcast i32 %245 to float, !dbg !36
  br label %__nv_tanhf.exit213, !dbg !36

__internal_fmad.exit3.i202:                       ; preds = %__nv_tanhf.exit194
  %247 = fmul float %126, %126, !dbg !36
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i203 = icmp eq i32 %248, 0, !dbg !36
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %247, float 0xBFAAC795C0000000) #5, !dbg !36
  %250 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %247, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i204 = select i1 %.not1.i203, float %250, float %249, !dbg !36
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i205 = icmp eq i32 %251, 0, !dbg !36
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i204, float %247, float 0x3FC10B2820000000) #5, !dbg !36
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i204, float %247, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i206 = select i1 %.not2.i205, float %253, float %252, !dbg !36
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i207 = icmp eq i32 %254, 0, !dbg !36
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i206, float %247, float 0xBFD5553DA0000000) #5, !dbg !36
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i206, float %247, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i208 = select i1 %.not3.i207, float %256, float %255, !dbg !36
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i209 = icmp eq i32 %257, 0, !dbg !36
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i208, float %247, float 0.000000e+00) #5, !dbg !36
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i208, float %247, float 0.000000e+00) #5, !dbg !36
  %.04.i210 = select i1 %.not4.i209, float %259, float %258, !dbg !36
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i211 = icmp eq i32 %260, 0, !dbg !36
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i210, float %126, float %126) #5, !dbg !36
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i210, float %126, float %126) #5, !dbg !36
  %.02.i212 = select i1 %.not5.i211, float %262, float %261, !dbg !36
  br label %__nv_tanhf.exit213, !dbg !36

__nv_tanhf.exit213:                               ; preds = %__internal_fmad.exit1.i197, %__internal_fmad.exit3.i202
  %s.1.i201 = phi float [ %246, %__internal_fmad.exit1.i197 ], [ %.02.i212, %__internal_fmad.exit3.i202 ], !dbg !36
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i214 = icmp eq i32 %263, 0, !dbg !36
  %264 = tail call float @llvm.nvvm.fabs.ftz.f(float %127) #5, !dbg !36
  %265 = tail call float @llvm.nvvm.fabs.f(float %127) #5, !dbg !36
  %.01.i215 = select i1 %.not.i214, float %265, float %264, !dbg !36
  %266 = fcmp ult float %.01.i215, 0x3FE3333340000000, !dbg !36
  br i1 %266, label %__internal_fmad.exit3.i221, label %__internal_fmad.exit1.i216, !dbg !36

__internal_fmad.exit1.i216:                       ; preds = %__nv_tanhf.exit213
  %267 = fmul float %.01.i215, 0x4007154760000000, !dbg !36
  %268 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %267) #5, !dbg !36
  %269 = fadd float %268, 1.000000e+00, !dbg !36
  %270 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %269) #6, !dbg !36, !srcloc !37
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i217 = icmp eq i32 %271, 0, !dbg !36
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %270, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %270, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i218 = select i1 %.not6.i217, float %273, float %272, !dbg !36
  %274 = fcmp oge float %.01.i215, 0x4022059680000000, !dbg !36
  %s.0.i219 = select i1 %274, float 1.000000e+00, float %.03.i218, !dbg !36
  %275 = bitcast float %s.0.i219 to i32, !dbg !36
  %276 = bitcast float %127 to i32, !dbg !36
  %277 = and i32 %276, -2147483648, !dbg !36
  %278 = or i32 %277, %275, !dbg !36
  %279 = bitcast i32 %278 to float, !dbg !36
  br label %__nv_tanhf.exit232, !dbg !36

__internal_fmad.exit3.i221:                       ; preds = %__nv_tanhf.exit213
  %280 = fmul float %127, %127, !dbg !36
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i222 = icmp eq i32 %281, 0, !dbg !36
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %280, float 0xBFAAC795C0000000) #5, !dbg !36
  %283 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %280, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i223 = select i1 %.not1.i222, float %283, float %282, !dbg !36
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i224 = icmp eq i32 %284, 0, !dbg !36
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i223, float %280, float 0x3FC10B2820000000) #5, !dbg !36
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i223, float %280, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i225 = select i1 %.not2.i224, float %286, float %285, !dbg !36
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i226 = icmp eq i32 %287, 0, !dbg !36
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i225, float %280, float 0xBFD5553DA0000000) #5, !dbg !36
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i225, float %280, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i227 = select i1 %.not3.i226, float %289, float %288, !dbg !36
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i228 = icmp eq i32 %290, 0, !dbg !36
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i227, float %280, float 0.000000e+00) #5, !dbg !36
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i227, float %280, float 0.000000e+00) #5, !dbg !36
  %.04.i229 = select i1 %.not4.i228, float %292, float %291, !dbg !36
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i230 = icmp eq i32 %293, 0, !dbg !36
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i229, float %127, float %127) #5, !dbg !36
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i229, float %127, float %127) #5, !dbg !36
  %.02.i231 = select i1 %.not5.i230, float %295, float %294, !dbg !36
  br label %__nv_tanhf.exit232, !dbg !36

__nv_tanhf.exit232:                               ; preds = %__internal_fmad.exit1.i216, %__internal_fmad.exit3.i221
  %s.1.i220 = phi float [ %279, %__internal_fmad.exit1.i216 ], [ %.02.i231, %__internal_fmad.exit3.i221 ], !dbg !36
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i233 = icmp eq i32 %296, 0, !dbg !36
  %297 = tail call float @llvm.nvvm.fabs.ftz.f(float %128) #5, !dbg !36
  %298 = tail call float @llvm.nvvm.fabs.f(float %128) #5, !dbg !36
  %.01.i234 = select i1 %.not.i233, float %298, float %297, !dbg !36
  %299 = fcmp ult float %.01.i234, 0x3FE3333340000000, !dbg !36
  br i1 %299, label %__internal_fmad.exit3.i240, label %__internal_fmad.exit1.i235, !dbg !36

__internal_fmad.exit1.i235:                       ; preds = %__nv_tanhf.exit232
  %300 = fmul float %.01.i234, 0x4007154760000000, !dbg !36
  %301 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %300) #5, !dbg !36
  %302 = fadd float %301, 1.000000e+00, !dbg !36
  %303 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %302) #6, !dbg !36, !srcloc !37
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i236 = icmp eq i32 %304, 0, !dbg !36
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %303, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %303, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i237 = select i1 %.not6.i236, float %306, float %305, !dbg !36
  %307 = fcmp oge float %.01.i234, 0x4022059680000000, !dbg !36
  %s.0.i238 = select i1 %307, float 1.000000e+00, float %.03.i237, !dbg !36
  %308 = bitcast float %s.0.i238 to i32, !dbg !36
  %309 = bitcast float %128 to i32, !dbg !36
  %310 = and i32 %309, -2147483648, !dbg !36
  %311 = or i32 %310, %308, !dbg !36
  %312 = bitcast i32 %311 to float, !dbg !36
  br label %__nv_tanhf.exit251, !dbg !36

__internal_fmad.exit3.i240:                       ; preds = %__nv_tanhf.exit232
  %313 = fmul float %128, %128, !dbg !36
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i241 = icmp eq i32 %314, 0, !dbg !36
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %313, float 0xBFAAC795C0000000) #5, !dbg !36
  %316 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %313, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i242 = select i1 %.not1.i241, float %316, float %315, !dbg !36
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i243 = icmp eq i32 %317, 0, !dbg !36
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i242, float %313, float 0x3FC10B2820000000) #5, !dbg !36
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i242, float %313, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i244 = select i1 %.not2.i243, float %319, float %318, !dbg !36
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i245 = icmp eq i32 %320, 0, !dbg !36
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i244, float %313, float 0xBFD5553DA0000000) #5, !dbg !36
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i244, float %313, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i246 = select i1 %.not3.i245, float %322, float %321, !dbg !36
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i247 = icmp eq i32 %323, 0, !dbg !36
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i246, float %313, float 0.000000e+00) #5, !dbg !36
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i246, float %313, float 0.000000e+00) #5, !dbg !36
  %.04.i248 = select i1 %.not4.i247, float %325, float %324, !dbg !36
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i249 = icmp eq i32 %326, 0, !dbg !36
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i248, float %128, float %128) #5, !dbg !36
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i248, float %128, float %128) #5, !dbg !36
  %.02.i250 = select i1 %.not5.i249, float %328, float %327, !dbg !36
  br label %__nv_tanhf.exit251, !dbg !36

__nv_tanhf.exit251:                               ; preds = %__internal_fmad.exit1.i235, %__internal_fmad.exit3.i240
  %s.1.i239 = phi float [ %312, %__internal_fmad.exit1.i235 ], [ %.02.i250, %__internal_fmad.exit3.i240 ], !dbg !36
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i252 = icmp eq i32 %329, 0, !dbg !36
  %330 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #5, !dbg !36
  %331 = tail call float @llvm.nvvm.fabs.f(float %129) #5, !dbg !36
  %.01.i253 = select i1 %.not.i252, float %331, float %330, !dbg !36
  %332 = fcmp ult float %.01.i253, 0x3FE3333340000000, !dbg !36
  br i1 %332, label %__internal_fmad.exit3.i259, label %__internal_fmad.exit1.i254, !dbg !36

__internal_fmad.exit1.i254:                       ; preds = %__nv_tanhf.exit251
  %333 = fmul float %.01.i253, 0x4007154760000000, !dbg !36
  %334 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %333) #5, !dbg !36
  %335 = fadd float %334, 1.000000e+00, !dbg !36
  %336 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %335) #6, !dbg !36, !srcloc !37
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i255 = icmp eq i32 %337, 0, !dbg !36
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %336, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %336, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i256 = select i1 %.not6.i255, float %339, float %338, !dbg !36
  %340 = fcmp oge float %.01.i253, 0x4022059680000000, !dbg !36
  %s.0.i257 = select i1 %340, float 1.000000e+00, float %.03.i256, !dbg !36
  %341 = bitcast float %s.0.i257 to i32, !dbg !36
  %342 = bitcast float %129 to i32, !dbg !36
  %343 = and i32 %342, -2147483648, !dbg !36
  %344 = or i32 %343, %341, !dbg !36
  %345 = bitcast i32 %344 to float, !dbg !36
  br label %__nv_tanhf.exit270, !dbg !36

__internal_fmad.exit3.i259:                       ; preds = %__nv_tanhf.exit251
  %346 = fmul float %129, %129, !dbg !36
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i260 = icmp eq i32 %347, 0, !dbg !36
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %346, float 0xBFAAC795C0000000) #5, !dbg !36
  %349 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %346, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i261 = select i1 %.not1.i260, float %349, float %348, !dbg !36
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i262 = icmp eq i32 %350, 0, !dbg !36
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i261, float %346, float 0x3FC10B2820000000) #5, !dbg !36
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i261, float %346, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i263 = select i1 %.not2.i262, float %352, float %351, !dbg !36
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i264 = icmp eq i32 %353, 0, !dbg !36
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i263, float %346, float 0xBFD5553DA0000000) #5, !dbg !36
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i263, float %346, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i265 = select i1 %.not3.i264, float %355, float %354, !dbg !36
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i266 = icmp eq i32 %356, 0, !dbg !36
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i265, float %346, float 0.000000e+00) #5, !dbg !36
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i265, float %346, float 0.000000e+00) #5, !dbg !36
  %.04.i267 = select i1 %.not4.i266, float %358, float %357, !dbg !36
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i268 = icmp eq i32 %359, 0, !dbg !36
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i267, float %129, float %129) #5, !dbg !36
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i267, float %129, float %129) #5, !dbg !36
  %.02.i269 = select i1 %.not5.i268, float %361, float %360, !dbg !36
  br label %__nv_tanhf.exit270, !dbg !36

__nv_tanhf.exit270:                               ; preds = %__internal_fmad.exit1.i254, %__internal_fmad.exit3.i259
  %s.1.i258 = phi float [ %345, %__internal_fmad.exit1.i254 ], [ %.02.i269, %__internal_fmad.exit3.i259 ], !dbg !36
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i271 = icmp eq i32 %362, 0, !dbg !36
  %363 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #5, !dbg !36
  %364 = tail call float @llvm.nvvm.fabs.f(float %130) #5, !dbg !36
  %.01.i272 = select i1 %.not.i271, float %364, float %363, !dbg !36
  %365 = fcmp ult float %.01.i272, 0x3FE3333340000000, !dbg !36
  br i1 %365, label %__internal_fmad.exit3.i278, label %__internal_fmad.exit1.i273, !dbg !36

__internal_fmad.exit1.i273:                       ; preds = %__nv_tanhf.exit270
  %366 = fmul float %.01.i272, 0x4007154760000000, !dbg !36
  %367 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %366) #5, !dbg !36
  %368 = fadd float %367, 1.000000e+00, !dbg !36
  %369 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %368) #6, !dbg !36, !srcloc !37
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not6.i274 = icmp eq i32 %370, 0, !dbg !36
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %369, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %369, float -2.000000e+00, float 1.000000e+00) #5, !dbg !36
  %.03.i275 = select i1 %.not6.i274, float %372, float %371, !dbg !36
  %373 = fcmp oge float %.01.i272, 0x4022059680000000, !dbg !36
  %s.0.i276 = select i1 %373, float 1.000000e+00, float %.03.i275, !dbg !36
  %374 = bitcast float %s.0.i276 to i32, !dbg !36
  %375 = bitcast float %130 to i32, !dbg !36
  %376 = and i32 %375, -2147483648, !dbg !36
  %377 = or i32 %376, %374, !dbg !36
  %378 = bitcast i32 %377 to float, !dbg !36
  br label %__nv_tanhf.exit289, !dbg !36

__internal_fmad.exit3.i278:                       ; preds = %__nv_tanhf.exit270
  %379 = fmul float %130, %130, !dbg !36
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not1.i279 = icmp eq i32 %380, 0, !dbg !36
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %379, float 0xBFAAC795C0000000) #5, !dbg !36
  %382 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %379, float 0xBFAAC795C0000000) #5, !dbg !36
  %.06.i280 = select i1 %.not1.i279, float %382, float %381, !dbg !36
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not2.i281 = icmp eq i32 %383, 0, !dbg !36
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i280, float %379, float 0x3FC10B2820000000) #5, !dbg !36
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i280, float %379, float 0x3FC10B2820000000) #5, !dbg !36
  %.05.i282 = select i1 %.not2.i281, float %385, float %384, !dbg !36
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not3.i283 = icmp eq i32 %386, 0, !dbg !36
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i282, float %379, float 0xBFD5553DA0000000) #5, !dbg !36
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i282, float %379, float 0xBFD5553DA0000000) #5, !dbg !36
  %.0.i284 = select i1 %.not3.i283, float %388, float %387, !dbg !36
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not4.i285 = icmp eq i32 %389, 0, !dbg !36
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i284, float %379, float 0.000000e+00) #5, !dbg !36
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i284, float %379, float 0.000000e+00) #5, !dbg !36
  %.04.i286 = select i1 %.not4.i285, float %391, float %390, !dbg !36
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not5.i287 = icmp eq i32 %392, 0, !dbg !36
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i286, float %130, float %130) #5, !dbg !36
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i286, float %130, float %130) #5, !dbg !36
  %.02.i288 = select i1 %.not5.i287, float %394, float %393, !dbg !36
  br label %__nv_tanhf.exit289, !dbg !36

__nv_tanhf.exit289:                               ; preds = %__internal_fmad.exit1.i273, %__internal_fmad.exit3.i278
  %s.1.i277 = phi float [ %378, %__internal_fmad.exit1.i273 ], [ %.02.i288, %__internal_fmad.exit3.i278 ], !dbg !36
  %395 = insertelement <8 x float> poison, float %s.1.i277, i64 0, !dbg !38
  %396 = insertelement <8 x float> %395, float %s.1.i258, i64 1, !dbg !38
  %397 = insertelement <8 x float> %396, float %s.1.i239, i64 2, !dbg !38
  %398 = insertelement <8 x float> %397, float %s.1.i220, i64 3, !dbg !38
  %399 = insertelement <8 x float> %398, float %s.1.i201, i64 4, !dbg !38
  %400 = insertelement <8 x float> %399, float %s.1.i182, i64 5, !dbg !38
  %401 = insertelement <8 x float> %400, float %s.1.i163, i64 6, !dbg !38
  %402 = insertelement <8 x float> %401, float %s.1.i144, i64 7, !dbg !38
  %403 = fadd <8 x float> %402, splat (float 1.000000e+00), !dbg !38
  %404 = fcmp uno <8 x float> %27, zeroinitializer, !dbg !39
  %405 = fcmp uno <8 x float> %26, zeroinitializer, !dbg !43
  %406 = fmul <8 x float> %82, %403, !dbg !45
  %407 = insertelement <8 x i1> poison, i1 %28, i64 0, !dbg !46
  %408 = shufflevector <8 x i1> %407, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !46
  %409 = select <8 x i1> %408, <8 x float> %53, <8 x float> %406, !dbg !46
  %410 = fcmp olt <8 x float> %27, %409, !dbg !47
  %411 = or <8 x i1> %404, %410, !dbg !48
  %412 = select <8 x i1> %411, <8 x float> %27, <8 x float> %409, !dbg !49
  %413 = select <8 x i1> %24, <8 x float> %412, <8 x float> %27, !dbg !50
  %414 = fcmp ogt <8 x float> %26, %409, !dbg !51
  %415 = or <8 x i1> %405, %414, !dbg !52
  %416 = select <8 x i1> %415, <8 x float> %26, <8 x float> %409, !dbg !53
  %417 = select <8 x i1> %24, <8 x float> %416, <8 x float> %26, !dbg !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 64, !dbg !18
  %418 = icmp samesign ult i64 %indvars.iv, 15296, !dbg !18
  br i1 %418, label %25, label %419, !dbg !18

419:                                              ; preds = %__nv_tanhf.exit289
  %420 = and i32 %11, 63, !dbg !11
  %421 = or disjoint i32 %10, %420, !dbg !12
  %422 = icmp slt i32 %421, 4112, !dbg !13
  %423 = extractelement <8 x float> %413, i64 6, !dbg !54
  %424 = extractelement <8 x float> %413, i64 7, !dbg !54
  %425 = fcmp olt float %424, %423, !dbg !54
  %426 = fcmp uno float %424, 0.000000e+00, !dbg !57
  %427 = or i1 %425, %426, !dbg !58
  %428 = select i1 %427, float %424, float %423, !dbg !59
  %429 = extractelement <8 x float> %413, i64 5, !dbg !54
  %430 = fcmp olt float %428, %429, !dbg !54
  %431 = fcmp uno float %428, 0.000000e+00, !dbg !57
  %432 = or i1 %430, %431, !dbg !58
  %433 = select i1 %432, float %428, float %429, !dbg !59
  %434 = extractelement <8 x float> %413, i64 4, !dbg !54
  %435 = fcmp olt float %433, %434, !dbg !54
  %436 = fcmp uno float %433, 0.000000e+00, !dbg !57
  %437 = or i1 %435, %436, !dbg !58
  %438 = select i1 %437, float %433, float %434, !dbg !59
  %439 = extractelement <8 x float> %413, i64 3, !dbg !54
  %440 = fcmp olt float %438, %439, !dbg !54
  %441 = fcmp uno float %438, 0.000000e+00, !dbg !57
  %442 = or i1 %440, %441, !dbg !58
  %443 = select i1 %442, float %438, float %439, !dbg !59
  %444 = extractelement <8 x float> %413, i64 2, !dbg !54
  %445 = fcmp olt float %443, %444, !dbg !54
  %446 = fcmp uno float %443, 0.000000e+00, !dbg !57
  %447 = or i1 %445, %446, !dbg !58
  %448 = select i1 %447, float %443, float %444, !dbg !59
  %449 = extractelement <8 x float> %413, i64 1, !dbg !54
  %450 = fcmp olt float %448, %449, !dbg !54
  %451 = fcmp uno float %448, 0.000000e+00, !dbg !57
  %452 = or i1 %450, %451, !dbg !58
  %453 = select i1 %452, float %448, float %449, !dbg !59
  %454 = extractelement <8 x float> %413, i64 0, !dbg !54
  %455 = fcmp olt float %453, %454, !dbg !54
  %456 = fcmp uno float %453, 0.000000e+00, !dbg !57
  %457 = or i1 %455, %456, !dbg !58
  %458 = select i1 %457, float %453, float %454, !dbg !59
  %459 = bitcast float %458 to i32, !dbg !60
  %460 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %459, i32 4, i32 31), !dbg !60
  %461 = bitcast i32 %460 to float, !dbg !60
  %462 = fcmp olt float %458, %461, !dbg !54
  %463 = fcmp uno float %458, 0.000000e+00, !dbg !57
  %464 = or i1 %463, %462, !dbg !58
  %465 = select i1 %464, float %458, float %461, !dbg !59
  %466 = bitcast float %465 to i32, !dbg !60
  %467 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %466, i32 2, i32 31), !dbg !60
  %468 = bitcast i32 %467 to float, !dbg !60
  %469 = fcmp olt float %465, %468, !dbg !54
  %470 = fcmp uno float %465, 0.000000e+00, !dbg !57
  %471 = or i1 %469, %470, !dbg !58
  %472 = select i1 %471, float %465, float %468, !dbg !59
  %473 = bitcast float %472 to i32, !dbg !60
  %474 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %473, i32 1, i32 31), !dbg !60
  %475 = bitcast i32 %474 to float, !dbg !60
  %476 = fcmp olt float %472, %475, !dbg !54
  %477 = fcmp uno float %472, 0.000000e+00, !dbg !57
  %478 = or i1 %476, %477, !dbg !58
  %479 = select i1 %478, float %472, float %475, !dbg !59
  %480 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %13, !dbg !61
  %481 = bitcast float %479 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %480, <1 x i32> %481, i1 true) #5, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %482 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %420, !dbg !61
  %483 = load float, ptr addrspace(3) %482, align 4, !dbg !61
  %484 = extractelement <8 x float> %417, i64 6, !dbg !62
  %485 = extractelement <8 x float> %417, i64 7, !dbg !62
  %486 = fcmp ogt float %485, %484, !dbg !62
  %487 = fcmp uno float %485, 0.000000e+00, !dbg !64
  %488 = or i1 %486, %487, !dbg !65
  %489 = select i1 %488, float %485, float %484, !dbg !66
  %490 = extractelement <8 x float> %417, i64 5, !dbg !62
  %491 = fcmp ogt float %489, %490, !dbg !62
  %492 = fcmp uno float %489, 0.000000e+00, !dbg !64
  %493 = or i1 %491, %492, !dbg !65
  %494 = select i1 %493, float %489, float %490, !dbg !66
  %495 = extractelement <8 x float> %417, i64 4, !dbg !62
  %496 = fcmp ogt float %494, %495, !dbg !62
  %497 = fcmp uno float %494, 0.000000e+00, !dbg !64
  %498 = or i1 %496, %497, !dbg !65
  %499 = select i1 %498, float %494, float %495, !dbg !66
  %500 = extractelement <8 x float> %417, i64 3, !dbg !62
  %501 = fcmp ogt float %499, %500, !dbg !62
  %502 = fcmp uno float %499, 0.000000e+00, !dbg !64
  %503 = or i1 %501, %502, !dbg !65
  %504 = select i1 %503, float %499, float %500, !dbg !66
  %505 = extractelement <8 x float> %417, i64 2, !dbg !62
  %506 = fcmp ogt float %504, %505, !dbg !62
  %507 = fcmp uno float %504, 0.000000e+00, !dbg !64
  %508 = or i1 %506, %507, !dbg !65
  %509 = select i1 %508, float %504, float %505, !dbg !66
  %510 = extractelement <8 x float> %417, i64 1, !dbg !62
  %511 = fcmp ogt float %509, %510, !dbg !62
  %512 = fcmp uno float %509, 0.000000e+00, !dbg !64
  %513 = or i1 %511, %512, !dbg !65
  %514 = select i1 %513, float %509, float %510, !dbg !66
  %515 = extractelement <8 x float> %417, i64 0, !dbg !62
  %516 = fcmp ogt float %514, %515, !dbg !62
  %517 = fcmp uno float %514, 0.000000e+00, !dbg !64
  %518 = or i1 %516, %517, !dbg !65
  %519 = select i1 %518, float %514, float %515, !dbg !66
  %520 = bitcast float %519 to i32, !dbg !67
  %521 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %520, i32 4, i32 31), !dbg !67
  %522 = bitcast i32 %521 to float, !dbg !67
  %523 = fcmp ogt float %519, %522, !dbg !62
  %524 = fcmp uno float %519, 0.000000e+00, !dbg !64
  %525 = or i1 %524, %523, !dbg !65
  %526 = select i1 %525, float %519, float %522, !dbg !66
  %527 = bitcast float %526 to i32, !dbg !67
  %528 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %527, i32 2, i32 31), !dbg !67
  %529 = bitcast i32 %528 to float, !dbg !67
  %530 = fcmp ogt float %526, %529, !dbg !62
  %531 = fcmp uno float %526, 0.000000e+00, !dbg !64
  %532 = or i1 %530, %531, !dbg !65
  %533 = select i1 %532, float %526, float %529, !dbg !66
  %534 = bitcast float %533 to i32, !dbg !67
  %535 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %534, i32 1, i32 31), !dbg !67
  %536 = bitcast i32 %535 to float, !dbg !67
  %537 = fcmp ogt float %533, %536, !dbg !62
  %538 = fcmp uno float %533, 0.000000e+00, !dbg !64
  %539 = or i1 %537, %538, !dbg !65
  %540 = select i1 %539, float %533, float %536, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !68
  %541 = bitcast float %540 to <1 x i32>, !dbg !68
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %480, <1 x i32> %541, i1 true) #5, !dbg !68
  tail call void @llvm.nvvm.barrier0(), !dbg !68
  %542 = load float, ptr addrspace(3) %482, align 4, !dbg !68
  %543 = sext i32 %421 to i64, !dbg !69
  %544 = getelementptr bfloat, ptr addrspace(1) %2, i64 %543, !dbg !69
  %545 = fptrunc float %483 to bfloat, !dbg !61
  %546 = and i32 %11, 448, !dbg !61
  %547 = icmp eq i32 %546, 0, !dbg !61
  %548 = bitcast bfloat %545 to i16, !dbg !61
  %549 = and i1 %547, %422, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %548, ptr addrspace(1) %544, i1 %549) #5, !dbg !61
  %550 = getelementptr bfloat, ptr addrspace(1) %3, i64 %543, !dbg !70
  %551 = fptrunc float %542 to bfloat, !dbg !68
  %552 = bitcast bfloat %551 to i16, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %552, ptr addrspace(1) %550, i1 %549) #5, !dbg !68
  %.inv = fcmp oge float %479, 0.000000e+00, !dbg !71
  %553 = select i1 %.inv, float 0.000000e+00, float %479, !dbg !71
  %554 = fsub float 0.000000e+00, %553, !dbg !73
  %.inv4 = fcmp ole float %540, 0.000000e+00, !dbg !74
  %555 = select i1 %.inv4, float 0.000000e+00, float %540, !dbg !74
  %556 = fcmp ogt float %554, %555, !dbg !76
  %557 = fcmp uno float %554, 0.000000e+00, !dbg !78
  %558 = or i1 %557, %556, !dbg !79
  %559 = select i1 %558, float %554, float %555, !dbg !80
  %560 = fmul float %559, 0x3F80204080000000, !dbg !81
  %561 = fcmp ogt float %560, 0x3EE4F8B580000000, !dbg !82
  %562 = fcmp uno float %560, 0.000000e+00, !dbg !84
  %563 = or i1 %561, %562, !dbg !85
  %564 = select i1 %563, float %560, float 0x3EE4F8B580000000, !dbg !86
  %565 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %564), !dbg !87
  %566 = mul i32 %14, 15360, !dbg !88
  br label %567, !dbg !89

567:                                              ; preds = %419, %__nv_tanhf.exit137
  %indvars.iv306 = phi i64 [ 0, %419 ], [ %indvars.iv.next307, %__nv_tanhf.exit137 ]
  %568 = icmp samesign ult i64 %indvars.iv306, 3072, !dbg !90
  %569 = trunc i64 %indvars.iv306 to i32, !dbg !91
  %570 = or disjoint i32 %17, %569, !dbg !91
  %571 = add i32 %570, %19, !dbg !91
  %572 = sext i32 %571 to i64, !dbg !92
  %573 = getelementptr bfloat, ptr addrspace(1) %0, i64 %572, !dbg !92
  %574 = and i1 %15, %568, !dbg !93
  %575 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %573, i1 %574) #5, !dbg !94
  %576 = extractvalue { i32, i32, i32, i32 } %575, 0, !dbg !94
  %577 = bitcast i32 %576 to <2 x bfloat>, !dbg !94
  %578 = extractvalue { i32, i32, i32, i32 } %575, 1, !dbg !94
  %579 = bitcast i32 %578 to <2 x bfloat>, !dbg !94
  %580 = extractvalue { i32, i32, i32, i32 } %575, 2, !dbg !94
  %581 = bitcast i32 %580 to <2 x bfloat>, !dbg !94
  %582 = extractvalue { i32, i32, i32, i32 } %575, 3, !dbg !94
  %583 = bitcast i32 %582 to <2 x bfloat>, !dbg !94
  %584 = extractelement <2 x bfloat> %577, i64 0, !dbg !94
  %585 = extractelement <2 x bfloat> %577, i64 1, !dbg !94
  %586 = extractelement <2 x bfloat> %579, i64 0, !dbg !94
  %587 = extractelement <2 x bfloat> %579, i64 1, !dbg !94
  %588 = extractelement <2 x bfloat> %581, i64 0, !dbg !94
  %589 = extractelement <2 x bfloat> %581, i64 1, !dbg !94
  %590 = extractelement <2 x bfloat> %583, i64 0, !dbg !94
  %591 = extractelement <2 x bfloat> %583, i64 1, !dbg !94
  %592 = fpext bfloat %584 to float, !dbg !95
  %593 = fpext bfloat %585 to float, !dbg !95
  %594 = fpext bfloat %586 to float, !dbg !95
  %595 = fpext bfloat %587 to float, !dbg !95
  %596 = fpext bfloat %588 to float, !dbg !95
  %597 = fpext bfloat %589 to float, !dbg !95
  %598 = fpext bfloat %590 to float, !dbg !95
  %599 = fpext bfloat %591 to float, !dbg !95
  %600 = icmp samesign ugt i64 %indvars.iv306, 3071, !dbg !96
  %601 = add i32 %21, %570, !dbg !97
  %602 = trunc nuw nsw i64 %indvars.iv306 to i32, !dbg !97
  %603 = add i32 %22, %602, !dbg !97
  %604 = sext i32 %601 to i64, !dbg !98
  %605 = getelementptr float, ptr addrspace(1) %1, i64 %604, !dbg !98
  %606 = sext i32 %603 to i64, !dbg !98
  %607 = getelementptr float, ptr addrspace(1) %1, i64 %606, !dbg !98
  %608 = and i1 %15, %600, !dbg !99
  %609 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %605, i1 %608) #5, !dbg !100
  %610 = extractvalue { i32, i32, i32, i32 } %609, 0, !dbg !100
  %611 = extractvalue { i32, i32, i32, i32 } %609, 1, !dbg !100
  %612 = extractvalue { i32, i32, i32, i32 } %609, 2, !dbg !100
  %613 = extractvalue { i32, i32, i32, i32 } %609, 3, !dbg !100
  %614 = bitcast i32 %610 to float, !dbg !100
  %615 = bitcast i32 %611 to float, !dbg !100
  %616 = bitcast i32 %612 to float, !dbg !100
  %617 = bitcast i32 %613 to float, !dbg !100
  %618 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %607, i1 %608) #5, !dbg !100
  %619 = extractvalue { i32, i32, i32, i32 } %618, 0, !dbg !100
  %620 = extractvalue { i32, i32, i32, i32 } %618, 1, !dbg !100
  %621 = extractvalue { i32, i32, i32, i32 } %618, 2, !dbg !100
  %622 = extractvalue { i32, i32, i32, i32 } %618, 3, !dbg !100
  %623 = bitcast i32 %619 to float, !dbg !100
  %624 = bitcast i32 %620 to float, !dbg !100
  %625 = bitcast i32 %621 to float, !dbg !100
  %626 = bitcast i32 %622 to float, !dbg !100
  %627 = fmul float %614, 5.000000e-01, !dbg !101
  %628 = fmul float %615, 5.000000e-01, !dbg !101
  %629 = fmul float %616, 5.000000e-01, !dbg !101
  %630 = fmul float %617, 5.000000e-01, !dbg !101
  %631 = fmul float %623, 5.000000e-01, !dbg !101
  %632 = fmul float %624, 5.000000e-01, !dbg !101
  %633 = fmul float %625, 5.000000e-01, !dbg !101
  %634 = fmul float %626, 5.000000e-01, !dbg !101
  %635 = fmul float %614, %614, !dbg !102
  %636 = fmul float %615, %615, !dbg !102
  %637 = fmul float %616, %616, !dbg !102
  %638 = fmul float %617, %617, !dbg !102
  %639 = fmul float %623, %623, !dbg !102
  %640 = fmul float %624, %624, !dbg !102
  %641 = fmul float %625, %625, !dbg !102
  %642 = fmul float %626, %626, !dbg !102
  %643 = fmul float %635, %614, !dbg !103
  %644 = fmul float %636, %615, !dbg !103
  %645 = fmul float %637, %616, !dbg !103
  %646 = fmul float %638, %617, !dbg !103
  %647 = fmul float %639, %623, !dbg !103
  %648 = fmul float %640, %624, !dbg !103
  %649 = fmul float %641, %625, !dbg !103
  %650 = fmul float %642, %626, !dbg !103
  %651 = fmul float %643, 0x3FA6E4E260000000, !dbg !104
  %652 = fmul float %644, 0x3FA6E4E260000000, !dbg !104
  %653 = fmul float %645, 0x3FA6E4E260000000, !dbg !104
  %654 = fmul float %646, 0x3FA6E4E260000000, !dbg !104
  %655 = fmul float %647, 0x3FA6E4E260000000, !dbg !104
  %656 = fmul float %648, 0x3FA6E4E260000000, !dbg !104
  %657 = fmul float %649, 0x3FA6E4E260000000, !dbg !104
  %658 = fmul float %650, 0x3FA6E4E260000000, !dbg !104
  %659 = fadd float %651, %614, !dbg !105
  %660 = fadd float %652, %615, !dbg !105
  %661 = fadd float %653, %616, !dbg !105
  %662 = fadd float %654, %617, !dbg !105
  %663 = fadd float %655, %623, !dbg !105
  %664 = fadd float %656, %624, !dbg !105
  %665 = fadd float %657, %625, !dbg !105
  %666 = fadd float %658, %626, !dbg !105
  %667 = fmul float %659, 0x3FE9884540000000, !dbg !106
  %668 = fmul float %660, 0x3FE9884540000000, !dbg !106
  %669 = fmul float %661, 0x3FE9884540000000, !dbg !106
  %670 = fmul float %662, 0x3FE9884540000000, !dbg !106
  %671 = fmul float %663, 0x3FE9884540000000, !dbg !106
  %672 = fmul float %664, 0x3FE9884540000000, !dbg !106
  %673 = fmul float %665, 0x3FE9884540000000, !dbg !106
  %674 = fmul float %666, 0x3FE9884540000000, !dbg !106
  %675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i = icmp eq i32 %675, 0, !dbg !107
  %676 = tail call float @llvm.nvvm.fabs.ftz.f(float %667) #5, !dbg !107
  %677 = tail call float @llvm.nvvm.fabs.f(float %667) #5, !dbg !107
  %.01.i = select i1 %.not.i, float %677, float %676, !dbg !107
  %678 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !107
  br i1 %678, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !107

__internal_fmad.exit1.i:                          ; preds = %567
  %679 = fmul float %.01.i, 0x4007154760000000, !dbg !107
  %680 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %679) #5, !dbg !107
  %681 = fadd float %680, 1.000000e+00, !dbg !107
  %682 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %681) #6, !dbg !107, !srcloc !37
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i = icmp eq i32 %683, 0, !dbg !107
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %682, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %682, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i = select i1 %.not6.i, float %685, float %684, !dbg !107
  %686 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !107
  %s.0.i = select i1 %686, float 1.000000e+00, float %.03.i, !dbg !107
  %687 = bitcast float %s.0.i to i32, !dbg !107
  %688 = bitcast float %667 to i32, !dbg !107
  %689 = and i32 %688, -2147483648, !dbg !107
  %690 = or i32 %689, %687, !dbg !107
  %691 = bitcast i32 %690 to float, !dbg !107
  br label %__nv_tanhf.exit, !dbg !107

__internal_fmad.exit3.i:                          ; preds = %567
  %692 = fmul float %667, %667, !dbg !107
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i = icmp eq i32 %693, 0, !dbg !107
  %694 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %692, float 0xBFAAC795C0000000) #5, !dbg !107
  %695 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %692, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i = select i1 %.not1.i, float %695, float %694, !dbg !107
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i = icmp eq i32 %696, 0, !dbg !107
  %697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %692, float 0x3FC10B2820000000) #5, !dbg !107
  %698 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %692, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i = select i1 %.not2.i, float %698, float %697, !dbg !107
  %699 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i = icmp eq i32 %699, 0, !dbg !107
  %700 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %692, float 0xBFD5553DA0000000) #5, !dbg !107
  %701 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %692, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i = select i1 %.not3.i, float %701, float %700, !dbg !107
  %702 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i = icmp eq i32 %702, 0, !dbg !107
  %703 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %692, float 0.000000e+00) #5, !dbg !107
  %704 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %692, float 0.000000e+00) #5, !dbg !107
  %.04.i = select i1 %.not4.i, float %704, float %703, !dbg !107
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i = icmp eq i32 %705, 0, !dbg !107
  %706 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %667, float %667) #5, !dbg !107
  %707 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %667, float %667) #5, !dbg !107
  %.02.i = select i1 %.not5.i, float %707, float %706, !dbg !107
  br label %__nv_tanhf.exit, !dbg !107

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %691, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !107
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i5 = icmp eq i32 %708, 0, !dbg !107
  %709 = tail call float @llvm.nvvm.fabs.ftz.f(float %668) #5, !dbg !107
  %710 = tail call float @llvm.nvvm.fabs.f(float %668) #5, !dbg !107
  %.01.i6 = select i1 %.not.i5, float %710, float %709, !dbg !107
  %711 = fcmp ult float %.01.i6, 0x3FE3333340000000, !dbg !107
  br i1 %711, label %__internal_fmad.exit3.i12, label %__internal_fmad.exit1.i7, !dbg !107

__internal_fmad.exit1.i7:                         ; preds = %__nv_tanhf.exit
  %712 = fmul float %.01.i6, 0x4007154760000000, !dbg !107
  %713 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %712) #5, !dbg !107
  %714 = fadd float %713, 1.000000e+00, !dbg !107
  %715 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %714) #6, !dbg !107, !srcloc !37
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i8 = icmp eq i32 %716, 0, !dbg !107
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %715, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %715, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i9 = select i1 %.not6.i8, float %718, float %717, !dbg !107
  %719 = fcmp oge float %.01.i6, 0x4022059680000000, !dbg !107
  %s.0.i10 = select i1 %719, float 1.000000e+00, float %.03.i9, !dbg !107
  %720 = bitcast float %s.0.i10 to i32, !dbg !107
  %721 = bitcast float %668 to i32, !dbg !107
  %722 = and i32 %721, -2147483648, !dbg !107
  %723 = or i32 %722, %720, !dbg !107
  %724 = bitcast i32 %723 to float, !dbg !107
  br label %__nv_tanhf.exit23, !dbg !107

__internal_fmad.exit3.i12:                        ; preds = %__nv_tanhf.exit
  %725 = fmul float %668, %668, !dbg !107
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i13 = icmp eq i32 %726, 0, !dbg !107
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %725, float 0xBFAAC795C0000000) #5, !dbg !107
  %728 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %725, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i14 = select i1 %.not1.i13, float %728, float %727, !dbg !107
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i15 = icmp eq i32 %729, 0, !dbg !107
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i14, float %725, float 0x3FC10B2820000000) #5, !dbg !107
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i14, float %725, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i16 = select i1 %.not2.i15, float %731, float %730, !dbg !107
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i17 = icmp eq i32 %732, 0, !dbg !107
  %733 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i16, float %725, float 0xBFD5553DA0000000) #5, !dbg !107
  %734 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i16, float %725, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i18 = select i1 %.not3.i17, float %734, float %733, !dbg !107
  %735 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i19 = icmp eq i32 %735, 0, !dbg !107
  %736 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %725, float 0.000000e+00) #5, !dbg !107
  %737 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %725, float 0.000000e+00) #5, !dbg !107
  %.04.i20 = select i1 %.not4.i19, float %737, float %736, !dbg !107
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i21 = icmp eq i32 %738, 0, !dbg !107
  %739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i20, float %668, float %668) #5, !dbg !107
  %740 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i20, float %668, float %668) #5, !dbg !107
  %.02.i22 = select i1 %.not5.i21, float %740, float %739, !dbg !107
  br label %__nv_tanhf.exit23, !dbg !107

__nv_tanhf.exit23:                                ; preds = %__internal_fmad.exit1.i7, %__internal_fmad.exit3.i12
  %s.1.i11 = phi float [ %724, %__internal_fmad.exit1.i7 ], [ %.02.i22, %__internal_fmad.exit3.i12 ], !dbg !107
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i24 = icmp eq i32 %741, 0, !dbg !107
  %742 = tail call float @llvm.nvvm.fabs.ftz.f(float %669) #5, !dbg !107
  %743 = tail call float @llvm.nvvm.fabs.f(float %669) #5, !dbg !107
  %.01.i25 = select i1 %.not.i24, float %743, float %742, !dbg !107
  %744 = fcmp ult float %.01.i25, 0x3FE3333340000000, !dbg !107
  br i1 %744, label %__internal_fmad.exit3.i31, label %__internal_fmad.exit1.i26, !dbg !107

__internal_fmad.exit1.i26:                        ; preds = %__nv_tanhf.exit23
  %745 = fmul float %.01.i25, 0x4007154760000000, !dbg !107
  %746 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %745) #5, !dbg !107
  %747 = fadd float %746, 1.000000e+00, !dbg !107
  %748 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %747) #6, !dbg !107, !srcloc !37
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i27 = icmp eq i32 %749, 0, !dbg !107
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %748, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %748, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i28 = select i1 %.not6.i27, float %751, float %750, !dbg !107
  %752 = fcmp oge float %.01.i25, 0x4022059680000000, !dbg !107
  %s.0.i29 = select i1 %752, float 1.000000e+00, float %.03.i28, !dbg !107
  %753 = bitcast float %s.0.i29 to i32, !dbg !107
  %754 = bitcast float %669 to i32, !dbg !107
  %755 = and i32 %754, -2147483648, !dbg !107
  %756 = or i32 %755, %753, !dbg !107
  %757 = bitcast i32 %756 to float, !dbg !107
  br label %__nv_tanhf.exit42, !dbg !107

__internal_fmad.exit3.i31:                        ; preds = %__nv_tanhf.exit23
  %758 = fmul float %669, %669, !dbg !107
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i32 = icmp eq i32 %759, 0, !dbg !107
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %758, float 0xBFAAC795C0000000) #5, !dbg !107
  %761 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %758, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i33 = select i1 %.not1.i32, float %761, float %760, !dbg !107
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i34 = icmp eq i32 %762, 0, !dbg !107
  %763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i33, float %758, float 0x3FC10B2820000000) #5, !dbg !107
  %764 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i33, float %758, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i35 = select i1 %.not2.i34, float %764, float %763, !dbg !107
  %765 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i36 = icmp eq i32 %765, 0, !dbg !107
  %766 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i35, float %758, float 0xBFD5553DA0000000) #5, !dbg !107
  %767 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i35, float %758, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i37 = select i1 %.not3.i36, float %767, float %766, !dbg !107
  %768 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i38 = icmp eq i32 %768, 0, !dbg !107
  %769 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i37, float %758, float 0.000000e+00) #5, !dbg !107
  %770 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i37, float %758, float 0.000000e+00) #5, !dbg !107
  %.04.i39 = select i1 %.not4.i38, float %770, float %769, !dbg !107
  %771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i40 = icmp eq i32 %771, 0, !dbg !107
  %772 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i39, float %669, float %669) #5, !dbg !107
  %773 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i39, float %669, float %669) #5, !dbg !107
  %.02.i41 = select i1 %.not5.i40, float %773, float %772, !dbg !107
  br label %__nv_tanhf.exit42, !dbg !107

__nv_tanhf.exit42:                                ; preds = %__internal_fmad.exit1.i26, %__internal_fmad.exit3.i31
  %s.1.i30 = phi float [ %757, %__internal_fmad.exit1.i26 ], [ %.02.i41, %__internal_fmad.exit3.i31 ], !dbg !107
  %774 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i43 = icmp eq i32 %774, 0, !dbg !107
  %775 = tail call float @llvm.nvvm.fabs.ftz.f(float %670) #5, !dbg !107
  %776 = tail call float @llvm.nvvm.fabs.f(float %670) #5, !dbg !107
  %.01.i44 = select i1 %.not.i43, float %776, float %775, !dbg !107
  %777 = fcmp ult float %.01.i44, 0x3FE3333340000000, !dbg !107
  br i1 %777, label %__internal_fmad.exit3.i50, label %__internal_fmad.exit1.i45, !dbg !107

__internal_fmad.exit1.i45:                        ; preds = %__nv_tanhf.exit42
  %778 = fmul float %.01.i44, 0x4007154760000000, !dbg !107
  %779 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %778) #5, !dbg !107
  %780 = fadd float %779, 1.000000e+00, !dbg !107
  %781 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %780) #6, !dbg !107, !srcloc !37
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i46 = icmp eq i32 %782, 0, !dbg !107
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %781, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %781, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i47 = select i1 %.not6.i46, float %784, float %783, !dbg !107
  %785 = fcmp oge float %.01.i44, 0x4022059680000000, !dbg !107
  %s.0.i48 = select i1 %785, float 1.000000e+00, float %.03.i47, !dbg !107
  %786 = bitcast float %s.0.i48 to i32, !dbg !107
  %787 = bitcast float %670 to i32, !dbg !107
  %788 = and i32 %787, -2147483648, !dbg !107
  %789 = or i32 %788, %786, !dbg !107
  %790 = bitcast i32 %789 to float, !dbg !107
  br label %__nv_tanhf.exit61, !dbg !107

__internal_fmad.exit3.i50:                        ; preds = %__nv_tanhf.exit42
  %791 = fmul float %670, %670, !dbg !107
  %792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i51 = icmp eq i32 %792, 0, !dbg !107
  %793 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %791, float 0xBFAAC795C0000000) #5, !dbg !107
  %794 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %791, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i52 = select i1 %.not1.i51, float %794, float %793, !dbg !107
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i53 = icmp eq i32 %795, 0, !dbg !107
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i52, float %791, float 0x3FC10B2820000000) #5, !dbg !107
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i52, float %791, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i54 = select i1 %.not2.i53, float %797, float %796, !dbg !107
  %798 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i55 = icmp eq i32 %798, 0, !dbg !107
  %799 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i54, float %791, float 0xBFD5553DA0000000) #5, !dbg !107
  %800 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i54, float %791, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i56 = select i1 %.not3.i55, float %800, float %799, !dbg !107
  %801 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i57 = icmp eq i32 %801, 0, !dbg !107
  %802 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i56, float %791, float 0.000000e+00) #5, !dbg !107
  %803 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i56, float %791, float 0.000000e+00) #5, !dbg !107
  %.04.i58 = select i1 %.not4.i57, float %803, float %802, !dbg !107
  %804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i59 = icmp eq i32 %804, 0, !dbg !107
  %805 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i58, float %670, float %670) #5, !dbg !107
  %806 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i58, float %670, float %670) #5, !dbg !107
  %.02.i60 = select i1 %.not5.i59, float %806, float %805, !dbg !107
  br label %__nv_tanhf.exit61, !dbg !107

__nv_tanhf.exit61:                                ; preds = %__internal_fmad.exit1.i45, %__internal_fmad.exit3.i50
  %s.1.i49 = phi float [ %790, %__internal_fmad.exit1.i45 ], [ %.02.i60, %__internal_fmad.exit3.i50 ], !dbg !107
  %807 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i62 = icmp eq i32 %807, 0, !dbg !107
  %808 = tail call float @llvm.nvvm.fabs.ftz.f(float %671) #5, !dbg !107
  %809 = tail call float @llvm.nvvm.fabs.f(float %671) #5, !dbg !107
  %.01.i63 = select i1 %.not.i62, float %809, float %808, !dbg !107
  %810 = fcmp ult float %.01.i63, 0x3FE3333340000000, !dbg !107
  br i1 %810, label %__internal_fmad.exit3.i69, label %__internal_fmad.exit1.i64, !dbg !107

__internal_fmad.exit1.i64:                        ; preds = %__nv_tanhf.exit61
  %811 = fmul float %.01.i63, 0x4007154760000000, !dbg !107
  %812 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %811) #5, !dbg !107
  %813 = fadd float %812, 1.000000e+00, !dbg !107
  %814 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %813) #6, !dbg !107, !srcloc !37
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i65 = icmp eq i32 %815, 0, !dbg !107
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %814, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %817 = tail call float @llvm.nvvm.fma.rn.f(float %814, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i66 = select i1 %.not6.i65, float %817, float %816, !dbg !107
  %818 = fcmp oge float %.01.i63, 0x4022059680000000, !dbg !107
  %s.0.i67 = select i1 %818, float 1.000000e+00, float %.03.i66, !dbg !107
  %819 = bitcast float %s.0.i67 to i32, !dbg !107
  %820 = bitcast float %671 to i32, !dbg !107
  %821 = and i32 %820, -2147483648, !dbg !107
  %822 = or i32 %821, %819, !dbg !107
  %823 = bitcast i32 %822 to float, !dbg !107
  br label %__nv_tanhf.exit80, !dbg !107

__internal_fmad.exit3.i69:                        ; preds = %__nv_tanhf.exit61
  %824 = fmul float %671, %671, !dbg !107
  %825 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i70 = icmp eq i32 %825, 0, !dbg !107
  %826 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %824, float 0xBFAAC795C0000000) #5, !dbg !107
  %827 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %824, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i71 = select i1 %.not1.i70, float %827, float %826, !dbg !107
  %828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i72 = icmp eq i32 %828, 0, !dbg !107
  %829 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i71, float %824, float 0x3FC10B2820000000) #5, !dbg !107
  %830 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i71, float %824, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i73 = select i1 %.not2.i72, float %830, float %829, !dbg !107
  %831 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i74 = icmp eq i32 %831, 0, !dbg !107
  %832 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i73, float %824, float 0xBFD5553DA0000000) #5, !dbg !107
  %833 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i73, float %824, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i75 = select i1 %.not3.i74, float %833, float %832, !dbg !107
  %834 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i76 = icmp eq i32 %834, 0, !dbg !107
  %835 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i75, float %824, float 0.000000e+00) #5, !dbg !107
  %836 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i75, float %824, float 0.000000e+00) #5, !dbg !107
  %.04.i77 = select i1 %.not4.i76, float %836, float %835, !dbg !107
  %837 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i78 = icmp eq i32 %837, 0, !dbg !107
  %838 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i77, float %671, float %671) #5, !dbg !107
  %839 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i77, float %671, float %671) #5, !dbg !107
  %.02.i79 = select i1 %.not5.i78, float %839, float %838, !dbg !107
  br label %__nv_tanhf.exit80, !dbg !107

__nv_tanhf.exit80:                                ; preds = %__internal_fmad.exit1.i64, %__internal_fmad.exit3.i69
  %s.1.i68 = phi float [ %823, %__internal_fmad.exit1.i64 ], [ %.02.i79, %__internal_fmad.exit3.i69 ], !dbg !107
  %840 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i81 = icmp eq i32 %840, 0, !dbg !107
  %841 = tail call float @llvm.nvvm.fabs.ftz.f(float %672) #5, !dbg !107
  %842 = tail call float @llvm.nvvm.fabs.f(float %672) #5, !dbg !107
  %.01.i82 = select i1 %.not.i81, float %842, float %841, !dbg !107
  %843 = fcmp ult float %.01.i82, 0x3FE3333340000000, !dbg !107
  br i1 %843, label %__internal_fmad.exit3.i88, label %__internal_fmad.exit1.i83, !dbg !107

__internal_fmad.exit1.i83:                        ; preds = %__nv_tanhf.exit80
  %844 = fmul float %.01.i82, 0x4007154760000000, !dbg !107
  %845 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %844) #5, !dbg !107
  %846 = fadd float %845, 1.000000e+00, !dbg !107
  %847 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %846) #6, !dbg !107, !srcloc !37
  %848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i84 = icmp eq i32 %848, 0, !dbg !107
  %849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %847, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %850 = tail call float @llvm.nvvm.fma.rn.f(float %847, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i85 = select i1 %.not6.i84, float %850, float %849, !dbg !107
  %851 = fcmp oge float %.01.i82, 0x4022059680000000, !dbg !107
  %s.0.i86 = select i1 %851, float 1.000000e+00, float %.03.i85, !dbg !107
  %852 = bitcast float %s.0.i86 to i32, !dbg !107
  %853 = bitcast float %672 to i32, !dbg !107
  %854 = and i32 %853, -2147483648, !dbg !107
  %855 = or i32 %854, %852, !dbg !107
  %856 = bitcast i32 %855 to float, !dbg !107
  br label %__nv_tanhf.exit99, !dbg !107

__internal_fmad.exit3.i88:                        ; preds = %__nv_tanhf.exit80
  %857 = fmul float %672, %672, !dbg !107
  %858 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i89 = icmp eq i32 %858, 0, !dbg !107
  %859 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %857, float 0xBFAAC795C0000000) #5, !dbg !107
  %860 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %857, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i90 = select i1 %.not1.i89, float %860, float %859, !dbg !107
  %861 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i91 = icmp eq i32 %861, 0, !dbg !107
  %862 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i90, float %857, float 0x3FC10B2820000000) #5, !dbg !107
  %863 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i90, float %857, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i92 = select i1 %.not2.i91, float %863, float %862, !dbg !107
  %864 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i93 = icmp eq i32 %864, 0, !dbg !107
  %865 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i92, float %857, float 0xBFD5553DA0000000) #5, !dbg !107
  %866 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i92, float %857, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i94 = select i1 %.not3.i93, float %866, float %865, !dbg !107
  %867 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i95 = icmp eq i32 %867, 0, !dbg !107
  %868 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i94, float %857, float 0.000000e+00) #5, !dbg !107
  %869 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i94, float %857, float 0.000000e+00) #5, !dbg !107
  %.04.i96 = select i1 %.not4.i95, float %869, float %868, !dbg !107
  %870 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i97 = icmp eq i32 %870, 0, !dbg !107
  %871 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i96, float %672, float %672) #5, !dbg !107
  %872 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i96, float %672, float %672) #5, !dbg !107
  %.02.i98 = select i1 %.not5.i97, float %872, float %871, !dbg !107
  br label %__nv_tanhf.exit99, !dbg !107

__nv_tanhf.exit99:                                ; preds = %__internal_fmad.exit1.i83, %__internal_fmad.exit3.i88
  %s.1.i87 = phi float [ %856, %__internal_fmad.exit1.i83 ], [ %.02.i98, %__internal_fmad.exit3.i88 ], !dbg !107
  %873 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i100 = icmp eq i32 %873, 0, !dbg !107
  %874 = tail call float @llvm.nvvm.fabs.ftz.f(float %673) #5, !dbg !107
  %875 = tail call float @llvm.nvvm.fabs.f(float %673) #5, !dbg !107
  %.01.i101 = select i1 %.not.i100, float %875, float %874, !dbg !107
  %876 = fcmp ult float %.01.i101, 0x3FE3333340000000, !dbg !107
  br i1 %876, label %__internal_fmad.exit3.i107, label %__internal_fmad.exit1.i102, !dbg !107

__internal_fmad.exit1.i102:                       ; preds = %__nv_tanhf.exit99
  %877 = fmul float %.01.i101, 0x4007154760000000, !dbg !107
  %878 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %877) #5, !dbg !107
  %879 = fadd float %878, 1.000000e+00, !dbg !107
  %880 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %879) #6, !dbg !107, !srcloc !37
  %881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i103 = icmp eq i32 %881, 0, !dbg !107
  %882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %880, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %883 = tail call float @llvm.nvvm.fma.rn.f(float %880, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i104 = select i1 %.not6.i103, float %883, float %882, !dbg !107
  %884 = fcmp oge float %.01.i101, 0x4022059680000000, !dbg !107
  %s.0.i105 = select i1 %884, float 1.000000e+00, float %.03.i104, !dbg !107
  %885 = bitcast float %s.0.i105 to i32, !dbg !107
  %886 = bitcast float %673 to i32, !dbg !107
  %887 = and i32 %886, -2147483648, !dbg !107
  %888 = or i32 %887, %885, !dbg !107
  %889 = bitcast i32 %888 to float, !dbg !107
  br label %__nv_tanhf.exit118, !dbg !107

__internal_fmad.exit3.i107:                       ; preds = %__nv_tanhf.exit99
  %890 = fmul float %673, %673, !dbg !107
  %891 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i108 = icmp eq i32 %891, 0, !dbg !107
  %892 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %890, float 0xBFAAC795C0000000) #5, !dbg !107
  %893 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %890, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i109 = select i1 %.not1.i108, float %893, float %892, !dbg !107
  %894 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i110 = icmp eq i32 %894, 0, !dbg !107
  %895 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i109, float %890, float 0x3FC10B2820000000) #5, !dbg !107
  %896 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i109, float %890, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i111 = select i1 %.not2.i110, float %896, float %895, !dbg !107
  %897 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i112 = icmp eq i32 %897, 0, !dbg !107
  %898 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i111, float %890, float 0xBFD5553DA0000000) #5, !dbg !107
  %899 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i111, float %890, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i113 = select i1 %.not3.i112, float %899, float %898, !dbg !107
  %900 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i114 = icmp eq i32 %900, 0, !dbg !107
  %901 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i113, float %890, float 0.000000e+00) #5, !dbg !107
  %902 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i113, float %890, float 0.000000e+00) #5, !dbg !107
  %.04.i115 = select i1 %.not4.i114, float %902, float %901, !dbg !107
  %903 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i116 = icmp eq i32 %903, 0, !dbg !107
  %904 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i115, float %673, float %673) #5, !dbg !107
  %905 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i115, float %673, float %673) #5, !dbg !107
  %.02.i117 = select i1 %.not5.i116, float %905, float %904, !dbg !107
  br label %__nv_tanhf.exit118, !dbg !107

__nv_tanhf.exit118:                               ; preds = %__internal_fmad.exit1.i102, %__internal_fmad.exit3.i107
  %s.1.i106 = phi float [ %889, %__internal_fmad.exit1.i102 ], [ %.02.i117, %__internal_fmad.exit3.i107 ], !dbg !107
  %906 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not.i119 = icmp eq i32 %906, 0, !dbg !107
  %907 = tail call float @llvm.nvvm.fabs.ftz.f(float %674) #5, !dbg !107
  %908 = tail call float @llvm.nvvm.fabs.f(float %674) #5, !dbg !107
  %.01.i120 = select i1 %.not.i119, float %908, float %907, !dbg !107
  %909 = fcmp ult float %.01.i120, 0x3FE3333340000000, !dbg !107
  br i1 %909, label %__internal_fmad.exit3.i126, label %__internal_fmad.exit1.i121, !dbg !107

__internal_fmad.exit1.i121:                       ; preds = %__nv_tanhf.exit118
  %910 = fmul float %.01.i120, 0x4007154760000000, !dbg !107
  %911 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %910) #5, !dbg !107
  %912 = fadd float %911, 1.000000e+00, !dbg !107
  %913 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %912) #6, !dbg !107, !srcloc !37
  %914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not6.i122 = icmp eq i32 %914, 0, !dbg !107
  %915 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %913, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %916 = tail call float @llvm.nvvm.fma.rn.f(float %913, float -2.000000e+00, float 1.000000e+00) #5, !dbg !107
  %.03.i123 = select i1 %.not6.i122, float %916, float %915, !dbg !107
  %917 = fcmp oge float %.01.i120, 0x4022059680000000, !dbg !107
  %s.0.i124 = select i1 %917, float 1.000000e+00, float %.03.i123, !dbg !107
  %918 = bitcast float %s.0.i124 to i32, !dbg !107
  %919 = bitcast float %674 to i32, !dbg !107
  %920 = and i32 %919, -2147483648, !dbg !107
  %921 = or i32 %920, %918, !dbg !107
  %922 = bitcast i32 %921 to float, !dbg !107
  br label %__nv_tanhf.exit137, !dbg !107

__internal_fmad.exit3.i126:                       ; preds = %__nv_tanhf.exit118
  %923 = fmul float %674, %674, !dbg !107
  %924 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not1.i127 = icmp eq i32 %924, 0, !dbg !107
  %925 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %923, float 0xBFAAC795C0000000) #5, !dbg !107
  %926 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %923, float 0xBFAAC795C0000000) #5, !dbg !107
  %.06.i128 = select i1 %.not1.i127, float %926, float %925, !dbg !107
  %927 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not2.i129 = icmp eq i32 %927, 0, !dbg !107
  %928 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i128, float %923, float 0x3FC10B2820000000) #5, !dbg !107
  %929 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i128, float %923, float 0x3FC10B2820000000) #5, !dbg !107
  %.05.i130 = select i1 %.not2.i129, float %929, float %928, !dbg !107
  %930 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not3.i131 = icmp eq i32 %930, 0, !dbg !107
  %931 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i130, float %923, float 0xBFD5553DA0000000) #5, !dbg !107
  %932 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i130, float %923, float 0xBFD5553DA0000000) #5, !dbg !107
  %.0.i132 = select i1 %.not3.i131, float %932, float %931, !dbg !107
  %933 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not4.i133 = icmp eq i32 %933, 0, !dbg !107
  %934 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i132, float %923, float 0.000000e+00) #5, !dbg !107
  %935 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i132, float %923, float 0.000000e+00) #5, !dbg !107
  %.04.i134 = select i1 %.not4.i133, float %935, float %934, !dbg !107
  %936 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !107
  %.not5.i135 = icmp eq i32 %936, 0, !dbg !107
  %937 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i134, float %674, float %674) #5, !dbg !107
  %938 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i134, float %674, float %674) #5, !dbg !107
  %.02.i136 = select i1 %.not5.i135, float %938, float %937, !dbg !107
  br label %__nv_tanhf.exit137, !dbg !107

__nv_tanhf.exit137:                               ; preds = %__internal_fmad.exit1.i121, %__internal_fmad.exit3.i126
  %s.1.i125 = phi float [ %922, %__internal_fmad.exit1.i121 ], [ %.02.i136, %__internal_fmad.exit3.i126 ], !dbg !107
  %939 = fadd float %s.1.i, 1.000000e+00, !dbg !108
  %940 = fadd float %s.1.i11, 1.000000e+00, !dbg !108
  %941 = fadd float %s.1.i30, 1.000000e+00, !dbg !108
  %942 = fadd float %s.1.i49, 1.000000e+00, !dbg !108
  %943 = fadd float %s.1.i68, 1.000000e+00, !dbg !108
  %944 = fadd float %s.1.i87, 1.000000e+00, !dbg !108
  %945 = fadd float %s.1.i106, 1.000000e+00, !dbg !108
  %946 = fadd float %s.1.i125, 1.000000e+00, !dbg !108
  %947 = fmul float %627, %939, !dbg !109
  %948 = fmul float %628, %940, !dbg !109
  %949 = fmul float %629, %941, !dbg !109
  %950 = fmul float %630, %942, !dbg !109
  %951 = fmul float %631, %943, !dbg !109
  %952 = fmul float %632, %944, !dbg !109
  %953 = fmul float %633, %945, !dbg !109
  %954 = fmul float %634, %946, !dbg !109
  %955 = select i1 %568, float %592, float %947, !dbg !110
  %956 = select i1 %568, float %593, float %948, !dbg !110
  %957 = select i1 %568, float %594, float %949, !dbg !110
  %958 = select i1 %568, float %595, float %950, !dbg !110
  %959 = select i1 %568, float %596, float %951, !dbg !110
  %960 = select i1 %568, float %597, float %952, !dbg !110
  %961 = select i1 %568, float %598, float %953, !dbg !110
  %962 = select i1 %568, float %599, float %954, !dbg !110
  %963 = fmul float %565, %955, !dbg !111
  %964 = fmul float %565, %956, !dbg !111
  %965 = fmul float %565, %957, !dbg !111
  %966 = fmul float %565, %958, !dbg !111
  %967 = fmul float %565, %959, !dbg !111
  %968 = fmul float %565, %960, !dbg !111
  %969 = fmul float %565, %961, !dbg !111
  %970 = fmul float %565, %962, !dbg !111
  %971 = tail call float @llvm.nvvm.round.f(float %963) #5, !dbg !112
  %972 = tail call float @llvm.nvvm.round.f(float %964) #5, !dbg !112
  %973 = tail call float @llvm.nvvm.round.f(float %965) #5, !dbg !112
  %974 = tail call float @llvm.nvvm.round.f(float %966) #5, !dbg !112
  %975 = tail call float @llvm.nvvm.round.f(float %967) #5, !dbg !112
  %976 = tail call float @llvm.nvvm.round.f(float %968) #5, !dbg !112
  %977 = tail call float @llvm.nvvm.round.f(float %969) #5, !dbg !112
  %978 = tail call float @llvm.nvvm.round.f(float %970) #5, !dbg !112
  %979 = insertelement <4 x float> poison, float %971, i64 0, !dbg !113
  %980 = insertelement <4 x float> %979, float %972, i64 1, !dbg !113
  %981 = insertelement <4 x float> %980, float %973, i64 2, !dbg !113
  %982 = insertelement <4 x float> %981, float %974, i64 3, !dbg !113
  %983 = fcmp ogt <4 x float> %982, splat (float -1.270000e+02), !dbg !113
  %984 = fcmp uno <4 x float> %982, zeroinitializer, !dbg !115
  %985 = or <4 x i1> %983, %984, !dbg !116
  %986 = select <4 x i1> %985, <4 x float> %982, <4 x float> splat (float -1.270000e+02), !dbg !117
  %987 = fcmp olt <4 x float> %986, splat (float 1.270000e+02), !dbg !118
  %988 = fcmp uno <4 x float> %986, zeroinitializer, !dbg !120
  %989 = or <4 x i1> %987, %988, !dbg !121
  %990 = fptosi <4 x float> %986 to <4 x i8>, !dbg !122
  %991 = select <4 x i1> %989, <4 x i8> %990, <4 x i8> splat (i8 127), !dbg !123
  %992 = insertelement <4 x float> poison, float %975, i64 0, !dbg !113
  %993 = insertelement <4 x float> %992, float %976, i64 1, !dbg !113
  %994 = insertelement <4 x float> %993, float %977, i64 2, !dbg !113
  %995 = insertelement <4 x float> %994, float %978, i64 3, !dbg !113
  %996 = fcmp ogt <4 x float> %995, splat (float -1.270000e+02), !dbg !113
  %997 = fcmp uno <4 x float> %995, zeroinitializer, !dbg !115
  %998 = or <4 x i1> %996, %997, !dbg !116
  %999 = select <4 x i1> %998, <4 x float> %995, <4 x float> splat (float -1.270000e+02), !dbg !117
  %1000 = fcmp olt <4 x float> %999, splat (float 1.270000e+02), !dbg !118
  %1001 = fcmp uno <4 x float> %999, zeroinitializer, !dbg !120
  %1002 = or <4 x i1> %1000, %1001, !dbg !121
  %1003 = fptosi <4 x float> %999 to <4 x i8>, !dbg !122
  %1004 = select <4 x i1> %1002, <4 x i8> %1003, <4 x i8> splat (i8 127), !dbg !123
  %1005 = add i32 %570, %566, !dbg !124
  %1006 = sext i32 %1005 to i64, !dbg !125
  %1007 = getelementptr i8, ptr addrspace(1) %4, i64 %1006, !dbg !125
  %1008 = bitcast <4 x i8> %991 to i32, !dbg !126
  %1009 = bitcast <4 x i8> %1004 to i32, !dbg !126
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %1008, i32 %1009, ptr addrspace(1) %1007, i1 %15) #5, !dbg !126
  %indvars.iv.next307 = add nuw nsw i64 %indvars.iv306, 64, !dbg !89
  %1010 = icmp samesign ult i64 %indvars.iv306, 15296, !dbg !89
  br i1 %1010, label %567, label %1011, !dbg !89

1011:                                             ; preds = %__nv_tanhf.exit137
  ret void, !dbg !127
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 42, column: 39, scope: !6)
!16 = !DILocation(line: 46, column: 40, scope: !6)
!17 = !DILocation(line: 68, column: 50, scope: !6)
!18 = !DILocation(line: 31, column: 40, scope: !6)
!19 = !DILocation(line: 41, column: 22, scope: !6)
!20 = !DILocation(line: 42, column: 45, scope: !6)
!21 = !DILocation(line: 42, column: 34, scope: !6)
!22 = !DILocation(line: 42, column: 71, scope: !6)
!23 = !DILocation(line: 42, column: 53, scope: !6)
!24 = !DILocation(line: 42, column: 121, scope: !6)
!25 = !DILocation(line: 43, column: 23, scope: !6)
!26 = !DILocation(line: 46, column: 46, scope: !6)
!27 = !DILocation(line: 46, column: 34, scope: !6)
!28 = !DILocation(line: 46, column: 82, scope: !6)
!29 = !DILocation(line: 46, column: 64, scope: !6)
!30 = !DILocation(line: 48, column: 23, scope: !6)
!31 = !DILocation(line: 49, column: 23, scope: !6)
!32 = !DILocation(line: 50, column: 24, scope: !6)
!33 = !DILocation(line: 52, column: 24, scope: !6)
!34 = !DILocation(line: 53, column: 23, scope: !6)
!35 = !DILocation(line: 55, column: 24, scope: !6)
!36 = !DILocation(line: 56, column: 31, scope: !6)
!37 = !{i32 21046}
!38 = !DILocation(line: 58, column: 24, scope: !6)
!39 = !DILocation(line: 96, column: 21, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !6, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 65, column: 47, scope: !6)
!43 = !DILocation(line: 104, column: 21, scope: !40, inlinedAt: !44)
!44 = !DILocation(line: 67, column: 47, scope: !6)
!45 = !DILocation(line: 59, column: 24, scope: !6)
!46 = !DILocation(line: 63, column: 37, scope: !6)
!47 = !DILocation(line: 94, column: 15, scope: !40, inlinedAt: !42)
!48 = !DILocation(line: 96, column: 16, scope: !40, inlinedAt: !42)
!49 = !DILocation(line: 97, column: 29, scope: !40, inlinedAt: !42)
!50 = !DILocation(line: 66, column: 50, scope: !6)
!51 = !DILocation(line: 102, column: 15, scope: !40, inlinedAt: !44)
!52 = !DILocation(line: 104, column: 16, scope: !40, inlinedAt: !44)
!53 = !DILocation(line: 105, column: 29, scope: !40, inlinedAt: !44)
!54 = !DILocation(line: 94, column: 15, scope: !55, inlinedAt: !56)
!55 = distinct !DILexicalBlockFile(scope: !40, file: !41, discriminator: 0)
!56 = !DILocation(line: 69, column: 40, scope: !6)
!57 = !DILocation(line: 96, column: 21, scope: !55, inlinedAt: !56)
!58 = !DILocation(line: 96, column: 16, scope: !55, inlinedAt: !56)
!59 = !DILocation(line: 97, column: 29, scope: !55, inlinedAt: !56)
!60 = !DILocation(line: 110, column: 29, scope: !40, inlinedAt: !56)
!61 = !DILocation(line: 71, column: 37, scope: !6)
!62 = !DILocation(line: 102, column: 15, scope: !55, inlinedAt: !63)
!63 = !DILocation(line: 70, column: 40, scope: !6)
!64 = !DILocation(line: 104, column: 21, scope: !55, inlinedAt: !63)
!65 = !DILocation(line: 104, column: 16, scope: !55, inlinedAt: !63)
!66 = !DILocation(line: 105, column: 29, scope: !55, inlinedAt: !63)
!67 = !DILocation(line: 115, column: 29, scope: !40, inlinedAt: !63)
!68 = !DILocation(line: 72, column: 37, scope: !6)
!69 = !DILocation(line: 71, column: 25, scope: !6)
!70 = !DILocation(line: 72, column: 25, scope: !6)
!71 = !DILocation(line: 97, column: 29, scope: !40, inlinedAt: !72)
!72 = !DILocation(line: 107, column: 46, scope: !6)
!73 = !DILocation(line: 108, column: 17, scope: !6)
!74 = !DILocation(line: 105, column: 29, scope: !40, inlinedAt: !75)
!75 = !DILocation(line: 109, column: 46, scope: !6)
!76 = !DILocation(line: 102, column: 15, scope: !40, inlinedAt: !77)
!77 = !DILocation(line: 110, column: 46, scope: !6)
!78 = !DILocation(line: 104, column: 21, scope: !40, inlinedAt: !77)
!79 = !DILocation(line: 104, column: 16, scope: !40, inlinedAt: !77)
!80 = !DILocation(line: 105, column: 29, scope: !40, inlinedAt: !77)
!81 = !DILocation(line: 112, column: 24, scope: !6)
!82 = !DILocation(line: 102, column: 15, scope: !40, inlinedAt: !83)
!83 = !DILocation(line: 115, column: 46, scope: !6)
!84 = !DILocation(line: 104, column: 21, scope: !40, inlinedAt: !83)
!85 = !DILocation(line: 104, column: 16, scope: !40, inlinedAt: !83)
!86 = !DILocation(line: 105, column: 29, scope: !40, inlinedAt: !83)
!87 = !DILocation(line: 118, column: 25, scope: !6)
!88 = !DILocation(line: 130, column: 42, scope: !6)
!89 = !DILocation(line: 73, column: 40, scope: !6)
!90 = !DILocation(line: 83, column: 24, scope: !6)
!91 = !DILocation(line: 84, column: 46, scope: !6)
!92 = !DILocation(line: 84, column: 35, scope: !6)
!93 = !DILocation(line: 84, column: 72, scope: !6)
!94 = !DILocation(line: 84, column: 54, scope: !6)
!95 = !DILocation(line: 84, column: 123, scope: !6)
!96 = !DILocation(line: 85, column: 25, scope: !6)
!97 = !DILocation(line: 88, column: 47, scope: !6)
!98 = !DILocation(line: 88, column: 35, scope: !6)
!99 = !DILocation(line: 88, column: 83, scope: !6)
!100 = !DILocation(line: 88, column: 65, scope: !6)
!101 = !DILocation(line: 90, column: 24, scope: !6)
!102 = !DILocation(line: 91, column: 24, scope: !6)
!103 = !DILocation(line: 92, column: 24, scope: !6)
!104 = !DILocation(line: 94, column: 24, scope: !6)
!105 = !DILocation(line: 95, column: 24, scope: !6)
!106 = !DILocation(line: 97, column: 24, scope: !6)
!107 = !DILocation(line: 98, column: 31, scope: !6)
!108 = !DILocation(line: 100, column: 24, scope: !6)
!109 = !DILocation(line: 101, column: 24, scope: !6)
!110 = !DILocation(line: 105, column: 39, scope: !6)
!111 = !DILocation(line: 121, column: 24, scope: !6)
!112 = !DILocation(line: 122, column: 36, scope: !6)
!113 = !DILocation(line: 102, column: 15, scope: !40, inlinedAt: !114)
!114 = !DILocation(line: 125, column: 46, scope: !6)
!115 = !DILocation(line: 104, column: 21, scope: !40, inlinedAt: !114)
!116 = !DILocation(line: 104, column: 16, scope: !40, inlinedAt: !114)
!117 = !DILocation(line: 105, column: 29, scope: !40, inlinedAt: !114)
!118 = !DILocation(line: 94, column: 15, scope: !40, inlinedAt: !119)
!119 = !DILocation(line: 127, column: 46, scope: !6)
!120 = !DILocation(line: 96, column: 21, scope: !40, inlinedAt: !119)
!121 = !DILocation(line: 96, column: 16, scope: !40, inlinedAt: !119)
!122 = !DILocation(line: 129, column: 25, scope: !6)
!123 = !DILocation(line: 97, column: 29, scope: !40, inlinedAt: !119)
!124 = !DILocation(line: 130, column: 36, scope: !6)
!125 = !DILocation(line: 130, column: 29, scope: !6)
!126 = !DILocation(line: 130, column: 54, scope: !6)
!127 = !DILocation(line: 73, column: 4, scope: !6)
