//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_4,
	.param .u32 triton_red_fused_addmm_0_param_5,
	.param .u32 triton_red_fused_addmm_0_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<36>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<92>;
	.reg .f32 	%f<154>;
	.reg .b64 	%rd<24>;
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused_addmm_0_param_4];
	ld.param.u64 	%rd9, [triton_red_fused_addmm_0_param_3];
	ld.param.u64 	%rd8, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd7, [triton_red_fused_addmm_0_param_1];
	ld.param.u64 	%rd12, [triton_red_fused_addmm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:28
	mov.u32 	%r7, %ctaid.x;
	.loc	1 23 33                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:33
	shl.b32 	%r1, %r7, 3;
	.loc	1 24 44                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 6, 3;
	.loc	1 24 23                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:23
	or.b32  	%r4, %r3, %r1;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p18, %r4, 18432;
	.loc	1 26 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:26:37
	shl.b32 	%r8, %r2, 3;
	and.b32  	%r9, %r8, 504;
	and.b32  	%r10, %r2, 511;
	shl.b32 	%r11, %r10, 2;
	mov.u32 	%r12, global_smem;
	add.s32 	%r33, %r12, %r11;
	shl.b32 	%r13, %r9, 2;
	add.s32 	%r6, %r12, %r13;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	mul.lo.s32 	%r14, %r3, 3072;
	mad.lo.s32 	%r15, %r7, 24576, %r14;
	or.b32  	%r16, %r15, %r9;
	cvt.u64.u32 	%rd1, %r16;
	mul.wide.u32 	%rd13, %r10, 2;
	add.s64 	%rd22, %rd12, %rd13;
	mov.f32 	%f47, 0f00000000;
	mov.b64 	%rd23, -512;
	mov.f32 	%f138, %f47;
	mov.f32 	%f139, %f47;
	mov.f32 	%f140, %f47;
	mov.f32 	%f141, %f47;
	mov.f32 	%f142, %f47;
	mov.f32 	%f143, %f47;
	mov.f32 	%f144, %f47;
	mov.f32 	%f145, %f47;
	mov.f32 	%f146, %f47;
	mov.f32 	%f147, %f47;
	mov.f32 	%f148, %f47;
	mov.f32 	%f149, %f47;
	mov.f32 	%f150, %f47;
	mov.f32 	%f151, %f47;
	mov.f32 	%f152, %f47;
	mov.f32 	%f153, %f47;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:0:40
	mov.b16 	%rs2, 0;
	mov.pred 	%p25, -1;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p25 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 37 94                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:94
	cvt.f32.bf16 	%f49, %rs1;
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	add.s64 	%rd17, %rd1, %rd23;
	cvt.u32.u64 	%r35, %rd17;
	add.s32 	%r36, %r35, 512;
	mul.wide.s32 	%rd18, %r36, 2;
	add.s64 	%rd15, %rd7, %rd18;
	mov.b32 	%r21, 0;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u32 %r17, %r21;
	mov.u32 %r18, %r21;
	mov.u32 %r19, %r21;
	mov.u32 %r20, %r21;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd16, %rd8, %rd18;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u32 %r25, %r21;
	mov.u32 %r26, %r21;
	mov.u32 %r27, %r21;
	mov.u32 %r28, %r21;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd16 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f51, %f47, %f49;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f52, %f51, 0f3FB8AA3B;
	ex2.approx.f32 	%f53, %f52;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f54, %f53, 0f3F800000;
	mov.f32 	%f55, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f56, %f55, %f54;
$L__tmp2:
	.loc	1 42 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:42:22
	mul.f32 	%f57, %f56, %f49;
	.loc	1 46 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:46:22
	bar.sync 	0;
	mov.b32 	%r34, %f57;
	// begin inline asm
	@%p25 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	.loc	1 39 114                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:114
	mov.b32 	{%rs3, %rs4}, %r19;
	cvt.f32.bf16 	%f58, %rs3;
	mov.b32 	{%rs5, %rs6}, %r18;
	cvt.f32.bf16 	%f59, %rs6;
	cvt.f32.bf16 	%f60, %rs5;
	mov.b32 	{%rs7, %rs8}, %r17;
	cvt.f32.bf16 	%f61, %rs8;
	cvt.f32.bf16 	%f62, %rs7;
	mov.b32 	{%rs9, %rs10}, %r28;
	cvt.f32.bf16 	%f63, %rs10;
	cvt.f32.bf16 	%f64, %rs9;
	mov.b32 	{%rs11, %rs12}, %r27;
	cvt.f32.bf16 	%f65, %rs12;
	cvt.f32.bf16 	%f66, %rs11;
	mov.b32 	{%rs13, %rs14}, %r26;
	cvt.f32.bf16 	%f67, %rs14;
	cvt.f32.bf16 	%f68, %rs13;
	mov.b32 	{%rs15, %rs16}, %r25;
	cvt.f32.bf16 	%f69, %rs16;
	cvt.f32.bf16 	%f70, %rs15;
	cvt.f32.bf16 	%f71, %rs4;
	mov.b32 	{%rs17, %rs18}, %r20;
	cvt.f32.bf16 	%f72, %rs17;
	cvt.f32.bf16 	%f73, %rs18;
	.loc	1 46 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:46:22
	ld.shared.v4.f32 	{%f74, %f75, %f76, %f77}, [%r6];
	ld.shared.v4.f32 	{%f78, %f79, %f80, %f81}, [%r6+16];
	.loc	1 53 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:53:25
	fma.rn.f32 	%f82, %f81, %f73, %f153;
	fma.rn.f32 	%f83, %f80, %f72, %f152;
	fma.rn.f32 	%f84, %f79, %f71, %f151;
	fma.rn.f32 	%f85, %f74, %f70, %f138;
	fma.rn.f32 	%f86, %f75, %f69, %f139;
	fma.rn.f32 	%f87, %f76, %f68, %f140;
	fma.rn.f32 	%f88, %f77, %f67, %f141;
	fma.rn.f32 	%f89, %f78, %f66, %f142;
	fma.rn.f32 	%f90, %f79, %f65, %f143;
	fma.rn.f32 	%f91, %f80, %f64, %f144;
	fma.rn.f32 	%f92, %f81, %f63, %f145;
	fma.rn.f32 	%f93, %f74, %f62, %f146;
	fma.rn.f32 	%f94, %f75, %f61, %f147;
	fma.rn.f32 	%f95, %f76, %f60, %f148;
	fma.rn.f32 	%f96, %f77, %f59, %f149;
	fma.rn.f32 	%f97, %f78, %f58, %f150;
	.loc	1 54 50                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:54:50
	selp.f32 	%f150, %f97, %f150, %p18;
	selp.f32 	%f149, %f96, %f149, %p18;
	selp.f32 	%f148, %f95, %f148, %p18;
	selp.f32 	%f147, %f94, %f147, %p18;
	selp.f32 	%f146, %f93, %f146, %p18;
	selp.f32 	%f145, %f92, %f145, %p18;
	selp.f32 	%f144, %f91, %f144, %p18;
	selp.f32 	%f143, %f90, %f143, %p18;
	selp.f32 	%f142, %f89, %f142, %p18;
	selp.f32 	%f141, %f88, %f141, %p18;
	selp.f32 	%f140, %f87, %f140, %p18;
	selp.f32 	%f139, %f86, %f139, %p18;
	selp.f32 	%f138, %f85, %f138, %p18;
	selp.f32 	%f151, %f84, %f151, %p18;
	selp.f32 	%f152, %f83, %f152, %p18;
	selp.f32 	%f153, %f82, %f153, %p18;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	add.s64 	%rd23, %rd23, 512;
	add.s64 	%rd22, %rd22, 1024;
	setp.lt.u64 	%p21, %rd23, 2560;
	@%p21 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 24 44                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:44
	and.b32  	%r55, %r2, 7;
	and.b32  	%r56, %r2, 31;
	.loc	1 24 23                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:23
	or.b32  	%r57, %r1, %r55;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p32, %r57, 18432;
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f146, %f147;
	add.f32 	%f99, %f148, %f98;
	add.f32 	%f100, %f149, %f99;
	add.f32 	%f101, %f150, %f100;
	add.f32 	%f102, %f151, %f101;
	add.f32 	%f103, %f152, %f102;
	add.f32 	%f104, %f153, %f103;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r58, %f104;
	shfl.sync.bfly.b32	%r59, %r58, 16, 31, -1;
	mov.b32 	%f105, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r60, %f106;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f107, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r62, %f108;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f109, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f110;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f111, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f112;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f113, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p22, %r56, 0;
	shr.u32 	%r68, %r2, 3;
	and.b32  	%r69, %r68, 4;
	shl.b32 	%r70, %r3, 3;
	or.b32  	%r71, %r70, %r69;
	add.s32 	%r37, %r12, %r71;
	mov.b32 	%r38, %f114;
	// begin inline asm
	@%p22 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r2, 16;
	shl.b32 	%r73, %r2, 2;
	add.s32 	%r40, %r12, %r73;
	// begin inline asm
	@%p23 ld.shared.b32 %r39, [ %r40 + 0 ];
	// end inline asm
	mov.b32 	%f115, %r39;
	shfl.sync.bfly.b32	%r74, %r39, 1, 31, -1;
	mov.b32 	%f116, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r75, %r2, 1;
	setp.eq.b32 	%p33, %r75, 1;
	not.pred 	%p34, %p33;
	and.pred  	%p24, %p23, %p34;
	mov.b32 	%r42, %f117;
	// begin inline asm
	@%p24 st.shared.b32 [ %r40 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r76, %r12, %r70;
	ld.shared.u32 	%r44, [%r76];
$L__tmp4:
	.loc	1 55 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:55:30
	bar.sync 	0;
	shl.b32 	%r77, %r3, 2;
	sub.s32 	%r51, %r76, %r77;
	// begin inline asm
	@%p25 st.shared.b32 [ %r51 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r55, 2;
	add.s32 	%r79, %r12, %r78;
	ld.shared.u32 	%r53, [%r79];
$L__tmp5:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f138, %f139;
	add.f32 	%f119, %f140, %f118;
	add.f32 	%f120, %f141, %f119;
	add.f32 	%f121, %f142, %f120;
	add.f32 	%f122, %f143, %f121;
	add.f32 	%f123, %f144, %f122;
	add.f32 	%f124, %f145, %f123;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f124;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f125, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r82, %f126;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f127, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r84, %f128;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f129, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r86, %f130;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f131, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r88, %f132;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f133, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r46, %f134;
	// begin inline asm
	@%p22 st.shared.b32 [ %r37 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p23 ld.shared.b32 %r47, [ %r40 + 0 ];
	// end inline asm
	mov.b32 	%f135, %r47;
	shfl.sync.bfly.b32	%r90, %r47, 1, 31, -1;
	mov.b32 	%f136, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r50, %f137;
	// begin inline asm
	@%p24 st.shared.b32 [ %r40 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r52, [%r76];
$L__tmp6:
	.loc	1 56 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:56:30
	bar.sync 	0;
	// begin inline asm
	@%p25 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r54, [%r79];
	.loc	1 57 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:25
	mul.wide.s32 	%rd21, %r57, 4;
	add.s64 	%rd19, %rd9, %rd21;
	.loc	1 57 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:37
	and.b32  	%r91, %r2, 504;
	setp.eq.s32 	%p35, %r91, 0;
	and.pred  	%p30, %p35, %p32;
	// begin inline asm
	@%p30 st.global.b32 [ %rd19 + 0 ], { %r53 };
	// end inline asm
	.loc	1 58 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:25
	add.s64 	%rd20, %rd10, %rd21;
	.loc	1 58 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:37
	// begin inline asm
	@%p30 st.global.b32 [ %rd20 + 0 ], { %r54 };
	// end inline asm
	.loc	1 58 4                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 226                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 100
.b8 101
.b8 106
.b8 114
.b8 102
.b8 121
.b8 118
.b8 50
.b8 107
.b8 119
.b8 101
.b8 100
.b8 52
.b8 52
.b8 118
.b8 112
.b8 108
.b8 100
.b8 117
.b8 51
.b8 108
.b8 113
.b8 51
.b8 102
.b8 113
.b8 121
.b8 113
.b8 113
.b8 122
.b8 116
.b8 97
.b8 108
.b8 111
.b8 101
.b8 119
.b8 99
.b8 98
.b8 55
.b8 51
.b8 53
.b8 114
.b8 54
.b8 119
.b8 105
.b8 114
.b8 117
.b8 120
.b8 55
.b8 97
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 112
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
