; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr !dbg !6 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %6 = shl i32 %5, 11, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = shl i32 %7, 3, !dbg !11
  %9 = and i32 %8, 2040, !dbg !11
  %10 = or disjoint i32 %9, %6, !dbg !12
  %11 = sdiv i32 %10, 64, !dbg !13
  %12 = mul i32 %11, 64, !dbg !14
  %.decomposed = sub i32 %10, %12, !dbg !14
  %13 = srem i32 %11, 64, !dbg !15
  %14 = sdiv i32 %10, 4096, !dbg !16
  %15 = shl nsw i32 %14, 6, !dbg !17
  %16 = add nsw i32 %15, %.decomposed, !dbg !18
  %17 = shl nsw i32 %13, 15, !dbg !19
  %18 = add nsw i32 %16, %17, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr bfloat, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %20) #1, !dbg !22
  %22 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !22
  %23 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !22
  %24 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !22
  %25 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !22
  %26 = sext i32 %10 to i64, !dbg !23
  %27 = getelementptr bfloat, ptr addrspace(1) %1, i64 %26, !dbg !23
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %22, i32 %23, i32 %24, i32 %25, ptr addrspace(1) %27) #1, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4fb53p3khoksiicnjxz32r746ec27pwbi2z5fdym2iavt7tpzut.py", directory: "/tmp/torchinductor_root/4f")
!4 = !{ptr @triton_, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 22, type: !7, scopeLine: 22, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 28, scope: !6)
!10 = !DILocation(line: 24, column: 33, scope: !6)
!11 = !DILocation(line: 25, column: 36, scope: !6)
!12 = !DILocation(line: 25, column: 23, scope: !6)
!13 = !DILocation(line: 28, column: 21, scope: !6)
!14 = !DILocation(line: 27, column: 19, scope: !6)
!15 = !DILocation(line: 28, column: 27, scope: !6)
!16 = !DILocation(line: 29, column: 19, scope: !6)
!17 = !DILocation(line: 31, column: 38, scope: !6)
!18 = !DILocation(line: 31, column: 35, scope: !6)
!19 = !DILocation(line: 31, column: 49, scope: !6)
!20 = !DILocation(line: 31, column: 43, scope: !6)
!21 = !DILocation(line: 31, column: 30, scope: !6)
!22 = !DILocation(line: 31, column: 54, scope: !6)
!23 = !DILocation(line: 32, column: 25, scope: !6)
!24 = !DILocation(line: 32, column: 36, scope: !6)
!25 = !DILocation(line: 32, column: 4, scope: !6)
