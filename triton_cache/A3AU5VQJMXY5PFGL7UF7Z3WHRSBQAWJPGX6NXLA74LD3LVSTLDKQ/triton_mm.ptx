//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<40>;
	.reg .b32 	%r<337>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<66>;
	.loc	1 17 0                          // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:17:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_mm_param_2];
	ld.param.u64 	%rd23, [triton_mm_param_0];
	ld.param.u64 	%rd24, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:40:24
	mov.u32 	%r39, %ctaid.x;
	.loc	1 46 22                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:46:22
	mul.hi.s32 	%r40, %r39, 715827883;
	shr.u32 	%r41, %r40, 31;
	shr.s32 	%r42, %r40, 4;
	add.s32 	%r43, %r42, %r41;
	.loc	1 47 41                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:47:41
	shl.b32 	%r44, %r43, 3;
	.loc	1 47 30                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:47:30
	sub.s32 	%r45, 1, %r44;
	.loc	1 47 50                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:47:50
	min.s32 	%r46, %r45, 8;
	.loc	1 48 40                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:48:40
	rem.s32 	%r47, %r39, %r46;
	.loc	1 48 34                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:48:34
	add.s32 	%r48, %r47, %r44;
	.loc	1 49 19                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:49:19
	mul.lo.s32 	%r49, %r43, 96;
	sub.s32 	%r50, %r39, %r49;
	.loc	1 49 30                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:49:30
	div.s32 	%r51, %r50, %r46;
	.loc	1 51 17                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:51:17
	shl.b32 	%r1, %r48, 7;
	.loc	1 51 40                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:51:40
	mov.u32 	%r2, %tid.x;
	shr.u32 	%r52, %r2, 2;
	and.b32  	%r3, %r52, 8;
	and.b32  	%r53, %r52, 16;
	and.b32  	%r4, %r2, 128;
	shr.u32 	%r54, %r4, 2;
	bfe.u32 	%r55, %r2, 2, 5;
	or.b32  	%r56, %r55, %r54;
	.loc	1 51 27                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:51:27
	or.b32  	%r57, %r1, %r56;
	or.b32  	%r58, %r57, 64;
	.loc	1 52 17                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:52:17
	shl.b32 	%r5, %r51, 6;
	.loc	1 52 40                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:52:40
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r59, %r6, 24;
	.loc	1 52 27                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:52:27
	or.b32  	%r60, %r5, %r56;
	.loc	1 56 24                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:56:24
	mul.hi.s32 	%r61, %r57, 892460737;
	shr.u32 	%r62, %r61, 31;
	shr.u32 	%r63, %r61, 4;
	add.s32 	%r64, %r63, %r62;
	mul.lo.s32 	%r65, %r64, 77;
	sub.s32 	%r66, %r57, %r65;
	mul.hi.s32 	%r67, %r58, 892460737;
	shr.u32 	%r68, %r67, 31;
	shr.u32 	%r69, %r67, 4;
	add.s32 	%r70, %r69, %r68;
	mul.lo.s32 	%r71, %r70, 77;
	sub.s32 	%r72, %r58, %r71;
	.loc	1 58 57                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:58:57
	cvt.u16.u32 	%rs1, %r60;
	mul.hi.s16 	%rs2, %rs1, 10923;
	shr.u16 	%rs3, %rs2, 15;
	shr.u16 	%rs4, %rs2, 7;
	add.s16 	%rs5, %rs4, %rs3;
	mul.lo.s16 	%rs6, %rs5, 768;
	sub.s16 	%rs7, %rs1, %rs6;
	.loc	1 71 29                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:71:29
	mul.lo.s32 	%r73, %r66, 768;
	mul.lo.s32 	%r74, %r72, 768;
	.loc	1 77 54                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:54
	mul.wide.s16 	%r75, %rs7, 768;
	.loc	1 71 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:71:25
	or.b32  	%r76, %r73, %r59;
	or.b32  	%r77, %r74, %r59;
	.loc	1 72 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:25
	mul.wide.s32 	%rd25, %r76, 2;
	add.s64 	%rd13, %rd23, %rd25;
	mul.wide.s32 	%rd26, %r77, 2;
	add.s64 	%rd14, %rd23, %rd26;
	.loc	1 72 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:20
	xor.b32  	%r78, %r6, %r2;
	and.b32  	%r79, %r78, 24;
	shl.b32 	%r80, %r56, 5;
	or.b32  	%r7, %r80, %r79;
	shl.b32 	%r81, %r7, 1;
	mov.u32 	%r82, global_smem;
	add.s32 	%r19, %r82, %r81;
	add.s32 	%r21, %r19, 4096;
	mov.b32 	%r20, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r19 + 0 ], [ %rd13 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r21 + 0 ], [ %rd14 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:50
	or.b32  	%r83, %r75, %r59;
	.loc	1 77 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:25
	mul.wide.s32 	%rd27, %r83, 2;
	add.s64 	%rd15, %rd24, %rd27;
	.loc	1 77 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:20
	add.s32 	%r23, %r19, 24576;
	// begin inline asm
	cp.async.cg.shared.global [ %r23 + 0 ], [ %rd15 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:25
	cvt.s64.s32 	%rd28, %r73;
	cvt.u64.u32 	%rd29, %r59;
	or.b64  	%rd30, %rd28, %rd29;
	shl.b64 	%rd31, %rd30, 1;
	add.s64 	%rd32, %rd23, %rd31;
	add.s64 	%rd16, %rd32, 64;
	cvt.s64.s32 	%rd33, %r74;
	or.b64  	%rd34, %rd33, %rd29;
	shl.b64 	%rd35, %rd34, 1;
	add.s64 	%rd36, %rd23, %rd35;
	add.s64 	%rd17, %rd36, 64;
	.loc	1 72 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:20
	bar.sync 	0;
	add.s32 	%r25, %r19, 8192;
	add.s32 	%r27, %r19, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r25 + 0 ], [ %rd16 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd17 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:25
	cvt.s64.s32 	%rd37, %r75;
	or.b64  	%rd38, %rd37, %rd29;
	shl.b64 	%rd39, %rd38, 1;
	add.s64 	%rd40, %rd24, %rd39;
	add.s64 	%rd18, %rd40, 64;
	.loc	1 77 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:20
	add.s32 	%r29, %r19, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd18 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:25
	add.s64 	%rd19, %rd32, 128;
	add.s64 	%rd20, %rd36, 128;
	.loc	1 72 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:20
	bar.sync 	0;
	add.s32 	%r31, %r19, 16384;
	add.s32 	%r33, %r19, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd19 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd20 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:25
	add.s64 	%rd21, %rd40, 128;
	.loc	1 77 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:20
	add.s32 	%r35, %r19, 32768;
	// begin inline asm
	cp.async.cg.shared.global [ %r35 + 0 ], [ %rd21 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r84, %r2, 2;
	and.b32  	%r85, %r84, 8;
	and.b32  	%r86, %r84, 16;
	and.b32  	%r87, %r84, 24;
	and.b32  	%r88, %r2, 7;
	and.b32  	%r89, %r2, 15;
	shr.u32 	%r90, %r2, 1;
	and.b32  	%r91, %r90, 8;
	xor.b32  	%r9, %r87, %r91;
	or.b32  	%r92, %r53, %r89;
	or.b32  	%r93, %r92, %r54;
	shl.b32 	%r10, %r93, 5;
	or.b32  	%r11, %r10, %r9;
	or.b32  	%r94, %r85, 16;
	or.b32  	%r95, %r91, %r86;
	xor.b32  	%r12, %r95, %r94;
	or.b32  	%r13, %r12, %r10;
	xor.b32  	%r96, %r84, %r2;
	and.b32  	%r97, %r96, 24;
	or.b32  	%r98, %r3, %r88;
	shl.b32 	%r99, %r98, 5;
	or.b32  	%r14, %r97, %r99;
	.loc	1 64 26                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:64:26
	and.b32  	%r100, %r2, 3;
	mul.wide.u32 	%rd41, %r100, 16;
	mul.wide.s32 	%rd42, %r75, 2;
	or.b64  	%rd43, %rd41, %rd42;
	add.s64 	%rd44, %rd43, %rd24;
	add.s64 	%rd64, %rd44, 192;
	mul.wide.s32 	%rd45, %r74, 2;
	or.b64  	%rd46, %rd41, %rd45;
	add.s64 	%rd47, %rd46, %rd23;
	add.s64 	%rd63, %rd47, 192;
	mul.wide.s32 	%rd48, %r73, 2;
	or.b64  	%rd49, %rd41, %rd48;
	add.s64 	%rd50, %rd49, %rd23;
	add.s64 	%rd62, %rd50, 192;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r336, 2;
	mov.b32 	%r335, -1;
	mov.b64 	%rd65, 0;
	shl.b32 	%r248, %r11, 1;
	shl.b32 	%r249, %r13, 1;
	shl.b32 	%r257, %r14, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd65, 21;
	add.s32 	%r243, %r335, 1;
	setp.lt.s32 	%p2, %r243, 3;
	selp.b32 	%r335, %r243, 0, %p2;
	.loc	1 72 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:20
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r244, %r335, 12;
	shl.b32 	%r245, %r335, 13;
	add.s32 	%r247, %r82, %r245;
	add.s32 	%r105, %r247, %r248;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r141, %r142, %r143, %r144}, [%r105];
	// end inline asm
	add.s32 	%r110, %r247, %r249;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r189, %r190, %r191, %r192}, [%r110];
	// end inline asm
	add.s32 	%r250, %r10, %r9;
	shl.b32 	%r251, %r250, 1;
	add.s32 	%r252, %r247, %r251;
	add.s32 	%r115, %r252, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r167, %r168}, [%r115];
	// end inline asm
	add.s32 	%r253, %r10, %r12;
	shl.b32 	%r254, %r253, 1;
	add.s32 	%r255, %r247, %r254;
	add.s32 	%r120, %r255, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r213, %r214, %r215, %r216}, [%r120];
	// end inline asm
	.loc	1 77 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:20
	add.s32 	%r256, %r82, %r244;
	add.s32 	%r258, %r256, %r257;
	add.s32 	%r125, %r258, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r145, %r146, %r193, %r194}, [%r125];
	// end inline asm
	add.s32 	%r130, %r258, 25600;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r151, %r152, %r199, %r200}, [%r130];
	// end inline asm
	add.s32 	%r135, %r258, 26624;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r157, %r158, %r205, %r206}, [%r135];
	// end inline asm
	add.s32 	%r140, %r258, 27648;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r163, %r164, %r211, %r212}, [%r140];
	// end inline asm
	.loc	1 78 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r141, %r142, %r143, %r144 }, { %r145, %r146 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r141, %r142, %r143, %r144 }, { %r151, %r152 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r141, %r142, %r143, %r144 }, { %r157, %r158 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r141, %r142, %r143, %r144 }, { %r163, %r164 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r165, %r166, %r167, %r168 }, { %r145, %r146 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r165, %r166, %r167, %r168 }, { %r151, %r152 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r165, %r166, %r167, %r168 }, { %r157, %r158 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r165, %r166, %r167, %r168 }, { %r163, %r164 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r189, %r190, %r191, %r192 }, { %r193, %r194 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r189, %r190, %r191, %r192 }, { %r199, %r200 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r189, %r190, %r191, %r192 }, { %r205, %r206 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r189, %r190, %r191, %r192 }, { %r211, %r212 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r213, %r214, %r215, %r216 }, { %r193, %r194 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r213, %r214, %r215, %r216 }, { %r199, %r200 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r213, %r214, %r215, %r216 }, { %r205, %r206 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r213, %r214, %r215, %r216 }, { %r211, %r212 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 64 26                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:64:26
	add.s32 	%r259, %r336, 1;
	setp.lt.s32 	%p3, %r259, 3;
	selp.b32 	%r336, %r259, 0, %p3;
	.loc	1 72 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:72:20
	shl.b32 	%r260, %r336, 12;
	shl.b32 	%r261, %r336, 13;
	add.s32 	%r262, %r82, %r261;
	bar.sync 	0;
	add.s32 	%r237, %r262, %r81;
	add.s32 	%r239, %r237, 4096;
	selp.b32 	%r238, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r237 + 0 ], [ %rd62 + 0 ], 0x10, %r238;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r239 + 0 ], [ %rd63 + 0 ], 0x10, %r238;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:77:20
	add.s32 	%r241, %r23, %r260;
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd64 + 0 ], 0x10, %r238;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:64:26
	add.s64 	%rd65, %rd65, 1;
	add.s64 	%rd64, %rd64, 64;
	add.s64 	%rd63, %rd63, 64;
	add.s64 	%rd62, %rd62, 64;
	setp.ne.s64 	%p4, %rd65, 24;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:52:40
	and.b32  	%r296, %r6, 56;
	.loc	1 52 27                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:52:27
	or.b32  	%r297, %r5, %r296;
	.loc	1 51 40                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:51:40
	bfe.u32 	%r298, %r2, 3, 5;
	.loc	1 51 27                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:51:27
	or.b32  	%r299, %r298, %r1;
	or.b32  	%r300, %r299, 64;
	or.b32  	%r301, %r299, 32;
	.loc	1 64 26                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:85:20
	setp.lt.s32 	%p25, %r299, 77;
	setp.lt.s32 	%p26, %r301, 77;
	setp.lt.s32 	%p27, %r300, 77;
	setp.lt.s32 	%p28, %r1, 0;
	.loc	1 85 34                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:85:34
	setp.lt.s32 	%p29, %r297, 768;
	.loc	1 85 26                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:85:26
	and.pred  	%p21, %p25, %p29;
	and.pred  	%p22, %p26, %p29;
	and.pred  	%p23, %p27, %p29;
	and.pred  	%p24, %p28, %p29;
	.loc	1 88 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:88:25
	mad.lo.s32 	%r302, %r299, 768, %r297;
	add.s32 	%r303, %r302, 24576;
	.loc	1 88 21                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:88:21
	add.s32 	%r304, %r302, 49152;
	add.s32 	%r305, %r302, 73728;
	.loc	1 89 25                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:89:25
	mul.wide.s32 	%rd58, %r302, 2;
	add.s64 	%rd54, %rd12, %rd58;
	mul.wide.s32 	%rd59, %r303, 2;
	add.s64 	%rd55, %rd12, %rd59;
	mul.wide.s32 	%rd60, %r304, 2;
	add.s64 	%rd56, %rd12, %rd60;
	mul.wide.s32 	%rd61, %r305, 2;
	add.s64 	%rd57, %rd12, %rd61;
	.loc	1 89 67                         // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:89:67
	cvt.rn.bf16.f32 	%rs8, %f194;
	cvt.rn.bf16.f32 	%rs9, %f195;
	cvt.rn.bf16.f32 	%rs10, %f196;
	cvt.rn.bf16.f32 	%rs11, %f197;
	cvt.rn.bf16.f32 	%rs12, %f198;
	cvt.rn.bf16.f32 	%rs13, %f199;
	cvt.rn.bf16.f32 	%rs14, %f200;
	cvt.rn.bf16.f32 	%rs15, %f201;
	cvt.rn.bf16.f32 	%rs16, %f202;
	cvt.rn.bf16.f32 	%rs17, %f203;
	cvt.rn.bf16.f32 	%rs18, %f204;
	cvt.rn.bf16.f32 	%rs19, %f205;
	cvt.rn.bf16.f32 	%rs20, %f206;
	cvt.rn.bf16.f32 	%rs21, %f207;
	cvt.rn.bf16.f32 	%rs22, %f208;
	cvt.rn.bf16.f32 	%rs23, %f209;
	cvt.rn.bf16.f32 	%rs24, %f210;
	cvt.rn.bf16.f32 	%rs25, %f211;
	cvt.rn.bf16.f32 	%rs26, %f212;
	cvt.rn.bf16.f32 	%rs27, %f213;
	cvt.rn.bf16.f32 	%rs28, %f214;
	cvt.rn.bf16.f32 	%rs29, %f215;
	cvt.rn.bf16.f32 	%rs30, %f216;
	cvt.rn.bf16.f32 	%rs31, %f217;
	cvt.rn.bf16.f32 	%rs32, %f218;
	cvt.rn.bf16.f32 	%rs33, %f219;
	cvt.rn.bf16.f32 	%rs34, %f220;
	cvt.rn.bf16.f32 	%rs35, %f221;
	cvt.rn.bf16.f32 	%rs36, %f222;
	cvt.rn.bf16.f32 	%rs37, %f223;
	cvt.rn.bf16.f32 	%rs38, %f224;
	cvt.rn.bf16.f32 	%rs39, %f225;
	shl.b32 	%r306, %r2, 1;
	and.b32  	%r307, %r306, 6;
	shl.b32 	%r308, %r2, 4;
	and.b32  	%r309, %r308, 1472;
	or.b32  	%r310, %r309, %r307;
	shl.b32 	%r311, %r4, 4;
	or.b32  	%r312, %r310, %r311;
	or.b32  	%r313, %r312, %r3;
	and.b32  	%r314, %r6, 2040;
	shr.u32 	%r315, %r312, 3;
	add.s32 	%r316, %r315, %r313;
	shl.b32 	%r317, %r316, 1;
	add.s32 	%r264, %r82, %r317;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r264 + 0 ], { %rs8, %rs9 };
	// end inline asm
	or.b32  	%r319, %r312, 512;
	shr.u32 	%r320, %r319, 3;
	and.b32  	%r321, %r320, 504;
	add.s32 	%r322, %r321, %r313;
	shl.b32 	%r323, %r322, 1;
	add.s32 	%r324, %r82, %r323;
	add.s32 	%r265, %r324, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r265 + 0 ], { %rs10, %rs11 };
	// end inline asm
	add.s32 	%r266, %r264, 32;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs12, %rs13 };
	// end inline asm
	add.s32 	%r267, %r324, 1056;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs14, %rs15 };
	// end inline asm
	add.s32 	%r268, %r264, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs16, %rs17 };
	// end inline asm
	add.s32 	%r269, %r324, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs18, %rs19 };
	// end inline asm
	add.s32 	%r270, %r264, 96;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs20, %rs21 };
	// end inline asm
	add.s32 	%r271, %r324, 1120;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs22, %rs23 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r325, %r2, 248;
	add.s32 	%r326, %r314, %r325;
	shl.b32 	%r327, %r326, 1;
	add.s32 	%r328, %r82, %r327;
	ld.shared.v4.u32 	{%r280, %r281, %r282, %r283}, [%r328];
	or.b32  	%r329, %r314, 2048;
	shr.u32 	%r330, %r329, 3;
	and.b32  	%r331, %r330, 504;
	add.s32 	%r332, %r331, %r314;
	shl.b32 	%r333, %r332, 1;
	add.s32 	%r334, %r82, %r333;
	ld.shared.v4.u32 	{%r284, %r285, %r286, %r287}, [%r334+4096];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r264 + 0 ], { %rs24, %rs25 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r265 + 0 ], { %rs26, %rs27 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs28, %rs29 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs30, %rs31 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs32, %rs33 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs34, %rs35 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs36, %rs37 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs38, %rs39 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r288, %r289, %r290, %r291}, [%r328];
	ld.shared.v4.u32 	{%r292, %r293, %r294, %r295}, [%r334+4096];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd54 + 0 ], { %r280, %r281, %r282, %r283 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd55 + 0 ], { %r284, %r285, %r286, %r287 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd56 + 0 ], { %r288, %r289, %r290, %r291 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd57 + 0 ], { %r292, %r293, %r294, %r295 };
	// end inline asm
	.loc	1 89 4                          // cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/th/cthilfki5by4vkzy4bvzlxs5xtikuunmbb5mslywnschtdnniyij.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 104
.b8 105
.b8 108
.b8 102
.b8 107
.b8 105
.b8 53
.b8 98
.b8 121
.b8 52
.b8 118
.b8 107
.b8 122
.b8 121
.b8 52
.b8 98
.b8 118
.b8 122
.b8 108
.b8 120
.b8 115
.b8 53
.b8 120
.b8 116
.b8 105
.b8 107
.b8 117
.b8 117
.b8 110
.b8 109
.b8 98
.b8 98
.b8 53
.b8 109
.b8 115
.b8 108
.b8 121
.b8 119
.b8 110
.b8 115
.b8 99
.b8 104
.b8 116
.b8 100
.b8 110
.b8 110
.b8 105
.b8 121
.b8 105
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 116
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
