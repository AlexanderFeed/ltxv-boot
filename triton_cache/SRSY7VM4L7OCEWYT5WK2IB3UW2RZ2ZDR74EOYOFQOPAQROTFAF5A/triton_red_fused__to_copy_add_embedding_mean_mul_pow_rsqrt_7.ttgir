#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [8, 1], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0)
#loc1 = loc(unknown)
#loc43 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":52:27)
#loc76 = loc(callsite(#loc1 at #loc43))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_7(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.096000e+03> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x4xbf16, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x4xbf16, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<1x4xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<64x4xf32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<true> : tensor<64x1xi1, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<32128> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0> : tensor<64x1xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<64x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<64x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>, #blocked> loc(#loc8)
    %10 = tt.addptr %9, %5 : tensor<64x1x!tt.ptr<i64>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc8)
    %11 = tt.load %10, %6 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>, #blocked> loc(#loc9)
    %12 = arith.muli %5, %cst_6 : tensor<64x1xi32, #blocked> loc(#loc10)
    %13 = tt.broadcast %12 : tensor<64x1xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc11)
    %14 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc12)
    %15 = tt.broadcast %6 : tensor<64x1xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc13)
    %16 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc14)
    %17 = arith.addi %11, %cst_9 : tensor<64x1xi64, #blocked> loc(#loc15)
    %18 = arith.cmpi slt, %11, %cst_10 : tensor<64x1xi64, #blocked> loc(#loc16)
    %19 = arith.select %18, %17, %11 : tensor<64x1xi1, #blocked>, tensor<64x1xi64, #blocked> loc(#loc17)
    %20 = arith.cmpi sge, %19, %cst_10 : tensor<64x1xi64, #blocked> loc(#loc18)
    %21 = arith.cmpi slt, %19, %cst_9 : tensor<64x1xi64, #blocked> loc(#loc19)
    %22 = arith.andi %20, %21 : tensor<64x1xi1, #blocked> loc(#loc20)
    %23 = arith.xori %6, %cst_7 : tensor<64x1xi1, #blocked> loc(#loc21)
    %24 = arith.ori %22, %23 : tensor<64x1xi1, #blocked> loc(#loc22)
    %25 = tt.broadcast %24 : tensor<64x1xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc22)
    %26 = arith.muli %19, %cst_8 : tensor<64x1xi64, #blocked> loc(#loc23)
    %27 = tt.broadcast %26 : tensor<64x1xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc23)
    %28 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc24)
    %29 = scf.for %arg8 = %c0_i32 to %c4096_i32 step %c4_i32 iter_args(%arg9 = %cst_4) -> (tensor<64x4xf32, #blocked>)  : i32 {
      %38 = tt.splat %arg8 : i32 -> tensor<1x4xi32, #blocked> loc(#loc26)
      %39 = arith.addi %38, %8 : tensor<1x4xi32, #blocked> loc(#loc26)
      %40 = arith.cmpi slt, %39, %cst_3 : tensor<1x4xi32, #blocked> loc(#loc27)
      %41 = tt.broadcast %39 : tensor<1x4xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc11)
      %42 = arith.addi %41, %13 : tensor<64x4xi32, #blocked> loc(#loc11)
      %43 = tt.addptr %14, %42 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc12)
      %44 = tt.broadcast %40 : tensor<1x4xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc13)
      %45 = arith.andi %15, %44 : tensor<64x4xi1, #blocked> loc(#loc13)
      %46 = tt.load %43, %45, %cst_1 evictionPolicy = evict_last : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc28)
      %47 = arith.extf %46 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc29)
      %48 = tt.addptr %16, %42 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc14)
      %49 = tt.load %48, %45, %cst_1 evictionPolicy = evict_last : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc30)
      %50 = arith.extf %49 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc31)
      tt.assert %25, "index out of bounds: 0 <= tmp4 < 32128" : tensor<64x4xi1, #blocked> loc(#loc32)
      %51 = arith.extsi %39 : tensor<1x4xi32, #blocked> to tensor<1x4xi64, #blocked> loc(#loc33)
      %52 = tt.broadcast %51 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc33)
      %53 = arith.addi %52, %27 : tensor<64x4xi64, #blocked> loc(#loc33)
      %54 = tt.addptr %28, %53 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi64, #blocked> loc(#loc24)
      %55 = tt.load %54, %45, %cst_1 evictionPolicy = evict_last : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc34)
      %56 = arith.extf %55 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc35)
      %57 = arith.addf %56, %47 : tensor<64x4xf32, #blocked> loc(#loc36)
      %58 = arith.addf %57, %50 : tensor<64x4xf32, #blocked> loc(#loc37)
      %59 = arith.mulf %58, %58 : tensor<64x4xf32, #blocked> loc(#loc38)
      %60 = arith.addf %arg9, %59 : tensor<64x4xf32, #blocked> loc(#loc39)
      %61 = arith.select %45, %60, %arg9 : tensor<64x4xi1, #blocked>, tensor<64x4xf32, #blocked> loc(#loc40)
      scf.yield %61 : tensor<64x4xf32, #blocked> loc(#loc41)
    } loc(#loc25)
    %30 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc43)), %arg9: f32 loc(callsite(#loc1 at #loc43))):
      %38 = arith.addf %arg8, %arg9 : f32 loc(#loc78)
      tt.reduce.return %38 : f32 loc(#loc75)
    }) : (tensor<64x4xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc75)
    %31 = tt.expand_dims %30 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc45)
    %32 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x4x!tt.ptr<bf16>, #blocked> loc(#loc46)
    %33 = arith.divf %31, %cst : tensor<64x1xf32, #blocked> loc(#loc47)
    %34 = arith.addf %33, %cst_0 : tensor<64x1xf32, #blocked> loc(#loc48)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32, #blocked>) -> tensor<64x1xf32, #blocked> loc(#loc49)
    %36 = tt.broadcast %35 : tensor<64x1xf32, #blocked> -> tensor<64x4xf32, #blocked> loc(#loc50)
    %37 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc51)
    scf.for %arg8 = %c0_i32 to %c4096_i32 step %c4_i32  : i32 {
      %38 = tt.splat %arg8 : i32 -> tensor<1x4xi32, #blocked> loc(#loc53)
      %39 = arith.addi %38, %8 : tensor<1x4xi32, #blocked> loc(#loc53)
      %40 = arith.cmpi slt, %39, %cst_3 : tensor<1x4xi32, #blocked> loc(#loc54)
      %41 = tt.addptr %32, %39 : tensor<1x4x!tt.ptr<bf16>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc46)
      %42 = tt.load %41, %40, %cst_2 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<bf16>, #blocked> loc(#loc55)
      %43 = arith.extf %42 : tensor<1x4xbf16, #blocked> to tensor<1x4xf32, #blocked> loc(#loc56)
      %44 = tt.broadcast %39 : tensor<1x4xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc57)
      %45 = arith.addi %44, %13 : tensor<64x4xi32, #blocked> loc(#loc57)
      %46 = tt.addptr %14, %45 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc58)
      %47 = tt.broadcast %40 : tensor<1x4xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc59)
      %48 = arith.andi %15, %47 : tensor<64x4xi1, #blocked> loc(#loc59)
      %49 = tt.load %46, %48, %cst_1 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc60)
      %50 = arith.extf %49 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc61)
      %51 = tt.addptr %16, %45 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc62)
      %52 = tt.load %51, %48, %cst_1 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc63)
      %53 = arith.extf %52 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc64)
      tt.assert %25, "index out of bounds: 0 <= tmp20 < 32128" : tensor<64x4xi1, #blocked> loc(#loc65)
      %54 = arith.extsi %39 : tensor<1x4xi32, #blocked> to tensor<1x4xi64, #blocked> loc(#loc66)
      %55 = tt.broadcast %54 : tensor<1x4xi64, #blocked> -> tensor<64x4xi64, #blocked> loc(#loc66)
      %56 = arith.addi %55, %27 : tensor<64x4xi64, #blocked> loc(#loc66)
      %57 = tt.addptr %28, %56 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi64, #blocked> loc(#loc67)
      %58 = tt.load %57, %48, %cst_1 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc68)
      %59 = arith.extf %58 : tensor<64x4xbf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc69)
      %60 = arith.addf %59, %50 : tensor<64x4xf32, #blocked> loc(#loc70)
      %61 = arith.addf %60, %53 : tensor<64x4xf32, #blocked> loc(#loc71)
      %62 = arith.mulf %61, %36 : tensor<64x4xf32, #blocked> loc(#loc50)
      %63 = tt.broadcast %43 : tensor<1x4xf32, #blocked> -> tensor<64x4xf32, #blocked> loc(#loc72)
      %64 = arith.mulf %63, %62 : tensor<64x4xf32, #blocked> loc(#loc72)
      %65 = tt.addptr %37, %45 : tensor<64x4x!tt.ptr<bf16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc51)
      %66 = arith.truncf %64 : tensor<64x4xf32, #blocked> to tensor<64x4xbf16, #blocked> loc(#loc73)
      tt.store %65, %66, %48 : tensor<64x4x!tt.ptr<bf16>, #blocked> loc(#loc73)
    } loc(#loc52)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":29:30)
#loc9 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":29:35)
#loc10 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:46)
#loc11 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:41)
#loc12 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:34)
#loc13 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:59)
#loc14 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:34)
#loc15 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":40:22)
#loc16 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":41:22)
#loc17 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":42:36)
#loc18 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:32)
#loc19 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:48)
#loc20 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:41)
#loc21 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:60)
#loc22 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:58)
#loc23 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:46)
#loc24 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:34)
#loc25 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":31:40)
#loc26 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":32:31)
#loc27 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":33:29)
#loc28 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:51)
#loc29 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":37:112)
#loc30 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:51)
#loc31 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":38:112)
#loc32 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":43:68)
#loc33 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:41)
#loc34 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:53)
#loc35 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":44:114)
#loc36 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":45:22)
#loc37 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":46:23)
#loc38 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":48:24)
#loc39 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":50:25)
#loc40 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":51:50)
#loc41 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":51:8)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc44 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc45 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":52:30)
#loc46 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:35)
#loc47 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":72:25)
#loc48 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":74:24)
#loc49 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":75:32)
#loc50 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":76:24)
#loc51 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":79:29)
#loc52 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":53:40)
#loc53 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":54:31)
#loc54 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":55:29)
#loc55 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:42)
#loc56 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":59:95)
#loc57 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:42)
#loc58 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:35)
#loc59 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:60)
#loc60 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:52)
#loc61 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":60:114)
#loc62 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:35)
#loc63 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:52)
#loc64 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":61:114)
#loc65 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":66:70)
#loc66 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:42)
#loc67 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:35)
#loc68 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:55)
#loc69 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":67:117)
#loc70 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":68:24)
#loc71 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":69:24)
#loc72 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":78:24)
#loc73 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":79:53)
#loc74 = loc("/tmp/torchinductor_root/vk/cvkaebxyomoxsqaxavllrfibzcxlvyxdu4omwa4ryyrzmjcazngj.py":53:4)
#loc75 = loc(callsite(#loc42 at #loc43))
#loc77 = loc(callsite(#loc44 at #loc42))
#loc78 = loc(callsite(#loc77 at #loc43))
