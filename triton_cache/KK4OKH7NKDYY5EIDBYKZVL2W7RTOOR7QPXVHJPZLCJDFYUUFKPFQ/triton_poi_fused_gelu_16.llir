; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_poi_fused_gelu_16(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr !dbg !6 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %6 = shl i32 %5, 9, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = shl i32 %7, 1, !dbg !11
  %9 = and i32 %8, 510, !dbg !11
  %10 = or disjoint i32 %9, %6, !dbg !12
  %11 = srem i32 %10, 12288, !dbg !13
  %12 = sext i32 %10 to i64, !dbg !14
  %13 = getelementptr bfloat, ptr addrspace(1) %0, i64 %12, !dbg !14
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %13) #3, !dbg !15
  %15 = bitcast i32 %14 to <2 x bfloat>, !dbg !15
  %16 = sext i32 %11 to i64, !dbg !16
  %17 = getelementptr bfloat, ptr addrspace(1) %1, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %17) #3, !dbg !17
  %19 = bitcast i32 %18 to <2 x bfloat>, !dbg !17
  %20 = fpext <2 x bfloat> %15 to <2 x float>, !dbg !18
  %21 = fpext <2 x bfloat> %19 to <2 x float>, !dbg !19
  %22 = fadd <2 x float> %20, %21, !dbg !20
  %23 = extractelement <2 x float> %22, i64 0, !dbg !21
  %24 = fmul float %23, %23, !dbg !22
  %25 = extractelement <2 x float> %22, i64 1, !dbg !21
  %26 = fmul float %25, %25, !dbg !22
  %27 = fmul float %23, %24, !dbg !23
  %28 = fmul float %25, %26, !dbg !23
  %29 = fmul float %27, 0x3FA6E4E260000000, !dbg !24
  %30 = fmul float %28, 0x3FA6E4E260000000, !dbg !24
  %31 = fadd float %23, %29, !dbg !21
  %32 = fadd float %25, %30, !dbg !21
  %33 = fmul float %31, 0x3FE9884540000000, !dbg !25
  %34 = fmul float %32, 0x3FE9884540000000, !dbg !25
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not.i = icmp eq i32 %35, 0, !dbg !26
  %36 = tail call float @llvm.nvvm.fabs.ftz.f(float %33) #3, !dbg !26
  %37 = tail call float @llvm.nvvm.fabs.f(float %33) #3, !dbg !26
  %.01.i = select i1 %.not.i, float %37, float %36, !dbg !26
  %38 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %38, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %4
  %39 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %40 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %39) #3, !dbg !26
  %41 = fadd float %40, 1.000000e+00, !dbg !26
  %42 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %41) #4, !dbg !26, !srcloc !27
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not6.i = icmp eq i32 %43, 0, !dbg !26
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %42, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %42, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %.03.i = select i1 %.not6.i, float %45, float %44, !dbg !26
  %46 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %46, float 1.000000e+00, float %.03.i, !dbg !26
  %47 = bitcast float %s.0.i to i32, !dbg !26
  %48 = bitcast float %33 to i32, !dbg !26
  %49 = and i32 %48, -2147483648, !dbg !26
  %50 = or i32 %49, %47, !dbg !26
  %51 = bitcast i32 %50 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %4
  %52 = fmul float %33, %33, !dbg !26
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not1.i = icmp eq i32 %53, 0, !dbg !26
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %52, float 0xBFAAC795C0000000) #3, !dbg !26
  %55 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %52, float 0xBFAAC795C0000000) #3, !dbg !26
  %.06.i = select i1 %.not1.i, float %55, float %54, !dbg !26
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not2.i = icmp eq i32 %56, 0, !dbg !26
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %52, float 0x3FC10B2820000000) #3, !dbg !26
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %52, float 0x3FC10B2820000000) #3, !dbg !26
  %.05.i = select i1 %.not2.i, float %58, float %57, !dbg !26
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not3.i = icmp eq i32 %59, 0, !dbg !26
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %52, float 0xBFD5553DA0000000) #3, !dbg !26
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %52, float 0xBFD5553DA0000000) #3, !dbg !26
  %.0.i = select i1 %.not3.i, float %61, float %60, !dbg !26
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not4.i = icmp eq i32 %62, 0, !dbg !26
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %52, float 0.000000e+00) #3, !dbg !26
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %52, float 0.000000e+00) #3, !dbg !26
  %.04.i = select i1 %.not4.i, float %64, float %63, !dbg !26
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not5.i = icmp eq i32 %65, 0, !dbg !26
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %33, float %33) #3, !dbg !26
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %33, float %33) #3, !dbg !26
  %.02.i = select i1 %.not5.i, float %67, float %66, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %51, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not.i1 = icmp eq i32 %68, 0, !dbg !26
  %69 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #3, !dbg !26
  %70 = tail call float @llvm.nvvm.fabs.f(float %34) #3, !dbg !26
  %.01.i2 = select i1 %.not.i1, float %70, float %69, !dbg !26
  %71 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !26
  br i1 %71, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !26

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %72 = fmul float %.01.i2, 0x4007154760000000, !dbg !26
  %73 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %72) #3, !dbg !26
  %74 = fadd float %73, 1.000000e+00, !dbg !26
  %75 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %74) #4, !dbg !26, !srcloc !27
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not6.i4 = icmp eq i32 %76, 0, !dbg !26
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %75, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %.03.i5 = select i1 %.not6.i4, float %78, float %77, !dbg !26
  %79 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !26
  %s.0.i6 = select i1 %79, float 1.000000e+00, float %.03.i5, !dbg !26
  %80 = bitcast float %s.0.i6 to i32, !dbg !26
  %81 = bitcast float %34 to i32, !dbg !26
  %82 = and i32 %81, -2147483648, !dbg !26
  %83 = or i32 %82, %80, !dbg !26
  %84 = bitcast i32 %83 to float, !dbg !26
  br label %__nv_tanhf.exit19, !dbg !26

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %85 = fmul float %34, %34, !dbg !26
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not1.i9 = icmp eq i32 %86, 0, !dbg !26
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %85, float 0xBFAAC795C0000000) #3, !dbg !26
  %88 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %85, float 0xBFAAC795C0000000) #3, !dbg !26
  %.06.i10 = select i1 %.not1.i9, float %88, float %87, !dbg !26
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not2.i11 = icmp eq i32 %89, 0, !dbg !26
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %85, float 0x3FC10B2820000000) #3, !dbg !26
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %85, float 0x3FC10B2820000000) #3, !dbg !26
  %.05.i12 = select i1 %.not2.i11, float %91, float %90, !dbg !26
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not3.i13 = icmp eq i32 %92, 0, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %85, float 0xBFD5553DA0000000) #3, !dbg !26
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %85, float 0xBFD5553DA0000000) #3, !dbg !26
  %.0.i14 = select i1 %.not3.i13, float %94, float %93, !dbg !26
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not4.i15 = icmp eq i32 %95, 0, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %85, float 0.000000e+00) #3, !dbg !26
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %85, float 0.000000e+00) #3, !dbg !26
  %.04.i16 = select i1 %.not4.i15, float %97, float %96, !dbg !26
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not5.i17 = icmp eq i32 %98, 0, !dbg !26
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %34, float %34) #3, !dbg !26
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %34, float %34) #3, !dbg !26
  %.02.i18 = select i1 %.not5.i17, float %100, float %99, !dbg !26
  br label %__nv_tanhf.exit19, !dbg !26

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %84, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !26
  %101 = fmul <2 x float> %22, splat (float 5.000000e-01), !dbg !28
  %102 = insertelement <2 x float> poison, float %s.1.i, i64 0, !dbg !29
  %103 = insertelement <2 x float> %102, float %s.1.i7, i64 1, !dbg !29
  %104 = fadd <2 x float> %103, splat (float 1.000000e+00), !dbg !29
  %105 = fmul <2 x float> %101, %104, !dbg !30
  %106 = fptrunc <2 x float> %105 to <2 x bfloat>, !dbg !31
  %107 = bitcast <2 x bfloat> %106 to i32, !dbg !31
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %107, ptr addrspace(1) %13) #3, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpvcneuhvjlboboxgukgckhaaudcij7b5c4hzynmxoprodxaqnlo.py", directory: "/tmp/torchinductor_root/pv")
!4 = !{ptr @triton_poi_fused_gelu_16, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_gelu_16", linkageName: "triton_poi_fused_gelu_16", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 24, column: 19, scope: !6)
!14 = !DILocation(line: 25, column: 34, scope: !6)
!15 = !DILocation(line: 25, column: 39, scope: !6)
!16 = !DILocation(line: 26, column: 30, scope: !6)
!17 = !DILocation(line: 26, column: 35, scope: !6)
!18 = !DILocation(line: 25, column: 48, scope: !6)
!19 = !DILocation(line: 26, column: 74, scope: !6)
!20 = !DILocation(line: 27, column: 18, scope: !6)
!21 = !DILocation(line: 35, column: 19, scope: !6)
!22 = !DILocation(line: 31, column: 18, scope: !6)
!23 = !DILocation(line: 32, column: 18, scope: !6)
!24 = !DILocation(line: 34, column: 18, scope: !6)
!25 = !DILocation(line: 37, column: 20, scope: !6)
!26 = !DILocation(line: 38, column: 27, scope: !6)
!27 = !{i32 21046}
!28 = !DILocation(line: 30, column: 18, scope: !6)
!29 = !DILocation(line: 40, column: 20, scope: !6)
!30 = !DILocation(line: 41, column: 19, scope: !6)
!31 = !DILocation(line: 43, column: 40, scope: !6)
!32 = !DILocation(line: 43, column: 4, scope: !6)
