//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<240>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<20>;
	.loc	1 17 0                          // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:17:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_bmm_param_0];
	ld.param.u64 	%rd15, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:41:24
	mov.u32 	%r121, %ctaid.x;
	.loc	1 47 22                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:47:22
	shr.s32 	%r122, %r121, 31;
	shr.u32 	%r123, %r122, 26;
	add.s32 	%r124, %r121, %r123;
	shr.s32 	%r125, %r124, 6;
	ld.param.u64 	%rd16, [triton_bmm_param_2];
	.loc	1 48 41                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:48:41
	shl.b32 	%r126, %r125, 3;
	.loc	1 48 30                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:48:30
	sub.s32 	%r127, 16, %r126;
	.loc	1 48 50                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:48:50
	min.s32 	%r128, %r127, 8;
	.loc	1 49 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:49:40
	rem.s32 	%r129, %r121, %r128;
	.loc	1 49 34                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:49:34
	add.s32 	%r130, %r129, %r126;
	.loc	1 50 19                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:50:19
	and.b32  	%r131, %r124, -64;
	sub.s32 	%r132, %r121, %r131;
	.loc	1 50 30                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:50:30
	div.s32 	%r133, %r132, %r128;
	.loc	1 52 17                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:52:17
	shl.b32 	%r134, %r130, 5;
	.loc	1 52 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:52:40
	mov.u32 	%r135, %tid.x;
	and.b32  	%r136, %r135, 16;
	bfe.u32 	%r137, %r135, 3, 4;
	and.b32  	%r138, %r135, 128;
	shr.u32 	%r139, %r138, 3;
	or.b32  	%r140, %r137, %r139;
	.loc	1 52 27                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:52:27
	or.b32  	%r141, %r134, %r140;
	.loc	1 53 17                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:53:17
	shl.b32 	%r142, %r133, 6;
	.loc	1 53 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:53:40
	shr.u32 	%r143, %r135, 2;
	bfe.u32 	%r144, %r135, 2, 6;
	shl.b32 	%r145, %r135, 3;
	and.b32  	%r146, %r145, 24;
	.loc	1 53 27                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:53:27
	or.b32  	%r147, %r142, %r144;
	.loc	1 57 19                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:57:19
	bfe.s32 	%r148, %r130, 26, 1;
	shr.u32 	%r149, %r148, 23;
	add.s32 	%r150, %r141, %r149;
	and.b32  	%r151, %r150, 1048064;
	sub.s32 	%r152, %r141, %r151;
	.loc	1 61 19                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:61:19
	bfe.s32 	%r153, %r133, 25, 1;
	shr.u32 	%r154, %r153, 23;
	add.s32 	%r155, %r147, %r154;
	and.b32  	%r156, %r155, 1048064;
	sub.s32 	%r157, %r147, %r156;
	.loc	1 65 26                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:65:26
	mov.u32 	%r158, %ctaid.y;
	.loc	1 66 28                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:28
	shl.b32 	%r159, %r152, 12;
	.loc	1 66 43                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:43
	shl.b32 	%r160, %r135, 2;
	and.b32  	%r161, %r160, 8;
	and.b32  	%r162, %r160, 16;
	and.b32  	%r163, %r160, 28;
	.loc	1 66 72                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:72
	shl.b32 	%r164, %r158, 6;
	.loc	1 66 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:40
	or.b32  	%r165, %r163, %r164;
	.loc	1 66 66                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:66
	add.s32 	%r166, %r165, %r159;
	.loc	1 66 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:66:13
	mul.wide.s32 	%rd17, %r166, 2;
	add.s64 	%rd1, %rd14, %rd17;
	.loc	1 67 54                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:67:54
	shl.b32 	%r167, %r157, 12;
	.loc	1 67 39                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:67:39
	or.b32  	%r168, %r146, %r164;
	.loc	1 67 66                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:67:66
	add.s32 	%r169, %r168, %r167;
	.loc	1 67 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:67:13
	mul.wide.s32 	%rd18, %r169, 2;
	add.s64 	%rd2, %rd15, %rd18;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	shr.u32 	%r170, %r136, 1;
	shr.u32 	%r171, %r135, 1;
	and.b32  	%r172, %r171, 24;
	xor.b32  	%r173, %r172, %r163;
	shl.b32 	%r174, %r173, 1;
	shl.b32 	%r175, %r140, 6;
	or.b32  	%r176, %r175, %r174;
	mov.u32 	%r177, global_smem;
	add.s32 	%r178, %r177, 16384;
	add.s32 	%r1, %r178, %r176;
	mov.b32 	%r2, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r1 + 0 ], [ %rd1 + 0 ], 0x8, %r2;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	xor.b32  	%r179, %r145, %r135;
	and.b32  	%r180, %r179, 24;
	shl.b32 	%r181, %r180, 1;
	shl.b32 	%r182, %r144, 6;
	or.b32  	%r183, %r182, %r181;
	add.s32 	%r3, %r177, %r183;
	mov.b32 	%r4, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r3 + 0 ], [ %rd2 + 0 ], 0x10, %r4;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:78:13
	add.s64 	%rd3, %rd1, 64;
	.loc	1 79 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:79:13
	add.s64 	%rd4, %rd2, 64;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	bar.sync 	0;
	add.s32 	%r184, %r177, 18432;
	add.s32 	%r5, %r184, %r176;
	// begin inline asm
	cp.async.ca.shared.global [ %r5 + 0 ], [ %rd3 + 0 ], 0x8, %r2;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	add.s32 	%r185, %r177, 4096;
	add.s32 	%r7, %r185, %r183;
	// begin inline asm
	cp.async.cg.shared.global [ %r7 + 0 ], [ %rd4 + 0 ], 0x10, %r4;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:78:13
	add.s64 	%rd5, %rd1, 128;
	.loc	1 79 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:79:13
	add.s64 	%rd6, %rd2, 128;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	bar.sync 	0;
	add.s32 	%r186, %r177, %r176;
	add.s32 	%r9, %r186, 20480;
	mov.b32 	%r10, 0;
	// begin inline asm
	cp.async.ca.shared.global [ %r9 + 0 ], [ %rd5 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	add.s32 	%r11, %r3, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r11 + 0 ], [ %rd6 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:78:13
	add.s64 	%rd7, %rd1, 192;
	.loc	1 79 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:79:13
	add.s64 	%rd8, %rd2, 192;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	bar.sync 	0;
	add.s32 	%r13, %r186, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r13 + 0 ], [ %rd7 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	add.s32 	%r15, %r3, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r15 + 0 ], [ %rd8 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r187, %r160, 24;
	and.b32  	%r188, %r135, 7;
	and.b32  	%r189, %r135, 15;
	xor.b32  	%r190, %r187, %r170;
	or.b32  	%r191, %r139, %r189;
	shl.b32 	%r192, %r191, 5;
	or.b32  	%r193, %r192, %r190;
	or.b32  	%r194, %r161, 16;
	or.b32  	%r195, %r170, %r162;
	xor.b32  	%r196, %r195, %r194;
	or.b32  	%r197, %r196, %r192;
	xor.b32  	%r198, %r160, %r135;
	and.b32  	%r199, %r198, 24;
	and.b32  	%r200, %r143, 24;
	or.b32  	%r201, %r200, %r188;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r202, %r193, 1;
	add.s32 	%r21, %r178, %r202;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r37, %r38, %r39, %r40}, [%r21];
	// end inline asm
	shl.b32 	%r203, %r197, 1;
	add.s32 	%r26, %r178, %r203;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r49, %r50, %r51, %r52}, [%r26];
	// end inline asm
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	shl.b32 	%r204, %r199, 1;
	shl.b32 	%r205, %r201, 6;
	or.b32  	%r206, %r205, %r204;
	add.s32 	%r31, %r177, %r206;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r41, %r42, %r53, %r54}, [%r31];
	// end inline asm
	add.s32 	%r36, %r31, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r47, %r48, %r59, %r60}, [%r36];
	// end inline asm
	mov.f32 	%f25, 0f00000000;
	.loc	1 77 25                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:77:25
	mov.f32 	%f17, %f25;
	mov.f32 	%f18, %f25;
	mov.f32 	%f19, %f25;
	mov.f32 	%f20, %f25;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r37, %r38, %r39, %r40 }, { %r41, %r42 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	mov.f32 	%f26, %f25;
	mov.f32 	%f27, %f25;
	mov.f32 	%f28, %f25;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r37, %r38, %r39, %r40 }, { %r47, %r48 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r49, %r50, %r51, %r52 }, { %r53, %r54 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r49, %r50, %r51, %r52 }, { %r59, %r60 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	.loc	1 78 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:78:13
	add.s64 	%rd9, %rd1, 256;
	.loc	1 79 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:79:13
	add.s64 	%rd10, %rd2, 256;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	bar.sync 	0;
	// begin inline asm
	cp.async.ca.shared.global [ %r1 + 0 ], [ %rd9 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r3 + 0 ], [ %rd10 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	add.s32 	%r69, %r184, %r202;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r85, %r86, %r87, %r88}, [%r69];
	// end inline asm
	add.s32 	%r74, %r184, %r203;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r97, %r98, %r99, %r100}, [%r74];
	// end inline asm
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	add.s32 	%r79, %r185, %r206;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r89, %r90, %r101, %r102}, [%r79];
	// end inline asm
	add.s32 	%r84, %r79, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r95, %r96, %r107, %r108}, [%r84];
	// end inline asm
	.loc	1 77 25                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r85, %r86, %r87, %r88 }, { %r89, %r90 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r85, %r86, %r87, %r88 }, { %r95, %r96 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r97, %r98, %r99, %r100 }, { %r101, %r102 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r97, %r98, %r99, %r100 }, { %r107, %r108 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	.loc	1 78 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:78:13
	add.s64 	%rd11, %rd1, 320;
	.loc	1 79 13                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:79:13
	add.s64 	%rd12, %rd2, 320;
	.loc	1 72 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:72:24
	bar.sync 	0;
	add.s32 	%r109, %r1, 2048;
	// begin inline asm
	cp.async.ca.shared.global [ %r109 + 0 ], [ %rd11 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:73:24
	add.s32 	%r111, %r3, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r111 + 0 ], [ %rd12 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 53 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:53:40
	and.b32  	%r207, %r145, 56;
	.loc	1 53 27                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:53:27
	or.b32  	%r208, %r142, %r207;
	.loc	1 70 25                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 26                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:87:26
	max.s32 	%r209, %r141, %r208;
	setp.lt.s32 	%p5, %r209, 512;
	.loc	1 90 25                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:90:25
	shl.b32 	%r210, %r141, 9;
	.loc	1 90 40                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:90:40
	shl.b32 	%r211, %r158, 18;
	.loc	1 90 21                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:90:21
	add.s32 	%r212, %r208, %r211;
	.loc	1 90 33                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:90:33
	add.s32 	%r213, %r212, %r210;
	.loc	1 91 25                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:91:25
	mul.wide.s32 	%rd19, %r213, 2;
	add.s64 	%rd13, %rd16, %rd19;
	.loc	1 91 67                         // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f17;
	cvt.rn.bf16.f32 	%rs2, %f18;
	cvt.rn.bf16.f32 	%rs3, %f19;
	cvt.rn.bf16.f32 	%rs4, %f20;
	cvt.rn.bf16.f32 	%rs5, %f25;
	cvt.rn.bf16.f32 	%rs6, %f26;
	cvt.rn.bf16.f32 	%rs7, %f27;
	cvt.rn.bf16.f32 	%rs8, %f28;
	shl.b32 	%r214, %r135, 1;
	and.b32  	%r215, %r214, 6;
	shl.b32 	%r216, %r135, 4;
	and.b32  	%r217, %r216, 192;
	or.b32  	%r218, %r217, %r215;
	shl.b32 	%r219, %r136, 4;
	or.b32  	%r220, %r218, %r219;
	or.b32  	%r221, %r220, %r200;
	shl.b32 	%r222, %r138, 3;
	or.b32  	%r223, %r221, %r222;
	and.b32  	%r224, %r145, 1016;
	or.b32  	%r225, %r224, %r222;
	shr.u32 	%r226, %r223, 2;
	and.b32  	%r227, %r226, 368;
	add.s32 	%r228, %r177, %r227;
	shl.b32 	%r229, %r223, 1;
	add.s32 	%r113, %r228, %r229;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r113 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r230, %r223, 512;
	shr.u32 	%r231, %r230, 2;
	and.b32  	%r232, %r231, 1073741808;
	add.s32 	%r233, %r177, %r232;
	add.s32 	%r234, %r233, %r229;
	add.s32 	%r114, %r234, 1024;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r114 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r115, %r113, 64;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r115 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r116, %r234, 1088;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r116 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r235, %r225, 2;
	and.b32  	%r236, %r235, 496;
	add.s32 	%r237, %r177, %r236;
	shl.b32 	%r238, %r225, 1;
	add.s32 	%r239, %r237, %r238;
	ld.shared.v4.u32 	{%r117, %r118, %r119, %r120}, [%r239];
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	.loc	1 91 4                          // cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/b7/cb7i7h6w6qvdzojpeqqkjluj4yqhhj75vtrr2zmif2pxflwsvqsi.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 55
.b8 105
.b8 55
.b8 104
.b8 54
.b8 119
.b8 54
.b8 113
.b8 118
.b8 100
.b8 122
.b8 111
.b8 106
.b8 112
.b8 101
.b8 113
.b8 113
.b8 107
.b8 106
.b8 108
.b8 117
.b8 106
.b8 52
.b8 121
.b8 113
.b8 104
.b8 104
.b8 106
.b8 55
.b8 53
.b8 118
.b8 116
.b8 114
.b8 114
.b8 50
.b8 122
.b8 109
.b8 105
.b8 102
.b8 50
.b8 112
.b8 120
.b8 102
.b8 108
.b8 119
.b8 115
.b8 118
.b8 113
.b8 115
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 98
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
