#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [8, 2], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)
#loc1 = loc(unknown)
#loc36 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:38)
#loc40 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:38)
#loc83 = loc(callsite(#loc1 at #loc36))
#loc89 = loc(callsite(#loc1 at #loc40))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_reciprocal_9(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0x7F800000> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.00787401571> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-1.270000e+02> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1.270000e+02> : tensor<8x512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<8x512xbf16, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<3600> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<3600> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<3072> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<128> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<65536> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<128> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<526336> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<3072> : tensor<8x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_9 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %14 = arith.muli %8, %cst_11 : tensor<8x1xi32, #blocked> loc(#loc8)
    %15 = arith.addi %14, %cst_12 : tensor<8x1xi32, #blocked> loc(#loc9)
    %16 = tt.broadcast %15 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc10)
    %17 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %18 = tt.broadcast %10 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc12)
    %19:2 = scf.for %arg6 = %c0_i32 to %c3072_i32 step %c512_i32 iter_args(%arg7 = %cst, %arg8 = %cst_0) -> (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>)  : i32 {
      %57 = tt.splat %arg6 : i32 -> tensor<1x512xi32, #blocked> loc(#loc14)
      %58 = arith.addi %57, %13 : tensor<1x512xi32, #blocked> loc(#loc14)
      %59 = arith.cmpi slt, %58, %cst_10 : tensor<1x512xi32, #blocked> loc(#loc15)
      %60 = arith.divsi %58, %cst_13 : tensor<1x512xi32, #blocked> loc(#loc16)
      %61 = arith.muli %60, %cst_14 : tensor<1x512xi32, #blocked> loc(#loc17)
      %62 = tt.broadcast %61 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc10)
      %63 = arith.addi %16, %62 : tensor<8x512xi32, #blocked> loc(#loc10)
      %64 = arith.remsi %58, %cst_13 : tensor<1x512xi32, #blocked> loc(#loc18)
      %65 = tt.broadcast %64 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc19)
      %66 = arith.addi %63, %65 : tensor<8x512xi32, #blocked> loc(#loc19)
      %67 = tt.addptr %17, %66 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc11)
      %68 = tt.broadcast %59 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc12)
      %69 = arith.andi %18, %68 : tensor<8x512xi1, #blocked> loc(#loc12)
      %70 = tt.load %67, %69, %cst_7 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc20)
      %71 = arith.extf %70 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc21)
      %72 = arith.cmpf olt, %arg7, %71 : tensor<8x512xf32, #blocked> loc(#loc74)
      %73 = arith.cmpf une, %arg7, %arg7 : tensor<8x512xf32, #blocked> loc(#loc75)
      %74 = arith.ori %72, %73 : tensor<8x512xi1, #blocked> loc(#loc76)
      %75 = arith.select %74, %arg7, %71 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc77)
      %76 = arith.select %69, %75, %arg7 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc27)
      %77 = arith.cmpf ogt, %arg8, %71 : tensor<8x512xf32, #blocked> loc(#loc78)
      %78 = arith.cmpf une, %arg8, %arg8 : tensor<8x512xf32, #blocked> loc(#loc79)
      %79 = arith.ori %77, %78 : tensor<8x512xi1, #blocked> loc(#loc80)
      %80 = arith.select %79, %arg8, %71 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc81)
      %81 = arith.select %69, %80, %arg8 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc33)
      scf.yield %76, %81 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc34)
    } loc(#loc13)
    %20 = "tt.reduce"(%19#0) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc36)), %arg7: f32 loc(callsite(#loc1 at #loc36))):
      %57 = arith.cmpf olt, %arg6, %arg7 : f32 loc(#loc118)
      %58 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc119)
      %59 = arith.ori %57, %58 : i1 loc(#loc120)
      %60 = arith.select %59, %arg6, %arg7 : f32 loc(#loc121)
      tt.reduce.return %60 : f32 loc(#loc82)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc82)
    %21 = ttg.convert_layout %20 : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc37)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc38)
    %23 = tt.expand_dims %20 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc38)
    %24 = "tt.reduce"(%19#1) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc40)), %arg7: f32 loc(callsite(#loc1 at #loc40))):
      %57 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc122)
      %58 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc123)
      %59 = arith.ori %57, %58 : i1 loc(#loc124)
      %60 = arith.select %59, %arg6, %arg7 : f32 loc(#loc125)
      tt.reduce.return %60 : f32 loc(#loc88)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc88)
    %25 = ttg.convert_layout %24 : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc41)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc42)
    %27 = tt.expand_dims %24 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc42)
    %28 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<8x1x!tt.ptr<bf16>, #blocked1> loc(#loc43)
    %29 = tt.addptr %28, %9 : tensor<8x1x!tt.ptr<bf16>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc43)
    %30 = arith.truncf %22 : tensor<8x1xf32, #blocked1> to tensor<8x1xbf16, #blocked1> loc(#loc37)
    tt.store %29, %30, %11 : tensor<8x1x!tt.ptr<bf16>, #blocked1> loc(#loc37)
    %31 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<8x1x!tt.ptr<bf16>, #blocked1> loc(#loc44)
    %32 = tt.addptr %31, %9 : tensor<8x1x!tt.ptr<bf16>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc44)
    %33 = arith.truncf %26 : tensor<8x1xf32, #blocked1> to tensor<8x1xbf16, #blocked1> loc(#loc41)
    tt.store %32, %33, %11 : tensor<8x1x!tt.ptr<bf16>, #blocked1> loc(#loc41)
    %34 = arith.cmpf olt, %23, %cst_1 : tensor<8x1xf32, #blocked> loc(#loc94)
    %35 = arith.cmpf une, %23, %23 : tensor<8x1xf32, #blocked> loc(#loc95)
    %36 = arith.ori %34, %35 : tensor<8x1xi1, #blocked> loc(#loc96)
    %37 = arith.select %36, %23, %cst_1 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc97)
    %38 = arith.subf %cst_1, %37 : tensor<8x1xf32, #blocked> loc(#loc46)
    %39 = arith.cmpf ogt, %27, %cst_1 : tensor<8x1xf32, #blocked> loc(#loc98)
    %40 = arith.cmpf une, %27, %27 : tensor<8x1xf32, #blocked> loc(#loc99)
    %41 = arith.ori %39, %40 : tensor<8x1xi1, #blocked> loc(#loc100)
    %42 = arith.select %41, %27, %cst_1 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc101)
    %43 = arith.cmpf ogt, %38, %42 : tensor<8x1xf32, #blocked> loc(#loc102)
    %44 = arith.cmpf une, %38, %38 : tensor<8x1xf32, #blocked> loc(#loc103)
    %45 = arith.ori %43, %44 : tensor<8x1xi1, #blocked> loc(#loc104)
    %46 = arith.select %45, %38, %42 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc105)
    %47 = arith.mulf %46, %cst_2 : tensor<8x1xf32, #blocked> loc(#loc49)
    %48 = arith.cmpf ogt, %47, %cst_4 : tensor<8x1xf32, #blocked> loc(#loc106)
    %49 = arith.cmpf une, %47, %47 : tensor<8x1xf32, #blocked> loc(#loc107)
    %50 = arith.ori %48, %49 : tensor<8x1xi1, #blocked> loc(#loc108)
    %51 = arith.select %50, %47, %cst_4 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc109)
    %52 = arith.divf %cst_3, %51 : tensor<8x1xf32, #blocked> loc(#loc51)
    %53 = tt.broadcast %52 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc52)
    %54 = arith.muli %8, %cst_15 : tensor<8x1xi32, #blocked> loc(#loc53)
    %55 = tt.broadcast %54 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc54)
    %56 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<8x512x!tt.ptr<i8>, #blocked> loc(#loc55)
    scf.for %arg6 = %c0_i32 to %c3072_i32 step %c512_i32  : i32 {
      %57 = tt.splat %arg6 : i32 -> tensor<1x512xi32, #blocked> loc(#loc57)
      %58 = arith.addi %57, %13 : tensor<1x512xi32, #blocked> loc(#loc57)
      %59 = arith.cmpi slt, %58, %cst_10 : tensor<1x512xi32, #blocked> loc(#loc58)
      %60 = arith.divsi %58, %cst_13 : tensor<1x512xi32, #blocked> loc(#loc59)
      %61 = arith.muli %60, %cst_14 : tensor<1x512xi32, #blocked> loc(#loc60)
      %62 = tt.broadcast %61 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc61)
      %63 = arith.addi %16, %62 : tensor<8x512xi32, #blocked> loc(#loc61)
      %64 = arith.remsi %58, %cst_13 : tensor<1x512xi32, #blocked> loc(#loc62)
      %65 = tt.broadcast %64 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc63)
      %66 = arith.addi %63, %65 : tensor<8x512xi32, #blocked> loc(#loc63)
      %67 = tt.addptr %17, %66 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc64)
      %68 = tt.broadcast %59 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc65)
      %69 = arith.andi %18, %68 : tensor<8x512xi1, #blocked> loc(#loc65)
      %70 = tt.load %67, %69, %cst_7 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc66)
      %71 = arith.extf %70 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc67)
      %72 = arith.mulf %71, %53 : tensor<8x512xf32, #blocked> loc(#loc52)
      %73 = tt.extern_elementwise %72 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<8x512xf32, #blocked>) -> tensor<8x512xf32, #blocked> loc(#loc68)
      %74 = arith.cmpf ogt, %73, %cst_5 : tensor<8x512xf32, #blocked> loc(#loc110)
      %75 = arith.cmpf une, %73, %73 : tensor<8x512xf32, #blocked> loc(#loc111)
      %76 = arith.ori %74, %75 : tensor<8x512xi1, #blocked> loc(#loc112)
      %77 = arith.select %76, %73, %cst_5 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc113)
      %78 = arith.cmpf olt, %77, %cst_6 : tensor<8x512xf32, #blocked> loc(#loc114)
      %79 = arith.cmpf une, %77, %77 : tensor<8x512xf32, #blocked> loc(#loc115)
      %80 = arith.ori %78, %79 : tensor<8x512xi1, #blocked> loc(#loc116)
      %81 = arith.select %80, %77, %cst_6 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc117)
      %82 = arith.fptosi %81 : tensor<8x512xf32, #blocked> to tensor<8x512xi8, #blocked> loc(#loc71)
      %83 = tt.broadcast %58 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc54)
      %84 = arith.addi %83, %55 : tensor<8x512xi32, #blocked> loc(#loc54)
      %85 = tt.addptr %56, %84 : tensor<8x512x!tt.ptr<i8>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc55)
      tt.store %85, %82, %69 : tensor<8x512x!tt.ptr<i8>, #blocked> loc(#loc72)
    } loc(#loc56)
    tt.return loc(#loc73)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:46)
#loc9 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:42)
#loc10 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:51)
#loc11 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:34)
#loc12 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:99)
#loc13 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":31:40)
#loc14 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":32:31)
#loc15 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":33:29)
#loc16 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:67)
#loc17 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:59)
#loc18 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:83)
#loc19 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:76)
#loc20 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:91)
#loc21 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:152)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc23 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":39:45)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc27 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":40:48)
#loc28 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc29 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":41:45)
#loc30 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc32 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc33 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:48)
#loc34 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:8)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc37 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:36)
#loc38 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:41)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc41 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:36)
#loc42 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:41)
#loc43 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:25)
#loc44 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:25)
#loc45 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":55:44)
#loc46 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":56:16)
#loc47 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":57:45)
#loc48 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":58:45)
#loc49 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":60:24)
#loc50 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":63:46)
#loc51 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":66:25)
#loc52 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":69:23)
#loc53 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:41)
#loc54 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:36)
#loc55 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:29)
#loc56 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:40)
#loc57 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":48:31)
#loc58 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":49:29)
#loc59 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:67)
#loc60 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:59)
#loc61 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:51)
#loc62 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:83)
#loc63 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:76)
#loc64 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:34)
#loc65 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:99)
#loc66 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:91)
#loc67 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:153)
#loc68 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":70:36)
#loc69 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":73:46)
#loc70 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":75:46)
#loc71 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":77:25)
#loc72 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:53)
#loc73 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:4)
#loc74 = loc(callsite(#loc22 at #loc23))
#loc75 = loc(callsite(#loc24 at #loc23))
#loc76 = loc(callsite(#loc25 at #loc23))
#loc77 = loc(callsite(#loc26 at #loc23))
#loc78 = loc(callsite(#loc28 at #loc29))
#loc79 = loc(callsite(#loc30 at #loc29))
#loc80 = loc(callsite(#loc31 at #loc29))
#loc81 = loc(callsite(#loc32 at #loc29))
#loc82 = loc(callsite(#loc35 at #loc36))
#loc84 = loc(callsite(#loc22 at #loc35))
#loc85 = loc(callsite(#loc24 at #loc35))
#loc86 = loc(callsite(#loc25 at #loc35))
#loc87 = loc(callsite(#loc26 at #loc35))
#loc88 = loc(callsite(#loc39 at #loc40))
#loc90 = loc(callsite(#loc28 at #loc39))
#loc91 = loc(callsite(#loc30 at #loc39))
#loc92 = loc(callsite(#loc31 at #loc39))
#loc93 = loc(callsite(#loc32 at #loc39))
#loc94 = loc(callsite(#loc22 at #loc45))
#loc95 = loc(callsite(#loc24 at #loc45))
#loc96 = loc(callsite(#loc25 at #loc45))
#loc97 = loc(callsite(#loc26 at #loc45))
#loc98 = loc(callsite(#loc28 at #loc47))
#loc99 = loc(callsite(#loc30 at #loc47))
#loc100 = loc(callsite(#loc31 at #loc47))
#loc101 = loc(callsite(#loc32 at #loc47))
#loc102 = loc(callsite(#loc28 at #loc48))
#loc103 = loc(callsite(#loc30 at #loc48))
#loc104 = loc(callsite(#loc31 at #loc48))
#loc105 = loc(callsite(#loc32 at #loc48))
#loc106 = loc(callsite(#loc28 at #loc50))
#loc107 = loc(callsite(#loc30 at #loc50))
#loc108 = loc(callsite(#loc31 at #loc50))
#loc109 = loc(callsite(#loc32 at #loc50))
#loc110 = loc(callsite(#loc28 at #loc69))
#loc111 = loc(callsite(#loc30 at #loc69))
#loc112 = loc(callsite(#loc31 at #loc69))
#loc113 = loc(callsite(#loc32 at #loc69))
#loc114 = loc(callsite(#loc22 at #loc70))
#loc115 = loc(callsite(#loc24 at #loc70))
#loc116 = loc(callsite(#loc25 at #loc70))
#loc117 = loc(callsite(#loc26 at #loc70))
#loc118 = loc(callsite(#loc84 at #loc36))
#loc119 = loc(callsite(#loc85 at #loc36))
#loc120 = loc(callsite(#loc86 at #loc36))
#loc121 = loc(callsite(#loc87 at #loc36))
#loc122 = loc(callsite(#loc90 at #loc40))
#loc123 = loc(callsite(#loc91 at #loc40))
#loc124 = loc(callsite(#loc92 at #loc40))
#loc125 = loc(callsite(#loc93 at #loc40))
