//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_poi_fused_index_9 // -- Begin function triton_poi_fused_index_9
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 50, 103, 47, 99, 50, 103, 119, 110, 108, 122, 122, 51, 121, 119, 50, 119, 52, 118, 50, 102, 99, 108, 108, 110, 50, 55, 98, 99, 52, 113, 51, 105, 98, 116, 119, 105, 118, 101, 114, 104, 115, 111, 53, 100, 52, 114, 52, 101, 102, 119, 105, 114, 113, 103, 107, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 55, 55};
                                        // @triton_poi_fused_index_9
.visible .entry triton_poi_fused_index_9(
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_9_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_9_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_9_param_2,
	.param .u32 triton_poi_fused_index_9_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_9_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<17>;
	.loc	1 18 0                          // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:18:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_index_9_param_0];
$L__tmp0:
	.loc	1 24 19                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:24:19
	// begin inline asm
	mov.u64 %rd4, 0x0;
	ld.global.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 27 18                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:27:18
	add.s64 	%rd6, %rd4, 77;
	.loc	1 28 18                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:28:18
	setp.lt.s64 	%p1, %rd4, 0;
	.loc	1 29 32                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:29:32
	selp.b64 	%rd1, %rd6, %rd4, %p1;
	.loc	1 30 36                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:30:36
	setp.lt.u64 	%p2, %rd1, 77;
	.loc	1 30 48                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:30:48
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 48                          // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:0:48
	ld.param.u64 	%rd3, [triton_poi_fused_index_9_param_2];
	ld.param.u64 	%rd2, [triton_poi_fused_index_9_param_1];
	.loc	1 20 28                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:20:28
	mov.u32 	%r3, %ctaid.x;
	.loc	1 20 33                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:20:33
	shl.b32 	%r4, %r3, 8;
	.loc	1 21 36                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:21:36
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r6, %r5, 1;
	and.b32  	%r7, %r6, 254;
	.loc	1 21 23                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:21:23
	or.b32  	%r8, %r7, %r4;
	.loc	1 22 21                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:22:21
	setp.lt.s32 	%p3, %r8, 768;
	.loc	1 30 48                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:30:48
	bar.sync 	0;
	.loc	1 31 30                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:31:30
	mad.lo.s64 	%rd9, %rd1, 1536, %rd2;
	mul.wide.s32 	%rd10, %r8, 2;
	add.s64 	%rd7, %rd9, %rd10;
	.loc	1 31 46                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:31:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p3 ld.global.b32 { %r2 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 32 25                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:32:25
	add.s64 	%rd8, %rd3, %rd10;
	.loc	1 32 36                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:32:36
	// begin inline asm
	@%p3 st.global.b32 [ %rd8 + 0 ], { %r2 };
	// end inline asm
	.loc	1 32 4                          // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:32:4
	ret;
$L__BB0_1:
	.loc	1 30 48                         // c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py:30:48
	mov.u64 	%rd11, assertMessage_0;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, assertFile_0;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, assertFunc_0;
	cvta.global.u64 	%rd16, %rd15;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd12;
	.param .b64 param1;
	st.param.b64 	[param1], %rd14;
	.param .b32 param2;
	st.param.b32 	[param2], 30;
	.param .b64 param3;
	st.param.b64 	[param3], %rd16;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/2g/c2gwnlzz3yw2w4v2fclln27bc4q3ibtwiverhso5d4r4efwirqgk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 103
.b8 119
.b8 110
.b8 108
.b8 122
.b8 122
.b8 51
.b8 121
.b8 119
.b8 50
.b8 119
.b8 52
.b8 118
.b8 50
.b8 102
.b8 99
.b8 108
.b8 108
.b8 110
.b8 50
.b8 55
.b8 98
.b8 99
.b8 52
.b8 113
.b8 51
.b8 105
.b8 98
.b8 116
.b8 119
.b8 105
.b8 118
.b8 101
.b8 114
.b8 104
.b8 115
.b8 111
.b8 53
.b8 100
.b8 52
.b8 114
.b8 52
.b8 101
.b8 102
.b8 119
.b8 105
.b8 114
.b8 113
.b8 103
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 50
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
