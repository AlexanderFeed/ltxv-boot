#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0)
#loc1 = loc(unknown)
#loc34 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":55:27)
#loc37 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":56:27)
#loc51 = loc(callsite(#loc1 at #loc34))
#loc54 = loc(callsite(#loc1 at #loc37))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_addmm_0(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %c18432_i32 = arith.constant 18432 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3072> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c18432_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %4 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc5)
    %5 = arith.muli %0, %c3072_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc44)
    %7 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc45)
    %9 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc10)
    %10:2 = scf.for %arg7 = %c0_i32 to %c3072_i32 step %c2048_i32 iter_args(%arg8 = %cst, %arg9 = %cst) -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>)  : i32 {
      %22 = tt.splat %arg7 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc12)
      %23 = arith.addi %22, %3 : tensor<1x2048xi32, #blocked> loc(#loc12)
      %24 = arith.cmpi slt, %23, %cst_2 : tensor<1x2048xi32, #blocked> loc(#loc13)
      %25 = tt.addptr %4, %23 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc5)
      %26 = tt.load %25, %24, %cst_1 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc14)
      %27 = arith.extf %26 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc15)
      %28 = arith.addi %23, %6 : tensor<1x2048xi32, #blocked> loc(#loc7)
      %29 = tt.addptr %7, %28 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc8)
      %30 = arith.andi %8, %24 : tensor<1x2048xi1, #blocked> loc(#loc9)
      %31 = tt.load %29, %30, %cst_1 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc16)
      %32 = arith.extf %31 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc17)
      %33 = tt.addptr %9, %28 : tensor<1x2048x!tt.ptr<bf16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc10)
      %34 = tt.load %33, %30, %cst_1 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>, #blocked> loc(#loc18)
      %35 = arith.extf %34 : tensor<1x2048xbf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc19)
      %36 = arith.subf %cst, %27 : tensor<1x2048xf32, #blocked> loc(#loc46)
      %37 = math.exp %36 : tensor<1x2048xf32, #blocked> loc(#loc47)
      %38 = arith.addf %37, %cst_0 : tensor<1x2048xf32, #blocked> loc(#loc48)
      %39 = arith.divf %cst_0, %38 : tensor<1x2048xf32, #blocked> loc(#loc49)
      %40 = arith.mulf %27, %39 : tensor<1x2048xf32, #blocked> loc(#loc25)
      %41 = arith.mulf %40, %32 : tensor<1x2048xf32, #blocked> loc(#loc26)
      %42 = arith.addf %arg8, %41 : tensor<1x2048xf32, #blocked> loc(#loc27)
      %43 = arith.select %30, %42, %arg8 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc28)
      %44 = arith.mulf %40, %35 : tensor<1x2048xf32, #blocked> loc(#loc29)
      %45 = arith.addf %arg9, %44 : tensor<1x2048xf32, #blocked> loc(#loc30)
      %46 = arith.select %30, %45, %arg9 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc31)
      scf.yield %43, %46 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc32)
    } loc(#loc11)
    %11 = "tt.reduce"(%10#0) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc34)), %arg8: f32 loc(callsite(#loc1 at #loc34))):
      %22 = arith.addf %arg7, %arg8 : f32 loc(#loc55)
      tt.reduce.return %22 : f32 loc(#loc50)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc50)
    %12 = ttg.convert_layout %11 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc36)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc36)
    %14 = "tt.reduce"(%10#1) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc37)), %arg8: f32 loc(callsite(#loc1 at #loc37))):
      %22 = arith.addf %arg7, %arg8 : f32 loc(#loc56)
      tt.reduce.return %22 : f32 loc(#loc53)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc53)
    %15 = ttg.convert_layout %14 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc38)
    %16 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc38)
    %17 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc39)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc40)
    %19 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc40)
    tt.store %18, %13, %19 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc40)
    %20 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc41)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc42)
    tt.store %21, %16, %19 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":26:37)
#loc5 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:34)
#loc6 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:46)
#loc7 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:41)
#loc8 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:34)
#loc9 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:59)
#loc10 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:35)
#loc11 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":31:40)
#loc12 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":32:31)
#loc13 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":33:29)
#loc14 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:41)
#loc15 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:94)
#loc16 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:51)
#loc17 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:113)
#loc18 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:52)
#loc19 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:114)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:30)
#loc21 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":41:26)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:29)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:20)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:16)
#loc25 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":42:22)
#loc26 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":46:22)
#loc27 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":48:25)
#loc28 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":49:50)
#loc29 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":51:23)
#loc30 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":53:25)
#loc31 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":54:50)
#loc32 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":54:8)
#loc33 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc36 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":55:30)
#loc38 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":56:30)
#loc39 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":57:25)
#loc40 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":57:37)
#loc41 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:25)
#loc42 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:37)
#loc43 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:4)
#loc44 = loc(fused[#loc7, #loc6])
#loc45 = loc(fused[#loc9, #loc3])
#loc46 = loc(callsite(#loc20 at #loc21))
#loc47 = loc(callsite(#loc22 at #loc21))
#loc48 = loc(callsite(#loc23 at #loc21))
#loc49 = loc(callsite(#loc24 at #loc21))
#loc50 = loc(callsite(#loc33 at #loc34))
#loc52 = loc(callsite(#loc35 at #loc33))
#loc53 = loc(callsite(#loc33 at #loc37))
#loc55 = loc(callsite(#loc52 at #loc34))
#loc56 = loc(callsite(#loc52 at #loc37))
