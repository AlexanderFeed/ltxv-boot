//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_4,
	.param .u32 triton_red_fused_addmm_0_param_5,
	.param .u32 triton_red_fused_addmm_0_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<87>;
	.reg .f32 	%f<151>;
	.reg .b64 	%rd<20>;
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd10, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:28
	mov.u32 	%r39, %ctaid.x;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p2, %r39, 18432;
	ld.param.u64 	%rd11, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd12, [triton_red_fused_addmm_0_param_3];
	.loc	1 26 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:26:37
	mov.u32 	%r40, %tid.x;
	shl.b32 	%r41, %r40, 2;
	ld.param.u64 	%rd13, [triton_red_fused_addmm_0_param_4];
	and.b32  	%r42, %r41, 2044;
	.loc	1 38 46                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:46
	mul.lo.s32 	%r43, %r39, 3072;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	cvt.u64.u32 	%rd14, %r42;
	.loc	1 37 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:34
	mul.wide.u32 	%rd15, %r42, 2;
	add.s64 	%rd1, %rd9, %rd15;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, -1;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	mov.b32 	{%rs3, %rs4}, %r2;
	.loc	1 37 94                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:94
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
	.loc	1 38 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:41
	add.s32 	%r44, %r42, %r43;
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	mul.wide.s32 	%rd16, %r44, 2;
	add.s64 	%rd2, %rd10, %rd16;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r5;
	mov.b32 	{%rs7, %rs8}, %r6;
	.loc	1 38 113                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:113
	cvt.f32.bf16 	%f5, %rs5;
	cvt.f32.bf16 	%f6, %rs6;
	cvt.f32.bf16 	%f7, %rs7;
	cvt.f32.bf16 	%f8, %rs8;
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd3, %rd11, %rd16;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u32 %r9, %r3;
	mov.u32 %r10, %r3;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r9, %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r9;
	mov.b32 	{%rs11, %rs12}, %r10;
	.loc	1 39 114                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:114
	cvt.f32.bf16 	%f9, %rs9;
	cvt.f32.bf16 	%f10, %rs10;
	cvt.f32.bf16 	%f11, %rs11;
	cvt.f32.bf16 	%f12, %rs12;
	mov.f32 	%f13, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f14, %f13, %f1;
	sub.f32 	%f15, %f13, %f2;
	sub.f32 	%f16, %f13, %f3;
	sub.f32 	%f17, %f13, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f18, %f14, 0f3FB8AA3B;
	ex2.approx.f32 	%f19, %f18;
	mul.f32 	%f20, %f15, 0f3FB8AA3B;
	ex2.approx.f32 	%f21, %f20;
	mul.f32 	%f22, %f16, 0f3FB8AA3B;
	ex2.approx.f32 	%f23, %f22;
	mul.f32 	%f24, %f17, 0f3FB8AA3B;
	ex2.approx.f32 	%f25, %f24;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f19, 0f3F800000;
	add.f32 	%f27, %f21, 0f3F800000;
	add.f32 	%f28, %f23, 0f3F800000;
	add.f32 	%f29, %f25, 0f3F800000;
	mov.f32 	%f30, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f31, %f30, %f26;
	div.full.f32 	%f32, %f30, %f27;
	div.full.f32 	%f33, %f30, %f28;
	div.full.f32 	%f34, %f30, %f29;
$L__tmp2:
	.loc	1 42 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:42:22
	mul.f32 	%f35, %f31, %f1;
	mul.f32 	%f36, %f32, %f2;
	mul.f32 	%f37, %f33, %f3;
	mul.f32 	%f38, %f34, %f4;
	.loc	1 48 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:48:25
	fma.rn.f32 	%f39, %f35, %f5, 0f00000000;
	fma.rn.f32 	%f40, %f36, %f6, 0f00000000;
	fma.rn.f32 	%f41, %f37, %f7, 0f00000000;
	fma.rn.f32 	%f42, %f38, %f8, 0f00000000;
	.loc	1 49 50                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:49:50
	selp.f32 	%f43, %f39, 0f00000000, %p2;
	selp.f32 	%f44, %f40, 0f00000000, %p2;
	selp.f32 	%f45, %f41, 0f00000000, %p2;
	selp.f32 	%f46, %f42, 0f00000000, %p2;
	.loc	1 53 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:53:25
	fma.rn.f32 	%f47, %f35, %f9, 0f00000000;
	fma.rn.f32 	%f48, %f36, %f10, 0f00000000;
	fma.rn.f32 	%f49, %f37, %f11, 0f00000000;
	fma.rn.f32 	%f50, %f38, %f12, 0f00000000;
	.loc	1 54 50                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:54:50
	selp.f32 	%f51, %f47, 0f00000000, %p2;
	selp.f32 	%f52, %f48, 0f00000000, %p2;
	selp.f32 	%f53, %f49, 0f00000000, %p2;
	selp.f32 	%f54, %f50, 0f00000000, %p2;
	.loc	1 32 31                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:32:31
	or.b64  	%rd17, %rd14, 2048;
	.loc	1 33 29                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:33:29
	setp.lt.u64 	%p4, %rd17, 3072;
	.loc	1 37 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:34
	add.s64 	%rd4, %rd1, 4096;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u32 %r13, %r3;
	mov.u32 %r14, %r3;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs13, %rs14}, %r13;
	mov.b32 	{%rs15, %rs16}, %r14;
	.loc	1 37 94                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:94
	cvt.f32.bf16 	%f55, %rs13;
	cvt.f32.bf16 	%f56, %rs14;
	cvt.f32.bf16 	%f57, %rs15;
	cvt.f32.bf16 	%f58, %rs16;
	.loc	1 38 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:41
	cvt.u32.u64 	%r45, %rd17;
	add.s32 	%r46, %r43, %r45;
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	mul.wide.s32 	%rd18, %r46, 2;
	add.s64 	%rd5, %rd10, %rd18;
	.loc	1 38 59                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:59
	and.pred  	%p5, %p2, %p4;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u32 %r17, %r3;
	mov.u32 %r18, %r3;
	@%p5 ld.global.L1::evict_first.v2.b32 { %r17, %r18 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r17;
	mov.b32 	{%rs19, %rs20}, %r18;
	.loc	1 38 113                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:113
	cvt.f32.bf16 	%f59, %rs17;
	cvt.f32.bf16 	%f60, %rs18;
	cvt.f32.bf16 	%f61, %rs19;
	cvt.f32.bf16 	%f62, %rs20;
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd6, %rd11, %rd18;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u32 %r21, %r3;
	mov.u32 %r22, %r3;
	@%p5 ld.global.L1::evict_first.v2.b32 { %r21, %r22 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs21, %rs22}, %r21;
	mov.b32 	{%rs23, %rs24}, %r22;
	.loc	1 39 114                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:114
	cvt.f32.bf16 	%f63, %rs21;
	cvt.f32.bf16 	%f64, %rs22;
	cvt.f32.bf16 	%f65, %rs23;
	cvt.f32.bf16 	%f66, %rs24;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f67, %f13, %f55;
	sub.f32 	%f68, %f13, %f56;
	sub.f32 	%f69, %f13, %f57;
	sub.f32 	%f70, %f13, %f58;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f71, %f67, 0f3FB8AA3B;
	ex2.approx.f32 	%f72, %f71;
	mul.f32 	%f73, %f68, 0f3FB8AA3B;
	ex2.approx.f32 	%f74, %f73;
	mul.f32 	%f75, %f69, 0f3FB8AA3B;
	ex2.approx.f32 	%f76, %f75;
	mul.f32 	%f77, %f70, 0f3FB8AA3B;
	ex2.approx.f32 	%f78, %f77;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f79, %f72, 0f3F800000;
	add.f32 	%f80, %f74, 0f3F800000;
	add.f32 	%f81, %f76, 0f3F800000;
	add.f32 	%f82, %f78, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f83, %f30, %f79;
	div.full.f32 	%f84, %f30, %f80;
	div.full.f32 	%f85, %f30, %f81;
	div.full.f32 	%f86, %f30, %f82;
$L__tmp4:
	.loc	1 42 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:42:22
	mul.f32 	%f87, %f83, %f55;
	mul.f32 	%f88, %f84, %f56;
	mul.f32 	%f89, %f85, %f57;
	mul.f32 	%f90, %f86, %f58;
	.loc	1 48 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:48:25
	fma.rn.f32 	%f91, %f87, %f59, %f43;
	fma.rn.f32 	%f92, %f88, %f60, %f44;
	fma.rn.f32 	%f93, %f89, %f61, %f45;
	fma.rn.f32 	%f94, %f90, %f62, %f46;
	.loc	1 49 50                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:49:50
	selp.f32 	%f95, %f91, %f43, %p5;
	selp.f32 	%f96, %f92, %f44, %p5;
	selp.f32 	%f97, %f93, %f45, %p5;
	selp.f32 	%f98, %f94, %f46, %p5;
	.loc	1 53 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:53:25
	fma.rn.f32 	%f99, %f87, %f63, %f51;
	fma.rn.f32 	%f100, %f88, %f64, %f52;
	fma.rn.f32 	%f101, %f89, %f65, %f53;
	fma.rn.f32 	%f102, %f90, %f66, %f54;
	.loc	1 54 50                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:54:50
	selp.f32 	%f103, %f99, %f51, %p5;
	selp.f32 	%f104, %f100, %f52, %p5;
	selp.f32 	%f105, %f101, %f53, %p5;
	selp.f32 	%f106, %f102, %f54, %p5;
	.loc	1 26 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:26:37
	and.b32  	%r47, %r40, 31;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f95, %f96;
	add.f32 	%f108, %f97, %f107;
	add.f32 	%f109, %f98, %f108;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f109;
	shfl.sync.bfly.b32	%r49, %r48, 16, 31, -1;
	mov.b32 	%f110, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r50, %f111;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f112, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r52, %f113;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f114, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r54, %f115;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f116, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r56, %f117;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f118, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f119, %f117, %f118;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p7, %r47, 0;
	shr.u32 	%r58, %r40, 3;
	and.b32  	%r59, %r58, 60;
	mov.u32 	%r60, global_smem;
	add.s32 	%r25, %r60, %r59;
	mov.b32 	%r26, %f119;
	// begin inline asm
	@%p7 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r40, 16;
	add.s32 	%r28, %r60, %r41;
	// begin inline asm
	@%p8 ld.shared.b32 %r27, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f120, %r27;
	shfl.sync.bfly.b32	%r61, %r27, 8, 31, -1;
	mov.b32 	%f121, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r62, %f122;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f123, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f124;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f125, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f126;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f127, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r68, %r40, 15;
	setp.eq.s32 	%p15, %r68, 0;
	and.pred  	%p9, %p8, %p15;
	mov.b32 	%r30, %f128;
	// begin inline asm
	@%p9 st.shared.b32 [ %r28 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r37, [global_smem];
$L__tmp6:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f129, %f103, %f104;
	add.f32 	%f130, %f105, %f129;
	add.f32 	%f131, %f106, %f130;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r69, %f131;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f132, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f133, %f131, %f132;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r71, %f133;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f134, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f135, %f133, %f134;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r73, %f135;
	shfl.sync.bfly.b32	%r74, %r73, 4, 31, -1;
	mov.b32 	%f136, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r75, %f137;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f138, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r77, %f139;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f140, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f141, %f139, %f140;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r32, %f141;
	// begin inline asm
	@%p7 st.shared.b32 [ %r25 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r33, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f142, %r33;
	shfl.sync.bfly.b32	%r79, %r33, 8, 31, -1;
	mov.b32 	%f143, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f142, %f143;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f144;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f145, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r82, %f146;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f147, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f146, %f147;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r84, %f148;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f149, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f148, %f149;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r36, %f150;
	// begin inline asm
	@%p9 st.shared.b32 [ %r28 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r38, [global_smem];
$L__tmp7:
	.loc	1 57 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:25
	mul.wide.s32 	%rd19, %r39, 4;
	add.s64 	%rd7, %rd12, %rd19;
	.loc	1 57 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:37
	and.b32  	%r86, %r40, 511;
	setp.eq.s32 	%p16, %r86, 0;
	and.pred  	%p13, %p2, %p16;
	// begin inline asm
	@%p13 st.global.b32 [ %rd7 + 0 ], { %r37 };
	// end inline asm
	.loc	1 58 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:25
	add.s64 	%rd8, %rd13, %rd19;
	.loc	1 58 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:37
	// begin inline asm
	@%p13 st.global.b32 [ %rd8 + 0 ], { %r38 };
	// end inline asm
	.loc	1 58 4                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:4
	ret;
$L__tmp8:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 226                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 100
.b8 101
.b8 106
.b8 114
.b8 102
.b8 121
.b8 118
.b8 50
.b8 107
.b8 119
.b8 101
.b8 100
.b8 52
.b8 52
.b8 118
.b8 112
.b8 108
.b8 100
.b8 117
.b8 51
.b8 108
.b8 113
.b8 51
.b8 102
.b8 113
.b8 121
.b8 113
.b8 113
.b8 122
.b8 116
.b8 97
.b8 108
.b8 111
.b8 101
.b8 119
.b8 99
.b8 98
.b8 55
.b8 51
.b8 53
.b8 114
.b8 54
.b8 119
.b8 105
.b8 114
.b8 117
.b8 120
.b8 55
.b8 97
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 112
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
