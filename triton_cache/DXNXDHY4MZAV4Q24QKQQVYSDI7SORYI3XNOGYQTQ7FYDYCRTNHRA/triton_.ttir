#loc = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":22:0)
module {
  tt.func public @triton_(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":22:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":22:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":22:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":22:0)) attributes {noinline = false} {
    %c24_i32 = arith.constant 24 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<1.702000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3072> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<77> : tensor<32x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<768> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3072> : tensor<32x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<768> : tensor<32x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<3072> : tensor<64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<77> : tensor<32xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.divsi %0, %c384_i32 : i32 loc(#loc3)
    %2 = arith.muli %1, %c8_i32 : i32 loc(#loc4)
    %3 = arith.subi %c3_i32, %2 : i32 loc(#loc5)
    %4 = arith.minsi %3, %c8_i32 : i32 loc(#loc6)
    %5 = arith.remsi %0, %4 : i32 loc(#loc7)
    %6 = arith.addi %2, %5 : i32 loc(#loc8)
    %7 = arith.remsi %0, %c384_i32 : i32 loc(#loc9)
    %8 = arith.divsi %7, %4 : i32 loc(#loc10)
    %9 = arith.muli %6, %c32_i32 : i32 loc(#loc11)
    %10 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc12)
    %11 = tt.splat %9 : i32 -> tensor<32xi32> loc(#loc13)
    %12 = arith.addi %11, %10 : tensor<32xi32> loc(#loc13)
    %13 = arith.muli %8, %c64_i32 : i32 loc(#loc14)
    %14 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc15)
    %15 = tt.splat %13 : i32 -> tensor<64xi32> loc(#loc16)
    %16 = arith.addi %15, %14 : tensor<64xi32> loc(#loc16)
    %17 = arith.remsi %12, %cst_8 {tt.contiguity = dense<32> : tensor<1xi32>, tt.divisibility = dense<32> : tensor<1xi32>} : tensor<32xi32> loc(#loc17)
    %18 = arith.remsi %16, %cst_7 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32> loc(#loc18)
    %19 = scf.for %arg4 = %c0_i32 to %c24_i32 step %c1_i32 iter_args(%arg5 = %cst_3) -> (tensor<32x64xf32>)  : i32 {
      %46 = tt.expand_dims %10 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc20)
      %47 = arith.muli %arg4, %c32_i32 : i32 loc(#loc21)
      %48 = tt.splat %47 : i32 -> tensor<1x32xi32> loc(#loc22)
      %49 = arith.addi %46, %48 : tensor<1x32xi32> loc(#loc22)
      %50 = tt.expand_dims %10 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc23)
      %51 = tt.splat %47 : i32 -> tensor<32x1xi32> loc(#loc24)
      %52 = arith.addi %50, %51 : tensor<32x1xi32> loc(#loc24)
      %53 = tt.expand_dims %17 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc25)
      %54 = arith.muli %53, %cst_6 : tensor<32x1xi32> loc(#loc26)
      %55 = tt.broadcast %49 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc27)
      %56 = tt.broadcast %54 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc27)
      %57 = arith.addi %55, %56 : tensor<32x32xi32> loc(#loc27)
      %58 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<32x32x!tt.ptr<bf16>> loc(#loc28)
      %59 = tt.addptr %58, %57 : tensor<32x32x!tt.ptr<bf16>>, tensor<32x32xi32> loc(#loc28)
      %60 = tt.load %59 : tensor<32x32x!tt.ptr<bf16>> loc(#loc29)
      %61 = tt.expand_dims %18 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc30)
      %62 = arith.muli %61, %cst_4 : tensor<1x64xi32> loc(#loc31)
      %63 = tt.broadcast %52 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc32)
      %64 = tt.broadcast %62 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc32)
      %65 = arith.addi %63, %64 : tensor<32x64xi32> loc(#loc32)
      %66 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<32x64x!tt.ptr<bf16>> loc(#loc33)
      %67 = tt.addptr %66, %65 : tensor<32x64x!tt.ptr<bf16>>, tensor<32x64xi32> loc(#loc33)
      %68 = tt.load %67 : tensor<32x64x!tt.ptr<bf16>> loc(#loc34)
      %69 = tt.dot %60, %68, %arg5, inputPrecision = tf32 : tensor<32x32xbf16> * tensor<32x64xbf16> -> tensor<32x64xf32> loc(#loc35)
      scf.yield %69 : tensor<32x64xf32> loc(#loc36)
    } loc(#loc19)
    %20 = tt.expand_dims %12 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc37)
    %21 = tt.expand_dims %16 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc38)
    %22 = arith.cmpi slt, %20, %cst_2 : tensor<32x1xi32> loc(#loc39)
    %23 = arith.cmpi slt, %21, %cst_1 : tensor<1x64xi32> loc(#loc40)
    %24 = tt.broadcast %22 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc41)
    %25 = tt.broadcast %23 : tensor<1x64xi1> -> tensor<32x64xi1> loc(#loc41)
    %26 = arith.andi %24, %25 : tensor<32x64xi1> loc(#loc41)
    %27 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc42)
    %28 = tt.addptr %27, %21 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc42)
    %29 = tt.broadcast %28 : tensor<1x64x!tt.ptr<bf16>> -> tensor<32x64x!tt.ptr<bf16>> loc(#loc42)
    %30 = tt.load %29, %26 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<bf16>> loc(#loc43)
    %31 = arith.extf %30 : tensor<32x64xbf16> to tensor<32x64xf32> loc(#loc44)
    %32 = arith.addf %19, %31 : tensor<32x64xf32> loc(#loc45)
    %33 = arith.mulf %32, %cst_0 : tensor<32x64xf32> loc(#loc46)
    %34 = arith.subf %cst_3, %33 : tensor<32x64xf32> loc(#loc58)
    %35 = math.exp %34 : tensor<32x64xf32> loc(#loc59)
    %36 = arith.addf %35, %cst : tensor<32x64xf32> loc(#loc60)
    %37 = arith.divf %cst, %36 : tensor<32x64xf32> loc(#loc61)
    %38 = arith.mulf %32, %37 : tensor<32x64xf32> loc(#loc52)
    %39 = arith.muli %20, %cst_5 : tensor<32x1xi32> loc(#loc53)
    %40 = tt.broadcast %21 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc54)
    %41 = tt.broadcast %39 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc54)
    %42 = arith.addi %40, %41 : tensor<32x64xi32> loc(#loc54)
    %43 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<32x64x!tt.ptr<bf16>> loc(#loc55)
    %44 = tt.addptr %43, %42 : tensor<32x64x!tt.ptr<bf16>>, tensor<32x64xi32> loc(#loc55)
    %45 = arith.truncf %38 : tensor<32x64xf32> to tensor<32x64xbf16> loc(#loc56)
    tt.store %44, %45, %26 : tensor<32x64x!tt.ptr<bf16>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":45:24)
#loc3 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":51:22)
#loc4 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":52:41)
#loc5 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":52:30)
#loc6 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":52:50)
#loc7 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":53:40)
#loc8 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":53:34)
#loc9 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":54:19)
#loc10 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":54:30)
#loc11 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":56:17)
#loc12 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":56:40)
#loc13 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":56:27)
#loc14 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":57:17)
#loc15 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":57:40)
#loc16 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":57:27)
#loc17 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":59:57)
#loc18 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":63:57)
#loc19 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":69:26)
#loc20 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":71:30)
#loc21 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":71:50)
#loc22 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":71:42)
#loc23 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":72:30)
#loc24 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":72:42)
#loc25 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":74:25)
#loc26 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":76:29)
#loc27 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":76:25)
#loc28 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":77:25)
#loc29 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":77:20)
#loc30 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":80:25)
#loc31 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":82:54)
#loc32 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":82:50)
#loc33 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":82:25)
#loc34 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":82:20)
#loc35 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":83:25)
#loc36 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":83:8)
#loc37 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":88:15)
#loc38 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":89:15)
#loc39 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":90:20)
#loc40 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":90:34)
#loc41 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":90:26)
#loc42 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":94:30)
#loc43 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":94:66)
#loc44 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":94:105)
#loc45 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":95:17)
#loc46 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":97:18)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:30)
#loc48 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":98:22)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:29)
#loc50 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:20)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:16)
#loc52 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":99:18)
#loc53 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":100:54)
#loc54 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":100:49)
#loc55 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":100:25)
#loc56 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":100:80)
#loc57 = loc("/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py":100:4)
#loc58 = loc(callsite(#loc47 at #loc48))
#loc59 = loc(callsite(#loc49 at #loc48))
#loc60 = loc(callsite(#loc50 at #loc48))
#loc61 = loc(callsite(#loc51 at #loc48))
