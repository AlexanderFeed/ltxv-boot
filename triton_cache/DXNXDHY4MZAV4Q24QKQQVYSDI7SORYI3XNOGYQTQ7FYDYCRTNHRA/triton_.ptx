//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_
.visible .entry triton_(
	.param .u64 .ptr .global .align 1 triton__param_0,
	.param .u64 .ptr .global .align 1 triton__param_1,
	.param .u64 .ptr .global .align 1 triton__param_2,
	.param .u64 .ptr .global .align 1 triton__param_3,
	.param .u64 .ptr .global .align 1 triton__param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<216>;
	.reg .f32 	%f<123>;
	.reg .b64 	%rd<33>;
	.loc	1 22 0                          // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:22:0
$L__func_begin0:
	.loc	1 22 0                          // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:22:0

// %bb.0:
	ld.param.u64 	%rd10, [triton__param_3];
	ld.param.u64 	%rd9, [triton__param_2];
	ld.param.u64 	%rd20, [triton__param_0];
	ld.param.u64 	%rd21, [triton__param_1];
$L__tmp0:
	.loc	1 45 24                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:45:24
	mov.u32 	%r35, %ctaid.x;
	.loc	1 51 22                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:51:22
	mul.hi.s32 	%r36, %r35, 715827883;
	shr.u32 	%r37, %r36, 31;
	shr.s32 	%r38, %r36, 6;
	add.s32 	%r39, %r38, %r37;
	.loc	1 52 41                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:52:41
	shl.b32 	%r40, %r39, 3;
	.loc	1 52 30                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:52:30
	sub.s32 	%r41, 3, %r40;
	.loc	1 52 50                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:52:50
	min.s32 	%r42, %r41, 8;
	.loc	1 53 40                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:53:40
	rem.s32 	%r43, %r35, %r42;
	.loc	1 53 34                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:53:34
	add.s32 	%r44, %r43, %r40;
	.loc	1 54 19                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:54:19
	mul.lo.s32 	%r45, %r39, 384;
	sub.s32 	%r46, %r35, %r45;
	.loc	1 54 30                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:54:30
	div.s32 	%r47, %r46, %r42;
	.loc	1 56 17                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:56:17
	shl.b32 	%r48, %r44, 5;
	.loc	1 56 40                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:56:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 16;
	bfe.u32 	%r49, %r1, 3, 4;
	and.b32  	%r3, %r1, 128;
	shr.u32 	%r50, %r3, 3;
	or.b32  	%r51, %r49, %r50;
	.loc	1 56 27                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:56:27
	or.b32  	%r4, %r48, %r51;
	.loc	1 57 17                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:57:17
	shl.b32 	%r5, %r47, 6;
	.loc	1 57 40                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:57:40
	shr.u32 	%r52, %r1, 2;
	bfe.u32 	%r53, %r1, 2, 6;
	shl.b32 	%r6, %r1, 3;
	and.b32  	%r54, %r6, 24;
	.loc	1 57 27                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:57:27
	or.b32  	%r55, %r5, %r53;
	.loc	1 59 57                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:59:57
	mul.hi.s32 	%r56, %r4, 892460737;
	shr.u32 	%r57, %r56, 31;
	shr.u32 	%r58, %r56, 4;
	add.s32 	%r59, %r58, %r57;
	mul.lo.s32 	%r60, %r59, 77;
	sub.s32 	%r61, %r4, %r60;
	.loc	1 63 57                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:63:57
	mul.hi.s32 	%r62, %r55, 715827883;
	shr.u32 	%r63, %r62, 31;
	shr.u32 	%r64, %r62, 9;
	add.s32 	%r65, %r64, %r63;
	mul.lo.s32 	%r66, %r65, 3072;
	sub.s32 	%r67, %r55, %r66;
	.loc	1 71 30                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:71:30
	shl.b32 	%r68, %r1, 2;
	and.b32  	%r69, %r68, 8;
	and.b32  	%r70, %r68, 16;
	and.b32  	%r71, %r68, 28;
	.loc	1 76 29                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:76:29
	mul.lo.s32 	%r72, %r61, 768;
	.loc	1 82 54                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:54
	mul.lo.s32 	%r73, %r67, 768;
	.loc	1 76 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:76:25
	or.b32  	%r74, %r72, %r71;
	.loc	1 77 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:25
	mul.wide.s32 	%rd22, %r74, 2;
	add.s64 	%rd11, %rd20, %rd22;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	shr.u32 	%r75, %r2, 1;
	shr.u32 	%r76, %r1, 1;
	and.b32  	%r77, %r76, 24;
	xor.b32  	%r78, %r77, %r71;
	shl.b32 	%r79, %r78, 1;
	shl.b32 	%r80, %r51, 6;
	or.b32  	%r81, %r80, %r79;
	mov.u32 	%r82, global_smem;
	add.s32 	%r83, %r82, %r81;
	add.s32 	%r17, %r83, 16384;
	mov.b32 	%r18, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r17 + 0 ], [ %rd11 + 0 ], 0x8, %r18;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 50                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:50
	or.b32  	%r84, %r73, %r54;
	.loc	1 82 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:25
	mul.wide.s32 	%rd23, %r84, 2;
	add.s64 	%rd12, %rd21, %rd23;
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	xor.b32  	%r85, %r6, %r1;
	and.b32  	%r86, %r85, 24;
	shl.b32 	%r87, %r86, 1;
	shl.b32 	%r88, %r53, 6;
	or.b32  	%r89, %r88, %r87;
	add.s32 	%r19, %r82, %r89;
	mov.b32 	%r20, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r19 + 0 ], [ %rd12 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:25
	add.s64 	%rd13, %rd11, 64;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	bar.sync 	0;
	add.s32 	%r21, %r83, 18432;
	// begin inline asm
	cp.async.ca.shared.global [ %r21 + 0 ], [ %rd13 + 0 ], 0x8, %r18;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:25
	add.s64 	%rd14, %rd12, 64;
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	add.s32 	%r23, %r19, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r23 + 0 ], [ %rd14 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:25
	add.s64 	%rd15, %rd11, 128;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	bar.sync 	0;
	add.s32 	%r25, %r83, 20480;
	// begin inline asm
	cp.async.ca.shared.global [ %r25 + 0 ], [ %rd15 + 0 ], 0x8, %r18;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:25
	add.s64 	%rd16, %rd12, 128;
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	add.s32 	%r27, %r19, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd16 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:25
	add.s64 	%rd17, %rd11, 192;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	bar.sync 	0;
	add.s32 	%r29, %r83, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r29 + 0 ], [ %rd17 + 0 ], 0x8, %r18;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:25
	add.s64 	%rd18, %rd12, 192;
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	add.s32 	%r31, %r19, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd18 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r90, %r68, 24;
	and.b32  	%r91, %r1, 7;
	and.b32  	%r92, %r1, 15;
	xor.b32  	%r93, %r90, %r75;
	or.b32  	%r94, %r50, %r92;
	shl.b32 	%r95, %r94, 5;
	or.b32  	%r9, %r95, %r93;
	or.b32  	%r96, %r69, 16;
	or.b32  	%r97, %r75, %r70;
	xor.b32  	%r98, %r97, %r96;
	or.b32  	%r10, %r98, %r95;
	xor.b32  	%r99, %r68, %r1;
	and.b32  	%r100, %r99, 24;
	and.b32  	%r11, %r52, 24;
	or.b32  	%r101, %r11, %r91;
	shl.b32 	%r102, %r101, 5;
	or.b32  	%r12, %r102, %r100;
	.loc	1 69 26                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:69:26
	add.s64 	%rd31, %rd12, 256;
	add.s64 	%rd30, %rd11, 256;
	mov.f32 	%f115, 0f00000000;
	mov.b32 	%r215, 3;
	mov.b32 	%r214, -1;
	mov.b64 	%rd32, 0;
	shl.b32 	%r156, %r9, 1;
	shl.b32 	%r157, %r10, 1;
	shl.b32 	%r160, %r12, 1;
	mov.f32 	%f116, %f115;
	mov.f32 	%f117, %f115;
	mov.f32 	%f118, %f115;
	mov.f32 	%f119, %f115;
	mov.f32 	%f120, %f115;
	mov.f32 	%f121, %f115;
	mov.f32 	%f122, %f115;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd32, 20;
	add.s32 	%r151, %r214, 1;
	setp.lt.s32 	%p2, %r151, 4;
	selp.b32 	%r214, %r151, 0, %p2;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r152, %r214, 11;
	add.s32 	%r154, %r82, %r152;
	add.s32 	%r155, %r154, 16384;
	add.s32 	%r107, %r155, %r156;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r123, %r124, %r125, %r126}, [%r107];
	// end inline asm
	add.s32 	%r112, %r155, %r157;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r135, %r136, %r137, %r138}, [%r112];
	// end inline asm
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	shl.b32 	%r158, %r214, 12;
	add.s32 	%r159, %r82, %r158;
	add.s32 	%r117, %r159, %r160;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r113, %r114, %r115, %r116}, [%r117];
	// end inline asm
	add.s32 	%r122, %r117, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r118, %r119, %r120, %r121}, [%r122];
	// end inline asm
	.loc	1 83 25                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:83:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f115, %f116, %f117, %f118 }, { %r123, %r124, %r125, %r126 }, { %r113, %r114 }, { %f115, %f116, %f117, %f118 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f119, %f120, %f121, %f122 }, { %r123, %r124, %r125, %r126 }, { %r118, %r119 }, { %f119, %f120, %f121, %f122 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f115, %f116, %f117, %f118 }, { %r135, %r136, %r137, %r138 }, { %r115, %r116 }, { %f115, %f116, %f117, %f118 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f119, %f120, %f121, %f122 }, { %r135, %r136, %r137, %r138 }, { %r120, %r121 }, { %f119, %f120, %f121, %f122 };
	// end inline asm
	.loc	1 69 26                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:69:26
	add.s32 	%r161, %r215, 1;
	setp.lt.s32 	%p3, %r161, 4;
	selp.b32 	%r215, %r161, 0, %p3;
	.loc	1 77 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:77:20
	shl.b32 	%r162, %r215, 11;
	bar.sync 	0;
	add.s32 	%r147, %r17, %r162;
	selp.b32 	%r148, 8, 0, %p1;
	// begin inline asm
	cp.async.ca.shared.global [ %r147 + 0 ], [ %rd30 + 0 ], 0x8, %r148;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:82:20
	shl.b32 	%r163, %r215, 12;
	add.s32 	%r149, %r19, %r163;
	selp.b32 	%r150, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd31 + 0 ], 0x10, %r150;
	// end inline asm
	cp.async.commit_group;
	.loc	1 69 26                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:69:26
	add.s64 	%rd32, %rd32, 1;
	add.s64 	%rd31, %rd31, 64;
	add.s64 	%rd30, %rd30, 64;
	setp.ne.s64 	%p4, %rd32, 24;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 57 40                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:57:40
	and.b32  	%r181, %r6, 56;
	.loc	1 57 27                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:57:27
	or.b32  	%r182, %r5, %r181;
	.loc	1 69 26                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:69:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 90 20                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:90:20
	setp.lt.s32 	%p12, %r4, 77;
	.loc	1 90 34                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:90:34
	setp.lt.s32 	%p13, %r182, 3072;
	.loc	1 90 26                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:90:26
	and.pred  	%p5, %p12, %p13;
	.loc	1 94 30                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:94:30
	mul.wide.s32 	%rd28, %r182, 2;
	add.s64 	%rd26, %rd9, %rd28;
	.loc	1 94 66                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:94:66
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 94 105                        // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:94:105
	and.b32  	%r183, %r6, 1016;
	shl.b32 	%r184, %r3, 3;
	or.b32  	%r185, %r183, %r184;
	shl.b32 	%r186, %r1, 1;
	and.b32  	%r187, %r186, 6;
	shl.b32 	%r188, %r1, 4;
	and.b32  	%r189, %r188, 192;
	or.b32  	%r190, %r189, %r187;
	shl.b32 	%r191, %r2, 4;
	or.b32  	%r192, %r190, %r191;
	or.b32  	%r193, %r192, %r11;
	or.b32  	%r194, %r193, %r184;
	shr.u32 	%r195, %r185, 2;
	and.b32  	%r196, %r195, 496;
	add.s32 	%r198, %r82, %r196;
	shl.b32 	%r199, %r185, 1;
	add.s32 	%r168, %r198, %r199;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r168 + 0 ], { %r169, %r170, %r171, %r172 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r200, %r194, 2;
	and.b32  	%r201, %r200, 496;
	add.s32 	%r202, %r82, %r201;
	shl.b32 	%r203, %r194, 1;
	add.s32 	%r173, %r202, %r203;
	ld.shared.b32 	%r204, [%r173];
	mov.b32 	{%rs9, %rs10}, %r204;
	or.b32  	%r205, %r194, 512;
	shr.u32 	%r206, %r205, 2;
	and.b32  	%r207, %r206, 1073741808;
	add.s32 	%r208, %r82, %r207;
	add.s32 	%r209, %r208, %r203;
	add.s32 	%r174, %r209, 1024;
	ld.shared.b32 	%r210, [%r209+1024];
	mov.b32 	{%rs11, %rs12}, %r210;
	add.s32 	%r175, %r173, 64;
	ld.shared.b32 	%r211, [%r173+64];
	mov.b32 	{%rs13, %rs14}, %r211;
	add.s32 	%r176, %r209, 1088;
	ld.shared.b32 	%r212, [%r209+1088];
	mov.b32 	{%rs15, %rs16}, %r212;
	cvt.f32.bf16 	%f50, %rs9;
	cvt.f32.bf16 	%f51, %rs10;
	cvt.f32.bf16 	%f52, %rs11;
	cvt.f32.bf16 	%f53, %rs12;
	cvt.f32.bf16 	%f54, %rs13;
	cvt.f32.bf16 	%f55, %rs14;
	cvt.f32.bf16 	%f56, %rs15;
	cvt.f32.bf16 	%f57, %rs16;
	.loc	1 95 17                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:95:17
	add.f32 	%f58, %f115, %f50;
	add.f32 	%f59, %f116, %f51;
	add.f32 	%f60, %f117, %f52;
	add.f32 	%f61, %f118, %f53;
	add.f32 	%f62, %f119, %f54;
	add.f32 	%f63, %f120, %f55;
	add.f32 	%f64, %f121, %f56;
	add.f32 	%f65, %f122, %f57;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	fma.rn.f32 	%f66, %f58, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f67, %f59, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f68, %f60, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f69, %f61, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f70, %f62, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f71, %f63, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f72, %f64, 0fBFD9DB23, 0f00000000;
	fma.rn.f32 	%f73, %f65, 0fBFD9DB23, 0f00000000;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f74, %f66, 0f3FB8AA3B;
	ex2.approx.f32 	%f75, %f74;
	mul.f32 	%f76, %f67, 0f3FB8AA3B;
	ex2.approx.f32 	%f77, %f76;
	mul.f32 	%f78, %f68, 0f3FB8AA3B;
	ex2.approx.f32 	%f79, %f78;
	mul.f32 	%f80, %f69, 0f3FB8AA3B;
	ex2.approx.f32 	%f81, %f80;
	mul.f32 	%f82, %f70, 0f3FB8AA3B;
	ex2.approx.f32 	%f83, %f82;
	mul.f32 	%f84, %f71, 0f3FB8AA3B;
	ex2.approx.f32 	%f85, %f84;
	mul.f32 	%f86, %f72, 0f3FB8AA3B;
	ex2.approx.f32 	%f87, %f86;
	mul.f32 	%f88, %f73, 0f3FB8AA3B;
	ex2.approx.f32 	%f89, %f88;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f90, %f75, 0f3F800000;
	add.f32 	%f91, %f77, 0f3F800000;
	add.f32 	%f92, %f79, 0f3F800000;
	add.f32 	%f93, %f81, 0f3F800000;
	add.f32 	%f94, %f83, 0f3F800000;
	add.f32 	%f95, %f85, 0f3F800000;
	add.f32 	%f96, %f87, 0f3F800000;
	add.f32 	%f97, %f89, 0f3F800000;
	mov.f32 	%f98, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f99, %f98, %f90;
	div.full.f32 	%f100, %f98, %f91;
	div.full.f32 	%f101, %f98, %f92;
	div.full.f32 	%f102, %f98, %f93;
	div.full.f32 	%f103, %f98, %f94;
	div.full.f32 	%f104, %f98, %f95;
	div.full.f32 	%f105, %f98, %f96;
	div.full.f32 	%f106, %f98, %f97;
$L__tmp2:
	.loc	1 99 18                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:99:18
	mul.f32 	%f107, %f58, %f99;
	mul.f32 	%f108, %f59, %f100;
	mul.f32 	%f109, %f60, %f101;
	mul.f32 	%f110, %f61, %f102;
	mul.f32 	%f111, %f62, %f103;
	mul.f32 	%f112, %f63, %f104;
	mul.f32 	%f113, %f64, %f105;
	mul.f32 	%f114, %f65, %f106;
	.loc	1 100 49                        // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:100:49
	mad.lo.s32 	%r213, %r4, 3072, %r182;
	.loc	1 100 25                        // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:100:25
	mul.wide.s32 	%rd29, %r213, 2;
	add.s64 	%rd27, %rd10, %rd29;
	.loc	1 100 80                        // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:100:80
	cvt.rn.bf16.f32 	%rs1, %f107;
	cvt.rn.bf16.f32 	%rs2, %f108;
	cvt.rn.bf16.f32 	%rs3, %f109;
	cvt.rn.bf16.f32 	%rs4, %f110;
	cvt.rn.bf16.f32 	%rs5, %f111;
	cvt.rn.bf16.f32 	%rs6, %f112;
	cvt.rn.bf16.f32 	%rs7, %f113;
	cvt.rn.bf16.f32 	%rs8, %f114;
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r173 + 0 ], { %rs1, %rs2 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r174 + 0 ], { %rs3, %rs4 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r175 + 0 ], { %rs5, %rs6 };
	// end inline asm
	// begin inline asm
	@%p6 st.shared.v2.b16 [ %r176 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r177, %r178, %r179, %r180}, [%r168];
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd27 + 0 ], { %r177, %r178, %r179, %r180 };
	// end inline asm
	.loc	1 100 4                         // chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py:100:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/ho/chot4drxqp36ugvcthkk447ruhhefk5mggvwo2s6zmoqpol7tgew.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 161                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9a DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 111
.b8 116
.b8 52
.b8 100
.b8 114
.b8 120
.b8 113
.b8 112
.b8 51
.b8 54
.b8 117
.b8 103
.b8 118
.b8 99
.b8 116
.b8 104
.b8 107
.b8 107
.b8 52
.b8 52
.b8 55
.b8 114
.b8 117
.b8 104
.b8 104
.b8 101
.b8 102
.b8 107
.b8 53
.b8 109
.b8 103
.b8 103
.b8 118
.b8 119
.b8 111
.b8 50
.b8 115
.b8 54
.b8 122
.b8 109
.b8 111
.b8 113
.b8 112
.b8 111
.b8 108
.b8 55
.b8 116
.b8 103
.b8 101
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 104
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0xa DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x76:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x8b:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 98                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
