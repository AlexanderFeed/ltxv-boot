//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<147>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd7, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r44, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r45, %r44, 1;
	ld.param.u64 	%rd8, [triton_red_fused_addmm_0_param_2];
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r46, %tid.x;
	bfe.u32 	%r47, %r46, 8, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r48, %r47, %r45;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r48, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	shl.b32 	%r49, %r46, 2;
	and.b32  	%r50, %r49, 2044;
	shl.b32 	%r51, %r46, 3;
	and.b32  	%r52, %r51, 2040;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r53, %r48, 3072;
	shl.b32 	%r54, %r50, 2;
	mov.u32 	%r55, global_smem;
	add.s32 	%r13, %r55, %r54;
	shl.b32 	%r56, %r52, 2;
	add.s32 	%r57, %r55, %r56;
	.loc	1 30 40                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:30:40
	cvt.u64.u32 	%rd9, %r50;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd10, %r50, 2;
	add.s64 	%rd1, %rd6, %rd10;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r1;
	mov.b32 	{%rs3, %rs4}, %r2;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r58, %r52, %r53;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd11, %r58, 2;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	mov.u32 %r7, %r3;
	mov.u32 %r8, %r3;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r5;
	mov.b32 	{%rs7, %rs8}, %r6;
	mov.b32 	{%rs9, %rs10}, %r7;
	mov.b32 	{%rs11, %rs12}, %r8;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	cvt.f32.bf16 	%f5, %rs5;
	cvt.f32.bf16 	%f6, %rs6;
	cvt.f32.bf16 	%f7, %rs7;
	cvt.f32.bf16 	%f8, %rs8;
	cvt.f32.bf16 	%f9, %rs9;
	cvt.f32.bf16 	%f10, %rs10;
	cvt.f32.bf16 	%f11, %rs11;
	cvt.f32.bf16 	%f12, %rs12;
	mov.f32 	%f13, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f14, %f13, %f1;
	sub.f32 	%f15, %f13, %f2;
	sub.f32 	%f16, %f13, %f3;
	sub.f32 	%f17, %f13, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f18, %f14, 0f3FB8AA3B;
	ex2.approx.f32 	%f19, %f18;
	mul.f32 	%f20, %f15, 0f3FB8AA3B;
	ex2.approx.f32 	%f21, %f20;
	mul.f32 	%f22, %f16, 0f3FB8AA3B;
	ex2.approx.f32 	%f23, %f22;
	mul.f32 	%f24, %f17, 0f3FB8AA3B;
	ex2.approx.f32 	%f25, %f24;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f19, 0f3F800000;
	add.f32 	%f27, %f21, 0f3F800000;
	add.f32 	%f28, %f23, 0f3F800000;
	add.f32 	%f29, %f25, 0f3F800000;
	mov.f32 	%f30, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f31, %f30, %f26;
	div.full.f32 	%f32, %f30, %f27;
	div.full.f32 	%f33, %f30, %f28;
	div.full.f32 	%f34, %f30, %f29;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f35, %f31, %f1;
	mul.f32 	%f36, %f32, %f2;
	mul.f32 	%f37, %f33, %f3;
	mul.f32 	%f38, %f34, %f4;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r14, %f35;
	mov.b32 	%r15, %f36;
	mov.b32 	%r16, %f37;
	mov.b32 	%r17, %f38;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r13 + 0 ], { %r14, %r15, %r16, %r17 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f39, %f40, %f41, %f42}, [%r57];
	ld.shared.v4.f32 	{%f43, %f44, %f45, %f46}, [%r57+16];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f47, %f39, %f5, 0f00000000;
	fma.rn.f32 	%f48, %f40, %f6, 0f00000000;
	fma.rn.f32 	%f49, %f41, %f7, 0f00000000;
	fma.rn.f32 	%f50, %f42, %f8, 0f00000000;
	fma.rn.f32 	%f51, %f43, %f9, 0f00000000;
	fma.rn.f32 	%f52, %f44, %f10, 0f00000000;
	fma.rn.f32 	%f53, %f45, %f11, 0f00000000;
	fma.rn.f32 	%f54, %f46, %f12, 0f00000000;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f55, %f47, 0f00000000, %p2;
	selp.f32 	%f56, %f48, 0f00000000, %p2;
	selp.f32 	%f57, %f49, 0f00000000, %p2;
	selp.f32 	%f58, %f50, 0f00000000, %p2;
	selp.f32 	%f59, %f51, 0f00000000, %p2;
	selp.f32 	%f60, %f52, 0f00000000, %p2;
	selp.f32 	%f61, %f53, 0f00000000, %p2;
	selp.f32 	%f62, %f54, 0f00000000, %p2;
	.loc	1 31 31                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:31:31
	or.b64  	%rd12, %rd9, 2048;
	or.b32  	%r59, %r52, 2048;
	.loc	1 32 29                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:32:29
	setp.lt.u64 	%p4, %rd12, 3072;
	setp.lt.u32 	%p12, %r59, 3072;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r18, %r3;
	mov.u32 %r19, %r3;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs13, %rs14}, %r18;
	mov.b32 	{%rs15, %rs16}, %r19;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f63, %rs13;
	cvt.f32.bf16 	%f64, %rs14;
	cvt.f32.bf16 	%f65, %rs15;
	cvt.f32.bf16 	%f66, %rs16;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r60, %r59, %r53;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd13, %r60, 2;
	add.s64 	%rd4, %rd7, %rd13;
	.loc	1 37 61                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:61
	and.pred  	%p5, %p2, %p12;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r22, %r3;
	mov.u32 %r23, %r3;
	mov.u32 %r24, %r3;
	mov.u32 %r25, %r3;
	@%p5 ld.global.L1::evict_first.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r22;
	mov.b32 	{%rs19, %rs20}, %r23;
	mov.b32 	{%rs21, %rs22}, %r24;
	mov.b32 	{%rs23, %rs24}, %r25;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	cvt.f32.bf16 	%f67, %rs17;
	cvt.f32.bf16 	%f68, %rs18;
	cvt.f32.bf16 	%f69, %rs19;
	cvt.f32.bf16 	%f70, %rs20;
	cvt.f32.bf16 	%f71, %rs21;
	cvt.f32.bf16 	%f72, %rs22;
	cvt.f32.bf16 	%f73, %rs23;
	cvt.f32.bf16 	%f74, %rs24;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f75, %f13, %f63;
	sub.f32 	%f76, %f13, %f64;
	sub.f32 	%f77, %f13, %f65;
	sub.f32 	%f78, %f13, %f66;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f79, %f75, 0f3FB8AA3B;
	ex2.approx.f32 	%f80, %f79;
	mul.f32 	%f81, %f76, 0f3FB8AA3B;
	ex2.approx.f32 	%f82, %f81;
	mul.f32 	%f83, %f77, 0f3FB8AA3B;
	ex2.approx.f32 	%f84, %f83;
	mul.f32 	%f85, %f78, 0f3FB8AA3B;
	ex2.approx.f32 	%f86, %f85;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f87, %f80, 0f3F800000;
	add.f32 	%f88, %f82, 0f3F800000;
	add.f32 	%f89, %f84, 0f3F800000;
	add.f32 	%f90, %f86, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f91, %f30, %f87;
	div.full.f32 	%f92, %f30, %f88;
	div.full.f32 	%f93, %f30, %f89;
	div.full.f32 	%f94, %f30, %f90;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f95, %f91, %f63;
	mul.f32 	%f96, %f92, %f64;
	mul.f32 	%f97, %f93, %f65;
	mul.f32 	%f98, %f94, %f66;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r31, %f95;
	mov.b32 	%r32, %f96;
	mov.b32 	%r33, %f97;
	mov.b32 	%r34, %f98;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r13 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f99, %f100, %f101, %f102}, [%r57];
	ld.shared.v4.f32 	{%f103, %f104, %f105, %f106}, [%r57+16];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f107, %f99, %f67, %f55;
	fma.rn.f32 	%f108, %f100, %f68, %f56;
	fma.rn.f32 	%f109, %f101, %f69, %f57;
	fma.rn.f32 	%f110, %f102, %f70, %f58;
	fma.rn.f32 	%f111, %f103, %f71, %f59;
	fma.rn.f32 	%f112, %f104, %f72, %f60;
	fma.rn.f32 	%f113, %f105, %f73, %f61;
	fma.rn.f32 	%f114, %f106, %f74, %f62;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f115, %f107, %f55, %p5;
	selp.f32 	%f116, %f108, %f56, %p5;
	selp.f32 	%f117, %f109, %f57, %p5;
	selp.f32 	%f118, %f110, %f58, %p5;
	selp.f32 	%f119, %f111, %f59, %p5;
	selp.f32 	%f120, %f112, %f60, %p5;
	selp.f32 	%f121, %f113, %f61, %p5;
	selp.f32 	%f122, %f114, %f62, %p5;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r61, %r46, 1;
	and.b32  	%r62, %r46, 31;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r63, %r45, %r61;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p13, %r63, 9216;
$L__tmp5:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f123, %f115, %f116;
	add.f32 	%f124, %f117, %f123;
	add.f32 	%f125, %f118, %f124;
	add.f32 	%f126, %f119, %f125;
	add.f32 	%f127, %f120, %f126;
	add.f32 	%f128, %f121, %f127;
	add.f32 	%f129, %f122, %f128;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f129;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f130, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f131, %f129, %f130;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f131;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f132, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f133, %f131, %f132;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r68, %f133;
	shfl.sync.bfly.b32	%r69, %r68, 4, 31, -1;
	mov.b32 	%f134, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f135, %f133, %f134;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r70, %f135;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	mov.b32 	%f136, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r72, %f137;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f138, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p7, %r62, 0;
	shr.u32 	%r74, %r46, 3;
	and.b32  	%r75, %r74, 28;
	shl.b32 	%r76, %r47, 5;
	or.b32  	%r77, %r76, %r75;
	add.s32 	%r35, %r55, %r77;
	mov.b32 	%r36, %f139;
	// begin inline asm
	@%p7 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r46, 16;
	add.s32 	%r38, %r55, %r49;
	// begin inline asm
	@%p8 ld.shared.b32 %r37, [ %r38 + 0 ];
	// end inline asm
	mov.b32 	%f140, %r37;
	shfl.sync.bfly.b32	%r78, %r37, 4, 31, -1;
	mov.b32 	%f141, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f142;
	shfl.sync.bfly.b32	%r80, %r79, 2, 31, -1;
	mov.b32 	%f143, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f142, %f143;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r81, %f144;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f145, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r83, %r46, 7;
	setp.eq.s32 	%p14, %r83, 0;
	and.pred  	%p9, %p8, %p14;
	mov.b32 	%r40, %f146;
	// begin inline asm
	@%p9 st.shared.b32 [ %r38 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r84, %r55, %r76;
	ld.shared.u32 	%r42, [%r84];
$L__tmp6:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	mad.lo.s32 	%r41, %r47, -28, %r84;
	// begin inline asm
	@%p1 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r85, %r61, 2;
	add.s32 	%r86, %r55, %r85;
	ld.shared.u32 	%r43, [%r86];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd14, %r63, 4;
	add.s64 	%rd5, %rd8, %rd14;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r87, %r46, 510;
	setp.eq.s32 	%p15, %r87, 0;
	and.pred  	%p11, %p15, %p13;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r43 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
