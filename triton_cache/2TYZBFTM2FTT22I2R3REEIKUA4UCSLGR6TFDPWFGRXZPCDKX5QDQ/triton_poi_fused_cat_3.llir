; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 1, !dbg !11
  %11 = and i32 %10, 510, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = sdiv i32 %12, 15360, !dbg !13
  %14 = mul i32 %13, 15360, !dbg !14
  %.decomposed = sub i32 %12, %14, !dbg !14
  %15 = icmp slt i32 %.decomposed, 3072, !dbg !15
  %16 = mul nsw i32 %13, 3072, !dbg !16
  %17 = add nsw i32 %16, %.decomposed, !dbg !17
  %18 = sext i32 %17 to i64, !dbg !18
  %19 = getelementptr bfloat, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %19, i1 %15) #3, !dbg !19
  %21 = icmp sgt i32 %.decomposed, 3071, !dbg !20
  %22 = mul nsw i32 %13, 12288, !dbg !21
  %23 = add nsw i32 %.decomposed, -3072, !dbg !22
  %24 = add nsw i32 %22, %23, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr bfloat, ptr addrspace(1) %1, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %26, i1 %21) #3, !dbg !25
  %28 = bitcast i32 %27 to <2 x bfloat>, !dbg !25
  %29 = sext i32 %23 to i64, !dbg !26
  %30 = getelementptr bfloat, ptr addrspace(1) %2, i64 %29, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %30, i1 %21) #3, !dbg !27
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !27
  %33 = fpext <2 x bfloat> %28 to <2 x float>, !dbg !28
  %34 = fpext <2 x bfloat> %32 to <2 x float>, !dbg !29
  %35 = fadd <2 x float> %33, %34, !dbg !30
  %36 = extractelement <2 x float> %35, i64 0, !dbg !31
  %37 = fmul float %36, %36, !dbg !32
  %38 = extractelement <2 x float> %35, i64 1, !dbg !31
  %39 = fmul float %38, %38, !dbg !32
  %40 = fmul float %36, %37, !dbg !33
  %41 = fmul float %38, %39, !dbg !33
  %42 = fmul float %40, 0x3FA6E4E260000000, !dbg !34
  %43 = fmul float %41, 0x3FA6E4E260000000, !dbg !34
  %44 = fadd float %36, %42, !dbg !31
  %45 = fadd float %38, %43, !dbg !31
  %46 = fmul float %44, 0x3FE9884540000000, !dbg !35
  %47 = fmul float %45, 0x3FE9884540000000, !dbg !35
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i = icmp eq i32 %48, 0, !dbg !36
  %49 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #3, !dbg !36
  %50 = tail call float @llvm.nvvm.fabs.f(float %46) #3, !dbg !36
  %.01.i = select i1 %.not.i, float %50, float %49, !dbg !36
  %51 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !36
  br i1 %51, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !36

__internal_fmad.exit1.i:                          ; preds = %6
  %52 = fmul float %.01.i, 0x4007154760000000, !dbg !36
  %53 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %52) #3, !dbg !36
  %54 = fadd float %53, 1.000000e+00, !dbg !36
  %55 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %54) #4, !dbg !36, !srcloc !37
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i = icmp eq i32 %56, 0, !dbg !36
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %55, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i = select i1 %.not6.i, float %58, float %57, !dbg !36
  %59 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !36
  %s.0.i = select i1 %59, float 1.000000e+00, float %.03.i, !dbg !36
  %60 = bitcast float %s.0.i to i32, !dbg !36
  %61 = bitcast float %46 to i32, !dbg !36
  %62 = and i32 %61, -2147483648, !dbg !36
  %63 = or i32 %62, %60, !dbg !36
  %64 = bitcast i32 %63 to float, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__internal_fmad.exit3.i:                          ; preds = %6
  %65 = fmul float %46, %46, !dbg !36
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i = icmp eq i32 %66, 0, !dbg !36
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %65, float 0xBFAAC795C0000000) #3, !dbg !36
  %68 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %65, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i = select i1 %.not1.i, float %68, float %67, !dbg !36
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i = icmp eq i32 %69, 0, !dbg !36
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %65, float 0x3FC10B2820000000) #3, !dbg !36
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %65, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i = select i1 %.not2.i, float %71, float %70, !dbg !36
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i = icmp eq i32 %72, 0, !dbg !36
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %65, float 0xBFD5553DA0000000) #3, !dbg !36
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %65, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i = select i1 %.not3.i, float %74, float %73, !dbg !36
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i = icmp eq i32 %75, 0, !dbg !36
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %65, float 0.000000e+00) #3, !dbg !36
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %65, float 0.000000e+00) #3, !dbg !36
  %.04.i = select i1 %.not4.i, float %77, float %76, !dbg !36
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i = icmp eq i32 %78, 0, !dbg !36
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %46, float %46) #3, !dbg !36
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %46, float %46) #3, !dbg !36
  %.02.i = select i1 %.not5.i, float %80, float %79, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %64, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !36
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i1 = icmp eq i32 %81, 0, !dbg !36
  %82 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #3, !dbg !36
  %83 = tail call float @llvm.nvvm.fabs.f(float %47) #3, !dbg !36
  %.01.i2 = select i1 %.not.i1, float %83, float %82, !dbg !36
  %84 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !36
  br i1 %84, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !36

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %85 = fmul float %.01.i2, 0x4007154760000000, !dbg !36
  %86 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %85) #3, !dbg !36
  %87 = fadd float %86, 1.000000e+00, !dbg !36
  %88 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %87) #4, !dbg !36, !srcloc !37
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i4 = icmp eq i32 %89, 0, !dbg !36
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i5 = select i1 %.not6.i4, float %91, float %90, !dbg !36
  %92 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !36
  %s.0.i6 = select i1 %92, float 1.000000e+00, float %.03.i5, !dbg !36
  %93 = bitcast float %s.0.i6 to i32, !dbg !36
  %94 = bitcast float %47 to i32, !dbg !36
  %95 = and i32 %94, -2147483648, !dbg !36
  %96 = or i32 %95, %93, !dbg !36
  %97 = bitcast i32 %96 to float, !dbg !36
  br label %__nv_tanhf.exit19, !dbg !36

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %98 = fmul float %47, %47, !dbg !36
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i9 = icmp eq i32 %99, 0, !dbg !36
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %98, float 0xBFAAC795C0000000) #3, !dbg !36
  %101 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %98, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i10 = select i1 %.not1.i9, float %101, float %100, !dbg !36
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i11 = icmp eq i32 %102, 0, !dbg !36
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %98, float 0x3FC10B2820000000) #3, !dbg !36
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %98, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i12 = select i1 %.not2.i11, float %104, float %103, !dbg !36
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i13 = icmp eq i32 %105, 0, !dbg !36
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %98, float 0xBFD5553DA0000000) #3, !dbg !36
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %98, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i14 = select i1 %.not3.i13, float %107, float %106, !dbg !36
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i15 = icmp eq i32 %108, 0, !dbg !36
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %98, float 0.000000e+00) #3, !dbg !36
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %98, float 0.000000e+00) #3, !dbg !36
  %.04.i16 = select i1 %.not4.i15, float %110, float %109, !dbg !36
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i17 = icmp eq i32 %111, 0, !dbg !36
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %47, float %47) #3, !dbg !36
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %47, float %47) #3, !dbg !36
  %.02.i18 = select i1 %.not5.i17, float %113, float %112, !dbg !36
  br label %__nv_tanhf.exit19, !dbg !36

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %97, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !36
  %114 = fmul <2 x float> %35, splat (float 5.000000e-01), !dbg !38
  %115 = bitcast i32 %20 to <2 x bfloat>, !dbg !19
  %116 = insertelement <2 x float> poison, float %s.1.i, i64 0, !dbg !39
  %117 = insertelement <2 x float> %116, float %s.1.i7, i64 1, !dbg !39
  %118 = fadd <2 x float> %117, splat (float 1.000000e+00), !dbg !39
  %119 = sext i32 %12 to i64, !dbg !40
  %120 = getelementptr bfloat, ptr addrspace(1) %3, i64 %119, !dbg !40
  %121 = fmul <2 x float> %114, %118, !dbg !41
  %122 = fptrunc <2 x float> %121 to <2 x bfloat>, !dbg !42
  %123 = insertelement <2 x i1> poison, i1 %15, i64 0, !dbg !43
  %124 = shufflevector <2 x i1> %123, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !43
  %125 = select <2 x i1> %124, <2 x bfloat> %115, <2 x bfloat> %122, !dbg !43
  %126 = bitcast <2 x bfloat> %125 to i32, !dbg !42
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %126, ptr addrspace(1) %120) #3, !dbg !42
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwmf7y7cliwixru7uz6qsiygkykwxu3cz5p7vefznv23rysobrms.py", directory: "/tmp/torchinductor_root/wm")
!4 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 24, column: 19, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 30, column: 18, scope: !6)
!16 = !DILocation(line: 31, column: 35, scope: !6)
!17 = !DILocation(line: 31, column: 41, scope: !6)
!18 = !DILocation(line: 31, column: 30, scope: !6)
!19 = !DILocation(line: 31, column: 47, scope: !6)
!20 = !DILocation(line: 32, column: 19, scope: !6)
!21 = !DILocation(line: 35, column: 36, scope: !6)
!22 = !DILocation(line: 35, column: 52, scope: !6)
!23 = !DILocation(line: 35, column: 42, scope: !6)
!24 = !DILocation(line: 35, column: 30, scope: !6)
!25 = !DILocation(line: 35, column: 58, scope: !6)
!26 = !DILocation(line: 36, column: 31, scope: !6)
!27 = !DILocation(line: 36, column: 46, scope: !6)
!28 = !DILocation(line: 35, column: 108, scope: !6)
!29 = !DILocation(line: 36, column: 96, scope: !6)
!30 = !DILocation(line: 37, column: 19, scope: !6)
!31 = !DILocation(line: 45, column: 20, scope: !6)
!32 = !DILocation(line: 41, column: 20, scope: !6)
!33 = !DILocation(line: 42, column: 20, scope: !6)
!34 = !DILocation(line: 44, column: 20, scope: !6)
!35 = !DILocation(line: 47, column: 20, scope: !6)
!36 = !DILocation(line: 48, column: 27, scope: !6)
!37 = !{i32 21046}
!38 = !DILocation(line: 40, column: 20, scope: !6)
!39 = !DILocation(line: 50, column: 20, scope: !6)
!40 = !DILocation(line: 56, column: 25, scope: !6)
!41 = !DILocation(line: 51, column: 20, scope: !6)
!42 = !DILocation(line: 56, column: 37, scope: !6)
!43 = !DILocation(line: 55, column: 33, scope: !6)
!44 = !DILocation(line: 56, column: 4, scope: !6)
