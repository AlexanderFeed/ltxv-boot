#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 16], order = [0, 1]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [8, 2], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0)
#loc1 = loc(unknown)
#loc66 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":170:28)
#loc67 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":82:35)
#loc77 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:58)
#loc106 = loc(callsite(#loc1 at #loc66))
#loc118 = loc(callsite(#loc1 at #loc77))
#loc125 = loc(callsite(#loc106 at #loc67))
#loc132 = loc(callsite(#loc118 at #loc67))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__softmax__to_copy_add_2(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<15> : tensor<8x512xi64, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<8x512xi64, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<1x512xi1, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<8.000000e+00> : tensor<8x512xf32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<0.360673755> : tensor<8x512xf32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<1.250000e-01> : tensor<8x512xf32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<8x512xi64, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<8x512xi64, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<0> : tensor<8x512xi64, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<512> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<8x512xbf16, #blocked2> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_14 = arith.constant dense<512> : tensor<8x1xi32, #blocked2> loc(#loc1)
    %cst_15 = arith.constant dense<512> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<512> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_17 = arith.constant dense<512> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<512> : tensor<1x512xi32, #blocked2> loc(#loc1)
    %cst_19 = arith.constant dense<-1> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<-1> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_21 = arith.constant dense<0> : tensor<8x512xi64, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<16> : tensor<8x512xi64, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<8> : tensor<8x512xi64, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<1.250000e-01> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_25 = arith.constant dense<0.360673755> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_26 = arith.constant dense<8.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_27 = arith.constant dense<64> : tensor<8x512xi64, #blocked> loc(#loc1)
    %cst_28 = arith.constant dense<32> : tensor<8x512xi64, #blocked> loc(#loc1)
    %cst_29 = arith.constant dense<15> : tensor<8x512xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %5 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1xi32, #blocked2> loc(#loc4)
    %6 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %7 = tt.expand_dims %4 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %8 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked2> loc(#loc5)
    %9 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %10 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %11 = arith.addi %8, %5 : tensor<8x1xi32, #blocked2> loc(#loc5)
    %12 = arith.addi %9, %6 : tensor<8x1xi32, #blocked> loc(#loc5)
    %13 = arith.addi %10, %7 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %14 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %15 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc6)
    %16 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc6)
    %17 = tt.expand_dims %14 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc6)
    %18 = tt.expand_dims %15 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x512xi32, #blocked2> loc(#loc6)
    %19 = tt.expand_dims %16 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc6)
    %20 = arith.remsi %12, %cst_15 : tensor<8x1xi32, #blocked> loc(#loc7)
    %21 = arith.remsi %13, %cst_16 : tensor<8x1xi32, #blocked1> loc(#loc7)
    %22 = arith.divsi %12, %cst_15 : tensor<8x1xi32, #blocked> loc(#loc8)
    %23 = arith.cmpi slt, %17, %cst_17 : tensor<1x512xi32, #blocked> loc(#loc9)
    %24 = arith.cmpi slt, %18, %cst_18 : tensor<1x512xi32, #blocked2> loc(#loc9)
    %25 = arith.cmpi slt, %19, %cst_12 : tensor<1x512xi32, #blocked1> loc(#loc9)
    %26 = arith.muli %11, %cst_14 : tensor<8x1xi32, #blocked2> loc(#loc10)
    %27 = tt.broadcast %18 : tensor<1x512xi32, #blocked2> -> tensor<8x512xi32, #blocked2> loc(#loc11)
    %28 = tt.broadcast %17 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc11)
    %29 = tt.broadcast %19 : tensor<1x512xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc11)
    %30 = tt.broadcast %26 : tensor<8x1xi32, #blocked2> -> tensor<8x512xi32, #blocked2> loc(#loc11)
    %31 = arith.addi %27, %30 : tensor<8x512xi32, #blocked2> loc(#loc11)
    %32 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked2> loc(#loc12)
    %33 = tt.addptr %32, %31 : tensor<8x512x!tt.ptr<bf16>, #blocked2>, tensor<8x512xi32, #blocked2> loc(#loc12)
    %34 = tt.broadcast %23 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc13)
    %35 = tt.broadcast %24 : tensor<1x512xi1, #blocked2> -> tensor<8x512xi1, #blocked2> loc(#loc13)
    %36 = tt.load %33, %35, %cst_13 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked2> loc(#loc13)
    %37 = ttg.convert_layout %36 : tensor<8x512xbf16, #blocked2> -> tensor<8x512xbf16, #blocked> loc(#loc14)
    %38 = arith.extf %37 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc14)
    %39 = arith.muli %20, %cst_19 : tensor<8x1xi32, #blocked> loc(#loc15)
    %40 = arith.muli %21, %cst_20 : tensor<8x1xi32, #blocked1> loc(#loc15)
    %41 = tt.broadcast %39 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc16)
    %42 = tt.broadcast %40 : tensor<8x1xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc16)
    %43 = arith.addi %28, %41 : tensor<8x512xi32, #blocked> loc(#loc16)
    %44 = arith.addi %29, %42 : tensor<8x512xi32, #blocked1> loc(#loc16)
    %45 = arith.extsi %43 : tensor<8x512xi32, #blocked> to tensor<8x512xi64, #blocked> loc(#loc17)
    %46 = arith.extsi %44 : tensor<8x512xi32, #blocked1> to tensor<8x512xi64, #blocked1> loc(#loc17)
    %47 = arith.cmpi sgt, %45, %cst_21 : tensor<8x512xi64, #blocked> loc(#loc17)
    %48 = arith.cmpi sgt, %46, %cst_11 : tensor<8x512xi64, #blocked1> loc(#loc17)
    %49 = arith.extui %47 : tensor<8x512xi1, #blocked> to tensor<8x512xi64, #blocked> loc(#loc18)
    %50 = arith.extui %48 : tensor<8x512xi1, #blocked1> to tensor<8x512xi64, #blocked1> loc(#loc18)
    %51 = arith.muli %49, %cst_22 : tensor<8x512xi64, #blocked> loc(#loc19)
    %52 = arith.muli %50, %cst_10 : tensor<8x512xi64, #blocked1> loc(#loc19)
    %53 = math.absi %43 : tensor<8x512xi32, #blocked> loc(#loc20)
    %54 = math.absi %44 : tensor<8x512xi32, #blocked1> loc(#loc20)
    %55 = arith.extsi %53 : tensor<8x512xi32, #blocked> to tensor<8x512xi64, #blocked> loc(#loc21)
    %56 = arith.extsi %54 : tensor<8x512xi32, #blocked1> to tensor<8x512xi64, #blocked1> loc(#loc21)
    %57 = arith.cmpi slt, %55, %cst_23 : tensor<8x512xi64, #blocked> loc(#loc21)
    %58 = arith.cmpi slt, %56, %cst_9 : tensor<8x512xi64, #blocked1> loc(#loc21)
    %59 = arith.sitofp %53 : tensor<8x512xi32, #blocked> to tensor<8x512xf32, #blocked> loc(#loc22)
    %60 = arith.sitofp %54 : tensor<8x512xi32, #blocked1> to tensor<8x512xf32, #blocked1> loc(#loc22)
    %61 = arith.mulf %59, %cst_24 : tensor<8x512xf32, #blocked> loc(#loc23)
    %62 = arith.mulf %60, %cst_8 : tensor<8x512xf32, #blocked1> loc(#loc23)
    %63 = math.log %61 : tensor<8x512xf32, #blocked> loc(#loc24)
    %64 = math.log %62 : tensor<8x512xf32, #blocked1> loc(#loc24)
    %65 = arith.mulf %63, %cst_25 : tensor<8x512xf32, #blocked> loc(#loc25)
    %66 = arith.mulf %64, %cst_7 : tensor<8x512xf32, #blocked1> loc(#loc25)
    %67 = arith.mulf %65, %cst_26 : tensor<8x512xf32, #blocked> loc(#loc26)
    %68 = arith.mulf %66, %cst_6 : tensor<8x512xf32, #blocked1> loc(#loc26)
    %69 = arith.fptosi %67 : tensor<8x512xf32, #blocked> to tensor<8x512xi64, #blocked> loc(#loc27)
    %70 = arith.fptosi %68 : tensor<8x512xf32, #blocked1> to tensor<8x512xi64, #blocked1> loc(#loc27)
    %71 = arith.addi %69, %cst_23 : tensor<8x512xi64, #blocked> loc(#loc28)
    %72 = arith.addi %70, %cst_9 : tensor<8x512xi64, #blocked1> loc(#loc28)
    %73 = arith.cmpi slt, %71, %cst_29 : tensor<8x512xi64, #blocked> loc(#loc92)
    %74 = arith.cmpi slt, %72, %cst_3 : tensor<8x512xi64, #blocked1> loc(#loc92)
    %75 = arith.select %73, %71, %cst_29 : tensor<8x512xi1, #blocked>, tensor<8x512xi64, #blocked> loc(#loc93)
    %76 = arith.select %74, %72, %cst_3 : tensor<8x512xi1, #blocked1>, tensor<8x512xi64, #blocked1> loc(#loc93)
    %77 = arith.select %57, %55, %75 : tensor<8x512xi1, #blocked>, tensor<8x512xi64, #blocked> loc(#loc32)
    %78 = arith.select %58, %56, %76 : tensor<8x512xi1, #blocked1>, tensor<8x512xi64, #blocked1> loc(#loc32)
    %79 = arith.addi %51, %77 : tensor<8x512xi64, #blocked> loc(#loc33)
    %80 = arith.addi %52, %78 : tensor<8x512xi64, #blocked1> loc(#loc33)
    %81 = arith.addi %79, %cst_28 : tensor<8x512xi64, #blocked> loc(#loc34)
    %82 = arith.addi %80, %cst_4 : tensor<8x512xi64, #blocked1> loc(#loc34)
    %83 = arith.cmpi slt, %79, %cst_21 : tensor<8x512xi64, #blocked> loc(#loc35)
    %84 = arith.cmpi slt, %80, %cst_11 : tensor<8x512xi64, #blocked1> loc(#loc35)
    %85 = arith.select %83, %81, %79 : tensor<8x512xi1, #blocked>, tensor<8x512xi64, #blocked> loc(#loc36)
    %86 = arith.select %84, %82, %80 : tensor<8x512xi1, #blocked1>, tensor<8x512xi64, #blocked1> loc(#loc36)
    %87 = arith.cmpi sge, %86, %cst_11 : tensor<8x512xi64, #blocked1> loc(#loc37)
    %88 = arith.cmpi slt, %86, %cst_4 : tensor<8x512xi64, #blocked1> loc(#loc38)
    %89 = arith.andi %87, %88 : tensor<8x512xi1, #blocked1> loc(#loc39)
    %90 = arith.xori %25, %cst_5 : tensor<1x512xi1, #blocked1> loc(#loc40)
    %91 = tt.broadcast %90 : tensor<1x512xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc41)
    %92 = arith.ori %89, %91 : tensor<8x512xi1, #blocked1> loc(#loc41)
    tt.assert %92, "index out of bounds: 0 <= tmp28 < 32" : tensor<8x512xi1, #blocked1> loc(#loc42)
    %93 = arith.muli %85, %cst_27 : tensor<8x512xi64, #blocked> loc(#loc43)
    %94 = arith.extsi %22 : tensor<8x1xi32, #blocked> to tensor<8x1xi64, #blocked> loc(#loc44)
    %95 = tt.broadcast %94 : tensor<8x1xi64, #blocked> -> tensor<8x512xi64, #blocked> loc(#loc44)
    %96 = arith.addi %95, %93 : tensor<8x512xi64, #blocked> loc(#loc44)
    %97 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc45)
    %98 = tt.addptr %97, %96 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi64, #blocked> loc(#loc45)
    %99 = tt.load %98, %34 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc46)
    %100 = arith.extf %99 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc47)
    %101 = arith.addf %38, %100 : tensor<8x512xf32, #blocked> loc(#loc48)
    %102 = arith.cmpf ogt, %cst, %101 : tensor<8x512xf32, #blocked> loc(#loc120)
    %103 = arith.select %102, %cst, %101 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc121)
    %104 = arith.cmpf oeq, %103, %cst : tensor<8x512xf32, #blocked> loc(#loc96)
    %105 = arith.subf %cst, %103 : tensor<8x512xf32, #blocked> loc(#loc97)
    %106 = math.exp %105 : tensor<8x512xf32, #blocked> loc(#loc122)
    %107 = arith.select %104, %cst_1, %106 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc99)
    %108 = arith.subf %101, %103 : tensor<8x512xf32, #blocked> loc(#loc100)
    %109 = math.exp %108 : tensor<8x512xf32, #blocked> loc(#loc123)
    %110 = arith.select %104, %cst_1, %109 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc102)
    %111 = arith.mulf %107, %cst_0 : tensor<8x512xf32, #blocked> loc(#loc103)
    %112 = arith.addf %111, %110 : tensor<8x512xf32, #blocked> loc(#loc104)
    %113 = arith.select %34, %103, %cst : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc63)
    %114 = arith.select %34, %112, %cst_0 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc64)
    %115 = "tt.reduce"(%113) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc106 at #loc67)), %arg6: f32 loc(callsite(#loc106 at #loc67))):
      %140 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc134)
      %141 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc135)
      %142 = arith.ori %140, %141 : i1 loc(#loc136)
      %143 = arith.select %142, %arg5, %arg6 : f32 loc(#loc137)
      tt.reduce.return %143 : f32 loc(#loc124)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc124)
    %116 = tt.expand_dims %115 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc111)
    %117 = arith.cmpf oeq, %116, %cst_2 : tensor<8x1xf32, #blocked> loc(#loc112)
    %118 = tt.broadcast %116 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc113)
    %119 = arith.subf %113, %118 : tensor<8x512xf32, #blocked> loc(#loc113)
    %120 = tt.broadcast %117 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc114)
    %121 = arith.select %120, %cst_0, %119 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc114)
    %122 = math.exp %121 : tensor<8x512xf32, #blocked> loc(#loc130)
    %123 = arith.mulf %114, %122 : tensor<8x512xf32, #blocked> loc(#loc116)
    %124 = "tt.reduce"(%123) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc118 at #loc67)), %arg6: f32 loc(callsite(#loc118 at #loc67))):
      %140 = arith.addf %arg5, %arg6 : f32 loc(#loc138)
      tt.reduce.return %140 : f32 loc(#loc131)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc131)
    %125 = tt.expand_dims %124 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc79)
    %126 = tt.load %33, %35, %cst_13 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked2> loc(#loc80)
    %127 = ttg.convert_layout %126 : tensor<8x512xbf16, #blocked2> -> tensor<8x512xbf16, #blocked> loc(#loc81)
    %128 = arith.extf %127 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc81)
    tt.assert %92, "index out of bounds: 0 <= tmp66 < 32" : tensor<8x512xi1, #blocked1> loc(#loc82)
    %129 = tt.load %98, %34 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc83)
    %130 = arith.extf %129 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc84)
    %131 = arith.addf %128, %130 : tensor<8x512xf32, #blocked> loc(#loc85)
    %132 = arith.subf %131, %118 : tensor<8x512xf32, #blocked> loc(#loc86)
    %133 = math.exp %132 : tensor<8x512xf32, #blocked> loc(#loc87)
    %134 = tt.broadcast %125 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc88)
    %135 = arith.divf %133, %134 : tensor<8x512xf32, #blocked> loc(#loc88)
    %136 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked2> loc(#loc89)
    %137 = tt.addptr %136, %31 : tensor<8x512x!tt.ptr<bf16>, #blocked2>, tensor<8x512xi32, #blocked2> loc(#loc89)
    %138 = arith.truncf %135 : tensor<8x512xf32, #blocked> to tensor<8x512xbf16, #blocked> loc(#loc90)
    %139 = ttg.convert_layout %138 : tensor<8x512xbf16, #blocked> -> tensor<8x512xbf16, #blocked2> loc(#loc90)
    tt.store %137, %139, %35 : tensor<8x512x!tt.ptr<bf16>, #blocked2> loc(#loc90)
    tt.return loc(#loc91)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":26:37)
#loc7 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":29:19)
#loc8 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":30:19)
#loc9 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":35:29)
#loc10 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":39:45)
#loc11 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":39:41)
#loc12 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":39:34)
#loc13 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":39:50)
#loc14 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":39:103)
#loc15 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":40:28)
#loc16 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":40:23)
#loc17 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":42:22)
#loc18 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":43:23)
#loc19 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":45:22)
#loc20 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":47:27)
#loc21 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":49:23)
#loc22 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":50:24)
#loc23 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":52:24)
#loc24 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":53:28)
#loc25 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":55:24)
#loc26 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":57:24)
#loc27 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":58:25)
#loc28 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":59:24)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc30 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":61:46)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc32 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":62:38)
#loc33 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":63:23)
#loc34 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":65:24)
#loc35 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":66:24)
#loc36 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":67:39)
#loc37 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:32)
#loc38 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:50)
#loc39 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:42)
#loc40 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:59)
#loc41 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:57)
#loc42 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":68:69)
#loc43 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":69:43)
#loc44 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":69:40)
#loc45 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":69:35)
#loc46 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":69:51)
#loc47 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":69:93)
#loc48 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":70:23)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc50 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":185:31)
#loc51 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":75:43)
#loc52 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc53 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:19)
#loc54 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:53)
#loc55 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":165:24)
#loc56 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:62)
#loc57 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":188:39)
#loc58 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:53)
#loc59 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:62)
#loc60 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":191:39)
#loc61 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":197:24)
#loc62 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":197:36)
#loc63 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":78:56)
#loc64 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":79:56)
#loc65 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc68 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc69 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc70 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":171:30)
#loc71 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:40)
#loc72 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:68)
#loc73 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":172:58)
#loc74 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc75 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":173:31)
#loc76 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc78 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc79 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":84:18)
#loc80 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":93:51)
#loc81 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":93:105)
#loc82 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":122:69)
#loc83 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":123:51)
#loc84 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":123:93)
#loc85 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":124:24)
#loc86 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":126:24)
#loc87 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":127:28)
#loc88 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":128:25)
#loc89 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":130:29)
#loc90 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":130:52)
#loc91 = loc("/tmp/torchinductor_root/h4/ch4b54psup3fa2cdfp5r7igovjwbsg7b2wjkky2nsos2a2dp2tke.py":87:4)
#loc92 = loc(callsite(#loc29 at #loc30))
#loc93 = loc(callsite(#loc31 at #loc30))
#loc94 = loc(callsite(#loc49 at #loc50))
#loc95 = loc(callsite(#loc52 at #loc50))
#loc96 = loc(callsite(#loc53 at #loc51))
#loc97 = loc(callsite(#loc54 at #loc51))
#loc98 = loc(callsite(#loc55 at #loc56))
#loc99 = loc(callsite(#loc57 at #loc51))
#loc100 = loc(callsite(#loc58 at #loc51))
#loc101 = loc(callsite(#loc55 at #loc59))
#loc102 = loc(callsite(#loc60 at #loc51))
#loc103 = loc(callsite(#loc61 at #loc51))
#loc104 = loc(callsite(#loc62 at #loc51))
#loc105 = loc(callsite(#loc65 at #loc66))
#loc107 = loc(callsite(#loc49 at #loc65))
#loc108 = loc(callsite(#loc68 at #loc65))
#loc109 = loc(callsite(#loc69 at #loc65))
#loc110 = loc(callsite(#loc52 at #loc65))
#loc111 = loc(callsite(#loc70 at #loc67))
#loc112 = loc(callsite(#loc71 at #loc67))
#loc113 = loc(callsite(#loc72 at #loc67))
#loc114 = loc(callsite(#loc73 at #loc67))
#loc115 = loc(callsite(#loc55 at #loc74))
#loc116 = loc(callsite(#loc75 at #loc67))
#loc117 = loc(callsite(#loc76 at #loc77))
#loc119 = loc(callsite(#loc78 at #loc76))
#loc120 = loc(callsite(#loc94 at #loc51))
#loc121 = loc(callsite(#loc95 at #loc51))
#loc122 = loc(callsite(#loc98 at #loc51))
#loc123 = loc(callsite(#loc101 at #loc51))
#loc124 = loc(callsite(#loc105 at #loc67))
#loc126 = loc(callsite(#loc107 at #loc66))
#loc127 = loc(callsite(#loc108 at #loc66))
#loc128 = loc(callsite(#loc109 at #loc66))
#loc129 = loc(callsite(#loc110 at #loc66))
#loc130 = loc(callsite(#loc115 at #loc67))
#loc131 = loc(callsite(#loc117 at #loc67))
#loc133 = loc(callsite(#loc119 at #loc77))
#loc134 = loc(callsite(#loc126 at #loc67))
#loc135 = loc(callsite(#loc127 at #loc67))
#loc136 = loc(callsite(#loc128 at #loc67))
#loc137 = loc(callsite(#loc129 at #loc67))
#loc138 = loc(callsite(#loc133 at #loc67))
