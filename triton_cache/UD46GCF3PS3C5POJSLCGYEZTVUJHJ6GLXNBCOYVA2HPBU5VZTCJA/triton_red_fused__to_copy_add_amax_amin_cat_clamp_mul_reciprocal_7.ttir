#loc = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)
#loc1 = loc(unknown)
#loc53 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:40)
#loc56 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:40)
#loc117 = loc(callsite(#loc1 at #loc53))
#loc123 = loc(callsite(#loc1 at #loc56))
module {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg4: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.270000e+02> : tensor<64x8xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<64x8xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x8xbf16> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c15360_i32 = arith.constant 15360 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<15360> : tensor<64x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.00787401571> : tensor<64x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<64x1xf32> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %cst_8 = arith.constant dense<0.797884583> : tensor<64x8xf32> loc(#loc1)
    %cst_9 = arith.constant dense<4.471500e-02> : tensor<64x8xf32> loc(#loc1)
    %cst_10 = arith.constant dense<5.000000e-01> : tensor<64x8xf32> loc(#loc1)
    %cst_11 = arith.constant dense<-3072> : tensor<1x8xi32> loc(#loc1)
    %cst_12 = arith.constant dense<12288> : tensor<64x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %cst_14 = arith.constant dense<3072> : tensor<64x1xi32> loc(#loc1)
    %cst_15 = arith.constant dense<3072> : tensor<1x8xi64> loc(#loc1)
    %cst_16 = arith.constant dense<15360> : tensor<1x8xi32> loc(#loc1)
    %cst_17 = arith.constant dense<0xFF800000> : tensor<64x8xf32> loc(#loc1)
    %cst_18 = arith.constant dense<0x7F800000> : tensor<64x8xf32> loc(#loc1)
    %cst_19 = arith.constant dense<4112> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_19 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc9)
    %9:2 = scf.for %arg7 = %c0_i32 to %c15360_i32 step %c8_i32 iter_args(%arg8 = %cst_18, %arg9 = %cst_17) -> (tensor<64x8xf32>, tensor<64x8xf32>)  : i32 {
      %20 = tt.splat %arg7 : i32 -> tensor<1x8xi32> loc(#loc11)
      %21 = arith.addi %20, %8 : tensor<1x8xi32> loc(#loc11)
      %22 = arith.cmpi slt, %21, %cst_16 : tensor<1x8xi32> loc(#loc12)
      %23 = arith.extsi %21 : tensor<1x8xi32> to tensor<1x8xi64> loc(#loc13)
      %24 = arith.cmpi slt, %23, %cst_15 : tensor<1x8xi64> loc(#loc13)
      %25 = arith.muli %5, %cst_14 : tensor<64x1xi32> loc(#loc14)
      %26 = tt.broadcast %25 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc15)
      %27 = tt.broadcast %21 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc15)
      %28 = arith.addi %26, %27 : tensor<64x8xi32> loc(#loc15)
      %29 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x8x!tt.ptr<bf16>> loc(#loc16)
      %30 = tt.addptr %29, %28 : tensor<64x8x!tt.ptr<bf16>>, tensor<64x8xi32> loc(#loc16)
      %31 = tt.broadcast %22 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc17)
      %32 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x8xi1> loc(#loc17)
      %33 = arith.andi %31, %32 : tensor<64x8xi1> loc(#loc17)
      %34 = tt.broadcast %24 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc18)
      %35 = arith.andi %33, %34 : tensor<64x8xi1> loc(#loc18)
      %36 = tt.load %30, %35, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<bf16>> loc(#loc19)
      %37 = arith.extf %36 : tensor<64x8xbf16> to tensor<64x8xf32> loc(#loc20)
      %38 = arith.cmpi sge, %23, %cst_15 : tensor<1x8xi64> loc(#loc21)
      %39 = arith.muli %5, %cst_12 : tensor<64x1xi32> loc(#loc22)
      %40 = arith.addi %21, %cst_11 : tensor<1x8xi32> loc(#loc23)
      %41 = tt.broadcast %39 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc24)
      %42 = tt.broadcast %40 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc24)
      %43 = arith.addi %41, %42 : tensor<64x8xi32> loc(#loc24)
      %44 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc25)
      %45 = tt.addptr %44, %43 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc25)
      %46 = tt.broadcast %38 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc26)
      %47 = arith.andi %33, %46 : tensor<64x8xi1> loc(#loc26)
      %48 = tt.load %45, %47, %cst_13 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f32>> loc(#loc27)
      %49 = arith.mulf %48, %cst_10 : tensor<64x8xf32> loc(#loc28)
      %50 = arith.mulf %48, %48 : tensor<64x8xf32> loc(#loc29)
      %51 = arith.mulf %50, %48 : tensor<64x8xf32> loc(#loc30)
      %52 = arith.mulf %51, %cst_9 : tensor<64x8xf32> loc(#loc31)
      %53 = arith.addf %48, %52 : tensor<64x8xf32> loc(#loc32)
      %54 = arith.mulf %53, %cst_8 : tensor<64x8xf32> loc(#loc33)
      %55 = tt.extern_elementwise %54 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<64x8xf32>) -> tensor<64x8xf32> loc(#loc34)
      %56 = arith.addf %55, %cst_7 : tensor<64x8xf32> loc(#loc35)
      %57 = arith.mulf %49, %56 : tensor<64x8xf32> loc(#loc36)
      %58 = arith.select %46, %57, %cst_13 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc37)
      %59 = arith.select %34, %37, %58 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc38)
      %60 = arith.cmpf olt, %arg8, %59 : tensor<64x8xf32> loc(#loc108)
      %61 = arith.cmpf une, %arg8, %arg8 : tensor<64x8xf32> loc(#loc109)
      %62 = arith.ori %60, %61 : tensor<64x8xi1> loc(#loc110)
      %63 = arith.select %62, %arg8, %59 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc111)
      %64 = arith.select %33, %63, %arg8 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc44)
      %65 = arith.cmpf ogt, %arg9, %59 : tensor<64x8xf32> loc(#loc112)
      %66 = arith.cmpf une, %arg9, %arg9 : tensor<64x8xf32> loc(#loc113)
      %67 = arith.ori %65, %66 : tensor<64x8xi1> loc(#loc114)
      %68 = arith.select %67, %arg9, %59 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc115)
      %69 = arith.select %33, %68, %arg9 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc50)
      scf.yield %64, %69 : tensor<64x8xf32>, tensor<64x8xf32> loc(#loc51)
    } loc(#loc10)
    %10 = "tt.reduce"(%9#0) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc53)), %arg8: f32 loc(callsite(#loc1 at #loc53))):
      %20 = arith.cmpf olt, %arg7, %arg8 : f32 loc(#loc152)
      %21 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc153)
      %22 = arith.ori %20, %21 : i1 loc(#loc154)
      %23 = arith.select %22, %arg7, %arg8 : f32 loc(#loc155)
      tt.reduce.return %23 : f32 loc(#loc116)
    }) : (tensor<64x8xf32>) -> tensor<64xf32> loc(#loc116)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc54)
    %12 = "tt.reduce"(%9#1) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc56)), %arg8: f32 loc(callsite(#loc1 at #loc56))):
      %20 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc156)
      %21 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc157)
      %22 = arith.ori %20, %21 : i1 loc(#loc158)
      %23 = arith.select %22, %arg7, %arg8 : f32 loc(#loc159)
      tt.reduce.return %23 : f32 loc(#loc122)
    }) : (tensor<64x8xf32>) -> tensor<64xf32> loc(#loc122)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc57)
    %14 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc58)
    %15 = tt.addptr %14, %5 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc58)
    %16 = arith.truncf %11 : tensor<64x1xf32> to tensor<64x1xbf16> loc(#loc59)
    tt.store %15, %16, %6 : tensor<64x1x!tt.ptr<bf16>> loc(#loc59)
    %17 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc60)
    %18 = tt.addptr %17, %5 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc60)
    %19 = arith.truncf %13 : tensor<64x1xf32> to tensor<64x1xbf16> loc(#loc61)
    tt.store %18, %19, %6 : tensor<64x1x!tt.ptr<bf16>> loc(#loc61)
    scf.for %arg7 = %c0_i32 to %c15360_i32 step %c8_i32  : i32 {
      %20 = tt.splat %arg7 : i32 -> tensor<1x8xi32> loc(#loc63)
      %21 = arith.addi %20, %8 : tensor<1x8xi32> loc(#loc63)
      %22 = arith.cmpi slt, %21, %cst_16 : tensor<1x8xi32> loc(#loc64)
      %23 = arith.extsi %21 : tensor<1x8xi32> to tensor<1x8xi64> loc(#loc65)
      %24 = arith.cmpi slt, %23, %cst_15 : tensor<1x8xi64> loc(#loc65)
      %25 = arith.muli %5, %cst_14 : tensor<64x1xi32> loc(#loc66)
      %26 = tt.broadcast %25 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc67)
      %27 = tt.broadcast %21 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc67)
      %28 = arith.addi %26, %27 : tensor<64x8xi32> loc(#loc67)
      %29 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x8x!tt.ptr<bf16>> loc(#loc68)
      %30 = tt.addptr %29, %28 : tensor<64x8x!tt.ptr<bf16>>, tensor<64x8xi32> loc(#loc68)
      %31 = tt.broadcast %22 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc69)
      %32 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x8xi1> loc(#loc69)
      %33 = arith.andi %31, %32 : tensor<64x8xi1> loc(#loc69)
      %34 = tt.broadcast %24 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc70)
      %35 = arith.andi %33, %34 : tensor<64x8xi1> loc(#loc70)
      %36 = tt.load %30, %35, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<bf16>> loc(#loc71)
      %37 = arith.extf %36 : tensor<64x8xbf16> to tensor<64x8xf32> loc(#loc72)
      %38 = arith.cmpi sge, %23, %cst_15 : tensor<1x8xi64> loc(#loc73)
      %39 = arith.muli %5, %cst_12 : tensor<64x1xi32> loc(#loc74)
      %40 = arith.addi %21, %cst_11 : tensor<1x8xi32> loc(#loc75)
      %41 = tt.broadcast %39 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc76)
      %42 = tt.broadcast %40 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc76)
      %43 = arith.addi %41, %42 : tensor<64x8xi32> loc(#loc76)
      %44 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc77)
      %45 = tt.addptr %44, %43 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc77)
      %46 = tt.broadcast %38 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc78)
      %47 = arith.andi %33, %46 : tensor<64x8xi1> loc(#loc78)
      %48 = tt.load %45, %47, %cst_13 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f32>> loc(#loc79)
      %49 = arith.mulf %48, %cst_10 : tensor<64x8xf32> loc(#loc80)
      %50 = arith.mulf %48, %48 : tensor<64x8xf32> loc(#loc81)
      %51 = arith.mulf %50, %48 : tensor<64x8xf32> loc(#loc82)
      %52 = arith.mulf %51, %cst_9 : tensor<64x8xf32> loc(#loc83)
      %53 = arith.addf %48, %52 : tensor<64x8xf32> loc(#loc84)
      %54 = arith.mulf %53, %cst_8 : tensor<64x8xf32> loc(#loc85)
      %55 = tt.extern_elementwise %54 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<64x8xf32>) -> tensor<64x8xf32> loc(#loc86)
      %56 = arith.addf %55, %cst_7 : tensor<64x8xf32> loc(#loc87)
      %57 = arith.mulf %49, %56 : tensor<64x8xf32> loc(#loc88)
      %58 = arith.select %46, %57, %cst_13 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc89)
      %59 = arith.select %34, %37, %58 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc90)
      %60 = arith.cmpf olt, %11, %cst_6 : tensor<64x1xf32> loc(#loc128)
      %61 = arith.cmpf une, %11, %11 : tensor<64x1xf32> loc(#loc129)
      %62 = arith.ori %60, %61 : tensor<64x1xi1> loc(#loc130)
      %63 = arith.select %62, %11, %cst_6 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc131)
      %64 = arith.subf %cst_6, %63 : tensor<64x1xf32> loc(#loc92)
      %65 = arith.cmpf ogt, %13, %cst_6 : tensor<64x1xf32> loc(#loc132)
      %66 = arith.cmpf une, %13, %13 : tensor<64x1xf32> loc(#loc133)
      %67 = arith.ori %65, %66 : tensor<64x1xi1> loc(#loc134)
      %68 = arith.select %67, %13, %cst_6 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc135)
      %69 = arith.cmpf ogt, %64, %68 : tensor<64x1xf32> loc(#loc136)
      %70 = arith.cmpf une, %64, %64 : tensor<64x1xf32> loc(#loc137)
      %71 = arith.ori %69, %70 : tensor<64x1xi1> loc(#loc138)
      %72 = arith.select %71, %64, %68 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc139)
      %73 = arith.mulf %72, %cst_5 : tensor<64x1xf32> loc(#loc95)
      %74 = arith.cmpf ogt, %73, %cst_1 : tensor<64x1xf32> loc(#loc140)
      %75 = arith.cmpf une, %73, %73 : tensor<64x1xf32> loc(#loc141)
      %76 = arith.ori %74, %75 : tensor<64x1xi1> loc(#loc142)
      %77 = arith.select %76, %73, %cst_1 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc143)
      %78 = arith.divf %cst_2, %77 : tensor<64x1xf32> loc(#loc97)
      %79 = tt.broadcast %78 : tensor<64x1xf32> -> tensor<64x8xf32> loc(#loc98)
      %80 = arith.mulf %59, %79 : tensor<64x8xf32> loc(#loc98)
      %81 = tt.extern_elementwise %80 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<64x8xf32>) -> tensor<64x8xf32> loc(#loc99)
      %82 = arith.cmpf ogt, %81, %cst_0 : tensor<64x8xf32> loc(#loc144)
      %83 = arith.cmpf une, %81, %81 : tensor<64x8xf32> loc(#loc145)
      %84 = arith.ori %82, %83 : tensor<64x8xi1> loc(#loc146)
      %85 = arith.select %84, %81, %cst_0 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc147)
      %86 = arith.cmpf olt, %85, %cst : tensor<64x8xf32> loc(#loc148)
      %87 = arith.cmpf une, %85, %85 : tensor<64x8xf32> loc(#loc149)
      %88 = arith.ori %86, %87 : tensor<64x8xi1> loc(#loc150)
      %89 = arith.select %88, %85, %cst : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc151)
      %90 = arith.fptosi %89 : tensor<64x8xf32> to tensor<64x8xi8> loc(#loc102)
      %91 = arith.muli %5, %cst_4 : tensor<64x1xi32> loc(#loc103)
      %92 = tt.broadcast %91 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc104)
      %93 = arith.addi %27, %92 : tensor<64x8xi32> loc(#loc104)
      %94 = tt.splat %arg4 : !tt.ptr<i8> -> tensor<64x8x!tt.ptr<i8>> loc(#loc105)
      %95 = tt.addptr %94, %93 : tensor<64x8x!tt.ptr<i8>>, tensor<64x8xi32> loc(#loc105)
      tt.store %95, %90, %33 : tensor<64x8x!tt.ptr<i8>> loc(#loc106)
    } loc(#loc62)
    tt.return loc(#loc107)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:36)
#loc5 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:44)
#loc6 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:23)
#loc7 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":25:21)
#loc8 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:27)
#loc9 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:37)
#loc10 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":31:40)
#loc11 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":32:31)
#loc12 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":33:29)
#loc13 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":41:22)
#loc14 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:39)
#loc15 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:45)
#loc16 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:34)
#loc17 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:63)
#loc18 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:71)
#loc19 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:53)
#loc20 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:121)
#loc21 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":43:23)
#loc22 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:40)
#loc23 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:56)
#loc24 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:46)
#loc25 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:34)
#loc26 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:82)
#loc27 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:64)
#loc28 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":48:23)
#loc29 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":49:23)
#loc30 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":50:24)
#loc31 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":52:24)
#loc32 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":53:23)
#loc33 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":55:24)
#loc34 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":56:31)
#loc35 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":58:24)
#loc36 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":59:24)
#loc37 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":62:38)
#loc38 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":63:37)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc40 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":65:47)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc42 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc44 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":66:50)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc46 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":67:47)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc48 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc50 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:50)
#loc51 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:8)
#loc52 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc54 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:43)
#loc55 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc57 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:43)
#loc58 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:25)
#loc59 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:37)
#loc60 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:25)
#loc61 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:37)
#loc62 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:40)
#loc63 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":74:31)
#loc64 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":75:29)
#loc65 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":83:24)
#loc66 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:40)
#loc67 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:46)
#loc68 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:35)
#loc69 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:64)
#loc70 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:72)
#loc71 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:54)
#loc72 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:123)
#loc73 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":85:25)
#loc74 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:41)
#loc75 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:57)
#loc76 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:47)
#loc77 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:35)
#loc78 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:83)
#loc79 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:65)
#loc80 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":90:24)
#loc81 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":91:24)
#loc82 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":92:24)
#loc83 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":94:24)
#loc84 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":95:24)
#loc85 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":97:24)
#loc86 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":98:31)
#loc87 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":100:24)
#loc88 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":101:24)
#loc89 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":104:39)
#loc90 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":105:39)
#loc91 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":107:46)
#loc92 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":108:17)
#loc93 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":109:46)
#loc94 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":110:46)
#loc95 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":112:24)
#loc96 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":115:46)
#loc97 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":118:25)
#loc98 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":121:24)
#loc99 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":122:36)
#loc100 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":125:46)
#loc101 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":127:46)
#loc102 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":129:25)
#loc103 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:42)
#loc104 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:36)
#loc105 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:29)
#loc106 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:54)
#loc107 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:4)
#loc108 = loc(callsite(#loc39 at #loc40))
#loc109 = loc(callsite(#loc41 at #loc40))
#loc110 = loc(callsite(#loc42 at #loc40))
#loc111 = loc(callsite(#loc43 at #loc40))
#loc112 = loc(callsite(#loc45 at #loc46))
#loc113 = loc(callsite(#loc47 at #loc46))
#loc114 = loc(callsite(#loc48 at #loc46))
#loc115 = loc(callsite(#loc49 at #loc46))
#loc116 = loc(callsite(#loc52 at #loc53))
#loc118 = loc(callsite(#loc39 at #loc52))
#loc119 = loc(callsite(#loc41 at #loc52))
#loc120 = loc(callsite(#loc42 at #loc52))
#loc121 = loc(callsite(#loc43 at #loc52))
#loc122 = loc(callsite(#loc55 at #loc56))
#loc124 = loc(callsite(#loc45 at #loc55))
#loc125 = loc(callsite(#loc47 at #loc55))
#loc126 = loc(callsite(#loc48 at #loc55))
#loc127 = loc(callsite(#loc49 at #loc55))
#loc128 = loc(callsite(#loc39 at #loc91))
#loc129 = loc(callsite(#loc41 at #loc91))
#loc130 = loc(callsite(#loc42 at #loc91))
#loc131 = loc(callsite(#loc43 at #loc91))
#loc132 = loc(callsite(#loc45 at #loc93))
#loc133 = loc(callsite(#loc47 at #loc93))
#loc134 = loc(callsite(#loc48 at #loc93))
#loc135 = loc(callsite(#loc49 at #loc93))
#loc136 = loc(callsite(#loc45 at #loc94))
#loc137 = loc(callsite(#loc47 at #loc94))
#loc138 = loc(callsite(#loc48 at #loc94))
#loc139 = loc(callsite(#loc49 at #loc94))
#loc140 = loc(callsite(#loc45 at #loc96))
#loc141 = loc(callsite(#loc47 at #loc96))
#loc142 = loc(callsite(#loc48 at #loc96))
#loc143 = loc(callsite(#loc49 at #loc96))
#loc144 = loc(callsite(#loc45 at #loc100))
#loc145 = loc(callsite(#loc47 at #loc100))
#loc146 = loc(callsite(#loc48 at #loc100))
#loc147 = loc(callsite(#loc49 at #loc100))
#loc148 = loc(callsite(#loc39 at #loc101))
#loc149 = loc(callsite(#loc41 at #loc101))
#loc150 = loc(callsite(#loc42 at #loc101))
#loc151 = loc(callsite(#loc43 at #loc101))
#loc152 = loc(callsite(#loc118 at #loc53))
#loc153 = loc(callsite(#loc119 at #loc53))
#loc154 = loc(callsite(#loc120 at #loc53))
#loc155 = loc(callsite(#loc121 at #loc53))
#loc156 = loc(callsite(#loc124 at #loc56))
#loc157 = loc(callsite(#loc125 at #loc56))
#loc158 = loc(callsite(#loc126 at #loc56))
#loc159 = loc(callsite(#loc127 at #loc56))
