#loc = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)
#loc1 = loc(unknown)
#loc37 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:38)
#loc40 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:38)
#loc86 = loc(callsite(#loc1 at #loc37))
#loc92 = loc(callsite(#loc1 at #loc40))
module {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_reciprocal_9(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.270000e+02> : tensor<64x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<64x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x64xbf16> loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<3072> : tensor<64x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.00787401571> : tensor<64x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<64x1xf32> loc(#loc1)
    %cst_7 = arith.constant dense<526336> : tensor<1x64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<128> : tensor<1x64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<65536> : tensor<64x1xi32> loc(#loc1)
    %cst_10 = arith.constant dense<128> : tensor<64x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<3072> : tensor<1x64xi32> loc(#loc1)
    %cst_12 = arith.constant dense<0xFF800000> : tensor<64x64xf32> loc(#loc1)
    %cst_13 = arith.constant dense<0x7F800000> : tensor<64x64xf32> loc(#loc1)
    %cst_14 = arith.constant dense<3600> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_14 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8:2 = scf.for %arg6 = %c0_i32 to %c3072_i32 step %c64_i32 iter_args(%arg7 = %cst_13, %arg8 = %cst_12) -> (tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %19 = tt.splat %arg6 : i32 -> tensor<1x64xi32> loc(#loc10)
      %20 = arith.addi %19, %7 : tensor<1x64xi32> loc(#loc10)
      %21 = arith.cmpi slt, %20, %cst_11 : tensor<1x64xi32> loc(#loc11)
      %22 = arith.muli %5, %cst_10 : tensor<64x1xi32> loc(#loc12)
      %23 = arith.addi %22, %cst_9 : tensor<64x1xi32> loc(#loc13)
      %24 = arith.divsi %20, %cst_8 : tensor<1x64xi32> loc(#loc14)
      %25 = arith.muli %24, %cst_7 : tensor<1x64xi32> loc(#loc15)
      %26 = tt.broadcast %23 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc16)
      %27 = tt.broadcast %25 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc16)
      %28 = arith.addi %26, %27 : tensor<64x64xi32> loc(#loc16)
      %29 = arith.remsi %20, %cst_8 : tensor<1x64xi32> loc(#loc17)
      %30 = tt.broadcast %29 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc18)
      %31 = arith.addi %28, %30 : tensor<64x64xi32> loc(#loc18)
      %32 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc19)
      %33 = tt.addptr %32, %31 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc19)
      %34 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc20)
      %35 = tt.broadcast %21 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc20)
      %36 = arith.andi %34, %35 : tensor<64x64xi1> loc(#loc20)
      %37 = tt.load %33, %36, %cst_3 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc21)
      %38 = arith.extf %37 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc22)
      %39 = arith.cmpf olt, %arg7, %38 : tensor<64x64xf32> loc(#loc77)
      %40 = arith.cmpf une, %arg7, %arg7 : tensor<64x64xf32> loc(#loc78)
      %41 = arith.ori %39, %40 : tensor<64x64xi1> loc(#loc79)
      %42 = arith.select %41, %arg7, %38 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc80)
      %43 = arith.select %36, %42, %arg7 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc28)
      %44 = arith.cmpf ogt, %arg8, %38 : tensor<64x64xf32> loc(#loc81)
      %45 = arith.cmpf une, %arg8, %arg8 : tensor<64x64xf32> loc(#loc82)
      %46 = arith.ori %44, %45 : tensor<64x64xi1> loc(#loc83)
      %47 = arith.select %46, %arg8, %38 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc84)
      %48 = arith.select %36, %47, %arg8 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc34)
      scf.yield %43, %48 : tensor<64x64xf32>, tensor<64x64xf32> loc(#loc35)
    } loc(#loc9)
    %9 = "tt.reduce"(%8#0) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc37)), %arg7: f32 loc(callsite(#loc1 at #loc37))):
      %19 = arith.cmpf olt, %arg6, %arg7 : f32 loc(#loc121)
      %20 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc122)
      %21 = arith.ori %19, %20 : i1 loc(#loc123)
      %22 = arith.select %21, %arg6, %arg7 : f32 loc(#loc124)
      tt.reduce.return %22 : f32 loc(#loc85)
    }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc85)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc38)
    %11 = "tt.reduce"(%8#1) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc40)), %arg7: f32 loc(callsite(#loc1 at #loc40))):
      %19 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc125)
      %20 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc126)
      %21 = arith.ori %19, %20 : i1 loc(#loc127)
      %22 = arith.select %21, %arg6, %arg7 : f32 loc(#loc128)
      tt.reduce.return %22 : f32 loc(#loc91)
    }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc91)
    %12 = tt.expand_dims %11 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc41)
    %13 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc42)
    %14 = tt.addptr %13, %5 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc42)
    %15 = arith.truncf %10 : tensor<64x1xf32> to tensor<64x1xbf16> loc(#loc43)
    tt.store %14, %15, %6 : tensor<64x1x!tt.ptr<bf16>> loc(#loc43)
    %16 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc44)
    %17 = tt.addptr %16, %5 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc44)
    %18 = arith.truncf %12 : tensor<64x1xf32> to tensor<64x1xbf16> loc(#loc45)
    tt.store %17, %18, %6 : tensor<64x1x!tt.ptr<bf16>> loc(#loc45)
    scf.for %arg6 = %c0_i32 to %c3072_i32 step %c64_i32  : i32 {
      %19 = tt.splat %arg6 : i32 -> tensor<1x64xi32> loc(#loc47)
      %20 = arith.addi %19, %7 : tensor<1x64xi32> loc(#loc47)
      %21 = arith.cmpi slt, %20, %cst_11 : tensor<1x64xi32> loc(#loc48)
      %22 = arith.muli %5, %cst_10 : tensor<64x1xi32> loc(#loc49)
      %23 = arith.addi %22, %cst_9 : tensor<64x1xi32> loc(#loc50)
      %24 = arith.divsi %20, %cst_8 : tensor<1x64xi32> loc(#loc51)
      %25 = arith.muli %24, %cst_7 : tensor<1x64xi32> loc(#loc52)
      %26 = tt.broadcast %23 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc53)
      %27 = tt.broadcast %25 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc53)
      %28 = arith.addi %26, %27 : tensor<64x64xi32> loc(#loc53)
      %29 = arith.remsi %20, %cst_8 : tensor<1x64xi32> loc(#loc54)
      %30 = tt.broadcast %29 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc55)
      %31 = arith.addi %28, %30 : tensor<64x64xi32> loc(#loc55)
      %32 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc56)
      %33 = tt.addptr %32, %31 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc56)
      %34 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc57)
      %35 = tt.broadcast %21 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc57)
      %36 = arith.andi %34, %35 : tensor<64x64xi1> loc(#loc57)
      %37 = tt.load %33, %36, %cst_3 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc58)
      %38 = arith.extf %37 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc59)
      %39 = arith.cmpf olt, %10, %cst_6 : tensor<64x1xf32> loc(#loc97)
      %40 = arith.cmpf une, %10, %10 : tensor<64x1xf32> loc(#loc98)
      %41 = arith.ori %39, %40 : tensor<64x1xi1> loc(#loc99)
      %42 = arith.select %41, %10, %cst_6 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc100)
      %43 = arith.subf %cst_6, %42 : tensor<64x1xf32> loc(#loc61)
      %44 = arith.cmpf ogt, %12, %cst_6 : tensor<64x1xf32> loc(#loc101)
      %45 = arith.cmpf une, %12, %12 : tensor<64x1xf32> loc(#loc102)
      %46 = arith.ori %44, %45 : tensor<64x1xi1> loc(#loc103)
      %47 = arith.select %46, %12, %cst_6 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc104)
      %48 = arith.cmpf ogt, %43, %47 : tensor<64x1xf32> loc(#loc105)
      %49 = arith.cmpf une, %43, %43 : tensor<64x1xf32> loc(#loc106)
      %50 = arith.ori %48, %49 : tensor<64x1xi1> loc(#loc107)
      %51 = arith.select %50, %43, %47 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc108)
      %52 = arith.mulf %51, %cst_5 : tensor<64x1xf32> loc(#loc64)
      %53 = arith.cmpf ogt, %52, %cst_1 : tensor<64x1xf32> loc(#loc109)
      %54 = arith.cmpf une, %52, %52 : tensor<64x1xf32> loc(#loc110)
      %55 = arith.ori %53, %54 : tensor<64x1xi1> loc(#loc111)
      %56 = arith.select %55, %52, %cst_1 : tensor<64x1xi1>, tensor<64x1xf32> loc(#loc112)
      %57 = arith.divf %cst_2, %56 : tensor<64x1xf32> loc(#loc66)
      %58 = tt.broadcast %57 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc67)
      %59 = arith.mulf %38, %58 : tensor<64x64xf32> loc(#loc67)
      %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc68)
      %61 = arith.cmpf ogt, %60, %cst_0 : tensor<64x64xf32> loc(#loc113)
      %62 = arith.cmpf une, %60, %60 : tensor<64x64xf32> loc(#loc114)
      %63 = arith.ori %61, %62 : tensor<64x64xi1> loc(#loc115)
      %64 = arith.select %63, %60, %cst_0 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc116)
      %65 = arith.cmpf olt, %64, %cst : tensor<64x64xf32> loc(#loc117)
      %66 = arith.cmpf une, %64, %64 : tensor<64x64xf32> loc(#loc118)
      %67 = arith.ori %65, %66 : tensor<64x64xi1> loc(#loc119)
      %68 = arith.select %67, %64, %cst : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc120)
      %69 = arith.fptosi %68 : tensor<64x64xf32> to tensor<64x64xi8> loc(#loc71)
      %70 = arith.muli %5, %cst_4 : tensor<64x1xi32> loc(#loc72)
      %71 = tt.broadcast %20 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc73)
      %72 = tt.broadcast %70 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc73)
      %73 = arith.addi %71, %72 : tensor<64x64xi32> loc(#loc73)
      %74 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<64x64x!tt.ptr<i8>> loc(#loc74)
      %75 = tt.addptr %74, %73 : tensor<64x64x!tt.ptr<i8>>, tensor<64x64xi32> loc(#loc74)
      tt.store %75, %69, %36 : tensor<64x64x!tt.ptr<i8>> loc(#loc75)
    } loc(#loc46)
    tt.return loc(#loc76)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":24:36)
#loc5 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":24:44)
#loc6 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":24:23)
#loc7 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":25:21)
#loc8 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":26:37)
#loc9 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":31:40)
#loc10 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":32:31)
#loc11 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":33:29)
#loc12 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:46)
#loc13 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:42)
#loc14 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:67)
#loc15 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:59)
#loc16 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:51)
#loc17 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:83)
#loc18 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:76)
#loc19 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:34)
#loc20 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:99)
#loc21 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:91)
#loc22 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":37:152)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc24 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":39:45)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc28 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":40:48)
#loc29 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc30 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":41:45)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc32 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc33 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc34 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:48)
#loc35 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":42:8)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc38 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":43:41)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc41 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":44:41)
#loc42 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:25)
#loc43 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":45:36)
#loc44 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:25)
#loc45 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":46:36)
#loc46 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:40)
#loc47 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":48:31)
#loc48 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":49:29)
#loc49 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:46)
#loc50 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:42)
#loc51 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:67)
#loc52 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:59)
#loc53 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:51)
#loc54 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:83)
#loc55 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:76)
#loc56 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:34)
#loc57 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:99)
#loc58 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:91)
#loc59 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":53:153)
#loc60 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":55:44)
#loc61 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":56:16)
#loc62 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":57:45)
#loc63 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":58:45)
#loc64 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":60:24)
#loc65 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":63:46)
#loc66 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":66:25)
#loc67 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":69:23)
#loc68 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":70:36)
#loc69 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":73:46)
#loc70 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":75:46)
#loc71 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":77:25)
#loc72 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:41)
#loc73 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:36)
#loc74 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:29)
#loc75 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":78:53)
#loc76 = loc("/tmp/torchinductor_root/iq/ciqx4umnpxfbcu2l6rryhc34knavpax5uagm3mqzm7aatf72hatl.py":47:4)
#loc77 = loc(callsite(#loc23 at #loc24))
#loc78 = loc(callsite(#loc25 at #loc24))
#loc79 = loc(callsite(#loc26 at #loc24))
#loc80 = loc(callsite(#loc27 at #loc24))
#loc81 = loc(callsite(#loc29 at #loc30))
#loc82 = loc(callsite(#loc31 at #loc30))
#loc83 = loc(callsite(#loc32 at #loc30))
#loc84 = loc(callsite(#loc33 at #loc30))
#loc85 = loc(callsite(#loc36 at #loc37))
#loc87 = loc(callsite(#loc23 at #loc36))
#loc88 = loc(callsite(#loc25 at #loc36))
#loc89 = loc(callsite(#loc26 at #loc36))
#loc90 = loc(callsite(#loc27 at #loc36))
#loc91 = loc(callsite(#loc39 at #loc40))
#loc93 = loc(callsite(#loc29 at #loc39))
#loc94 = loc(callsite(#loc31 at #loc39))
#loc95 = loc(callsite(#loc32 at #loc39))
#loc96 = loc(callsite(#loc33 at #loc39))
#loc97 = loc(callsite(#loc23 at #loc60))
#loc98 = loc(callsite(#loc25 at #loc60))
#loc99 = loc(callsite(#loc26 at #loc60))
#loc100 = loc(callsite(#loc27 at #loc60))
#loc101 = loc(callsite(#loc29 at #loc62))
#loc102 = loc(callsite(#loc31 at #loc62))
#loc103 = loc(callsite(#loc32 at #loc62))
#loc104 = loc(callsite(#loc33 at #loc62))
#loc105 = loc(callsite(#loc29 at #loc63))
#loc106 = loc(callsite(#loc31 at #loc63))
#loc107 = loc(callsite(#loc32 at #loc63))
#loc108 = loc(callsite(#loc33 at #loc63))
#loc109 = loc(callsite(#loc29 at #loc65))
#loc110 = loc(callsite(#loc31 at #loc65))
#loc111 = loc(callsite(#loc32 at #loc65))
#loc112 = loc(callsite(#loc33 at #loc65))
#loc113 = loc(callsite(#loc29 at #loc69))
#loc114 = loc(callsite(#loc31 at #loc69))
#loc115 = loc(callsite(#loc32 at #loc69))
#loc116 = loc(callsite(#loc33 at #loc69))
#loc117 = loc(callsite(#loc23 at #loc70))
#loc118 = loc(callsite(#loc25 at #loc70))
#loc119 = loc(callsite(#loc26 at #loc70))
#loc120 = loc(callsite(#loc27 at #loc70))
#loc121 = loc(callsite(#loc87 at #loc37))
#loc122 = loc(callsite(#loc88 at #loc37))
#loc123 = loc(callsite(#loc89 at #loc37))
#loc124 = loc(callsite(#loc90 at #loc37))
#loc125 = loc(callsite(#loc93 at #loc40))
#loc126 = loc(callsite(#loc94 at #loc40))
#loc127 = loc(callsite(#loc95 at #loc40))
#loc128 = loc(callsite(#loc96 at #loc40))
