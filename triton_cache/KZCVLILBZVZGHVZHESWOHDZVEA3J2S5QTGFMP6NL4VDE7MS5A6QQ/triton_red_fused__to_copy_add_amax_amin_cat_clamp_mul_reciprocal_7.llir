; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = icmp slt i32 %9, 4112, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = and i32 %11, 31, !dbg !11
  %13 = shl i32 %11, 4, !dbg !11
  %14 = and i32 %13, 4080, !dbg !11
  %15 = or disjoint i32 %14, 4, !dbg !11
  %16 = or disjoint i32 %14, 8, !dbg !11
  %17 = or disjoint i32 %14, 12, !dbg !11
  %18 = mul i32 %9, 3072, !dbg !12
  %19 = mul i32 %9, 12288, !dbg !13
  %20 = add i32 %19, -3072
  %21 = add i32 %20, %15
  %22 = add i32 %20, %17
  %23 = zext nneg i32 %14 to i64, !dbg !14
  br label %24, !dbg !14

24:                                               ; preds = %8, %__nv_tanhf.exit591
  %indvars.iv = phi i64 [ 0, %8 ], [ %indvars.iv.next, %__nv_tanhf.exit591 ]
  %25 = phi <16 x float> [ splat (float 0xFFF0000000000000), %8 ], [ %794, %__nv_tanhf.exit591 ]
  %26 = phi <16 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %790, %__nv_tanhf.exit591 ]
  %27 = or disjoint i64 %indvars.iv, %23, !dbg !15
  %28 = icmp samesign ult i64 %27, 15360, !dbg !16
  %29 = icmp samesign ult i64 %27, 3072, !dbg !17
  %30 = trunc nuw nsw i64 %27 to i32, !dbg !18
  %31 = add i32 %18, %30, !dbg !18
  %32 = trunc i64 %indvars.iv to i32, !dbg !18
  %33 = or disjoint i32 %16, %32, !dbg !18
  %34 = add i32 %33, %18, !dbg !18
  %35 = sext i32 %31 to i64, !dbg !19
  %36 = getelementptr bfloat, ptr addrspace(1) %0, i64 %35, !dbg !19
  %37 = sext i32 %34 to i64, !dbg !19
  %38 = getelementptr bfloat, ptr addrspace(1) %0, i64 %37, !dbg !19
  %39 = and i1 %10, %28, !dbg !20
  %40 = and i1 %10, %29, !dbg !21
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %36, i1 %40) #5, !dbg !22
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !22
  %43 = bitcast i32 %42 to <2 x bfloat>, !dbg !22
  %44 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !22
  %45 = bitcast i32 %44 to <2 x bfloat>, !dbg !22
  %46 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !22
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !22
  %48 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !22
  %49 = bitcast i32 %48 to <2 x bfloat>, !dbg !22
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %38, i1 %40) #5, !dbg !22
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !22
  %52 = bitcast i32 %51 to <2 x bfloat>, !dbg !22
  %53 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !22
  %54 = bitcast i32 %53 to <2 x bfloat>, !dbg !22
  %55 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !22
  %56 = bitcast i32 %55 to <2 x bfloat>, !dbg !22
  %57 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !22
  %58 = bitcast i32 %57 to <2 x bfloat>, !dbg !22
  %59 = shufflevector <2 x bfloat> %58, <2 x bfloat> %56, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %60 = shufflevector <2 x bfloat> %54, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %61 = shufflevector <16 x bfloat> %59, <16 x bfloat> %60, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %62 = shufflevector <2 x bfloat> %54, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %63 = shufflevector <16 x bfloat> %61, <16 x bfloat> %62, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %64 = shufflevector <2 x bfloat> %52, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %65 = shufflevector <16 x bfloat> %63, <16 x bfloat> %64, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %66 = shufflevector <2 x bfloat> %52, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %67 = shufflevector <16 x bfloat> %65, <16 x bfloat> %66, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %68 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %69 = shufflevector <16 x bfloat> %67, <16 x bfloat> %68, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %70 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %71 = shufflevector <16 x bfloat> %69, <16 x bfloat> %70, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %72 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %73 = shufflevector <16 x bfloat> %71, <16 x bfloat> %72, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %74 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %75 = shufflevector <16 x bfloat> %73, <16 x bfloat> %74, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %76 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %77 = shufflevector <16 x bfloat> %75, <16 x bfloat> %76, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 poison, i32 poison>, !dbg !23
  %78 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %79 = shufflevector <16 x bfloat> %77, <16 x bfloat> %78, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !23
  %80 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %81 = shufflevector <16 x bfloat> %79, <16 x bfloat> %80, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 17, i32 poison>, !dbg !23
  %82 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !23
  %83 = shufflevector <16 x bfloat> %81, <16 x bfloat> %82, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !23
  %84 = fpext <16 x bfloat> %83 to <16 x float>, !dbg !23
  %85 = icmp samesign ugt i64 %27, 3071, !dbg !24
  %86 = add i32 %20, %30, !dbg !25
  %87 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !25
  %88 = add i32 %21, %87, !dbg !25
  %89 = add i32 %20, %33, !dbg !25
  %90 = add i32 %22, %87, !dbg !25
  %91 = sext i32 %86 to i64, !dbg !26
  %92 = getelementptr float, ptr addrspace(1) %1, i64 %91, !dbg !26
  %93 = sext i32 %88 to i64, !dbg !26
  %94 = getelementptr float, ptr addrspace(1) %1, i64 %93, !dbg !26
  %95 = sext i32 %89 to i64, !dbg !26
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %95, !dbg !26
  %97 = sext i32 %90 to i64, !dbg !26
  %98 = getelementptr float, ptr addrspace(1) %1, i64 %97, !dbg !26
  %99 = and i1 %85, %39, !dbg !27
  %100 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %92, i1 %99) #5, !dbg !28
  %101 = extractvalue { i32, i32, i32, i32 } %100, 0, !dbg !28
  %102 = extractvalue { i32, i32, i32, i32 } %100, 1, !dbg !28
  %103 = extractvalue { i32, i32, i32, i32 } %100, 2, !dbg !28
  %104 = extractvalue { i32, i32, i32, i32 } %100, 3, !dbg !28
  %105 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %94, i1 %99) #5, !dbg !28
  %106 = extractvalue { i32, i32, i32, i32 } %105, 0, !dbg !28
  %107 = extractvalue { i32, i32, i32, i32 } %105, 1, !dbg !28
  %108 = extractvalue { i32, i32, i32, i32 } %105, 2, !dbg !28
  %109 = extractvalue { i32, i32, i32, i32 } %105, 3, !dbg !28
  %110 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %96, i1 %99) #5, !dbg !28
  %111 = extractvalue { i32, i32, i32, i32 } %110, 0, !dbg !28
  %112 = extractvalue { i32, i32, i32, i32 } %110, 1, !dbg !28
  %113 = extractvalue { i32, i32, i32, i32 } %110, 2, !dbg !28
  %114 = extractvalue { i32, i32, i32, i32 } %110, 3, !dbg !28
  %115 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %98, i1 %99) #5, !dbg !28
  %116 = extractvalue { i32, i32, i32, i32 } %115, 0, !dbg !28
  %117 = extractvalue { i32, i32, i32, i32 } %115, 1, !dbg !28
  %118 = extractvalue { i32, i32, i32, i32 } %115, 2, !dbg !28
  %119 = extractvalue { i32, i32, i32, i32 } %115, 3, !dbg !28
  %120 = insertelement <16 x i32> poison, i32 %119, i64 0, !dbg !28
  %121 = insertelement <16 x i32> %120, i32 %118, i64 1, !dbg !28
  %122 = insertelement <16 x i32> %121, i32 %117, i64 2, !dbg !28
  %123 = insertelement <16 x i32> %122, i32 %116, i64 3, !dbg !28
  %124 = insertelement <16 x i32> %123, i32 %114, i64 4, !dbg !28
  %125 = insertelement <16 x i32> %124, i32 %113, i64 5, !dbg !28
  %126 = insertelement <16 x i32> %125, i32 %112, i64 6, !dbg !28
  %127 = insertelement <16 x i32> %126, i32 %111, i64 7, !dbg !28
  %128 = insertelement <16 x i32> %127, i32 %109, i64 8, !dbg !28
  %129 = insertelement <16 x i32> %128, i32 %108, i64 9, !dbg !28
  %130 = insertelement <16 x i32> %129, i32 %107, i64 10, !dbg !28
  %131 = insertelement <16 x i32> %130, i32 %106, i64 11, !dbg !28
  %132 = insertelement <16 x i32> %131, i32 %104, i64 12, !dbg !28
  %133 = insertelement <16 x i32> %132, i32 %103, i64 13, !dbg !28
  %134 = insertelement <16 x i32> %133, i32 %102, i64 14, !dbg !28
  %135 = insertelement <16 x i32> %134, i32 %101, i64 15, !dbg !28
  %136 = bitcast <16 x i32> %135 to <16 x float>, !dbg !28
  %137 = fmul <16 x float> %136, splat (float 5.000000e-01), !dbg !29
  %138 = bitcast i32 %101 to float, !dbg !30
  %139 = fmul float %138, %138, !dbg !30
  %140 = bitcast i32 %102 to float, !dbg !30
  %141 = fmul float %140, %140, !dbg !30
  %142 = bitcast i32 %103 to float, !dbg !30
  %143 = fmul float %142, %142, !dbg !30
  %144 = bitcast i32 %104 to float, !dbg !30
  %145 = fmul float %144, %144, !dbg !30
  %146 = bitcast i32 %106 to float, !dbg !30
  %147 = fmul float %146, %146, !dbg !30
  %148 = bitcast i32 %107 to float, !dbg !30
  %149 = fmul float %148, %148, !dbg !30
  %150 = bitcast i32 %108 to float, !dbg !30
  %151 = fmul float %150, %150, !dbg !30
  %152 = bitcast i32 %109 to float, !dbg !30
  %153 = fmul float %152, %152, !dbg !30
  %154 = bitcast i32 %111 to float, !dbg !30
  %155 = fmul float %154, %154, !dbg !30
  %156 = bitcast i32 %112 to float, !dbg !30
  %157 = fmul float %156, %156, !dbg !30
  %158 = bitcast i32 %113 to float, !dbg !30
  %159 = fmul float %158, %158, !dbg !30
  %160 = bitcast i32 %114 to float, !dbg !30
  %161 = fmul float %160, %160, !dbg !30
  %162 = bitcast i32 %116 to float, !dbg !30
  %163 = fmul float %162, %162, !dbg !30
  %164 = bitcast i32 %117 to float, !dbg !30
  %165 = fmul float %164, %164, !dbg !30
  %166 = bitcast i32 %118 to float, !dbg !30
  %167 = fmul float %166, %166, !dbg !30
  %168 = bitcast i32 %119 to float, !dbg !30
  %169 = fmul float %168, %168, !dbg !30
  %170 = fmul float %139, %138, !dbg !31
  %171 = fmul float %141, %140, !dbg !31
  %172 = fmul float %143, %142, !dbg !31
  %173 = fmul float %145, %144, !dbg !31
  %174 = fmul float %147, %146, !dbg !31
  %175 = fmul float %149, %148, !dbg !31
  %176 = fmul float %151, %150, !dbg !31
  %177 = fmul float %153, %152, !dbg !31
  %178 = fmul float %155, %154, !dbg !31
  %179 = fmul float %157, %156, !dbg !31
  %180 = fmul float %159, %158, !dbg !31
  %181 = fmul float %161, %160, !dbg !31
  %182 = fmul float %163, %162, !dbg !31
  %183 = fmul float %165, %164, !dbg !31
  %184 = fmul float %167, %166, !dbg !31
  %185 = fmul float %169, %168, !dbg !31
  %186 = fmul float %170, 0x3FA6E4E260000000, !dbg !32
  %187 = fmul float %171, 0x3FA6E4E260000000, !dbg !32
  %188 = fmul float %172, 0x3FA6E4E260000000, !dbg !32
  %189 = fmul float %173, 0x3FA6E4E260000000, !dbg !32
  %190 = fmul float %174, 0x3FA6E4E260000000, !dbg !32
  %191 = fmul float %175, 0x3FA6E4E260000000, !dbg !32
  %192 = fmul float %176, 0x3FA6E4E260000000, !dbg !32
  %193 = fmul float %177, 0x3FA6E4E260000000, !dbg !32
  %194 = fmul float %178, 0x3FA6E4E260000000, !dbg !32
  %195 = fmul float %179, 0x3FA6E4E260000000, !dbg !32
  %196 = fmul float %180, 0x3FA6E4E260000000, !dbg !32
  %197 = fmul float %181, 0x3FA6E4E260000000, !dbg !32
  %198 = fmul float %182, 0x3FA6E4E260000000, !dbg !32
  %199 = fmul float %183, 0x3FA6E4E260000000, !dbg !32
  %200 = fmul float %184, 0x3FA6E4E260000000, !dbg !32
  %201 = fmul float %185, 0x3FA6E4E260000000, !dbg !32
  %202 = fadd float %186, %138, !dbg !33
  %203 = fadd float %187, %140, !dbg !33
  %204 = fadd float %188, %142, !dbg !33
  %205 = fadd float %189, %144, !dbg !33
  %206 = fadd float %190, %146, !dbg !33
  %207 = fadd float %191, %148, !dbg !33
  %208 = fadd float %192, %150, !dbg !33
  %209 = fadd float %193, %152, !dbg !33
  %210 = fadd float %194, %154, !dbg !33
  %211 = fadd float %195, %156, !dbg !33
  %212 = fadd float %196, %158, !dbg !33
  %213 = fadd float %197, %160, !dbg !33
  %214 = fadd float %198, %162, !dbg !33
  %215 = fadd float %199, %164, !dbg !33
  %216 = fadd float %200, %166, !dbg !33
  %217 = fadd float %201, %168, !dbg !33
  %218 = fmul float %202, 0x3FE9884540000000, !dbg !34
  %219 = fmul float %203, 0x3FE9884540000000, !dbg !34
  %220 = fmul float %204, 0x3FE9884540000000, !dbg !34
  %221 = fmul float %205, 0x3FE9884540000000, !dbg !34
  %222 = fmul float %206, 0x3FE9884540000000, !dbg !34
  %223 = fmul float %207, 0x3FE9884540000000, !dbg !34
  %224 = fmul float %208, 0x3FE9884540000000, !dbg !34
  %225 = fmul float %209, 0x3FE9884540000000, !dbg !34
  %226 = fmul float %210, 0x3FE9884540000000, !dbg !34
  %227 = fmul float %211, 0x3FE9884540000000, !dbg !34
  %228 = fmul float %212, 0x3FE9884540000000, !dbg !34
  %229 = fmul float %213, 0x3FE9884540000000, !dbg !34
  %230 = fmul float %214, 0x3FE9884540000000, !dbg !34
  %231 = fmul float %215, 0x3FE9884540000000, !dbg !34
  %232 = fmul float %216, 0x3FE9884540000000, !dbg !34
  %233 = fmul float %217, 0x3FE9884540000000, !dbg !34
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i288 = icmp eq i32 %234, 0, !dbg !35
  %235 = tail call float @llvm.nvvm.fabs.ftz.f(float %218) #5, !dbg !35
  %236 = tail call float @llvm.nvvm.fabs.f(float %218) #5, !dbg !35
  %.01.i289 = select i1 %.not.i288, float %236, float %235, !dbg !35
  %237 = fcmp ult float %.01.i289, 0x3FE3333340000000, !dbg !35
  br i1 %237, label %__internal_fmad.exit3.i295, label %__internal_fmad.exit1.i290, !dbg !35

__internal_fmad.exit1.i290:                       ; preds = %24
  %238 = fmul float %.01.i289, 0x4007154760000000, !dbg !35
  %239 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %238) #5, !dbg !35
  %240 = fadd float %239, 1.000000e+00, !dbg !35
  %241 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %240) #6, !dbg !35, !srcloc !36
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i291 = icmp eq i32 %242, 0, !dbg !35
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %241, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i292 = select i1 %.not6.i291, float %244, float %243, !dbg !35
  %245 = fcmp oge float %.01.i289, 0x4022059680000000, !dbg !35
  %s.0.i293 = select i1 %245, float 1.000000e+00, float %.03.i292, !dbg !35
  %246 = bitcast float %s.0.i293 to i32, !dbg !35
  %247 = bitcast float %218 to i32, !dbg !35
  %248 = and i32 %247, -2147483648, !dbg !35
  %249 = or i32 %248, %246, !dbg !35
  %250 = bitcast i32 %249 to float, !dbg !35
  br label %__nv_tanhf.exit306, !dbg !35

__internal_fmad.exit3.i295:                       ; preds = %24
  %251 = fmul float %218, %218, !dbg !35
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i296 = icmp eq i32 %252, 0, !dbg !35
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %251, float 0xBFAAC795C0000000) #5, !dbg !35
  %254 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %251, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i297 = select i1 %.not1.i296, float %254, float %253, !dbg !35
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i298 = icmp eq i32 %255, 0, !dbg !35
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i297, float %251, float 0x3FC10B2820000000) #5, !dbg !35
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i297, float %251, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i299 = select i1 %.not2.i298, float %257, float %256, !dbg !35
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i300 = icmp eq i32 %258, 0, !dbg !35
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i299, float %251, float 0xBFD5553DA0000000) #5, !dbg !35
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i299, float %251, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i301 = select i1 %.not3.i300, float %260, float %259, !dbg !35
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i302 = icmp eq i32 %261, 0, !dbg !35
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i301, float %251, float 0.000000e+00) #5, !dbg !35
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i301, float %251, float 0.000000e+00) #5, !dbg !35
  %.04.i303 = select i1 %.not4.i302, float %263, float %262, !dbg !35
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i304 = icmp eq i32 %264, 0, !dbg !35
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i303, float %218, float %218) #5, !dbg !35
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i303, float %218, float %218) #5, !dbg !35
  %.02.i305 = select i1 %.not5.i304, float %266, float %265, !dbg !35
  br label %__nv_tanhf.exit306, !dbg !35

__nv_tanhf.exit306:                               ; preds = %__internal_fmad.exit1.i290, %__internal_fmad.exit3.i295
  %s.1.i294 = phi float [ %250, %__internal_fmad.exit1.i290 ], [ %.02.i305, %__internal_fmad.exit3.i295 ], !dbg !35
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i307 = icmp eq i32 %267, 0, !dbg !35
  %268 = tail call float @llvm.nvvm.fabs.ftz.f(float %219) #5, !dbg !35
  %269 = tail call float @llvm.nvvm.fabs.f(float %219) #5, !dbg !35
  %.01.i308 = select i1 %.not.i307, float %269, float %268, !dbg !35
  %270 = fcmp ult float %.01.i308, 0x3FE3333340000000, !dbg !35
  br i1 %270, label %__internal_fmad.exit3.i314, label %__internal_fmad.exit1.i309, !dbg !35

__internal_fmad.exit1.i309:                       ; preds = %__nv_tanhf.exit306
  %271 = fmul float %.01.i308, 0x4007154760000000, !dbg !35
  %272 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %271) #5, !dbg !35
  %273 = fadd float %272, 1.000000e+00, !dbg !35
  %274 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %273) #6, !dbg !35, !srcloc !36
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i310 = icmp eq i32 %275, 0, !dbg !35
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %274, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %274, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i311 = select i1 %.not6.i310, float %277, float %276, !dbg !35
  %278 = fcmp oge float %.01.i308, 0x4022059680000000, !dbg !35
  %s.0.i312 = select i1 %278, float 1.000000e+00, float %.03.i311, !dbg !35
  %279 = bitcast float %s.0.i312 to i32, !dbg !35
  %280 = bitcast float %219 to i32, !dbg !35
  %281 = and i32 %280, -2147483648, !dbg !35
  %282 = or i32 %281, %279, !dbg !35
  %283 = bitcast i32 %282 to float, !dbg !35
  br label %__nv_tanhf.exit325, !dbg !35

__internal_fmad.exit3.i314:                       ; preds = %__nv_tanhf.exit306
  %284 = fmul float %219, %219, !dbg !35
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i315 = icmp eq i32 %285, 0, !dbg !35
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %284, float 0xBFAAC795C0000000) #5, !dbg !35
  %287 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %284, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i316 = select i1 %.not1.i315, float %287, float %286, !dbg !35
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i317 = icmp eq i32 %288, 0, !dbg !35
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i316, float %284, float 0x3FC10B2820000000) #5, !dbg !35
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i316, float %284, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i318 = select i1 %.not2.i317, float %290, float %289, !dbg !35
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i319 = icmp eq i32 %291, 0, !dbg !35
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i318, float %284, float 0xBFD5553DA0000000) #5, !dbg !35
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i318, float %284, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i320 = select i1 %.not3.i319, float %293, float %292, !dbg !35
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i321 = icmp eq i32 %294, 0, !dbg !35
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i320, float %284, float 0.000000e+00) #5, !dbg !35
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i320, float %284, float 0.000000e+00) #5, !dbg !35
  %.04.i322 = select i1 %.not4.i321, float %296, float %295, !dbg !35
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i323 = icmp eq i32 %297, 0, !dbg !35
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i322, float %219, float %219) #5, !dbg !35
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i322, float %219, float %219) #5, !dbg !35
  %.02.i324 = select i1 %.not5.i323, float %299, float %298, !dbg !35
  br label %__nv_tanhf.exit325, !dbg !35

__nv_tanhf.exit325:                               ; preds = %__internal_fmad.exit1.i309, %__internal_fmad.exit3.i314
  %s.1.i313 = phi float [ %283, %__internal_fmad.exit1.i309 ], [ %.02.i324, %__internal_fmad.exit3.i314 ], !dbg !35
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i326 = icmp eq i32 %300, 0, !dbg !35
  %301 = tail call float @llvm.nvvm.fabs.ftz.f(float %220) #5, !dbg !35
  %302 = tail call float @llvm.nvvm.fabs.f(float %220) #5, !dbg !35
  %.01.i327 = select i1 %.not.i326, float %302, float %301, !dbg !35
  %303 = fcmp ult float %.01.i327, 0x3FE3333340000000, !dbg !35
  br i1 %303, label %__internal_fmad.exit3.i333, label %__internal_fmad.exit1.i328, !dbg !35

__internal_fmad.exit1.i328:                       ; preds = %__nv_tanhf.exit325
  %304 = fmul float %.01.i327, 0x4007154760000000, !dbg !35
  %305 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %304) #5, !dbg !35
  %306 = fadd float %305, 1.000000e+00, !dbg !35
  %307 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %306) #6, !dbg !35, !srcloc !36
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i329 = icmp eq i32 %308, 0, !dbg !35
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %307, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %307, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i330 = select i1 %.not6.i329, float %310, float %309, !dbg !35
  %311 = fcmp oge float %.01.i327, 0x4022059680000000, !dbg !35
  %s.0.i331 = select i1 %311, float 1.000000e+00, float %.03.i330, !dbg !35
  %312 = bitcast float %s.0.i331 to i32, !dbg !35
  %313 = bitcast float %220 to i32, !dbg !35
  %314 = and i32 %313, -2147483648, !dbg !35
  %315 = or i32 %314, %312, !dbg !35
  %316 = bitcast i32 %315 to float, !dbg !35
  br label %__nv_tanhf.exit344, !dbg !35

__internal_fmad.exit3.i333:                       ; preds = %__nv_tanhf.exit325
  %317 = fmul float %220, %220, !dbg !35
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i334 = icmp eq i32 %318, 0, !dbg !35
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #5, !dbg !35
  %320 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i335 = select i1 %.not1.i334, float %320, float %319, !dbg !35
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i336 = icmp eq i32 %321, 0, !dbg !35
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i335, float %317, float 0x3FC10B2820000000) #5, !dbg !35
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i335, float %317, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i337 = select i1 %.not2.i336, float %323, float %322, !dbg !35
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i338 = icmp eq i32 %324, 0, !dbg !35
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i337, float %317, float 0xBFD5553DA0000000) #5, !dbg !35
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i337, float %317, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i339 = select i1 %.not3.i338, float %326, float %325, !dbg !35
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i340 = icmp eq i32 %327, 0, !dbg !35
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i339, float %317, float 0.000000e+00) #5, !dbg !35
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i339, float %317, float 0.000000e+00) #5, !dbg !35
  %.04.i341 = select i1 %.not4.i340, float %329, float %328, !dbg !35
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i342 = icmp eq i32 %330, 0, !dbg !35
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i341, float %220, float %220) #5, !dbg !35
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i341, float %220, float %220) #5, !dbg !35
  %.02.i343 = select i1 %.not5.i342, float %332, float %331, !dbg !35
  br label %__nv_tanhf.exit344, !dbg !35

__nv_tanhf.exit344:                               ; preds = %__internal_fmad.exit1.i328, %__internal_fmad.exit3.i333
  %s.1.i332 = phi float [ %316, %__internal_fmad.exit1.i328 ], [ %.02.i343, %__internal_fmad.exit3.i333 ], !dbg !35
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i345 = icmp eq i32 %333, 0, !dbg !35
  %334 = tail call float @llvm.nvvm.fabs.ftz.f(float %221) #5, !dbg !35
  %335 = tail call float @llvm.nvvm.fabs.f(float %221) #5, !dbg !35
  %.01.i346 = select i1 %.not.i345, float %335, float %334, !dbg !35
  %336 = fcmp ult float %.01.i346, 0x3FE3333340000000, !dbg !35
  br i1 %336, label %__internal_fmad.exit3.i352, label %__internal_fmad.exit1.i347, !dbg !35

__internal_fmad.exit1.i347:                       ; preds = %__nv_tanhf.exit344
  %337 = fmul float %.01.i346, 0x4007154760000000, !dbg !35
  %338 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %337) #5, !dbg !35
  %339 = fadd float %338, 1.000000e+00, !dbg !35
  %340 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %339) #6, !dbg !35, !srcloc !36
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i348 = icmp eq i32 %341, 0, !dbg !35
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %340, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i349 = select i1 %.not6.i348, float %343, float %342, !dbg !35
  %344 = fcmp oge float %.01.i346, 0x4022059680000000, !dbg !35
  %s.0.i350 = select i1 %344, float 1.000000e+00, float %.03.i349, !dbg !35
  %345 = bitcast float %s.0.i350 to i32, !dbg !35
  %346 = bitcast float %221 to i32, !dbg !35
  %347 = and i32 %346, -2147483648, !dbg !35
  %348 = or i32 %347, %345, !dbg !35
  %349 = bitcast i32 %348 to float, !dbg !35
  br label %__nv_tanhf.exit363, !dbg !35

__internal_fmad.exit3.i352:                       ; preds = %__nv_tanhf.exit344
  %350 = fmul float %221, %221, !dbg !35
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i353 = icmp eq i32 %351, 0, !dbg !35
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %350, float 0xBFAAC795C0000000) #5, !dbg !35
  %353 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %350, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i354 = select i1 %.not1.i353, float %353, float %352, !dbg !35
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i355 = icmp eq i32 %354, 0, !dbg !35
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i354, float %350, float 0x3FC10B2820000000) #5, !dbg !35
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i354, float %350, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i356 = select i1 %.not2.i355, float %356, float %355, !dbg !35
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i357 = icmp eq i32 %357, 0, !dbg !35
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i356, float %350, float 0xBFD5553DA0000000) #5, !dbg !35
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i356, float %350, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i358 = select i1 %.not3.i357, float %359, float %358, !dbg !35
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i359 = icmp eq i32 %360, 0, !dbg !35
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i358, float %350, float 0.000000e+00) #5, !dbg !35
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i358, float %350, float 0.000000e+00) #5, !dbg !35
  %.04.i360 = select i1 %.not4.i359, float %362, float %361, !dbg !35
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i361 = icmp eq i32 %363, 0, !dbg !35
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i360, float %221, float %221) #5, !dbg !35
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i360, float %221, float %221) #5, !dbg !35
  %.02.i362 = select i1 %.not5.i361, float %365, float %364, !dbg !35
  br label %__nv_tanhf.exit363, !dbg !35

__nv_tanhf.exit363:                               ; preds = %__internal_fmad.exit1.i347, %__internal_fmad.exit3.i352
  %s.1.i351 = phi float [ %349, %__internal_fmad.exit1.i347 ], [ %.02.i362, %__internal_fmad.exit3.i352 ], !dbg !35
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i364 = icmp eq i32 %366, 0, !dbg !35
  %367 = tail call float @llvm.nvvm.fabs.ftz.f(float %222) #5, !dbg !35
  %368 = tail call float @llvm.nvvm.fabs.f(float %222) #5, !dbg !35
  %.01.i365 = select i1 %.not.i364, float %368, float %367, !dbg !35
  %369 = fcmp ult float %.01.i365, 0x3FE3333340000000, !dbg !35
  br i1 %369, label %__internal_fmad.exit3.i371, label %__internal_fmad.exit1.i366, !dbg !35

__internal_fmad.exit1.i366:                       ; preds = %__nv_tanhf.exit363
  %370 = fmul float %.01.i365, 0x4007154760000000, !dbg !35
  %371 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %370) #5, !dbg !35
  %372 = fadd float %371, 1.000000e+00, !dbg !35
  %373 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %372) #6, !dbg !35, !srcloc !36
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i367 = icmp eq i32 %374, 0, !dbg !35
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %373, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %373, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i368 = select i1 %.not6.i367, float %376, float %375, !dbg !35
  %377 = fcmp oge float %.01.i365, 0x4022059680000000, !dbg !35
  %s.0.i369 = select i1 %377, float 1.000000e+00, float %.03.i368, !dbg !35
  %378 = bitcast float %s.0.i369 to i32, !dbg !35
  %379 = bitcast float %222 to i32, !dbg !35
  %380 = and i32 %379, -2147483648, !dbg !35
  %381 = or i32 %380, %378, !dbg !35
  %382 = bitcast i32 %381 to float, !dbg !35
  br label %__nv_tanhf.exit382, !dbg !35

__internal_fmad.exit3.i371:                       ; preds = %__nv_tanhf.exit363
  %383 = fmul float %222, %222, !dbg !35
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i372 = icmp eq i32 %384, 0, !dbg !35
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %383, float 0xBFAAC795C0000000) #5, !dbg !35
  %386 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %383, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i373 = select i1 %.not1.i372, float %386, float %385, !dbg !35
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i374 = icmp eq i32 %387, 0, !dbg !35
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i373, float %383, float 0x3FC10B2820000000) #5, !dbg !35
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i373, float %383, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i375 = select i1 %.not2.i374, float %389, float %388, !dbg !35
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i376 = icmp eq i32 %390, 0, !dbg !35
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i375, float %383, float 0xBFD5553DA0000000) #5, !dbg !35
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i375, float %383, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i377 = select i1 %.not3.i376, float %392, float %391, !dbg !35
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i378 = icmp eq i32 %393, 0, !dbg !35
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i377, float %383, float 0.000000e+00) #5, !dbg !35
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i377, float %383, float 0.000000e+00) #5, !dbg !35
  %.04.i379 = select i1 %.not4.i378, float %395, float %394, !dbg !35
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i380 = icmp eq i32 %396, 0, !dbg !35
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i379, float %222, float %222) #5, !dbg !35
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i379, float %222, float %222) #5, !dbg !35
  %.02.i381 = select i1 %.not5.i380, float %398, float %397, !dbg !35
  br label %__nv_tanhf.exit382, !dbg !35

__nv_tanhf.exit382:                               ; preds = %__internal_fmad.exit1.i366, %__internal_fmad.exit3.i371
  %s.1.i370 = phi float [ %382, %__internal_fmad.exit1.i366 ], [ %.02.i381, %__internal_fmad.exit3.i371 ], !dbg !35
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i383 = icmp eq i32 %399, 0, !dbg !35
  %400 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !35
  %401 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !35
  %.01.i384 = select i1 %.not.i383, float %401, float %400, !dbg !35
  %402 = fcmp ult float %.01.i384, 0x3FE3333340000000, !dbg !35
  br i1 %402, label %__internal_fmad.exit3.i390, label %__internal_fmad.exit1.i385, !dbg !35

__internal_fmad.exit1.i385:                       ; preds = %__nv_tanhf.exit382
  %403 = fmul float %.01.i384, 0x4007154760000000, !dbg !35
  %404 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %403) #5, !dbg !35
  %405 = fadd float %404, 1.000000e+00, !dbg !35
  %406 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %405) #6, !dbg !35, !srcloc !36
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i386 = icmp eq i32 %407, 0, !dbg !35
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %406, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %409 = tail call float @llvm.nvvm.fma.rn.f(float %406, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i387 = select i1 %.not6.i386, float %409, float %408, !dbg !35
  %410 = fcmp oge float %.01.i384, 0x4022059680000000, !dbg !35
  %s.0.i388 = select i1 %410, float 1.000000e+00, float %.03.i387, !dbg !35
  %411 = bitcast float %s.0.i388 to i32, !dbg !35
  %412 = bitcast float %223 to i32, !dbg !35
  %413 = and i32 %412, -2147483648, !dbg !35
  %414 = or i32 %413, %411, !dbg !35
  %415 = bitcast i32 %414 to float, !dbg !35
  br label %__nv_tanhf.exit401, !dbg !35

__internal_fmad.exit3.i390:                       ; preds = %__nv_tanhf.exit382
  %416 = fmul float %223, %223, !dbg !35
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i391 = icmp eq i32 %417, 0, !dbg !35
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %416, float 0xBFAAC795C0000000) #5, !dbg !35
  %419 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %416, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i392 = select i1 %.not1.i391, float %419, float %418, !dbg !35
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i393 = icmp eq i32 %420, 0, !dbg !35
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i392, float %416, float 0x3FC10B2820000000) #5, !dbg !35
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i392, float %416, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i394 = select i1 %.not2.i393, float %422, float %421, !dbg !35
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i395 = icmp eq i32 %423, 0, !dbg !35
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i394, float %416, float 0xBFD5553DA0000000) #5, !dbg !35
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i394, float %416, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i396 = select i1 %.not3.i395, float %425, float %424, !dbg !35
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i397 = icmp eq i32 %426, 0, !dbg !35
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i396, float %416, float 0.000000e+00) #5, !dbg !35
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i396, float %416, float 0.000000e+00) #5, !dbg !35
  %.04.i398 = select i1 %.not4.i397, float %428, float %427, !dbg !35
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i399 = icmp eq i32 %429, 0, !dbg !35
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i398, float %223, float %223) #5, !dbg !35
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i398, float %223, float %223) #5, !dbg !35
  %.02.i400 = select i1 %.not5.i399, float %431, float %430, !dbg !35
  br label %__nv_tanhf.exit401, !dbg !35

__nv_tanhf.exit401:                               ; preds = %__internal_fmad.exit1.i385, %__internal_fmad.exit3.i390
  %s.1.i389 = phi float [ %415, %__internal_fmad.exit1.i385 ], [ %.02.i400, %__internal_fmad.exit3.i390 ], !dbg !35
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i402 = icmp eq i32 %432, 0, !dbg !35
  %433 = tail call float @llvm.nvvm.fabs.ftz.f(float %224) #5, !dbg !35
  %434 = tail call float @llvm.nvvm.fabs.f(float %224) #5, !dbg !35
  %.01.i403 = select i1 %.not.i402, float %434, float %433, !dbg !35
  %435 = fcmp ult float %.01.i403, 0x3FE3333340000000, !dbg !35
  br i1 %435, label %__internal_fmad.exit3.i409, label %__internal_fmad.exit1.i404, !dbg !35

__internal_fmad.exit1.i404:                       ; preds = %__nv_tanhf.exit401
  %436 = fmul float %.01.i403, 0x4007154760000000, !dbg !35
  %437 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %436) #5, !dbg !35
  %438 = fadd float %437, 1.000000e+00, !dbg !35
  %439 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %438) #6, !dbg !35, !srcloc !36
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i405 = icmp eq i32 %440, 0, !dbg !35
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %439, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %439, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i406 = select i1 %.not6.i405, float %442, float %441, !dbg !35
  %443 = fcmp oge float %.01.i403, 0x4022059680000000, !dbg !35
  %s.0.i407 = select i1 %443, float 1.000000e+00, float %.03.i406, !dbg !35
  %444 = bitcast float %s.0.i407 to i32, !dbg !35
  %445 = bitcast float %224 to i32, !dbg !35
  %446 = and i32 %445, -2147483648, !dbg !35
  %447 = or i32 %446, %444, !dbg !35
  %448 = bitcast i32 %447 to float, !dbg !35
  br label %__nv_tanhf.exit420, !dbg !35

__internal_fmad.exit3.i409:                       ; preds = %__nv_tanhf.exit401
  %449 = fmul float %224, %224, !dbg !35
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i410 = icmp eq i32 %450, 0, !dbg !35
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %449, float 0xBFAAC795C0000000) #5, !dbg !35
  %452 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %449, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i411 = select i1 %.not1.i410, float %452, float %451, !dbg !35
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i412 = icmp eq i32 %453, 0, !dbg !35
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i411, float %449, float 0x3FC10B2820000000) #5, !dbg !35
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i411, float %449, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i413 = select i1 %.not2.i412, float %455, float %454, !dbg !35
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i414 = icmp eq i32 %456, 0, !dbg !35
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i413, float %449, float 0xBFD5553DA0000000) #5, !dbg !35
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i413, float %449, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i415 = select i1 %.not3.i414, float %458, float %457, !dbg !35
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i416 = icmp eq i32 %459, 0, !dbg !35
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i415, float %449, float 0.000000e+00) #5, !dbg !35
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i415, float %449, float 0.000000e+00) #5, !dbg !35
  %.04.i417 = select i1 %.not4.i416, float %461, float %460, !dbg !35
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i418 = icmp eq i32 %462, 0, !dbg !35
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i417, float %224, float %224) #5, !dbg !35
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i417, float %224, float %224) #5, !dbg !35
  %.02.i419 = select i1 %.not5.i418, float %464, float %463, !dbg !35
  br label %__nv_tanhf.exit420, !dbg !35

__nv_tanhf.exit420:                               ; preds = %__internal_fmad.exit1.i404, %__internal_fmad.exit3.i409
  %s.1.i408 = phi float [ %448, %__internal_fmad.exit1.i404 ], [ %.02.i419, %__internal_fmad.exit3.i409 ], !dbg !35
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i421 = icmp eq i32 %465, 0, !dbg !35
  %466 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !35
  %467 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !35
  %.01.i422 = select i1 %.not.i421, float %467, float %466, !dbg !35
  %468 = fcmp ult float %.01.i422, 0x3FE3333340000000, !dbg !35
  br i1 %468, label %__internal_fmad.exit3.i428, label %__internal_fmad.exit1.i423, !dbg !35

__internal_fmad.exit1.i423:                       ; preds = %__nv_tanhf.exit420
  %469 = fmul float %.01.i422, 0x4007154760000000, !dbg !35
  %470 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %469) #5, !dbg !35
  %471 = fadd float %470, 1.000000e+00, !dbg !35
  %472 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %471) #6, !dbg !35, !srcloc !36
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i424 = icmp eq i32 %473, 0, !dbg !35
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %472, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %472, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i425 = select i1 %.not6.i424, float %475, float %474, !dbg !35
  %476 = fcmp oge float %.01.i422, 0x4022059680000000, !dbg !35
  %s.0.i426 = select i1 %476, float 1.000000e+00, float %.03.i425, !dbg !35
  %477 = bitcast float %s.0.i426 to i32, !dbg !35
  %478 = bitcast float %225 to i32, !dbg !35
  %479 = and i32 %478, -2147483648, !dbg !35
  %480 = or i32 %479, %477, !dbg !35
  %481 = bitcast i32 %480 to float, !dbg !35
  br label %__nv_tanhf.exit439, !dbg !35

__internal_fmad.exit3.i428:                       ; preds = %__nv_tanhf.exit420
  %482 = fmul float %225, %225, !dbg !35
  %483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i429 = icmp eq i32 %483, 0, !dbg !35
  %484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %482, float 0xBFAAC795C0000000) #5, !dbg !35
  %485 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %482, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i430 = select i1 %.not1.i429, float %485, float %484, !dbg !35
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i431 = icmp eq i32 %486, 0, !dbg !35
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i430, float %482, float 0x3FC10B2820000000) #5, !dbg !35
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i430, float %482, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i432 = select i1 %.not2.i431, float %488, float %487, !dbg !35
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i433 = icmp eq i32 %489, 0, !dbg !35
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i432, float %482, float 0xBFD5553DA0000000) #5, !dbg !35
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i432, float %482, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i434 = select i1 %.not3.i433, float %491, float %490, !dbg !35
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i435 = icmp eq i32 %492, 0, !dbg !35
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i434, float %482, float 0.000000e+00) #5, !dbg !35
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i434, float %482, float 0.000000e+00) #5, !dbg !35
  %.04.i436 = select i1 %.not4.i435, float %494, float %493, !dbg !35
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i437 = icmp eq i32 %495, 0, !dbg !35
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i436, float %225, float %225) #5, !dbg !35
  %497 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i436, float %225, float %225) #5, !dbg !35
  %.02.i438 = select i1 %.not5.i437, float %497, float %496, !dbg !35
  br label %__nv_tanhf.exit439, !dbg !35

__nv_tanhf.exit439:                               ; preds = %__internal_fmad.exit1.i423, %__internal_fmad.exit3.i428
  %s.1.i427 = phi float [ %481, %__internal_fmad.exit1.i423 ], [ %.02.i438, %__internal_fmad.exit3.i428 ], !dbg !35
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i440 = icmp eq i32 %498, 0, !dbg !35
  %499 = tail call float @llvm.nvvm.fabs.ftz.f(float %226) #5, !dbg !35
  %500 = tail call float @llvm.nvvm.fabs.f(float %226) #5, !dbg !35
  %.01.i441 = select i1 %.not.i440, float %500, float %499, !dbg !35
  %501 = fcmp ult float %.01.i441, 0x3FE3333340000000, !dbg !35
  br i1 %501, label %__internal_fmad.exit3.i447, label %__internal_fmad.exit1.i442, !dbg !35

__internal_fmad.exit1.i442:                       ; preds = %__nv_tanhf.exit439
  %502 = fmul float %.01.i441, 0x4007154760000000, !dbg !35
  %503 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %502) #5, !dbg !35
  %504 = fadd float %503, 1.000000e+00, !dbg !35
  %505 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %504) #6, !dbg !35, !srcloc !36
  %506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i443 = icmp eq i32 %506, 0, !dbg !35
  %507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %505, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %508 = tail call float @llvm.nvvm.fma.rn.f(float %505, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i444 = select i1 %.not6.i443, float %508, float %507, !dbg !35
  %509 = fcmp oge float %.01.i441, 0x4022059680000000, !dbg !35
  %s.0.i445 = select i1 %509, float 1.000000e+00, float %.03.i444, !dbg !35
  %510 = bitcast float %s.0.i445 to i32, !dbg !35
  %511 = bitcast float %226 to i32, !dbg !35
  %512 = and i32 %511, -2147483648, !dbg !35
  %513 = or i32 %512, %510, !dbg !35
  %514 = bitcast i32 %513 to float, !dbg !35
  br label %__nv_tanhf.exit458, !dbg !35

__internal_fmad.exit3.i447:                       ; preds = %__nv_tanhf.exit439
  %515 = fmul float %226, %226, !dbg !35
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i448 = icmp eq i32 %516, 0, !dbg !35
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %515, float 0xBFAAC795C0000000) #5, !dbg !35
  %518 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %515, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i449 = select i1 %.not1.i448, float %518, float %517, !dbg !35
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i450 = icmp eq i32 %519, 0, !dbg !35
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i449, float %515, float 0x3FC10B2820000000) #5, !dbg !35
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i449, float %515, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i451 = select i1 %.not2.i450, float %521, float %520, !dbg !35
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i452 = icmp eq i32 %522, 0, !dbg !35
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i451, float %515, float 0xBFD5553DA0000000) #5, !dbg !35
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i451, float %515, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i453 = select i1 %.not3.i452, float %524, float %523, !dbg !35
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i454 = icmp eq i32 %525, 0, !dbg !35
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i453, float %515, float 0.000000e+00) #5, !dbg !35
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i453, float %515, float 0.000000e+00) #5, !dbg !35
  %.04.i455 = select i1 %.not4.i454, float %527, float %526, !dbg !35
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i456 = icmp eq i32 %528, 0, !dbg !35
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i455, float %226, float %226) #5, !dbg !35
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i455, float %226, float %226) #5, !dbg !35
  %.02.i457 = select i1 %.not5.i456, float %530, float %529, !dbg !35
  br label %__nv_tanhf.exit458, !dbg !35

__nv_tanhf.exit458:                               ; preds = %__internal_fmad.exit1.i442, %__internal_fmad.exit3.i447
  %s.1.i446 = phi float [ %514, %__internal_fmad.exit1.i442 ], [ %.02.i457, %__internal_fmad.exit3.i447 ], !dbg !35
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i459 = icmp eq i32 %531, 0, !dbg !35
  %532 = tail call float @llvm.nvvm.fabs.ftz.f(float %227) #5, !dbg !35
  %533 = tail call float @llvm.nvvm.fabs.f(float %227) #5, !dbg !35
  %.01.i460 = select i1 %.not.i459, float %533, float %532, !dbg !35
  %534 = fcmp ult float %.01.i460, 0x3FE3333340000000, !dbg !35
  br i1 %534, label %__internal_fmad.exit3.i466, label %__internal_fmad.exit1.i461, !dbg !35

__internal_fmad.exit1.i461:                       ; preds = %__nv_tanhf.exit458
  %535 = fmul float %.01.i460, 0x4007154760000000, !dbg !35
  %536 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %535) #5, !dbg !35
  %537 = fadd float %536, 1.000000e+00, !dbg !35
  %538 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %537) #6, !dbg !35, !srcloc !36
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i462 = icmp eq i32 %539, 0, !dbg !35
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %538, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %538, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i463 = select i1 %.not6.i462, float %541, float %540, !dbg !35
  %542 = fcmp oge float %.01.i460, 0x4022059680000000, !dbg !35
  %s.0.i464 = select i1 %542, float 1.000000e+00, float %.03.i463, !dbg !35
  %543 = bitcast float %s.0.i464 to i32, !dbg !35
  %544 = bitcast float %227 to i32, !dbg !35
  %545 = and i32 %544, -2147483648, !dbg !35
  %546 = or i32 %545, %543, !dbg !35
  %547 = bitcast i32 %546 to float, !dbg !35
  br label %__nv_tanhf.exit477, !dbg !35

__internal_fmad.exit3.i466:                       ; preds = %__nv_tanhf.exit458
  %548 = fmul float %227, %227, !dbg !35
  %549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i467 = icmp eq i32 %549, 0, !dbg !35
  %550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %548, float 0xBFAAC795C0000000) #5, !dbg !35
  %551 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %548, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i468 = select i1 %.not1.i467, float %551, float %550, !dbg !35
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i469 = icmp eq i32 %552, 0, !dbg !35
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i468, float %548, float 0x3FC10B2820000000) #5, !dbg !35
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i468, float %548, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i470 = select i1 %.not2.i469, float %554, float %553, !dbg !35
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i471 = icmp eq i32 %555, 0, !dbg !35
  %556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i470, float %548, float 0xBFD5553DA0000000) #5, !dbg !35
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i470, float %548, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i472 = select i1 %.not3.i471, float %557, float %556, !dbg !35
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i473 = icmp eq i32 %558, 0, !dbg !35
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i472, float %548, float 0.000000e+00) #5, !dbg !35
  %560 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i472, float %548, float 0.000000e+00) #5, !dbg !35
  %.04.i474 = select i1 %.not4.i473, float %560, float %559, !dbg !35
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i475 = icmp eq i32 %561, 0, !dbg !35
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i474, float %227, float %227) #5, !dbg !35
  %563 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i474, float %227, float %227) #5, !dbg !35
  %.02.i476 = select i1 %.not5.i475, float %563, float %562, !dbg !35
  br label %__nv_tanhf.exit477, !dbg !35

__nv_tanhf.exit477:                               ; preds = %__internal_fmad.exit1.i461, %__internal_fmad.exit3.i466
  %s.1.i465 = phi float [ %547, %__internal_fmad.exit1.i461 ], [ %.02.i476, %__internal_fmad.exit3.i466 ], !dbg !35
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i478 = icmp eq i32 %564, 0, !dbg !35
  %565 = tail call float @llvm.nvvm.fabs.ftz.f(float %228) #5, !dbg !35
  %566 = tail call float @llvm.nvvm.fabs.f(float %228) #5, !dbg !35
  %.01.i479 = select i1 %.not.i478, float %566, float %565, !dbg !35
  %567 = fcmp ult float %.01.i479, 0x3FE3333340000000, !dbg !35
  br i1 %567, label %__internal_fmad.exit3.i485, label %__internal_fmad.exit1.i480, !dbg !35

__internal_fmad.exit1.i480:                       ; preds = %__nv_tanhf.exit477
  %568 = fmul float %.01.i479, 0x4007154760000000, !dbg !35
  %569 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %568) #5, !dbg !35
  %570 = fadd float %569, 1.000000e+00, !dbg !35
  %571 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %570) #6, !dbg !35, !srcloc !36
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i481 = icmp eq i32 %572, 0, !dbg !35
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %571, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %574 = tail call float @llvm.nvvm.fma.rn.f(float %571, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i482 = select i1 %.not6.i481, float %574, float %573, !dbg !35
  %575 = fcmp oge float %.01.i479, 0x4022059680000000, !dbg !35
  %s.0.i483 = select i1 %575, float 1.000000e+00, float %.03.i482, !dbg !35
  %576 = bitcast float %s.0.i483 to i32, !dbg !35
  %577 = bitcast float %228 to i32, !dbg !35
  %578 = and i32 %577, -2147483648, !dbg !35
  %579 = or i32 %578, %576, !dbg !35
  %580 = bitcast i32 %579 to float, !dbg !35
  br label %__nv_tanhf.exit496, !dbg !35

__internal_fmad.exit3.i485:                       ; preds = %__nv_tanhf.exit477
  %581 = fmul float %228, %228, !dbg !35
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i486 = icmp eq i32 %582, 0, !dbg !35
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %581, float 0xBFAAC795C0000000) #5, !dbg !35
  %584 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %581, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i487 = select i1 %.not1.i486, float %584, float %583, !dbg !35
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i488 = icmp eq i32 %585, 0, !dbg !35
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i487, float %581, float 0x3FC10B2820000000) #5, !dbg !35
  %587 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i487, float %581, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i489 = select i1 %.not2.i488, float %587, float %586, !dbg !35
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i490 = icmp eq i32 %588, 0, !dbg !35
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i489, float %581, float 0xBFD5553DA0000000) #5, !dbg !35
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i489, float %581, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i491 = select i1 %.not3.i490, float %590, float %589, !dbg !35
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i492 = icmp eq i32 %591, 0, !dbg !35
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i491, float %581, float 0.000000e+00) #5, !dbg !35
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i491, float %581, float 0.000000e+00) #5, !dbg !35
  %.04.i493 = select i1 %.not4.i492, float %593, float %592, !dbg !35
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i494 = icmp eq i32 %594, 0, !dbg !35
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i493, float %228, float %228) #5, !dbg !35
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i493, float %228, float %228) #5, !dbg !35
  %.02.i495 = select i1 %.not5.i494, float %596, float %595, !dbg !35
  br label %__nv_tanhf.exit496, !dbg !35

__nv_tanhf.exit496:                               ; preds = %__internal_fmad.exit1.i480, %__internal_fmad.exit3.i485
  %s.1.i484 = phi float [ %580, %__internal_fmad.exit1.i480 ], [ %.02.i495, %__internal_fmad.exit3.i485 ], !dbg !35
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i497 = icmp eq i32 %597, 0, !dbg !35
  %598 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #5, !dbg !35
  %599 = tail call float @llvm.nvvm.fabs.f(float %229) #5, !dbg !35
  %.01.i498 = select i1 %.not.i497, float %599, float %598, !dbg !35
  %600 = fcmp ult float %.01.i498, 0x3FE3333340000000, !dbg !35
  br i1 %600, label %__internal_fmad.exit3.i504, label %__internal_fmad.exit1.i499, !dbg !35

__internal_fmad.exit1.i499:                       ; preds = %__nv_tanhf.exit496
  %601 = fmul float %.01.i498, 0x4007154760000000, !dbg !35
  %602 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %601) #5, !dbg !35
  %603 = fadd float %602, 1.000000e+00, !dbg !35
  %604 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %603) #6, !dbg !35, !srcloc !36
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i500 = icmp eq i32 %605, 0, !dbg !35
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %604, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %607 = tail call float @llvm.nvvm.fma.rn.f(float %604, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i501 = select i1 %.not6.i500, float %607, float %606, !dbg !35
  %608 = fcmp oge float %.01.i498, 0x4022059680000000, !dbg !35
  %s.0.i502 = select i1 %608, float 1.000000e+00, float %.03.i501, !dbg !35
  %609 = bitcast float %s.0.i502 to i32, !dbg !35
  %610 = bitcast float %229 to i32, !dbg !35
  %611 = and i32 %610, -2147483648, !dbg !35
  %612 = or i32 %611, %609, !dbg !35
  %613 = bitcast i32 %612 to float, !dbg !35
  br label %__nv_tanhf.exit515, !dbg !35

__internal_fmad.exit3.i504:                       ; preds = %__nv_tanhf.exit496
  %614 = fmul float %229, %229, !dbg !35
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i505 = icmp eq i32 %615, 0, !dbg !35
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %614, float 0xBFAAC795C0000000) #5, !dbg !35
  %617 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %614, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i506 = select i1 %.not1.i505, float %617, float %616, !dbg !35
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i507 = icmp eq i32 %618, 0, !dbg !35
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i506, float %614, float 0x3FC10B2820000000) #5, !dbg !35
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i506, float %614, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i508 = select i1 %.not2.i507, float %620, float %619, !dbg !35
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i509 = icmp eq i32 %621, 0, !dbg !35
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i508, float %614, float 0xBFD5553DA0000000) #5, !dbg !35
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i508, float %614, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i510 = select i1 %.not3.i509, float %623, float %622, !dbg !35
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i511 = icmp eq i32 %624, 0, !dbg !35
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i510, float %614, float 0.000000e+00) #5, !dbg !35
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i510, float %614, float 0.000000e+00) #5, !dbg !35
  %.04.i512 = select i1 %.not4.i511, float %626, float %625, !dbg !35
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i513 = icmp eq i32 %627, 0, !dbg !35
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i512, float %229, float %229) #5, !dbg !35
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i512, float %229, float %229) #5, !dbg !35
  %.02.i514 = select i1 %.not5.i513, float %629, float %628, !dbg !35
  br label %__nv_tanhf.exit515, !dbg !35

__nv_tanhf.exit515:                               ; preds = %__internal_fmad.exit1.i499, %__internal_fmad.exit3.i504
  %s.1.i503 = phi float [ %613, %__internal_fmad.exit1.i499 ], [ %.02.i514, %__internal_fmad.exit3.i504 ], !dbg !35
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i516 = icmp eq i32 %630, 0, !dbg !35
  %631 = tail call float @llvm.nvvm.fabs.ftz.f(float %230) #5, !dbg !35
  %632 = tail call float @llvm.nvvm.fabs.f(float %230) #5, !dbg !35
  %.01.i517 = select i1 %.not.i516, float %632, float %631, !dbg !35
  %633 = fcmp ult float %.01.i517, 0x3FE3333340000000, !dbg !35
  br i1 %633, label %__internal_fmad.exit3.i523, label %__internal_fmad.exit1.i518, !dbg !35

__internal_fmad.exit1.i518:                       ; preds = %__nv_tanhf.exit515
  %634 = fmul float %.01.i517, 0x4007154760000000, !dbg !35
  %635 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %634) #5, !dbg !35
  %636 = fadd float %635, 1.000000e+00, !dbg !35
  %637 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %636) #6, !dbg !35, !srcloc !36
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i519 = icmp eq i32 %638, 0, !dbg !35
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %637, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %640 = tail call float @llvm.nvvm.fma.rn.f(float %637, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i520 = select i1 %.not6.i519, float %640, float %639, !dbg !35
  %641 = fcmp oge float %.01.i517, 0x4022059680000000, !dbg !35
  %s.0.i521 = select i1 %641, float 1.000000e+00, float %.03.i520, !dbg !35
  %642 = bitcast float %s.0.i521 to i32, !dbg !35
  %643 = bitcast float %230 to i32, !dbg !35
  %644 = and i32 %643, -2147483648, !dbg !35
  %645 = or i32 %644, %642, !dbg !35
  %646 = bitcast i32 %645 to float, !dbg !35
  br label %__nv_tanhf.exit534, !dbg !35

__internal_fmad.exit3.i523:                       ; preds = %__nv_tanhf.exit515
  %647 = fmul float %230, %230, !dbg !35
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i524 = icmp eq i32 %648, 0, !dbg !35
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %647, float 0xBFAAC795C0000000) #5, !dbg !35
  %650 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %647, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i525 = select i1 %.not1.i524, float %650, float %649, !dbg !35
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i526 = icmp eq i32 %651, 0, !dbg !35
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i525, float %647, float 0x3FC10B2820000000) #5, !dbg !35
  %653 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i525, float %647, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i527 = select i1 %.not2.i526, float %653, float %652, !dbg !35
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i528 = icmp eq i32 %654, 0, !dbg !35
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i527, float %647, float 0xBFD5553DA0000000) #5, !dbg !35
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i527, float %647, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i529 = select i1 %.not3.i528, float %656, float %655, !dbg !35
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i530 = icmp eq i32 %657, 0, !dbg !35
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i529, float %647, float 0.000000e+00) #5, !dbg !35
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i529, float %647, float 0.000000e+00) #5, !dbg !35
  %.04.i531 = select i1 %.not4.i530, float %659, float %658, !dbg !35
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i532 = icmp eq i32 %660, 0, !dbg !35
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i531, float %230, float %230) #5, !dbg !35
  %662 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i531, float %230, float %230) #5, !dbg !35
  %.02.i533 = select i1 %.not5.i532, float %662, float %661, !dbg !35
  br label %__nv_tanhf.exit534, !dbg !35

__nv_tanhf.exit534:                               ; preds = %__internal_fmad.exit1.i518, %__internal_fmad.exit3.i523
  %s.1.i522 = phi float [ %646, %__internal_fmad.exit1.i518 ], [ %.02.i533, %__internal_fmad.exit3.i523 ], !dbg !35
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i535 = icmp eq i32 %663, 0, !dbg !35
  %664 = tail call float @llvm.nvvm.fabs.ftz.f(float %231) #5, !dbg !35
  %665 = tail call float @llvm.nvvm.fabs.f(float %231) #5, !dbg !35
  %.01.i536 = select i1 %.not.i535, float %665, float %664, !dbg !35
  %666 = fcmp ult float %.01.i536, 0x3FE3333340000000, !dbg !35
  br i1 %666, label %__internal_fmad.exit3.i542, label %__internal_fmad.exit1.i537, !dbg !35

__internal_fmad.exit1.i537:                       ; preds = %__nv_tanhf.exit534
  %667 = fmul float %.01.i536, 0x4007154760000000, !dbg !35
  %668 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %667) #5, !dbg !35
  %669 = fadd float %668, 1.000000e+00, !dbg !35
  %670 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %669) #6, !dbg !35, !srcloc !36
  %671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i538 = icmp eq i32 %671, 0, !dbg !35
  %672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %670, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %673 = tail call float @llvm.nvvm.fma.rn.f(float %670, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i539 = select i1 %.not6.i538, float %673, float %672, !dbg !35
  %674 = fcmp oge float %.01.i536, 0x4022059680000000, !dbg !35
  %s.0.i540 = select i1 %674, float 1.000000e+00, float %.03.i539, !dbg !35
  %675 = bitcast float %s.0.i540 to i32, !dbg !35
  %676 = bitcast float %231 to i32, !dbg !35
  %677 = and i32 %676, -2147483648, !dbg !35
  %678 = or i32 %677, %675, !dbg !35
  %679 = bitcast i32 %678 to float, !dbg !35
  br label %__nv_tanhf.exit553, !dbg !35

__internal_fmad.exit3.i542:                       ; preds = %__nv_tanhf.exit534
  %680 = fmul float %231, %231, !dbg !35
  %681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i543 = icmp eq i32 %681, 0, !dbg !35
  %682 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %680, float 0xBFAAC795C0000000) #5, !dbg !35
  %683 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %680, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i544 = select i1 %.not1.i543, float %683, float %682, !dbg !35
  %684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i545 = icmp eq i32 %684, 0, !dbg !35
  %685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i544, float %680, float 0x3FC10B2820000000) #5, !dbg !35
  %686 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i544, float %680, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i546 = select i1 %.not2.i545, float %686, float %685, !dbg !35
  %687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i547 = icmp eq i32 %687, 0, !dbg !35
  %688 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i546, float %680, float 0xBFD5553DA0000000) #5, !dbg !35
  %689 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i546, float %680, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i548 = select i1 %.not3.i547, float %689, float %688, !dbg !35
  %690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i549 = icmp eq i32 %690, 0, !dbg !35
  %691 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i548, float %680, float 0.000000e+00) #5, !dbg !35
  %692 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i548, float %680, float 0.000000e+00) #5, !dbg !35
  %.04.i550 = select i1 %.not4.i549, float %692, float %691, !dbg !35
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i551 = icmp eq i32 %693, 0, !dbg !35
  %694 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i550, float %231, float %231) #5, !dbg !35
  %695 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i550, float %231, float %231) #5, !dbg !35
  %.02.i552 = select i1 %.not5.i551, float %695, float %694, !dbg !35
  br label %__nv_tanhf.exit553, !dbg !35

__nv_tanhf.exit553:                               ; preds = %__internal_fmad.exit1.i537, %__internal_fmad.exit3.i542
  %s.1.i541 = phi float [ %679, %__internal_fmad.exit1.i537 ], [ %.02.i552, %__internal_fmad.exit3.i542 ], !dbg !35
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i554 = icmp eq i32 %696, 0, !dbg !35
  %697 = tail call float @llvm.nvvm.fabs.ftz.f(float %232) #5, !dbg !35
  %698 = tail call float @llvm.nvvm.fabs.f(float %232) #5, !dbg !35
  %.01.i555 = select i1 %.not.i554, float %698, float %697, !dbg !35
  %699 = fcmp ult float %.01.i555, 0x3FE3333340000000, !dbg !35
  br i1 %699, label %__internal_fmad.exit3.i561, label %__internal_fmad.exit1.i556, !dbg !35

__internal_fmad.exit1.i556:                       ; preds = %__nv_tanhf.exit553
  %700 = fmul float %.01.i555, 0x4007154760000000, !dbg !35
  %701 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %700) #5, !dbg !35
  %702 = fadd float %701, 1.000000e+00, !dbg !35
  %703 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %702) #6, !dbg !35, !srcloc !36
  %704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i557 = icmp eq i32 %704, 0, !dbg !35
  %705 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %703, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %706 = tail call float @llvm.nvvm.fma.rn.f(float %703, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i558 = select i1 %.not6.i557, float %706, float %705, !dbg !35
  %707 = fcmp oge float %.01.i555, 0x4022059680000000, !dbg !35
  %s.0.i559 = select i1 %707, float 1.000000e+00, float %.03.i558, !dbg !35
  %708 = bitcast float %s.0.i559 to i32, !dbg !35
  %709 = bitcast float %232 to i32, !dbg !35
  %710 = and i32 %709, -2147483648, !dbg !35
  %711 = or i32 %710, %708, !dbg !35
  %712 = bitcast i32 %711 to float, !dbg !35
  br label %__nv_tanhf.exit572, !dbg !35

__internal_fmad.exit3.i561:                       ; preds = %__nv_tanhf.exit553
  %713 = fmul float %232, %232, !dbg !35
  %714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i562 = icmp eq i32 %714, 0, !dbg !35
  %715 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %713, float 0xBFAAC795C0000000) #5, !dbg !35
  %716 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %713, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i563 = select i1 %.not1.i562, float %716, float %715, !dbg !35
  %717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i564 = icmp eq i32 %717, 0, !dbg !35
  %718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i563, float %713, float 0x3FC10B2820000000) #5, !dbg !35
  %719 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i563, float %713, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i565 = select i1 %.not2.i564, float %719, float %718, !dbg !35
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i566 = icmp eq i32 %720, 0, !dbg !35
  %721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i565, float %713, float 0xBFD5553DA0000000) #5, !dbg !35
  %722 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i565, float %713, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i567 = select i1 %.not3.i566, float %722, float %721, !dbg !35
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i568 = icmp eq i32 %723, 0, !dbg !35
  %724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i567, float %713, float 0.000000e+00) #5, !dbg !35
  %725 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i567, float %713, float 0.000000e+00) #5, !dbg !35
  %.04.i569 = select i1 %.not4.i568, float %725, float %724, !dbg !35
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i570 = icmp eq i32 %726, 0, !dbg !35
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i569, float %232, float %232) #5, !dbg !35
  %728 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i569, float %232, float %232) #5, !dbg !35
  %.02.i571 = select i1 %.not5.i570, float %728, float %727, !dbg !35
  br label %__nv_tanhf.exit572, !dbg !35

__nv_tanhf.exit572:                               ; preds = %__internal_fmad.exit1.i556, %__internal_fmad.exit3.i561
  %s.1.i560 = phi float [ %712, %__internal_fmad.exit1.i556 ], [ %.02.i571, %__internal_fmad.exit3.i561 ], !dbg !35
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not.i573 = icmp eq i32 %729, 0, !dbg !35
  %730 = tail call float @llvm.nvvm.fabs.ftz.f(float %233) #5, !dbg !35
  %731 = tail call float @llvm.nvvm.fabs.f(float %233) #5, !dbg !35
  %.01.i574 = select i1 %.not.i573, float %731, float %730, !dbg !35
  %732 = fcmp ult float %.01.i574, 0x3FE3333340000000, !dbg !35
  br i1 %732, label %__internal_fmad.exit3.i580, label %__internal_fmad.exit1.i575, !dbg !35

__internal_fmad.exit1.i575:                       ; preds = %__nv_tanhf.exit572
  %733 = fmul float %.01.i574, 0x4007154760000000, !dbg !35
  %734 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %733) #5, !dbg !35
  %735 = fadd float %734, 1.000000e+00, !dbg !35
  %736 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %735) #6, !dbg !35, !srcloc !36
  %737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not6.i576 = icmp eq i32 %737, 0, !dbg !35
  %738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %736, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %739 = tail call float @llvm.nvvm.fma.rn.f(float %736, float -2.000000e+00, float 1.000000e+00) #5, !dbg !35
  %.03.i577 = select i1 %.not6.i576, float %739, float %738, !dbg !35
  %740 = fcmp oge float %.01.i574, 0x4022059680000000, !dbg !35
  %s.0.i578 = select i1 %740, float 1.000000e+00, float %.03.i577, !dbg !35
  %741 = bitcast float %s.0.i578 to i32, !dbg !35
  %742 = bitcast float %233 to i32, !dbg !35
  %743 = and i32 %742, -2147483648, !dbg !35
  %744 = or i32 %743, %741, !dbg !35
  %745 = bitcast i32 %744 to float, !dbg !35
  br label %__nv_tanhf.exit591, !dbg !35

__internal_fmad.exit3.i580:                       ; preds = %__nv_tanhf.exit572
  %746 = fmul float %233, %233, !dbg !35
  %747 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not1.i581 = icmp eq i32 %747, 0, !dbg !35
  %748 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %746, float 0xBFAAC795C0000000) #5, !dbg !35
  %749 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %746, float 0xBFAAC795C0000000) #5, !dbg !35
  %.06.i582 = select i1 %.not1.i581, float %749, float %748, !dbg !35
  %750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not2.i583 = icmp eq i32 %750, 0, !dbg !35
  %751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i582, float %746, float 0x3FC10B2820000000) #5, !dbg !35
  %752 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i582, float %746, float 0x3FC10B2820000000) #5, !dbg !35
  %.05.i584 = select i1 %.not2.i583, float %752, float %751, !dbg !35
  %753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not3.i585 = icmp eq i32 %753, 0, !dbg !35
  %754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i584, float %746, float 0xBFD5553DA0000000) #5, !dbg !35
  %755 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i584, float %746, float 0xBFD5553DA0000000) #5, !dbg !35
  %.0.i586 = select i1 %.not3.i585, float %755, float %754, !dbg !35
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not4.i587 = icmp eq i32 %756, 0, !dbg !35
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i586, float %746, float 0.000000e+00) #5, !dbg !35
  %758 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i586, float %746, float 0.000000e+00) #5, !dbg !35
  %.04.i588 = select i1 %.not4.i587, float %758, float %757, !dbg !35
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !35
  %.not5.i589 = icmp eq i32 %759, 0, !dbg !35
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i588, float %233, float %233) #5, !dbg !35
  %761 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i588, float %233, float %233) #5, !dbg !35
  %.02.i590 = select i1 %.not5.i589, float %761, float %760, !dbg !35
  br label %__nv_tanhf.exit591, !dbg !35

__nv_tanhf.exit591:                               ; preds = %__internal_fmad.exit1.i575, %__internal_fmad.exit3.i580
  %s.1.i579 = phi float [ %745, %__internal_fmad.exit1.i575 ], [ %.02.i590, %__internal_fmad.exit3.i580 ], !dbg !35
  %762 = insertelement <16 x float> poison, float %s.1.i579, i64 0, !dbg !37
  %763 = insertelement <16 x float> %762, float %s.1.i560, i64 1, !dbg !37
  %764 = insertelement <16 x float> %763, float %s.1.i541, i64 2, !dbg !37
  %765 = insertelement <16 x float> %764, float %s.1.i522, i64 3, !dbg !37
  %766 = insertelement <16 x float> %765, float %s.1.i503, i64 4, !dbg !37
  %767 = insertelement <16 x float> %766, float %s.1.i484, i64 5, !dbg !37
  %768 = insertelement <16 x float> %767, float %s.1.i465, i64 6, !dbg !37
  %769 = insertelement <16 x float> %768, float %s.1.i446, i64 7, !dbg !37
  %770 = insertelement <16 x float> %769, float %s.1.i427, i64 8, !dbg !37
  %771 = insertelement <16 x float> %770, float %s.1.i408, i64 9, !dbg !37
  %772 = insertelement <16 x float> %771, float %s.1.i389, i64 10, !dbg !37
  %773 = insertelement <16 x float> %772, float %s.1.i370, i64 11, !dbg !37
  %774 = insertelement <16 x float> %773, float %s.1.i351, i64 12, !dbg !37
  %775 = insertelement <16 x float> %774, float %s.1.i332, i64 13, !dbg !37
  %776 = insertelement <16 x float> %775, float %s.1.i313, i64 14, !dbg !37
  %777 = insertelement <16 x float> %776, float %s.1.i294, i64 15, !dbg !37
  %778 = fadd <16 x float> %777, splat (float 1.000000e+00), !dbg !37
  %779 = fcmp uno <16 x float> %26, zeroinitializer, !dbg !38
  %780 = fcmp uno <16 x float> %25, zeroinitializer, !dbg !42
  %781 = fmul <16 x float> %137, %778, !dbg !44
  %782 = insertelement <16 x i1> poison, i1 %29, i64 0, !dbg !45
  %783 = shufflevector <16 x i1> %782, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !45
  %784 = select <16 x i1> %783, <16 x float> %84, <16 x float> %781, !dbg !45
  %785 = fcmp olt <16 x float> %26, %784, !dbg !46
  %786 = or <16 x i1> %779, %785, !dbg !47
  %787 = select <16 x i1> %786, <16 x float> %26, <16 x float> %784, !dbg !48
  %788 = insertelement <16 x i1> poison, i1 %39, i64 0, !dbg !49
  %789 = shufflevector <16 x i1> %788, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !49
  %790 = select <16 x i1> %789, <16 x float> %787, <16 x float> %26, !dbg !49
  %791 = fcmp ogt <16 x float> %25, %784, !dbg !50
  %792 = or <16 x i1> %780, %791, !dbg !51
  %793 = select <16 x i1> %792, <16 x float> %25, <16 x float> %784, !dbg !52
  %794 = select <16 x i1> %789, <16 x float> %793, <16 x float> %25, !dbg !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4096, !dbg !14
  %795 = icmp samesign ult i64 %indvars.iv, 11264, !dbg !14
  br i1 %795, label %24, label %796, !dbg !14

796:                                              ; preds = %__nv_tanhf.exit591
  %797 = lshr i32 %11, 5, !dbg !11
  %798 = extractelement <16 x float> %790, i64 14, !dbg !54
  %799 = extractelement <16 x float> %790, i64 15, !dbg !54
  %800 = fcmp olt float %799, %798, !dbg !54
  %801 = fcmp uno float %799, 0.000000e+00, !dbg !57
  %802 = or i1 %800, %801, !dbg !58
  %803 = select i1 %802, float %799, float %798, !dbg !59
  %804 = extractelement <16 x float> %790, i64 13, !dbg !54
  %805 = fcmp olt float %803, %804, !dbg !54
  %806 = fcmp uno float %803, 0.000000e+00, !dbg !57
  %807 = or i1 %805, %806, !dbg !58
  %808 = select i1 %807, float %803, float %804, !dbg !59
  %809 = extractelement <16 x float> %790, i64 12, !dbg !54
  %810 = fcmp olt float %808, %809, !dbg !54
  %811 = fcmp uno float %808, 0.000000e+00, !dbg !57
  %812 = or i1 %810, %811, !dbg !58
  %813 = select i1 %812, float %808, float %809, !dbg !59
  %814 = extractelement <16 x float> %790, i64 11, !dbg !54
  %815 = fcmp olt float %813, %814, !dbg !54
  %816 = fcmp uno float %813, 0.000000e+00, !dbg !57
  %817 = or i1 %815, %816, !dbg !58
  %818 = select i1 %817, float %813, float %814, !dbg !59
  %819 = extractelement <16 x float> %790, i64 10, !dbg !54
  %820 = fcmp olt float %818, %819, !dbg !54
  %821 = fcmp uno float %818, 0.000000e+00, !dbg !57
  %822 = or i1 %820, %821, !dbg !58
  %823 = select i1 %822, float %818, float %819, !dbg !59
  %824 = extractelement <16 x float> %790, i64 9, !dbg !54
  %825 = fcmp olt float %823, %824, !dbg !54
  %826 = fcmp uno float %823, 0.000000e+00, !dbg !57
  %827 = or i1 %825, %826, !dbg !58
  %828 = select i1 %827, float %823, float %824, !dbg !59
  %829 = extractelement <16 x float> %790, i64 8, !dbg !54
  %830 = fcmp olt float %828, %829, !dbg !54
  %831 = fcmp uno float %828, 0.000000e+00, !dbg !57
  %832 = or i1 %830, %831, !dbg !58
  %833 = select i1 %832, float %828, float %829, !dbg !59
  %834 = extractelement <16 x float> %790, i64 7, !dbg !54
  %835 = fcmp olt float %833, %834, !dbg !54
  %836 = fcmp uno float %833, 0.000000e+00, !dbg !57
  %837 = or i1 %835, %836, !dbg !58
  %838 = select i1 %837, float %833, float %834, !dbg !59
  %839 = extractelement <16 x float> %790, i64 6, !dbg !54
  %840 = fcmp olt float %838, %839, !dbg !54
  %841 = fcmp uno float %838, 0.000000e+00, !dbg !57
  %842 = or i1 %840, %841, !dbg !58
  %843 = select i1 %842, float %838, float %839, !dbg !59
  %844 = extractelement <16 x float> %790, i64 5, !dbg !54
  %845 = fcmp olt float %843, %844, !dbg !54
  %846 = fcmp uno float %843, 0.000000e+00, !dbg !57
  %847 = or i1 %845, %846, !dbg !58
  %848 = select i1 %847, float %843, float %844, !dbg !59
  %849 = extractelement <16 x float> %790, i64 4, !dbg !54
  %850 = fcmp olt float %848, %849, !dbg !54
  %851 = fcmp uno float %848, 0.000000e+00, !dbg !57
  %852 = or i1 %850, %851, !dbg !58
  %853 = select i1 %852, float %848, float %849, !dbg !59
  %854 = extractelement <16 x float> %790, i64 3, !dbg !54
  %855 = fcmp olt float %853, %854, !dbg !54
  %856 = fcmp uno float %853, 0.000000e+00, !dbg !57
  %857 = or i1 %855, %856, !dbg !58
  %858 = select i1 %857, float %853, float %854, !dbg !59
  %859 = extractelement <16 x float> %790, i64 2, !dbg !54
  %860 = fcmp olt float %858, %859, !dbg !54
  %861 = fcmp uno float %858, 0.000000e+00, !dbg !57
  %862 = or i1 %860, %861, !dbg !58
  %863 = select i1 %862, float %858, float %859, !dbg !59
  %864 = extractelement <16 x float> %790, i64 1, !dbg !54
  %865 = fcmp olt float %863, %864, !dbg !54
  %866 = fcmp uno float %863, 0.000000e+00, !dbg !57
  %867 = or i1 %865, %866, !dbg !58
  %868 = select i1 %867, float %863, float %864, !dbg !59
  %869 = extractelement <16 x float> %790, i64 0, !dbg !54
  %870 = fcmp olt float %868, %869, !dbg !54
  %871 = fcmp uno float %868, 0.000000e+00, !dbg !57
  %872 = or i1 %870, %871, !dbg !58
  %873 = select i1 %872, float %868, float %869, !dbg !59
  %874 = bitcast float %873 to i32, !dbg !60
  %875 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %874, i32 16, i32 31), !dbg !60
  %876 = bitcast i32 %875 to float, !dbg !60
  %877 = fcmp olt float %873, %876, !dbg !54
  %878 = fcmp uno float %873, 0.000000e+00, !dbg !57
  %879 = or i1 %878, %877, !dbg !58
  %880 = select i1 %879, float %873, float %876, !dbg !59
  %881 = bitcast float %880 to i32, !dbg !60
  %882 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %881, i32 8, i32 31), !dbg !60
  %883 = bitcast i32 %882 to float, !dbg !60
  %884 = fcmp olt float %880, %883, !dbg !54
  %885 = fcmp uno float %880, 0.000000e+00, !dbg !57
  %886 = or i1 %884, %885, !dbg !58
  %887 = select i1 %886, float %880, float %883, !dbg !59
  %888 = bitcast float %887 to i32, !dbg !60
  %889 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %888, i32 4, i32 31), !dbg !60
  %890 = bitcast i32 %889 to float, !dbg !60
  %891 = fcmp olt float %887, %890, !dbg !54
  %892 = fcmp uno float %887, 0.000000e+00, !dbg !57
  %893 = or i1 %891, %892, !dbg !58
  %894 = select i1 %893, float %887, float %890, !dbg !59
  %895 = bitcast float %894 to i32, !dbg !60
  %896 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %895, i32 2, i32 31), !dbg !60
  %897 = bitcast i32 %896 to float, !dbg !60
  %898 = fcmp olt float %894, %897, !dbg !54
  %899 = fcmp uno float %894, 0.000000e+00, !dbg !57
  %900 = or i1 %898, %899, !dbg !58
  %901 = select i1 %900, float %894, float %897, !dbg !59
  %902 = bitcast float %901 to i32, !dbg !60
  %903 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %902, i32 1, i32 31), !dbg !60
  %904 = bitcast i32 %903 to float, !dbg !60
  %905 = fcmp olt float %901, %904, !dbg !54
  %906 = fcmp uno float %901, 0.000000e+00, !dbg !57
  %907 = or i1 %905, %906, !dbg !58
  %908 = and i32 %797, 7, !dbg !60
  %909 = icmp eq i32 %12, 0, !dbg !60
  %910 = getelementptr float, ptr addrspace(3) @global_smem, i32 %908, !dbg !60
  %911 = select i1 %907, i32 %902, i32 %903, !dbg !59
  %912 = insertelement <1 x i32> poison, i32 %911, i64 0, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %910, <1 x i32> %912, i1 %909) #5, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %913 = icmp slt i32 %11, 8, !dbg !60
  %914 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !60
  %915 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %914, i1 %913) #5, !dbg !60
  %916 = bitcast i32 %915 to float, !dbg !60
  %917 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %915, i32 4, i32 31), !dbg !60
  %918 = bitcast i32 %917 to float, !dbg !60
  %919 = fcmp olt float %916, %918, !dbg !54
  %920 = fcmp uno float %916, 0.000000e+00, !dbg !57
  %921 = or i1 %920, %919, !dbg !58
  %922 = select i1 %921, float %916, float %918, !dbg !59
  %923 = bitcast float %922 to i32, !dbg !60
  %924 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %923, i32 2, i32 31), !dbg !60
  %925 = bitcast i32 %924 to float, !dbg !60
  %926 = fcmp olt float %922, %925, !dbg !54
  %927 = fcmp uno float %922, 0.000000e+00, !dbg !57
  %928 = or i1 %926, %927, !dbg !58
  %929 = select i1 %928, float %922, float %925, !dbg !59
  %930 = bitcast float %929 to i32, !dbg !60
  %931 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %930, i32 1, i32 31), !dbg !60
  %932 = bitcast i32 %931 to float, !dbg !60
  %933 = fcmp olt float %929, %932, !dbg !54
  %934 = fcmp uno float %929, 0.000000e+00, !dbg !57
  %935 = or i1 %933, %934, !dbg !58
  %936 = and i32 %11, 7, !dbg !60
  %937 = icmp eq i32 %936, 0, !dbg !60
  %938 = and i1 %913, %937, !dbg !60
  %939 = select i1 %935, i32 %930, i32 %931, !dbg !59
  %940 = insertelement <1 x i32> poison, i32 %939, i64 0, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %914, <1 x i32> %940, i1 %938) #5, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %941 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %942 = extractelement <16 x float> %794, i64 14, !dbg !63
  %943 = extractelement <16 x float> %794, i64 15, !dbg !63
  %944 = fcmp ogt float %943, %942, !dbg !63
  %945 = fcmp uno float %943, 0.000000e+00, !dbg !64
  %946 = or i1 %944, %945, !dbg !65
  %947 = select i1 %946, float %943, float %942, !dbg !66
  %948 = extractelement <16 x float> %794, i64 13, !dbg !63
  %949 = fcmp ogt float %947, %948, !dbg !63
  %950 = fcmp uno float %947, 0.000000e+00, !dbg !64
  %951 = or i1 %949, %950, !dbg !65
  %952 = select i1 %951, float %947, float %948, !dbg !66
  %953 = extractelement <16 x float> %794, i64 12, !dbg !63
  %954 = fcmp ogt float %952, %953, !dbg !63
  %955 = fcmp uno float %952, 0.000000e+00, !dbg !64
  %956 = or i1 %954, %955, !dbg !65
  %957 = select i1 %956, float %952, float %953, !dbg !66
  %958 = extractelement <16 x float> %794, i64 11, !dbg !63
  %959 = fcmp ogt float %957, %958, !dbg !63
  %960 = fcmp uno float %957, 0.000000e+00, !dbg !64
  %961 = or i1 %959, %960, !dbg !65
  %962 = select i1 %961, float %957, float %958, !dbg !66
  %963 = extractelement <16 x float> %794, i64 10, !dbg !63
  %964 = fcmp ogt float %962, %963, !dbg !63
  %965 = fcmp uno float %962, 0.000000e+00, !dbg !64
  %966 = or i1 %964, %965, !dbg !65
  %967 = select i1 %966, float %962, float %963, !dbg !66
  %968 = extractelement <16 x float> %794, i64 9, !dbg !63
  %969 = fcmp ogt float %967, %968, !dbg !63
  %970 = fcmp uno float %967, 0.000000e+00, !dbg !64
  %971 = or i1 %969, %970, !dbg !65
  %972 = select i1 %971, float %967, float %968, !dbg !66
  %973 = extractelement <16 x float> %794, i64 8, !dbg !63
  %974 = fcmp ogt float %972, %973, !dbg !63
  %975 = fcmp uno float %972, 0.000000e+00, !dbg !64
  %976 = or i1 %974, %975, !dbg !65
  %977 = select i1 %976, float %972, float %973, !dbg !66
  %978 = extractelement <16 x float> %794, i64 7, !dbg !63
  %979 = fcmp ogt float %977, %978, !dbg !63
  %980 = fcmp uno float %977, 0.000000e+00, !dbg !64
  %981 = or i1 %979, %980, !dbg !65
  %982 = select i1 %981, float %977, float %978, !dbg !66
  %983 = extractelement <16 x float> %794, i64 6, !dbg !63
  %984 = fcmp ogt float %982, %983, !dbg !63
  %985 = fcmp uno float %982, 0.000000e+00, !dbg !64
  %986 = or i1 %984, %985, !dbg !65
  %987 = select i1 %986, float %982, float %983, !dbg !66
  %988 = extractelement <16 x float> %794, i64 5, !dbg !63
  %989 = fcmp ogt float %987, %988, !dbg !63
  %990 = fcmp uno float %987, 0.000000e+00, !dbg !64
  %991 = or i1 %989, %990, !dbg !65
  %992 = select i1 %991, float %987, float %988, !dbg !66
  %993 = extractelement <16 x float> %794, i64 4, !dbg !63
  %994 = fcmp ogt float %992, %993, !dbg !63
  %995 = fcmp uno float %992, 0.000000e+00, !dbg !64
  %996 = or i1 %994, %995, !dbg !65
  %997 = select i1 %996, float %992, float %993, !dbg !66
  %998 = extractelement <16 x float> %794, i64 3, !dbg !63
  %999 = fcmp ogt float %997, %998, !dbg !63
  %1000 = fcmp uno float %997, 0.000000e+00, !dbg !64
  %1001 = or i1 %999, %1000, !dbg !65
  %1002 = select i1 %1001, float %997, float %998, !dbg !66
  %1003 = extractelement <16 x float> %794, i64 2, !dbg !63
  %1004 = fcmp ogt float %1002, %1003, !dbg !63
  %1005 = fcmp uno float %1002, 0.000000e+00, !dbg !64
  %1006 = or i1 %1004, %1005, !dbg !65
  %1007 = select i1 %1006, float %1002, float %1003, !dbg !66
  %1008 = extractelement <16 x float> %794, i64 1, !dbg !63
  %1009 = fcmp ogt float %1007, %1008, !dbg !63
  %1010 = fcmp uno float %1007, 0.000000e+00, !dbg !64
  %1011 = or i1 %1009, %1010, !dbg !65
  %1012 = select i1 %1011, float %1007, float %1008, !dbg !66
  %1013 = extractelement <16 x float> %794, i64 0, !dbg !63
  %1014 = fcmp ogt float %1012, %1013, !dbg !63
  %1015 = fcmp uno float %1012, 0.000000e+00, !dbg !64
  %1016 = or i1 %1014, %1015, !dbg !65
  %1017 = select i1 %1016, float %1012, float %1013, !dbg !66
  %1018 = bitcast float %1017 to i32, !dbg !61
  %1019 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1018, i32 16, i32 31), !dbg !61
  %1020 = bitcast i32 %1019 to float, !dbg !61
  %1021 = fcmp ogt float %1017, %1020, !dbg !63
  %1022 = fcmp uno float %1017, 0.000000e+00, !dbg !64
  %1023 = or i1 %1022, %1021, !dbg !65
  %1024 = select i1 %1023, float %1017, float %1020, !dbg !66
  %1025 = bitcast float %1024 to i32, !dbg !61
  %1026 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1025, i32 8, i32 31), !dbg !61
  %1027 = bitcast i32 %1026 to float, !dbg !61
  %1028 = fcmp ogt float %1024, %1027, !dbg !63
  %1029 = fcmp uno float %1024, 0.000000e+00, !dbg !64
  %1030 = or i1 %1028, %1029, !dbg !65
  %1031 = select i1 %1030, float %1024, float %1027, !dbg !66
  %1032 = bitcast float %1031 to i32, !dbg !61
  %1033 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1032, i32 4, i32 31), !dbg !61
  %1034 = bitcast i32 %1033 to float, !dbg !61
  %1035 = fcmp ogt float %1031, %1034, !dbg !63
  %1036 = fcmp uno float %1031, 0.000000e+00, !dbg !64
  %1037 = or i1 %1035, %1036, !dbg !65
  %1038 = select i1 %1037, float %1031, float %1034, !dbg !66
  %1039 = bitcast float %1038 to i32, !dbg !61
  %1040 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1039, i32 2, i32 31), !dbg !61
  %1041 = bitcast i32 %1040 to float, !dbg !61
  %1042 = fcmp ogt float %1038, %1041, !dbg !63
  %1043 = fcmp uno float %1038, 0.000000e+00, !dbg !64
  %1044 = or i1 %1042, %1043, !dbg !65
  %1045 = select i1 %1044, float %1038, float %1041, !dbg !66
  %1046 = bitcast float %1045 to i32, !dbg !61
  %1047 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1046, i32 1, i32 31), !dbg !61
  %1048 = bitcast i32 %1047 to float, !dbg !61
  %1049 = fcmp ogt float %1045, %1048, !dbg !63
  %1050 = fcmp uno float %1045, 0.000000e+00, !dbg !64
  %1051 = or i1 %1049, %1050, !dbg !65
  %1052 = select i1 %1051, i32 %1046, i32 %1047, !dbg !66
  %1053 = insertelement <1 x i32> poison, i32 %1052, i64 0, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %910, <1 x i32> %1053, i1 %909) #5, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %1054 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %914, i1 %913) #5, !dbg !61
  %1055 = bitcast i32 %1054 to float, !dbg !61
  %1056 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1054, i32 4, i32 31), !dbg !61
  %1057 = bitcast i32 %1056 to float, !dbg !61
  %1058 = fcmp ogt float %1055, %1057, !dbg !63
  %1059 = fcmp uno float %1055, 0.000000e+00, !dbg !64
  %1060 = or i1 %1059, %1058, !dbg !65
  %1061 = select i1 %1060, float %1055, float %1057, !dbg !66
  %1062 = bitcast float %1061 to i32, !dbg !61
  %1063 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1062, i32 2, i32 31), !dbg !61
  %1064 = bitcast i32 %1063 to float, !dbg !61
  %1065 = fcmp ogt float %1061, %1064, !dbg !63
  %1066 = fcmp uno float %1061, 0.000000e+00, !dbg !64
  %1067 = or i1 %1065, %1066, !dbg !65
  %1068 = select i1 %1067, float %1061, float %1064, !dbg !66
  %1069 = bitcast float %1068 to i32, !dbg !61
  %1070 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1069, i32 1, i32 31), !dbg !61
  %1071 = bitcast i32 %1070 to float, !dbg !61
  %1072 = fcmp ogt float %1068, %1071, !dbg !63
  %1073 = fcmp uno float %1068, 0.000000e+00, !dbg !64
  %1074 = or i1 %1072, %1073, !dbg !65
  %1075 = select i1 %1074, i32 %1069, i32 %1070, !dbg !66
  %1076 = insertelement <1 x i32> poison, i32 %1075, i64 0, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %914, <1 x i32> %1076, i1 %938) #5, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %1077 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !61
  %1078 = sext i32 %9 to i64, !dbg !67
  %1079 = getelementptr bfloat, ptr addrspace(1) %2, i64 %1078, !dbg !67
  %1080 = fptrunc float %941 to bfloat, !dbg !68
  %1081 = and i32 %11, 255, !dbg !68
  %1082 = icmp eq i32 %1081, 0, !dbg !68
  %1083 = bitcast bfloat %1080 to i16, !dbg !68
  %1084 = and i1 %10, %1082, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1083, ptr addrspace(1) %1079, i1 %1084) #5, !dbg !68
  %1085 = getelementptr bfloat, ptr addrspace(1) %3, i64 %1078, !dbg !69
  %1086 = fptrunc float %1077 to bfloat, !dbg !70
  %1087 = bitcast bfloat %1086 to i16, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1087, ptr addrspace(1) %1085, i1 %1084) #5, !dbg !70
  %.inv = fcmp oge float %941, 0.000000e+00, !dbg !71
  %1088 = select i1 %.inv, float 0.000000e+00, float %941, !dbg !71
  %1089 = fsub float 0.000000e+00, %1088, !dbg !73
  %.inv2 = fcmp ole float %1077, 0.000000e+00, !dbg !74
  %1090 = select i1 %.inv2, float 0.000000e+00, float %1077, !dbg !74
  %1091 = fcmp ogt float %1089, %1090, !dbg !76
  %1092 = fcmp uno float %1089, 0.000000e+00, !dbg !78
  %1093 = or i1 %1092, %1091, !dbg !79
  %1094 = select i1 %1093, float %1089, float %1090, !dbg !80
  %1095 = fmul float %1094, 0x3F80204080000000, !dbg !81
  %1096 = fcmp ogt float %1095, 0x3EE4F8B580000000, !dbg !82
  %1097 = fcmp uno float %1095, 0.000000e+00, !dbg !84
  %1098 = or i1 %1096, %1097, !dbg !85
  %1099 = select i1 %1098, float %1095, float 0x3EE4F8B580000000, !dbg !86
  %1100 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %1099), !dbg !87
  %1101 = mul i32 %9, 15360, !dbg !88
  br label %1102, !dbg !89

1102:                                             ; preds = %796, %__nv_tanhf.exit287
  %indvars.iv624 = phi i64 [ 0, %796 ], [ %indvars.iv.next625, %__nv_tanhf.exit287 ]
  %1103 = or disjoint i64 %indvars.iv624, %23, !dbg !90
  %1104 = icmp samesign ult i64 %1103, 15360, !dbg !91
  %1105 = icmp samesign ult i64 %1103, 3072, !dbg !92
  %1106 = trunc nuw nsw i64 %1103 to i32, !dbg !93
  %1107 = add i32 %18, %1106, !dbg !93
  %1108 = trunc i64 %indvars.iv624 to i32, !dbg !93
  %1109 = or disjoint i32 %16, %1108, !dbg !93
  %1110 = add i32 %1109, %18, !dbg !93
  %1111 = sext i32 %1107 to i64, !dbg !94
  %1112 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1111, !dbg !94
  %1113 = sext i32 %1110 to i64, !dbg !94
  %1114 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1113, !dbg !94
  %1115 = and i1 %10, %1104, !dbg !95
  %1116 = and i1 %10, %1105, !dbg !96
  %1117 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1112, i1 %1116) #5, !dbg !97
  %1118 = extractvalue { i32, i32, i32, i32 } %1117, 0, !dbg !97
  %1119 = bitcast i32 %1118 to <2 x bfloat>, !dbg !97
  %1120 = extractvalue { i32, i32, i32, i32 } %1117, 1, !dbg !97
  %1121 = bitcast i32 %1120 to <2 x bfloat>, !dbg !97
  %1122 = extractvalue { i32, i32, i32, i32 } %1117, 2, !dbg !97
  %1123 = bitcast i32 %1122 to <2 x bfloat>, !dbg !97
  %1124 = extractvalue { i32, i32, i32, i32 } %1117, 3, !dbg !97
  %1125 = bitcast i32 %1124 to <2 x bfloat>, !dbg !97
  %1126 = extractelement <2 x bfloat> %1119, i64 0, !dbg !97
  %1127 = extractelement <2 x bfloat> %1119, i64 1, !dbg !97
  %1128 = extractelement <2 x bfloat> %1121, i64 0, !dbg !97
  %1129 = extractelement <2 x bfloat> %1121, i64 1, !dbg !97
  %1130 = extractelement <2 x bfloat> %1123, i64 0, !dbg !97
  %1131 = extractelement <2 x bfloat> %1123, i64 1, !dbg !97
  %1132 = extractelement <2 x bfloat> %1125, i64 0, !dbg !97
  %1133 = extractelement <2 x bfloat> %1125, i64 1, !dbg !97
  %1134 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1114, i1 %1116) #5, !dbg !97
  %1135 = extractvalue { i32, i32, i32, i32 } %1134, 0, !dbg !97
  %1136 = bitcast i32 %1135 to <2 x bfloat>, !dbg !97
  %1137 = extractvalue { i32, i32, i32, i32 } %1134, 1, !dbg !97
  %1138 = bitcast i32 %1137 to <2 x bfloat>, !dbg !97
  %1139 = extractvalue { i32, i32, i32, i32 } %1134, 2, !dbg !97
  %1140 = bitcast i32 %1139 to <2 x bfloat>, !dbg !97
  %1141 = extractvalue { i32, i32, i32, i32 } %1134, 3, !dbg !97
  %1142 = bitcast i32 %1141 to <2 x bfloat>, !dbg !97
  %1143 = extractelement <2 x bfloat> %1136, i64 0, !dbg !97
  %1144 = extractelement <2 x bfloat> %1136, i64 1, !dbg !97
  %1145 = extractelement <2 x bfloat> %1138, i64 0, !dbg !97
  %1146 = extractelement <2 x bfloat> %1138, i64 1, !dbg !97
  %1147 = extractelement <2 x bfloat> %1140, i64 0, !dbg !97
  %1148 = extractelement <2 x bfloat> %1140, i64 1, !dbg !97
  %1149 = extractelement <2 x bfloat> %1142, i64 0, !dbg !97
  %1150 = extractelement <2 x bfloat> %1142, i64 1, !dbg !97
  %1151 = fpext bfloat %1126 to float, !dbg !98
  %1152 = fpext bfloat %1127 to float, !dbg !98
  %1153 = fpext bfloat %1128 to float, !dbg !98
  %1154 = fpext bfloat %1129 to float, !dbg !98
  %1155 = fpext bfloat %1130 to float, !dbg !98
  %1156 = fpext bfloat %1131 to float, !dbg !98
  %1157 = fpext bfloat %1132 to float, !dbg !98
  %1158 = fpext bfloat %1133 to float, !dbg !98
  %1159 = fpext bfloat %1143 to float, !dbg !98
  %1160 = fpext bfloat %1144 to float, !dbg !98
  %1161 = fpext bfloat %1145 to float, !dbg !98
  %1162 = fpext bfloat %1146 to float, !dbg !98
  %1163 = fpext bfloat %1147 to float, !dbg !98
  %1164 = fpext bfloat %1148 to float, !dbg !98
  %1165 = fpext bfloat %1149 to float, !dbg !98
  %1166 = fpext bfloat %1150 to float, !dbg !98
  %1167 = icmp samesign ugt i64 %1103, 3071, !dbg !99
  %1168 = add i32 %20, %1106, !dbg !100
  %1169 = trunc nuw nsw i64 %indvars.iv624 to i32, !dbg !100
  %1170 = add i32 %21, %1169, !dbg !100
  %1171 = add i32 %20, %1109, !dbg !100
  %1172 = add i32 %22, %1169, !dbg !100
  %1173 = sext i32 %1168 to i64, !dbg !101
  %1174 = getelementptr float, ptr addrspace(1) %1, i64 %1173, !dbg !101
  %1175 = sext i32 %1170 to i64, !dbg !101
  %1176 = getelementptr float, ptr addrspace(1) %1, i64 %1175, !dbg !101
  %1177 = sext i32 %1171 to i64, !dbg !101
  %1178 = getelementptr float, ptr addrspace(1) %1, i64 %1177, !dbg !101
  %1179 = sext i32 %1172 to i64, !dbg !101
  %1180 = getelementptr float, ptr addrspace(1) %1, i64 %1179, !dbg !101
  %1181 = and i1 %1167, %1115, !dbg !102
  %1182 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1174, i1 %1181) #5, !dbg !103
  %1183 = extractvalue { i32, i32, i32, i32 } %1182, 0, !dbg !103
  %1184 = extractvalue { i32, i32, i32, i32 } %1182, 1, !dbg !103
  %1185 = extractvalue { i32, i32, i32, i32 } %1182, 2, !dbg !103
  %1186 = extractvalue { i32, i32, i32, i32 } %1182, 3, !dbg !103
  %1187 = bitcast i32 %1183 to float, !dbg !103
  %1188 = bitcast i32 %1184 to float, !dbg !103
  %1189 = bitcast i32 %1185 to float, !dbg !103
  %1190 = bitcast i32 %1186 to float, !dbg !103
  %1191 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1176, i1 %1181) #5, !dbg !103
  %1192 = extractvalue { i32, i32, i32, i32 } %1191, 0, !dbg !103
  %1193 = extractvalue { i32, i32, i32, i32 } %1191, 1, !dbg !103
  %1194 = extractvalue { i32, i32, i32, i32 } %1191, 2, !dbg !103
  %1195 = extractvalue { i32, i32, i32, i32 } %1191, 3, !dbg !103
  %1196 = bitcast i32 %1192 to float, !dbg !103
  %1197 = bitcast i32 %1193 to float, !dbg !103
  %1198 = bitcast i32 %1194 to float, !dbg !103
  %1199 = bitcast i32 %1195 to float, !dbg !103
  %1200 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1178, i1 %1181) #5, !dbg !103
  %1201 = extractvalue { i32, i32, i32, i32 } %1200, 0, !dbg !103
  %1202 = extractvalue { i32, i32, i32, i32 } %1200, 1, !dbg !103
  %1203 = extractvalue { i32, i32, i32, i32 } %1200, 2, !dbg !103
  %1204 = extractvalue { i32, i32, i32, i32 } %1200, 3, !dbg !103
  %1205 = bitcast i32 %1201 to float, !dbg !103
  %1206 = bitcast i32 %1202 to float, !dbg !103
  %1207 = bitcast i32 %1203 to float, !dbg !103
  %1208 = bitcast i32 %1204 to float, !dbg !103
  %1209 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1180, i1 %1181) #5, !dbg !103
  %1210 = extractvalue { i32, i32, i32, i32 } %1209, 0, !dbg !103
  %1211 = extractvalue { i32, i32, i32, i32 } %1209, 1, !dbg !103
  %1212 = extractvalue { i32, i32, i32, i32 } %1209, 2, !dbg !103
  %1213 = extractvalue { i32, i32, i32, i32 } %1209, 3, !dbg !103
  %1214 = bitcast i32 %1210 to float, !dbg !103
  %1215 = bitcast i32 %1211 to float, !dbg !103
  %1216 = bitcast i32 %1212 to float, !dbg !103
  %1217 = bitcast i32 %1213 to float, !dbg !103
  %1218 = fmul float %1187, 5.000000e-01, !dbg !104
  %1219 = fmul float %1188, 5.000000e-01, !dbg !104
  %1220 = fmul float %1189, 5.000000e-01, !dbg !104
  %1221 = fmul float %1190, 5.000000e-01, !dbg !104
  %1222 = fmul float %1196, 5.000000e-01, !dbg !104
  %1223 = fmul float %1197, 5.000000e-01, !dbg !104
  %1224 = fmul float %1198, 5.000000e-01, !dbg !104
  %1225 = fmul float %1199, 5.000000e-01, !dbg !104
  %1226 = fmul float %1205, 5.000000e-01, !dbg !104
  %1227 = fmul float %1206, 5.000000e-01, !dbg !104
  %1228 = fmul float %1207, 5.000000e-01, !dbg !104
  %1229 = fmul float %1208, 5.000000e-01, !dbg !104
  %1230 = fmul float %1214, 5.000000e-01, !dbg !104
  %1231 = fmul float %1215, 5.000000e-01, !dbg !104
  %1232 = fmul float %1216, 5.000000e-01, !dbg !104
  %1233 = fmul float %1217, 5.000000e-01, !dbg !104
  %1234 = fmul float %1187, %1187, !dbg !105
  %1235 = fmul float %1188, %1188, !dbg !105
  %1236 = fmul float %1189, %1189, !dbg !105
  %1237 = fmul float %1190, %1190, !dbg !105
  %1238 = fmul float %1196, %1196, !dbg !105
  %1239 = fmul float %1197, %1197, !dbg !105
  %1240 = fmul float %1198, %1198, !dbg !105
  %1241 = fmul float %1199, %1199, !dbg !105
  %1242 = fmul float %1205, %1205, !dbg !105
  %1243 = fmul float %1206, %1206, !dbg !105
  %1244 = fmul float %1207, %1207, !dbg !105
  %1245 = fmul float %1208, %1208, !dbg !105
  %1246 = fmul float %1214, %1214, !dbg !105
  %1247 = fmul float %1215, %1215, !dbg !105
  %1248 = fmul float %1216, %1216, !dbg !105
  %1249 = fmul float %1217, %1217, !dbg !105
  %1250 = fmul float %1234, %1187, !dbg !106
  %1251 = fmul float %1235, %1188, !dbg !106
  %1252 = fmul float %1236, %1189, !dbg !106
  %1253 = fmul float %1237, %1190, !dbg !106
  %1254 = fmul float %1238, %1196, !dbg !106
  %1255 = fmul float %1239, %1197, !dbg !106
  %1256 = fmul float %1240, %1198, !dbg !106
  %1257 = fmul float %1241, %1199, !dbg !106
  %1258 = fmul float %1242, %1205, !dbg !106
  %1259 = fmul float %1243, %1206, !dbg !106
  %1260 = fmul float %1244, %1207, !dbg !106
  %1261 = fmul float %1245, %1208, !dbg !106
  %1262 = fmul float %1246, %1214, !dbg !106
  %1263 = fmul float %1247, %1215, !dbg !106
  %1264 = fmul float %1248, %1216, !dbg !106
  %1265 = fmul float %1249, %1217, !dbg !106
  %1266 = fmul float %1250, 0x3FA6E4E260000000, !dbg !107
  %1267 = fmul float %1251, 0x3FA6E4E260000000, !dbg !107
  %1268 = fmul float %1252, 0x3FA6E4E260000000, !dbg !107
  %1269 = fmul float %1253, 0x3FA6E4E260000000, !dbg !107
  %1270 = fmul float %1254, 0x3FA6E4E260000000, !dbg !107
  %1271 = fmul float %1255, 0x3FA6E4E260000000, !dbg !107
  %1272 = fmul float %1256, 0x3FA6E4E260000000, !dbg !107
  %1273 = fmul float %1257, 0x3FA6E4E260000000, !dbg !107
  %1274 = fmul float %1258, 0x3FA6E4E260000000, !dbg !107
  %1275 = fmul float %1259, 0x3FA6E4E260000000, !dbg !107
  %1276 = fmul float %1260, 0x3FA6E4E260000000, !dbg !107
  %1277 = fmul float %1261, 0x3FA6E4E260000000, !dbg !107
  %1278 = fmul float %1262, 0x3FA6E4E260000000, !dbg !107
  %1279 = fmul float %1263, 0x3FA6E4E260000000, !dbg !107
  %1280 = fmul float %1264, 0x3FA6E4E260000000, !dbg !107
  %1281 = fmul float %1265, 0x3FA6E4E260000000, !dbg !107
  %1282 = fadd float %1266, %1187, !dbg !108
  %1283 = fadd float %1267, %1188, !dbg !108
  %1284 = fadd float %1268, %1189, !dbg !108
  %1285 = fadd float %1269, %1190, !dbg !108
  %1286 = fadd float %1270, %1196, !dbg !108
  %1287 = fadd float %1271, %1197, !dbg !108
  %1288 = fadd float %1272, %1198, !dbg !108
  %1289 = fadd float %1273, %1199, !dbg !108
  %1290 = fadd float %1274, %1205, !dbg !108
  %1291 = fadd float %1275, %1206, !dbg !108
  %1292 = fadd float %1276, %1207, !dbg !108
  %1293 = fadd float %1277, %1208, !dbg !108
  %1294 = fadd float %1278, %1214, !dbg !108
  %1295 = fadd float %1279, %1215, !dbg !108
  %1296 = fadd float %1280, %1216, !dbg !108
  %1297 = fadd float %1281, %1217, !dbg !108
  %1298 = fmul float %1282, 0x3FE9884540000000, !dbg !109
  %1299 = fmul float %1283, 0x3FE9884540000000, !dbg !109
  %1300 = fmul float %1284, 0x3FE9884540000000, !dbg !109
  %1301 = fmul float %1285, 0x3FE9884540000000, !dbg !109
  %1302 = fmul float %1286, 0x3FE9884540000000, !dbg !109
  %1303 = fmul float %1287, 0x3FE9884540000000, !dbg !109
  %1304 = fmul float %1288, 0x3FE9884540000000, !dbg !109
  %1305 = fmul float %1289, 0x3FE9884540000000, !dbg !109
  %1306 = fmul float %1290, 0x3FE9884540000000, !dbg !109
  %1307 = fmul float %1291, 0x3FE9884540000000, !dbg !109
  %1308 = fmul float %1292, 0x3FE9884540000000, !dbg !109
  %1309 = fmul float %1293, 0x3FE9884540000000, !dbg !109
  %1310 = fmul float %1294, 0x3FE9884540000000, !dbg !109
  %1311 = fmul float %1295, 0x3FE9884540000000, !dbg !109
  %1312 = fmul float %1296, 0x3FE9884540000000, !dbg !109
  %1313 = fmul float %1297, 0x3FE9884540000000, !dbg !109
  %1314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i = icmp eq i32 %1314, 0, !dbg !110
  %1315 = tail call float @llvm.nvvm.fabs.ftz.f(float %1298) #5, !dbg !110
  %1316 = tail call float @llvm.nvvm.fabs.f(float %1298) #5, !dbg !110
  %.01.i = select i1 %.not.i, float %1316, float %1315, !dbg !110
  %1317 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !110
  br i1 %1317, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !110

__internal_fmad.exit1.i:                          ; preds = %1102
  %1318 = fmul float %.01.i, 0x4007154760000000, !dbg !110
  %1319 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1318) #5, !dbg !110
  %1320 = fadd float %1319, 1.000000e+00, !dbg !110
  %1321 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1320) #6, !dbg !110, !srcloc !36
  %1322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i = icmp eq i32 %1322, 0, !dbg !110
  %1323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1321, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1324 = tail call float @llvm.nvvm.fma.rn.f(float %1321, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i = select i1 %.not6.i, float %1324, float %1323, !dbg !110
  %1325 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !110
  %s.0.i = select i1 %1325, float 1.000000e+00, float %.03.i, !dbg !110
  %1326 = bitcast float %s.0.i to i32, !dbg !110
  %1327 = bitcast float %1298 to i32, !dbg !110
  %1328 = and i32 %1327, -2147483648, !dbg !110
  %1329 = or i32 %1328, %1326, !dbg !110
  %1330 = bitcast i32 %1329 to float, !dbg !110
  br label %__nv_tanhf.exit, !dbg !110

__internal_fmad.exit3.i:                          ; preds = %1102
  %1331 = fmul float %1298, %1298, !dbg !110
  %1332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i = icmp eq i32 %1332, 0, !dbg !110
  %1333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1331, float 0xBFAAC795C0000000) #5, !dbg !110
  %1334 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1331, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i = select i1 %.not1.i, float %1334, float %1333, !dbg !110
  %1335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i = icmp eq i32 %1335, 0, !dbg !110
  %1336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %1331, float 0x3FC10B2820000000) #5, !dbg !110
  %1337 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %1331, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i = select i1 %.not2.i, float %1337, float %1336, !dbg !110
  %1338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i = icmp eq i32 %1338, 0, !dbg !110
  %1339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %1331, float 0xBFD5553DA0000000) #5, !dbg !110
  %1340 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %1331, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i = select i1 %.not3.i, float %1340, float %1339, !dbg !110
  %1341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i = icmp eq i32 %1341, 0, !dbg !110
  %1342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %1331, float 0.000000e+00) #5, !dbg !110
  %1343 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %1331, float 0.000000e+00) #5, !dbg !110
  %.04.i = select i1 %.not4.i, float %1343, float %1342, !dbg !110
  %1344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i = icmp eq i32 %1344, 0, !dbg !110
  %1345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %1298, float %1298) #5, !dbg !110
  %1346 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %1298, float %1298) #5, !dbg !110
  %.02.i = select i1 %.not5.i, float %1346, float %1345, !dbg !110
  br label %__nv_tanhf.exit, !dbg !110

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %1330, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !110
  %1347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i3 = icmp eq i32 %1347, 0, !dbg !110
  %1348 = tail call float @llvm.nvvm.fabs.ftz.f(float %1299) #5, !dbg !110
  %1349 = tail call float @llvm.nvvm.fabs.f(float %1299) #5, !dbg !110
  %.01.i4 = select i1 %.not.i3, float %1349, float %1348, !dbg !110
  %1350 = fcmp ult float %.01.i4, 0x3FE3333340000000, !dbg !110
  br i1 %1350, label %__internal_fmad.exit3.i10, label %__internal_fmad.exit1.i5, !dbg !110

__internal_fmad.exit1.i5:                         ; preds = %__nv_tanhf.exit
  %1351 = fmul float %.01.i4, 0x4007154760000000, !dbg !110
  %1352 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1351) #5, !dbg !110
  %1353 = fadd float %1352, 1.000000e+00, !dbg !110
  %1354 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1353) #6, !dbg !110, !srcloc !36
  %1355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i6 = icmp eq i32 %1355, 0, !dbg !110
  %1356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1354, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1357 = tail call float @llvm.nvvm.fma.rn.f(float %1354, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i7 = select i1 %.not6.i6, float %1357, float %1356, !dbg !110
  %1358 = fcmp oge float %.01.i4, 0x4022059680000000, !dbg !110
  %s.0.i8 = select i1 %1358, float 1.000000e+00, float %.03.i7, !dbg !110
  %1359 = bitcast float %s.0.i8 to i32, !dbg !110
  %1360 = bitcast float %1299 to i32, !dbg !110
  %1361 = and i32 %1360, -2147483648, !dbg !110
  %1362 = or i32 %1361, %1359, !dbg !110
  %1363 = bitcast i32 %1362 to float, !dbg !110
  br label %__nv_tanhf.exit21, !dbg !110

__internal_fmad.exit3.i10:                        ; preds = %__nv_tanhf.exit
  %1364 = fmul float %1299, %1299, !dbg !110
  %1365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i11 = icmp eq i32 %1365, 0, !dbg !110
  %1366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1364, float 0xBFAAC795C0000000) #5, !dbg !110
  %1367 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1364, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i12 = select i1 %.not1.i11, float %1367, float %1366, !dbg !110
  %1368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i13 = icmp eq i32 %1368, 0, !dbg !110
  %1369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i12, float %1364, float 0x3FC10B2820000000) #5, !dbg !110
  %1370 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i12, float %1364, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i14 = select i1 %.not2.i13, float %1370, float %1369, !dbg !110
  %1371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i15 = icmp eq i32 %1371, 0, !dbg !110
  %1372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %1364, float 0xBFD5553DA0000000) #5, !dbg !110
  %1373 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %1364, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i16 = select i1 %.not3.i15, float %1373, float %1372, !dbg !110
  %1374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i17 = icmp eq i32 %1374, 0, !dbg !110
  %1375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i16, float %1364, float 0.000000e+00) #5, !dbg !110
  %1376 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i16, float %1364, float 0.000000e+00) #5, !dbg !110
  %.04.i18 = select i1 %.not4.i17, float %1376, float %1375, !dbg !110
  %1377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i19 = icmp eq i32 %1377, 0, !dbg !110
  %1378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %1299, float %1299) #5, !dbg !110
  %1379 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %1299, float %1299) #5, !dbg !110
  %.02.i20 = select i1 %.not5.i19, float %1379, float %1378, !dbg !110
  br label %__nv_tanhf.exit21, !dbg !110

__nv_tanhf.exit21:                                ; preds = %__internal_fmad.exit1.i5, %__internal_fmad.exit3.i10
  %s.1.i9 = phi float [ %1363, %__internal_fmad.exit1.i5 ], [ %.02.i20, %__internal_fmad.exit3.i10 ], !dbg !110
  %1380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i22 = icmp eq i32 %1380, 0, !dbg !110
  %1381 = tail call float @llvm.nvvm.fabs.ftz.f(float %1300) #5, !dbg !110
  %1382 = tail call float @llvm.nvvm.fabs.f(float %1300) #5, !dbg !110
  %.01.i23 = select i1 %.not.i22, float %1382, float %1381, !dbg !110
  %1383 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !110
  br i1 %1383, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !110

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit21
  %1384 = fmul float %.01.i23, 0x4007154760000000, !dbg !110
  %1385 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1384) #5, !dbg !110
  %1386 = fadd float %1385, 1.000000e+00, !dbg !110
  %1387 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1386) #6, !dbg !110, !srcloc !36
  %1388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i25 = icmp eq i32 %1388, 0, !dbg !110
  %1389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1387, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1390 = tail call float @llvm.nvvm.fma.rn.f(float %1387, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i26 = select i1 %.not6.i25, float %1390, float %1389, !dbg !110
  %1391 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !110
  %s.0.i27 = select i1 %1391, float 1.000000e+00, float %.03.i26, !dbg !110
  %1392 = bitcast float %s.0.i27 to i32, !dbg !110
  %1393 = bitcast float %1300 to i32, !dbg !110
  %1394 = and i32 %1393, -2147483648, !dbg !110
  %1395 = or i32 %1394, %1392, !dbg !110
  %1396 = bitcast i32 %1395 to float, !dbg !110
  br label %__nv_tanhf.exit40, !dbg !110

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit21
  %1397 = fmul float %1300, %1300, !dbg !110
  %1398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i30 = icmp eq i32 %1398, 0, !dbg !110
  %1399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1397, float 0xBFAAC795C0000000) #5, !dbg !110
  %1400 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1397, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i31 = select i1 %.not1.i30, float %1400, float %1399, !dbg !110
  %1401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i32 = icmp eq i32 %1401, 0, !dbg !110
  %1402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %1397, float 0x3FC10B2820000000) #5, !dbg !110
  %1403 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %1397, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i33 = select i1 %.not2.i32, float %1403, float %1402, !dbg !110
  %1404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i34 = icmp eq i32 %1404, 0, !dbg !110
  %1405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %1397, float 0xBFD5553DA0000000) #5, !dbg !110
  %1406 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %1397, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i35 = select i1 %.not3.i34, float %1406, float %1405, !dbg !110
  %1407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i36 = icmp eq i32 %1407, 0, !dbg !110
  %1408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %1397, float 0.000000e+00) #5, !dbg !110
  %1409 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %1397, float 0.000000e+00) #5, !dbg !110
  %.04.i37 = select i1 %.not4.i36, float %1409, float %1408, !dbg !110
  %1410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i38 = icmp eq i32 %1410, 0, !dbg !110
  %1411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %1300, float %1300) #5, !dbg !110
  %1412 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %1300, float %1300) #5, !dbg !110
  %.02.i39 = select i1 %.not5.i38, float %1412, float %1411, !dbg !110
  br label %__nv_tanhf.exit40, !dbg !110

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %1396, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !110
  %1413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i41 = icmp eq i32 %1413, 0, !dbg !110
  %1414 = tail call float @llvm.nvvm.fabs.ftz.f(float %1301) #5, !dbg !110
  %1415 = tail call float @llvm.nvvm.fabs.f(float %1301) #5, !dbg !110
  %.01.i42 = select i1 %.not.i41, float %1415, float %1414, !dbg !110
  %1416 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !110
  br i1 %1416, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !110

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %1417 = fmul float %.01.i42, 0x4007154760000000, !dbg !110
  %1418 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1417) #5, !dbg !110
  %1419 = fadd float %1418, 1.000000e+00, !dbg !110
  %1420 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1419) #6, !dbg !110, !srcloc !36
  %1421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i44 = icmp eq i32 %1421, 0, !dbg !110
  %1422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1420, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1423 = tail call float @llvm.nvvm.fma.rn.f(float %1420, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i45 = select i1 %.not6.i44, float %1423, float %1422, !dbg !110
  %1424 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !110
  %s.0.i46 = select i1 %1424, float 1.000000e+00, float %.03.i45, !dbg !110
  %1425 = bitcast float %s.0.i46 to i32, !dbg !110
  %1426 = bitcast float %1301 to i32, !dbg !110
  %1427 = and i32 %1426, -2147483648, !dbg !110
  %1428 = or i32 %1427, %1425, !dbg !110
  %1429 = bitcast i32 %1428 to float, !dbg !110
  br label %__nv_tanhf.exit59, !dbg !110

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %1430 = fmul float %1301, %1301, !dbg !110
  %1431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i49 = icmp eq i32 %1431, 0, !dbg !110
  %1432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1430, float 0xBFAAC795C0000000) #5, !dbg !110
  %1433 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1430, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i50 = select i1 %.not1.i49, float %1433, float %1432, !dbg !110
  %1434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i51 = icmp eq i32 %1434, 0, !dbg !110
  %1435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %1430, float 0x3FC10B2820000000) #5, !dbg !110
  %1436 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %1430, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i52 = select i1 %.not2.i51, float %1436, float %1435, !dbg !110
  %1437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i53 = icmp eq i32 %1437, 0, !dbg !110
  %1438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %1430, float 0xBFD5553DA0000000) #5, !dbg !110
  %1439 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %1430, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i54 = select i1 %.not3.i53, float %1439, float %1438, !dbg !110
  %1440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i55 = icmp eq i32 %1440, 0, !dbg !110
  %1441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %1430, float 0.000000e+00) #5, !dbg !110
  %1442 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %1430, float 0.000000e+00) #5, !dbg !110
  %.04.i56 = select i1 %.not4.i55, float %1442, float %1441, !dbg !110
  %1443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i57 = icmp eq i32 %1443, 0, !dbg !110
  %1444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %1301, float %1301) #5, !dbg !110
  %1445 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %1301, float %1301) #5, !dbg !110
  %.02.i58 = select i1 %.not5.i57, float %1445, float %1444, !dbg !110
  br label %__nv_tanhf.exit59, !dbg !110

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %1429, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !110
  %1446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i60 = icmp eq i32 %1446, 0, !dbg !110
  %1447 = tail call float @llvm.nvvm.fabs.ftz.f(float %1302) #5, !dbg !110
  %1448 = tail call float @llvm.nvvm.fabs.f(float %1302) #5, !dbg !110
  %.01.i61 = select i1 %.not.i60, float %1448, float %1447, !dbg !110
  %1449 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !110
  br i1 %1449, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !110

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %1450 = fmul float %.01.i61, 0x4007154760000000, !dbg !110
  %1451 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1450) #5, !dbg !110
  %1452 = fadd float %1451, 1.000000e+00, !dbg !110
  %1453 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1452) #6, !dbg !110, !srcloc !36
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i63 = icmp eq i32 %1454, 0, !dbg !110
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1453, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %1453, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i64 = select i1 %.not6.i63, float %1456, float %1455, !dbg !110
  %1457 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !110
  %s.0.i65 = select i1 %1457, float 1.000000e+00, float %.03.i64, !dbg !110
  %1458 = bitcast float %s.0.i65 to i32, !dbg !110
  %1459 = bitcast float %1302 to i32, !dbg !110
  %1460 = and i32 %1459, -2147483648, !dbg !110
  %1461 = or i32 %1460, %1458, !dbg !110
  %1462 = bitcast i32 %1461 to float, !dbg !110
  br label %__nv_tanhf.exit78, !dbg !110

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %1463 = fmul float %1302, %1302, !dbg !110
  %1464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i68 = icmp eq i32 %1464, 0, !dbg !110
  %1465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1463, float 0xBFAAC795C0000000) #5, !dbg !110
  %1466 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1463, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i69 = select i1 %.not1.i68, float %1466, float %1465, !dbg !110
  %1467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i70 = icmp eq i32 %1467, 0, !dbg !110
  %1468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %1463, float 0x3FC10B2820000000) #5, !dbg !110
  %1469 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %1463, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i71 = select i1 %.not2.i70, float %1469, float %1468, !dbg !110
  %1470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i72 = icmp eq i32 %1470, 0, !dbg !110
  %1471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %1463, float 0xBFD5553DA0000000) #5, !dbg !110
  %1472 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %1463, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i73 = select i1 %.not3.i72, float %1472, float %1471, !dbg !110
  %1473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i74 = icmp eq i32 %1473, 0, !dbg !110
  %1474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %1463, float 0.000000e+00) #5, !dbg !110
  %1475 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %1463, float 0.000000e+00) #5, !dbg !110
  %.04.i75 = select i1 %.not4.i74, float %1475, float %1474, !dbg !110
  %1476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i76 = icmp eq i32 %1476, 0, !dbg !110
  %1477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %1302, float %1302) #5, !dbg !110
  %1478 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %1302, float %1302) #5, !dbg !110
  %.02.i77 = select i1 %.not5.i76, float %1478, float %1477, !dbg !110
  br label %__nv_tanhf.exit78, !dbg !110

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %1462, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !110
  %1479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i79 = icmp eq i32 %1479, 0, !dbg !110
  %1480 = tail call float @llvm.nvvm.fabs.ftz.f(float %1303) #5, !dbg !110
  %1481 = tail call float @llvm.nvvm.fabs.f(float %1303) #5, !dbg !110
  %.01.i80 = select i1 %.not.i79, float %1481, float %1480, !dbg !110
  %1482 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !110
  br i1 %1482, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !110

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %1483 = fmul float %.01.i80, 0x4007154760000000, !dbg !110
  %1484 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1483) #5, !dbg !110
  %1485 = fadd float %1484, 1.000000e+00, !dbg !110
  %1486 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1485) #6, !dbg !110, !srcloc !36
  %1487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i82 = icmp eq i32 %1487, 0, !dbg !110
  %1488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1486, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1489 = tail call float @llvm.nvvm.fma.rn.f(float %1486, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i83 = select i1 %.not6.i82, float %1489, float %1488, !dbg !110
  %1490 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !110
  %s.0.i84 = select i1 %1490, float 1.000000e+00, float %.03.i83, !dbg !110
  %1491 = bitcast float %s.0.i84 to i32, !dbg !110
  %1492 = bitcast float %1303 to i32, !dbg !110
  %1493 = and i32 %1492, -2147483648, !dbg !110
  %1494 = or i32 %1493, %1491, !dbg !110
  %1495 = bitcast i32 %1494 to float, !dbg !110
  br label %__nv_tanhf.exit97, !dbg !110

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %1496 = fmul float %1303, %1303, !dbg !110
  %1497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i87 = icmp eq i32 %1497, 0, !dbg !110
  %1498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1496, float 0xBFAAC795C0000000) #5, !dbg !110
  %1499 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1496, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i88 = select i1 %.not1.i87, float %1499, float %1498, !dbg !110
  %1500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i89 = icmp eq i32 %1500, 0, !dbg !110
  %1501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %1496, float 0x3FC10B2820000000) #5, !dbg !110
  %1502 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %1496, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i90 = select i1 %.not2.i89, float %1502, float %1501, !dbg !110
  %1503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i91 = icmp eq i32 %1503, 0, !dbg !110
  %1504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %1496, float 0xBFD5553DA0000000) #5, !dbg !110
  %1505 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %1496, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i92 = select i1 %.not3.i91, float %1505, float %1504, !dbg !110
  %1506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i93 = icmp eq i32 %1506, 0, !dbg !110
  %1507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %1496, float 0.000000e+00) #5, !dbg !110
  %1508 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %1496, float 0.000000e+00) #5, !dbg !110
  %.04.i94 = select i1 %.not4.i93, float %1508, float %1507, !dbg !110
  %1509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i95 = icmp eq i32 %1509, 0, !dbg !110
  %1510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %1303, float %1303) #5, !dbg !110
  %1511 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %1303, float %1303) #5, !dbg !110
  %.02.i96 = select i1 %.not5.i95, float %1511, float %1510, !dbg !110
  br label %__nv_tanhf.exit97, !dbg !110

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %1495, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !110
  %1512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i98 = icmp eq i32 %1512, 0, !dbg !110
  %1513 = tail call float @llvm.nvvm.fabs.ftz.f(float %1304) #5, !dbg !110
  %1514 = tail call float @llvm.nvvm.fabs.f(float %1304) #5, !dbg !110
  %.01.i99 = select i1 %.not.i98, float %1514, float %1513, !dbg !110
  %1515 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !110
  br i1 %1515, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !110

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %1516 = fmul float %.01.i99, 0x4007154760000000, !dbg !110
  %1517 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1516) #5, !dbg !110
  %1518 = fadd float %1517, 1.000000e+00, !dbg !110
  %1519 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1518) #6, !dbg !110, !srcloc !36
  %1520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i101 = icmp eq i32 %1520, 0, !dbg !110
  %1521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1519, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1522 = tail call float @llvm.nvvm.fma.rn.f(float %1519, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i102 = select i1 %.not6.i101, float %1522, float %1521, !dbg !110
  %1523 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !110
  %s.0.i103 = select i1 %1523, float 1.000000e+00, float %.03.i102, !dbg !110
  %1524 = bitcast float %s.0.i103 to i32, !dbg !110
  %1525 = bitcast float %1304 to i32, !dbg !110
  %1526 = and i32 %1525, -2147483648, !dbg !110
  %1527 = or i32 %1526, %1524, !dbg !110
  %1528 = bitcast i32 %1527 to float, !dbg !110
  br label %__nv_tanhf.exit116, !dbg !110

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %1529 = fmul float %1304, %1304, !dbg !110
  %1530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i106 = icmp eq i32 %1530, 0, !dbg !110
  %1531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1529, float 0xBFAAC795C0000000) #5, !dbg !110
  %1532 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1529, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i107 = select i1 %.not1.i106, float %1532, float %1531, !dbg !110
  %1533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i108 = icmp eq i32 %1533, 0, !dbg !110
  %1534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %1529, float 0x3FC10B2820000000) #5, !dbg !110
  %1535 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %1529, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i109 = select i1 %.not2.i108, float %1535, float %1534, !dbg !110
  %1536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i110 = icmp eq i32 %1536, 0, !dbg !110
  %1537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %1529, float 0xBFD5553DA0000000) #5, !dbg !110
  %1538 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %1529, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i111 = select i1 %.not3.i110, float %1538, float %1537, !dbg !110
  %1539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i112 = icmp eq i32 %1539, 0, !dbg !110
  %1540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %1529, float 0.000000e+00) #5, !dbg !110
  %1541 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %1529, float 0.000000e+00) #5, !dbg !110
  %.04.i113 = select i1 %.not4.i112, float %1541, float %1540, !dbg !110
  %1542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i114 = icmp eq i32 %1542, 0, !dbg !110
  %1543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %1304, float %1304) #5, !dbg !110
  %1544 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %1304, float %1304) #5, !dbg !110
  %.02.i115 = select i1 %.not5.i114, float %1544, float %1543, !dbg !110
  br label %__nv_tanhf.exit116, !dbg !110

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %1528, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !110
  %1545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i117 = icmp eq i32 %1545, 0, !dbg !110
  %1546 = tail call float @llvm.nvvm.fabs.ftz.f(float %1305) #5, !dbg !110
  %1547 = tail call float @llvm.nvvm.fabs.f(float %1305) #5, !dbg !110
  %.01.i118 = select i1 %.not.i117, float %1547, float %1546, !dbg !110
  %1548 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !110
  br i1 %1548, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !110

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %1549 = fmul float %.01.i118, 0x4007154760000000, !dbg !110
  %1550 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1549) #5, !dbg !110
  %1551 = fadd float %1550, 1.000000e+00, !dbg !110
  %1552 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1551) #6, !dbg !110, !srcloc !36
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i120 = icmp eq i32 %1553, 0, !dbg !110
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1552, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %1552, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i121 = select i1 %.not6.i120, float %1555, float %1554, !dbg !110
  %1556 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !110
  %s.0.i122 = select i1 %1556, float 1.000000e+00, float %.03.i121, !dbg !110
  %1557 = bitcast float %s.0.i122 to i32, !dbg !110
  %1558 = bitcast float %1305 to i32, !dbg !110
  %1559 = and i32 %1558, -2147483648, !dbg !110
  %1560 = or i32 %1559, %1557, !dbg !110
  %1561 = bitcast i32 %1560 to float, !dbg !110
  br label %__nv_tanhf.exit135, !dbg !110

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %1562 = fmul float %1305, %1305, !dbg !110
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i125 = icmp eq i32 %1563, 0, !dbg !110
  %1564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1562, float 0xBFAAC795C0000000) #5, !dbg !110
  %1565 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1562, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i126 = select i1 %.not1.i125, float %1565, float %1564, !dbg !110
  %1566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i127 = icmp eq i32 %1566, 0, !dbg !110
  %1567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %1562, float 0x3FC10B2820000000) #5, !dbg !110
  %1568 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %1562, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i128 = select i1 %.not2.i127, float %1568, float %1567, !dbg !110
  %1569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i129 = icmp eq i32 %1569, 0, !dbg !110
  %1570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %1562, float 0xBFD5553DA0000000) #5, !dbg !110
  %1571 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %1562, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i130 = select i1 %.not3.i129, float %1571, float %1570, !dbg !110
  %1572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i131 = icmp eq i32 %1572, 0, !dbg !110
  %1573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %1562, float 0.000000e+00) #5, !dbg !110
  %1574 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %1562, float 0.000000e+00) #5, !dbg !110
  %.04.i132 = select i1 %.not4.i131, float %1574, float %1573, !dbg !110
  %1575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i133 = icmp eq i32 %1575, 0, !dbg !110
  %1576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %1305, float %1305) #5, !dbg !110
  %1577 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %1305, float %1305) #5, !dbg !110
  %.02.i134 = select i1 %.not5.i133, float %1577, float %1576, !dbg !110
  br label %__nv_tanhf.exit135, !dbg !110

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %1561, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !110
  %1578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i136 = icmp eq i32 %1578, 0, !dbg !110
  %1579 = tail call float @llvm.nvvm.fabs.ftz.f(float %1306) #5, !dbg !110
  %1580 = tail call float @llvm.nvvm.fabs.f(float %1306) #5, !dbg !110
  %.01.i137 = select i1 %.not.i136, float %1580, float %1579, !dbg !110
  %1581 = fcmp ult float %.01.i137, 0x3FE3333340000000, !dbg !110
  br i1 %1581, label %__internal_fmad.exit3.i143, label %__internal_fmad.exit1.i138, !dbg !110

__internal_fmad.exit1.i138:                       ; preds = %__nv_tanhf.exit135
  %1582 = fmul float %.01.i137, 0x4007154760000000, !dbg !110
  %1583 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1582) #5, !dbg !110
  %1584 = fadd float %1583, 1.000000e+00, !dbg !110
  %1585 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1584) #6, !dbg !110, !srcloc !36
  %1586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i139 = icmp eq i32 %1586, 0, !dbg !110
  %1587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1585, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1588 = tail call float @llvm.nvvm.fma.rn.f(float %1585, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i140 = select i1 %.not6.i139, float %1588, float %1587, !dbg !110
  %1589 = fcmp oge float %.01.i137, 0x4022059680000000, !dbg !110
  %s.0.i141 = select i1 %1589, float 1.000000e+00, float %.03.i140, !dbg !110
  %1590 = bitcast float %s.0.i141 to i32, !dbg !110
  %1591 = bitcast float %1306 to i32, !dbg !110
  %1592 = and i32 %1591, -2147483648, !dbg !110
  %1593 = or i32 %1592, %1590, !dbg !110
  %1594 = bitcast i32 %1593 to float, !dbg !110
  br label %__nv_tanhf.exit154, !dbg !110

__internal_fmad.exit3.i143:                       ; preds = %__nv_tanhf.exit135
  %1595 = fmul float %1306, %1306, !dbg !110
  %1596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i144 = icmp eq i32 %1596, 0, !dbg !110
  %1597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1595, float 0xBFAAC795C0000000) #5, !dbg !110
  %1598 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1595, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i145 = select i1 %.not1.i144, float %1598, float %1597, !dbg !110
  %1599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i146 = icmp eq i32 %1599, 0, !dbg !110
  %1600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %1595, float 0x3FC10B2820000000) #5, !dbg !110
  %1601 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %1595, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i147 = select i1 %.not2.i146, float %1601, float %1600, !dbg !110
  %1602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i148 = icmp eq i32 %1602, 0, !dbg !110
  %1603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i147, float %1595, float 0xBFD5553DA0000000) #5, !dbg !110
  %1604 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i147, float %1595, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i149 = select i1 %.not3.i148, float %1604, float %1603, !dbg !110
  %1605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i150 = icmp eq i32 %1605, 0, !dbg !110
  %1606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %1595, float 0.000000e+00) #5, !dbg !110
  %1607 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %1595, float 0.000000e+00) #5, !dbg !110
  %.04.i151 = select i1 %.not4.i150, float %1607, float %1606, !dbg !110
  %1608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i152 = icmp eq i32 %1608, 0, !dbg !110
  %1609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i151, float %1306, float %1306) #5, !dbg !110
  %1610 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i151, float %1306, float %1306) #5, !dbg !110
  %.02.i153 = select i1 %.not5.i152, float %1610, float %1609, !dbg !110
  br label %__nv_tanhf.exit154, !dbg !110

__nv_tanhf.exit154:                               ; preds = %__internal_fmad.exit1.i138, %__internal_fmad.exit3.i143
  %s.1.i142 = phi float [ %1594, %__internal_fmad.exit1.i138 ], [ %.02.i153, %__internal_fmad.exit3.i143 ], !dbg !110
  %1611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i155 = icmp eq i32 %1611, 0, !dbg !110
  %1612 = tail call float @llvm.nvvm.fabs.ftz.f(float %1307) #5, !dbg !110
  %1613 = tail call float @llvm.nvvm.fabs.f(float %1307) #5, !dbg !110
  %.01.i156 = select i1 %.not.i155, float %1613, float %1612, !dbg !110
  %1614 = fcmp ult float %.01.i156, 0x3FE3333340000000, !dbg !110
  br i1 %1614, label %__internal_fmad.exit3.i162, label %__internal_fmad.exit1.i157, !dbg !110

__internal_fmad.exit1.i157:                       ; preds = %__nv_tanhf.exit154
  %1615 = fmul float %.01.i156, 0x4007154760000000, !dbg !110
  %1616 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1615) #5, !dbg !110
  %1617 = fadd float %1616, 1.000000e+00, !dbg !110
  %1618 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1617) #6, !dbg !110, !srcloc !36
  %1619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i158 = icmp eq i32 %1619, 0, !dbg !110
  %1620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1618, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1621 = tail call float @llvm.nvvm.fma.rn.f(float %1618, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i159 = select i1 %.not6.i158, float %1621, float %1620, !dbg !110
  %1622 = fcmp oge float %.01.i156, 0x4022059680000000, !dbg !110
  %s.0.i160 = select i1 %1622, float 1.000000e+00, float %.03.i159, !dbg !110
  %1623 = bitcast float %s.0.i160 to i32, !dbg !110
  %1624 = bitcast float %1307 to i32, !dbg !110
  %1625 = and i32 %1624, -2147483648, !dbg !110
  %1626 = or i32 %1625, %1623, !dbg !110
  %1627 = bitcast i32 %1626 to float, !dbg !110
  br label %__nv_tanhf.exit173, !dbg !110

__internal_fmad.exit3.i162:                       ; preds = %__nv_tanhf.exit154
  %1628 = fmul float %1307, %1307, !dbg !110
  %1629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i163 = icmp eq i32 %1629, 0, !dbg !110
  %1630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1628, float 0xBFAAC795C0000000) #5, !dbg !110
  %1631 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1628, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i164 = select i1 %.not1.i163, float %1631, float %1630, !dbg !110
  %1632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i165 = icmp eq i32 %1632, 0, !dbg !110
  %1633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i164, float %1628, float 0x3FC10B2820000000) #5, !dbg !110
  %1634 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i164, float %1628, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i166 = select i1 %.not2.i165, float %1634, float %1633, !dbg !110
  %1635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i167 = icmp eq i32 %1635, 0, !dbg !110
  %1636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %1628, float 0xBFD5553DA0000000) #5, !dbg !110
  %1637 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %1628, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i168 = select i1 %.not3.i167, float %1637, float %1636, !dbg !110
  %1638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i169 = icmp eq i32 %1638, 0, !dbg !110
  %1639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %1628, float 0.000000e+00) #5, !dbg !110
  %1640 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %1628, float 0.000000e+00) #5, !dbg !110
  %.04.i170 = select i1 %.not4.i169, float %1640, float %1639, !dbg !110
  %1641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i171 = icmp eq i32 %1641, 0, !dbg !110
  %1642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i170, float %1307, float %1307) #5, !dbg !110
  %1643 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i170, float %1307, float %1307) #5, !dbg !110
  %.02.i172 = select i1 %.not5.i171, float %1643, float %1642, !dbg !110
  br label %__nv_tanhf.exit173, !dbg !110

__nv_tanhf.exit173:                               ; preds = %__internal_fmad.exit1.i157, %__internal_fmad.exit3.i162
  %s.1.i161 = phi float [ %1627, %__internal_fmad.exit1.i157 ], [ %.02.i172, %__internal_fmad.exit3.i162 ], !dbg !110
  %1644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i174 = icmp eq i32 %1644, 0, !dbg !110
  %1645 = tail call float @llvm.nvvm.fabs.ftz.f(float %1308) #5, !dbg !110
  %1646 = tail call float @llvm.nvvm.fabs.f(float %1308) #5, !dbg !110
  %.01.i175 = select i1 %.not.i174, float %1646, float %1645, !dbg !110
  %1647 = fcmp ult float %.01.i175, 0x3FE3333340000000, !dbg !110
  br i1 %1647, label %__internal_fmad.exit3.i181, label %__internal_fmad.exit1.i176, !dbg !110

__internal_fmad.exit1.i176:                       ; preds = %__nv_tanhf.exit173
  %1648 = fmul float %.01.i175, 0x4007154760000000, !dbg !110
  %1649 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1648) #5, !dbg !110
  %1650 = fadd float %1649, 1.000000e+00, !dbg !110
  %1651 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1650) #6, !dbg !110, !srcloc !36
  %1652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i177 = icmp eq i32 %1652, 0, !dbg !110
  %1653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1651, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1654 = tail call float @llvm.nvvm.fma.rn.f(float %1651, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i178 = select i1 %.not6.i177, float %1654, float %1653, !dbg !110
  %1655 = fcmp oge float %.01.i175, 0x4022059680000000, !dbg !110
  %s.0.i179 = select i1 %1655, float 1.000000e+00, float %.03.i178, !dbg !110
  %1656 = bitcast float %s.0.i179 to i32, !dbg !110
  %1657 = bitcast float %1308 to i32, !dbg !110
  %1658 = and i32 %1657, -2147483648, !dbg !110
  %1659 = or i32 %1658, %1656, !dbg !110
  %1660 = bitcast i32 %1659 to float, !dbg !110
  br label %__nv_tanhf.exit192, !dbg !110

__internal_fmad.exit3.i181:                       ; preds = %__nv_tanhf.exit173
  %1661 = fmul float %1308, %1308, !dbg !110
  %1662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i182 = icmp eq i32 %1662, 0, !dbg !110
  %1663 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1661, float 0xBFAAC795C0000000) #5, !dbg !110
  %1664 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1661, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i183 = select i1 %.not1.i182, float %1664, float %1663, !dbg !110
  %1665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i184 = icmp eq i32 %1665, 0, !dbg !110
  %1666 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i183, float %1661, float 0x3FC10B2820000000) #5, !dbg !110
  %1667 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i183, float %1661, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i185 = select i1 %.not2.i184, float %1667, float %1666, !dbg !110
  %1668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i186 = icmp eq i32 %1668, 0, !dbg !110
  %1669 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i185, float %1661, float 0xBFD5553DA0000000) #5, !dbg !110
  %1670 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i185, float %1661, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i187 = select i1 %.not3.i186, float %1670, float %1669, !dbg !110
  %1671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i188 = icmp eq i32 %1671, 0, !dbg !110
  %1672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %1661, float 0.000000e+00) #5, !dbg !110
  %1673 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %1661, float 0.000000e+00) #5, !dbg !110
  %.04.i189 = select i1 %.not4.i188, float %1673, float %1672, !dbg !110
  %1674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i190 = icmp eq i32 %1674, 0, !dbg !110
  %1675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i189, float %1308, float %1308) #5, !dbg !110
  %1676 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i189, float %1308, float %1308) #5, !dbg !110
  %.02.i191 = select i1 %.not5.i190, float %1676, float %1675, !dbg !110
  br label %__nv_tanhf.exit192, !dbg !110

__nv_tanhf.exit192:                               ; preds = %__internal_fmad.exit1.i176, %__internal_fmad.exit3.i181
  %s.1.i180 = phi float [ %1660, %__internal_fmad.exit1.i176 ], [ %.02.i191, %__internal_fmad.exit3.i181 ], !dbg !110
  %1677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i193 = icmp eq i32 %1677, 0, !dbg !110
  %1678 = tail call float @llvm.nvvm.fabs.ftz.f(float %1309) #5, !dbg !110
  %1679 = tail call float @llvm.nvvm.fabs.f(float %1309) #5, !dbg !110
  %.01.i194 = select i1 %.not.i193, float %1679, float %1678, !dbg !110
  %1680 = fcmp ult float %.01.i194, 0x3FE3333340000000, !dbg !110
  br i1 %1680, label %__internal_fmad.exit3.i200, label %__internal_fmad.exit1.i195, !dbg !110

__internal_fmad.exit1.i195:                       ; preds = %__nv_tanhf.exit192
  %1681 = fmul float %.01.i194, 0x4007154760000000, !dbg !110
  %1682 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1681) #5, !dbg !110
  %1683 = fadd float %1682, 1.000000e+00, !dbg !110
  %1684 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1683) #6, !dbg !110, !srcloc !36
  %1685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i196 = icmp eq i32 %1685, 0, !dbg !110
  %1686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1684, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1687 = tail call float @llvm.nvvm.fma.rn.f(float %1684, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i197 = select i1 %.not6.i196, float %1687, float %1686, !dbg !110
  %1688 = fcmp oge float %.01.i194, 0x4022059680000000, !dbg !110
  %s.0.i198 = select i1 %1688, float 1.000000e+00, float %.03.i197, !dbg !110
  %1689 = bitcast float %s.0.i198 to i32, !dbg !110
  %1690 = bitcast float %1309 to i32, !dbg !110
  %1691 = and i32 %1690, -2147483648, !dbg !110
  %1692 = or i32 %1691, %1689, !dbg !110
  %1693 = bitcast i32 %1692 to float, !dbg !110
  br label %__nv_tanhf.exit211, !dbg !110

__internal_fmad.exit3.i200:                       ; preds = %__nv_tanhf.exit192
  %1694 = fmul float %1309, %1309, !dbg !110
  %1695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i201 = icmp eq i32 %1695, 0, !dbg !110
  %1696 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1694, float 0xBFAAC795C0000000) #5, !dbg !110
  %1697 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1694, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i202 = select i1 %.not1.i201, float %1697, float %1696, !dbg !110
  %1698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i203 = icmp eq i32 %1698, 0, !dbg !110
  %1699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i202, float %1694, float 0x3FC10B2820000000) #5, !dbg !110
  %1700 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i202, float %1694, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i204 = select i1 %.not2.i203, float %1700, float %1699, !dbg !110
  %1701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i205 = icmp eq i32 %1701, 0, !dbg !110
  %1702 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i204, float %1694, float 0xBFD5553DA0000000) #5, !dbg !110
  %1703 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i204, float %1694, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i206 = select i1 %.not3.i205, float %1703, float %1702, !dbg !110
  %1704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i207 = icmp eq i32 %1704, 0, !dbg !110
  %1705 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i206, float %1694, float 0.000000e+00) #5, !dbg !110
  %1706 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i206, float %1694, float 0.000000e+00) #5, !dbg !110
  %.04.i208 = select i1 %.not4.i207, float %1706, float %1705, !dbg !110
  %1707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i209 = icmp eq i32 %1707, 0, !dbg !110
  %1708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i208, float %1309, float %1309) #5, !dbg !110
  %1709 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i208, float %1309, float %1309) #5, !dbg !110
  %.02.i210 = select i1 %.not5.i209, float %1709, float %1708, !dbg !110
  br label %__nv_tanhf.exit211, !dbg !110

__nv_tanhf.exit211:                               ; preds = %__internal_fmad.exit1.i195, %__internal_fmad.exit3.i200
  %s.1.i199 = phi float [ %1693, %__internal_fmad.exit1.i195 ], [ %.02.i210, %__internal_fmad.exit3.i200 ], !dbg !110
  %1710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i212 = icmp eq i32 %1710, 0, !dbg !110
  %1711 = tail call float @llvm.nvvm.fabs.ftz.f(float %1310) #5, !dbg !110
  %1712 = tail call float @llvm.nvvm.fabs.f(float %1310) #5, !dbg !110
  %.01.i213 = select i1 %.not.i212, float %1712, float %1711, !dbg !110
  %1713 = fcmp ult float %.01.i213, 0x3FE3333340000000, !dbg !110
  br i1 %1713, label %__internal_fmad.exit3.i219, label %__internal_fmad.exit1.i214, !dbg !110

__internal_fmad.exit1.i214:                       ; preds = %__nv_tanhf.exit211
  %1714 = fmul float %.01.i213, 0x4007154760000000, !dbg !110
  %1715 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1714) #5, !dbg !110
  %1716 = fadd float %1715, 1.000000e+00, !dbg !110
  %1717 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1716) #6, !dbg !110, !srcloc !36
  %1718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i215 = icmp eq i32 %1718, 0, !dbg !110
  %1719 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1717, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1720 = tail call float @llvm.nvvm.fma.rn.f(float %1717, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i216 = select i1 %.not6.i215, float %1720, float %1719, !dbg !110
  %1721 = fcmp oge float %.01.i213, 0x4022059680000000, !dbg !110
  %s.0.i217 = select i1 %1721, float 1.000000e+00, float %.03.i216, !dbg !110
  %1722 = bitcast float %s.0.i217 to i32, !dbg !110
  %1723 = bitcast float %1310 to i32, !dbg !110
  %1724 = and i32 %1723, -2147483648, !dbg !110
  %1725 = or i32 %1724, %1722, !dbg !110
  %1726 = bitcast i32 %1725 to float, !dbg !110
  br label %__nv_tanhf.exit230, !dbg !110

__internal_fmad.exit3.i219:                       ; preds = %__nv_tanhf.exit211
  %1727 = fmul float %1310, %1310, !dbg !110
  %1728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i220 = icmp eq i32 %1728, 0, !dbg !110
  %1729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1727, float 0xBFAAC795C0000000) #5, !dbg !110
  %1730 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1727, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i221 = select i1 %.not1.i220, float %1730, float %1729, !dbg !110
  %1731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i222 = icmp eq i32 %1731, 0, !dbg !110
  %1732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i221, float %1727, float 0x3FC10B2820000000) #5, !dbg !110
  %1733 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i221, float %1727, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i223 = select i1 %.not2.i222, float %1733, float %1732, !dbg !110
  %1734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i224 = icmp eq i32 %1734, 0, !dbg !110
  %1735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i223, float %1727, float 0xBFD5553DA0000000) #5, !dbg !110
  %1736 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i223, float %1727, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i225 = select i1 %.not3.i224, float %1736, float %1735, !dbg !110
  %1737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i226 = icmp eq i32 %1737, 0, !dbg !110
  %1738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %1727, float 0.000000e+00) #5, !dbg !110
  %1739 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %1727, float 0.000000e+00) #5, !dbg !110
  %.04.i227 = select i1 %.not4.i226, float %1739, float %1738, !dbg !110
  %1740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i228 = icmp eq i32 %1740, 0, !dbg !110
  %1741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i227, float %1310, float %1310) #5, !dbg !110
  %1742 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i227, float %1310, float %1310) #5, !dbg !110
  %.02.i229 = select i1 %.not5.i228, float %1742, float %1741, !dbg !110
  br label %__nv_tanhf.exit230, !dbg !110

__nv_tanhf.exit230:                               ; preds = %__internal_fmad.exit1.i214, %__internal_fmad.exit3.i219
  %s.1.i218 = phi float [ %1726, %__internal_fmad.exit1.i214 ], [ %.02.i229, %__internal_fmad.exit3.i219 ], !dbg !110
  %1743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i231 = icmp eq i32 %1743, 0, !dbg !110
  %1744 = tail call float @llvm.nvvm.fabs.ftz.f(float %1311) #5, !dbg !110
  %1745 = tail call float @llvm.nvvm.fabs.f(float %1311) #5, !dbg !110
  %.01.i232 = select i1 %.not.i231, float %1745, float %1744, !dbg !110
  %1746 = fcmp ult float %.01.i232, 0x3FE3333340000000, !dbg !110
  br i1 %1746, label %__internal_fmad.exit3.i238, label %__internal_fmad.exit1.i233, !dbg !110

__internal_fmad.exit1.i233:                       ; preds = %__nv_tanhf.exit230
  %1747 = fmul float %.01.i232, 0x4007154760000000, !dbg !110
  %1748 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1747) #5, !dbg !110
  %1749 = fadd float %1748, 1.000000e+00, !dbg !110
  %1750 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1749) #6, !dbg !110, !srcloc !36
  %1751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i234 = icmp eq i32 %1751, 0, !dbg !110
  %1752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1750, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1753 = tail call float @llvm.nvvm.fma.rn.f(float %1750, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i235 = select i1 %.not6.i234, float %1753, float %1752, !dbg !110
  %1754 = fcmp oge float %.01.i232, 0x4022059680000000, !dbg !110
  %s.0.i236 = select i1 %1754, float 1.000000e+00, float %.03.i235, !dbg !110
  %1755 = bitcast float %s.0.i236 to i32, !dbg !110
  %1756 = bitcast float %1311 to i32, !dbg !110
  %1757 = and i32 %1756, -2147483648, !dbg !110
  %1758 = or i32 %1757, %1755, !dbg !110
  %1759 = bitcast i32 %1758 to float, !dbg !110
  br label %__nv_tanhf.exit249, !dbg !110

__internal_fmad.exit3.i238:                       ; preds = %__nv_tanhf.exit230
  %1760 = fmul float %1311, %1311, !dbg !110
  %1761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i239 = icmp eq i32 %1761, 0, !dbg !110
  %1762 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1760, float 0xBFAAC795C0000000) #5, !dbg !110
  %1763 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1760, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i240 = select i1 %.not1.i239, float %1763, float %1762, !dbg !110
  %1764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i241 = icmp eq i32 %1764, 0, !dbg !110
  %1765 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i240, float %1760, float 0x3FC10B2820000000) #5, !dbg !110
  %1766 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i240, float %1760, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i242 = select i1 %.not2.i241, float %1766, float %1765, !dbg !110
  %1767 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i243 = icmp eq i32 %1767, 0, !dbg !110
  %1768 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i242, float %1760, float 0xBFD5553DA0000000) #5, !dbg !110
  %1769 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i242, float %1760, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i244 = select i1 %.not3.i243, float %1769, float %1768, !dbg !110
  %1770 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i245 = icmp eq i32 %1770, 0, !dbg !110
  %1771 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i244, float %1760, float 0.000000e+00) #5, !dbg !110
  %1772 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i244, float %1760, float 0.000000e+00) #5, !dbg !110
  %.04.i246 = select i1 %.not4.i245, float %1772, float %1771, !dbg !110
  %1773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i247 = icmp eq i32 %1773, 0, !dbg !110
  %1774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i246, float %1311, float %1311) #5, !dbg !110
  %1775 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i246, float %1311, float %1311) #5, !dbg !110
  %.02.i248 = select i1 %.not5.i247, float %1775, float %1774, !dbg !110
  br label %__nv_tanhf.exit249, !dbg !110

__nv_tanhf.exit249:                               ; preds = %__internal_fmad.exit1.i233, %__internal_fmad.exit3.i238
  %s.1.i237 = phi float [ %1759, %__internal_fmad.exit1.i233 ], [ %.02.i248, %__internal_fmad.exit3.i238 ], !dbg !110
  %1776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i250 = icmp eq i32 %1776, 0, !dbg !110
  %1777 = tail call float @llvm.nvvm.fabs.ftz.f(float %1312) #5, !dbg !110
  %1778 = tail call float @llvm.nvvm.fabs.f(float %1312) #5, !dbg !110
  %.01.i251 = select i1 %.not.i250, float %1778, float %1777, !dbg !110
  %1779 = fcmp ult float %.01.i251, 0x3FE3333340000000, !dbg !110
  br i1 %1779, label %__internal_fmad.exit3.i257, label %__internal_fmad.exit1.i252, !dbg !110

__internal_fmad.exit1.i252:                       ; preds = %__nv_tanhf.exit249
  %1780 = fmul float %.01.i251, 0x4007154760000000, !dbg !110
  %1781 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1780) #5, !dbg !110
  %1782 = fadd float %1781, 1.000000e+00, !dbg !110
  %1783 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1782) #6, !dbg !110, !srcloc !36
  %1784 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i253 = icmp eq i32 %1784, 0, !dbg !110
  %1785 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1783, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1786 = tail call float @llvm.nvvm.fma.rn.f(float %1783, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i254 = select i1 %.not6.i253, float %1786, float %1785, !dbg !110
  %1787 = fcmp oge float %.01.i251, 0x4022059680000000, !dbg !110
  %s.0.i255 = select i1 %1787, float 1.000000e+00, float %.03.i254, !dbg !110
  %1788 = bitcast float %s.0.i255 to i32, !dbg !110
  %1789 = bitcast float %1312 to i32, !dbg !110
  %1790 = and i32 %1789, -2147483648, !dbg !110
  %1791 = or i32 %1790, %1788, !dbg !110
  %1792 = bitcast i32 %1791 to float, !dbg !110
  br label %__nv_tanhf.exit268, !dbg !110

__internal_fmad.exit3.i257:                       ; preds = %__nv_tanhf.exit249
  %1793 = fmul float %1312, %1312, !dbg !110
  %1794 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i258 = icmp eq i32 %1794, 0, !dbg !110
  %1795 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1793, float 0xBFAAC795C0000000) #5, !dbg !110
  %1796 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1793, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i259 = select i1 %.not1.i258, float %1796, float %1795, !dbg !110
  %1797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i260 = icmp eq i32 %1797, 0, !dbg !110
  %1798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i259, float %1793, float 0x3FC10B2820000000) #5, !dbg !110
  %1799 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i259, float %1793, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i261 = select i1 %.not2.i260, float %1799, float %1798, !dbg !110
  %1800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i262 = icmp eq i32 %1800, 0, !dbg !110
  %1801 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float %1793, float 0xBFD5553DA0000000) #5, !dbg !110
  %1802 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float %1793, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i263 = select i1 %.not3.i262, float %1802, float %1801, !dbg !110
  %1803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i264 = icmp eq i32 %1803, 0, !dbg !110
  %1804 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i263, float %1793, float 0.000000e+00) #5, !dbg !110
  %1805 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i263, float %1793, float 0.000000e+00) #5, !dbg !110
  %.04.i265 = select i1 %.not4.i264, float %1805, float %1804, !dbg !110
  %1806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i266 = icmp eq i32 %1806, 0, !dbg !110
  %1807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i265, float %1312, float %1312) #5, !dbg !110
  %1808 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i265, float %1312, float %1312) #5, !dbg !110
  %.02.i267 = select i1 %.not5.i266, float %1808, float %1807, !dbg !110
  br label %__nv_tanhf.exit268, !dbg !110

__nv_tanhf.exit268:                               ; preds = %__internal_fmad.exit1.i252, %__internal_fmad.exit3.i257
  %s.1.i256 = phi float [ %1792, %__internal_fmad.exit1.i252 ], [ %.02.i267, %__internal_fmad.exit3.i257 ], !dbg !110
  %1809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not.i269 = icmp eq i32 %1809, 0, !dbg !110
  %1810 = tail call float @llvm.nvvm.fabs.ftz.f(float %1313) #5, !dbg !110
  %1811 = tail call float @llvm.nvvm.fabs.f(float %1313) #5, !dbg !110
  %.01.i270 = select i1 %.not.i269, float %1811, float %1810, !dbg !110
  %1812 = fcmp ult float %.01.i270, 0x3FE3333340000000, !dbg !110
  br i1 %1812, label %__internal_fmad.exit3.i276, label %__internal_fmad.exit1.i271, !dbg !110

__internal_fmad.exit1.i271:                       ; preds = %__nv_tanhf.exit268
  %1813 = fmul float %.01.i270, 0x4007154760000000, !dbg !110
  %1814 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1813) #5, !dbg !110
  %1815 = fadd float %1814, 1.000000e+00, !dbg !110
  %1816 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1815) #6, !dbg !110, !srcloc !36
  %1817 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not6.i272 = icmp eq i32 %1817, 0, !dbg !110
  %1818 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1816, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %1819 = tail call float @llvm.nvvm.fma.rn.f(float %1816, float -2.000000e+00, float 1.000000e+00) #5, !dbg !110
  %.03.i273 = select i1 %.not6.i272, float %1819, float %1818, !dbg !110
  %1820 = fcmp oge float %.01.i270, 0x4022059680000000, !dbg !110
  %s.0.i274 = select i1 %1820, float 1.000000e+00, float %.03.i273, !dbg !110
  %1821 = bitcast float %s.0.i274 to i32, !dbg !110
  %1822 = bitcast float %1313 to i32, !dbg !110
  %1823 = and i32 %1822, -2147483648, !dbg !110
  %1824 = or i32 %1823, %1821, !dbg !110
  %1825 = bitcast i32 %1824 to float, !dbg !110
  br label %__nv_tanhf.exit287, !dbg !110

__internal_fmad.exit3.i276:                       ; preds = %__nv_tanhf.exit268
  %1826 = fmul float %1313, %1313, !dbg !110
  %1827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not1.i277 = icmp eq i32 %1827, 0, !dbg !110
  %1828 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1826, float 0xBFAAC795C0000000) #5, !dbg !110
  %1829 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1826, float 0xBFAAC795C0000000) #5, !dbg !110
  %.06.i278 = select i1 %.not1.i277, float %1829, float %1828, !dbg !110
  %1830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not2.i279 = icmp eq i32 %1830, 0, !dbg !110
  %1831 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i278, float %1826, float 0x3FC10B2820000000) #5, !dbg !110
  %1832 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i278, float %1826, float 0x3FC10B2820000000) #5, !dbg !110
  %.05.i280 = select i1 %.not2.i279, float %1832, float %1831, !dbg !110
  %1833 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not3.i281 = icmp eq i32 %1833, 0, !dbg !110
  %1834 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i280, float %1826, float 0xBFD5553DA0000000) #5, !dbg !110
  %1835 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i280, float %1826, float 0xBFD5553DA0000000) #5, !dbg !110
  %.0.i282 = select i1 %.not3.i281, float %1835, float %1834, !dbg !110
  %1836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not4.i283 = icmp eq i32 %1836, 0, !dbg !110
  %1837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i282, float %1826, float 0.000000e+00) #5, !dbg !110
  %1838 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i282, float %1826, float 0.000000e+00) #5, !dbg !110
  %.04.i284 = select i1 %.not4.i283, float %1838, float %1837, !dbg !110
  %1839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !110
  %.not5.i285 = icmp eq i32 %1839, 0, !dbg !110
  %1840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i284, float %1313, float %1313) #5, !dbg !110
  %1841 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i284, float %1313, float %1313) #5, !dbg !110
  %.02.i286 = select i1 %.not5.i285, float %1841, float %1840, !dbg !110
  br label %__nv_tanhf.exit287, !dbg !110

__nv_tanhf.exit287:                               ; preds = %__internal_fmad.exit1.i271, %__internal_fmad.exit3.i276
  %s.1.i275 = phi float [ %1825, %__internal_fmad.exit1.i271 ], [ %.02.i286, %__internal_fmad.exit3.i276 ], !dbg !110
  %1842 = fadd float %s.1.i, 1.000000e+00, !dbg !111
  %1843 = fadd float %s.1.i9, 1.000000e+00, !dbg !111
  %1844 = fadd float %s.1.i28, 1.000000e+00, !dbg !111
  %1845 = fadd float %s.1.i47, 1.000000e+00, !dbg !111
  %1846 = fadd float %s.1.i66, 1.000000e+00, !dbg !111
  %1847 = fadd float %s.1.i85, 1.000000e+00, !dbg !111
  %1848 = fadd float %s.1.i104, 1.000000e+00, !dbg !111
  %1849 = fadd float %s.1.i123, 1.000000e+00, !dbg !111
  %1850 = fadd float %s.1.i142, 1.000000e+00, !dbg !111
  %1851 = fadd float %s.1.i161, 1.000000e+00, !dbg !111
  %1852 = fadd float %s.1.i180, 1.000000e+00, !dbg !111
  %1853 = fadd float %s.1.i199, 1.000000e+00, !dbg !111
  %1854 = fadd float %s.1.i218, 1.000000e+00, !dbg !111
  %1855 = fadd float %s.1.i237, 1.000000e+00, !dbg !111
  %1856 = fadd float %s.1.i256, 1.000000e+00, !dbg !111
  %1857 = fadd float %s.1.i275, 1.000000e+00, !dbg !111
  %1858 = fmul float %1218, %1842, !dbg !112
  %1859 = fmul float %1219, %1843, !dbg !112
  %1860 = fmul float %1220, %1844, !dbg !112
  %1861 = fmul float %1221, %1845, !dbg !112
  %1862 = fmul float %1222, %1846, !dbg !112
  %1863 = fmul float %1223, %1847, !dbg !112
  %1864 = fmul float %1224, %1848, !dbg !112
  %1865 = fmul float %1225, %1849, !dbg !112
  %1866 = fmul float %1226, %1850, !dbg !112
  %1867 = fmul float %1227, %1851, !dbg !112
  %1868 = fmul float %1228, %1852, !dbg !112
  %1869 = fmul float %1229, %1853, !dbg !112
  %1870 = fmul float %1230, %1854, !dbg !112
  %1871 = fmul float %1231, %1855, !dbg !112
  %1872 = fmul float %1232, %1856, !dbg !112
  %1873 = fmul float %1233, %1857, !dbg !112
  %1874 = select i1 %1105, float %1151, float %1858, !dbg !113
  %1875 = select i1 %1105, float %1152, float %1859, !dbg !113
  %1876 = select i1 %1105, float %1153, float %1860, !dbg !113
  %1877 = select i1 %1105, float %1154, float %1861, !dbg !113
  %1878 = select i1 %1105, float %1155, float %1862, !dbg !113
  %1879 = select i1 %1105, float %1156, float %1863, !dbg !113
  %1880 = select i1 %1105, float %1157, float %1864, !dbg !113
  %1881 = select i1 %1105, float %1158, float %1865, !dbg !113
  %1882 = select i1 %1105, float %1159, float %1866, !dbg !113
  %1883 = select i1 %1105, float %1160, float %1867, !dbg !113
  %1884 = select i1 %1105, float %1161, float %1868, !dbg !113
  %1885 = select i1 %1105, float %1162, float %1869, !dbg !113
  %1886 = select i1 %1105, float %1163, float %1870, !dbg !113
  %1887 = select i1 %1105, float %1164, float %1871, !dbg !113
  %1888 = select i1 %1105, float %1165, float %1872, !dbg !113
  %1889 = select i1 %1105, float %1166, float %1873, !dbg !113
  %1890 = fmul float %1100, %1874, !dbg !114
  %1891 = fmul float %1100, %1875, !dbg !114
  %1892 = fmul float %1100, %1876, !dbg !114
  %1893 = fmul float %1100, %1877, !dbg !114
  %1894 = fmul float %1100, %1878, !dbg !114
  %1895 = fmul float %1100, %1879, !dbg !114
  %1896 = fmul float %1100, %1880, !dbg !114
  %1897 = fmul float %1100, %1881, !dbg !114
  %1898 = fmul float %1100, %1882, !dbg !114
  %1899 = fmul float %1100, %1883, !dbg !114
  %1900 = fmul float %1100, %1884, !dbg !114
  %1901 = fmul float %1100, %1885, !dbg !114
  %1902 = fmul float %1100, %1886, !dbg !114
  %1903 = fmul float %1100, %1887, !dbg !114
  %1904 = fmul float %1100, %1888, !dbg !114
  %1905 = fmul float %1100, %1889, !dbg !114
  %1906 = tail call float @llvm.nvvm.round.f(float %1890) #5, !dbg !115
  %1907 = tail call float @llvm.nvvm.round.f(float %1891) #5, !dbg !115
  %1908 = tail call float @llvm.nvvm.round.f(float %1892) #5, !dbg !115
  %1909 = tail call float @llvm.nvvm.round.f(float %1893) #5, !dbg !115
  %1910 = tail call float @llvm.nvvm.round.f(float %1894) #5, !dbg !115
  %1911 = tail call float @llvm.nvvm.round.f(float %1895) #5, !dbg !115
  %1912 = tail call float @llvm.nvvm.round.f(float %1896) #5, !dbg !115
  %1913 = tail call float @llvm.nvvm.round.f(float %1897) #5, !dbg !115
  %1914 = tail call float @llvm.nvvm.round.f(float %1898) #5, !dbg !115
  %1915 = tail call float @llvm.nvvm.round.f(float %1899) #5, !dbg !115
  %1916 = tail call float @llvm.nvvm.round.f(float %1900) #5, !dbg !115
  %1917 = tail call float @llvm.nvvm.round.f(float %1901) #5, !dbg !115
  %1918 = tail call float @llvm.nvvm.round.f(float %1902) #5, !dbg !115
  %1919 = tail call float @llvm.nvvm.round.f(float %1903) #5, !dbg !115
  %1920 = tail call float @llvm.nvvm.round.f(float %1904) #5, !dbg !115
  %1921 = tail call float @llvm.nvvm.round.f(float %1905) #5, !dbg !115
  %1922 = insertelement <4 x float> poison, float %1906, i64 0, !dbg !116
  %1923 = insertelement <4 x float> %1922, float %1907, i64 1, !dbg !116
  %1924 = insertelement <4 x float> %1923, float %1908, i64 2, !dbg !116
  %1925 = insertelement <4 x float> %1924, float %1909, i64 3, !dbg !116
  %1926 = fcmp ogt <4 x float> %1925, splat (float -1.270000e+02), !dbg !116
  %1927 = fcmp uno <4 x float> %1925, zeroinitializer, !dbg !118
  %1928 = or <4 x i1> %1926, %1927, !dbg !119
  %1929 = select <4 x i1> %1928, <4 x float> %1925, <4 x float> splat (float -1.270000e+02), !dbg !120
  %1930 = fcmp olt <4 x float> %1929, splat (float 1.270000e+02), !dbg !121
  %1931 = fcmp uno <4 x float> %1929, zeroinitializer, !dbg !123
  %1932 = or <4 x i1> %1930, %1931, !dbg !124
  %1933 = fptosi <4 x float> %1929 to <4 x i8>, !dbg !125
  %1934 = select <4 x i1> %1932, <4 x i8> %1933, <4 x i8> splat (i8 127), !dbg !126
  %1935 = insertelement <4 x float> poison, float %1910, i64 0, !dbg !116
  %1936 = insertelement <4 x float> %1935, float %1911, i64 1, !dbg !116
  %1937 = insertelement <4 x float> %1936, float %1912, i64 2, !dbg !116
  %1938 = insertelement <4 x float> %1937, float %1913, i64 3, !dbg !116
  %1939 = fcmp ogt <4 x float> %1938, splat (float -1.270000e+02), !dbg !116
  %1940 = fcmp uno <4 x float> %1938, zeroinitializer, !dbg !118
  %1941 = or <4 x i1> %1939, %1940, !dbg !119
  %1942 = select <4 x i1> %1941, <4 x float> %1938, <4 x float> splat (float -1.270000e+02), !dbg !120
  %1943 = fcmp olt <4 x float> %1942, splat (float 1.270000e+02), !dbg !121
  %1944 = fcmp uno <4 x float> %1942, zeroinitializer, !dbg !123
  %1945 = or <4 x i1> %1943, %1944, !dbg !124
  %1946 = fptosi <4 x float> %1942 to <4 x i8>, !dbg !125
  %1947 = select <4 x i1> %1945, <4 x i8> %1946, <4 x i8> splat (i8 127), !dbg !126
  %1948 = insertelement <4 x float> poison, float %1914, i64 0, !dbg !116
  %1949 = insertelement <4 x float> %1948, float %1915, i64 1, !dbg !116
  %1950 = insertelement <4 x float> %1949, float %1916, i64 2, !dbg !116
  %1951 = insertelement <4 x float> %1950, float %1917, i64 3, !dbg !116
  %1952 = fcmp ogt <4 x float> %1951, splat (float -1.270000e+02), !dbg !116
  %1953 = fcmp uno <4 x float> %1951, zeroinitializer, !dbg !118
  %1954 = or <4 x i1> %1952, %1953, !dbg !119
  %1955 = select <4 x i1> %1954, <4 x float> %1951, <4 x float> splat (float -1.270000e+02), !dbg !120
  %1956 = fcmp olt <4 x float> %1955, splat (float 1.270000e+02), !dbg !121
  %1957 = fcmp uno <4 x float> %1955, zeroinitializer, !dbg !123
  %1958 = or <4 x i1> %1956, %1957, !dbg !124
  %1959 = fptosi <4 x float> %1955 to <4 x i8>, !dbg !125
  %1960 = select <4 x i1> %1958, <4 x i8> %1959, <4 x i8> splat (i8 127), !dbg !126
  %1961 = insertelement <4 x float> poison, float %1918, i64 0, !dbg !116
  %1962 = insertelement <4 x float> %1961, float %1919, i64 1, !dbg !116
  %1963 = insertelement <4 x float> %1962, float %1920, i64 2, !dbg !116
  %1964 = insertelement <4 x float> %1963, float %1921, i64 3, !dbg !116
  %1965 = fcmp ogt <4 x float> %1964, splat (float -1.270000e+02), !dbg !116
  %1966 = fcmp uno <4 x float> %1964, zeroinitializer, !dbg !118
  %1967 = or <4 x i1> %1965, %1966, !dbg !119
  %1968 = select <4 x i1> %1967, <4 x float> %1964, <4 x float> splat (float -1.270000e+02), !dbg !120
  %1969 = fcmp olt <4 x float> %1968, splat (float 1.270000e+02), !dbg !121
  %1970 = fcmp uno <4 x float> %1968, zeroinitializer, !dbg !123
  %1971 = or <4 x i1> %1969, %1970, !dbg !124
  %1972 = fptosi <4 x float> %1968 to <4 x i8>, !dbg !125
  %1973 = select <4 x i1> %1971, <4 x i8> %1972, <4 x i8> splat (i8 127), !dbg !126
  %1974 = add i32 %1101, %1106, !dbg !127
  %1975 = sext i32 %1974 to i64, !dbg !128
  %1976 = getelementptr i8, ptr addrspace(1) %4, i64 %1975, !dbg !128
  %1977 = bitcast <4 x i8> %1934 to i32, !dbg !129
  %1978 = bitcast <4 x i8> %1947 to i32, !dbg !129
  %1979 = bitcast <4 x i8> %1960 to i32, !dbg !129
  %1980 = bitcast <4 x i8> %1973 to i32, !dbg !129
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1977, i32 %1978, i32 %1979, i32 %1980, ptr addrspace(1) %1976, i1 %1115) #5, !dbg !129
  %indvars.iv.next625 = add nuw nsw i64 %indvars.iv624, 4096, !dbg !89
  %1981 = icmp samesign ult i64 %indvars.iv624, 11264, !dbg !89
  br i1 %1981, label %1102, label %1982, !dbg !89

1982:                                             ; preds = %__nv_tanhf.exit287
  ret void, !dbg !130
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 25, column: 21, scope: !6)
!11 = !DILocation(line: 26, column: 37, scope: !6)
!12 = !DILocation(line: 42, column: 39, scope: !6)
!13 = !DILocation(line: 46, column: 40, scope: !6)
!14 = !DILocation(line: 31, column: 40, scope: !6)
!15 = !DILocation(line: 32, column: 31, scope: !6)
!16 = !DILocation(line: 33, column: 29, scope: !6)
!17 = !DILocation(line: 41, column: 22, scope: !6)
!18 = !DILocation(line: 42, column: 45, scope: !6)
!19 = !DILocation(line: 42, column: 34, scope: !6)
!20 = !DILocation(line: 42, column: 63, scope: !6)
!21 = !DILocation(line: 42, column: 71, scope: !6)
!22 = !DILocation(line: 42, column: 53, scope: !6)
!23 = !DILocation(line: 42, column: 121, scope: !6)
!24 = !DILocation(line: 43, column: 23, scope: !6)
!25 = !DILocation(line: 46, column: 46, scope: !6)
!26 = !DILocation(line: 46, column: 34, scope: !6)
!27 = !DILocation(line: 46, column: 82, scope: !6)
!28 = !DILocation(line: 46, column: 64, scope: !6)
!29 = !DILocation(line: 48, column: 23, scope: !6)
!30 = !DILocation(line: 49, column: 23, scope: !6)
!31 = !DILocation(line: 50, column: 24, scope: !6)
!32 = !DILocation(line: 52, column: 24, scope: !6)
!33 = !DILocation(line: 53, column: 23, scope: !6)
!34 = !DILocation(line: 55, column: 24, scope: !6)
!35 = !DILocation(line: 56, column: 31, scope: !6)
!36 = !{i32 21046}
!37 = !DILocation(line: 58, column: 24, scope: !6)
!38 = !DILocation(line: 96, column: 21, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !6, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 65, column: 47, scope: !6)
!42 = !DILocation(line: 104, column: 21, scope: !39, inlinedAt: !43)
!43 = !DILocation(line: 67, column: 47, scope: !6)
!44 = !DILocation(line: 59, column: 24, scope: !6)
!45 = !DILocation(line: 63, column: 37, scope: !6)
!46 = !DILocation(line: 94, column: 15, scope: !39, inlinedAt: !41)
!47 = !DILocation(line: 96, column: 16, scope: !39, inlinedAt: !41)
!48 = !DILocation(line: 97, column: 29, scope: !39, inlinedAt: !41)
!49 = !DILocation(line: 66, column: 50, scope: !6)
!50 = !DILocation(line: 102, column: 15, scope: !39, inlinedAt: !43)
!51 = !DILocation(line: 104, column: 16, scope: !39, inlinedAt: !43)
!52 = !DILocation(line: 105, column: 29, scope: !39, inlinedAt: !43)
!53 = !DILocation(line: 68, column: 50, scope: !6)
!54 = !DILocation(line: 94, column: 15, scope: !55, inlinedAt: !56)
!55 = distinct !DILexicalBlockFile(scope: !39, file: !40, discriminator: 0)
!56 = !DILocation(line: 69, column: 40, scope: !6)
!57 = !DILocation(line: 96, column: 21, scope: !55, inlinedAt: !56)
!58 = !DILocation(line: 96, column: 16, scope: !55, inlinedAt: !56)
!59 = !DILocation(line: 97, column: 29, scope: !55, inlinedAt: !56)
!60 = !DILocation(line: 110, column: 29, scope: !39, inlinedAt: !56)
!61 = !DILocation(line: 115, column: 29, scope: !39, inlinedAt: !62)
!62 = !DILocation(line: 70, column: 40, scope: !6)
!63 = !DILocation(line: 102, column: 15, scope: !55, inlinedAt: !62)
!64 = !DILocation(line: 104, column: 21, scope: !55, inlinedAt: !62)
!65 = !DILocation(line: 104, column: 16, scope: !55, inlinedAt: !62)
!66 = !DILocation(line: 105, column: 29, scope: !55, inlinedAt: !62)
!67 = !DILocation(line: 71, column: 25, scope: !6)
!68 = !DILocation(line: 71, column: 37, scope: !6)
!69 = !DILocation(line: 72, column: 25, scope: !6)
!70 = !DILocation(line: 72, column: 37, scope: !6)
!71 = !DILocation(line: 97, column: 29, scope: !39, inlinedAt: !72)
!72 = !DILocation(line: 107, column: 46, scope: !6)
!73 = !DILocation(line: 108, column: 17, scope: !6)
!74 = !DILocation(line: 105, column: 29, scope: !39, inlinedAt: !75)
!75 = !DILocation(line: 109, column: 46, scope: !6)
!76 = !DILocation(line: 102, column: 15, scope: !39, inlinedAt: !77)
!77 = !DILocation(line: 110, column: 46, scope: !6)
!78 = !DILocation(line: 104, column: 21, scope: !39, inlinedAt: !77)
!79 = !DILocation(line: 104, column: 16, scope: !39, inlinedAt: !77)
!80 = !DILocation(line: 105, column: 29, scope: !39, inlinedAt: !77)
!81 = !DILocation(line: 112, column: 24, scope: !6)
!82 = !DILocation(line: 102, column: 15, scope: !39, inlinedAt: !83)
!83 = !DILocation(line: 115, column: 46, scope: !6)
!84 = !DILocation(line: 104, column: 21, scope: !39, inlinedAt: !83)
!85 = !DILocation(line: 104, column: 16, scope: !39, inlinedAt: !83)
!86 = !DILocation(line: 105, column: 29, scope: !39, inlinedAt: !83)
!87 = !DILocation(line: 118, column: 25, scope: !6)
!88 = !DILocation(line: 130, column: 42, scope: !6)
!89 = !DILocation(line: 73, column: 40, scope: !6)
!90 = !DILocation(line: 74, column: 31, scope: !6)
!91 = !DILocation(line: 75, column: 29, scope: !6)
!92 = !DILocation(line: 83, column: 24, scope: !6)
!93 = !DILocation(line: 84, column: 46, scope: !6)
!94 = !DILocation(line: 84, column: 35, scope: !6)
!95 = !DILocation(line: 84, column: 64, scope: !6)
!96 = !DILocation(line: 84, column: 72, scope: !6)
!97 = !DILocation(line: 84, column: 54, scope: !6)
!98 = !DILocation(line: 84, column: 123, scope: !6)
!99 = !DILocation(line: 85, column: 25, scope: !6)
!100 = !DILocation(line: 88, column: 47, scope: !6)
!101 = !DILocation(line: 88, column: 35, scope: !6)
!102 = !DILocation(line: 88, column: 83, scope: !6)
!103 = !DILocation(line: 88, column: 65, scope: !6)
!104 = !DILocation(line: 90, column: 24, scope: !6)
!105 = !DILocation(line: 91, column: 24, scope: !6)
!106 = !DILocation(line: 92, column: 24, scope: !6)
!107 = !DILocation(line: 94, column: 24, scope: !6)
!108 = !DILocation(line: 95, column: 24, scope: !6)
!109 = !DILocation(line: 97, column: 24, scope: !6)
!110 = !DILocation(line: 98, column: 31, scope: !6)
!111 = !DILocation(line: 100, column: 24, scope: !6)
!112 = !DILocation(line: 101, column: 24, scope: !6)
!113 = !DILocation(line: 105, column: 39, scope: !6)
!114 = !DILocation(line: 121, column: 24, scope: !6)
!115 = !DILocation(line: 122, column: 36, scope: !6)
!116 = !DILocation(line: 102, column: 15, scope: !39, inlinedAt: !117)
!117 = !DILocation(line: 125, column: 46, scope: !6)
!118 = !DILocation(line: 104, column: 21, scope: !39, inlinedAt: !117)
!119 = !DILocation(line: 104, column: 16, scope: !39, inlinedAt: !117)
!120 = !DILocation(line: 105, column: 29, scope: !39, inlinedAt: !117)
!121 = !DILocation(line: 94, column: 15, scope: !39, inlinedAt: !122)
!122 = !DILocation(line: 127, column: 46, scope: !6)
!123 = !DILocation(line: 96, column: 21, scope: !39, inlinedAt: !122)
!124 = !DILocation(line: 96, column: 16, scope: !39, inlinedAt: !122)
!125 = !DILocation(line: 129, column: 25, scope: !6)
!126 = !DILocation(line: 97, column: 29, scope: !39, inlinedAt: !122)
!127 = !DILocation(line: 130, column: 36, scope: !6)
!128 = !DILocation(line: 130, column: 29, scope: !6)
!129 = !DILocation(line: 130, column: 54, scope: !6)
!130 = !DILocation(line: 73, column: 4, scope: !6)
