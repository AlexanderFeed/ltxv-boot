#loc = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0)
#loc1 = loc(unknown)
#loc37 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":50:27)
#loc78 = loc(callsite(#loc1 at #loc37))
module {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<1x1xi64> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %cst_0 = arith.constant dense<32128> : tensor<1x1xi64> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x1xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = tt.addptr %arg0, %0 : !tt.ptr<i64>, i32 loc(#loc6)
    %6 = tt.splat %5 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc6)
    %7 = tt.load %6, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<i64>> loc(#loc7)
    %8 = scf.for %arg7 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg8 = %cst_6) -> (tensor<1x2048xf32>)  : i32 {
      %11 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc9)
      %12 = arith.addi %11, %4 : tensor<1x2048xi32> loc(#loc9)
      %13 = arith.cmpi slt, %12, %cst_5 : tensor<1x2048xi32> loc(#loc10)
      %14 = arith.muli %0, %c4096_i32 : i32 loc(#loc11)
      %15 = tt.splat %14 : i32 -> tensor<1x2048xi32> loc(#loc75)
      %16 = arith.addi %12, %15 : tensor<1x2048xi32> loc(#loc12)
      %17 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc13)
      %18 = tt.addptr %17, %16 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc13)
      %19 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc76)
      %20 = arith.andi %19, %13 : tensor<1x2048xi1> loc(#loc14)
      %21 = tt.load %18, %20, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc15)
      %22 = arith.extf %21 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc16)
      %23 = arith.addi %7, %cst_0 : tensor<1x1xi64> loc(#loc17)
      %24 = arith.cmpi slt, %7, %cst_1 : tensor<1x1xi64> loc(#loc18)
      %25 = arith.select %24, %23, %7 : tensor<1x1xi1>, tensor<1x1xi64> loc(#loc19)
      %26 = arith.cmpi sge, %25, %cst_1 : tensor<1x1xi64> loc(#loc20)
      %27 = arith.cmpi slt, %25, %cst_0 : tensor<1x1xi64> loc(#loc21)
      %28 = arith.andi %26, %27 : tensor<1x1xi1> loc(#loc22)
      %29 = arith.xori %1, %true : i1 loc(#loc23)
      %30 = tt.splat %29 : i1 -> tensor<1x1xi1> loc(#loc23)
      %31 = arith.ori %28, %30 : tensor<1x1xi1> loc(#loc24)
      %32 = tt.broadcast %31 : tensor<1x1xi1> -> tensor<1x2048xi1> loc(#loc24)
      tt.assert %32, "index out of bounds: 0 <= tmp4 < 32128" : tensor<1x2048xi1> loc(#loc25)
      %33 = arith.muli %25, %cst : tensor<1x1xi64> loc(#loc26)
      %34 = tt.broadcast %33 : tensor<1x1xi64> -> tensor<1x2048xi64> loc(#loc26)
      %35 = arith.extsi %12 : tensor<1x2048xi32> to tensor<1x2048xi64> loc(#loc27)
      %36 = arith.addi %35, %34 : tensor<1x2048xi64> loc(#loc27)
      %37 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc28)
      %38 = tt.addptr %37, %36 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi64> loc(#loc28)
      %39 = tt.load %38, %20, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc29)
      %40 = arith.extf %39 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc30)
      %41 = arith.addf %40, %22 : tensor<1x2048xf32> loc(#loc31)
      %42 = arith.mulf %41, %41 : tensor<1x2048xf32> loc(#loc32)
      %43 = arith.addf %arg8, %42 : tensor<1x2048xf32> loc(#loc33)
      %44 = arith.select %20, %43, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc34)
      scf.yield %44 : tensor<1x2048xf32> loc(#loc35)
    } loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc37)), %arg8: f32 loc(callsite(#loc1 at #loc37))):
      %11 = arith.addf %arg7, %arg8 : f32 loc(#loc82)
      tt.reduce.return %11 : f32 loc(#loc77)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc77)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc39)
    scf.for %arg7 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %11 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc41)
      %12 = arith.addi %11, %4 : tensor<1x2048xi32> loc(#loc41)
      %13 = arith.cmpi slt, %12, %cst_5 : tensor<1x2048xi32> loc(#loc42)
      %14 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc43)
      %15 = tt.addptr %14, %12 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc43)
      %16 = tt.load %15, %13, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc44)
      %17 = arith.extf %16 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc45)
      %18 = arith.muli %0, %c4096_i32 : i32 loc(#loc46)
      %19 = tt.splat %18 : i32 -> tensor<1x2048xi32> loc(#loc80)
      %20 = arith.addi %12, %19 : tensor<1x2048xi32> loc(#loc47)
      %21 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc48)
      %22 = tt.addptr %21, %20 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc48)
      %23 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc81)
      %24 = arith.andi %23, %13 : tensor<1x2048xi1> loc(#loc49)
      %25 = tt.load %22, %24, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc50)
      %26 = arith.extf %25 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc51)
      %27 = arith.addi %7, %cst_0 : tensor<1x1xi64> loc(#loc52)
      %28 = arith.cmpi slt, %7, %cst_1 : tensor<1x1xi64> loc(#loc53)
      %29 = arith.select %28, %27, %7 : tensor<1x1xi1>, tensor<1x1xi64> loc(#loc54)
      %30 = arith.cmpi sge, %29, %cst_1 : tensor<1x1xi64> loc(#loc55)
      %31 = arith.cmpi slt, %29, %cst_0 : tensor<1x1xi64> loc(#loc56)
      %32 = arith.andi %30, %31 : tensor<1x1xi1> loc(#loc57)
      %33 = arith.xori %1, %true : i1 loc(#loc58)
      %34 = tt.splat %33 : i1 -> tensor<1x1xi1> loc(#loc58)
      %35 = arith.ori %32, %34 : tensor<1x1xi1> loc(#loc59)
      %36 = tt.broadcast %35 : tensor<1x1xi1> -> tensor<1x2048xi1> loc(#loc59)
      tt.assert %36, "index out of bounds: 0 <= tmp18 < 32128" : tensor<1x2048xi1> loc(#loc60)
      %37 = arith.muli %29, %cst : tensor<1x1xi64> loc(#loc61)
      %38 = tt.broadcast %37 : tensor<1x1xi64> -> tensor<1x2048xi64> loc(#loc61)
      %39 = arith.extsi %12 : tensor<1x2048xi32> to tensor<1x2048xi64> loc(#loc62)
      %40 = arith.addi %39, %38 : tensor<1x2048xi64> loc(#loc62)
      %41 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc63)
      %42 = tt.addptr %41, %40 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi64> loc(#loc63)
      %43 = tt.load %42, %24, %cst_2 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc64)
      %44 = arith.extf %43 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc65)
      %45 = arith.addf %44, %26 : tensor<1x2048xf32> loc(#loc66)
      %46 = arith.divf %10, %cst_4 : tensor<1x1xf32> loc(#loc67)
      %47 = arith.addf %46, %cst_3 : tensor<1x1xf32> loc(#loc68)
      %48 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc69)
      %49 = tt.broadcast %48 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc70)
      %50 = arith.mulf %45, %49 : tensor<1x2048xf32> loc(#loc70)
      %51 = arith.mulf %17, %50 : tensor<1x2048xf32> loc(#loc71)
      %52 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc72)
      %53 = tt.addptr %52, %20 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc72)
      %54 = arith.truncf %51 : tensor<1x2048xf32> to tensor<1x2048xbf16> loc(#loc73)
      tt.store %53, %54, %24 : tensor<1x2048x!tt.ptr<bf16>> loc(#loc73)
    } loc(#loc40)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":26:27)
#loc5 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":26:37)
#loc6 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":29:30)
#loc7 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":29:35)
#loc8 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":31:40)
#loc9 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":32:31)
#loc10 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":33:29)
#loc11 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:46)
#loc12 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:41)
#loc13 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:34)
#loc14 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:59)
#loc15 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:51)
#loc16 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":37:112)
#loc17 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":39:22)
#loc18 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":40:22)
#loc19 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":41:36)
#loc20 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:32)
#loc21 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:48)
#loc22 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:41)
#loc23 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:60)
#loc24 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:58)
#loc25 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":42:68)
#loc26 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":43:46)
#loc27 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":43:41)
#loc28 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":43:34)
#loc29 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":43:53)
#loc30 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":43:114)
#loc31 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":44:22)
#loc32 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":46:23)
#loc33 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":48:25)
#loc34 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":49:50)
#loc35 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":49:8)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc39 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":50:30)
#loc40 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":51:40)
#loc41 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":52:31)
#loc42 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":53:29)
#loc43 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":57:35)
#loc44 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":57:42)
#loc45 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":57:95)
#loc46 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:47)
#loc47 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:42)
#loc48 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:35)
#loc49 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:60)
#loc50 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:52)
#loc51 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":58:114)
#loc52 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":60:23)
#loc53 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":61:23)
#loc54 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":62:39)
#loc55 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:32)
#loc56 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:50)
#loc57 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:42)
#loc58 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:62)
#loc59 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:60)
#loc60 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":63:70)
#loc61 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":64:47)
#loc62 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":64:42)
#loc63 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":64:35)
#loc64 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":64:55)
#loc65 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":64:117)
#loc66 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":65:24)
#loc67 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":68:25)
#loc68 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":70:24)
#loc69 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":71:32)
#loc70 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":72:24)
#loc71 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":74:24)
#loc72 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":75:29)
#loc73 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":75:53)
#loc74 = loc("/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py":51:4)
#loc75 = loc(fused[#loc12, #loc11])
#loc76 = loc(fused[#loc14, #loc3])
#loc77 = loc(callsite(#loc36 at #loc37))
#loc79 = loc(callsite(#loc38 at #loc36))
#loc80 = loc(fused[#loc47, #loc46])
#loc81 = loc(fused[#loc49, #loc3])
#loc82 = loc(callsite(#loc79 at #loc37))
