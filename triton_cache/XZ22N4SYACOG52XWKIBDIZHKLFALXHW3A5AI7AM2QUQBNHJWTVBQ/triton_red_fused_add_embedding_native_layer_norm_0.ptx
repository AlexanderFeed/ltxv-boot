//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_add_embedding_native_layer_norm_0 // -- Begin function triton_red_fused_add_embedding_native_layer_norm_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 51, 119, 47, 99, 51, 119, 99, 106, 114, 117, 117, 53, 99, 110, 119, 112, 117, 122, 117, 112, 52, 110, 97, 98, 53, 55, 122, 118, 107, 113, 105, 110, 118, 55, 100, 118, 50, 121, 54, 105, 51, 104, 110, 118, 116, 55, 99, 54, 114, 120, 54, 52, 103, 117, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 49, 32, 60, 32, 55, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 51, 119, 47, 99, 51, 119, 99, 106, 114, 117, 117, 53, 99, 110, 119, 112, 117, 122, 117, 112, 52, 110, 97, 98, 53, 55, 122, 118, 107, 113, 105, 110, 118, 55, 100, 118, 50, 121, 54, 105, 51, 104, 110, 118, 116, 55, 99, 54, 114, 120, 54, 52, 103, 117, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52, 57, 52, 48, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_embedding_native_layer_norm_0
.visible .entry triton_red_fused_add_embedding_native_layer_norm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_6,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_7,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<52>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<179>;
	.reg .b64 	%rd<66>;
	.loc	1 18 0                          // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:18:0

// %bb.0:
	ld.param.u64 	%rd31, [triton_red_fused_add_embedding_native_layer_norm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 25 21                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:25:21
	setp.lt.s32 	%p11, %r1, 77;
	ld.param.u64 	%rd32, [triton_red_fused_add_embedding_native_layer_norm_0_param_2];
	.loc	1 29 30                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:29:30
	mul.wide.s32 	%rd33, %r1, 8;
	add.s64 	%rd12, %rd31, %rd33;
	.loc	1 29 35                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:29:35
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 30 30                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:30:30
	add.s64 	%rd22, %rd32, %rd33;
	.loc	1 30 35                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:30:35
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 41 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:41:22
	add.s64 	%rd34, %rd19, 49408;
	.loc	1 42 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:42:22
	setp.lt.s64 	%p12, %rd19, 0;
	.loc	1 43 36                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:43:36
	selp.b64 	%rd35, %rd34, %rd19, %p12;
	.loc	1 44 41                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:44:41
	setp.lt.u64 	%p13, %rd35, 49408;
	.loc	1 0 0                           // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:0:0
	setp.gt.s32 	%p14, %r1, 76;
	.loc	1 44 58                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:44:58
	or.pred  	%p15, %p14, %p13;
	.loc	1 44 68                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:44:68
	@%p15 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 68                          // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:0:68
	ld.param.u64 	%rd6, [triton_red_fused_add_embedding_native_layer_norm_0_param_1];
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r8, %r2, 2;
	and.b32  	%r5, %r8, 1020;
	.loc	1 36 29                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:36:29
	setp.lt.u32 	%p18, %r5, 768;
	.loc	1 42 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:42:22
	setp.lt.s64 	%p20, %rd17, 0;
	.loc	1 41 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:41:22
	add.s64 	%rd43, %rd17, 49408;
	.loc	1 43 36                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:43:36
	selp.b64 	%rd44, %rd43, %rd17, %p20;
	.loc	1 44 68                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:44:68
	bar.sync 	0;
	.loc	1 45 34                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:34
	mad.lo.s64 	%rd45, %rd44, 1536, %rd6;
	mul.wide.u32 	%rd46, %r5, 2;
	add.s64 	%rd42, %rd45, %rd46;
	.loc	1 45 62                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:62
	and.pred  	%p16, %p11, %p18;
	mov.b32 	%r12, 0;
	.loc	1 45 52                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:52
	// begin inline asm
	mov.u32 %r9, %r12;
	mov.u32 %r10, %r12;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 47 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:47:22
	add.s64 	%rd47, %rd29, 77;
	.loc	1 48 23                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:48:23
	setp.lt.s64 	%p21, %rd29, 0;
	.loc	1 49 38                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:49:38
	selp.b64 	%rd48, %rd47, %rd29, %p21;
	.loc	1 50 42                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:50:42
	setp.lt.u64 	%p22, %rd48, 77;
	.loc	1 50 57                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:50:57
	or.pred  	%p23, %p14, %p22;
	.loc	1 50 67                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:50:67
	@%p23 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	1 0 67                          // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:0:67
	ld.param.u64 	%rd10, [triton_red_fused_add_embedding_native_layer_norm_0_param_6];
	ld.param.u64 	%rd9, [triton_red_fused_add_embedding_native_layer_norm_0_param_5];
	ld.param.u64 	%rd8, [triton_red_fused_add_embedding_native_layer_norm_0_param_4];
	ld.param.u64 	%rd7, [triton_red_fused_add_embedding_native_layer_norm_0_param_3];
	and.b32  	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	cvt.u64.u32 	%rd4, %r5;
	.loc	1 48 23                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:48:23
	setp.lt.s64 	%p39, %rd27, 0;
	.loc	1 47 22                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:47:22
	add.s64 	%rd61, %rd27, 77;
	.loc	1 49 38                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:49:38
	selp.b64 	%rd62, %rd61, %rd27, %p39;
	.loc	1 45 52                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:52
	mov.b32 	{%rs1, %rs2}, %r10;
	.loc	1 45 113                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:113
	cvt.f32.bf16 	%f1, %rs2;
	cvt.f32.bf16 	%f2, %rs1;
	.loc	1 45 52                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:52
	mov.b32 	{%rs3, %rs4}, %r9;
	.loc	1 45 113                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:45:113
	cvt.f32.bf16 	%f3, %rs4;
	cvt.f32.bf16 	%f4, %rs3;
	.loc	1 50 67                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:50:67
	bar.sync 	0;
	.loc	1 51 35                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:51:35
	mad.lo.s64 	%rd63, %rd62, 1536, %rd7;
	shl.b64 	%rd64, %rd4, 1;
	add.s64 	%rd55, %rd63, %rd64;
	.loc	1 51 54                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:51:54
	// begin inline asm
	mov.u32 %r13, %r12;
	mov.u32 %r14, %r12;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd55 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r13;
	mov.b32 	{%rs7, %rs8}, %r14;
	.loc	1 51 115                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:51:115
	cvt.f32.bf16 	%f5, %rs5;
	cvt.f32.bf16 	%f6, %rs6;
	cvt.f32.bf16 	%f7, %rs7;
	cvt.f32.bf16 	%f8, %rs8;
	.loc	1 52 23                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:52:23
	add.f32 	%f9, %f4, %f5;
	add.f32 	%f10, %f3, %f6;
	add.f32 	%f11, %f2, %f7;
	add.f32 	%f12, %f1, %f8;
	.loc	1 58 64                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:58:64
	selp.f32 	%f13, %f9, 0f00000000, %p16;
	selp.f32 	%f14, %f10, 0f00000000, %p16;
	selp.f32 	%f15, %f11, 0f00000000, %p16;
	selp.f32 	%f16, %f12, 0f00000000, %p16;
	.loc	1 60 68                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:60:68
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p16;
$L__tmp1:
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f18, %f14, %f13;
	.loc	2 218 28                        // triton_helpers.py:218:28
	selp.f32 	%f19, 0f40000000, 0f00000000, %p16;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p40, %f19, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f20, %f17, %f19;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f21, 0f00000000, %f20, %p40;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f22, %f21, %f18, %f13;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f23, %f18, %f18;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f24, %f17, %f23;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f25, %f21, %f24, 0f00000000;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f26, %f15, %f22;
	.loc	2 218 28                        // triton_helpers.py:218:28
	selp.f32 	%f27, 0f40400000, 0f00000000, %p16;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p41, %f27, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f28, %f17, %f27;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f29, 0f00000000, %f28, %p41;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f30, %f29, %f26, %f22;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f31, %f26, %f26;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f32, %f19, %f31;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f33, %f29, %f32, %f25;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f34, %f16, %f30;
	.loc	2 218 28                        // triton_helpers.py:218:28
	selp.f32 	%f35, 0f40800000, 0f00000000, %p16;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p42, %f35, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f36, %f17, %f35;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f37, 0f00000000, %f36, %p42;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f38, %f37, %f34, %f30;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f39, %f34, %f34;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f40, %f27, %f39;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f41, %f37, %f40, %f33;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r53, %f38;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f42, %r54;
	mov.b32 	%r55, %f41;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f43, %r56;
	mov.b32 	%r57, %f35;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f44, %r58;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f45, %f42, %f38;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f46, %f35, %f44;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p43, %f46, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f47, %f44, %f46;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f48, 0f00000000, %f47, %p43;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f49, %f48, %f45, %f38;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f50, %f41, %f43;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f51, %f45, %f45;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f52, %f35, %f51;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f53, %f48, %f52, %f50;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r59, %f49;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f54, %r60;
	mov.b32 	%r61, %f53;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f55, %r62;
	mov.b32 	%r63, %f46;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f56, %r64;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f57, %f54, %f49;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f58, %f46, %f56;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p44, %f58, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f59, %f56, %f58;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f60, 0f00000000, %f59, %p44;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f61, %f60, %f57, %f49;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f62, %f53, %f55;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f63, %f57, %f57;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f64, %f46, %f63;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f65, %f60, %f64, %f62;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r65, %f61;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f66, %r66;
	mov.b32 	%r67, %f65;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f67, %r68;
	mov.b32 	%r69, %f58;
	shfl.sync.bfly.b32	%r70, %r69, 4, 31, -1;
	mov.b32 	%f68, %r70;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f69, %f66, %f61;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f70, %f58, %f68;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p45, %f70, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f71, %f68, %f70;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f72, 0f00000000, %f71, %p45;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f73, %f72, %f69, %f61;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f74, %f65, %f67;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f75, %f69, %f69;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f76, %f58, %f75;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f77, %f72, %f76, %f74;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r71, %f73;
	shfl.sync.bfly.b32	%r72, %r71, 2, 31, -1;
	mov.b32 	%f78, %r72;
	mov.b32 	%r73, %f77;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f79, %r74;
	mov.b32 	%r75, %f70;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f80, %r76;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f81, %f78, %f73;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f82, %f70, %f80;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p46, %f82, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f83, %f80, %f82;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f84, 0f00000000, %f83, %p46;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f85, %f84, %f81, %f73;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f86, %f77, %f79;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f87, %f81, %f81;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f88, %f70, %f87;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f89, %f84, %f88, %f86;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r77, %f85;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f90, %r78;
	mov.b32 	%r79, %f89;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f91, %r80;
	mov.b32 	%r81, %f82;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f92, %r82;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f93, %f90, %f85;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f94, %f82, %f92;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p47, %f94, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f95, %f92, %f94;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f96, 0f00000000, %f95, %p47;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f97, %f96, %f93, %f85;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f98, %f89, %f91;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f99, %f93, %f93;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f100, %f82, %f99;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f101, %f96, %f100, %f98;
	.loc	2 229 46                        // triton_helpers.py:229:46
	and.b32  	%r83, %r4, 7;
	setp.eq.s32 	%p25, %r3, 0;
	shl.b32 	%r84, %r83, 2;
	mov.u32 	%r85, global_smem;
	add.s32 	%r17, %r85, %r84;
	mov.b32 	%r18, %f97;
	// begin inline asm
	@%p25 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r86, %r85, 32;
	add.s32 	%r19, %r86, %r84;
	mov.b32 	%r20, %f101;
	// begin inline asm
	@%p25 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r87, %r85, 64;
	add.s32 	%r21, %r87, %r84;
	mov.b32 	%r22, %f94;
	// begin inline asm
	@%p25 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p28, %r2, 8;
	add.s32 	%r24, %r85, %r8;
	// begin inline asm
	@%p28 ld.shared.b32 %r23, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f102, %r23;
	add.s32 	%r26, %r86, %r8;
	// begin inline asm
	@%p28 ld.shared.b32 %r25, [ %r26 + 0 ];
	// end inline asm
	mov.b32 	%f103, %r25;
	add.s32 	%r28, %r87, %r8;
	// begin inline asm
	@%p28 ld.shared.b32 %r27, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f104, %r27;
	shfl.sync.bfly.b32	%r89, %r23, 4, 31, -1;
	mov.b32 	%f105, %r89;
	shfl.sync.bfly.b32	%r90, %r25, 4, 31, -1;
	mov.b32 	%f106, %r90;
	shfl.sync.bfly.b32	%r91, %r27, 4, 31, -1;
	mov.b32 	%f107, %r91;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f108, %f105, %f102;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f109, %f104, %f107;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p48, %f109, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f110, %f107, %f109;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f111, 0f00000000, %f110, %p48;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f112, %f108, %f111, %f102;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f113, %f103, %f106;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f114, %f108, %f108;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f115, %f114, %f104;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f116, %f115, %f111, %f113;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r92, %f112;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f117, %r93;
	mov.b32 	%r94, %f116;
	shfl.sync.bfly.b32	%r95, %r94, 2, 31, -1;
	mov.b32 	%f118, %r95;
	mov.b32 	%r96, %f109;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f119, %r97;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f120, %f117, %f112;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f121, %f109, %f119;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p49, %f121, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f122, %f119, %f121;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f123, 0f00000000, %f122, %p49;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f124, %f120, %f123, %f112;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f125, %f116, %f118;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f126, %f120, %f120;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f127, %f109, %f126;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f128, %f123, %f127, %f125;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r98, %f124;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f129, %r99;
	mov.b32 	%r100, %f128;
	shfl.sync.bfly.b32	%r101, %r100, 1, 31, -1;
	mov.b32 	%f130, %r101;
	mov.b32 	%r102, %f121;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f131, %r103;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f132, %f129, %f124;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f133, %f121, %f131;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p50, %f133, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f134, %f131, %f133;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f135, 0f00000000, %f134, %p50;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f136, %f132, %f135, %f124;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f137, %f128, %f130;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f138, %f132, %f132;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f139, %f121, %f138;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f140, %f135, %f139, %f137;
	.loc	2 229 46                        // triton_helpers.py:229:46
	and.b32  	%r104, %r2, 7;
	setp.eq.s32 	%p51, %r104, 0;
	and.pred  	%p31, %p28, %p51;
	mov.b32 	%r30, %f136;
	// begin inline asm
	@%p31 st.shared.b32 [ %r24 + 0 ], %r30;
	// end inline asm
	mov.b32 	%r32, %f140;
	// begin inline asm
	@%p31 st.shared.b32 [ %r26 + 0 ], %r32;
	// end inline asm
	mov.b32 	%r34, %f133;
	// begin inline asm
	@%p31 st.shared.b32 [ %r28 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f141, [global_smem];
	ld.shared.f32 	%f142, [global_smem+32];
$L__tmp2:
	.loc	1 71 35                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:71:35
	add.s64 	%rd56, %rd8, %rd64;
	.loc	1 71 42                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:71:42
	// begin inline asm
	mov.u32 %r35, %r12;
	mov.u32 %r36, %r12;
	@%p18 ld.global.L1::evict_last.v2.b32 { %r35, %r36 }, [ %rd56 + 0 ];
	// end inline asm
	.loc	1 72 35                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:72:35
	add.s64 	%rd57, %rd9, %rd64;
	.loc	1 72 42                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:72:42
	// begin inline asm
	mov.u32 %r39, %r12;
	mov.u32 %r40, %r12;
	@%p18 ld.global.L1::evict_last.v2.b32 { %r39, %r40 }, [ %rd57 + 0 ];
	// end inline asm
	.loc	1 77 70                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:77:70
	bar.sync 	0;
	.loc	1 78 54                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:78:54
	// begin inline asm
	mov.u32 %r43, %r12;
	mov.u32 %r44, %r12;
	@%p16 ld.global.L1::evict_first.v2.b32 { %r43, %r44 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 83 67                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:83:67
	bar.sync 	0;
	.loc	1 84 54                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:84:54
	// begin inline asm
	mov.u32 %r47, %r12;
	mov.u32 %r48, %r12;
	@%p16 ld.global.L1::evict_first.v2.b32 { %r47, %r48 }, [ %rd55 + 0 ];
	// end inline asm
	mov.f32 	%f143, 0f44400000;
	.loc	1 89 25                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:89:25
	div.full.f32 	%f144, %f142, %f143;
	.loc	1 91 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:91:24
	add.f32 	%f145, %f144, 0f3727C5AC;
	.loc	1 92 32                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:92:32
	rsqrt.approx.ftz.f32 	%f146, %f145;
	.loc	1 99 36                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:99:36
	mad.lo.s32 	%r105, %r1, 768, %r5;
	.loc	1 99 29                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:99:29
	mul.wide.s32 	%rd65, %r105, 2;
	add.s64 	%rd60, %rd10, %rd65;
	.loc	1 78 116                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:78:116
	mov.b32 	{%rs9, %rs10}, %r43;
	cvt.f32.bf16 	%f147, %rs9;
	cvt.f32.bf16 	%f148, %rs10;
	.loc	1 84 116                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:84:116
	mov.b32 	{%rs11, %rs12}, %r47;
	cvt.f32.bf16 	%f149, %rs11;
	cvt.f32.bf16 	%f150, %rs12;
	.loc	1 85 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:85:24
	add.f32 	%f151, %f148, %f150;
	add.f32 	%f152, %f147, %f149;
	.loc	1 87 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:87:24
	sub.f32 	%f153, %f152, %f141;
	sub.f32 	%f154, %f151, %f141;
	.loc	1 71 95                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:71:95
	mov.b32 	{%rs13, %rs14}, %r35;
	cvt.f32.bf16 	%f155, %rs14;
	cvt.f32.bf16 	%f156, %rs13;
	.loc	1 72 95                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:72:95
	mov.b32 	{%rs15, %rs16}, %r39;
	cvt.f32.bf16 	%f157, %rs16;
	cvt.f32.bf16 	%f158, %rs15;
	.loc	1 93 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:93:24
	mul.f32 	%f159, %f154, %f146;
	mul.f32 	%f160, %f153, %f146;
	.loc	1 97 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:97:24
	fma.rn.f32 	%f161, %f160, %f156, %f158;
	fma.rn.f32 	%f162, %f159, %f155, %f157;
	.loc	1 99 52                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:99:52
	cvt.rn.bf16x2.f32 	%r51, %f162, %f161;
	.loc	1 78 116                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:78:116
	mov.b32 	{%rs17, %rs18}, %r44;
	cvt.f32.bf16 	%f163, %rs17;
	cvt.f32.bf16 	%f164, %rs18;
	.loc	1 84 116                        // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:84:116
	mov.b32 	{%rs19, %rs20}, %r48;
	cvt.f32.bf16 	%f165, %rs19;
	cvt.f32.bf16 	%f166, %rs20;
	.loc	1 85 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:85:24
	add.f32 	%f167, %f164, %f166;
	add.f32 	%f168, %f163, %f165;
	.loc	1 87 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:87:24
	sub.f32 	%f169, %f168, %f141;
	sub.f32 	%f170, %f167, %f141;
	.loc	1 71 95                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:71:95
	mov.b32 	{%rs21, %rs22}, %r36;
	cvt.f32.bf16 	%f171, %rs22;
	cvt.f32.bf16 	%f172, %rs21;
	.loc	1 72 95                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:72:95
	mov.b32 	{%rs23, %rs24}, %r40;
	cvt.f32.bf16 	%f173, %rs24;
	cvt.f32.bf16 	%f174, %rs23;
	.loc	1 93 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:93:24
	mul.f32 	%f175, %f170, %f146;
	mul.f32 	%f176, %f169, %f146;
	.loc	1 97 24                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:97:24
	fma.rn.f32 	%f177, %f176, %f172, %f174;
	fma.rn.f32 	%f178, %f175, %f171, %f173;
	.loc	1 99 52                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:99:52
	cvt.rn.bf16x2.f32 	%r52, %f178, %f177;
	// begin inline asm
	@%p16 st.global.v2.b32 [ %rd60 + 0 ], { %r51, %r52 };
	// end inline asm
	.loc	1 65 4                          // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:65:4
	ret;
$L__BB0_1:
	.loc	1 44 68                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:44:68
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__BB0_3:
	.loc	1 50 67                         // c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py:50:67
	mov.u64 	%rd49, assertMessage_1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, assertFile_1;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, assertFunc_1;
	cvta.global.u64 	%rd54, %rd53;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd50;
	.param .b64 param1;
	st.param.b64 	[param1], %rd52;
	.param .b32 param2;
	st.param.b32 	[param2], 50;
	.param .b64 param3;
	st.param.b64 	[param3], %rd54;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3w/c3wcjruu5cnwpuzup4nab57zvkqinv7dv2y6i3hnvt7c6rx64gut.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 119
.b8 99
.b8 106
.b8 114
.b8 117
.b8 117
.b8 53
.b8 99
.b8 110
.b8 119
.b8 112
.b8 117
.b8 122
.b8 117
.b8 112
.b8 52
.b8 110
.b8 97
.b8 98
.b8 53
.b8 55
.b8 122
.b8 118
.b8 107
.b8 113
.b8 105
.b8 110
.b8 118
.b8 55
.b8 100
.b8 118
.b8 50
.b8 121
.b8 54
.b8 105
.b8 51
.b8 104
.b8 110
.b8 118
.b8 116
.b8 55
.b8 99
.b8 54
.b8 114
.b8 120
.b8 54
.b8 52
.b8 103
.b8 117
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 85                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
