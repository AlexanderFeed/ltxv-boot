; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !6 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %12 = shl i32 %11, 8, !dbg !10
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %14 = and i32 %13, 255, !dbg !11
  %15 = or disjoint i32 %12, %14, !dbg !12
  %16 = sdiv i32 %15, 3072, !dbg !13
  %17 = mul i32 %16, 3072, !dbg !14
  %.decomposed = sub i32 %15, %17, !dbg !14
  %18 = sext i32 %15 to i64, !dbg !15
  %19 = getelementptr bfloat, ptr addrspace(1) %0, i64 %18, !dbg !15
  %20 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %19) #1, !dbg !16
  %21 = bitcast i16 %20 to bfloat, !dbg !16
  %22 = fpext bfloat %21 to float, !dbg !17
  %23 = add nsw i32 %.decomposed, 15360, !dbg !18
  %24 = zext nneg i32 %23 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %25) #1, !dbg !20
  %27 = getelementptr bfloat, ptr addrspace(1) %2, i64 %24, !dbg !21
  %28 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %27) #1, !dbg !22
  %29 = getelementptr i32, ptr addrspace(1) %3, i64 %18, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %29) #1, !dbg !24
  %31 = sext i32 %16 to i64, !dbg !25
  %32 = getelementptr bfloat, ptr addrspace(1) %4, i64 %31, !dbg !25
  %33 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %32) #1, !dbg !26
  %34 = bitcast i16 %33 to bfloat, !dbg !26
  %35 = getelementptr bfloat, ptr addrspace(1) %5, i64 %31, !dbg !27
  %36 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %35) #1, !dbg !28
  %37 = bitcast i16 %36 to bfloat, !dbg !28
  %38 = sext i32 %.decomposed to i64, !dbg !29
  %39 = getelementptr bfloat, ptr addrspace(1) %6, i64 %38, !dbg !29
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %39) #1, !dbg !30
  %41 = bitcast i16 %40 to bfloat, !dbg !30
  %42 = fpext bfloat %41 to float, !dbg !31
  %43 = getelementptr bfloat, ptr addrspace(1) %7, i64 %38, !dbg !32
  %44 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %43) #1, !dbg !33
  %45 = sitofp i32 %30 to float, !dbg !34
  %.inv = fcmp oge bfloat %34, 0xR0000, !dbg !35
  %46 = select i1 %.inv, bfloat 0xR0000, bfloat %34, !dbg !35
  %47 = fpext bfloat %46 to float, !dbg !35
  %48 = fsub float 0.000000e+00, %47, !dbg !39
  %.inv1 = fcmp ole bfloat %37, 0xR0000, !dbg !40
  %49 = select i1 %.inv1, bfloat 0xR0000, bfloat %37, !dbg !40
  %50 = fpext bfloat %49 to float, !dbg !40
  %51 = fcmp ogt float %48, %50, !dbg !42
  %52 = fcmp uno float %48, 0.000000e+00, !dbg !44
  %53 = or i1 %51, %52, !dbg !45
  %54 = select i1 %53, float %48, float %50, !dbg !46
  %55 = fmul float %54, 0x3F80204080000000, !dbg !47
  %56 = fcmp ogt float %55, 0x3EE4F8B580000000, !dbg !48
  %57 = fcmp uno float %55, 0.000000e+00, !dbg !50
  %58 = or i1 %56, %57, !dbg !51
  %59 = select i1 %58, float %55, float 0x3EE4F8B580000000, !dbg !52
  %60 = fmul float %59, %45, !dbg !53
  %61 = fmul float %60, %42, !dbg !54
  %62 = insertelement <2 x i16> poison, i16 %28, i64 0, !dbg !22
  %63 = insertelement <2 x i16> %62, i16 %44, i64 1, !dbg !22
  %64 = bitcast <2 x i16> %63 to <2 x bfloat>, !dbg !22
  %65 = fpext <2 x bfloat> %64 to <2 x float>, !dbg !55
  %66 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !56
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !56
  %68 = insertelement <2 x float> %67, float %61, i64 1, !dbg !56
  %69 = fadd <2 x float> %68, %65, !dbg !56
  %shift = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !57
  %70 = fmul <2 x float> %69, %shift, !dbg !57
  %71 = extractelement <2 x float> %70, i64 0, !dbg !57
  %72 = fadd float %71, %22, !dbg !58
  %73 = fptrunc float %72 to bfloat, !dbg !59
  %74 = bitcast bfloat %73 to i16, !dbg !59
  tail call void asm sideeffect "st.global.b16 [ $1 + 0 ], { $0 };", "c,l"(i16 %74, ptr addrspace(1) %19) #1, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmbn2tdzmldrkgc7zmmda5ba62ajtv2il2hwlqcqlevv7gsbvmiz.py", directory: "/tmp/torchinductor_root/mb")
!4 = !{ptr @triton_, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 22, type: !7, scopeLine: 22, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 28, scope: !6)
!10 = !DILocation(line: 24, column: 33, scope: !6)
!11 = !DILocation(line: 25, column: 36, scope: !6)
!12 = !DILocation(line: 25, column: 23, scope: !6)
!13 = !DILocation(line: 29, column: 19, scope: !6)
!14 = !DILocation(line: 28, column: 19, scope: !6)
!15 = !DILocation(line: 30, column: 34, scope: !6)
!16 = !DILocation(line: 30, column: 39, scope: !6)
!17 = !DILocation(line: 30, column: 48, scope: !6)
!18 = !DILocation(line: 31, column: 38, scope: !6)
!19 = !DILocation(line: 31, column: 30, scope: !6)
!20 = !DILocation(line: 31, column: 43, scope: !6)
!21 = !DILocation(line: 32, column: 30, scope: !6)
!22 = !DILocation(line: 32, column: 43, scope: !6)
!23 = !DILocation(line: 33, column: 30, scope: !6)
!24 = !DILocation(line: 33, column: 35, scope: !6)
!25 = !DILocation(line: 34, column: 30, scope: !6)
!26 = !DILocation(line: 34, column: 35, scope: !6)
!27 = !DILocation(line: 35, column: 31, scope: !6)
!28 = !DILocation(line: 35, column: 36, scope: !6)
!29 = !DILocation(line: 36, column: 31, scope: !6)
!30 = !DILocation(line: 36, column: 36, scope: !6)
!31 = !DILocation(line: 36, column: 75, scope: !6)
!32 = !DILocation(line: 37, column: 31, scope: !6)
!33 = !DILocation(line: 37, column: 36, scope: !6)
!34 = !DILocation(line: 40, column: 19, scope: !6)
!35 = !DILocation(line: 97, column: 29, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !6, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 42, column: 40, scope: !6)
!39 = !DILocation(line: 43, column: 13, scope: !6)
!40 = !DILocation(line: 105, column: 29, scope: !36, inlinedAt: !41)
!41 = !DILocation(line: 44, column: 42, scope: !6)
!42 = !DILocation(line: 102, column: 15, scope: !36, inlinedAt: !43)
!43 = !DILocation(line: 45, column: 42, scope: !6)
!44 = !DILocation(line: 104, column: 21, scope: !36, inlinedAt: !43)
!45 = !DILocation(line: 104, column: 16, scope: !36, inlinedAt: !43)
!46 = !DILocation(line: 105, column: 29, scope: !36, inlinedAt: !43)
!47 = !DILocation(line: 47, column: 20, scope: !6)
!48 = !DILocation(line: 102, column: 15, scope: !36, inlinedAt: !49)
!49 = !DILocation(line: 50, column: 42, scope: !6)
!50 = !DILocation(line: 104, column: 21, scope: !36, inlinedAt: !49)
!51 = !DILocation(line: 104, column: 16, scope: !36, inlinedAt: !49)
!52 = !DILocation(line: 105, column: 29, scope: !36, inlinedAt: !49)
!53 = !DILocation(line: 52, column: 19, scope: !6)
!54 = !DILocation(line: 53, column: 20, scope: !6)
!55 = !DILocation(line: 32, column: 82, scope: !6)
!56 = !DILocation(line: 39, column: 18, scope: !6)
!57 = !DILocation(line: 55, column: 19, scope: !6)
!58 = !DILocation(line: 56, column: 19, scope: !6)
!59 = !DILocation(line: 57, column: 40, scope: !6)
!60 = !DILocation(line: 57, column: 4, scope: !6)
