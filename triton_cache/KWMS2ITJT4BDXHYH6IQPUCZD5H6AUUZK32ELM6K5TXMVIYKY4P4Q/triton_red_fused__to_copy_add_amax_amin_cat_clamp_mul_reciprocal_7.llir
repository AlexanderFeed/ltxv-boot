; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 1, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = lshr i32 %11, 9, !dbg !11
  %.lobit = and i32 %12, 1, !dbg !11
  %13 = and i32 %11, 31, !dbg !11
  %14 = or disjoint i32 %.lobit, %10, !dbg !12
  %15 = icmp slt i32 %14, 4112, !dbg !13
  %16 = shl i32 %11, 4, !dbg !14
  %17 = and i32 %16, 8176, !dbg !14
  %18 = or disjoint i32 %17, 4, !dbg !14
  %19 = or disjoint i32 %17, 8, !dbg !14
  %20 = or disjoint i32 %17, 12, !dbg !14
  %21 = mul i32 %14, 3072, !dbg !15
  %22 = mul i32 %14, 12288, !dbg !16
  %23 = add i32 %22, -3072
  %24 = add i32 %23, %18
  %25 = add i32 %23, %20
  %26 = zext nneg i32 %17 to i64, !dbg !17
  br label %27, !dbg !17

27:                                               ; preds = %8, %__nv_tanhf.exit591
  %28 = phi i1 [ true, %8 ], [ false, %__nv_tanhf.exit591 ]
  %indvars.iv = phi i64 [ 0, %8 ], [ 8192, %__nv_tanhf.exit591 ]
  %29 = phi <16 x float> [ splat (float 0xFFF0000000000000), %8 ], [ %798, %__nv_tanhf.exit591 ]
  %30 = phi <16 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %794, %__nv_tanhf.exit591 ]
  %31 = or disjoint i64 %indvars.iv, %26, !dbg !18
  %32 = icmp samesign ult i64 %31, 15360, !dbg !19
  %33 = icmp samesign ult i64 %31, 3072, !dbg !20
  %34 = trunc nuw nsw i64 %31 to i32, !dbg !21
  %35 = add i32 %21, %34, !dbg !21
  %36 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !21
  %37 = or disjoint i32 %19, %36, !dbg !21
  %38 = add i32 %37, %21, !dbg !21
  %39 = sext i32 %35 to i64, !dbg !22
  %40 = getelementptr bfloat, ptr addrspace(1) %0, i64 %39, !dbg !22
  %41 = sext i32 %38 to i64, !dbg !22
  %42 = getelementptr bfloat, ptr addrspace(1) %0, i64 %41, !dbg !22
  %43 = and i1 %15, %32, !dbg !23
  %44 = and i1 %15, %33, !dbg !24
  %45 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %40, i1 %44) #5, !dbg !25
  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !25
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !25
  %48 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !25
  %49 = bitcast i32 %48 to <2 x bfloat>, !dbg !25
  %50 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !25
  %51 = bitcast i32 %50 to <2 x bfloat>, !dbg !25
  %52 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !25
  %53 = bitcast i32 %52 to <2 x bfloat>, !dbg !25
  %54 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %42, i1 %44) #5, !dbg !25
  %55 = extractvalue { i32, i32, i32, i32 } %54, 0, !dbg !25
  %56 = bitcast i32 %55 to <2 x bfloat>, !dbg !25
  %57 = extractvalue { i32, i32, i32, i32 } %54, 1, !dbg !25
  %58 = bitcast i32 %57 to <2 x bfloat>, !dbg !25
  %59 = extractvalue { i32, i32, i32, i32 } %54, 2, !dbg !25
  %60 = bitcast i32 %59 to <2 x bfloat>, !dbg !25
  %61 = extractvalue { i32, i32, i32, i32 } %54, 3, !dbg !25
  %62 = bitcast i32 %61 to <2 x bfloat>, !dbg !25
  %63 = shufflevector <2 x bfloat> %62, <2 x bfloat> %60, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %64 = shufflevector <2 x bfloat> %58, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %65 = shufflevector <16 x bfloat> %63, <16 x bfloat> %64, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %66 = shufflevector <2 x bfloat> %58, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %67 = shufflevector <16 x bfloat> %65, <16 x bfloat> %66, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %68 = shufflevector <2 x bfloat> %56, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %69 = shufflevector <16 x bfloat> %67, <16 x bfloat> %68, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %70 = shufflevector <2 x bfloat> %56, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %71 = shufflevector <16 x bfloat> %69, <16 x bfloat> %70, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %72 = shufflevector <2 x bfloat> %53, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %73 = shufflevector <16 x bfloat> %71, <16 x bfloat> %72, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %74 = shufflevector <2 x bfloat> %53, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %75 = shufflevector <16 x bfloat> %73, <16 x bfloat> %74, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %76 = shufflevector <2 x bfloat> %51, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %77 = shufflevector <16 x bfloat> %75, <16 x bfloat> %76, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %78 = shufflevector <2 x bfloat> %51, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %79 = shufflevector <16 x bfloat> %77, <16 x bfloat> %78, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %80 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %81 = shufflevector <16 x bfloat> %79, <16 x bfloat> %80, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 poison, i32 poison>, !dbg !26
  %82 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %83 = shufflevector <16 x bfloat> %81, <16 x bfloat> %82, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !26
  %84 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %85 = shufflevector <16 x bfloat> %83, <16 x bfloat> %84, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 17, i32 poison>, !dbg !26
  %86 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %87 = shufflevector <16 x bfloat> %85, <16 x bfloat> %86, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !26
  %88 = fpext <16 x bfloat> %87 to <16 x float>, !dbg !26
  %89 = icmp samesign ugt i64 %31, 3071, !dbg !27
  %90 = add i32 %23, %34, !dbg !28
  %91 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !28
  %92 = add i32 %24, %91, !dbg !28
  %93 = add i32 %23, %37, !dbg !28
  %94 = add i32 %25, %91, !dbg !28
  %95 = sext i32 %90 to i64, !dbg !29
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %95, !dbg !29
  %97 = sext i32 %92 to i64, !dbg !29
  %98 = getelementptr float, ptr addrspace(1) %1, i64 %97, !dbg !29
  %99 = sext i32 %93 to i64, !dbg !29
  %100 = getelementptr float, ptr addrspace(1) %1, i64 %99, !dbg !29
  %101 = sext i32 %94 to i64, !dbg !29
  %102 = getelementptr float, ptr addrspace(1) %1, i64 %101, !dbg !29
  %103 = and i1 %89, %43, !dbg !30
  %104 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %96, i1 %103) #5, !dbg !31
  %105 = extractvalue { i32, i32, i32, i32 } %104, 0, !dbg !31
  %106 = extractvalue { i32, i32, i32, i32 } %104, 1, !dbg !31
  %107 = extractvalue { i32, i32, i32, i32 } %104, 2, !dbg !31
  %108 = extractvalue { i32, i32, i32, i32 } %104, 3, !dbg !31
  %109 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %98, i1 %103) #5, !dbg !31
  %110 = extractvalue { i32, i32, i32, i32 } %109, 0, !dbg !31
  %111 = extractvalue { i32, i32, i32, i32 } %109, 1, !dbg !31
  %112 = extractvalue { i32, i32, i32, i32 } %109, 2, !dbg !31
  %113 = extractvalue { i32, i32, i32, i32 } %109, 3, !dbg !31
  %114 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %100, i1 %103) #5, !dbg !31
  %115 = extractvalue { i32, i32, i32, i32 } %114, 0, !dbg !31
  %116 = extractvalue { i32, i32, i32, i32 } %114, 1, !dbg !31
  %117 = extractvalue { i32, i32, i32, i32 } %114, 2, !dbg !31
  %118 = extractvalue { i32, i32, i32, i32 } %114, 3, !dbg !31
  %119 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %102, i1 %103) #5, !dbg !31
  %120 = extractvalue { i32, i32, i32, i32 } %119, 0, !dbg !31
  %121 = extractvalue { i32, i32, i32, i32 } %119, 1, !dbg !31
  %122 = extractvalue { i32, i32, i32, i32 } %119, 2, !dbg !31
  %123 = extractvalue { i32, i32, i32, i32 } %119, 3, !dbg !31
  %124 = insertelement <16 x i32> poison, i32 %123, i64 0, !dbg !31
  %125 = insertelement <16 x i32> %124, i32 %122, i64 1, !dbg !31
  %126 = insertelement <16 x i32> %125, i32 %121, i64 2, !dbg !31
  %127 = insertelement <16 x i32> %126, i32 %120, i64 3, !dbg !31
  %128 = insertelement <16 x i32> %127, i32 %118, i64 4, !dbg !31
  %129 = insertelement <16 x i32> %128, i32 %117, i64 5, !dbg !31
  %130 = insertelement <16 x i32> %129, i32 %116, i64 6, !dbg !31
  %131 = insertelement <16 x i32> %130, i32 %115, i64 7, !dbg !31
  %132 = insertelement <16 x i32> %131, i32 %113, i64 8, !dbg !31
  %133 = insertelement <16 x i32> %132, i32 %112, i64 9, !dbg !31
  %134 = insertelement <16 x i32> %133, i32 %111, i64 10, !dbg !31
  %135 = insertelement <16 x i32> %134, i32 %110, i64 11, !dbg !31
  %136 = insertelement <16 x i32> %135, i32 %108, i64 12, !dbg !31
  %137 = insertelement <16 x i32> %136, i32 %107, i64 13, !dbg !31
  %138 = insertelement <16 x i32> %137, i32 %106, i64 14, !dbg !31
  %139 = insertelement <16 x i32> %138, i32 %105, i64 15, !dbg !31
  %140 = bitcast <16 x i32> %139 to <16 x float>, !dbg !31
  %141 = fmul <16 x float> %140, splat (float 5.000000e-01), !dbg !32
  %142 = bitcast i32 %105 to float, !dbg !33
  %143 = fmul float %142, %142, !dbg !33
  %144 = bitcast i32 %106 to float, !dbg !33
  %145 = fmul float %144, %144, !dbg !33
  %146 = bitcast i32 %107 to float, !dbg !33
  %147 = fmul float %146, %146, !dbg !33
  %148 = bitcast i32 %108 to float, !dbg !33
  %149 = fmul float %148, %148, !dbg !33
  %150 = bitcast i32 %110 to float, !dbg !33
  %151 = fmul float %150, %150, !dbg !33
  %152 = bitcast i32 %111 to float, !dbg !33
  %153 = fmul float %152, %152, !dbg !33
  %154 = bitcast i32 %112 to float, !dbg !33
  %155 = fmul float %154, %154, !dbg !33
  %156 = bitcast i32 %113 to float, !dbg !33
  %157 = fmul float %156, %156, !dbg !33
  %158 = bitcast i32 %115 to float, !dbg !33
  %159 = fmul float %158, %158, !dbg !33
  %160 = bitcast i32 %116 to float, !dbg !33
  %161 = fmul float %160, %160, !dbg !33
  %162 = bitcast i32 %117 to float, !dbg !33
  %163 = fmul float %162, %162, !dbg !33
  %164 = bitcast i32 %118 to float, !dbg !33
  %165 = fmul float %164, %164, !dbg !33
  %166 = bitcast i32 %120 to float, !dbg !33
  %167 = fmul float %166, %166, !dbg !33
  %168 = bitcast i32 %121 to float, !dbg !33
  %169 = fmul float %168, %168, !dbg !33
  %170 = bitcast i32 %122 to float, !dbg !33
  %171 = fmul float %170, %170, !dbg !33
  %172 = bitcast i32 %123 to float, !dbg !33
  %173 = fmul float %172, %172, !dbg !33
  %174 = fmul float %143, %142, !dbg !34
  %175 = fmul float %145, %144, !dbg !34
  %176 = fmul float %147, %146, !dbg !34
  %177 = fmul float %149, %148, !dbg !34
  %178 = fmul float %151, %150, !dbg !34
  %179 = fmul float %153, %152, !dbg !34
  %180 = fmul float %155, %154, !dbg !34
  %181 = fmul float %157, %156, !dbg !34
  %182 = fmul float %159, %158, !dbg !34
  %183 = fmul float %161, %160, !dbg !34
  %184 = fmul float %163, %162, !dbg !34
  %185 = fmul float %165, %164, !dbg !34
  %186 = fmul float %167, %166, !dbg !34
  %187 = fmul float %169, %168, !dbg !34
  %188 = fmul float %171, %170, !dbg !34
  %189 = fmul float %173, %172, !dbg !34
  %190 = fmul float %174, 0x3FA6E4E260000000, !dbg !35
  %191 = fmul float %175, 0x3FA6E4E260000000, !dbg !35
  %192 = fmul float %176, 0x3FA6E4E260000000, !dbg !35
  %193 = fmul float %177, 0x3FA6E4E260000000, !dbg !35
  %194 = fmul float %178, 0x3FA6E4E260000000, !dbg !35
  %195 = fmul float %179, 0x3FA6E4E260000000, !dbg !35
  %196 = fmul float %180, 0x3FA6E4E260000000, !dbg !35
  %197 = fmul float %181, 0x3FA6E4E260000000, !dbg !35
  %198 = fmul float %182, 0x3FA6E4E260000000, !dbg !35
  %199 = fmul float %183, 0x3FA6E4E260000000, !dbg !35
  %200 = fmul float %184, 0x3FA6E4E260000000, !dbg !35
  %201 = fmul float %185, 0x3FA6E4E260000000, !dbg !35
  %202 = fmul float %186, 0x3FA6E4E260000000, !dbg !35
  %203 = fmul float %187, 0x3FA6E4E260000000, !dbg !35
  %204 = fmul float %188, 0x3FA6E4E260000000, !dbg !35
  %205 = fmul float %189, 0x3FA6E4E260000000, !dbg !35
  %206 = fadd float %190, %142, !dbg !36
  %207 = fadd float %191, %144, !dbg !36
  %208 = fadd float %192, %146, !dbg !36
  %209 = fadd float %193, %148, !dbg !36
  %210 = fadd float %194, %150, !dbg !36
  %211 = fadd float %195, %152, !dbg !36
  %212 = fadd float %196, %154, !dbg !36
  %213 = fadd float %197, %156, !dbg !36
  %214 = fadd float %198, %158, !dbg !36
  %215 = fadd float %199, %160, !dbg !36
  %216 = fadd float %200, %162, !dbg !36
  %217 = fadd float %201, %164, !dbg !36
  %218 = fadd float %202, %166, !dbg !36
  %219 = fadd float %203, %168, !dbg !36
  %220 = fadd float %204, %170, !dbg !36
  %221 = fadd float %205, %172, !dbg !36
  %222 = fmul float %206, 0x3FE9884540000000, !dbg !37
  %223 = fmul float %207, 0x3FE9884540000000, !dbg !37
  %224 = fmul float %208, 0x3FE9884540000000, !dbg !37
  %225 = fmul float %209, 0x3FE9884540000000, !dbg !37
  %226 = fmul float %210, 0x3FE9884540000000, !dbg !37
  %227 = fmul float %211, 0x3FE9884540000000, !dbg !37
  %228 = fmul float %212, 0x3FE9884540000000, !dbg !37
  %229 = fmul float %213, 0x3FE9884540000000, !dbg !37
  %230 = fmul float %214, 0x3FE9884540000000, !dbg !37
  %231 = fmul float %215, 0x3FE9884540000000, !dbg !37
  %232 = fmul float %216, 0x3FE9884540000000, !dbg !37
  %233 = fmul float %217, 0x3FE9884540000000, !dbg !37
  %234 = fmul float %218, 0x3FE9884540000000, !dbg !37
  %235 = fmul float %219, 0x3FE9884540000000, !dbg !37
  %236 = fmul float %220, 0x3FE9884540000000, !dbg !37
  %237 = fmul float %221, 0x3FE9884540000000, !dbg !37
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i288 = icmp eq i32 %238, 0, !dbg !38
  %239 = tail call float @llvm.nvvm.fabs.ftz.f(float %222) #5, !dbg !38
  %240 = tail call float @llvm.nvvm.fabs.f(float %222) #5, !dbg !38
  %.01.i289 = select i1 %.not.i288, float %240, float %239, !dbg !38
  %241 = fcmp ult float %.01.i289, 0x3FE3333340000000, !dbg !38
  br i1 %241, label %__internal_fmad.exit3.i295, label %__internal_fmad.exit1.i290, !dbg !38

__internal_fmad.exit1.i290:                       ; preds = %27
  %242 = fmul float %.01.i289, 0x4007154760000000, !dbg !38
  %243 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %242) #5, !dbg !38
  %244 = fadd float %243, 1.000000e+00, !dbg !38
  %245 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %244) #6, !dbg !38, !srcloc !39
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i291 = icmp eq i32 %246, 0, !dbg !38
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %245, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i292 = select i1 %.not6.i291, float %248, float %247, !dbg !38
  %249 = fcmp oge float %.01.i289, 0x4022059680000000, !dbg !38
  %s.0.i293 = select i1 %249, float 1.000000e+00, float %.03.i292, !dbg !38
  %250 = bitcast float %s.0.i293 to i32, !dbg !38
  %251 = bitcast float %222 to i32, !dbg !38
  %252 = and i32 %251, -2147483648, !dbg !38
  %253 = or i32 %252, %250, !dbg !38
  %254 = bitcast i32 %253 to float, !dbg !38
  br label %__nv_tanhf.exit306, !dbg !38

__internal_fmad.exit3.i295:                       ; preds = %27
  %255 = fmul float %222, %222, !dbg !38
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i296 = icmp eq i32 %256, 0, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #5, !dbg !38
  %258 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i297 = select i1 %.not1.i296, float %258, float %257, !dbg !38
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i298 = icmp eq i32 %259, 0, !dbg !38
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i297, float %255, float 0x3FC10B2820000000) #5, !dbg !38
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i297, float %255, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i299 = select i1 %.not2.i298, float %261, float %260, !dbg !38
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i300 = icmp eq i32 %262, 0, !dbg !38
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i299, float %255, float 0xBFD5553DA0000000) #5, !dbg !38
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i299, float %255, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i301 = select i1 %.not3.i300, float %264, float %263, !dbg !38
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i302 = icmp eq i32 %265, 0, !dbg !38
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i301, float %255, float 0.000000e+00) #5, !dbg !38
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i301, float %255, float 0.000000e+00) #5, !dbg !38
  %.04.i303 = select i1 %.not4.i302, float %267, float %266, !dbg !38
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i304 = icmp eq i32 %268, 0, !dbg !38
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i303, float %222, float %222) #5, !dbg !38
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i303, float %222, float %222) #5, !dbg !38
  %.02.i305 = select i1 %.not5.i304, float %270, float %269, !dbg !38
  br label %__nv_tanhf.exit306, !dbg !38

__nv_tanhf.exit306:                               ; preds = %__internal_fmad.exit1.i290, %__internal_fmad.exit3.i295
  %s.1.i294 = phi float [ %254, %__internal_fmad.exit1.i290 ], [ %.02.i305, %__internal_fmad.exit3.i295 ], !dbg !38
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i307 = icmp eq i32 %271, 0, !dbg !38
  %272 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !38
  %273 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !38
  %.01.i308 = select i1 %.not.i307, float %273, float %272, !dbg !38
  %274 = fcmp ult float %.01.i308, 0x3FE3333340000000, !dbg !38
  br i1 %274, label %__internal_fmad.exit3.i314, label %__internal_fmad.exit1.i309, !dbg !38

__internal_fmad.exit1.i309:                       ; preds = %__nv_tanhf.exit306
  %275 = fmul float %.01.i308, 0x4007154760000000, !dbg !38
  %276 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %275) #5, !dbg !38
  %277 = fadd float %276, 1.000000e+00, !dbg !38
  %278 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %277) #6, !dbg !38, !srcloc !39
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i310 = icmp eq i32 %279, 0, !dbg !38
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %278, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %278, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i311 = select i1 %.not6.i310, float %281, float %280, !dbg !38
  %282 = fcmp oge float %.01.i308, 0x4022059680000000, !dbg !38
  %s.0.i312 = select i1 %282, float 1.000000e+00, float %.03.i311, !dbg !38
  %283 = bitcast float %s.0.i312 to i32, !dbg !38
  %284 = bitcast float %223 to i32, !dbg !38
  %285 = and i32 %284, -2147483648, !dbg !38
  %286 = or i32 %285, %283, !dbg !38
  %287 = bitcast i32 %286 to float, !dbg !38
  br label %__nv_tanhf.exit325, !dbg !38

__internal_fmad.exit3.i314:                       ; preds = %__nv_tanhf.exit306
  %288 = fmul float %223, %223, !dbg !38
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i315 = icmp eq i32 %289, 0, !dbg !38
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #5, !dbg !38
  %291 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i316 = select i1 %.not1.i315, float %291, float %290, !dbg !38
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i317 = icmp eq i32 %292, 0, !dbg !38
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i316, float %288, float 0x3FC10B2820000000) #5, !dbg !38
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i316, float %288, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i318 = select i1 %.not2.i317, float %294, float %293, !dbg !38
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i319 = icmp eq i32 %295, 0, !dbg !38
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i318, float %288, float 0xBFD5553DA0000000) #5, !dbg !38
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i318, float %288, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i320 = select i1 %.not3.i319, float %297, float %296, !dbg !38
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i321 = icmp eq i32 %298, 0, !dbg !38
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i320, float %288, float 0.000000e+00) #5, !dbg !38
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i320, float %288, float 0.000000e+00) #5, !dbg !38
  %.04.i322 = select i1 %.not4.i321, float %300, float %299, !dbg !38
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i323 = icmp eq i32 %301, 0, !dbg !38
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i322, float %223, float %223) #5, !dbg !38
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i322, float %223, float %223) #5, !dbg !38
  %.02.i324 = select i1 %.not5.i323, float %303, float %302, !dbg !38
  br label %__nv_tanhf.exit325, !dbg !38

__nv_tanhf.exit325:                               ; preds = %__internal_fmad.exit1.i309, %__internal_fmad.exit3.i314
  %s.1.i313 = phi float [ %287, %__internal_fmad.exit1.i309 ], [ %.02.i324, %__internal_fmad.exit3.i314 ], !dbg !38
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i326 = icmp eq i32 %304, 0, !dbg !38
  %305 = tail call float @llvm.nvvm.fabs.ftz.f(float %224) #5, !dbg !38
  %306 = tail call float @llvm.nvvm.fabs.f(float %224) #5, !dbg !38
  %.01.i327 = select i1 %.not.i326, float %306, float %305, !dbg !38
  %307 = fcmp ult float %.01.i327, 0x3FE3333340000000, !dbg !38
  br i1 %307, label %__internal_fmad.exit3.i333, label %__internal_fmad.exit1.i328, !dbg !38

__internal_fmad.exit1.i328:                       ; preds = %__nv_tanhf.exit325
  %308 = fmul float %.01.i327, 0x4007154760000000, !dbg !38
  %309 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %308) #5, !dbg !38
  %310 = fadd float %309, 1.000000e+00, !dbg !38
  %311 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %310) #6, !dbg !38, !srcloc !39
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i329 = icmp eq i32 %312, 0, !dbg !38
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %311, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %311, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i330 = select i1 %.not6.i329, float %314, float %313, !dbg !38
  %315 = fcmp oge float %.01.i327, 0x4022059680000000, !dbg !38
  %s.0.i331 = select i1 %315, float 1.000000e+00, float %.03.i330, !dbg !38
  %316 = bitcast float %s.0.i331 to i32, !dbg !38
  %317 = bitcast float %224 to i32, !dbg !38
  %318 = and i32 %317, -2147483648, !dbg !38
  %319 = or i32 %318, %316, !dbg !38
  %320 = bitcast i32 %319 to float, !dbg !38
  br label %__nv_tanhf.exit344, !dbg !38

__internal_fmad.exit3.i333:                       ; preds = %__nv_tanhf.exit325
  %321 = fmul float %224, %224, !dbg !38
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i334 = icmp eq i32 %322, 0, !dbg !38
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #5, !dbg !38
  %324 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i335 = select i1 %.not1.i334, float %324, float %323, !dbg !38
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i336 = icmp eq i32 %325, 0, !dbg !38
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i335, float %321, float 0x3FC10B2820000000) #5, !dbg !38
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i335, float %321, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i337 = select i1 %.not2.i336, float %327, float %326, !dbg !38
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i338 = icmp eq i32 %328, 0, !dbg !38
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i337, float %321, float 0xBFD5553DA0000000) #5, !dbg !38
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i337, float %321, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i339 = select i1 %.not3.i338, float %330, float %329, !dbg !38
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i340 = icmp eq i32 %331, 0, !dbg !38
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i339, float %321, float 0.000000e+00) #5, !dbg !38
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i339, float %321, float 0.000000e+00) #5, !dbg !38
  %.04.i341 = select i1 %.not4.i340, float %333, float %332, !dbg !38
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i342 = icmp eq i32 %334, 0, !dbg !38
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i341, float %224, float %224) #5, !dbg !38
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i341, float %224, float %224) #5, !dbg !38
  %.02.i343 = select i1 %.not5.i342, float %336, float %335, !dbg !38
  br label %__nv_tanhf.exit344, !dbg !38

__nv_tanhf.exit344:                               ; preds = %__internal_fmad.exit1.i328, %__internal_fmad.exit3.i333
  %s.1.i332 = phi float [ %320, %__internal_fmad.exit1.i328 ], [ %.02.i343, %__internal_fmad.exit3.i333 ], !dbg !38
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i345 = icmp eq i32 %337, 0, !dbg !38
  %338 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !38
  %339 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !38
  %.01.i346 = select i1 %.not.i345, float %339, float %338, !dbg !38
  %340 = fcmp ult float %.01.i346, 0x3FE3333340000000, !dbg !38
  br i1 %340, label %__internal_fmad.exit3.i352, label %__internal_fmad.exit1.i347, !dbg !38

__internal_fmad.exit1.i347:                       ; preds = %__nv_tanhf.exit344
  %341 = fmul float %.01.i346, 0x4007154760000000, !dbg !38
  %342 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %341) #5, !dbg !38
  %343 = fadd float %342, 1.000000e+00, !dbg !38
  %344 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %343) #6, !dbg !38, !srcloc !39
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i348 = icmp eq i32 %345, 0, !dbg !38
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %344, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %344, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i349 = select i1 %.not6.i348, float %347, float %346, !dbg !38
  %348 = fcmp oge float %.01.i346, 0x4022059680000000, !dbg !38
  %s.0.i350 = select i1 %348, float 1.000000e+00, float %.03.i349, !dbg !38
  %349 = bitcast float %s.0.i350 to i32, !dbg !38
  %350 = bitcast float %225 to i32, !dbg !38
  %351 = and i32 %350, -2147483648, !dbg !38
  %352 = or i32 %351, %349, !dbg !38
  %353 = bitcast i32 %352 to float, !dbg !38
  br label %__nv_tanhf.exit363, !dbg !38

__internal_fmad.exit3.i352:                       ; preds = %__nv_tanhf.exit344
  %354 = fmul float %225, %225, !dbg !38
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i353 = icmp eq i32 %355, 0, !dbg !38
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %354, float 0xBFAAC795C0000000) #5, !dbg !38
  %357 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %354, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i354 = select i1 %.not1.i353, float %357, float %356, !dbg !38
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i355 = icmp eq i32 %358, 0, !dbg !38
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i354, float %354, float 0x3FC10B2820000000) #5, !dbg !38
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i354, float %354, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i356 = select i1 %.not2.i355, float %360, float %359, !dbg !38
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i357 = icmp eq i32 %361, 0, !dbg !38
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i356, float %354, float 0xBFD5553DA0000000) #5, !dbg !38
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i356, float %354, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i358 = select i1 %.not3.i357, float %363, float %362, !dbg !38
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i359 = icmp eq i32 %364, 0, !dbg !38
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i358, float %354, float 0.000000e+00) #5, !dbg !38
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i358, float %354, float 0.000000e+00) #5, !dbg !38
  %.04.i360 = select i1 %.not4.i359, float %366, float %365, !dbg !38
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i361 = icmp eq i32 %367, 0, !dbg !38
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i360, float %225, float %225) #5, !dbg !38
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i360, float %225, float %225) #5, !dbg !38
  %.02.i362 = select i1 %.not5.i361, float %369, float %368, !dbg !38
  br label %__nv_tanhf.exit363, !dbg !38

__nv_tanhf.exit363:                               ; preds = %__internal_fmad.exit1.i347, %__internal_fmad.exit3.i352
  %s.1.i351 = phi float [ %353, %__internal_fmad.exit1.i347 ], [ %.02.i362, %__internal_fmad.exit3.i352 ], !dbg !38
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i364 = icmp eq i32 %370, 0, !dbg !38
  %371 = tail call float @llvm.nvvm.fabs.ftz.f(float %226) #5, !dbg !38
  %372 = tail call float @llvm.nvvm.fabs.f(float %226) #5, !dbg !38
  %.01.i365 = select i1 %.not.i364, float %372, float %371, !dbg !38
  %373 = fcmp ult float %.01.i365, 0x3FE3333340000000, !dbg !38
  br i1 %373, label %__internal_fmad.exit3.i371, label %__internal_fmad.exit1.i366, !dbg !38

__internal_fmad.exit1.i366:                       ; preds = %__nv_tanhf.exit363
  %374 = fmul float %.01.i365, 0x4007154760000000, !dbg !38
  %375 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %374) #5, !dbg !38
  %376 = fadd float %375, 1.000000e+00, !dbg !38
  %377 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %376) #6, !dbg !38, !srcloc !39
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i367 = icmp eq i32 %378, 0, !dbg !38
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %377, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %377, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i368 = select i1 %.not6.i367, float %380, float %379, !dbg !38
  %381 = fcmp oge float %.01.i365, 0x4022059680000000, !dbg !38
  %s.0.i369 = select i1 %381, float 1.000000e+00, float %.03.i368, !dbg !38
  %382 = bitcast float %s.0.i369 to i32, !dbg !38
  %383 = bitcast float %226 to i32, !dbg !38
  %384 = and i32 %383, -2147483648, !dbg !38
  %385 = or i32 %384, %382, !dbg !38
  %386 = bitcast i32 %385 to float, !dbg !38
  br label %__nv_tanhf.exit382, !dbg !38

__internal_fmad.exit3.i371:                       ; preds = %__nv_tanhf.exit363
  %387 = fmul float %226, %226, !dbg !38
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i372 = icmp eq i32 %388, 0, !dbg !38
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %387, float 0xBFAAC795C0000000) #5, !dbg !38
  %390 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %387, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i373 = select i1 %.not1.i372, float %390, float %389, !dbg !38
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i374 = icmp eq i32 %391, 0, !dbg !38
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i373, float %387, float 0x3FC10B2820000000) #5, !dbg !38
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i373, float %387, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i375 = select i1 %.not2.i374, float %393, float %392, !dbg !38
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i376 = icmp eq i32 %394, 0, !dbg !38
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i375, float %387, float 0xBFD5553DA0000000) #5, !dbg !38
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i375, float %387, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i377 = select i1 %.not3.i376, float %396, float %395, !dbg !38
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i378 = icmp eq i32 %397, 0, !dbg !38
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i377, float %387, float 0.000000e+00) #5, !dbg !38
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i377, float %387, float 0.000000e+00) #5, !dbg !38
  %.04.i379 = select i1 %.not4.i378, float %399, float %398, !dbg !38
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i380 = icmp eq i32 %400, 0, !dbg !38
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i379, float %226, float %226) #5, !dbg !38
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i379, float %226, float %226) #5, !dbg !38
  %.02.i381 = select i1 %.not5.i380, float %402, float %401, !dbg !38
  br label %__nv_tanhf.exit382, !dbg !38

__nv_tanhf.exit382:                               ; preds = %__internal_fmad.exit1.i366, %__internal_fmad.exit3.i371
  %s.1.i370 = phi float [ %386, %__internal_fmad.exit1.i366 ], [ %.02.i381, %__internal_fmad.exit3.i371 ], !dbg !38
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i383 = icmp eq i32 %403, 0, !dbg !38
  %404 = tail call float @llvm.nvvm.fabs.ftz.f(float %227) #5, !dbg !38
  %405 = tail call float @llvm.nvvm.fabs.f(float %227) #5, !dbg !38
  %.01.i384 = select i1 %.not.i383, float %405, float %404, !dbg !38
  %406 = fcmp ult float %.01.i384, 0x3FE3333340000000, !dbg !38
  br i1 %406, label %__internal_fmad.exit3.i390, label %__internal_fmad.exit1.i385, !dbg !38

__internal_fmad.exit1.i385:                       ; preds = %__nv_tanhf.exit382
  %407 = fmul float %.01.i384, 0x4007154760000000, !dbg !38
  %408 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %407) #5, !dbg !38
  %409 = fadd float %408, 1.000000e+00, !dbg !38
  %410 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %409) #6, !dbg !38, !srcloc !39
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i386 = icmp eq i32 %411, 0, !dbg !38
  %412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %410, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %413 = tail call float @llvm.nvvm.fma.rn.f(float %410, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i387 = select i1 %.not6.i386, float %413, float %412, !dbg !38
  %414 = fcmp oge float %.01.i384, 0x4022059680000000, !dbg !38
  %s.0.i388 = select i1 %414, float 1.000000e+00, float %.03.i387, !dbg !38
  %415 = bitcast float %s.0.i388 to i32, !dbg !38
  %416 = bitcast float %227 to i32, !dbg !38
  %417 = and i32 %416, -2147483648, !dbg !38
  %418 = or i32 %417, %415, !dbg !38
  %419 = bitcast i32 %418 to float, !dbg !38
  br label %__nv_tanhf.exit401, !dbg !38

__internal_fmad.exit3.i390:                       ; preds = %__nv_tanhf.exit382
  %420 = fmul float %227, %227, !dbg !38
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i391 = icmp eq i32 %421, 0, !dbg !38
  %422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %420, float 0xBFAAC795C0000000) #5, !dbg !38
  %423 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %420, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i392 = select i1 %.not1.i391, float %423, float %422, !dbg !38
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i393 = icmp eq i32 %424, 0, !dbg !38
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i392, float %420, float 0x3FC10B2820000000) #5, !dbg !38
  %426 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i392, float %420, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i394 = select i1 %.not2.i393, float %426, float %425, !dbg !38
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i395 = icmp eq i32 %427, 0, !dbg !38
  %428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i394, float %420, float 0xBFD5553DA0000000) #5, !dbg !38
  %429 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i394, float %420, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i396 = select i1 %.not3.i395, float %429, float %428, !dbg !38
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i397 = icmp eq i32 %430, 0, !dbg !38
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i396, float %420, float 0.000000e+00) #5, !dbg !38
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i396, float %420, float 0.000000e+00) #5, !dbg !38
  %.04.i398 = select i1 %.not4.i397, float %432, float %431, !dbg !38
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i399 = icmp eq i32 %433, 0, !dbg !38
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i398, float %227, float %227) #5, !dbg !38
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i398, float %227, float %227) #5, !dbg !38
  %.02.i400 = select i1 %.not5.i399, float %435, float %434, !dbg !38
  br label %__nv_tanhf.exit401, !dbg !38

__nv_tanhf.exit401:                               ; preds = %__internal_fmad.exit1.i385, %__internal_fmad.exit3.i390
  %s.1.i389 = phi float [ %419, %__internal_fmad.exit1.i385 ], [ %.02.i400, %__internal_fmad.exit3.i390 ], !dbg !38
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i402 = icmp eq i32 %436, 0, !dbg !38
  %437 = tail call float @llvm.nvvm.fabs.ftz.f(float %228) #5, !dbg !38
  %438 = tail call float @llvm.nvvm.fabs.f(float %228) #5, !dbg !38
  %.01.i403 = select i1 %.not.i402, float %438, float %437, !dbg !38
  %439 = fcmp ult float %.01.i403, 0x3FE3333340000000, !dbg !38
  br i1 %439, label %__internal_fmad.exit3.i409, label %__internal_fmad.exit1.i404, !dbg !38

__internal_fmad.exit1.i404:                       ; preds = %__nv_tanhf.exit401
  %440 = fmul float %.01.i403, 0x4007154760000000, !dbg !38
  %441 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %440) #5, !dbg !38
  %442 = fadd float %441, 1.000000e+00, !dbg !38
  %443 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %442) #6, !dbg !38, !srcloc !39
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i405 = icmp eq i32 %444, 0, !dbg !38
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %443, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %443, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i406 = select i1 %.not6.i405, float %446, float %445, !dbg !38
  %447 = fcmp oge float %.01.i403, 0x4022059680000000, !dbg !38
  %s.0.i407 = select i1 %447, float 1.000000e+00, float %.03.i406, !dbg !38
  %448 = bitcast float %s.0.i407 to i32, !dbg !38
  %449 = bitcast float %228 to i32, !dbg !38
  %450 = and i32 %449, -2147483648, !dbg !38
  %451 = or i32 %450, %448, !dbg !38
  %452 = bitcast i32 %451 to float, !dbg !38
  br label %__nv_tanhf.exit420, !dbg !38

__internal_fmad.exit3.i409:                       ; preds = %__nv_tanhf.exit401
  %453 = fmul float %228, %228, !dbg !38
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i410 = icmp eq i32 %454, 0, !dbg !38
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %453, float 0xBFAAC795C0000000) #5, !dbg !38
  %456 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %453, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i411 = select i1 %.not1.i410, float %456, float %455, !dbg !38
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i412 = icmp eq i32 %457, 0, !dbg !38
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i411, float %453, float 0x3FC10B2820000000) #5, !dbg !38
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i411, float %453, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i413 = select i1 %.not2.i412, float %459, float %458, !dbg !38
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i414 = icmp eq i32 %460, 0, !dbg !38
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i413, float %453, float 0xBFD5553DA0000000) #5, !dbg !38
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i413, float %453, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i415 = select i1 %.not3.i414, float %462, float %461, !dbg !38
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i416 = icmp eq i32 %463, 0, !dbg !38
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i415, float %453, float 0.000000e+00) #5, !dbg !38
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i415, float %453, float 0.000000e+00) #5, !dbg !38
  %.04.i417 = select i1 %.not4.i416, float %465, float %464, !dbg !38
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i418 = icmp eq i32 %466, 0, !dbg !38
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i417, float %228, float %228) #5, !dbg !38
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i417, float %228, float %228) #5, !dbg !38
  %.02.i419 = select i1 %.not5.i418, float %468, float %467, !dbg !38
  br label %__nv_tanhf.exit420, !dbg !38

__nv_tanhf.exit420:                               ; preds = %__internal_fmad.exit1.i404, %__internal_fmad.exit3.i409
  %s.1.i408 = phi float [ %452, %__internal_fmad.exit1.i404 ], [ %.02.i419, %__internal_fmad.exit3.i409 ], !dbg !38
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i421 = icmp eq i32 %469, 0, !dbg !38
  %470 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #5, !dbg !38
  %471 = tail call float @llvm.nvvm.fabs.f(float %229) #5, !dbg !38
  %.01.i422 = select i1 %.not.i421, float %471, float %470, !dbg !38
  %472 = fcmp ult float %.01.i422, 0x3FE3333340000000, !dbg !38
  br i1 %472, label %__internal_fmad.exit3.i428, label %__internal_fmad.exit1.i423, !dbg !38

__internal_fmad.exit1.i423:                       ; preds = %__nv_tanhf.exit420
  %473 = fmul float %.01.i422, 0x4007154760000000, !dbg !38
  %474 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %473) #5, !dbg !38
  %475 = fadd float %474, 1.000000e+00, !dbg !38
  %476 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %475) #6, !dbg !38, !srcloc !39
  %477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i424 = icmp eq i32 %477, 0, !dbg !38
  %478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %476, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %479 = tail call float @llvm.nvvm.fma.rn.f(float %476, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i425 = select i1 %.not6.i424, float %479, float %478, !dbg !38
  %480 = fcmp oge float %.01.i422, 0x4022059680000000, !dbg !38
  %s.0.i426 = select i1 %480, float 1.000000e+00, float %.03.i425, !dbg !38
  %481 = bitcast float %s.0.i426 to i32, !dbg !38
  %482 = bitcast float %229 to i32, !dbg !38
  %483 = and i32 %482, -2147483648, !dbg !38
  %484 = or i32 %483, %481, !dbg !38
  %485 = bitcast i32 %484 to float, !dbg !38
  br label %__nv_tanhf.exit439, !dbg !38

__internal_fmad.exit3.i428:                       ; preds = %__nv_tanhf.exit420
  %486 = fmul float %229, %229, !dbg !38
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i429 = icmp eq i32 %487, 0, !dbg !38
  %488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %486, float 0xBFAAC795C0000000) #5, !dbg !38
  %489 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %486, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i430 = select i1 %.not1.i429, float %489, float %488, !dbg !38
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i431 = icmp eq i32 %490, 0, !dbg !38
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i430, float %486, float 0x3FC10B2820000000) #5, !dbg !38
  %492 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i430, float %486, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i432 = select i1 %.not2.i431, float %492, float %491, !dbg !38
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i433 = icmp eq i32 %493, 0, !dbg !38
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i432, float %486, float 0xBFD5553DA0000000) #5, !dbg !38
  %495 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i432, float %486, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i434 = select i1 %.not3.i433, float %495, float %494, !dbg !38
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i435 = icmp eq i32 %496, 0, !dbg !38
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i434, float %486, float 0.000000e+00) #5, !dbg !38
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i434, float %486, float 0.000000e+00) #5, !dbg !38
  %.04.i436 = select i1 %.not4.i435, float %498, float %497, !dbg !38
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i437 = icmp eq i32 %499, 0, !dbg !38
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i436, float %229, float %229) #5, !dbg !38
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i436, float %229, float %229) #5, !dbg !38
  %.02.i438 = select i1 %.not5.i437, float %501, float %500, !dbg !38
  br label %__nv_tanhf.exit439, !dbg !38

__nv_tanhf.exit439:                               ; preds = %__internal_fmad.exit1.i423, %__internal_fmad.exit3.i428
  %s.1.i427 = phi float [ %485, %__internal_fmad.exit1.i423 ], [ %.02.i438, %__internal_fmad.exit3.i428 ], !dbg !38
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i440 = icmp eq i32 %502, 0, !dbg !38
  %503 = tail call float @llvm.nvvm.fabs.ftz.f(float %230) #5, !dbg !38
  %504 = tail call float @llvm.nvvm.fabs.f(float %230) #5, !dbg !38
  %.01.i441 = select i1 %.not.i440, float %504, float %503, !dbg !38
  %505 = fcmp ult float %.01.i441, 0x3FE3333340000000, !dbg !38
  br i1 %505, label %__internal_fmad.exit3.i447, label %__internal_fmad.exit1.i442, !dbg !38

__internal_fmad.exit1.i442:                       ; preds = %__nv_tanhf.exit439
  %506 = fmul float %.01.i441, 0x4007154760000000, !dbg !38
  %507 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %506) #5, !dbg !38
  %508 = fadd float %507, 1.000000e+00, !dbg !38
  %509 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %508) #6, !dbg !38, !srcloc !39
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i443 = icmp eq i32 %510, 0, !dbg !38
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %509, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %509, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i444 = select i1 %.not6.i443, float %512, float %511, !dbg !38
  %513 = fcmp oge float %.01.i441, 0x4022059680000000, !dbg !38
  %s.0.i445 = select i1 %513, float 1.000000e+00, float %.03.i444, !dbg !38
  %514 = bitcast float %s.0.i445 to i32, !dbg !38
  %515 = bitcast float %230 to i32, !dbg !38
  %516 = and i32 %515, -2147483648, !dbg !38
  %517 = or i32 %516, %514, !dbg !38
  %518 = bitcast i32 %517 to float, !dbg !38
  br label %__nv_tanhf.exit458, !dbg !38

__internal_fmad.exit3.i447:                       ; preds = %__nv_tanhf.exit439
  %519 = fmul float %230, %230, !dbg !38
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i448 = icmp eq i32 %520, 0, !dbg !38
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %519, float 0xBFAAC795C0000000) #5, !dbg !38
  %522 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %519, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i449 = select i1 %.not1.i448, float %522, float %521, !dbg !38
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i450 = icmp eq i32 %523, 0, !dbg !38
  %524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i449, float %519, float 0x3FC10B2820000000) #5, !dbg !38
  %525 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i449, float %519, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i451 = select i1 %.not2.i450, float %525, float %524, !dbg !38
  %526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i452 = icmp eq i32 %526, 0, !dbg !38
  %527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i451, float %519, float 0xBFD5553DA0000000) #5, !dbg !38
  %528 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i451, float %519, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i453 = select i1 %.not3.i452, float %528, float %527, !dbg !38
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i454 = icmp eq i32 %529, 0, !dbg !38
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i453, float %519, float 0.000000e+00) #5, !dbg !38
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i453, float %519, float 0.000000e+00) #5, !dbg !38
  %.04.i455 = select i1 %.not4.i454, float %531, float %530, !dbg !38
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i456 = icmp eq i32 %532, 0, !dbg !38
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i455, float %230, float %230) #5, !dbg !38
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i455, float %230, float %230) #5, !dbg !38
  %.02.i457 = select i1 %.not5.i456, float %534, float %533, !dbg !38
  br label %__nv_tanhf.exit458, !dbg !38

__nv_tanhf.exit458:                               ; preds = %__internal_fmad.exit1.i442, %__internal_fmad.exit3.i447
  %s.1.i446 = phi float [ %518, %__internal_fmad.exit1.i442 ], [ %.02.i457, %__internal_fmad.exit3.i447 ], !dbg !38
  %535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i459 = icmp eq i32 %535, 0, !dbg !38
  %536 = tail call float @llvm.nvvm.fabs.ftz.f(float %231) #5, !dbg !38
  %537 = tail call float @llvm.nvvm.fabs.f(float %231) #5, !dbg !38
  %.01.i460 = select i1 %.not.i459, float %537, float %536, !dbg !38
  %538 = fcmp ult float %.01.i460, 0x3FE3333340000000, !dbg !38
  br i1 %538, label %__internal_fmad.exit3.i466, label %__internal_fmad.exit1.i461, !dbg !38

__internal_fmad.exit1.i461:                       ; preds = %__nv_tanhf.exit458
  %539 = fmul float %.01.i460, 0x4007154760000000, !dbg !38
  %540 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %539) #5, !dbg !38
  %541 = fadd float %540, 1.000000e+00, !dbg !38
  %542 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %541) #6, !dbg !38, !srcloc !39
  %543 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i462 = icmp eq i32 %543, 0, !dbg !38
  %544 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %542, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %545 = tail call float @llvm.nvvm.fma.rn.f(float %542, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i463 = select i1 %.not6.i462, float %545, float %544, !dbg !38
  %546 = fcmp oge float %.01.i460, 0x4022059680000000, !dbg !38
  %s.0.i464 = select i1 %546, float 1.000000e+00, float %.03.i463, !dbg !38
  %547 = bitcast float %s.0.i464 to i32, !dbg !38
  %548 = bitcast float %231 to i32, !dbg !38
  %549 = and i32 %548, -2147483648, !dbg !38
  %550 = or i32 %549, %547, !dbg !38
  %551 = bitcast i32 %550 to float, !dbg !38
  br label %__nv_tanhf.exit477, !dbg !38

__internal_fmad.exit3.i466:                       ; preds = %__nv_tanhf.exit458
  %552 = fmul float %231, %231, !dbg !38
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i467 = icmp eq i32 %553, 0, !dbg !38
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %552, float 0xBFAAC795C0000000) #5, !dbg !38
  %555 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %552, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i468 = select i1 %.not1.i467, float %555, float %554, !dbg !38
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i469 = icmp eq i32 %556, 0, !dbg !38
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i468, float %552, float 0x3FC10B2820000000) #5, !dbg !38
  %558 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i468, float %552, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i470 = select i1 %.not2.i469, float %558, float %557, !dbg !38
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i471 = icmp eq i32 %559, 0, !dbg !38
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i470, float %552, float 0xBFD5553DA0000000) #5, !dbg !38
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i470, float %552, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i472 = select i1 %.not3.i471, float %561, float %560, !dbg !38
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i473 = icmp eq i32 %562, 0, !dbg !38
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i472, float %552, float 0.000000e+00) #5, !dbg !38
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i472, float %552, float 0.000000e+00) #5, !dbg !38
  %.04.i474 = select i1 %.not4.i473, float %564, float %563, !dbg !38
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i475 = icmp eq i32 %565, 0, !dbg !38
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i474, float %231, float %231) #5, !dbg !38
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i474, float %231, float %231) #5, !dbg !38
  %.02.i476 = select i1 %.not5.i475, float %567, float %566, !dbg !38
  br label %__nv_tanhf.exit477, !dbg !38

__nv_tanhf.exit477:                               ; preds = %__internal_fmad.exit1.i461, %__internal_fmad.exit3.i466
  %s.1.i465 = phi float [ %551, %__internal_fmad.exit1.i461 ], [ %.02.i476, %__internal_fmad.exit3.i466 ], !dbg !38
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i478 = icmp eq i32 %568, 0, !dbg !38
  %569 = tail call float @llvm.nvvm.fabs.ftz.f(float %232) #5, !dbg !38
  %570 = tail call float @llvm.nvvm.fabs.f(float %232) #5, !dbg !38
  %.01.i479 = select i1 %.not.i478, float %570, float %569, !dbg !38
  %571 = fcmp ult float %.01.i479, 0x3FE3333340000000, !dbg !38
  br i1 %571, label %__internal_fmad.exit3.i485, label %__internal_fmad.exit1.i480, !dbg !38

__internal_fmad.exit1.i480:                       ; preds = %__nv_tanhf.exit477
  %572 = fmul float %.01.i479, 0x4007154760000000, !dbg !38
  %573 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %572) #5, !dbg !38
  %574 = fadd float %573, 1.000000e+00, !dbg !38
  %575 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %574) #6, !dbg !38, !srcloc !39
  %576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i481 = icmp eq i32 %576, 0, !dbg !38
  %577 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %575, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %578 = tail call float @llvm.nvvm.fma.rn.f(float %575, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i482 = select i1 %.not6.i481, float %578, float %577, !dbg !38
  %579 = fcmp oge float %.01.i479, 0x4022059680000000, !dbg !38
  %s.0.i483 = select i1 %579, float 1.000000e+00, float %.03.i482, !dbg !38
  %580 = bitcast float %s.0.i483 to i32, !dbg !38
  %581 = bitcast float %232 to i32, !dbg !38
  %582 = and i32 %581, -2147483648, !dbg !38
  %583 = or i32 %582, %580, !dbg !38
  %584 = bitcast i32 %583 to float, !dbg !38
  br label %__nv_tanhf.exit496, !dbg !38

__internal_fmad.exit3.i485:                       ; preds = %__nv_tanhf.exit477
  %585 = fmul float %232, %232, !dbg !38
  %586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i486 = icmp eq i32 %586, 0, !dbg !38
  %587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %585, float 0xBFAAC795C0000000) #5, !dbg !38
  %588 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %585, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i487 = select i1 %.not1.i486, float %588, float %587, !dbg !38
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i488 = icmp eq i32 %589, 0, !dbg !38
  %590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i487, float %585, float 0x3FC10B2820000000) #5, !dbg !38
  %591 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i487, float %585, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i489 = select i1 %.not2.i488, float %591, float %590, !dbg !38
  %592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i490 = icmp eq i32 %592, 0, !dbg !38
  %593 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i489, float %585, float 0xBFD5553DA0000000) #5, !dbg !38
  %594 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i489, float %585, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i491 = select i1 %.not3.i490, float %594, float %593, !dbg !38
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i492 = icmp eq i32 %595, 0, !dbg !38
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i491, float %585, float 0.000000e+00) #5, !dbg !38
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i491, float %585, float 0.000000e+00) #5, !dbg !38
  %.04.i493 = select i1 %.not4.i492, float %597, float %596, !dbg !38
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i494 = icmp eq i32 %598, 0, !dbg !38
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i493, float %232, float %232) #5, !dbg !38
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i493, float %232, float %232) #5, !dbg !38
  %.02.i495 = select i1 %.not5.i494, float %600, float %599, !dbg !38
  br label %__nv_tanhf.exit496, !dbg !38

__nv_tanhf.exit496:                               ; preds = %__internal_fmad.exit1.i480, %__internal_fmad.exit3.i485
  %s.1.i484 = phi float [ %584, %__internal_fmad.exit1.i480 ], [ %.02.i495, %__internal_fmad.exit3.i485 ], !dbg !38
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i497 = icmp eq i32 %601, 0, !dbg !38
  %602 = tail call float @llvm.nvvm.fabs.ftz.f(float %233) #5, !dbg !38
  %603 = tail call float @llvm.nvvm.fabs.f(float %233) #5, !dbg !38
  %.01.i498 = select i1 %.not.i497, float %603, float %602, !dbg !38
  %604 = fcmp ult float %.01.i498, 0x3FE3333340000000, !dbg !38
  br i1 %604, label %__internal_fmad.exit3.i504, label %__internal_fmad.exit1.i499, !dbg !38

__internal_fmad.exit1.i499:                       ; preds = %__nv_tanhf.exit496
  %605 = fmul float %.01.i498, 0x4007154760000000, !dbg !38
  %606 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %605) #5, !dbg !38
  %607 = fadd float %606, 1.000000e+00, !dbg !38
  %608 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %607) #6, !dbg !38, !srcloc !39
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i500 = icmp eq i32 %609, 0, !dbg !38
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %608, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %611 = tail call float @llvm.nvvm.fma.rn.f(float %608, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i501 = select i1 %.not6.i500, float %611, float %610, !dbg !38
  %612 = fcmp oge float %.01.i498, 0x4022059680000000, !dbg !38
  %s.0.i502 = select i1 %612, float 1.000000e+00, float %.03.i501, !dbg !38
  %613 = bitcast float %s.0.i502 to i32, !dbg !38
  %614 = bitcast float %233 to i32, !dbg !38
  %615 = and i32 %614, -2147483648, !dbg !38
  %616 = or i32 %615, %613, !dbg !38
  %617 = bitcast i32 %616 to float, !dbg !38
  br label %__nv_tanhf.exit515, !dbg !38

__internal_fmad.exit3.i504:                       ; preds = %__nv_tanhf.exit496
  %618 = fmul float %233, %233, !dbg !38
  %619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i505 = icmp eq i32 %619, 0, !dbg !38
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %618, float 0xBFAAC795C0000000) #5, !dbg !38
  %621 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %618, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i506 = select i1 %.not1.i505, float %621, float %620, !dbg !38
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i507 = icmp eq i32 %622, 0, !dbg !38
  %623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i506, float %618, float 0x3FC10B2820000000) #5, !dbg !38
  %624 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i506, float %618, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i508 = select i1 %.not2.i507, float %624, float %623, !dbg !38
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i509 = icmp eq i32 %625, 0, !dbg !38
  %626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i508, float %618, float 0xBFD5553DA0000000) #5, !dbg !38
  %627 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i508, float %618, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i510 = select i1 %.not3.i509, float %627, float %626, !dbg !38
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i511 = icmp eq i32 %628, 0, !dbg !38
  %629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i510, float %618, float 0.000000e+00) #5, !dbg !38
  %630 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i510, float %618, float 0.000000e+00) #5, !dbg !38
  %.04.i512 = select i1 %.not4.i511, float %630, float %629, !dbg !38
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i513 = icmp eq i32 %631, 0, !dbg !38
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i512, float %233, float %233) #5, !dbg !38
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i512, float %233, float %233) #5, !dbg !38
  %.02.i514 = select i1 %.not5.i513, float %633, float %632, !dbg !38
  br label %__nv_tanhf.exit515, !dbg !38

__nv_tanhf.exit515:                               ; preds = %__internal_fmad.exit1.i499, %__internal_fmad.exit3.i504
  %s.1.i503 = phi float [ %617, %__internal_fmad.exit1.i499 ], [ %.02.i514, %__internal_fmad.exit3.i504 ], !dbg !38
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i516 = icmp eq i32 %634, 0, !dbg !38
  %635 = tail call float @llvm.nvvm.fabs.ftz.f(float %234) #5, !dbg !38
  %636 = tail call float @llvm.nvvm.fabs.f(float %234) #5, !dbg !38
  %.01.i517 = select i1 %.not.i516, float %636, float %635, !dbg !38
  %637 = fcmp ult float %.01.i517, 0x3FE3333340000000, !dbg !38
  br i1 %637, label %__internal_fmad.exit3.i523, label %__internal_fmad.exit1.i518, !dbg !38

__internal_fmad.exit1.i518:                       ; preds = %__nv_tanhf.exit515
  %638 = fmul float %.01.i517, 0x4007154760000000, !dbg !38
  %639 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %638) #5, !dbg !38
  %640 = fadd float %639, 1.000000e+00, !dbg !38
  %641 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %640) #6, !dbg !38, !srcloc !39
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i519 = icmp eq i32 %642, 0, !dbg !38
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %641, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %641, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i520 = select i1 %.not6.i519, float %644, float %643, !dbg !38
  %645 = fcmp oge float %.01.i517, 0x4022059680000000, !dbg !38
  %s.0.i521 = select i1 %645, float 1.000000e+00, float %.03.i520, !dbg !38
  %646 = bitcast float %s.0.i521 to i32, !dbg !38
  %647 = bitcast float %234 to i32, !dbg !38
  %648 = and i32 %647, -2147483648, !dbg !38
  %649 = or i32 %648, %646, !dbg !38
  %650 = bitcast i32 %649 to float, !dbg !38
  br label %__nv_tanhf.exit534, !dbg !38

__internal_fmad.exit3.i523:                       ; preds = %__nv_tanhf.exit515
  %651 = fmul float %234, %234, !dbg !38
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i524 = icmp eq i32 %652, 0, !dbg !38
  %653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %651, float 0xBFAAC795C0000000) #5, !dbg !38
  %654 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %651, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i525 = select i1 %.not1.i524, float %654, float %653, !dbg !38
  %655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i526 = icmp eq i32 %655, 0, !dbg !38
  %656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i525, float %651, float 0x3FC10B2820000000) #5, !dbg !38
  %657 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i525, float %651, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i527 = select i1 %.not2.i526, float %657, float %656, !dbg !38
  %658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i528 = icmp eq i32 %658, 0, !dbg !38
  %659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i527, float %651, float 0xBFD5553DA0000000) #5, !dbg !38
  %660 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i527, float %651, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i529 = select i1 %.not3.i528, float %660, float %659, !dbg !38
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i530 = icmp eq i32 %661, 0, !dbg !38
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i529, float %651, float 0.000000e+00) #5, !dbg !38
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i529, float %651, float 0.000000e+00) #5, !dbg !38
  %.04.i531 = select i1 %.not4.i530, float %663, float %662, !dbg !38
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i532 = icmp eq i32 %664, 0, !dbg !38
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i531, float %234, float %234) #5, !dbg !38
  %666 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i531, float %234, float %234) #5, !dbg !38
  %.02.i533 = select i1 %.not5.i532, float %666, float %665, !dbg !38
  br label %__nv_tanhf.exit534, !dbg !38

__nv_tanhf.exit534:                               ; preds = %__internal_fmad.exit1.i518, %__internal_fmad.exit3.i523
  %s.1.i522 = phi float [ %650, %__internal_fmad.exit1.i518 ], [ %.02.i533, %__internal_fmad.exit3.i523 ], !dbg !38
  %667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i535 = icmp eq i32 %667, 0, !dbg !38
  %668 = tail call float @llvm.nvvm.fabs.ftz.f(float %235) #5, !dbg !38
  %669 = tail call float @llvm.nvvm.fabs.f(float %235) #5, !dbg !38
  %.01.i536 = select i1 %.not.i535, float %669, float %668, !dbg !38
  %670 = fcmp ult float %.01.i536, 0x3FE3333340000000, !dbg !38
  br i1 %670, label %__internal_fmad.exit3.i542, label %__internal_fmad.exit1.i537, !dbg !38

__internal_fmad.exit1.i537:                       ; preds = %__nv_tanhf.exit534
  %671 = fmul float %.01.i536, 0x4007154760000000, !dbg !38
  %672 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %671) #5, !dbg !38
  %673 = fadd float %672, 1.000000e+00, !dbg !38
  %674 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %673) #6, !dbg !38, !srcloc !39
  %675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i538 = icmp eq i32 %675, 0, !dbg !38
  %676 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %674, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %677 = tail call float @llvm.nvvm.fma.rn.f(float %674, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i539 = select i1 %.not6.i538, float %677, float %676, !dbg !38
  %678 = fcmp oge float %.01.i536, 0x4022059680000000, !dbg !38
  %s.0.i540 = select i1 %678, float 1.000000e+00, float %.03.i539, !dbg !38
  %679 = bitcast float %s.0.i540 to i32, !dbg !38
  %680 = bitcast float %235 to i32, !dbg !38
  %681 = and i32 %680, -2147483648, !dbg !38
  %682 = or i32 %681, %679, !dbg !38
  %683 = bitcast i32 %682 to float, !dbg !38
  br label %__nv_tanhf.exit553, !dbg !38

__internal_fmad.exit3.i542:                       ; preds = %__nv_tanhf.exit534
  %684 = fmul float %235, %235, !dbg !38
  %685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i543 = icmp eq i32 %685, 0, !dbg !38
  %686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %684, float 0xBFAAC795C0000000) #5, !dbg !38
  %687 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %684, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i544 = select i1 %.not1.i543, float %687, float %686, !dbg !38
  %688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i545 = icmp eq i32 %688, 0, !dbg !38
  %689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i544, float %684, float 0x3FC10B2820000000) #5, !dbg !38
  %690 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i544, float %684, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i546 = select i1 %.not2.i545, float %690, float %689, !dbg !38
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i547 = icmp eq i32 %691, 0, !dbg !38
  %692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i546, float %684, float 0xBFD5553DA0000000) #5, !dbg !38
  %693 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i546, float %684, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i548 = select i1 %.not3.i547, float %693, float %692, !dbg !38
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i549 = icmp eq i32 %694, 0, !dbg !38
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i548, float %684, float 0.000000e+00) #5, !dbg !38
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i548, float %684, float 0.000000e+00) #5, !dbg !38
  %.04.i550 = select i1 %.not4.i549, float %696, float %695, !dbg !38
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i551 = icmp eq i32 %697, 0, !dbg !38
  %698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i550, float %235, float %235) #5, !dbg !38
  %699 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i550, float %235, float %235) #5, !dbg !38
  %.02.i552 = select i1 %.not5.i551, float %699, float %698, !dbg !38
  br label %__nv_tanhf.exit553, !dbg !38

__nv_tanhf.exit553:                               ; preds = %__internal_fmad.exit1.i537, %__internal_fmad.exit3.i542
  %s.1.i541 = phi float [ %683, %__internal_fmad.exit1.i537 ], [ %.02.i552, %__internal_fmad.exit3.i542 ], !dbg !38
  %700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i554 = icmp eq i32 %700, 0, !dbg !38
  %701 = tail call float @llvm.nvvm.fabs.ftz.f(float %236) #5, !dbg !38
  %702 = tail call float @llvm.nvvm.fabs.f(float %236) #5, !dbg !38
  %.01.i555 = select i1 %.not.i554, float %702, float %701, !dbg !38
  %703 = fcmp ult float %.01.i555, 0x3FE3333340000000, !dbg !38
  br i1 %703, label %__internal_fmad.exit3.i561, label %__internal_fmad.exit1.i556, !dbg !38

__internal_fmad.exit1.i556:                       ; preds = %__nv_tanhf.exit553
  %704 = fmul float %.01.i555, 0x4007154760000000, !dbg !38
  %705 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %704) #5, !dbg !38
  %706 = fadd float %705, 1.000000e+00, !dbg !38
  %707 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %706) #6, !dbg !38, !srcloc !39
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i557 = icmp eq i32 %708, 0, !dbg !38
  %709 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %707, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %710 = tail call float @llvm.nvvm.fma.rn.f(float %707, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i558 = select i1 %.not6.i557, float %710, float %709, !dbg !38
  %711 = fcmp oge float %.01.i555, 0x4022059680000000, !dbg !38
  %s.0.i559 = select i1 %711, float 1.000000e+00, float %.03.i558, !dbg !38
  %712 = bitcast float %s.0.i559 to i32, !dbg !38
  %713 = bitcast float %236 to i32, !dbg !38
  %714 = and i32 %713, -2147483648, !dbg !38
  %715 = or i32 %714, %712, !dbg !38
  %716 = bitcast i32 %715 to float, !dbg !38
  br label %__nv_tanhf.exit572, !dbg !38

__internal_fmad.exit3.i561:                       ; preds = %__nv_tanhf.exit553
  %717 = fmul float %236, %236, !dbg !38
  %718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i562 = icmp eq i32 %718, 0, !dbg !38
  %719 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %717, float 0xBFAAC795C0000000) #5, !dbg !38
  %720 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %717, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i563 = select i1 %.not1.i562, float %720, float %719, !dbg !38
  %721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i564 = icmp eq i32 %721, 0, !dbg !38
  %722 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i563, float %717, float 0x3FC10B2820000000) #5, !dbg !38
  %723 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i563, float %717, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i565 = select i1 %.not2.i564, float %723, float %722, !dbg !38
  %724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i566 = icmp eq i32 %724, 0, !dbg !38
  %725 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i565, float %717, float 0xBFD5553DA0000000) #5, !dbg !38
  %726 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i565, float %717, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i567 = select i1 %.not3.i566, float %726, float %725, !dbg !38
  %727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i568 = icmp eq i32 %727, 0, !dbg !38
  %728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i567, float %717, float 0.000000e+00) #5, !dbg !38
  %729 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i567, float %717, float 0.000000e+00) #5, !dbg !38
  %.04.i569 = select i1 %.not4.i568, float %729, float %728, !dbg !38
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i570 = icmp eq i32 %730, 0, !dbg !38
  %731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i569, float %236, float %236) #5, !dbg !38
  %732 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i569, float %236, float %236) #5, !dbg !38
  %.02.i571 = select i1 %.not5.i570, float %732, float %731, !dbg !38
  br label %__nv_tanhf.exit572, !dbg !38

__nv_tanhf.exit572:                               ; preds = %__internal_fmad.exit1.i556, %__internal_fmad.exit3.i561
  %s.1.i560 = phi float [ %716, %__internal_fmad.exit1.i556 ], [ %.02.i571, %__internal_fmad.exit3.i561 ], !dbg !38
  %733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i573 = icmp eq i32 %733, 0, !dbg !38
  %734 = tail call float @llvm.nvvm.fabs.ftz.f(float %237) #5, !dbg !38
  %735 = tail call float @llvm.nvvm.fabs.f(float %237) #5, !dbg !38
  %.01.i574 = select i1 %.not.i573, float %735, float %734, !dbg !38
  %736 = fcmp ult float %.01.i574, 0x3FE3333340000000, !dbg !38
  br i1 %736, label %__internal_fmad.exit3.i580, label %__internal_fmad.exit1.i575, !dbg !38

__internal_fmad.exit1.i575:                       ; preds = %__nv_tanhf.exit572
  %737 = fmul float %.01.i574, 0x4007154760000000, !dbg !38
  %738 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %737) #5, !dbg !38
  %739 = fadd float %738, 1.000000e+00, !dbg !38
  %740 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %739) #6, !dbg !38, !srcloc !39
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not6.i576 = icmp eq i32 %741, 0, !dbg !38
  %742 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %740, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %743 = tail call float @llvm.nvvm.fma.rn.f(float %740, float -2.000000e+00, float 1.000000e+00) #5, !dbg !38
  %.03.i577 = select i1 %.not6.i576, float %743, float %742, !dbg !38
  %744 = fcmp oge float %.01.i574, 0x4022059680000000, !dbg !38
  %s.0.i578 = select i1 %744, float 1.000000e+00, float %.03.i577, !dbg !38
  %745 = bitcast float %s.0.i578 to i32, !dbg !38
  %746 = bitcast float %237 to i32, !dbg !38
  %747 = and i32 %746, -2147483648, !dbg !38
  %748 = or i32 %747, %745, !dbg !38
  %749 = bitcast i32 %748 to float, !dbg !38
  br label %__nv_tanhf.exit591, !dbg !38

__internal_fmad.exit3.i580:                       ; preds = %__nv_tanhf.exit572
  %750 = fmul float %237, %237, !dbg !38
  %751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not1.i581 = icmp eq i32 %751, 0, !dbg !38
  %752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %750, float 0xBFAAC795C0000000) #5, !dbg !38
  %753 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %750, float 0xBFAAC795C0000000) #5, !dbg !38
  %.06.i582 = select i1 %.not1.i581, float %753, float %752, !dbg !38
  %754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not2.i583 = icmp eq i32 %754, 0, !dbg !38
  %755 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i582, float %750, float 0x3FC10B2820000000) #5, !dbg !38
  %756 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i582, float %750, float 0x3FC10B2820000000) #5, !dbg !38
  %.05.i584 = select i1 %.not2.i583, float %756, float %755, !dbg !38
  %757 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not3.i585 = icmp eq i32 %757, 0, !dbg !38
  %758 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i584, float %750, float 0xBFD5553DA0000000) #5, !dbg !38
  %759 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i584, float %750, float 0xBFD5553DA0000000) #5, !dbg !38
  %.0.i586 = select i1 %.not3.i585, float %759, float %758, !dbg !38
  %760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not4.i587 = icmp eq i32 %760, 0, !dbg !38
  %761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i586, float %750, float 0.000000e+00) #5, !dbg !38
  %762 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i586, float %750, float 0.000000e+00) #5, !dbg !38
  %.04.i588 = select i1 %.not4.i587, float %762, float %761, !dbg !38
  %763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not5.i589 = icmp eq i32 %763, 0, !dbg !38
  %764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i588, float %237, float %237) #5, !dbg !38
  %765 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i588, float %237, float %237) #5, !dbg !38
  %.02.i590 = select i1 %.not5.i589, float %765, float %764, !dbg !38
  br label %__nv_tanhf.exit591, !dbg !38

__nv_tanhf.exit591:                               ; preds = %__internal_fmad.exit1.i575, %__internal_fmad.exit3.i580
  %s.1.i579 = phi float [ %749, %__internal_fmad.exit1.i575 ], [ %.02.i590, %__internal_fmad.exit3.i580 ], !dbg !38
  %766 = insertelement <16 x float> poison, float %s.1.i579, i64 0, !dbg !40
  %767 = insertelement <16 x float> %766, float %s.1.i560, i64 1, !dbg !40
  %768 = insertelement <16 x float> %767, float %s.1.i541, i64 2, !dbg !40
  %769 = insertelement <16 x float> %768, float %s.1.i522, i64 3, !dbg !40
  %770 = insertelement <16 x float> %769, float %s.1.i503, i64 4, !dbg !40
  %771 = insertelement <16 x float> %770, float %s.1.i484, i64 5, !dbg !40
  %772 = insertelement <16 x float> %771, float %s.1.i465, i64 6, !dbg !40
  %773 = insertelement <16 x float> %772, float %s.1.i446, i64 7, !dbg !40
  %774 = insertelement <16 x float> %773, float %s.1.i427, i64 8, !dbg !40
  %775 = insertelement <16 x float> %774, float %s.1.i408, i64 9, !dbg !40
  %776 = insertelement <16 x float> %775, float %s.1.i389, i64 10, !dbg !40
  %777 = insertelement <16 x float> %776, float %s.1.i370, i64 11, !dbg !40
  %778 = insertelement <16 x float> %777, float %s.1.i351, i64 12, !dbg !40
  %779 = insertelement <16 x float> %778, float %s.1.i332, i64 13, !dbg !40
  %780 = insertelement <16 x float> %779, float %s.1.i313, i64 14, !dbg !40
  %781 = insertelement <16 x float> %780, float %s.1.i294, i64 15, !dbg !40
  %782 = fadd <16 x float> %781, splat (float 1.000000e+00), !dbg !40
  %783 = fcmp uno <16 x float> %30, zeroinitializer, !dbg !41
  %784 = fcmp uno <16 x float> %29, zeroinitializer, !dbg !45
  %785 = fmul <16 x float> %141, %782, !dbg !47
  %786 = insertelement <16 x i1> poison, i1 %33, i64 0, !dbg !48
  %787 = shufflevector <16 x i1> %786, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !48
  %788 = select <16 x i1> %787, <16 x float> %88, <16 x float> %785, !dbg !48
  %789 = fcmp olt <16 x float> %30, %788, !dbg !49
  %790 = or <16 x i1> %783, %789, !dbg !50
  %791 = select <16 x i1> %790, <16 x float> %30, <16 x float> %788, !dbg !51
  %792 = insertelement <16 x i1> poison, i1 %43, i64 0, !dbg !52
  %793 = shufflevector <16 x i1> %792, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !52
  %794 = select <16 x i1> %793, <16 x float> %791, <16 x float> %30, !dbg !52
  %795 = fcmp ogt <16 x float> %29, %788, !dbg !53
  %796 = or <16 x i1> %784, %795, !dbg !54
  %797 = select <16 x i1> %796, <16 x float> %29, <16 x float> %788, !dbg !55
  %798 = select <16 x i1> %793, <16 x float> %797, <16 x float> %29, !dbg !56
  br i1 %28, label %27, label %799, !dbg !17

799:                                              ; preds = %__nv_tanhf.exit591
  %800 = lshr i32 %11, 5, !dbg !11
  %801 = and i32 %11, 1, !dbg !11
  %802 = or disjoint i32 %10, %801, !dbg !12
  %803 = icmp slt i32 %802, 4112, !dbg !13
  %804 = extractelement <16 x float> %794, i64 14, !dbg !57
  %805 = extractelement <16 x float> %794, i64 15, !dbg !57
  %806 = fcmp olt float %805, %804, !dbg !57
  %807 = fcmp uno float %805, 0.000000e+00, !dbg !60
  %808 = or i1 %806, %807, !dbg !61
  %809 = select i1 %808, float %805, float %804, !dbg !62
  %810 = extractelement <16 x float> %794, i64 13, !dbg !57
  %811 = fcmp olt float %809, %810, !dbg !57
  %812 = fcmp uno float %809, 0.000000e+00, !dbg !60
  %813 = or i1 %811, %812, !dbg !61
  %814 = select i1 %813, float %809, float %810, !dbg !62
  %815 = extractelement <16 x float> %794, i64 12, !dbg !57
  %816 = fcmp olt float %814, %815, !dbg !57
  %817 = fcmp uno float %814, 0.000000e+00, !dbg !60
  %818 = or i1 %816, %817, !dbg !61
  %819 = select i1 %818, float %814, float %815, !dbg !62
  %820 = extractelement <16 x float> %794, i64 11, !dbg !57
  %821 = fcmp olt float %819, %820, !dbg !57
  %822 = fcmp uno float %819, 0.000000e+00, !dbg !60
  %823 = or i1 %821, %822, !dbg !61
  %824 = select i1 %823, float %819, float %820, !dbg !62
  %825 = extractelement <16 x float> %794, i64 10, !dbg !57
  %826 = fcmp olt float %824, %825, !dbg !57
  %827 = fcmp uno float %824, 0.000000e+00, !dbg !60
  %828 = or i1 %826, %827, !dbg !61
  %829 = select i1 %828, float %824, float %825, !dbg !62
  %830 = extractelement <16 x float> %794, i64 9, !dbg !57
  %831 = fcmp olt float %829, %830, !dbg !57
  %832 = fcmp uno float %829, 0.000000e+00, !dbg !60
  %833 = or i1 %831, %832, !dbg !61
  %834 = select i1 %833, float %829, float %830, !dbg !62
  %835 = extractelement <16 x float> %794, i64 8, !dbg !57
  %836 = fcmp olt float %834, %835, !dbg !57
  %837 = fcmp uno float %834, 0.000000e+00, !dbg !60
  %838 = or i1 %836, %837, !dbg !61
  %839 = select i1 %838, float %834, float %835, !dbg !62
  %840 = extractelement <16 x float> %794, i64 7, !dbg !57
  %841 = fcmp olt float %839, %840, !dbg !57
  %842 = fcmp uno float %839, 0.000000e+00, !dbg !60
  %843 = or i1 %841, %842, !dbg !61
  %844 = select i1 %843, float %839, float %840, !dbg !62
  %845 = extractelement <16 x float> %794, i64 6, !dbg !57
  %846 = fcmp olt float %844, %845, !dbg !57
  %847 = fcmp uno float %844, 0.000000e+00, !dbg !60
  %848 = or i1 %846, %847, !dbg !61
  %849 = select i1 %848, float %844, float %845, !dbg !62
  %850 = extractelement <16 x float> %794, i64 5, !dbg !57
  %851 = fcmp olt float %849, %850, !dbg !57
  %852 = fcmp uno float %849, 0.000000e+00, !dbg !60
  %853 = or i1 %851, %852, !dbg !61
  %854 = select i1 %853, float %849, float %850, !dbg !62
  %855 = extractelement <16 x float> %794, i64 4, !dbg !57
  %856 = fcmp olt float %854, %855, !dbg !57
  %857 = fcmp uno float %854, 0.000000e+00, !dbg !60
  %858 = or i1 %856, %857, !dbg !61
  %859 = select i1 %858, float %854, float %855, !dbg !62
  %860 = extractelement <16 x float> %794, i64 3, !dbg !57
  %861 = fcmp olt float %859, %860, !dbg !57
  %862 = fcmp uno float %859, 0.000000e+00, !dbg !60
  %863 = or i1 %861, %862, !dbg !61
  %864 = select i1 %863, float %859, float %860, !dbg !62
  %865 = extractelement <16 x float> %794, i64 2, !dbg !57
  %866 = fcmp olt float %864, %865, !dbg !57
  %867 = fcmp uno float %864, 0.000000e+00, !dbg !60
  %868 = or i1 %866, %867, !dbg !61
  %869 = select i1 %868, float %864, float %865, !dbg !62
  %870 = extractelement <16 x float> %794, i64 1, !dbg !57
  %871 = fcmp olt float %869, %870, !dbg !57
  %872 = fcmp uno float %869, 0.000000e+00, !dbg !60
  %873 = or i1 %871, %872, !dbg !61
  %874 = select i1 %873, float %869, float %870, !dbg !62
  %875 = extractelement <16 x float> %794, i64 0, !dbg !57
  %876 = fcmp olt float %874, %875, !dbg !57
  %877 = fcmp uno float %874, 0.000000e+00, !dbg !60
  %878 = or i1 %876, %877, !dbg !61
  %879 = select i1 %878, float %874, float %875, !dbg !62
  %880 = bitcast float %879 to i32, !dbg !63
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 16, i32 31), !dbg !63
  %882 = bitcast i32 %881 to float, !dbg !63
  %883 = fcmp olt float %879, %882, !dbg !57
  %884 = fcmp uno float %879, 0.000000e+00, !dbg !60
  %885 = or i1 %884, %883, !dbg !61
  %886 = select i1 %885, float %879, float %882, !dbg !62
  %887 = bitcast float %886 to i32, !dbg !63
  %888 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %887, i32 8, i32 31), !dbg !63
  %889 = bitcast i32 %888 to float, !dbg !63
  %890 = fcmp olt float %886, %889, !dbg !57
  %891 = fcmp uno float %886, 0.000000e+00, !dbg !60
  %892 = or i1 %890, %891, !dbg !61
  %893 = select i1 %892, float %886, float %889, !dbg !62
  %894 = bitcast float %893 to i32, !dbg !63
  %895 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %894, i32 4, i32 31), !dbg !63
  %896 = bitcast i32 %895 to float, !dbg !63
  %897 = fcmp olt float %893, %896, !dbg !57
  %898 = fcmp uno float %893, 0.000000e+00, !dbg !60
  %899 = or i1 %897, %898, !dbg !61
  %900 = select i1 %899, float %893, float %896, !dbg !62
  %901 = bitcast float %900 to i32, !dbg !63
  %902 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %901, i32 2, i32 31), !dbg !63
  %903 = bitcast i32 %902 to float, !dbg !63
  %904 = fcmp olt float %900, %903, !dbg !57
  %905 = fcmp uno float %900, 0.000000e+00, !dbg !60
  %906 = or i1 %904, %905, !dbg !61
  %907 = select i1 %906, float %900, float %903, !dbg !62
  %908 = bitcast float %907 to i32, !dbg !63
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 1, i32 31), !dbg !63
  %910 = bitcast i32 %909 to float, !dbg !63
  %911 = fcmp olt float %907, %910, !dbg !57
  %912 = fcmp uno float %907, 0.000000e+00, !dbg !60
  %913 = or i1 %911, %912, !dbg !61
  %914 = and i32 %800, 15, !dbg !63
  %915 = icmp eq i32 %13, 0, !dbg !63
  %916 = shl nuw nsw i32 %.lobit, 4, !dbg !63
  %917 = or disjoint i32 %916, %914, !dbg !63
  %918 = getelementptr float, ptr addrspace(3) @global_smem, i32 %917, !dbg !63
  %919 = select i1 %913, i32 %908, i32 %909, !dbg !62
  %920 = insertelement <1 x i32> poison, i32 %919, i64 0, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %918, <1 x i32> %920, i1 %915) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %921 = icmp slt i32 %11, 32, !dbg !63
  %922 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !63
  %923 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %922, i1 %921) #5, !dbg !63
  %924 = bitcast i32 %923 to float, !dbg !63
  %925 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %923, i32 8, i32 31), !dbg !63
  %926 = bitcast i32 %925 to float, !dbg !63
  %927 = fcmp olt float %924, %926, !dbg !57
  %928 = fcmp uno float %924, 0.000000e+00, !dbg !60
  %929 = or i1 %928, %927, !dbg !61
  %930 = select i1 %929, float %924, float %926, !dbg !62
  %931 = bitcast float %930 to i32, !dbg !63
  %932 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %931, i32 4, i32 31), !dbg !63
  %933 = bitcast i32 %932 to float, !dbg !63
  %934 = fcmp olt float %930, %933, !dbg !57
  %935 = fcmp uno float %930, 0.000000e+00, !dbg !60
  %936 = or i1 %934, %935, !dbg !61
  %937 = select i1 %936, float %930, float %933, !dbg !62
  %938 = bitcast float %937 to i32, !dbg !63
  %939 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %938, i32 2, i32 31), !dbg !63
  %940 = bitcast i32 %939 to float, !dbg !63
  %941 = fcmp olt float %937, %940, !dbg !57
  %942 = fcmp uno float %937, 0.000000e+00, !dbg !60
  %943 = or i1 %941, %942, !dbg !61
  %944 = select i1 %943, float %937, float %940, !dbg !62
  %945 = bitcast float %944 to i32, !dbg !63
  %946 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %945, i32 1, i32 31), !dbg !63
  %947 = bitcast i32 %946 to float, !dbg !63
  %948 = fcmp olt float %944, %947, !dbg !57
  %949 = fcmp uno float %944, 0.000000e+00, !dbg !60
  %950 = or i1 %948, %949, !dbg !61
  %951 = and i32 %11, 15, !dbg !63
  %952 = icmp eq i32 %951, 0, !dbg !63
  %953 = and i1 %921, %952, !dbg !63
  %954 = select i1 %950, i32 %945, i32 %946, !dbg !62
  %955 = insertelement <1 x i32> poison, i32 %954, i64 0, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %922, <1 x i32> %955, i1 %953) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %956 = getelementptr float, ptr addrspace(3) @global_smem, i32 %916, !dbg !63
  %957 = load float, ptr addrspace(3) %956, align 16, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %958 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %.lobit, !dbg !64
  %959 = bitcast float %957 to <1 x i32>, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %958, <1 x i32> %959, i1 true) #5, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %960 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %801, !dbg !64
  %961 = load float, ptr addrspace(3) %960, align 4, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %962 = extractelement <16 x float> %798, i64 14, !dbg !67
  %963 = extractelement <16 x float> %798, i64 15, !dbg !67
  %964 = fcmp ogt float %963, %962, !dbg !67
  %965 = fcmp uno float %963, 0.000000e+00, !dbg !68
  %966 = or i1 %964, %965, !dbg !69
  %967 = select i1 %966, float %963, float %962, !dbg !70
  %968 = extractelement <16 x float> %798, i64 13, !dbg !67
  %969 = fcmp ogt float %967, %968, !dbg !67
  %970 = fcmp uno float %967, 0.000000e+00, !dbg !68
  %971 = or i1 %969, %970, !dbg !69
  %972 = select i1 %971, float %967, float %968, !dbg !70
  %973 = extractelement <16 x float> %798, i64 12, !dbg !67
  %974 = fcmp ogt float %972, %973, !dbg !67
  %975 = fcmp uno float %972, 0.000000e+00, !dbg !68
  %976 = or i1 %974, %975, !dbg !69
  %977 = select i1 %976, float %972, float %973, !dbg !70
  %978 = extractelement <16 x float> %798, i64 11, !dbg !67
  %979 = fcmp ogt float %977, %978, !dbg !67
  %980 = fcmp uno float %977, 0.000000e+00, !dbg !68
  %981 = or i1 %979, %980, !dbg !69
  %982 = select i1 %981, float %977, float %978, !dbg !70
  %983 = extractelement <16 x float> %798, i64 10, !dbg !67
  %984 = fcmp ogt float %982, %983, !dbg !67
  %985 = fcmp uno float %982, 0.000000e+00, !dbg !68
  %986 = or i1 %984, %985, !dbg !69
  %987 = select i1 %986, float %982, float %983, !dbg !70
  %988 = extractelement <16 x float> %798, i64 9, !dbg !67
  %989 = fcmp ogt float %987, %988, !dbg !67
  %990 = fcmp uno float %987, 0.000000e+00, !dbg !68
  %991 = or i1 %989, %990, !dbg !69
  %992 = select i1 %991, float %987, float %988, !dbg !70
  %993 = extractelement <16 x float> %798, i64 8, !dbg !67
  %994 = fcmp ogt float %992, %993, !dbg !67
  %995 = fcmp uno float %992, 0.000000e+00, !dbg !68
  %996 = or i1 %994, %995, !dbg !69
  %997 = select i1 %996, float %992, float %993, !dbg !70
  %998 = extractelement <16 x float> %798, i64 7, !dbg !67
  %999 = fcmp ogt float %997, %998, !dbg !67
  %1000 = fcmp uno float %997, 0.000000e+00, !dbg !68
  %1001 = or i1 %999, %1000, !dbg !69
  %1002 = select i1 %1001, float %997, float %998, !dbg !70
  %1003 = extractelement <16 x float> %798, i64 6, !dbg !67
  %1004 = fcmp ogt float %1002, %1003, !dbg !67
  %1005 = fcmp uno float %1002, 0.000000e+00, !dbg !68
  %1006 = or i1 %1004, %1005, !dbg !69
  %1007 = select i1 %1006, float %1002, float %1003, !dbg !70
  %1008 = extractelement <16 x float> %798, i64 5, !dbg !67
  %1009 = fcmp ogt float %1007, %1008, !dbg !67
  %1010 = fcmp uno float %1007, 0.000000e+00, !dbg !68
  %1011 = or i1 %1009, %1010, !dbg !69
  %1012 = select i1 %1011, float %1007, float %1008, !dbg !70
  %1013 = extractelement <16 x float> %798, i64 4, !dbg !67
  %1014 = fcmp ogt float %1012, %1013, !dbg !67
  %1015 = fcmp uno float %1012, 0.000000e+00, !dbg !68
  %1016 = or i1 %1014, %1015, !dbg !69
  %1017 = select i1 %1016, float %1012, float %1013, !dbg !70
  %1018 = extractelement <16 x float> %798, i64 3, !dbg !67
  %1019 = fcmp ogt float %1017, %1018, !dbg !67
  %1020 = fcmp uno float %1017, 0.000000e+00, !dbg !68
  %1021 = or i1 %1019, %1020, !dbg !69
  %1022 = select i1 %1021, float %1017, float %1018, !dbg !70
  %1023 = extractelement <16 x float> %798, i64 2, !dbg !67
  %1024 = fcmp ogt float %1022, %1023, !dbg !67
  %1025 = fcmp uno float %1022, 0.000000e+00, !dbg !68
  %1026 = or i1 %1024, %1025, !dbg !69
  %1027 = select i1 %1026, float %1022, float %1023, !dbg !70
  %1028 = extractelement <16 x float> %798, i64 1, !dbg !67
  %1029 = fcmp ogt float %1027, %1028, !dbg !67
  %1030 = fcmp uno float %1027, 0.000000e+00, !dbg !68
  %1031 = or i1 %1029, %1030, !dbg !69
  %1032 = select i1 %1031, float %1027, float %1028, !dbg !70
  %1033 = extractelement <16 x float> %798, i64 0, !dbg !67
  %1034 = fcmp ogt float %1032, %1033, !dbg !67
  %1035 = fcmp uno float %1032, 0.000000e+00, !dbg !68
  %1036 = or i1 %1034, %1035, !dbg !69
  %1037 = select i1 %1036, float %1032, float %1033, !dbg !70
  %1038 = bitcast float %1037 to i32, !dbg !65
  %1039 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1038, i32 16, i32 31), !dbg !65
  %1040 = bitcast i32 %1039 to float, !dbg !65
  %1041 = fcmp ogt float %1037, %1040, !dbg !67
  %1042 = fcmp uno float %1037, 0.000000e+00, !dbg !68
  %1043 = or i1 %1042, %1041, !dbg !69
  %1044 = select i1 %1043, float %1037, float %1040, !dbg !70
  %1045 = bitcast float %1044 to i32, !dbg !65
  %1046 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1045, i32 8, i32 31), !dbg !65
  %1047 = bitcast i32 %1046 to float, !dbg !65
  %1048 = fcmp ogt float %1044, %1047, !dbg !67
  %1049 = fcmp uno float %1044, 0.000000e+00, !dbg !68
  %1050 = or i1 %1048, %1049, !dbg !69
  %1051 = select i1 %1050, float %1044, float %1047, !dbg !70
  %1052 = bitcast float %1051 to i32, !dbg !65
  %1053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1052, i32 4, i32 31), !dbg !65
  %1054 = bitcast i32 %1053 to float, !dbg !65
  %1055 = fcmp ogt float %1051, %1054, !dbg !67
  %1056 = fcmp uno float %1051, 0.000000e+00, !dbg !68
  %1057 = or i1 %1055, %1056, !dbg !69
  %1058 = select i1 %1057, float %1051, float %1054, !dbg !70
  %1059 = bitcast float %1058 to i32, !dbg !65
  %1060 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1059, i32 2, i32 31), !dbg !65
  %1061 = bitcast i32 %1060 to float, !dbg !65
  %1062 = fcmp ogt float %1058, %1061, !dbg !67
  %1063 = fcmp uno float %1058, 0.000000e+00, !dbg !68
  %1064 = or i1 %1062, %1063, !dbg !69
  %1065 = select i1 %1064, float %1058, float %1061, !dbg !70
  %1066 = bitcast float %1065 to i32, !dbg !65
  %1067 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1066, i32 1, i32 31), !dbg !65
  %1068 = bitcast i32 %1067 to float, !dbg !65
  %1069 = fcmp ogt float %1065, %1068, !dbg !67
  %1070 = fcmp uno float %1065, 0.000000e+00, !dbg !68
  %1071 = or i1 %1069, %1070, !dbg !69
  %1072 = select i1 %1071, i32 %1066, i32 %1067, !dbg !70
  %1073 = insertelement <1 x i32> poison, i32 %1072, i64 0, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %918, <1 x i32> %1073, i1 %915) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1074 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %922, i1 %921) #5, !dbg !65
  %1075 = bitcast i32 %1074 to float, !dbg !65
  %1076 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1074, i32 8, i32 31), !dbg !65
  %1077 = bitcast i32 %1076 to float, !dbg !65
  %1078 = fcmp ogt float %1075, %1077, !dbg !67
  %1079 = fcmp uno float %1075, 0.000000e+00, !dbg !68
  %1080 = or i1 %1079, %1078, !dbg !69
  %1081 = select i1 %1080, float %1075, float %1077, !dbg !70
  %1082 = bitcast float %1081 to i32, !dbg !65
  %1083 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1082, i32 4, i32 31), !dbg !65
  %1084 = bitcast i32 %1083 to float, !dbg !65
  %1085 = fcmp ogt float %1081, %1084, !dbg !67
  %1086 = fcmp uno float %1081, 0.000000e+00, !dbg !68
  %1087 = or i1 %1085, %1086, !dbg !69
  %1088 = select i1 %1087, float %1081, float %1084, !dbg !70
  %1089 = bitcast float %1088 to i32, !dbg !65
  %1090 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1089, i32 2, i32 31), !dbg !65
  %1091 = bitcast i32 %1090 to float, !dbg !65
  %1092 = fcmp ogt float %1088, %1091, !dbg !67
  %1093 = fcmp uno float %1088, 0.000000e+00, !dbg !68
  %1094 = or i1 %1092, %1093, !dbg !69
  %1095 = select i1 %1094, float %1088, float %1091, !dbg !70
  %1096 = bitcast float %1095 to i32, !dbg !65
  %1097 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1096, i32 1, i32 31), !dbg !65
  %1098 = bitcast i32 %1097 to float, !dbg !65
  %1099 = fcmp ogt float %1095, %1098, !dbg !67
  %1100 = fcmp uno float %1095, 0.000000e+00, !dbg !68
  %1101 = or i1 %1099, %1100, !dbg !69
  %1102 = select i1 %1101, i32 %1096, i32 %1097, !dbg !70
  %1103 = insertelement <1 x i32> poison, i32 %1102, i64 0, !dbg !65
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %922, <1 x i32> %1103, i1 %953) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1104 = load float, ptr addrspace(3) %956, align 16, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1105 = bitcast float %1104 to <1 x i32>, !dbg !71
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %958, <1 x i32> %1105, i1 true) #5, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1106 = load float, ptr addrspace(3) %960, align 4, !dbg !71
  %1107 = sext i32 %802 to i64, !dbg !72
  %1108 = getelementptr bfloat, ptr addrspace(1) %2, i64 %1107, !dbg !72
  %1109 = fptrunc float %961 to bfloat, !dbg !64
  %1110 = and i32 %11, 1022, !dbg !64
  %1111 = icmp eq i32 %1110, 0, !dbg !64
  %1112 = bitcast bfloat %1109 to i16, !dbg !64
  %1113 = and i1 %1111, %803, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1112, ptr addrspace(1) %1108, i1 %1113) #5, !dbg !64
  %1114 = getelementptr bfloat, ptr addrspace(1) %3, i64 %1107, !dbg !73
  %1115 = fptrunc float %1106 to bfloat, !dbg !71
  %1116 = bitcast bfloat %1115 to i16, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %1116, ptr addrspace(1) %1114, i1 %1113) #5, !dbg !71
  %.inv = fcmp oge float %957, 0.000000e+00, !dbg !74
  %1117 = select i1 %.inv, float 0.000000e+00, float %957, !dbg !74
  %1118 = fsub float 0.000000e+00, %1117, !dbg !76
  %.inv2 = fcmp ole float %1104, 0.000000e+00, !dbg !77
  %1119 = select i1 %.inv2, float 0.000000e+00, float %1104, !dbg !77
  %1120 = fcmp ogt float %1118, %1119, !dbg !79
  %1121 = fcmp uno float %1118, 0.000000e+00, !dbg !81
  %1122 = or i1 %1121, %1120, !dbg !82
  %1123 = select i1 %1122, float %1118, float %1119, !dbg !83
  %1124 = fmul float %1123, 0x3F80204080000000, !dbg !84
  %1125 = fcmp ogt float %1124, 0x3EE4F8B580000000, !dbg !85
  %1126 = fcmp uno float %1124, 0.000000e+00, !dbg !87
  %1127 = or i1 %1125, %1126, !dbg !88
  %1128 = select i1 %1127, float %1124, float 0x3EE4F8B580000000, !dbg !89
  %1129 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %1128), !dbg !90
  %1130 = mul i32 %14, 15360, !dbg !91
  br label %1131, !dbg !92

1131:                                             ; preds = %799, %__nv_tanhf.exit287
  %1132 = phi i1 [ true, %799 ], [ false, %__nv_tanhf.exit287 ]
  %indvars.iv624 = phi i64 [ 0, %799 ], [ 8192, %__nv_tanhf.exit287 ]
  %1133 = or disjoint i64 %indvars.iv624, %26, !dbg !93
  %1134 = icmp samesign ult i64 %1133, 15360, !dbg !94
  %1135 = icmp samesign ult i64 %1133, 3072, !dbg !95
  %1136 = trunc nuw nsw i64 %1133 to i32, !dbg !96
  %1137 = add i32 %21, %1136, !dbg !96
  %1138 = trunc nuw nsw i64 %indvars.iv624 to i32, !dbg !96
  %1139 = or disjoint i32 %19, %1138, !dbg !96
  %1140 = add i32 %1139, %21, !dbg !96
  %1141 = sext i32 %1137 to i64, !dbg !97
  %1142 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1141, !dbg !97
  %1143 = sext i32 %1140 to i64, !dbg !97
  %1144 = getelementptr bfloat, ptr addrspace(1) %0, i64 %1143, !dbg !97
  %1145 = and i1 %15, %1134, !dbg !98
  %1146 = and i1 %15, %1135, !dbg !99
  %1147 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1142, i1 %1146) #5, !dbg !100
  %1148 = extractvalue { i32, i32, i32, i32 } %1147, 0, !dbg !100
  %1149 = bitcast i32 %1148 to <2 x bfloat>, !dbg !100
  %1150 = extractvalue { i32, i32, i32, i32 } %1147, 1, !dbg !100
  %1151 = bitcast i32 %1150 to <2 x bfloat>, !dbg !100
  %1152 = extractvalue { i32, i32, i32, i32 } %1147, 2, !dbg !100
  %1153 = bitcast i32 %1152 to <2 x bfloat>, !dbg !100
  %1154 = extractvalue { i32, i32, i32, i32 } %1147, 3, !dbg !100
  %1155 = bitcast i32 %1154 to <2 x bfloat>, !dbg !100
  %1156 = extractelement <2 x bfloat> %1149, i64 0, !dbg !100
  %1157 = extractelement <2 x bfloat> %1149, i64 1, !dbg !100
  %1158 = extractelement <2 x bfloat> %1151, i64 0, !dbg !100
  %1159 = extractelement <2 x bfloat> %1151, i64 1, !dbg !100
  %1160 = extractelement <2 x bfloat> %1153, i64 0, !dbg !100
  %1161 = extractelement <2 x bfloat> %1153, i64 1, !dbg !100
  %1162 = extractelement <2 x bfloat> %1155, i64 0, !dbg !100
  %1163 = extractelement <2 x bfloat> %1155, i64 1, !dbg !100
  %1164 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1144, i1 %1146) #5, !dbg !100
  %1165 = extractvalue { i32, i32, i32, i32 } %1164, 0, !dbg !100
  %1166 = bitcast i32 %1165 to <2 x bfloat>, !dbg !100
  %1167 = extractvalue { i32, i32, i32, i32 } %1164, 1, !dbg !100
  %1168 = bitcast i32 %1167 to <2 x bfloat>, !dbg !100
  %1169 = extractvalue { i32, i32, i32, i32 } %1164, 2, !dbg !100
  %1170 = bitcast i32 %1169 to <2 x bfloat>, !dbg !100
  %1171 = extractvalue { i32, i32, i32, i32 } %1164, 3, !dbg !100
  %1172 = bitcast i32 %1171 to <2 x bfloat>, !dbg !100
  %1173 = extractelement <2 x bfloat> %1166, i64 0, !dbg !100
  %1174 = extractelement <2 x bfloat> %1166, i64 1, !dbg !100
  %1175 = extractelement <2 x bfloat> %1168, i64 0, !dbg !100
  %1176 = extractelement <2 x bfloat> %1168, i64 1, !dbg !100
  %1177 = extractelement <2 x bfloat> %1170, i64 0, !dbg !100
  %1178 = extractelement <2 x bfloat> %1170, i64 1, !dbg !100
  %1179 = extractelement <2 x bfloat> %1172, i64 0, !dbg !100
  %1180 = extractelement <2 x bfloat> %1172, i64 1, !dbg !100
  %1181 = fpext bfloat %1156 to float, !dbg !101
  %1182 = fpext bfloat %1157 to float, !dbg !101
  %1183 = fpext bfloat %1158 to float, !dbg !101
  %1184 = fpext bfloat %1159 to float, !dbg !101
  %1185 = fpext bfloat %1160 to float, !dbg !101
  %1186 = fpext bfloat %1161 to float, !dbg !101
  %1187 = fpext bfloat %1162 to float, !dbg !101
  %1188 = fpext bfloat %1163 to float, !dbg !101
  %1189 = fpext bfloat %1173 to float, !dbg !101
  %1190 = fpext bfloat %1174 to float, !dbg !101
  %1191 = fpext bfloat %1175 to float, !dbg !101
  %1192 = fpext bfloat %1176 to float, !dbg !101
  %1193 = fpext bfloat %1177 to float, !dbg !101
  %1194 = fpext bfloat %1178 to float, !dbg !101
  %1195 = fpext bfloat %1179 to float, !dbg !101
  %1196 = fpext bfloat %1180 to float, !dbg !101
  %1197 = icmp samesign ugt i64 %1133, 3071, !dbg !102
  %1198 = add i32 %23, %1136, !dbg !103
  %1199 = trunc nuw nsw i64 %indvars.iv624 to i32, !dbg !103
  %1200 = add i32 %24, %1199, !dbg !103
  %1201 = add i32 %23, %1139, !dbg !103
  %1202 = add i32 %25, %1199, !dbg !103
  %1203 = sext i32 %1198 to i64, !dbg !104
  %1204 = getelementptr float, ptr addrspace(1) %1, i64 %1203, !dbg !104
  %1205 = sext i32 %1200 to i64, !dbg !104
  %1206 = getelementptr float, ptr addrspace(1) %1, i64 %1205, !dbg !104
  %1207 = sext i32 %1201 to i64, !dbg !104
  %1208 = getelementptr float, ptr addrspace(1) %1, i64 %1207, !dbg !104
  %1209 = sext i32 %1202 to i64, !dbg !104
  %1210 = getelementptr float, ptr addrspace(1) %1, i64 %1209, !dbg !104
  %1211 = and i1 %1197, %1145, !dbg !105
  %1212 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1204, i1 %1211) #5, !dbg !106
  %1213 = extractvalue { i32, i32, i32, i32 } %1212, 0, !dbg !106
  %1214 = extractvalue { i32, i32, i32, i32 } %1212, 1, !dbg !106
  %1215 = extractvalue { i32, i32, i32, i32 } %1212, 2, !dbg !106
  %1216 = extractvalue { i32, i32, i32, i32 } %1212, 3, !dbg !106
  %1217 = bitcast i32 %1213 to float, !dbg !106
  %1218 = bitcast i32 %1214 to float, !dbg !106
  %1219 = bitcast i32 %1215 to float, !dbg !106
  %1220 = bitcast i32 %1216 to float, !dbg !106
  %1221 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1206, i1 %1211) #5, !dbg !106
  %1222 = extractvalue { i32, i32, i32, i32 } %1221, 0, !dbg !106
  %1223 = extractvalue { i32, i32, i32, i32 } %1221, 1, !dbg !106
  %1224 = extractvalue { i32, i32, i32, i32 } %1221, 2, !dbg !106
  %1225 = extractvalue { i32, i32, i32, i32 } %1221, 3, !dbg !106
  %1226 = bitcast i32 %1222 to float, !dbg !106
  %1227 = bitcast i32 %1223 to float, !dbg !106
  %1228 = bitcast i32 %1224 to float, !dbg !106
  %1229 = bitcast i32 %1225 to float, !dbg !106
  %1230 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1208, i1 %1211) #5, !dbg !106
  %1231 = extractvalue { i32, i32, i32, i32 } %1230, 0, !dbg !106
  %1232 = extractvalue { i32, i32, i32, i32 } %1230, 1, !dbg !106
  %1233 = extractvalue { i32, i32, i32, i32 } %1230, 2, !dbg !106
  %1234 = extractvalue { i32, i32, i32, i32 } %1230, 3, !dbg !106
  %1235 = bitcast i32 %1231 to float, !dbg !106
  %1236 = bitcast i32 %1232 to float, !dbg !106
  %1237 = bitcast i32 %1233 to float, !dbg !106
  %1238 = bitcast i32 %1234 to float, !dbg !106
  %1239 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %1210, i1 %1211) #5, !dbg !106
  %1240 = extractvalue { i32, i32, i32, i32 } %1239, 0, !dbg !106
  %1241 = extractvalue { i32, i32, i32, i32 } %1239, 1, !dbg !106
  %1242 = extractvalue { i32, i32, i32, i32 } %1239, 2, !dbg !106
  %1243 = extractvalue { i32, i32, i32, i32 } %1239, 3, !dbg !106
  %1244 = bitcast i32 %1240 to float, !dbg !106
  %1245 = bitcast i32 %1241 to float, !dbg !106
  %1246 = bitcast i32 %1242 to float, !dbg !106
  %1247 = bitcast i32 %1243 to float, !dbg !106
  %1248 = fmul float %1217, 5.000000e-01, !dbg !107
  %1249 = fmul float %1218, 5.000000e-01, !dbg !107
  %1250 = fmul float %1219, 5.000000e-01, !dbg !107
  %1251 = fmul float %1220, 5.000000e-01, !dbg !107
  %1252 = fmul float %1226, 5.000000e-01, !dbg !107
  %1253 = fmul float %1227, 5.000000e-01, !dbg !107
  %1254 = fmul float %1228, 5.000000e-01, !dbg !107
  %1255 = fmul float %1229, 5.000000e-01, !dbg !107
  %1256 = fmul float %1235, 5.000000e-01, !dbg !107
  %1257 = fmul float %1236, 5.000000e-01, !dbg !107
  %1258 = fmul float %1237, 5.000000e-01, !dbg !107
  %1259 = fmul float %1238, 5.000000e-01, !dbg !107
  %1260 = fmul float %1244, 5.000000e-01, !dbg !107
  %1261 = fmul float %1245, 5.000000e-01, !dbg !107
  %1262 = fmul float %1246, 5.000000e-01, !dbg !107
  %1263 = fmul float %1247, 5.000000e-01, !dbg !107
  %1264 = fmul float %1217, %1217, !dbg !108
  %1265 = fmul float %1218, %1218, !dbg !108
  %1266 = fmul float %1219, %1219, !dbg !108
  %1267 = fmul float %1220, %1220, !dbg !108
  %1268 = fmul float %1226, %1226, !dbg !108
  %1269 = fmul float %1227, %1227, !dbg !108
  %1270 = fmul float %1228, %1228, !dbg !108
  %1271 = fmul float %1229, %1229, !dbg !108
  %1272 = fmul float %1235, %1235, !dbg !108
  %1273 = fmul float %1236, %1236, !dbg !108
  %1274 = fmul float %1237, %1237, !dbg !108
  %1275 = fmul float %1238, %1238, !dbg !108
  %1276 = fmul float %1244, %1244, !dbg !108
  %1277 = fmul float %1245, %1245, !dbg !108
  %1278 = fmul float %1246, %1246, !dbg !108
  %1279 = fmul float %1247, %1247, !dbg !108
  %1280 = fmul float %1264, %1217, !dbg !109
  %1281 = fmul float %1265, %1218, !dbg !109
  %1282 = fmul float %1266, %1219, !dbg !109
  %1283 = fmul float %1267, %1220, !dbg !109
  %1284 = fmul float %1268, %1226, !dbg !109
  %1285 = fmul float %1269, %1227, !dbg !109
  %1286 = fmul float %1270, %1228, !dbg !109
  %1287 = fmul float %1271, %1229, !dbg !109
  %1288 = fmul float %1272, %1235, !dbg !109
  %1289 = fmul float %1273, %1236, !dbg !109
  %1290 = fmul float %1274, %1237, !dbg !109
  %1291 = fmul float %1275, %1238, !dbg !109
  %1292 = fmul float %1276, %1244, !dbg !109
  %1293 = fmul float %1277, %1245, !dbg !109
  %1294 = fmul float %1278, %1246, !dbg !109
  %1295 = fmul float %1279, %1247, !dbg !109
  %1296 = fmul float %1280, 0x3FA6E4E260000000, !dbg !110
  %1297 = fmul float %1281, 0x3FA6E4E260000000, !dbg !110
  %1298 = fmul float %1282, 0x3FA6E4E260000000, !dbg !110
  %1299 = fmul float %1283, 0x3FA6E4E260000000, !dbg !110
  %1300 = fmul float %1284, 0x3FA6E4E260000000, !dbg !110
  %1301 = fmul float %1285, 0x3FA6E4E260000000, !dbg !110
  %1302 = fmul float %1286, 0x3FA6E4E260000000, !dbg !110
  %1303 = fmul float %1287, 0x3FA6E4E260000000, !dbg !110
  %1304 = fmul float %1288, 0x3FA6E4E260000000, !dbg !110
  %1305 = fmul float %1289, 0x3FA6E4E260000000, !dbg !110
  %1306 = fmul float %1290, 0x3FA6E4E260000000, !dbg !110
  %1307 = fmul float %1291, 0x3FA6E4E260000000, !dbg !110
  %1308 = fmul float %1292, 0x3FA6E4E260000000, !dbg !110
  %1309 = fmul float %1293, 0x3FA6E4E260000000, !dbg !110
  %1310 = fmul float %1294, 0x3FA6E4E260000000, !dbg !110
  %1311 = fmul float %1295, 0x3FA6E4E260000000, !dbg !110
  %1312 = fadd float %1296, %1217, !dbg !111
  %1313 = fadd float %1297, %1218, !dbg !111
  %1314 = fadd float %1298, %1219, !dbg !111
  %1315 = fadd float %1299, %1220, !dbg !111
  %1316 = fadd float %1300, %1226, !dbg !111
  %1317 = fadd float %1301, %1227, !dbg !111
  %1318 = fadd float %1302, %1228, !dbg !111
  %1319 = fadd float %1303, %1229, !dbg !111
  %1320 = fadd float %1304, %1235, !dbg !111
  %1321 = fadd float %1305, %1236, !dbg !111
  %1322 = fadd float %1306, %1237, !dbg !111
  %1323 = fadd float %1307, %1238, !dbg !111
  %1324 = fadd float %1308, %1244, !dbg !111
  %1325 = fadd float %1309, %1245, !dbg !111
  %1326 = fadd float %1310, %1246, !dbg !111
  %1327 = fadd float %1311, %1247, !dbg !111
  %1328 = fmul float %1312, 0x3FE9884540000000, !dbg !112
  %1329 = fmul float %1313, 0x3FE9884540000000, !dbg !112
  %1330 = fmul float %1314, 0x3FE9884540000000, !dbg !112
  %1331 = fmul float %1315, 0x3FE9884540000000, !dbg !112
  %1332 = fmul float %1316, 0x3FE9884540000000, !dbg !112
  %1333 = fmul float %1317, 0x3FE9884540000000, !dbg !112
  %1334 = fmul float %1318, 0x3FE9884540000000, !dbg !112
  %1335 = fmul float %1319, 0x3FE9884540000000, !dbg !112
  %1336 = fmul float %1320, 0x3FE9884540000000, !dbg !112
  %1337 = fmul float %1321, 0x3FE9884540000000, !dbg !112
  %1338 = fmul float %1322, 0x3FE9884540000000, !dbg !112
  %1339 = fmul float %1323, 0x3FE9884540000000, !dbg !112
  %1340 = fmul float %1324, 0x3FE9884540000000, !dbg !112
  %1341 = fmul float %1325, 0x3FE9884540000000, !dbg !112
  %1342 = fmul float %1326, 0x3FE9884540000000, !dbg !112
  %1343 = fmul float %1327, 0x3FE9884540000000, !dbg !112
  %1344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i = icmp eq i32 %1344, 0, !dbg !113
  %1345 = tail call float @llvm.nvvm.fabs.ftz.f(float %1328) #5, !dbg !113
  %1346 = tail call float @llvm.nvvm.fabs.f(float %1328) #5, !dbg !113
  %.01.i = select i1 %.not.i, float %1346, float %1345, !dbg !113
  %1347 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !113
  br i1 %1347, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !113

__internal_fmad.exit1.i:                          ; preds = %1131
  %1348 = fmul float %.01.i, 0x4007154760000000, !dbg !113
  %1349 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1348) #5, !dbg !113
  %1350 = fadd float %1349, 1.000000e+00, !dbg !113
  %1351 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1350) #6, !dbg !113, !srcloc !39
  %1352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i = icmp eq i32 %1352, 0, !dbg !113
  %1353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1351, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1354 = tail call float @llvm.nvvm.fma.rn.f(float %1351, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i = select i1 %.not6.i, float %1354, float %1353, !dbg !113
  %1355 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !113
  %s.0.i = select i1 %1355, float 1.000000e+00, float %.03.i, !dbg !113
  %1356 = bitcast float %s.0.i to i32, !dbg !113
  %1357 = bitcast float %1328 to i32, !dbg !113
  %1358 = and i32 %1357, -2147483648, !dbg !113
  %1359 = or i32 %1358, %1356, !dbg !113
  %1360 = bitcast i32 %1359 to float, !dbg !113
  br label %__nv_tanhf.exit, !dbg !113

__internal_fmad.exit3.i:                          ; preds = %1131
  %1361 = fmul float %1328, %1328, !dbg !113
  %1362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i = icmp eq i32 %1362, 0, !dbg !113
  %1363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1361, float 0xBFAAC795C0000000) #5, !dbg !113
  %1364 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1361, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i = select i1 %.not1.i, float %1364, float %1363, !dbg !113
  %1365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i = icmp eq i32 %1365, 0, !dbg !113
  %1366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %1361, float 0x3FC10B2820000000) #5, !dbg !113
  %1367 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %1361, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i = select i1 %.not2.i, float %1367, float %1366, !dbg !113
  %1368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i = icmp eq i32 %1368, 0, !dbg !113
  %1369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %1361, float 0xBFD5553DA0000000) #5, !dbg !113
  %1370 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %1361, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i = select i1 %.not3.i, float %1370, float %1369, !dbg !113
  %1371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i = icmp eq i32 %1371, 0, !dbg !113
  %1372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %1361, float 0.000000e+00) #5, !dbg !113
  %1373 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %1361, float 0.000000e+00) #5, !dbg !113
  %.04.i = select i1 %.not4.i, float %1373, float %1372, !dbg !113
  %1374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i = icmp eq i32 %1374, 0, !dbg !113
  %1375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %1328, float %1328) #5, !dbg !113
  %1376 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %1328, float %1328) #5, !dbg !113
  %.02.i = select i1 %.not5.i, float %1376, float %1375, !dbg !113
  br label %__nv_tanhf.exit, !dbg !113

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %1360, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !113
  %1377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i3 = icmp eq i32 %1377, 0, !dbg !113
  %1378 = tail call float @llvm.nvvm.fabs.ftz.f(float %1329) #5, !dbg !113
  %1379 = tail call float @llvm.nvvm.fabs.f(float %1329) #5, !dbg !113
  %.01.i4 = select i1 %.not.i3, float %1379, float %1378, !dbg !113
  %1380 = fcmp ult float %.01.i4, 0x3FE3333340000000, !dbg !113
  br i1 %1380, label %__internal_fmad.exit3.i10, label %__internal_fmad.exit1.i5, !dbg !113

__internal_fmad.exit1.i5:                         ; preds = %__nv_tanhf.exit
  %1381 = fmul float %.01.i4, 0x4007154760000000, !dbg !113
  %1382 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1381) #5, !dbg !113
  %1383 = fadd float %1382, 1.000000e+00, !dbg !113
  %1384 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1383) #6, !dbg !113, !srcloc !39
  %1385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i6 = icmp eq i32 %1385, 0, !dbg !113
  %1386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1384, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1387 = tail call float @llvm.nvvm.fma.rn.f(float %1384, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i7 = select i1 %.not6.i6, float %1387, float %1386, !dbg !113
  %1388 = fcmp oge float %.01.i4, 0x4022059680000000, !dbg !113
  %s.0.i8 = select i1 %1388, float 1.000000e+00, float %.03.i7, !dbg !113
  %1389 = bitcast float %s.0.i8 to i32, !dbg !113
  %1390 = bitcast float %1329 to i32, !dbg !113
  %1391 = and i32 %1390, -2147483648, !dbg !113
  %1392 = or i32 %1391, %1389, !dbg !113
  %1393 = bitcast i32 %1392 to float, !dbg !113
  br label %__nv_tanhf.exit21, !dbg !113

__internal_fmad.exit3.i10:                        ; preds = %__nv_tanhf.exit
  %1394 = fmul float %1329, %1329, !dbg !113
  %1395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i11 = icmp eq i32 %1395, 0, !dbg !113
  %1396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1394, float 0xBFAAC795C0000000) #5, !dbg !113
  %1397 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1394, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i12 = select i1 %.not1.i11, float %1397, float %1396, !dbg !113
  %1398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i13 = icmp eq i32 %1398, 0, !dbg !113
  %1399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i12, float %1394, float 0x3FC10B2820000000) #5, !dbg !113
  %1400 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i12, float %1394, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i14 = select i1 %.not2.i13, float %1400, float %1399, !dbg !113
  %1401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i15 = icmp eq i32 %1401, 0, !dbg !113
  %1402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %1394, float 0xBFD5553DA0000000) #5, !dbg !113
  %1403 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %1394, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i16 = select i1 %.not3.i15, float %1403, float %1402, !dbg !113
  %1404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i17 = icmp eq i32 %1404, 0, !dbg !113
  %1405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i16, float %1394, float 0.000000e+00) #5, !dbg !113
  %1406 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i16, float %1394, float 0.000000e+00) #5, !dbg !113
  %.04.i18 = select i1 %.not4.i17, float %1406, float %1405, !dbg !113
  %1407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i19 = icmp eq i32 %1407, 0, !dbg !113
  %1408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %1329, float %1329) #5, !dbg !113
  %1409 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %1329, float %1329) #5, !dbg !113
  %.02.i20 = select i1 %.not5.i19, float %1409, float %1408, !dbg !113
  br label %__nv_tanhf.exit21, !dbg !113

__nv_tanhf.exit21:                                ; preds = %__internal_fmad.exit1.i5, %__internal_fmad.exit3.i10
  %s.1.i9 = phi float [ %1393, %__internal_fmad.exit1.i5 ], [ %.02.i20, %__internal_fmad.exit3.i10 ], !dbg !113
  %1410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i22 = icmp eq i32 %1410, 0, !dbg !113
  %1411 = tail call float @llvm.nvvm.fabs.ftz.f(float %1330) #5, !dbg !113
  %1412 = tail call float @llvm.nvvm.fabs.f(float %1330) #5, !dbg !113
  %.01.i23 = select i1 %.not.i22, float %1412, float %1411, !dbg !113
  %1413 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !113
  br i1 %1413, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !113

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit21
  %1414 = fmul float %.01.i23, 0x4007154760000000, !dbg !113
  %1415 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1414) #5, !dbg !113
  %1416 = fadd float %1415, 1.000000e+00, !dbg !113
  %1417 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1416) #6, !dbg !113, !srcloc !39
  %1418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i25 = icmp eq i32 %1418, 0, !dbg !113
  %1419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1417, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1420 = tail call float @llvm.nvvm.fma.rn.f(float %1417, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i26 = select i1 %.not6.i25, float %1420, float %1419, !dbg !113
  %1421 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !113
  %s.0.i27 = select i1 %1421, float 1.000000e+00, float %.03.i26, !dbg !113
  %1422 = bitcast float %s.0.i27 to i32, !dbg !113
  %1423 = bitcast float %1330 to i32, !dbg !113
  %1424 = and i32 %1423, -2147483648, !dbg !113
  %1425 = or i32 %1424, %1422, !dbg !113
  %1426 = bitcast i32 %1425 to float, !dbg !113
  br label %__nv_tanhf.exit40, !dbg !113

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit21
  %1427 = fmul float %1330, %1330, !dbg !113
  %1428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i30 = icmp eq i32 %1428, 0, !dbg !113
  %1429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1427, float 0xBFAAC795C0000000) #5, !dbg !113
  %1430 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1427, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i31 = select i1 %.not1.i30, float %1430, float %1429, !dbg !113
  %1431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i32 = icmp eq i32 %1431, 0, !dbg !113
  %1432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %1427, float 0x3FC10B2820000000) #5, !dbg !113
  %1433 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %1427, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i33 = select i1 %.not2.i32, float %1433, float %1432, !dbg !113
  %1434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i34 = icmp eq i32 %1434, 0, !dbg !113
  %1435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %1427, float 0xBFD5553DA0000000) #5, !dbg !113
  %1436 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %1427, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i35 = select i1 %.not3.i34, float %1436, float %1435, !dbg !113
  %1437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i36 = icmp eq i32 %1437, 0, !dbg !113
  %1438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %1427, float 0.000000e+00) #5, !dbg !113
  %1439 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %1427, float 0.000000e+00) #5, !dbg !113
  %.04.i37 = select i1 %.not4.i36, float %1439, float %1438, !dbg !113
  %1440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i38 = icmp eq i32 %1440, 0, !dbg !113
  %1441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %1330, float %1330) #5, !dbg !113
  %1442 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %1330, float %1330) #5, !dbg !113
  %.02.i39 = select i1 %.not5.i38, float %1442, float %1441, !dbg !113
  br label %__nv_tanhf.exit40, !dbg !113

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %1426, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !113
  %1443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i41 = icmp eq i32 %1443, 0, !dbg !113
  %1444 = tail call float @llvm.nvvm.fabs.ftz.f(float %1331) #5, !dbg !113
  %1445 = tail call float @llvm.nvvm.fabs.f(float %1331) #5, !dbg !113
  %.01.i42 = select i1 %.not.i41, float %1445, float %1444, !dbg !113
  %1446 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !113
  br i1 %1446, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !113

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %1447 = fmul float %.01.i42, 0x4007154760000000, !dbg !113
  %1448 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1447) #5, !dbg !113
  %1449 = fadd float %1448, 1.000000e+00, !dbg !113
  %1450 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1449) #6, !dbg !113, !srcloc !39
  %1451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i44 = icmp eq i32 %1451, 0, !dbg !113
  %1452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1450, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1453 = tail call float @llvm.nvvm.fma.rn.f(float %1450, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i45 = select i1 %.not6.i44, float %1453, float %1452, !dbg !113
  %1454 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !113
  %s.0.i46 = select i1 %1454, float 1.000000e+00, float %.03.i45, !dbg !113
  %1455 = bitcast float %s.0.i46 to i32, !dbg !113
  %1456 = bitcast float %1331 to i32, !dbg !113
  %1457 = and i32 %1456, -2147483648, !dbg !113
  %1458 = or i32 %1457, %1455, !dbg !113
  %1459 = bitcast i32 %1458 to float, !dbg !113
  br label %__nv_tanhf.exit59, !dbg !113

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %1460 = fmul float %1331, %1331, !dbg !113
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i49 = icmp eq i32 %1461, 0, !dbg !113
  %1462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1460, float 0xBFAAC795C0000000) #5, !dbg !113
  %1463 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1460, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i50 = select i1 %.not1.i49, float %1463, float %1462, !dbg !113
  %1464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i51 = icmp eq i32 %1464, 0, !dbg !113
  %1465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %1460, float 0x3FC10B2820000000) #5, !dbg !113
  %1466 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %1460, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i52 = select i1 %.not2.i51, float %1466, float %1465, !dbg !113
  %1467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i53 = icmp eq i32 %1467, 0, !dbg !113
  %1468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %1460, float 0xBFD5553DA0000000) #5, !dbg !113
  %1469 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %1460, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i54 = select i1 %.not3.i53, float %1469, float %1468, !dbg !113
  %1470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i55 = icmp eq i32 %1470, 0, !dbg !113
  %1471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %1460, float 0.000000e+00) #5, !dbg !113
  %1472 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %1460, float 0.000000e+00) #5, !dbg !113
  %.04.i56 = select i1 %.not4.i55, float %1472, float %1471, !dbg !113
  %1473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i57 = icmp eq i32 %1473, 0, !dbg !113
  %1474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %1331, float %1331) #5, !dbg !113
  %1475 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %1331, float %1331) #5, !dbg !113
  %.02.i58 = select i1 %.not5.i57, float %1475, float %1474, !dbg !113
  br label %__nv_tanhf.exit59, !dbg !113

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %1459, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !113
  %1476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i60 = icmp eq i32 %1476, 0, !dbg !113
  %1477 = tail call float @llvm.nvvm.fabs.ftz.f(float %1332) #5, !dbg !113
  %1478 = tail call float @llvm.nvvm.fabs.f(float %1332) #5, !dbg !113
  %.01.i61 = select i1 %.not.i60, float %1478, float %1477, !dbg !113
  %1479 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !113
  br i1 %1479, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !113

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %1480 = fmul float %.01.i61, 0x4007154760000000, !dbg !113
  %1481 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1480) #5, !dbg !113
  %1482 = fadd float %1481, 1.000000e+00, !dbg !113
  %1483 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1482) #6, !dbg !113, !srcloc !39
  %1484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i63 = icmp eq i32 %1484, 0, !dbg !113
  %1485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1483, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1486 = tail call float @llvm.nvvm.fma.rn.f(float %1483, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i64 = select i1 %.not6.i63, float %1486, float %1485, !dbg !113
  %1487 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !113
  %s.0.i65 = select i1 %1487, float 1.000000e+00, float %.03.i64, !dbg !113
  %1488 = bitcast float %s.0.i65 to i32, !dbg !113
  %1489 = bitcast float %1332 to i32, !dbg !113
  %1490 = and i32 %1489, -2147483648, !dbg !113
  %1491 = or i32 %1490, %1488, !dbg !113
  %1492 = bitcast i32 %1491 to float, !dbg !113
  br label %__nv_tanhf.exit78, !dbg !113

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %1493 = fmul float %1332, %1332, !dbg !113
  %1494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i68 = icmp eq i32 %1494, 0, !dbg !113
  %1495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1493, float 0xBFAAC795C0000000) #5, !dbg !113
  %1496 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1493, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i69 = select i1 %.not1.i68, float %1496, float %1495, !dbg !113
  %1497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i70 = icmp eq i32 %1497, 0, !dbg !113
  %1498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %1493, float 0x3FC10B2820000000) #5, !dbg !113
  %1499 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %1493, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i71 = select i1 %.not2.i70, float %1499, float %1498, !dbg !113
  %1500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i72 = icmp eq i32 %1500, 0, !dbg !113
  %1501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %1493, float 0xBFD5553DA0000000) #5, !dbg !113
  %1502 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %1493, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i73 = select i1 %.not3.i72, float %1502, float %1501, !dbg !113
  %1503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i74 = icmp eq i32 %1503, 0, !dbg !113
  %1504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %1493, float 0.000000e+00) #5, !dbg !113
  %1505 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %1493, float 0.000000e+00) #5, !dbg !113
  %.04.i75 = select i1 %.not4.i74, float %1505, float %1504, !dbg !113
  %1506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i76 = icmp eq i32 %1506, 0, !dbg !113
  %1507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %1332, float %1332) #5, !dbg !113
  %1508 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %1332, float %1332) #5, !dbg !113
  %.02.i77 = select i1 %.not5.i76, float %1508, float %1507, !dbg !113
  br label %__nv_tanhf.exit78, !dbg !113

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %1492, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !113
  %1509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i79 = icmp eq i32 %1509, 0, !dbg !113
  %1510 = tail call float @llvm.nvvm.fabs.ftz.f(float %1333) #5, !dbg !113
  %1511 = tail call float @llvm.nvvm.fabs.f(float %1333) #5, !dbg !113
  %.01.i80 = select i1 %.not.i79, float %1511, float %1510, !dbg !113
  %1512 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !113
  br i1 %1512, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !113

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %1513 = fmul float %.01.i80, 0x4007154760000000, !dbg !113
  %1514 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1513) #5, !dbg !113
  %1515 = fadd float %1514, 1.000000e+00, !dbg !113
  %1516 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1515) #6, !dbg !113, !srcloc !39
  %1517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i82 = icmp eq i32 %1517, 0, !dbg !113
  %1518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1516, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1519 = tail call float @llvm.nvvm.fma.rn.f(float %1516, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i83 = select i1 %.not6.i82, float %1519, float %1518, !dbg !113
  %1520 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !113
  %s.0.i84 = select i1 %1520, float 1.000000e+00, float %.03.i83, !dbg !113
  %1521 = bitcast float %s.0.i84 to i32, !dbg !113
  %1522 = bitcast float %1333 to i32, !dbg !113
  %1523 = and i32 %1522, -2147483648, !dbg !113
  %1524 = or i32 %1523, %1521, !dbg !113
  %1525 = bitcast i32 %1524 to float, !dbg !113
  br label %__nv_tanhf.exit97, !dbg !113

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %1526 = fmul float %1333, %1333, !dbg !113
  %1527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i87 = icmp eq i32 %1527, 0, !dbg !113
  %1528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1526, float 0xBFAAC795C0000000) #5, !dbg !113
  %1529 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1526, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i88 = select i1 %.not1.i87, float %1529, float %1528, !dbg !113
  %1530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i89 = icmp eq i32 %1530, 0, !dbg !113
  %1531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %1526, float 0x3FC10B2820000000) #5, !dbg !113
  %1532 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %1526, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i90 = select i1 %.not2.i89, float %1532, float %1531, !dbg !113
  %1533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i91 = icmp eq i32 %1533, 0, !dbg !113
  %1534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %1526, float 0xBFD5553DA0000000) #5, !dbg !113
  %1535 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %1526, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i92 = select i1 %.not3.i91, float %1535, float %1534, !dbg !113
  %1536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i93 = icmp eq i32 %1536, 0, !dbg !113
  %1537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %1526, float 0.000000e+00) #5, !dbg !113
  %1538 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %1526, float 0.000000e+00) #5, !dbg !113
  %.04.i94 = select i1 %.not4.i93, float %1538, float %1537, !dbg !113
  %1539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i95 = icmp eq i32 %1539, 0, !dbg !113
  %1540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %1333, float %1333) #5, !dbg !113
  %1541 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %1333, float %1333) #5, !dbg !113
  %.02.i96 = select i1 %.not5.i95, float %1541, float %1540, !dbg !113
  br label %__nv_tanhf.exit97, !dbg !113

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %1525, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !113
  %1542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i98 = icmp eq i32 %1542, 0, !dbg !113
  %1543 = tail call float @llvm.nvvm.fabs.ftz.f(float %1334) #5, !dbg !113
  %1544 = tail call float @llvm.nvvm.fabs.f(float %1334) #5, !dbg !113
  %.01.i99 = select i1 %.not.i98, float %1544, float %1543, !dbg !113
  %1545 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !113
  br i1 %1545, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !113

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %1546 = fmul float %.01.i99, 0x4007154760000000, !dbg !113
  %1547 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1546) #5, !dbg !113
  %1548 = fadd float %1547, 1.000000e+00, !dbg !113
  %1549 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1548) #6, !dbg !113, !srcloc !39
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i101 = icmp eq i32 %1550, 0, !dbg !113
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1549, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float %1549, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i102 = select i1 %.not6.i101, float %1552, float %1551, !dbg !113
  %1553 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !113
  %s.0.i103 = select i1 %1553, float 1.000000e+00, float %.03.i102, !dbg !113
  %1554 = bitcast float %s.0.i103 to i32, !dbg !113
  %1555 = bitcast float %1334 to i32, !dbg !113
  %1556 = and i32 %1555, -2147483648, !dbg !113
  %1557 = or i32 %1556, %1554, !dbg !113
  %1558 = bitcast i32 %1557 to float, !dbg !113
  br label %__nv_tanhf.exit116, !dbg !113

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %1559 = fmul float %1334, %1334, !dbg !113
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i106 = icmp eq i32 %1560, 0, !dbg !113
  %1561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1559, float 0xBFAAC795C0000000) #5, !dbg !113
  %1562 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1559, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i107 = select i1 %.not1.i106, float %1562, float %1561, !dbg !113
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i108 = icmp eq i32 %1563, 0, !dbg !113
  %1564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %1559, float 0x3FC10B2820000000) #5, !dbg !113
  %1565 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %1559, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i109 = select i1 %.not2.i108, float %1565, float %1564, !dbg !113
  %1566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i110 = icmp eq i32 %1566, 0, !dbg !113
  %1567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %1559, float 0xBFD5553DA0000000) #5, !dbg !113
  %1568 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %1559, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i111 = select i1 %.not3.i110, float %1568, float %1567, !dbg !113
  %1569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i112 = icmp eq i32 %1569, 0, !dbg !113
  %1570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %1559, float 0.000000e+00) #5, !dbg !113
  %1571 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %1559, float 0.000000e+00) #5, !dbg !113
  %.04.i113 = select i1 %.not4.i112, float %1571, float %1570, !dbg !113
  %1572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i114 = icmp eq i32 %1572, 0, !dbg !113
  %1573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %1334, float %1334) #5, !dbg !113
  %1574 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %1334, float %1334) #5, !dbg !113
  %.02.i115 = select i1 %.not5.i114, float %1574, float %1573, !dbg !113
  br label %__nv_tanhf.exit116, !dbg !113

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %1558, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !113
  %1575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i117 = icmp eq i32 %1575, 0, !dbg !113
  %1576 = tail call float @llvm.nvvm.fabs.ftz.f(float %1335) #5, !dbg !113
  %1577 = tail call float @llvm.nvvm.fabs.f(float %1335) #5, !dbg !113
  %.01.i118 = select i1 %.not.i117, float %1577, float %1576, !dbg !113
  %1578 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !113
  br i1 %1578, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !113

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %1579 = fmul float %.01.i118, 0x4007154760000000, !dbg !113
  %1580 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1579) #5, !dbg !113
  %1581 = fadd float %1580, 1.000000e+00, !dbg !113
  %1582 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1581) #6, !dbg !113, !srcloc !39
  %1583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i120 = icmp eq i32 %1583, 0, !dbg !113
  %1584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1582, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1585 = tail call float @llvm.nvvm.fma.rn.f(float %1582, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i121 = select i1 %.not6.i120, float %1585, float %1584, !dbg !113
  %1586 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !113
  %s.0.i122 = select i1 %1586, float 1.000000e+00, float %.03.i121, !dbg !113
  %1587 = bitcast float %s.0.i122 to i32, !dbg !113
  %1588 = bitcast float %1335 to i32, !dbg !113
  %1589 = and i32 %1588, -2147483648, !dbg !113
  %1590 = or i32 %1589, %1587, !dbg !113
  %1591 = bitcast i32 %1590 to float, !dbg !113
  br label %__nv_tanhf.exit135, !dbg !113

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %1592 = fmul float %1335, %1335, !dbg !113
  %1593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i125 = icmp eq i32 %1593, 0, !dbg !113
  %1594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1592, float 0xBFAAC795C0000000) #5, !dbg !113
  %1595 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1592, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i126 = select i1 %.not1.i125, float %1595, float %1594, !dbg !113
  %1596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i127 = icmp eq i32 %1596, 0, !dbg !113
  %1597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %1592, float 0x3FC10B2820000000) #5, !dbg !113
  %1598 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %1592, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i128 = select i1 %.not2.i127, float %1598, float %1597, !dbg !113
  %1599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i129 = icmp eq i32 %1599, 0, !dbg !113
  %1600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %1592, float 0xBFD5553DA0000000) #5, !dbg !113
  %1601 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %1592, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i130 = select i1 %.not3.i129, float %1601, float %1600, !dbg !113
  %1602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i131 = icmp eq i32 %1602, 0, !dbg !113
  %1603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %1592, float 0.000000e+00) #5, !dbg !113
  %1604 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %1592, float 0.000000e+00) #5, !dbg !113
  %.04.i132 = select i1 %.not4.i131, float %1604, float %1603, !dbg !113
  %1605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i133 = icmp eq i32 %1605, 0, !dbg !113
  %1606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %1335, float %1335) #5, !dbg !113
  %1607 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %1335, float %1335) #5, !dbg !113
  %.02.i134 = select i1 %.not5.i133, float %1607, float %1606, !dbg !113
  br label %__nv_tanhf.exit135, !dbg !113

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %1591, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !113
  %1608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i136 = icmp eq i32 %1608, 0, !dbg !113
  %1609 = tail call float @llvm.nvvm.fabs.ftz.f(float %1336) #5, !dbg !113
  %1610 = tail call float @llvm.nvvm.fabs.f(float %1336) #5, !dbg !113
  %.01.i137 = select i1 %.not.i136, float %1610, float %1609, !dbg !113
  %1611 = fcmp ult float %.01.i137, 0x3FE3333340000000, !dbg !113
  br i1 %1611, label %__internal_fmad.exit3.i143, label %__internal_fmad.exit1.i138, !dbg !113

__internal_fmad.exit1.i138:                       ; preds = %__nv_tanhf.exit135
  %1612 = fmul float %.01.i137, 0x4007154760000000, !dbg !113
  %1613 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1612) #5, !dbg !113
  %1614 = fadd float %1613, 1.000000e+00, !dbg !113
  %1615 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1614) #6, !dbg !113, !srcloc !39
  %1616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i139 = icmp eq i32 %1616, 0, !dbg !113
  %1617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1615, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1618 = tail call float @llvm.nvvm.fma.rn.f(float %1615, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i140 = select i1 %.not6.i139, float %1618, float %1617, !dbg !113
  %1619 = fcmp oge float %.01.i137, 0x4022059680000000, !dbg !113
  %s.0.i141 = select i1 %1619, float 1.000000e+00, float %.03.i140, !dbg !113
  %1620 = bitcast float %s.0.i141 to i32, !dbg !113
  %1621 = bitcast float %1336 to i32, !dbg !113
  %1622 = and i32 %1621, -2147483648, !dbg !113
  %1623 = or i32 %1622, %1620, !dbg !113
  %1624 = bitcast i32 %1623 to float, !dbg !113
  br label %__nv_tanhf.exit154, !dbg !113

__internal_fmad.exit3.i143:                       ; preds = %__nv_tanhf.exit135
  %1625 = fmul float %1336, %1336, !dbg !113
  %1626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i144 = icmp eq i32 %1626, 0, !dbg !113
  %1627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1625, float 0xBFAAC795C0000000) #5, !dbg !113
  %1628 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1625, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i145 = select i1 %.not1.i144, float %1628, float %1627, !dbg !113
  %1629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i146 = icmp eq i32 %1629, 0, !dbg !113
  %1630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %1625, float 0x3FC10B2820000000) #5, !dbg !113
  %1631 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %1625, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i147 = select i1 %.not2.i146, float %1631, float %1630, !dbg !113
  %1632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i148 = icmp eq i32 %1632, 0, !dbg !113
  %1633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i147, float %1625, float 0xBFD5553DA0000000) #5, !dbg !113
  %1634 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i147, float %1625, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i149 = select i1 %.not3.i148, float %1634, float %1633, !dbg !113
  %1635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i150 = icmp eq i32 %1635, 0, !dbg !113
  %1636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %1625, float 0.000000e+00) #5, !dbg !113
  %1637 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %1625, float 0.000000e+00) #5, !dbg !113
  %.04.i151 = select i1 %.not4.i150, float %1637, float %1636, !dbg !113
  %1638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i152 = icmp eq i32 %1638, 0, !dbg !113
  %1639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i151, float %1336, float %1336) #5, !dbg !113
  %1640 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i151, float %1336, float %1336) #5, !dbg !113
  %.02.i153 = select i1 %.not5.i152, float %1640, float %1639, !dbg !113
  br label %__nv_tanhf.exit154, !dbg !113

__nv_tanhf.exit154:                               ; preds = %__internal_fmad.exit1.i138, %__internal_fmad.exit3.i143
  %s.1.i142 = phi float [ %1624, %__internal_fmad.exit1.i138 ], [ %.02.i153, %__internal_fmad.exit3.i143 ], !dbg !113
  %1641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i155 = icmp eq i32 %1641, 0, !dbg !113
  %1642 = tail call float @llvm.nvvm.fabs.ftz.f(float %1337) #5, !dbg !113
  %1643 = tail call float @llvm.nvvm.fabs.f(float %1337) #5, !dbg !113
  %.01.i156 = select i1 %.not.i155, float %1643, float %1642, !dbg !113
  %1644 = fcmp ult float %.01.i156, 0x3FE3333340000000, !dbg !113
  br i1 %1644, label %__internal_fmad.exit3.i162, label %__internal_fmad.exit1.i157, !dbg !113

__internal_fmad.exit1.i157:                       ; preds = %__nv_tanhf.exit154
  %1645 = fmul float %.01.i156, 0x4007154760000000, !dbg !113
  %1646 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1645) #5, !dbg !113
  %1647 = fadd float %1646, 1.000000e+00, !dbg !113
  %1648 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1647) #6, !dbg !113, !srcloc !39
  %1649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i158 = icmp eq i32 %1649, 0, !dbg !113
  %1650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1648, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1651 = tail call float @llvm.nvvm.fma.rn.f(float %1648, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i159 = select i1 %.not6.i158, float %1651, float %1650, !dbg !113
  %1652 = fcmp oge float %.01.i156, 0x4022059680000000, !dbg !113
  %s.0.i160 = select i1 %1652, float 1.000000e+00, float %.03.i159, !dbg !113
  %1653 = bitcast float %s.0.i160 to i32, !dbg !113
  %1654 = bitcast float %1337 to i32, !dbg !113
  %1655 = and i32 %1654, -2147483648, !dbg !113
  %1656 = or i32 %1655, %1653, !dbg !113
  %1657 = bitcast i32 %1656 to float, !dbg !113
  br label %__nv_tanhf.exit173, !dbg !113

__internal_fmad.exit3.i162:                       ; preds = %__nv_tanhf.exit154
  %1658 = fmul float %1337, %1337, !dbg !113
  %1659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i163 = icmp eq i32 %1659, 0, !dbg !113
  %1660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1658, float 0xBFAAC795C0000000) #5, !dbg !113
  %1661 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1658, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i164 = select i1 %.not1.i163, float %1661, float %1660, !dbg !113
  %1662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i165 = icmp eq i32 %1662, 0, !dbg !113
  %1663 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i164, float %1658, float 0x3FC10B2820000000) #5, !dbg !113
  %1664 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i164, float %1658, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i166 = select i1 %.not2.i165, float %1664, float %1663, !dbg !113
  %1665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i167 = icmp eq i32 %1665, 0, !dbg !113
  %1666 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %1658, float 0xBFD5553DA0000000) #5, !dbg !113
  %1667 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %1658, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i168 = select i1 %.not3.i167, float %1667, float %1666, !dbg !113
  %1668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i169 = icmp eq i32 %1668, 0, !dbg !113
  %1669 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %1658, float 0.000000e+00) #5, !dbg !113
  %1670 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %1658, float 0.000000e+00) #5, !dbg !113
  %.04.i170 = select i1 %.not4.i169, float %1670, float %1669, !dbg !113
  %1671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i171 = icmp eq i32 %1671, 0, !dbg !113
  %1672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i170, float %1337, float %1337) #5, !dbg !113
  %1673 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i170, float %1337, float %1337) #5, !dbg !113
  %.02.i172 = select i1 %.not5.i171, float %1673, float %1672, !dbg !113
  br label %__nv_tanhf.exit173, !dbg !113

__nv_tanhf.exit173:                               ; preds = %__internal_fmad.exit1.i157, %__internal_fmad.exit3.i162
  %s.1.i161 = phi float [ %1657, %__internal_fmad.exit1.i157 ], [ %.02.i172, %__internal_fmad.exit3.i162 ], !dbg !113
  %1674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i174 = icmp eq i32 %1674, 0, !dbg !113
  %1675 = tail call float @llvm.nvvm.fabs.ftz.f(float %1338) #5, !dbg !113
  %1676 = tail call float @llvm.nvvm.fabs.f(float %1338) #5, !dbg !113
  %.01.i175 = select i1 %.not.i174, float %1676, float %1675, !dbg !113
  %1677 = fcmp ult float %.01.i175, 0x3FE3333340000000, !dbg !113
  br i1 %1677, label %__internal_fmad.exit3.i181, label %__internal_fmad.exit1.i176, !dbg !113

__internal_fmad.exit1.i176:                       ; preds = %__nv_tanhf.exit173
  %1678 = fmul float %.01.i175, 0x4007154760000000, !dbg !113
  %1679 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1678) #5, !dbg !113
  %1680 = fadd float %1679, 1.000000e+00, !dbg !113
  %1681 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1680) #6, !dbg !113, !srcloc !39
  %1682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i177 = icmp eq i32 %1682, 0, !dbg !113
  %1683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1681, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1684 = tail call float @llvm.nvvm.fma.rn.f(float %1681, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i178 = select i1 %.not6.i177, float %1684, float %1683, !dbg !113
  %1685 = fcmp oge float %.01.i175, 0x4022059680000000, !dbg !113
  %s.0.i179 = select i1 %1685, float 1.000000e+00, float %.03.i178, !dbg !113
  %1686 = bitcast float %s.0.i179 to i32, !dbg !113
  %1687 = bitcast float %1338 to i32, !dbg !113
  %1688 = and i32 %1687, -2147483648, !dbg !113
  %1689 = or i32 %1688, %1686, !dbg !113
  %1690 = bitcast i32 %1689 to float, !dbg !113
  br label %__nv_tanhf.exit192, !dbg !113

__internal_fmad.exit3.i181:                       ; preds = %__nv_tanhf.exit173
  %1691 = fmul float %1338, %1338, !dbg !113
  %1692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i182 = icmp eq i32 %1692, 0, !dbg !113
  %1693 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1691, float 0xBFAAC795C0000000) #5, !dbg !113
  %1694 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1691, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i183 = select i1 %.not1.i182, float %1694, float %1693, !dbg !113
  %1695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i184 = icmp eq i32 %1695, 0, !dbg !113
  %1696 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i183, float %1691, float 0x3FC10B2820000000) #5, !dbg !113
  %1697 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i183, float %1691, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i185 = select i1 %.not2.i184, float %1697, float %1696, !dbg !113
  %1698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i186 = icmp eq i32 %1698, 0, !dbg !113
  %1699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i185, float %1691, float 0xBFD5553DA0000000) #5, !dbg !113
  %1700 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i185, float %1691, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i187 = select i1 %.not3.i186, float %1700, float %1699, !dbg !113
  %1701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i188 = icmp eq i32 %1701, 0, !dbg !113
  %1702 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %1691, float 0.000000e+00) #5, !dbg !113
  %1703 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %1691, float 0.000000e+00) #5, !dbg !113
  %.04.i189 = select i1 %.not4.i188, float %1703, float %1702, !dbg !113
  %1704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i190 = icmp eq i32 %1704, 0, !dbg !113
  %1705 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i189, float %1338, float %1338) #5, !dbg !113
  %1706 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i189, float %1338, float %1338) #5, !dbg !113
  %.02.i191 = select i1 %.not5.i190, float %1706, float %1705, !dbg !113
  br label %__nv_tanhf.exit192, !dbg !113

__nv_tanhf.exit192:                               ; preds = %__internal_fmad.exit1.i176, %__internal_fmad.exit3.i181
  %s.1.i180 = phi float [ %1690, %__internal_fmad.exit1.i176 ], [ %.02.i191, %__internal_fmad.exit3.i181 ], !dbg !113
  %1707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i193 = icmp eq i32 %1707, 0, !dbg !113
  %1708 = tail call float @llvm.nvvm.fabs.ftz.f(float %1339) #5, !dbg !113
  %1709 = tail call float @llvm.nvvm.fabs.f(float %1339) #5, !dbg !113
  %.01.i194 = select i1 %.not.i193, float %1709, float %1708, !dbg !113
  %1710 = fcmp ult float %.01.i194, 0x3FE3333340000000, !dbg !113
  br i1 %1710, label %__internal_fmad.exit3.i200, label %__internal_fmad.exit1.i195, !dbg !113

__internal_fmad.exit1.i195:                       ; preds = %__nv_tanhf.exit192
  %1711 = fmul float %.01.i194, 0x4007154760000000, !dbg !113
  %1712 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1711) #5, !dbg !113
  %1713 = fadd float %1712, 1.000000e+00, !dbg !113
  %1714 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1713) #6, !dbg !113, !srcloc !39
  %1715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i196 = icmp eq i32 %1715, 0, !dbg !113
  %1716 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1714, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1717 = tail call float @llvm.nvvm.fma.rn.f(float %1714, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i197 = select i1 %.not6.i196, float %1717, float %1716, !dbg !113
  %1718 = fcmp oge float %.01.i194, 0x4022059680000000, !dbg !113
  %s.0.i198 = select i1 %1718, float 1.000000e+00, float %.03.i197, !dbg !113
  %1719 = bitcast float %s.0.i198 to i32, !dbg !113
  %1720 = bitcast float %1339 to i32, !dbg !113
  %1721 = and i32 %1720, -2147483648, !dbg !113
  %1722 = or i32 %1721, %1719, !dbg !113
  %1723 = bitcast i32 %1722 to float, !dbg !113
  br label %__nv_tanhf.exit211, !dbg !113

__internal_fmad.exit3.i200:                       ; preds = %__nv_tanhf.exit192
  %1724 = fmul float %1339, %1339, !dbg !113
  %1725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i201 = icmp eq i32 %1725, 0, !dbg !113
  %1726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1724, float 0xBFAAC795C0000000) #5, !dbg !113
  %1727 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1724, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i202 = select i1 %.not1.i201, float %1727, float %1726, !dbg !113
  %1728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i203 = icmp eq i32 %1728, 0, !dbg !113
  %1729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i202, float %1724, float 0x3FC10B2820000000) #5, !dbg !113
  %1730 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i202, float %1724, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i204 = select i1 %.not2.i203, float %1730, float %1729, !dbg !113
  %1731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i205 = icmp eq i32 %1731, 0, !dbg !113
  %1732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i204, float %1724, float 0xBFD5553DA0000000) #5, !dbg !113
  %1733 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i204, float %1724, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i206 = select i1 %.not3.i205, float %1733, float %1732, !dbg !113
  %1734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i207 = icmp eq i32 %1734, 0, !dbg !113
  %1735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i206, float %1724, float 0.000000e+00) #5, !dbg !113
  %1736 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i206, float %1724, float 0.000000e+00) #5, !dbg !113
  %.04.i208 = select i1 %.not4.i207, float %1736, float %1735, !dbg !113
  %1737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i209 = icmp eq i32 %1737, 0, !dbg !113
  %1738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i208, float %1339, float %1339) #5, !dbg !113
  %1739 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i208, float %1339, float %1339) #5, !dbg !113
  %.02.i210 = select i1 %.not5.i209, float %1739, float %1738, !dbg !113
  br label %__nv_tanhf.exit211, !dbg !113

__nv_tanhf.exit211:                               ; preds = %__internal_fmad.exit1.i195, %__internal_fmad.exit3.i200
  %s.1.i199 = phi float [ %1723, %__internal_fmad.exit1.i195 ], [ %.02.i210, %__internal_fmad.exit3.i200 ], !dbg !113
  %1740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i212 = icmp eq i32 %1740, 0, !dbg !113
  %1741 = tail call float @llvm.nvvm.fabs.ftz.f(float %1340) #5, !dbg !113
  %1742 = tail call float @llvm.nvvm.fabs.f(float %1340) #5, !dbg !113
  %.01.i213 = select i1 %.not.i212, float %1742, float %1741, !dbg !113
  %1743 = fcmp ult float %.01.i213, 0x3FE3333340000000, !dbg !113
  br i1 %1743, label %__internal_fmad.exit3.i219, label %__internal_fmad.exit1.i214, !dbg !113

__internal_fmad.exit1.i214:                       ; preds = %__nv_tanhf.exit211
  %1744 = fmul float %.01.i213, 0x4007154760000000, !dbg !113
  %1745 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1744) #5, !dbg !113
  %1746 = fadd float %1745, 1.000000e+00, !dbg !113
  %1747 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1746) #6, !dbg !113, !srcloc !39
  %1748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i215 = icmp eq i32 %1748, 0, !dbg !113
  %1749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1747, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1750 = tail call float @llvm.nvvm.fma.rn.f(float %1747, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i216 = select i1 %.not6.i215, float %1750, float %1749, !dbg !113
  %1751 = fcmp oge float %.01.i213, 0x4022059680000000, !dbg !113
  %s.0.i217 = select i1 %1751, float 1.000000e+00, float %.03.i216, !dbg !113
  %1752 = bitcast float %s.0.i217 to i32, !dbg !113
  %1753 = bitcast float %1340 to i32, !dbg !113
  %1754 = and i32 %1753, -2147483648, !dbg !113
  %1755 = or i32 %1754, %1752, !dbg !113
  %1756 = bitcast i32 %1755 to float, !dbg !113
  br label %__nv_tanhf.exit230, !dbg !113

__internal_fmad.exit3.i219:                       ; preds = %__nv_tanhf.exit211
  %1757 = fmul float %1340, %1340, !dbg !113
  %1758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i220 = icmp eq i32 %1758, 0, !dbg !113
  %1759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1757, float 0xBFAAC795C0000000) #5, !dbg !113
  %1760 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1757, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i221 = select i1 %.not1.i220, float %1760, float %1759, !dbg !113
  %1761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i222 = icmp eq i32 %1761, 0, !dbg !113
  %1762 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i221, float %1757, float 0x3FC10B2820000000) #5, !dbg !113
  %1763 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i221, float %1757, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i223 = select i1 %.not2.i222, float %1763, float %1762, !dbg !113
  %1764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i224 = icmp eq i32 %1764, 0, !dbg !113
  %1765 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i223, float %1757, float 0xBFD5553DA0000000) #5, !dbg !113
  %1766 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i223, float %1757, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i225 = select i1 %.not3.i224, float %1766, float %1765, !dbg !113
  %1767 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i226 = icmp eq i32 %1767, 0, !dbg !113
  %1768 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %1757, float 0.000000e+00) #5, !dbg !113
  %1769 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %1757, float 0.000000e+00) #5, !dbg !113
  %.04.i227 = select i1 %.not4.i226, float %1769, float %1768, !dbg !113
  %1770 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i228 = icmp eq i32 %1770, 0, !dbg !113
  %1771 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i227, float %1340, float %1340) #5, !dbg !113
  %1772 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i227, float %1340, float %1340) #5, !dbg !113
  %.02.i229 = select i1 %.not5.i228, float %1772, float %1771, !dbg !113
  br label %__nv_tanhf.exit230, !dbg !113

__nv_tanhf.exit230:                               ; preds = %__internal_fmad.exit1.i214, %__internal_fmad.exit3.i219
  %s.1.i218 = phi float [ %1756, %__internal_fmad.exit1.i214 ], [ %.02.i229, %__internal_fmad.exit3.i219 ], !dbg !113
  %1773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i231 = icmp eq i32 %1773, 0, !dbg !113
  %1774 = tail call float @llvm.nvvm.fabs.ftz.f(float %1341) #5, !dbg !113
  %1775 = tail call float @llvm.nvvm.fabs.f(float %1341) #5, !dbg !113
  %.01.i232 = select i1 %.not.i231, float %1775, float %1774, !dbg !113
  %1776 = fcmp ult float %.01.i232, 0x3FE3333340000000, !dbg !113
  br i1 %1776, label %__internal_fmad.exit3.i238, label %__internal_fmad.exit1.i233, !dbg !113

__internal_fmad.exit1.i233:                       ; preds = %__nv_tanhf.exit230
  %1777 = fmul float %.01.i232, 0x4007154760000000, !dbg !113
  %1778 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1777) #5, !dbg !113
  %1779 = fadd float %1778, 1.000000e+00, !dbg !113
  %1780 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1779) #6, !dbg !113, !srcloc !39
  %1781 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i234 = icmp eq i32 %1781, 0, !dbg !113
  %1782 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1780, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1783 = tail call float @llvm.nvvm.fma.rn.f(float %1780, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i235 = select i1 %.not6.i234, float %1783, float %1782, !dbg !113
  %1784 = fcmp oge float %.01.i232, 0x4022059680000000, !dbg !113
  %s.0.i236 = select i1 %1784, float 1.000000e+00, float %.03.i235, !dbg !113
  %1785 = bitcast float %s.0.i236 to i32, !dbg !113
  %1786 = bitcast float %1341 to i32, !dbg !113
  %1787 = and i32 %1786, -2147483648, !dbg !113
  %1788 = or i32 %1787, %1785, !dbg !113
  %1789 = bitcast i32 %1788 to float, !dbg !113
  br label %__nv_tanhf.exit249, !dbg !113

__internal_fmad.exit3.i238:                       ; preds = %__nv_tanhf.exit230
  %1790 = fmul float %1341, %1341, !dbg !113
  %1791 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i239 = icmp eq i32 %1791, 0, !dbg !113
  %1792 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1790, float 0xBFAAC795C0000000) #5, !dbg !113
  %1793 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1790, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i240 = select i1 %.not1.i239, float %1793, float %1792, !dbg !113
  %1794 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i241 = icmp eq i32 %1794, 0, !dbg !113
  %1795 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i240, float %1790, float 0x3FC10B2820000000) #5, !dbg !113
  %1796 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i240, float %1790, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i242 = select i1 %.not2.i241, float %1796, float %1795, !dbg !113
  %1797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i243 = icmp eq i32 %1797, 0, !dbg !113
  %1798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i242, float %1790, float 0xBFD5553DA0000000) #5, !dbg !113
  %1799 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i242, float %1790, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i244 = select i1 %.not3.i243, float %1799, float %1798, !dbg !113
  %1800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i245 = icmp eq i32 %1800, 0, !dbg !113
  %1801 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i244, float %1790, float 0.000000e+00) #5, !dbg !113
  %1802 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i244, float %1790, float 0.000000e+00) #5, !dbg !113
  %.04.i246 = select i1 %.not4.i245, float %1802, float %1801, !dbg !113
  %1803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i247 = icmp eq i32 %1803, 0, !dbg !113
  %1804 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i246, float %1341, float %1341) #5, !dbg !113
  %1805 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i246, float %1341, float %1341) #5, !dbg !113
  %.02.i248 = select i1 %.not5.i247, float %1805, float %1804, !dbg !113
  br label %__nv_tanhf.exit249, !dbg !113

__nv_tanhf.exit249:                               ; preds = %__internal_fmad.exit1.i233, %__internal_fmad.exit3.i238
  %s.1.i237 = phi float [ %1789, %__internal_fmad.exit1.i233 ], [ %.02.i248, %__internal_fmad.exit3.i238 ], !dbg !113
  %1806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i250 = icmp eq i32 %1806, 0, !dbg !113
  %1807 = tail call float @llvm.nvvm.fabs.ftz.f(float %1342) #5, !dbg !113
  %1808 = tail call float @llvm.nvvm.fabs.f(float %1342) #5, !dbg !113
  %.01.i251 = select i1 %.not.i250, float %1808, float %1807, !dbg !113
  %1809 = fcmp ult float %.01.i251, 0x3FE3333340000000, !dbg !113
  br i1 %1809, label %__internal_fmad.exit3.i257, label %__internal_fmad.exit1.i252, !dbg !113

__internal_fmad.exit1.i252:                       ; preds = %__nv_tanhf.exit249
  %1810 = fmul float %.01.i251, 0x4007154760000000, !dbg !113
  %1811 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1810) #5, !dbg !113
  %1812 = fadd float %1811, 1.000000e+00, !dbg !113
  %1813 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1812) #6, !dbg !113, !srcloc !39
  %1814 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i253 = icmp eq i32 %1814, 0, !dbg !113
  %1815 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1813, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1816 = tail call float @llvm.nvvm.fma.rn.f(float %1813, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i254 = select i1 %.not6.i253, float %1816, float %1815, !dbg !113
  %1817 = fcmp oge float %.01.i251, 0x4022059680000000, !dbg !113
  %s.0.i255 = select i1 %1817, float 1.000000e+00, float %.03.i254, !dbg !113
  %1818 = bitcast float %s.0.i255 to i32, !dbg !113
  %1819 = bitcast float %1342 to i32, !dbg !113
  %1820 = and i32 %1819, -2147483648, !dbg !113
  %1821 = or i32 %1820, %1818, !dbg !113
  %1822 = bitcast i32 %1821 to float, !dbg !113
  br label %__nv_tanhf.exit268, !dbg !113

__internal_fmad.exit3.i257:                       ; preds = %__nv_tanhf.exit249
  %1823 = fmul float %1342, %1342, !dbg !113
  %1824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i258 = icmp eq i32 %1824, 0, !dbg !113
  %1825 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1823, float 0xBFAAC795C0000000) #5, !dbg !113
  %1826 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1823, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i259 = select i1 %.not1.i258, float %1826, float %1825, !dbg !113
  %1827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i260 = icmp eq i32 %1827, 0, !dbg !113
  %1828 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i259, float %1823, float 0x3FC10B2820000000) #5, !dbg !113
  %1829 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i259, float %1823, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i261 = select i1 %.not2.i260, float %1829, float %1828, !dbg !113
  %1830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i262 = icmp eq i32 %1830, 0, !dbg !113
  %1831 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float %1823, float 0xBFD5553DA0000000) #5, !dbg !113
  %1832 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float %1823, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i263 = select i1 %.not3.i262, float %1832, float %1831, !dbg !113
  %1833 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i264 = icmp eq i32 %1833, 0, !dbg !113
  %1834 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i263, float %1823, float 0.000000e+00) #5, !dbg !113
  %1835 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i263, float %1823, float 0.000000e+00) #5, !dbg !113
  %.04.i265 = select i1 %.not4.i264, float %1835, float %1834, !dbg !113
  %1836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i266 = icmp eq i32 %1836, 0, !dbg !113
  %1837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i265, float %1342, float %1342) #5, !dbg !113
  %1838 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i265, float %1342, float %1342) #5, !dbg !113
  %.02.i267 = select i1 %.not5.i266, float %1838, float %1837, !dbg !113
  br label %__nv_tanhf.exit268, !dbg !113

__nv_tanhf.exit268:                               ; preds = %__internal_fmad.exit1.i252, %__internal_fmad.exit3.i257
  %s.1.i256 = phi float [ %1822, %__internal_fmad.exit1.i252 ], [ %.02.i267, %__internal_fmad.exit3.i257 ], !dbg !113
  %1839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not.i269 = icmp eq i32 %1839, 0, !dbg !113
  %1840 = tail call float @llvm.nvvm.fabs.ftz.f(float %1343) #5, !dbg !113
  %1841 = tail call float @llvm.nvvm.fabs.f(float %1343) #5, !dbg !113
  %.01.i270 = select i1 %.not.i269, float %1841, float %1840, !dbg !113
  %1842 = fcmp ult float %.01.i270, 0x3FE3333340000000, !dbg !113
  br i1 %1842, label %__internal_fmad.exit3.i276, label %__internal_fmad.exit1.i271, !dbg !113

__internal_fmad.exit1.i271:                       ; preds = %__nv_tanhf.exit268
  %1843 = fmul float %.01.i270, 0x4007154760000000, !dbg !113
  %1844 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1843) #5, !dbg !113
  %1845 = fadd float %1844, 1.000000e+00, !dbg !113
  %1846 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1845) #6, !dbg !113, !srcloc !39
  %1847 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not6.i272 = icmp eq i32 %1847, 0, !dbg !113
  %1848 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1846, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %1849 = tail call float @llvm.nvvm.fma.rn.f(float %1846, float -2.000000e+00, float 1.000000e+00) #5, !dbg !113
  %.03.i273 = select i1 %.not6.i272, float %1849, float %1848, !dbg !113
  %1850 = fcmp oge float %.01.i270, 0x4022059680000000, !dbg !113
  %s.0.i274 = select i1 %1850, float 1.000000e+00, float %.03.i273, !dbg !113
  %1851 = bitcast float %s.0.i274 to i32, !dbg !113
  %1852 = bitcast float %1343 to i32, !dbg !113
  %1853 = and i32 %1852, -2147483648, !dbg !113
  %1854 = or i32 %1853, %1851, !dbg !113
  %1855 = bitcast i32 %1854 to float, !dbg !113
  br label %__nv_tanhf.exit287, !dbg !113

__internal_fmad.exit3.i276:                       ; preds = %__nv_tanhf.exit268
  %1856 = fmul float %1343, %1343, !dbg !113
  %1857 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not1.i277 = icmp eq i32 %1857, 0, !dbg !113
  %1858 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1856, float 0xBFAAC795C0000000) #5, !dbg !113
  %1859 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1856, float 0xBFAAC795C0000000) #5, !dbg !113
  %.06.i278 = select i1 %.not1.i277, float %1859, float %1858, !dbg !113
  %1860 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not2.i279 = icmp eq i32 %1860, 0, !dbg !113
  %1861 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i278, float %1856, float 0x3FC10B2820000000) #5, !dbg !113
  %1862 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i278, float %1856, float 0x3FC10B2820000000) #5, !dbg !113
  %.05.i280 = select i1 %.not2.i279, float %1862, float %1861, !dbg !113
  %1863 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not3.i281 = icmp eq i32 %1863, 0, !dbg !113
  %1864 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i280, float %1856, float 0xBFD5553DA0000000) #5, !dbg !113
  %1865 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i280, float %1856, float 0xBFD5553DA0000000) #5, !dbg !113
  %.0.i282 = select i1 %.not3.i281, float %1865, float %1864, !dbg !113
  %1866 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not4.i283 = icmp eq i32 %1866, 0, !dbg !113
  %1867 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i282, float %1856, float 0.000000e+00) #5, !dbg !113
  %1868 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i282, float %1856, float 0.000000e+00) #5, !dbg !113
  %.04.i284 = select i1 %.not4.i283, float %1868, float %1867, !dbg !113
  %1869 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !113
  %.not5.i285 = icmp eq i32 %1869, 0, !dbg !113
  %1870 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i284, float %1343, float %1343) #5, !dbg !113
  %1871 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i284, float %1343, float %1343) #5, !dbg !113
  %.02.i286 = select i1 %.not5.i285, float %1871, float %1870, !dbg !113
  br label %__nv_tanhf.exit287, !dbg !113

__nv_tanhf.exit287:                               ; preds = %__internal_fmad.exit1.i271, %__internal_fmad.exit3.i276
  %s.1.i275 = phi float [ %1855, %__internal_fmad.exit1.i271 ], [ %.02.i286, %__internal_fmad.exit3.i276 ], !dbg !113
  %1872 = fadd float %s.1.i, 1.000000e+00, !dbg !114
  %1873 = fadd float %s.1.i9, 1.000000e+00, !dbg !114
  %1874 = fadd float %s.1.i28, 1.000000e+00, !dbg !114
  %1875 = fadd float %s.1.i47, 1.000000e+00, !dbg !114
  %1876 = fadd float %s.1.i66, 1.000000e+00, !dbg !114
  %1877 = fadd float %s.1.i85, 1.000000e+00, !dbg !114
  %1878 = fadd float %s.1.i104, 1.000000e+00, !dbg !114
  %1879 = fadd float %s.1.i123, 1.000000e+00, !dbg !114
  %1880 = fadd float %s.1.i142, 1.000000e+00, !dbg !114
  %1881 = fadd float %s.1.i161, 1.000000e+00, !dbg !114
  %1882 = fadd float %s.1.i180, 1.000000e+00, !dbg !114
  %1883 = fadd float %s.1.i199, 1.000000e+00, !dbg !114
  %1884 = fadd float %s.1.i218, 1.000000e+00, !dbg !114
  %1885 = fadd float %s.1.i237, 1.000000e+00, !dbg !114
  %1886 = fadd float %s.1.i256, 1.000000e+00, !dbg !114
  %1887 = fadd float %s.1.i275, 1.000000e+00, !dbg !114
  %1888 = fmul float %1248, %1872, !dbg !115
  %1889 = fmul float %1249, %1873, !dbg !115
  %1890 = fmul float %1250, %1874, !dbg !115
  %1891 = fmul float %1251, %1875, !dbg !115
  %1892 = fmul float %1252, %1876, !dbg !115
  %1893 = fmul float %1253, %1877, !dbg !115
  %1894 = fmul float %1254, %1878, !dbg !115
  %1895 = fmul float %1255, %1879, !dbg !115
  %1896 = fmul float %1256, %1880, !dbg !115
  %1897 = fmul float %1257, %1881, !dbg !115
  %1898 = fmul float %1258, %1882, !dbg !115
  %1899 = fmul float %1259, %1883, !dbg !115
  %1900 = fmul float %1260, %1884, !dbg !115
  %1901 = fmul float %1261, %1885, !dbg !115
  %1902 = fmul float %1262, %1886, !dbg !115
  %1903 = fmul float %1263, %1887, !dbg !115
  %1904 = select i1 %1135, float %1181, float %1888, !dbg !116
  %1905 = select i1 %1135, float %1182, float %1889, !dbg !116
  %1906 = select i1 %1135, float %1183, float %1890, !dbg !116
  %1907 = select i1 %1135, float %1184, float %1891, !dbg !116
  %1908 = select i1 %1135, float %1185, float %1892, !dbg !116
  %1909 = select i1 %1135, float %1186, float %1893, !dbg !116
  %1910 = select i1 %1135, float %1187, float %1894, !dbg !116
  %1911 = select i1 %1135, float %1188, float %1895, !dbg !116
  %1912 = select i1 %1135, float %1189, float %1896, !dbg !116
  %1913 = select i1 %1135, float %1190, float %1897, !dbg !116
  %1914 = select i1 %1135, float %1191, float %1898, !dbg !116
  %1915 = select i1 %1135, float %1192, float %1899, !dbg !116
  %1916 = select i1 %1135, float %1193, float %1900, !dbg !116
  %1917 = select i1 %1135, float %1194, float %1901, !dbg !116
  %1918 = select i1 %1135, float %1195, float %1902, !dbg !116
  %1919 = select i1 %1135, float %1196, float %1903, !dbg !116
  %1920 = fmul float %1129, %1904, !dbg !117
  %1921 = fmul float %1129, %1905, !dbg !117
  %1922 = fmul float %1129, %1906, !dbg !117
  %1923 = fmul float %1129, %1907, !dbg !117
  %1924 = fmul float %1129, %1908, !dbg !117
  %1925 = fmul float %1129, %1909, !dbg !117
  %1926 = fmul float %1129, %1910, !dbg !117
  %1927 = fmul float %1129, %1911, !dbg !117
  %1928 = fmul float %1129, %1912, !dbg !117
  %1929 = fmul float %1129, %1913, !dbg !117
  %1930 = fmul float %1129, %1914, !dbg !117
  %1931 = fmul float %1129, %1915, !dbg !117
  %1932 = fmul float %1129, %1916, !dbg !117
  %1933 = fmul float %1129, %1917, !dbg !117
  %1934 = fmul float %1129, %1918, !dbg !117
  %1935 = fmul float %1129, %1919, !dbg !117
  %1936 = tail call float @llvm.nvvm.round.f(float %1920) #5, !dbg !118
  %1937 = tail call float @llvm.nvvm.round.f(float %1921) #5, !dbg !118
  %1938 = tail call float @llvm.nvvm.round.f(float %1922) #5, !dbg !118
  %1939 = tail call float @llvm.nvvm.round.f(float %1923) #5, !dbg !118
  %1940 = tail call float @llvm.nvvm.round.f(float %1924) #5, !dbg !118
  %1941 = tail call float @llvm.nvvm.round.f(float %1925) #5, !dbg !118
  %1942 = tail call float @llvm.nvvm.round.f(float %1926) #5, !dbg !118
  %1943 = tail call float @llvm.nvvm.round.f(float %1927) #5, !dbg !118
  %1944 = tail call float @llvm.nvvm.round.f(float %1928) #5, !dbg !118
  %1945 = tail call float @llvm.nvvm.round.f(float %1929) #5, !dbg !118
  %1946 = tail call float @llvm.nvvm.round.f(float %1930) #5, !dbg !118
  %1947 = tail call float @llvm.nvvm.round.f(float %1931) #5, !dbg !118
  %1948 = tail call float @llvm.nvvm.round.f(float %1932) #5, !dbg !118
  %1949 = tail call float @llvm.nvvm.round.f(float %1933) #5, !dbg !118
  %1950 = tail call float @llvm.nvvm.round.f(float %1934) #5, !dbg !118
  %1951 = tail call float @llvm.nvvm.round.f(float %1935) #5, !dbg !118
  %1952 = insertelement <4 x float> poison, float %1936, i64 0, !dbg !119
  %1953 = insertelement <4 x float> %1952, float %1937, i64 1, !dbg !119
  %1954 = insertelement <4 x float> %1953, float %1938, i64 2, !dbg !119
  %1955 = insertelement <4 x float> %1954, float %1939, i64 3, !dbg !119
  %1956 = fcmp ogt <4 x float> %1955, splat (float -1.270000e+02), !dbg !119
  %1957 = fcmp uno <4 x float> %1955, zeroinitializer, !dbg !121
  %1958 = or <4 x i1> %1956, %1957, !dbg !122
  %1959 = select <4 x i1> %1958, <4 x float> %1955, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1960 = fcmp olt <4 x float> %1959, splat (float 1.270000e+02), !dbg !124
  %1961 = fcmp uno <4 x float> %1959, zeroinitializer, !dbg !126
  %1962 = or <4 x i1> %1960, %1961, !dbg !127
  %1963 = fptosi <4 x float> %1959 to <4 x i8>, !dbg !128
  %1964 = select <4 x i1> %1962, <4 x i8> %1963, <4 x i8> splat (i8 127), !dbg !129
  %1965 = insertelement <4 x float> poison, float %1940, i64 0, !dbg !119
  %1966 = insertelement <4 x float> %1965, float %1941, i64 1, !dbg !119
  %1967 = insertelement <4 x float> %1966, float %1942, i64 2, !dbg !119
  %1968 = insertelement <4 x float> %1967, float %1943, i64 3, !dbg !119
  %1969 = fcmp ogt <4 x float> %1968, splat (float -1.270000e+02), !dbg !119
  %1970 = fcmp uno <4 x float> %1968, zeroinitializer, !dbg !121
  %1971 = or <4 x i1> %1969, %1970, !dbg !122
  %1972 = select <4 x i1> %1971, <4 x float> %1968, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1973 = fcmp olt <4 x float> %1972, splat (float 1.270000e+02), !dbg !124
  %1974 = fcmp uno <4 x float> %1972, zeroinitializer, !dbg !126
  %1975 = or <4 x i1> %1973, %1974, !dbg !127
  %1976 = fptosi <4 x float> %1972 to <4 x i8>, !dbg !128
  %1977 = select <4 x i1> %1975, <4 x i8> %1976, <4 x i8> splat (i8 127), !dbg !129
  %1978 = insertelement <4 x float> poison, float %1944, i64 0, !dbg !119
  %1979 = insertelement <4 x float> %1978, float %1945, i64 1, !dbg !119
  %1980 = insertelement <4 x float> %1979, float %1946, i64 2, !dbg !119
  %1981 = insertelement <4 x float> %1980, float %1947, i64 3, !dbg !119
  %1982 = fcmp ogt <4 x float> %1981, splat (float -1.270000e+02), !dbg !119
  %1983 = fcmp uno <4 x float> %1981, zeroinitializer, !dbg !121
  %1984 = or <4 x i1> %1982, %1983, !dbg !122
  %1985 = select <4 x i1> %1984, <4 x float> %1981, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1986 = fcmp olt <4 x float> %1985, splat (float 1.270000e+02), !dbg !124
  %1987 = fcmp uno <4 x float> %1985, zeroinitializer, !dbg !126
  %1988 = or <4 x i1> %1986, %1987, !dbg !127
  %1989 = fptosi <4 x float> %1985 to <4 x i8>, !dbg !128
  %1990 = select <4 x i1> %1988, <4 x i8> %1989, <4 x i8> splat (i8 127), !dbg !129
  %1991 = insertelement <4 x float> poison, float %1948, i64 0, !dbg !119
  %1992 = insertelement <4 x float> %1991, float %1949, i64 1, !dbg !119
  %1993 = insertelement <4 x float> %1992, float %1950, i64 2, !dbg !119
  %1994 = insertelement <4 x float> %1993, float %1951, i64 3, !dbg !119
  %1995 = fcmp ogt <4 x float> %1994, splat (float -1.270000e+02), !dbg !119
  %1996 = fcmp uno <4 x float> %1994, zeroinitializer, !dbg !121
  %1997 = or <4 x i1> %1995, %1996, !dbg !122
  %1998 = select <4 x i1> %1997, <4 x float> %1994, <4 x float> splat (float -1.270000e+02), !dbg !123
  %1999 = fcmp olt <4 x float> %1998, splat (float 1.270000e+02), !dbg !124
  %2000 = fcmp uno <4 x float> %1998, zeroinitializer, !dbg !126
  %2001 = or <4 x i1> %1999, %2000, !dbg !127
  %2002 = fptosi <4 x float> %1998 to <4 x i8>, !dbg !128
  %2003 = select <4 x i1> %2001, <4 x i8> %2002, <4 x i8> splat (i8 127), !dbg !129
  %2004 = add i32 %1130, %1136, !dbg !130
  %2005 = sext i32 %2004 to i64, !dbg !131
  %2006 = getelementptr i8, ptr addrspace(1) %4, i64 %2005, !dbg !131
  %2007 = bitcast <4 x i8> %1964 to i32, !dbg !132
  %2008 = bitcast <4 x i8> %1977 to i32, !dbg !132
  %2009 = bitcast <4 x i8> %1990 to i32, !dbg !132
  %2010 = bitcast <4 x i8> %2003 to i32, !dbg !132
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %2007, i32 %2008, i32 %2009, i32 %2010, ptr addrspace(1) %2006, i1 %1145) #5, !dbg !132
  br i1 %1132, label %1131, label %2011, !dbg !92

2011:                                             ; preds = %__nv_tanhf.exit287
  ret void, !dbg !133
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 1024}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 42, column: 39, scope: !6)
!16 = !DILocation(line: 46, column: 40, scope: !6)
!17 = !DILocation(line: 31, column: 40, scope: !6)
!18 = !DILocation(line: 32, column: 31, scope: !6)
!19 = !DILocation(line: 33, column: 29, scope: !6)
!20 = !DILocation(line: 41, column: 22, scope: !6)
!21 = !DILocation(line: 42, column: 45, scope: !6)
!22 = !DILocation(line: 42, column: 34, scope: !6)
!23 = !DILocation(line: 42, column: 63, scope: !6)
!24 = !DILocation(line: 42, column: 71, scope: !6)
!25 = !DILocation(line: 42, column: 53, scope: !6)
!26 = !DILocation(line: 42, column: 121, scope: !6)
!27 = !DILocation(line: 43, column: 23, scope: !6)
!28 = !DILocation(line: 46, column: 46, scope: !6)
!29 = !DILocation(line: 46, column: 34, scope: !6)
!30 = !DILocation(line: 46, column: 82, scope: !6)
!31 = !DILocation(line: 46, column: 64, scope: !6)
!32 = !DILocation(line: 48, column: 23, scope: !6)
!33 = !DILocation(line: 49, column: 23, scope: !6)
!34 = !DILocation(line: 50, column: 24, scope: !6)
!35 = !DILocation(line: 52, column: 24, scope: !6)
!36 = !DILocation(line: 53, column: 23, scope: !6)
!37 = !DILocation(line: 55, column: 24, scope: !6)
!38 = !DILocation(line: 56, column: 31, scope: !6)
!39 = !{i32 21046}
!40 = !DILocation(line: 58, column: 24, scope: !6)
!41 = !DILocation(line: 96, column: 21, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !6, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!44 = !DILocation(line: 65, column: 47, scope: !6)
!45 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !46)
!46 = !DILocation(line: 67, column: 47, scope: !6)
!47 = !DILocation(line: 59, column: 24, scope: !6)
!48 = !DILocation(line: 63, column: 37, scope: !6)
!49 = !DILocation(line: 94, column: 15, scope: !42, inlinedAt: !44)
!50 = !DILocation(line: 96, column: 16, scope: !42, inlinedAt: !44)
!51 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !44)
!52 = !DILocation(line: 66, column: 50, scope: !6)
!53 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !46)
!54 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !46)
!55 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !46)
!56 = !DILocation(line: 68, column: 50, scope: !6)
!57 = !DILocation(line: 94, column: 15, scope: !58, inlinedAt: !59)
!58 = distinct !DILexicalBlockFile(scope: !42, file: !43, discriminator: 0)
!59 = !DILocation(line: 69, column: 40, scope: !6)
!60 = !DILocation(line: 96, column: 21, scope: !58, inlinedAt: !59)
!61 = !DILocation(line: 96, column: 16, scope: !58, inlinedAt: !59)
!62 = !DILocation(line: 97, column: 29, scope: !58, inlinedAt: !59)
!63 = !DILocation(line: 110, column: 29, scope: !42, inlinedAt: !59)
!64 = !DILocation(line: 71, column: 37, scope: !6)
!65 = !DILocation(line: 115, column: 29, scope: !42, inlinedAt: !66)
!66 = !DILocation(line: 70, column: 40, scope: !6)
!67 = !DILocation(line: 102, column: 15, scope: !58, inlinedAt: !66)
!68 = !DILocation(line: 104, column: 21, scope: !58, inlinedAt: !66)
!69 = !DILocation(line: 104, column: 16, scope: !58, inlinedAt: !66)
!70 = !DILocation(line: 105, column: 29, scope: !58, inlinedAt: !66)
!71 = !DILocation(line: 72, column: 37, scope: !6)
!72 = !DILocation(line: 71, column: 25, scope: !6)
!73 = !DILocation(line: 72, column: 25, scope: !6)
!74 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !75)
!75 = !DILocation(line: 107, column: 46, scope: !6)
!76 = !DILocation(line: 108, column: 17, scope: !6)
!77 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !78)
!78 = !DILocation(line: 109, column: 46, scope: !6)
!79 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !80)
!80 = !DILocation(line: 110, column: 46, scope: !6)
!81 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !80)
!82 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !80)
!83 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !80)
!84 = !DILocation(line: 112, column: 24, scope: !6)
!85 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !86)
!86 = !DILocation(line: 115, column: 46, scope: !6)
!87 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !86)
!88 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !86)
!89 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !86)
!90 = !DILocation(line: 118, column: 25, scope: !6)
!91 = !DILocation(line: 130, column: 42, scope: !6)
!92 = !DILocation(line: 73, column: 40, scope: !6)
!93 = !DILocation(line: 74, column: 31, scope: !6)
!94 = !DILocation(line: 75, column: 29, scope: !6)
!95 = !DILocation(line: 83, column: 24, scope: !6)
!96 = !DILocation(line: 84, column: 46, scope: !6)
!97 = !DILocation(line: 84, column: 35, scope: !6)
!98 = !DILocation(line: 84, column: 64, scope: !6)
!99 = !DILocation(line: 84, column: 72, scope: !6)
!100 = !DILocation(line: 84, column: 54, scope: !6)
!101 = !DILocation(line: 84, column: 123, scope: !6)
!102 = !DILocation(line: 85, column: 25, scope: !6)
!103 = !DILocation(line: 88, column: 47, scope: !6)
!104 = !DILocation(line: 88, column: 35, scope: !6)
!105 = !DILocation(line: 88, column: 83, scope: !6)
!106 = !DILocation(line: 88, column: 65, scope: !6)
!107 = !DILocation(line: 90, column: 24, scope: !6)
!108 = !DILocation(line: 91, column: 24, scope: !6)
!109 = !DILocation(line: 92, column: 24, scope: !6)
!110 = !DILocation(line: 94, column: 24, scope: !6)
!111 = !DILocation(line: 95, column: 24, scope: !6)
!112 = !DILocation(line: 97, column: 24, scope: !6)
!113 = !DILocation(line: 98, column: 31, scope: !6)
!114 = !DILocation(line: 100, column: 24, scope: !6)
!115 = !DILocation(line: 101, column: 24, scope: !6)
!116 = !DILocation(line: 105, column: 39, scope: !6)
!117 = !DILocation(line: 121, column: 24, scope: !6)
!118 = !DILocation(line: 122, column: 36, scope: !6)
!119 = !DILocation(line: 102, column: 15, scope: !42, inlinedAt: !120)
!120 = !DILocation(line: 125, column: 46, scope: !6)
!121 = !DILocation(line: 104, column: 21, scope: !42, inlinedAt: !120)
!122 = !DILocation(line: 104, column: 16, scope: !42, inlinedAt: !120)
!123 = !DILocation(line: 105, column: 29, scope: !42, inlinedAt: !120)
!124 = !DILocation(line: 94, column: 15, scope: !42, inlinedAt: !125)
!125 = !DILocation(line: 127, column: 46, scope: !6)
!126 = !DILocation(line: 96, column: 21, scope: !42, inlinedAt: !125)
!127 = !DILocation(line: 96, column: 16, scope: !42, inlinedAt: !125)
!128 = !DILocation(line: 129, column: 25, scope: !6)
!129 = !DILocation(line: 97, column: 29, scope: !42, inlinedAt: !125)
!130 = !DILocation(line: 130, column: 36, scope: !6)
!131 = !DILocation(line: 130, column: 29, scope: !6)
!132 = !DILocation(line: 130, column: 54, scope: !6)
!133 = !DILocation(line: 73, column: 4, scope: !6)
