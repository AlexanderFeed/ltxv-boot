//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<374>;
	.reg .b64 	%rd<39>;
	.loc	1 17 0                          // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd15, [triton_mm_param_0];
	ld.param.u64 	%rd16, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:40:24
	mov.u32 	%r64, %ctaid.x;
	.loc	1 46 22                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:46:22
	mul.hi.s32 	%r65, %r64, 715827883;
	shr.u32 	%r66, %r65, 31;
	shr.s32 	%r67, %r65, 6;
	add.s32 	%r68, %r67, %r66;
	.loc	1 47 41                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:47:41
	shl.b32 	%r69, %r68, 3;
	.loc	1 47 30                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:47:30
	sub.s32 	%r70, 65, %r69;
	.loc	1 47 50                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:47:50
	min.s32 	%r71, %r70, 8;
	.loc	1 48 40                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:48:40
	rem.s32 	%r72, %r64, %r71;
	.loc	1 48 34                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:48:34
	add.s32 	%r73, %r72, %r69;
	.loc	1 49 19                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:49:19
	mul.lo.s32 	%r74, %r68, 384;
	sub.s32 	%r75, %r64, %r74;
	.loc	1 49 30                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:49:30
	div.s32 	%r76, %r75, %r71;
	.loc	1 51 17                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:17
	shl.b32 	%r1, %r73, 6;
	.loc	1 51 40                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	shr.u32 	%r4, %r2, 2;
	and.b32  	%r77, %r4, 8;
	and.b32  	%r78, %r4, 16;
	and.b32  	%r5, %r2, 128;
	bfe.u32 	%r79, %r2, 2, 6;
	.loc	1 51 27                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:27
	or.b32  	%r80, %r1, %r79;
	.loc	1 52 17                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:52:17
	shl.b32 	%r6, %r76, 6;
	.loc	1 52 27                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:52:27
	or.b32  	%r81, %r6, %r79;
	.loc	1 54 57                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:54:57
	mul.hi.s32 	%r82, %r80, 2139127681;
	shr.u32 	%r83, %r82, 31;
	shr.s32 	%r84, %r82, 11;
	add.s32 	%r85, %r84, %r83;
	mul.lo.s32 	%r86, %r85, 4112;
	sub.s32 	%r87, %r80, %r86;
	.loc	1 58 57                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:58:57
	mul.hi.s32 	%r88, %r81, 715827883;
	shr.u32 	%r89, %r88, 31;
	shr.u32 	%r90, %r88, 9;
	add.s32 	%r91, %r90, %r89;
	mul.lo.s32 	%r92, %r91, 3072;
	sub.s32 	%r93, %r81, %r92;
	.loc	1 66 30                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:66:30
	shl.b32 	%r7, %r2, 4;
	and.b32  	%r94, %r7, 48;
	.loc	1 71 31                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:71:31
	mul.lo.s32 	%r95, %r87, 15360;
	.loc	1 77 56                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:56
	mul.lo.s32 	%r96, %r93, 15360;
	.loc	1 71 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:71:25
	or.b32  	%r97, %r95, %r94;
	.loc	1 72 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:25
	cvt.s64.s32 	%rd17, %r97;
	add.s64 	%rd10, %rd15, %rd17;
	.loc	1 72 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:20
	shl.b32 	%r8, %r2, 1;
	and.b32  	%r98, %r8, 48;
	xor.b32  	%r99, %r98, %r94;
	shl.b32 	%r100, %r79, 6;
	or.b32  	%r101, %r99, %r100;
	mov.u32 	%r102, global_smem;
	add.s32 	%r53, %r102, %r101;
	mov.b32 	%r54, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r53 + 0 ], [ %rd10 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:50
	or.b32  	%r103, %r96, %r94;
	.loc	1 77 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:25
	cvt.s64.s32 	%rd18, %r103;
	add.s64 	%rd11, %rd16, %rd18;
	.loc	1 77 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:20
	add.s32 	%r55, %r53, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r55 + 0 ], [ %rd11 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:25
	cvt.s64.s32 	%rd19, %r95;
	cvt.u64.u32 	%rd20, %r94;
	or.b64  	%rd21, %rd19, %rd20;
	add.s64 	%rd22, %rd15, %rd21;
	add.s64 	%rd12, %rd22, 64;
	.loc	1 72 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:20
	bar.sync 	0;
	add.s32 	%r57, %r53, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r57 + 0 ], [ %rd12 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:25
	cvt.s64.s32 	%rd23, %r96;
	or.b64  	%rd24, %rd23, %rd20;
	add.s64 	%rd25, %rd16, %rd24;
	add.s64 	%rd13, %rd25, 64;
	.loc	1 77 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:20
	add.s32 	%r59, %r53, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r59 + 0 ], [ %rd13 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r104, %r2, 3;
	and.b32  	%r105, %r104, 16;
	and.b32  	%r106, %r104, 32;
	and.b32  	%r107, %r104, 48;
	and.b32  	%r108, %r2, 7;
	.loc	1 64 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:64:26
	and.b32  	%r109, %r2, 15;
	xor.b32  	%r110, %r107, %r3;
	shr.u32 	%r111, %r5, 3;
	or.b32  	%r112, %r111, %r109;
	shl.b32 	%r113, %r112, 6;
	or.b32  	%r11, %r113, %r110;
	or.b32  	%r114, %r105, 32;
	or.b32  	%r115, %r106, %r3;
	xor.b32  	%r116, %r115, %r114;
	or.b32  	%r12, %r116, %r113;
	or.b32  	%r117, %r113, 2048;
	or.b32  	%r13, %r117, %r110;
	or.b32  	%r14, %r116, %r117;
	xor.b32  	%r118, %r107, %r98;
	or.b32  	%r119, %r108, %r77;
	or.b32  	%r120, %r119, %r78;
	shl.b32 	%r121, %r120, 6;
	or.b32  	%r15, %r121, %r118;
	or.b32  	%r16, %r15, 2048;
	add.s64 	%rd37, %rd25, 128;
	add.s64 	%rd36, %rd22, 128;
	mov.b32 	%r358, 0;
	mov.b32 	%r357, 1;
	mov.b32 	%r356, -1;
	mov.b64 	%rd38, 0;
	mov.u32 	%r359, %r358;
	mov.u32 	%r360, %r358;
	mov.u32 	%r361, %r358;
	mov.u32 	%r362, %r358;
	mov.u32 	%r363, %r358;
	mov.u32 	%r364, %r358;
	mov.u32 	%r365, %r358;
	mov.u32 	%r366, %r358;
	mov.u32 	%r367, %r358;
	mov.u32 	%r368, %r358;
	mov.u32 	%r369, %r358;
	mov.u32 	%r370, %r358;
	mov.u32 	%r371, %r358;
	mov.u32 	%r372, %r358;
	mov.u32 	%r373, %r358;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd38, 238;
	add.s32 	%r268, %r356, 1;
	setp.lt.s32 	%p2, %r268, 2;
	selp.b32 	%r356, %r268, 0, %p2;
	.loc	1 72 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r269, %r356, 12;
	add.s32 	%r271, %r102, %r269;
	add.s32 	%r126, %r271, %r11;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r160, %r161, %r162, %r163}, [%r126];
	// end inline asm
	add.s32 	%r131, %r271, %r12;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r216, %r217, %r218, %r219}, [%r131];
	// end inline asm
	add.s32 	%r136, %r271, %r13;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r188, %r189, %r190, %r191}, [%r136];
	// end inline asm
	add.s32 	%r141, %r271, %r14;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r244, %r245, %r246, %r247}, [%r141];
	// end inline asm
	.loc	1 77 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:20
	add.s32 	%r272, %r271, 8192;
	add.s32 	%r146, %r272, %r15;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r164, %r165, %r220, %r221}, [%r146];
	// end inline asm
	add.s32 	%r151, %r272, %r16;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r178, %r179, %r234, %r235}, [%r151];
	// end inline asm
	.loc	1 78 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r358, %r359, %r360, %r361 }, { %r160, %r161, %r162, %r163 }, { %r164, %r165 }, { %r358, %r359, %r360, %r361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r362, %r363, %r364, %r365 }, { %r160, %r161, %r162, %r163 }, { %r178, %r179 }, { %r362, %r363, %r364, %r365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r366, %r367, %r368, %r369 }, { %r188, %r189, %r190, %r191 }, { %r164, %r165 }, { %r366, %r367, %r368, %r369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r370, %r371, %r372, %r373 }, { %r188, %r189, %r190, %r191 }, { %r178, %r179 }, { %r370, %r371, %r372, %r373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r358, %r359, %r360, %r361 }, { %r216, %r217, %r218, %r219 }, { %r220, %r221 }, { %r358, %r359, %r360, %r361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r362, %r363, %r364, %r365 }, { %r216, %r217, %r218, %r219 }, { %r234, %r235 }, { %r362, %r363, %r364, %r365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r366, %r367, %r368, %r369 }, { %r244, %r245, %r246, %r247 }, { %r220, %r221 }, { %r366, %r367, %r368, %r369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r370, %r371, %r372, %r373 }, { %r244, %r245, %r246, %r247 }, { %r234, %r235 }, { %r370, %r371, %r372, %r373 };
	// end inline asm
	.loc	1 64 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:64:26
	add.s32 	%r273, %r357, 1;
	setp.lt.s32 	%p3, %r273, 2;
	selp.b32 	%r357, %r273, 0, %p3;
	.loc	1 72 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:72:20
	shl.b32 	%r274, %r357, 12;
	bar.sync 	0;
	add.s32 	%r264, %r53, %r274;
	selp.b32 	%r265, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd36 + 0 ], 0x10, %r265;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:77:20
	add.s32 	%r266, %r55, %r274;
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd37 + 0 ], 0x10, %r265;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:64:26
	add.s64 	%rd38, %rd38, 1;
	add.s64 	%rd37, %rd37, 64;
	add.s64 	%rd36, %rd36, 64;
	setp.ne.s64 	%p4, %rd38, 240;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:40
	shl.b32 	%r315, %r2, 2;
	and.b32  	%r316, %r315, 60;
	.loc	1 52 27                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:52:27
	or.b32  	%r317, %r6, %r316;
	.loc	1 51 40                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:40
	bfe.u32 	%r318, %r2, 4, 4;
	.loc	1 51 27                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:51:27
	or.b32  	%r319, %r318, %r1;
	or.b32  	%r320, %r319, 48;
	or.b32  	%r321, %r319, 32;
	or.b32  	%r322, %r319, 16;
	.loc	1 64 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:85:20
	setp.lt.s32 	%p17, %r319, 4112;
	setp.lt.s32 	%p18, %r322, 4112;
	setp.lt.s32 	%p19, %r321, 4112;
	setp.lt.s32 	%p20, %r320, 4112;
	.loc	1 85 34                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:85:34
	setp.lt.s32 	%p21, %r317, 3072;
	.loc	1 85 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:85:26
	and.pred  	%p13, %p17, %p21;
	and.pred  	%p14, %p18, %p21;
	and.pred  	%p15, %p19, %p21;
	and.pred  	%p16, %p20, %p21;
	.loc	1 88 26                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:88:26
	mad.lo.s32 	%r323, %r319, 3072, %r317;
	add.s32 	%r324, %r323, 49152;
	add.s32 	%r325, %r323, 98304;
	.loc	1 88 21                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:88:21
	add.s32 	%r326, %r323, 147456;
	.loc	1 89 25                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:89:25
	mul.wide.s32 	%rd32, %r323, 4;
	add.s64 	%rd28, %rd9, %rd32;
	mul.wide.s32 	%rd33, %r324, 4;
	add.s64 	%rd29, %rd9, %rd33;
	mul.wide.s32 	%rd34, %r325, 4;
	add.s64 	%rd30, %rd9, %rd34;
	mul.wide.s32 	%rd35, %r326, 4;
	add.s64 	%rd31, %rd9, %rd35;
	.loc	1 89 67                         // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:89:67
	and.b32  	%r327, %r8, 6;
	and.b32  	%r328, %r7, 192;
	or.b32  	%r329, %r328, %r327;
	shl.b32 	%r330, %r3, 4;
	or.b32  	%r331, %r329, %r330;
	shl.b32 	%r332, %r5, 3;
	or.b32  	%r333, %r331, %r332;
	and.b32  	%r334, %r4, 24;
	or.b32  	%r335, %r334, %r333;
	and.b32  	%r336, %r315, 1020;
	shr.u32 	%r337, %r333, 2;
	and.b32  	%r338, %r337, 508;
	add.s32 	%r340, %r102, %r338;
	shl.b32 	%r341, %r335, 2;
	add.s32 	%r275, %r340, %r341;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r275 + 0 ], { %r358, %r359 };
	// end inline asm
	or.b32  	%r342, %r333, 512;
	shr.u32 	%r343, %r342, 2;
	and.b32  	%r344, %r343, 496;
	add.s32 	%r345, %r102, %r344;
	add.s32 	%r346, %r345, %r341;
	add.s32 	%r278, %r346, 2048;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r278 + 0 ], { %r360, %r361 };
	// end inline asm
	add.s32 	%r281, %r275, 128;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r281 + 0 ], { %r362, %r363 };
	// end inline asm
	add.s32 	%r284, %r346, 2176;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r284 + 0 ], { %r364, %r365 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r347, %r2, 240;
	add.s32 	%r348, %r102, %r347;
	shl.b32 	%r349, %r336, 2;
	add.s32 	%r350, %r348, %r349;
	ld.shared.v4.u32 	{%r299, %r300, %r301, %r302}, [%r350];
	or.b32  	%r351, %r336, 1024;
	shr.u32 	%r352, %r351, 2;
	and.b32  	%r353, %r352, 496;
	add.s32 	%r354, %r102, %r353;
	add.s32 	%r355, %r354, %r349;
	ld.shared.v4.u32 	{%r303, %r304, %r305, %r306}, [%r355+4096];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r275 + 0 ], { %r366, %r367 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r278 + 0 ], { %r368, %r369 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r281 + 0 ], { %r370, %r371 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r284 + 0 ], { %r372, %r373 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r307, %r308, %r309, %r310}, [%r350];
	ld.shared.v4.u32 	{%r311, %r312, %r313, %r314}, [%r355+4096];
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd28 + 0 ], { %r299, %r300, %r301, %r302 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd29 + 0 ], { %r303, %r304, %r305, %r306 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd30 + 0 ], { %r307, %r308, %r309, %r310 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd31 + 0 ], { %r311, %r312, %r313, %r314 };
	// end inline asm
	.loc	1 89 4                          // crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/rf/crflwufsg7ozup6imkt7nqagaf4rp3xdipzlv6y5fepzcyzbky46.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 102
.b8 108
.b8 119
.b8 117
.b8 102
.b8 115
.b8 103
.b8 55
.b8 111
.b8 122
.b8 117
.b8 112
.b8 54
.b8 105
.b8 109
.b8 107
.b8 116
.b8 55
.b8 110
.b8 113
.b8 97
.b8 103
.b8 97
.b8 102
.b8 52
.b8 114
.b8 112
.b8 51
.b8 120
.b8 100
.b8 105
.b8 112
.b8 122
.b8 108
.b8 118
.b8 54
.b8 121
.b8 53
.b8 102
.b8 101
.b8 112
.b8 122
.b8 99
.b8 121
.b8 122
.b8 98
.b8 107
.b8 121
.b8 52
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 114
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
