//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_add_embedding_native_layer_norm_0 // -- Begin function triton_red_fused_add_embedding_native_layer_norm_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 116, 47, 99, 118, 116, 105, 55, 110, 53, 107, 50, 114, 50, 122, 112, 118, 119, 101, 102, 107, 113, 120, 106, 108, 114, 111, 110, 53, 53, 107, 119, 98, 55, 115, 115, 106, 98, 109, 50, 52, 117, 99, 99, 101, 122, 98, 102, 121, 103, 107, 117, 100, 98, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 49, 32, 60, 32, 55, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 118, 116, 47, 99, 118, 116, 105, 55, 110, 53, 107, 50, 114, 50, 122, 112, 118, 119, 101, 102, 107, 113, 120, 106, 108, 114, 111, 110, 53, 53, 107, 119, 98, 55, 115, 115, 106, 98, 109, 50, 52, 117, 99, 99, 101, 122, 98, 102, 121, 103, 107, 117, 100, 98, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52, 57, 52, 48, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_embedding_native_layer_norm_0
.visible .entry triton_red_fused_add_embedding_native_layer_norm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_6,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_7,
	.param .u32 triton_red_fused_add_embedding_native_layer_norm_0_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_native_layer_norm_0_param_9
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<147>;
	.reg .b16 	%rs<83>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<472>;
	.reg .b64 	%rd<155>;
	.loc	1 18 0                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:18:0

// %bb.0:
	ld.param.u64 	%rd73, [triton_red_fused_add_embedding_native_layer_norm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:23:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 24 44                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:24:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd75, [triton_red_fused_add_embedding_native_layer_norm_0_param_2];
	bfe.u32 	%r3, %r1, 6, 3;
	.loc	1 23 33                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:23:33
	shl.b32 	%r13, %r11, 3;
	.loc	1 24 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:24:23
	or.b32  	%r6, %r3, %r13;
	or.b32  	%r14, %r13, 1;
	or.b32  	%r15, %r13, 2;
	or.b32  	%r16, %r13, 3;
	or.b32  	%r17, %r13, 5;
	or.b32  	%r18, %r13, 6;
	or.b32  	%r19, %r13, 7;
	or.b32  	%r20, %r13, 4;
	.loc	1 25 21                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:25:21
	setp.lt.s32 	%p27, %r6, 77;
	setp.lt.s32 	%p35, %r19, 77;
	setp.lt.s32 	%p34, %r18, 77;
	setp.lt.s32 	%p33, %r17, 77;
	setp.lt.s32 	%p32, %r20, 77;
	setp.lt.s32 	%p31, %r16, 77;
	setp.lt.s32 	%p30, %r15, 77;
	setp.lt.s32 	%p29, %r14, 77;
	setp.lt.s32 	%p28, %r13, 77;
	.loc	1 29 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:30
	mul.wide.s32 	%rd77, %r6, 8;
	add.s64 	%rd10, %rd73, %rd77;
	mul.wide.s32 	%rd78, %r13, 8;
	add.s64 	%rd26, %rd73, %rd78;
	add.s64 	%rd28, %rd26, 8;
	add.s64 	%rd30, %rd26, 16;
	add.s64 	%rd32, %rd26, 24;
	mul.wide.s32 	%rd79, %r20, 8;
	add.s64 	%rd34, %rd73, %rd79;
	mul.wide.s32 	%rd80, %r17, 8;
	add.s64 	%rd36, %rd73, %rd80;
	mul.wide.s32 	%rd81, %r18, 8;
	add.s64 	%rd38, %rd73, %rd81;
	mul.wide.s32 	%rd82, %r19, 8;
	add.s64 	%rd40, %rd73, %rd82;
	.loc	1 29 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:29:35
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p28 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p29 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p31 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p33 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p34 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p35 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:30:30
	add.s64 	%rd42, %rd75, %rd77;
	add.s64 	%rd58, %rd75, %rd78;
	add.s64 	%rd60, %rd58, 8;
	add.s64 	%rd62, %rd58, 16;
	add.s64 	%rd64, %rd58, 24;
	add.s64 	%rd66, %rd75, %rd79;
	add.s64 	%rd68, %rd75, %rd80;
	add.s64 	%rd70, %rd75, %rd81;
	add.s64 	%rd72, %rd75, %rd82;
	.loc	1 30 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:30:35
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd49, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd49 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd51, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd51 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd53, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd53 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd55, 0x0;
	@%p27 ld.global.L1::evict_last.b64 { %rd55 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd57, 0x0;
	@%p28 ld.global.L1::evict_last.b64 { %rd57 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd59, 0x0;
	@%p29 ld.global.L1::evict_last.b64 { %rd59 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd61 }, [ %rd62 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd63, 0x0;
	@%p31 ld.global.L1::evict_last.b64 { %rd63 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd65, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd65 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd67, 0x0;
	@%p33 ld.global.L1::evict_last.b64 { %rd67 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd69, 0x0;
	@%p34 ld.global.L1::evict_last.b64 { %rd69 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd71, 0x0;
	@%p35 ld.global.L1::evict_last.b64 { %rd71 }, [ %rd72 + 0 ];
	// end inline asm
	.loc	1 41 22                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:41:22
	add.s64 	%rd84, %rd35, 49408;
	add.s64 	%rd85, %rd33, 49408;
	add.s64 	%rd86, %rd39, 49408;
	add.s64 	%rd87, %rd37, 49408;
	add.s64 	%rd88, %rd27, 49408;
	add.s64 	%rd89, %rd25, 49408;
	add.s64 	%rd90, %rd31, 49408;
	add.s64 	%rd91, %rd29, 49408;
	.loc	1 42 22                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:42:22
	setp.lt.s64 	%p45, %rd35, 0;
	setp.lt.s64 	%p46, %rd33, 0;
	setp.lt.s64 	%p47, %rd39, 0;
	setp.lt.s64 	%p48, %rd37, 0;
	setp.lt.s64 	%p49, %rd27, 0;
	setp.lt.s64 	%p50, %rd25, 0;
	setp.lt.s64 	%p51, %rd31, 0;
	setp.lt.s64 	%p52, %rd29, 0;
	.loc	1 43 36                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:43:36
	selp.b64 	%rd93, %rd91, %rd29, %p52;
	selp.b64 	%rd94, %rd90, %rd31, %p51;
	selp.b64 	%rd95, %rd89, %rd25, %p50;
	selp.b64 	%rd96, %rd88, %rd27, %p49;
	selp.b64 	%rd97, %rd87, %rd37, %p48;
	selp.b64 	%rd98, %rd86, %rd39, %p47;
	selp.b64 	%rd99, %rd85, %rd33, %p46;
	selp.b64 	%rd100, %rd84, %rd35, %p45;
	setp.gt.u64 	%p75, %rd100, 49407;
	setp.gt.u64 	%p76, %rd99, 49407;
	setp.gt.u64 	%p77, %rd98, 49407;
	setp.gt.u64 	%p78, %rd97, 49407;
	setp.gt.u64 	%p79, %rd96, 49407;
	setp.gt.u64 	%p80, %rd95, 49407;
	setp.gt.u64 	%p81, %rd94, 49407;
	setp.gt.u64 	%p82, %rd93, 49407;
	and.pred  	%p83, %p82, %p30;
	selp.u16 	%rs1, 1, 0, %p83;
	shl.b16 	%rs2, %rs1, 2;
	and.pred  	%p84, %p81, %p31;
	selp.u16 	%rs3, -1, 0, %p84;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	and.pred  	%p85, %p80, %p28;
	selp.u16 	%rs6, 1, 0, %p85;
	and.pred  	%p86, %p79, %p29;
	selp.u16 	%rs7, -1, 0, %p86;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	and.pred  	%p87, %p78, %p34;
	selp.u16 	%rs13, 1, 0, %p87;
	shl.b16 	%rs14, %rs13, 2;
	and.pred  	%p88, %p77, %p35;
	selp.u16 	%rs15, -1, 0, %p88;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	and.pred  	%p89, %p76, %p32;
	selp.u16 	%rs18, 1, 0, %p89;
	and.pred  	%p90, %p75, %p33;
	selp.u16 	%rs19, -1, 0, %p90;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	shl.b16 	%rs24, %rs23, 4;
	or.b16  	%rs25, %rs12, %rs24;
	and.b16  	%rs26, %rs25, 255;
	setp.ne.s16 	%p91, %rs26, 0;
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	@%p91 bra 	$L__BB0_8;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:0:68
	ld.param.u64 	%rd8, [triton_red_fused_add_embedding_native_layer_norm_0_param_6];
	ld.param.u64 	%rd7, [triton_red_fused_add_embedding_native_layer_norm_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused_add_embedding_native_layer_norm_0_param_4];
	ld.param.u64 	%rd74, [triton_red_fused_add_embedding_native_layer_norm_0_param_1];
	shr.u32 	%r2, %r1, 5;
	ld.param.u64 	%rd76, [triton_red_fused_add_embedding_native_layer_norm_0_param_3];
	and.b32  	%r4, %r1, 31;
	shl.b32 	%r12, %r1, 3;
	and.b32  	%r5, %r12, 504;
	setp.gt.s32 	%p36, %r14, 76;
	setp.gt.s32 	%p37, %r20, 76;
	setp.gt.s32 	%p38, %r16, 76;
	setp.gt.s32 	%p39, %r19, 76;
	setp.gt.s32 	%p40, %r18, 76;
	setp.gt.s32 	%p41, %r17, 76;
	setp.gt.s32 	%p42, %r15, 76;
	setp.gt.s32 	%p43, %r13, 76;
	add.s64 	%rd83, %rd23, 49408;
	setp.lt.s64 	%p44, %rd23, 0;
	selp.b64 	%rd92, %rd83, %rd23, %p44;
	add.s64 	%rd101, %rd55, 77;
	setp.lt.s64 	%p53, %rd55, 0;
	selp.b64 	%rd102, %rd101, %rd55, %p53;
	add.s64 	%rd103, %rd59, 77;
	add.s64 	%rd104, %rd65, 77;
	add.s64 	%rd105, %rd63, 77;
	add.s64 	%rd106, %rd71, 77;
	add.s64 	%rd107, %rd69, 77;
	add.s64 	%rd108, %rd67, 77;
	add.s64 	%rd109, %rd61, 77;
	add.s64 	%rd110, %rd57, 77;
	setp.lt.s64 	%p54, %rd59, 0;
	setp.lt.s64 	%p55, %rd65, 0;
	setp.lt.s64 	%p56, %rd63, 0;
	setp.lt.s64 	%p57, %rd71, 0;
	setp.lt.s64 	%p58, %rd69, 0;
	setp.lt.s64 	%p59, %rd67, 0;
	setp.lt.s64 	%p60, %rd61, 0;
	setp.lt.s64 	%p61, %rd57, 0;
	selp.b64 	%rd111, %rd110, %rd57, %p61;
	selp.b64 	%rd112, %rd109, %rd61, %p60;
	selp.b64 	%rd113, %rd108, %rd67, %p59;
	selp.b64 	%rd114, %rd107, %rd69, %p58;
	selp.b64 	%rd115, %rd106, %rd71, %p57;
	selp.b64 	%rd116, %rd105, %rd63, %p56;
	selp.b64 	%rd117, %rd104, %rd65, %p55;
	selp.b64 	%rd118, %rd103, %rd59, %p54;
	setp.lt.u64 	%p62, %rd118, 77;
	setp.lt.u64 	%p63, %rd117, 77;
	setp.lt.u64 	%p64, %rd116, 77;
	setp.lt.u64 	%p65, %rd115, 77;
	setp.lt.u64 	%p66, %rd114, 77;
	setp.lt.u64 	%p67, %rd113, 77;
	setp.lt.u64 	%p68, %rd112, 77;
	setp.lt.u64 	%p69, %rd111, 77;
	or.pred  	%p70, %p69, %p43;
	or.pred  	%p71, %p68, %p42;
	or.pred  	%p72, %p67, %p41;
	or.pred  	%p73, %p66, %p40;
	or.pred  	%p74, %p65, %p39;
	or.pred  	%p92, %p64, %p38;
	and.pred  	%p93, %p71, %p92;
	or.pred  	%p94, %p63, %p37;
	and.pred  	%p95, %p93, %p94;
	and.pred  	%p96, %p95, %p72;
	and.pred  	%p97, %p96, %p73;
	and.pred  	%p98, %p97, %p74;
	mad.lo.s64 	%rd1, %rd92, 1536, %rd74;
	or.pred  	%p99, %p62, %p36;
	and.pred  	%p100, %p99, %p98;
	and.pred  	%p1, %p100, %p70;
	mad.lo.s64 	%rd2, %rd102, 1536, %rd76;
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	cvt.u64.u32 	%rd3, %r5;
	mov.f32 	%f424, 0f00000000;
	mov.b64 	%rd154, 0;
	mov.pred 	%p146, -1;
	mov.f32 	%f425, %f424;
	mov.f32 	%f426, %f424;
	mov.f32 	%f427, %f424;
	mov.f32 	%f428, %f424;
	mov.f32 	%f429, %f424;
	mov.f32 	%f430, %f424;
	mov.f32 	%f431, %f424;
	mov.f32 	%f432, %f424;
	mov.f32 	%f433, %f424;
	mov.f32 	%f434, %f424;
	mov.f32 	%f435, %f424;
	mov.f32 	%f436, %f424;
	mov.f32 	%f437, %f424;
	mov.f32 	%f438, %f424;
	mov.f32 	%f439, %f424;
	mov.f32 	%f440, %f424;
	mov.f32 	%f441, %f424;
	mov.f32 	%f442, %f424;
	mov.f32 	%f443, %f424;
	mov.f32 	%f444, %f424;
	mov.f32 	%f445, %f424;
	mov.f32 	%f446, %f424;
	mov.f32 	%f447, %f424;
	bra.uni 	$L__BB0_2;
$L__BB0_6:                              // %._crit_edge
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 58 64                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:58:64
	selp.f32 	%f440, %f456, %f440, %p102;
	selp.f32 	%f441, %f457, %f441, %p102;
	selp.f32 	%f442, %f458, %f442, %p102;
	selp.f32 	%f443, %f459, %f443, %p102;
	selp.f32 	%f444, %f460, %f444, %p102;
	selp.f32 	%f445, %f461, %f445, %p102;
	selp.f32 	%f446, %f462, %f446, %p102;
	selp.f32 	%f447, %f463, %f447, %p102;
	.loc	1 59 60                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:59:60
	selp.f32 	%f432, %f448, %f432, %p102;
	selp.f32 	%f433, %f449, %f433, %p102;
	selp.f32 	%f434, %f450, %f434, %p102;
	selp.f32 	%f435, %f451, %f435, %p102;
	selp.f32 	%f436, %f452, %f436, %p102;
	selp.f32 	%f437, %f453, %f437, %p102;
	selp.f32 	%f438, %f454, %f438, %p102;
	selp.f32 	%f439, %f455, %f439, %p102;
	.loc	1 60 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:60:68
	selp.f32 	%f424, %f464, %f424, %p102;
	selp.f32 	%f425, %f465, %f425, %p102;
	selp.f32 	%f426, %f466, %f426, %p102;
	selp.f32 	%f427, %f467, %f427, %p102;
	selp.f32 	%f428, %f468, %f428, %p102;
	selp.f32 	%f429, %f469, %f429, %p102;
	selp.f32 	%f430, %f470, %f430, %p102;
	selp.f32 	%f431, %f471, %f431, %p102;
	mov.b64 	%rd154, 512;
	mov.pred 	%p146, 0;
	.loc	1 34 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:34:40
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_7;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:0:40
	mov.pred 	%p2, %p146;
	.loc	1 35 31                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:35:31
	or.b64  	%rd5, %rd154, %rd3;
	.loc	1 36 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:36:29
	setp.lt.u64 	%p104, %rd5, 768;
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	bar.sync 	0;
	.loc	1 45 34                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:34
	shl.b64 	%rd127, %rd5, 1;
	add.s64 	%rd126, %rd1, %rd127;
	.loc	1 45 62                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:62
	and.pred  	%p102, %p27, %p104;
	mov.b32 	%r28, 0;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	// begin inline asm
	mov.u32 %r21, %r28;
	mov.u32 %r22, %r28;
	mov.u32 %r23, %r28;
	mov.u32 %r24, %r28;
	@%p102 ld.global.L1::evict_last.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd126 + 0 ];
	// end inline asm
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	@%p1 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	mov.b32 	{%rs27, %rs28}, %r24;
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	cvt.f32.bf16 	%f108, %rs28;
	cvt.f32.bf16 	%f109, %rs27;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	mov.b32 	{%rs29, %rs30}, %r23;
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	cvt.f32.bf16 	%f110, %rs30;
	cvt.f32.bf16 	%f111, %rs29;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	mov.b32 	{%rs31, %rs32}, %r22;
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	cvt.f32.bf16 	%f112, %rs32;
	cvt.f32.bf16 	%f113, %rs31;
	.loc	1 45 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:52
	mov.b32 	{%rs33, %rs34}, %r21;
	.loc	1 45 113                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:45:113
	cvt.f32.bf16 	%f114, %rs34;
	cvt.f32.bf16 	%f115, %rs33;
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	bar.sync 	0;
	.loc	1 51 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:35
	add.s64 	%rd134, %rd2, %rd127;
	.loc	1 51 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:54
	// begin inline asm
	mov.u32 %r29, %r28;
	mov.u32 %r30, %r28;
	mov.u32 %r31, %r28;
	mov.u32 %r32, %r28;
	@%p102 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd134 + 0 ];
	// end inline asm
	mov.b32 	{%rs35, %rs36}, %r29;
	mov.b32 	{%rs37, %rs38}, %r30;
	mov.b32 	{%rs39, %rs40}, %r31;
	mov.b32 	{%rs41, %rs42}, %r32;
	.loc	1 51 115                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:51:115
	cvt.f32.bf16 	%f116, %rs35;
	cvt.f32.bf16 	%f117, %rs36;
	cvt.f32.bf16 	%f118, %rs37;
	cvt.f32.bf16 	%f119, %rs38;
	cvt.f32.bf16 	%f120, %rs39;
	cvt.f32.bf16 	%f121, %rs40;
	cvt.f32.bf16 	%f122, %rs41;
	cvt.f32.bf16 	%f123, %rs42;
	.loc	1 52 23                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:52:23
	add.f32 	%f456, %f115, %f116;
	add.f32 	%f457, %f114, %f117;
	add.f32 	%f458, %f113, %f118;
	add.f32 	%f459, %f112, %f119;
	add.f32 	%f460, %f111, %f120;
	add.f32 	%f461, %f110, %f121;
	add.f32 	%f462, %f109, %f122;
	add.f32 	%f463, %f108, %f123;
	mov.f32 	%f464, 0f3F800000;
	mov.f32 	%f448, 0f00000000;
	mov.f32 	%f449, %f448;
	mov.f32 	%f450, %f448;
	mov.f32 	%f451, %f448;
	mov.f32 	%f452, %f448;
	mov.f32 	%f453, %f448;
	mov.f32 	%f454, %f448;
	mov.f32 	%f455, %f448;
	mov.f32 	%f465, %f464;
	mov.f32 	%f466, %f464;
	mov.f32 	%f467, %f464;
	mov.f32 	%f468, %f464;
	mov.f32 	%f469, %f464;
	mov.f32 	%f470, %f464;
	mov.f32 	%f471, %f464;
$L__tmp1:
	.loc	2 203 7                         // triton_helpers.py:203:7
	@%p2 bra 	$L__BB0_6;
// %bb.5:                               //   in Loop: Header=BB0_2 Depth=1
	.loc	2 208 24                        // triton_helpers.py:208:24
	sub.f32 	%f124, %f456, %f440;
	sub.f32 	%f125, %f457, %f441;
	sub.f32 	%f126, %f458, %f442;
	sub.f32 	%f127, %f459, %f443;
	sub.f32 	%f128, %f460, %f444;
	sub.f32 	%f129, %f461, %f445;
	sub.f32 	%f130, %f462, %f446;
	sub.f32 	%f131, %f463, %f447;
	.loc	2 209 30                        // triton_helpers.py:209:30
	add.f32 	%f464, %f424, 0f3F800000;
	add.f32 	%f465, %f425, 0f3F800000;
	add.f32 	%f466, %f426, 0f3F800000;
	add.f32 	%f467, %f427, 0f3F800000;
	add.f32 	%f468, %f428, 0f3F800000;
	add.f32 	%f469, %f429, 0f3F800000;
	add.f32 	%f470, %f430, 0f3F800000;
	add.f32 	%f471, %f431, 0f3F800000;
	.loc	2 210 34                        // triton_helpers.py:210:34
	div.full.f32 	%f132, %f124, %f464;
	div.full.f32 	%f133, %f125, %f465;
	div.full.f32 	%f134, %f126, %f466;
	div.full.f32 	%f135, %f127, %f467;
	div.full.f32 	%f136, %f128, %f468;
	div.full.f32 	%f137, %f129, %f469;
	div.full.f32 	%f138, %f130, %f470;
	div.full.f32 	%f139, %f131, %f471;
	.loc	2 210 26                        // triton_helpers.py:210:26
	add.f32 	%f41, %f440, %f132;
	add.f32 	%f42, %f441, %f133;
	add.f32 	%f43, %f442, %f134;
	add.f32 	%f44, %f443, %f135;
	add.f32 	%f45, %f444, %f136;
	add.f32 	%f46, %f445, %f137;
	add.f32 	%f47, %f446, %f138;
	add.f32 	%f48, %f447, %f139;
	.loc	2 211 39                        // triton_helpers.py:211:39
	sub.f32 	%f140, %f456, %f41;
	sub.f32 	%f141, %f457, %f42;
	sub.f32 	%f142, %f458, %f43;
	sub.f32 	%f143, %f459, %f44;
	sub.f32 	%f144, %f460, %f45;
	sub.f32 	%f145, %f461, %f46;
	sub.f32 	%f146, %f462, %f47;
	sub.f32 	%f147, %f463, %f48;
	.loc	2 211 22                        // triton_helpers.py:211:22
	fma.rn.f32 	%f448, %f124, %f140, %f432;
	fma.rn.f32 	%f449, %f125, %f141, %f433;
	fma.rn.f32 	%f450, %f126, %f142, %f434;
	fma.rn.f32 	%f451, %f127, %f143, %f435;
	fma.rn.f32 	%f452, %f128, %f144, %f436;
	fma.rn.f32 	%f453, %f129, %f145, %f437;
	fma.rn.f32 	%f454, %f130, %f146, %f438;
	fma.rn.f32 	%f455, %f131, %f147, %f439;
	mov.f32 	%f456, %f41;
	mov.f32 	%f457, %f42;
	mov.f32 	%f458, %f43;
	mov.f32 	%f459, %f44;
	mov.f32 	%f460, %f45;
	mov.f32 	%f461, %f46;
	mov.f32 	%f462, %f47;
	mov.f32 	%f463, %f48;
	bra.uni 	$L__BB0_6;
$L__tmp2:
$L__BB0_7:                              // %__nv_rsqrtf.exit
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f148, %f441, %f440;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f149, %f424, %f425;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p130, %f149, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f150, %f425, %f149;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f151, 0f00000000, %f150, %p130;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f152, %f148, %f151, %f440;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f153, %f432, %f433;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f154, %f148, %f148;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f155, %f154, %f424;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f156, %f155, %f151, %f153;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f157, %f442, %f152;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f158, %f426, %f149;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p131, %f158, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f159, %f426, %f158;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f160, 0f00000000, %f159, %p131;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f161, %f160, %f157, %f152;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f162, %f434, %f156;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f163, %f157, %f157;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f164, %f149, %f163;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f165, %f160, %f164, %f162;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f166, %f443, %f161;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f167, %f427, %f158;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p132, %f167, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f168, %f427, %f167;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f169, 0f00000000, %f168, %p132;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f170, %f169, %f166, %f161;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f171, %f435, %f165;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f172, %f166, %f166;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f173, %f158, %f172;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f174, %f169, %f173, %f171;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f175, %f444, %f170;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f176, %f428, %f167;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p133, %f176, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f177, %f428, %f176;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f178, 0f00000000, %f177, %p133;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f179, %f178, %f175, %f170;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f180, %f436, %f174;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f181, %f175, %f175;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f182, %f167, %f181;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f183, %f178, %f182, %f180;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f184, %f445, %f179;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f185, %f429, %f176;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p134, %f185, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f186, %f429, %f185;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f187, 0f00000000, %f186, %p134;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f188, %f187, %f184, %f179;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f189, %f437, %f183;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f190, %f184, %f184;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f191, %f176, %f190;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f192, %f187, %f191, %f189;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f193, %f446, %f188;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f194, %f430, %f185;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p135, %f194, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f195, %f430, %f194;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f196, 0f00000000, %f195, %p135;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f197, %f196, %f193, %f188;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f198, %f438, %f192;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f199, %f193, %f193;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f200, %f185, %f199;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f201, %f196, %f200, %f198;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f202, %f447, %f197;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f203, %f431, %f194;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p136, %f203, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f204, %f431, %f203;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f205, 0f00000000, %f204, %p136;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f206, %f205, %f202, %f197;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f207, %f439, %f201;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f208, %f202, %f202;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f209, %f194, %f208;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f210, %f205, %f209, %f207;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r103, %f206;
	shfl.sync.bfly.b32	%r104, %r103, 16, 31, -1;
	mov.b32 	%f211, %r104;
	mov.b32 	%r105, %f210;
	shfl.sync.bfly.b32	%r106, %r105, 16, 31, -1;
	mov.b32 	%f212, %r106;
	mov.b32 	%r107, %f203;
	shfl.sync.bfly.b32	%r108, %r107, 16, 31, -1;
	mov.b32 	%f213, %r108;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f214, %f211, %f206;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f215, %f203, %f213;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p137, %f215, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f216, %f213, %f215;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f217, 0f00000000, %f216, %p137;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f218, %f217, %f214, %f206;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f219, %f210, %f212;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f220, %f214, %f214;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f221, %f203, %f220;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f222, %f217, %f221, %f219;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r109, %f218;
	shfl.sync.bfly.b32	%r110, %r109, 8, 31, -1;
	mov.b32 	%f223, %r110;
	mov.b32 	%r111, %f222;
	shfl.sync.bfly.b32	%r112, %r111, 8, 31, -1;
	mov.b32 	%f224, %r112;
	mov.b32 	%r113, %f215;
	shfl.sync.bfly.b32	%r114, %r113, 8, 31, -1;
	mov.b32 	%f225, %r114;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f226, %f223, %f218;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f227, %f215, %f225;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p138, %f227, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f228, %f225, %f227;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f229, 0f00000000, %f228, %p138;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f230, %f229, %f226, %f218;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f231, %f222, %f224;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f232, %f226, %f226;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f233, %f215, %f232;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f234, %f229, %f233, %f231;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r115, %f230;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f235, %r116;
	mov.b32 	%r117, %f234;
	shfl.sync.bfly.b32	%r118, %r117, 4, 31, -1;
	mov.b32 	%f236, %r118;
	mov.b32 	%r119, %f227;
	shfl.sync.bfly.b32	%r120, %r119, 4, 31, -1;
	mov.b32 	%f237, %r120;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f238, %f235, %f230;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f239, %f227, %f237;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p139, %f239, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f240, %f237, %f239;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f241, 0f00000000, %f240, %p139;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f242, %f241, %f238, %f230;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f243, %f234, %f236;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f244, %f238, %f238;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f245, %f227, %f244;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f246, %f241, %f245, %f243;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r121, %f242;
	shfl.sync.bfly.b32	%r122, %r121, 2, 31, -1;
	mov.b32 	%f247, %r122;
	mov.b32 	%r123, %f246;
	shfl.sync.bfly.b32	%r124, %r123, 2, 31, -1;
	mov.b32 	%f248, %r124;
	mov.b32 	%r125, %f239;
	shfl.sync.bfly.b32	%r126, %r125, 2, 31, -1;
	mov.b32 	%f249, %r126;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f250, %f247, %f242;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f251, %f239, %f249;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p140, %f251, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f252, %f249, %f251;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f253, 0f00000000, %f252, %p140;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f254, %f253, %f250, %f242;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f255, %f246, %f248;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f256, %f250, %f250;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f257, %f239, %f256;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f258, %f253, %f257, %f255;
	.loc	2 229 46                        // triton_helpers.py:229:46
	mov.b32 	%r127, %f254;
	shfl.sync.bfly.b32	%r128, %r127, 1, 31, -1;
	mov.b32 	%f259, %r128;
	mov.b32 	%r129, %f258;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	mov.b32 	%f260, %r130;
	mov.b32 	%r131, %f251;
	shfl.sync.bfly.b32	%r132, %r131, 1, 31, -1;
	mov.b32 	%f261, %r132;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f262, %f259, %f254;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f263, %f251, %f261;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p141, %f263, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f264, %f261, %f263;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f265, 0f00000000, %f264, %p141;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f266, %f265, %f262, %f254;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f267, %f258, %f260;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f268, %f262, %f262;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f269, %f251, %f268;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f270, %f265, %f269, %f267;
	.loc	2 229 46                        // triton_helpers.py:229:46
	and.b32  	%r133, %r2, 1;
	setp.eq.s32 	%p107, %r4, 0;
	shl.b32 	%r134, %r133, 2;
	shl.b32 	%r135, %r3, 3;
	or.b32  	%r136, %r135, %r134;
	mov.u32 	%r137, global_smem;
	add.s32 	%r37, %r137, %r136;
	mov.b32 	%r38, %f266;
	// begin inline asm
	@%p107 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r138, %r137, 64;
	add.s32 	%r39, %r138, %r136;
	mov.b32 	%r40, %f270;
	// begin inline asm
	@%p107 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r139, %r137, 128;
	add.s32 	%r41, %r139, %r136;
	mov.b32 	%r42, %f263;
	// begin inline asm
	@%p107 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p110, %r1, 16;
	shl.b32 	%r140, %r1, 2;
	add.s32 	%r44, %r137, %r140;
	// begin inline asm
	@%p110 ld.shared.b32 %r43, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f271, %r43;
	add.s32 	%r46, %r138, %r140;
	// begin inline asm
	@%p110 ld.shared.b32 %r45, [ %r46 + 0 ];
	// end inline asm
	mov.b32 	%f272, %r45;
	add.s32 	%r48, %r139, %r140;
	// begin inline asm
	@%p110 ld.shared.b32 %r47, [ %r48 + 0 ];
	// end inline asm
	mov.b32 	%f273, %r47;
	shfl.sync.bfly.b32	%r141, %r43, 1, 31, -1;
	mov.b32 	%f274, %r141;
	shfl.sync.bfly.b32	%r142, %r45, 1, 31, -1;
	mov.b32 	%f275, %r142;
	shfl.sync.bfly.b32	%r143, %r47, 1, 31, -1;
	mov.b32 	%f276, %r143;
	.loc	2 217 21                        // triton_helpers.py:217:21
	sub.f32 	%f277, %f274, %f271;
	.loc	2 218 28                        // triton_helpers.py:218:28
	add.f32 	%f278, %f273, %f276;
	.loc	2 219 39                        // triton_helpers.py:219:39
	setp.eq.f32 	%p142, %f278, 0f00000000;
	.loc	2 219 60                        // triton_helpers.py:219:60
	div.full.f32 	%f279, %f276, %f278;
	.loc	2 219 49                        // triton_helpers.py:219:49
	selp.f32 	%f280, 0f00000000, %f279, %p142;
	.loc	2 221 17                        // triton_helpers.py:221:17
	fma.rn.f32 	%f281, %f277, %f280, %f271;
	.loc	2 222 15                        // triton_helpers.py:222:15
	add.f32 	%f282, %f272, %f275;
	.loc	2 222 30                        // triton_helpers.py:222:30
	mul.f32 	%f283, %f277, %f277;
	.loc	2 222 38                        // triton_helpers.py:222:38
	mul.f32 	%f284, %f283, %f273;
	.loc	2 222 22                        // triton_helpers.py:222:22
	fma.rn.f32 	%f285, %f284, %f280, %f282;
	.loc	2 229 46                        // triton_helpers.py:229:46
	and.b32  	%r144, %r1, 1;
	setp.eq.b32 	%p143, %r144, 1;
	not.pred 	%p144, %p143;
	and.pred  	%p113, %p110, %p144;
	mov.b32 	%r50, %f281;
	// begin inline asm
	@%p113 st.shared.b32 [ %r44 + 0 ], %r50;
	// end inline asm
	mov.b32 	%r52, %f285;
	// begin inline asm
	@%p113 st.shared.b32 [ %r46 + 0 ], %r52;
	// end inline asm
	mov.b32 	%r54, %f278;
	// begin inline asm
	@%p113 st.shared.b32 [ %r48 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r145, %r137, %r135;
	ld.shared.f32 	%f286, [%r145];
	add.s32 	%r146, %r138, %r135;
	ld.shared.f32 	%f287, [%r146];
	mov.f32 	%f288, 0f44400000;
$L__tmp3:
	.loc	1 89 25                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:89:25
	div.full.f32 	%f289, %f287, %f288;
	.loc	1 91 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:91:24
	add.f32 	%f290, %f289, 0f3727C5AC;
	.loc	1 92 32                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:92:32
	rsqrt.approx.ftz.f32 	%f291, %f290;
	shl.b32 	%r147, %r5, 2;
	add.s32 	%r148, %r137, %r147;
	.loc	1 26 37                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:26:37
	and.b32  	%r149, %r1, 511;
	.loc	1 65 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:65:40
	cvt.u64.u32 	%rd147, %r149;
	shl.b32 	%r150, %r149, 2;
	add.s32 	%r71, %r137, %r150;
	.loc	1 99 40                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:40
	mul.lo.s32 	%r151, %r6, 768;
	.loc	1 71 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:35
	mul.wide.u32 	%rd148, %r149, 2;
	add.s64 	%rd137, %rd6, %rd148;
	mov.b16 	%rs44, 0;
	mov.pred 	%p116, -1;
	.loc	1 71 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:42
	// begin inline asm
	mov.u16 %rs43, %rs44;
	@%p116 ld.global.L1::evict_last.b16 { %rs43 }, [ %rd137 + 0 ];
	// end inline asm
	.loc	1 71 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:95
	cvt.f32.bf16 	%f292, %rs43;
	.loc	1 72 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:35
	add.s64 	%rd138, %rd7, %rd148;
	.loc	1 72 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:42
	// begin inline asm
	mov.u16 %rs45, %rs44;
	@%p116 ld.global.L1::evict_last.b16 { %rs45 }, [ %rd138 + 0 ];
	// end inline asm
	.loc	1 72 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:95
	cvt.f32.bf16 	%f293, %rs45;
	.loc	1 77 70                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:77:70
	bar.sync 	0;
	.loc	1 78 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:35
	shl.b64 	%rd149, %rd3, 1;
	add.s64 	%rd139, %rd1, %rd149;
	mov.b32 	%r59, 0;
	.loc	1 78 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:54
	// begin inline asm
	mov.u32 %r55, %r59;
	mov.u32 %r56, %r59;
	mov.u32 %r57, %r59;
	mov.u32 %r58, %r59;
	@%p27 ld.global.L1::evict_first.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd139 + 0 ];
	// end inline asm
	.loc	1 83 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:83:67
	bar.sync 	0;
	.loc	1 84 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:35
	add.s64 	%rd140, %rd2, %rd149;
	.loc	1 84 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:54
	// begin inline asm
	mov.u32 %r63, %r59;
	mov.u32 %r64, %r59;
	mov.u32 %r65, %r59;
	mov.u32 %r66, %r59;
	@%p27 ld.global.L1::evict_first.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd140 + 0 ];
	// end inline asm
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	bar.sync 	0;
	mov.b32 	%r72, %f292;
	// begin inline asm
	@%p116 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	.loc	1 99 36                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:36
	add.s32 	%r152, %r151, %r5;
	.loc	1 99 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:29
	mul.wide.s32 	%rd150, %r152, 2;
	add.s64 	%rd141, %rd8, %rd150;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs51, %rs52}, %r58;
	cvt.f32.bf16 	%f294, %rs51;
	cvt.f32.bf16 	%f295, %rs52;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs53, %rs54}, %r66;
	cvt.f32.bf16 	%f296, %rs53;
	cvt.f32.bf16 	%f297, %rs54;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f298, %f295, %f297;
	add.f32 	%f299, %f294, %f296;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f300, %f299, %f286;
	sub.f32 	%f301, %f298, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f302, %f291, %f301;
	mul.f32 	%f303, %f291, %f300;
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	ld.shared.v4.f32 	{%f304, %f305, %f306, %f307}, [%r148+16];
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs55, %rs56}, %r57;
	cvt.f32.bf16 	%f308, %rs55;
	cvt.f32.bf16 	%f309, %rs56;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs57, %rs58}, %r65;
	cvt.f32.bf16 	%f310, %rs57;
	cvt.f32.bf16 	%f311, %rs58;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f312, %f309, %f311;
	add.f32 	%f313, %f308, %f310;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f314, %f313, %f286;
	sub.f32 	%f315, %f312, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f316, %f291, %f315;
	mul.f32 	%f317, %f291, %f314;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs59, %rs60}, %r56;
	cvt.f32.bf16 	%f318, %rs59;
	cvt.f32.bf16 	%f319, %rs60;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs61, %rs62}, %r64;
	cvt.f32.bf16 	%f320, %rs61;
	cvt.f32.bf16 	%f321, %rs62;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f322, %f319, %f321;
	add.f32 	%f323, %f318, %f320;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f324, %f323, %f286;
	sub.f32 	%f325, %f322, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f326, %f291, %f325;
	mul.f32 	%f327, %f291, %f324;
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	ld.shared.v4.f32 	{%f328, %f329, %f330, %f331}, [%r148];
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs63, %rs64}, %r55;
	cvt.f32.bf16 	%f332, %rs63;
	cvt.f32.bf16 	%f333, %rs64;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs65, %rs66}, %r63;
	cvt.f32.bf16 	%f334, %rs65;
	cvt.f32.bf16 	%f335, %rs66;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f336, %f333, %f335;
	add.f32 	%f337, %f332, %f334;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f338, %f337, %f286;
	sub.f32 	%f339, %f336, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f340, %f291, %f339;
	mul.f32 	%f341, %f291, %f338;
	.loc	1 97 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:97:24
	bar.sync 	0;
	mov.b32 	%r74, %f293;
	// begin inline asm
	@%p116 st.shared.b32 [ %r71 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f342, %f343, %f344, %f345}, [%r148];
	ld.shared.v4.f32 	{%f346, %f347, %f348, %f349}, [%r148+16];
	fma.rn.f32 	%f350, %f328, %f341, %f342;
	fma.rn.f32 	%f351, %f329, %f340, %f343;
	fma.rn.f32 	%f352, %f330, %f327, %f344;
	fma.rn.f32 	%f353, %f331, %f326, %f345;
	fma.rn.f32 	%f354, %f304, %f317, %f346;
	fma.rn.f32 	%f355, %f305, %f316, %f347;
	fma.rn.f32 	%f356, %f306, %f303, %f348;
	fma.rn.f32 	%f357, %f307, %f302, %f349;
	.loc	1 99 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:52
	cvt.rn.bf16x2.f32 	%r75, %f351, %f350;
	cvt.rn.bf16x2.f32 	%r76, %f353, %f352;
	cvt.rn.bf16x2.f32 	%r77, %f355, %f354;
	cvt.rn.bf16x2.f32 	%r78, %f357, %f356;
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd141 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	.loc	1 66 31                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:66:31
	or.b64  	%rd151, %rd3, 512;
	or.b64  	%rd152, %rd147, 512;
	.loc	1 67 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:67:29
	setp.lt.u64 	%p123, %rd152, 768;
	.loc	1 71 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:35
	add.s64 	%rd142, %rd137, 1024;
	.loc	1 71 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:42
	// begin inline asm
	mov.u16 %rs47, %rs44;
	@%p123 ld.global.L1::evict_last.b16 { %rs47 }, [ %rd142 + 0 ];
	// end inline asm
	.loc	1 71 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:71:95
	cvt.f32.bf16 	%f358, %rs47;
	.loc	1 72 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:35
	add.s64 	%rd143, %rd138, 1024;
	.loc	1 72 42                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:42
	// begin inline asm
	mov.u16 %rs49, %rs44;
	@%p123 ld.global.L1::evict_last.b16 { %rs49 }, [ %rd143 + 0 ];
	// end inline asm
	.loc	1 72 95                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:72:95
	cvt.f32.bf16 	%f359, %rs49;
	.loc	1 67 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:67:29
	setp.lt.u64 	%p145, %rd151, 768;
	.loc	1 77 70                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:77:70
	bar.sync 	0;
	.loc	1 78 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:35
	add.s64 	%rd144, %rd139, 1024;
	.loc	1 78 64                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:64
	and.pred  	%p125, %p27, %p145;
	.loc	1 78 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:54
	// begin inline asm
	mov.u32 %r79, %r59;
	mov.u32 %r80, %r59;
	mov.u32 %r81, %r59;
	mov.u32 %r82, %r59;
	@%p125 ld.global.L1::evict_first.v4.b32 { %r79, %r80, %r81, %r82 }, [ %rd144 + 0 ];
	// end inline asm
	.loc	1 83 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:83:67
	bar.sync 	0;
	.loc	1 84 35                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:35
	add.s64 	%rd145, %rd140, 1024;
	.loc	1 84 54                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:54
	// begin inline asm
	mov.u32 %r87, %r59;
	mov.u32 %r88, %r59;
	mov.u32 %r89, %r59;
	mov.u32 %r90, %r59;
	@%p125 ld.global.L1::evict_first.v4.b32 { %r87, %r88, %r89, %r90 }, [ %rd145 + 0 ];
	// end inline asm
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	bar.sync 	0;
	mov.b32 	%r96, %f358;
	// begin inline asm
	@%p116 st.shared.b32 [ %r71 + 0 ], %r96;
	// end inline asm
	bar.sync 	0;
	.loc	1 99 36                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:36
	cvt.u32.u64 	%r153, %rd151;
	add.s32 	%r154, %r151, %r153;
	.loc	1 99 29                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:29
	mul.wide.s32 	%rd153, %r154, 2;
	add.s64 	%rd146, %rd8, %rd153;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs67, %rs68}, %r82;
	cvt.f32.bf16 	%f360, %rs67;
	cvt.f32.bf16 	%f361, %rs68;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs69, %rs70}, %r90;
	cvt.f32.bf16 	%f362, %rs69;
	cvt.f32.bf16 	%f363, %rs70;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f364, %f361, %f363;
	add.f32 	%f365, %f360, %f362;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f366, %f365, %f286;
	sub.f32 	%f367, %f364, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f368, %f291, %f367;
	mul.f32 	%f369, %f291, %f366;
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	ld.shared.v4.f32 	{%f370, %f371, %f372, %f373}, [%r148+16];
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs71, %rs72}, %r81;
	cvt.f32.bf16 	%f374, %rs71;
	cvt.f32.bf16 	%f375, %rs72;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs73, %rs74}, %r89;
	cvt.f32.bf16 	%f376, %rs73;
	cvt.f32.bf16 	%f377, %rs74;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f378, %f375, %f377;
	add.f32 	%f379, %f374, %f376;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f380, %f379, %f286;
	sub.f32 	%f381, %f378, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f382, %f291, %f381;
	mul.f32 	%f383, %f291, %f380;
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs75, %rs76}, %r80;
	cvt.f32.bf16 	%f384, %rs75;
	cvt.f32.bf16 	%f385, %rs76;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs77, %rs78}, %r88;
	cvt.f32.bf16 	%f386, %rs77;
	cvt.f32.bf16 	%f387, %rs78;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f388, %f385, %f387;
	add.f32 	%f389, %f384, %f386;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f390, %f389, %f286;
	sub.f32 	%f391, %f388, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f392, %f291, %f391;
	mul.f32 	%f393, %f291, %f390;
	.loc	1 95 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:95:24
	ld.shared.v4.f32 	{%f394, %f395, %f396, %f397}, [%r148];
	.loc	1 78 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:78:116
	mov.b32 	{%rs79, %rs80}, %r79;
	cvt.f32.bf16 	%f398, %rs79;
	cvt.f32.bf16 	%f399, %rs80;
	.loc	1 84 116                        // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:84:116
	mov.b32 	{%rs81, %rs82}, %r87;
	cvt.f32.bf16 	%f400, %rs81;
	cvt.f32.bf16 	%f401, %rs82;
	.loc	1 85 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:85:24
	add.f32 	%f402, %f399, %f401;
	add.f32 	%f403, %f398, %f400;
	.loc	1 87 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:87:24
	sub.f32 	%f404, %f403, %f286;
	sub.f32 	%f405, %f402, %f286;
	.loc	1 93 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:93:24
	mul.f32 	%f406, %f291, %f405;
	mul.f32 	%f407, %f291, %f404;
	.loc	1 97 24                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:97:24
	bar.sync 	0;
	mov.b32 	%r98, %f359;
	// begin inline asm
	@%p116 st.shared.b32 [ %r71 + 0 ], %r98;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f408, %f409, %f410, %f411}, [%r148];
	ld.shared.v4.f32 	{%f412, %f413, %f414, %f415}, [%r148+16];
	fma.rn.f32 	%f416, %f394, %f407, %f408;
	fma.rn.f32 	%f417, %f395, %f406, %f409;
	fma.rn.f32 	%f418, %f396, %f393, %f410;
	fma.rn.f32 	%f419, %f397, %f392, %f411;
	fma.rn.f32 	%f420, %f370, %f383, %f412;
	fma.rn.f32 	%f421, %f371, %f382, %f413;
	fma.rn.f32 	%f422, %f372, %f369, %f414;
	fma.rn.f32 	%f423, %f373, %f368, %f415;
	.loc	1 99 52                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:99:52
	cvt.rn.bf16x2.f32 	%r99, %f417, %f416;
	cvt.rn.bf16x2.f32 	%r100, %f419, %f418;
	cvt.rn.bf16x2.f32 	%r101, %f421, %f420;
	cvt.rn.bf16x2.f32 	%r102, %f423, %f422;
	// begin inline asm
	@%p125 st.global.v4.b32 [ %rd146 + 0 ], { %r99, %r100, %r101, %r102 };
	// end inline asm
	.loc	1 65 4                          // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:65:4
	ret;
$L__BB0_3:
	.loc	1 50 67                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:50:67
	mov.u64 	%rd128, assertMessage_1;
	cvta.global.u64 	%rd129, %rd128;
	mov.u64 	%rd130, assertFile_1;
	cvta.global.u64 	%rd131, %rd130;
	mov.u64 	%rd132, assertFunc_1;
	cvta.global.u64 	%rd133, %rd132;
	{ // callseq 7, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd129;
	.param .b64 param1;
	st.param.b64 	[param1], %rd131;
	.param .b32 param2;
	st.param.b32 	[param2], 50;
	.param .b64 param3;
	st.param.b64 	[param3], %rd133;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 7
	trap;
$L__BB0_8:
	.loc	1 44 68                         // cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py:44:68
	mov.u64 	%rd119, assertMessage_0;
	cvta.global.u64 	%rd120, %rd119;
	mov.u64 	%rd121, assertFile_0;
	cvta.global.u64 	%rd122, %rd121;
	mov.u64 	%rd123, assertFunc_0;
	cvta.global.u64 	%rd124, %rd123;
	{ // callseq 6, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd120;
	.param .b64 param1;
	st.param.b64 	[param1], %rd122;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd124;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 6
	trap;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 116
.b8 105
.b8 55
.b8 110
.b8 53
.b8 107
.b8 50
.b8 114
.b8 50
.b8 122
.b8 112
.b8 118
.b8 119
.b8 101
.b8 102
.b8 107
.b8 113
.b8 120
.b8 106
.b8 108
.b8 114
.b8 111
.b8 110
.b8 53
.b8 53
.b8 107
.b8 119
.b8 98
.b8 55
.b8 115
.b8 115
.b8 106
.b8 98
.b8 109
.b8 50
.b8 52
.b8 117
.b8 99
.b8 99
.b8 101
.b8 122
.b8 98
.b8 102
.b8 121
.b8 103
.b8 107
.b8 117
.b8 100
.b8 98
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 118
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 85                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
