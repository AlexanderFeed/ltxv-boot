#loc = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":17:0)
module {
  tt.func public @triton_bmm(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":17:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":17:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":17:0)) attributes {noinline = false} {
    %cst = arith.constant dense<32> : tensor<32x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<128x32xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c262144_i32 = arith.constant 262144 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<512> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<512> : tensor<128x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<128x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<512> : tensor<128xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.divsi %0, %c64_i32 : i32 loc(#loc3)
    %2 = arith.muli %1, %c8_i32 : i32 loc(#loc4)
    %3 = arith.subi %c4_i32, %2 : i32 loc(#loc5)
    %4 = arith.minsi %3, %c8_i32 : i32 loc(#loc6)
    %5 = arith.remsi %0, %4 : i32 loc(#loc7)
    %6 = arith.addi %2, %5 : i32 loc(#loc8)
    %7 = arith.remsi %0, %c64_i32 : i32 loc(#loc9)
    %8 = arith.divsi %7, %4 : i32 loc(#loc10)
    %9 = arith.muli %6, %c128_i32 : i32 loc(#loc11)
    %10 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc12)
    %11 = tt.splat %9 : i32 -> tensor<128xi32> loc(#loc13)
    %12 = arith.addi %11, %10 : tensor<128xi32> loc(#loc13)
    %13 = arith.muli %8, %c64_i32 : i32 loc(#loc14)
    %14 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc15)
    %15 = tt.splat %13 : i32 -> tensor<64xi32> loc(#loc16)
    %16 = arith.addi %15, %14 : tensor<64xi32> loc(#loc16)
    %17 = arith.remsi %12, %cst_7 : tensor<128xi32> loc(#loc17)
    %18 = arith.remsi %16, %cst_6 : tensor<64xi32> loc(#loc18)
    %19 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc19)
    %20 = tt.get_program_id y : i32 loc(#loc20)
    %21 = tt.expand_dims %17 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc21)
    %22 = arith.muli %21, %cst_5 : tensor<128x1xi32> loc(#loc22)
    %23 = tt.expand_dims %19 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc23)
    %24 = tt.broadcast %22 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc24)
    %25 = tt.broadcast %23 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc24)
    %26 = arith.addi %24, %25 : tensor<128x32xi32> loc(#loc24)
    %27 = arith.muli %20, %c64_i32 : i32 loc(#loc25)
    %28 = tt.splat %27 : i32 -> tensor<128x32xi32> loc(#loc26)
    %29 = arith.addi %26, %28 : tensor<128x32xi32> loc(#loc26)
    %30 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x32x!tt.ptr<bf16>> loc(#loc27)
    %31 = tt.addptr %30, %29 : tensor<128x32x!tt.ptr<bf16>>, tensor<128x32xi32> loc(#loc27)
    %32 = tt.expand_dims %19 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc28)
    %33 = tt.expand_dims %18 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc29)
    %34 = arith.muli %33, %cst_4 : tensor<1x64xi32> loc(#loc30)
    %35 = tt.broadcast %32 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc31)
    %36 = tt.broadcast %34 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc31)
    %37 = arith.addi %35, %36 : tensor<32x64xi32> loc(#loc31)
    %38 = tt.splat %27 : i32 -> tensor<32x64xi32> loc(#loc32)
    %39 = arith.addi %37, %38 : tensor<32x64xi32> loc(#loc32)
    %40 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<32x64x!tt.ptr<bf16>> loc(#loc33)
    %41 = tt.addptr %40, %39 : tensor<32x64x!tt.ptr<bf16>>, tensor<32x64xi32> loc(#loc33)
    %42:3 = scf.for %arg3 = %c0_i32 to %c64_i32 step %c32_i32 iter_args(%arg4 = %cst_3, %arg5 = %31, %arg6 = %41) -> (tensor<128x64xf32>, tensor<128x32x!tt.ptr<bf16>>, tensor<32x64x!tt.ptr<bf16>>)  : i32 {
      %60 = tt.load %arg5 : tensor<128x32x!tt.ptr<bf16>> loc(#loc35)
      %61 = tt.load %arg6 : tensor<32x64x!tt.ptr<bf16>> loc(#loc36)
      %62 = tt.dot %60, %61, %arg4, inputPrecision = tf32 : tensor<128x32xbf16> * tensor<32x64xbf16> -> tensor<128x64xf32> loc(#loc37)
      %63 = tt.addptr %arg5, %cst_0 : tensor<128x32x!tt.ptr<bf16>>, tensor<128x32xi32> loc(#loc38)
      %64 = tt.addptr %arg6, %cst : tensor<32x64x!tt.ptr<bf16>>, tensor<32x64xi32> loc(#loc39)
      scf.yield %62, %63, %64 : tensor<128x64xf32>, tensor<128x32x!tt.ptr<bf16>>, tensor<32x64x!tt.ptr<bf16>> loc(#loc40)
    } loc(#loc34)
    %43 = tt.expand_dims %12 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc41)
    %44 = tt.expand_dims %16 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc42)
    %45 = arith.cmpi slt, %43, %cst_2 : tensor<128x1xi32> loc(#loc43)
    %46 = arith.cmpi slt, %44, %cst_1 : tensor<1x64xi32> loc(#loc44)
    %47 = tt.broadcast %45 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc45)
    %48 = tt.broadcast %46 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc45)
    %49 = arith.andi %47, %48 : tensor<128x64xi1> loc(#loc45)
    %50 = arith.muli %43, %cst_2 : tensor<128x1xi32> loc(#loc46)
    %51 = tt.broadcast %44 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc47)
    %52 = tt.broadcast %50 : tensor<128x1xi32> -> tensor<128x64xi32> loc(#loc47)
    %53 = arith.addi %51, %52 : tensor<128x64xi32> loc(#loc47)
    %54 = arith.muli %20, %c262144_i32 : i32 loc(#loc48)
    %55 = tt.splat %54 : i32 -> tensor<128x64xi32> loc(#loc49)
    %56 = arith.addi %53, %55 : tensor<128x64xi32> loc(#loc49)
    %57 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc50)
    %58 = tt.addptr %57, %56 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc50)
    %59 = arith.truncf %42#0 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc51)
    tt.store %58, %59, %49 : tensor<128x64x!tt.ptr<bf16>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":41:24)
#loc3 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":47:22)
#loc4 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":48:41)
#loc5 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":48:30)
#loc6 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":48:50)
#loc7 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":49:40)
#loc8 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":49:34)
#loc9 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":50:19)
#loc10 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":50:30)
#loc11 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":52:17)
#loc12 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":52:40)
#loc13 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":52:27)
#loc14 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":53:17)
#loc15 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":53:40)
#loc16 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":53:27)
#loc17 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":57:19)
#loc18 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":61:19)
#loc19 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":63:22)
#loc20 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":65:26)
#loc21 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:17)
#loc22 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:28)
#loc23 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:43)
#loc24 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:40)
#loc25 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:72)
#loc26 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:66)
#loc27 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":66:13)
#loc28 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:16)
#loc29 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:43)
#loc30 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:54)
#loc31 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:39)
#loc32 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:66)
#loc33 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":67:13)
#loc34 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":70:25)
#loc35 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":72:24)
#loc36 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":73:24)
#loc37 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":77:25)
#loc38 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":78:13)
#loc39 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":79:13)
#loc40 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":79:8)
#loc41 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":85:15)
#loc42 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":86:15)
#loc43 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":87:20)
#loc44 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":87:34)
#loc45 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":87:26)
#loc46 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":90:25)
#loc47 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":90:21)
#loc48 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":90:40)
#loc49 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":90:33)
#loc50 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":91:25)
#loc51 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":91:67)
#loc52 = loc("/tmp/torchinductor_root/po/cpokyuot2lgjhemdh4aghiuhyu5jgh5wobbdcbtjmgonc4knte5a.py":91:4)
