#loc = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0)
#loc1 = loc(unknown)
#loc61 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":61:85)
#loc136 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_red_fused_add_embedding_native_layer_norm_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg7: i32 loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<77> : tensor<64x1xi64> loc(#loc1)
    %cst_0 = arith.constant dense<768> : tensor<64x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<49408> : tensor<64x1xi64> loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x64xbf16> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<64x64xbf16> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<768> : tensor<64x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32> loc(#loc1)
    %cst_10 = arith.constant dense<7.680000e+02> : tensor<64x1xf32> loc(#loc1)
    %cst_11 = arith.constant dense<true> : tensor<64x1xi1> loc(#loc1)
    %cst_12 = arith.constant dense<768> : tensor<1x64xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<77> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_13 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>> loc(#loc9)
    %9 = tt.addptr %8, %5 : tensor<64x1x!tt.ptr<i64>>, tensor<64x1xi32> loc(#loc9)
    %10 = tt.load %9, %6 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>> loc(#loc10)
    %11 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>> loc(#loc11)
    %12 = tt.addptr %11, %5 : tensor<64x1x!tt.ptr<i64>>, tensor<64x1xi32> loc(#loc11)
    %13 = tt.load %12, %6 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>> loc(#loc12)
    %14:3 = scf.for %arg9 = %c0_i32 to %c768_i32 step %c64_i32 iter_args(%arg10 = %cst_4, %arg11 = %cst_4, %arg12 = %cst_4) -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %18 = tt.splat %arg9 : i32 -> tensor<1x64xi32> loc(#loc14)
      %19 = arith.addi %18, %7 : tensor<1x64xi32> loc(#loc14)
      %20 = arith.cmpi slt, %19, %cst_12 : tensor<1x64xi32> loc(#loc15)
      %21 = arith.addi %10, %cst_1 : tensor<64x1xi64> loc(#loc16)
      %22 = arith.cmpi slt, %10, %cst_7 : tensor<64x1xi64> loc(#loc17)
      %23 = arith.select %22, %21, %10 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc18)
      %24 = arith.cmpi sge, %23, %cst_7 : tensor<64x1xi64> loc(#loc19)
      %25 = arith.cmpi slt, %23, %cst_1 : tensor<64x1xi64> loc(#loc20)
      %26 = arith.andi %24, %25 : tensor<64x1xi1> loc(#loc21)
      %27 = arith.xori %6, %cst_11 : tensor<64x1xi1> loc(#loc22)
      %28 = arith.ori %26, %27 : tensor<64x1xi1> loc(#loc23)
      %29 = tt.broadcast %28 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc23)
      tt.assert %29, "index out of bounds: 0 <= tmp4 < 49408" : tensor<64x64xi1> loc(#loc24)
      %30 = arith.muli %23, %cst_0 : tensor<64x1xi64> loc(#loc25)
      %31 = tt.broadcast %30 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc25)
      %32 = arith.extsi %19 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc26)
      %33 = tt.broadcast %32 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc26)
      %34 = arith.addi %33, %31 : tensor<64x64xi64> loc(#loc26)
      %35 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc27)
      %36 = tt.addptr %35, %34 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc27)
      %37 = tt.broadcast %20 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc28)
      %38 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc28)
      %39 = arith.andi %37, %38 : tensor<64x64xi1> loc(#loc28)
      %40 = tt.load %36, %39, %cst_6 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc29)
      %41 = arith.extf %40 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc30)
      %42 = arith.addi %13, %cst : tensor<64x1xi64> loc(#loc31)
      %43 = arith.cmpi slt, %13, %cst_7 : tensor<64x1xi64> loc(#loc32)
      %44 = arith.select %43, %42, %13 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc33)
      %45 = arith.cmpi sge, %44, %cst_7 : tensor<64x1xi64> loc(#loc34)
      %46 = arith.cmpi slt, %44, %cst : tensor<64x1xi64> loc(#loc35)
      %47 = arith.andi %45, %46 : tensor<64x1xi1> loc(#loc36)
      %48 = arith.ori %47, %27 : tensor<64x1xi1> loc(#loc37)
      %49 = tt.broadcast %48 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc37)
      tt.assert %49, "index out of bounds: 0 <= tmp11 < 77" : tensor<64x64xi1> loc(#loc38)
      %50 = arith.muli %44, %cst_0 : tensor<64x1xi64> loc(#loc39)
      %51 = tt.broadcast %50 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc39)
      %52 = arith.addi %33, %51 : tensor<64x64xi64> loc(#loc40)
      %53 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc41)
      %54 = tt.addptr %53, %52 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc41)
      %55 = tt.load %54, %39, %cst_6 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<bf16>> loc(#loc42)
      %56 = arith.extf %55 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc43)
      %57 = arith.addf %41, %56 : tensor<64x64xf32> loc(#loc44)
      %58 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc45)
      %59:3 = scf.if %58 -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) {
        scf.yield %cst_4, %57, %cst_3 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc127)
      } else {
        %63 = arith.subf %57, %arg10 : tensor<64x64xf32> loc(#loc128)
        %64 = arith.addf %arg12, %cst_3 : tensor<64x64xf32> loc(#loc129)
        %65 = arith.divf %63, %64 : tensor<64x64xf32> loc(#loc130)
        %66 = arith.addf %arg10, %65 : tensor<64x64xf32> loc(#loc131)
        %67 = arith.subf %57, %66 : tensor<64x64xf32> loc(#loc132)
        %68 = arith.mulf %63, %67 : tensor<64x64xf32> loc(#loc133)
        %69 = arith.addf %arg11, %68 : tensor<64x64xf32> loc(#loc134)
        scf.yield %69, %66, %64 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc134)
      } loc(#loc126)
      %60 = arith.select %39, %59#1, %arg10 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc56)
      %61 = arith.select %39, %59#0, %arg11 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc57)
      %62 = arith.select %39, %59#2, %arg12 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc58)
      scf.yield %60, %61, %62 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc59)
    } loc(#loc13)
    %15:3 = "tt.reduce"(%14#0, %14#1, %14#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc61)), %arg10: f32 loc(callsite(#loc1 at #loc61)), %arg11: f32 loc(callsite(#loc1 at #loc61)), %arg12: f32 loc(callsite(#loc1 at #loc61)), %arg13: f32 loc(callsite(#loc1 at #loc61)), %arg14: f32 loc(callsite(#loc1 at #loc61))):
      %18 = arith.subf %arg12, %arg9 : f32 loc(#loc149)
      %19 = arith.addf %arg11, %arg14 : f32 loc(#loc150)
      %20 = arith.cmpf oeq, %19, %cst_2 : f32 loc(#loc151)
      %21 = arith.divf %arg14, %19 : f32 loc(#loc152)
      %22 = arith.select %20, %cst_2, %21 : f32 loc(#loc153)
      %23 = arith.mulf %18, %22 : f32 loc(#loc154)
      %24 = arith.addf %arg9, %23 : f32 loc(#loc155)
      %25 = arith.addf %arg10, %arg13 : f32 loc(#loc156)
      %26 = arith.mulf %18, %18 : f32 loc(#loc157)
      %27 = arith.mulf %26, %arg11 : f32 loc(#loc158)
      %28 = arith.mulf %27, %22 : f32 loc(#loc159)
      %29 = arith.addf %25, %28 : f32 loc(#loc160)
      tt.reduce.return %24, %29, %19 : f32, f32, f32 loc(#loc135)
    }) : (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc135)
    %16 = tt.expand_dims %15#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc74)
    %17 = tt.expand_dims %15#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc75)
    scf.for %arg9 = %c0_i32 to %c768_i32 step %c64_i32  : i32 {
      %18 = tt.splat %arg9 : i32 -> tensor<1x64xi32> loc(#loc77)
      %19 = arith.addi %18, %7 : tensor<1x64xi32> loc(#loc77)
      %20 = arith.cmpi slt, %19, %cst_12 : tensor<1x64xi32> loc(#loc78)
      %21 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc79)
      %22 = tt.addptr %21, %19 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc79)
      %23 = tt.load %22, %20, %cst_5 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<bf16>> loc(#loc80)
      %24 = arith.extf %23 : tensor<1x64xbf16> to tensor<1x64xf32> loc(#loc81)
      %25 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc82)
      %26 = tt.addptr %25, %19 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc82)
      %27 = tt.load %26, %20, %cst_5 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<bf16>> loc(#loc83)
      %28 = arith.extf %27 : tensor<1x64xbf16> to tensor<1x64xf32> loc(#loc84)
      %29 = arith.addi %10, %cst_1 : tensor<64x1xi64> loc(#loc85)
      %30 = arith.cmpi slt, %10, %cst_7 : tensor<64x1xi64> loc(#loc86)
      %31 = arith.select %30, %29, %10 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc87)
      %32 = arith.cmpi sge, %31, %cst_7 : tensor<64x1xi64> loc(#loc88)
      %33 = arith.cmpi slt, %31, %cst_1 : tensor<64x1xi64> loc(#loc89)
      %34 = arith.andi %32, %33 : tensor<64x1xi1> loc(#loc90)
      %35 = arith.xori %6, %cst_11 : tensor<64x1xi1> loc(#loc91)
      %36 = arith.ori %34, %35 : tensor<64x1xi1> loc(#loc92)
      %37 = tt.broadcast %36 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc92)
      tt.assert %37, "index out of bounds: 0 <= tmp26 < 49408" : tensor<64x64xi1> loc(#loc93)
      %38 = arith.muli %31, %cst_0 : tensor<64x1xi64> loc(#loc94)
      %39 = tt.broadcast %38 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc94)
      %40 = arith.extsi %19 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc95)
      %41 = tt.broadcast %40 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc95)
      %42 = arith.addi %41, %39 : tensor<64x64xi64> loc(#loc95)
      %43 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc96)
      %44 = tt.addptr %43, %42 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc96)
      %45 = tt.broadcast %20 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc97)
      %46 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc97)
      %47 = arith.andi %45, %46 : tensor<64x64xi1> loc(#loc97)
      %48 = tt.load %44, %47, %cst_6 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc98)
      %49 = arith.extf %48 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc99)
      %50 = arith.addi %13, %cst : tensor<64x1xi64> loc(#loc100)
      %51 = arith.cmpi slt, %13, %cst_7 : tensor<64x1xi64> loc(#loc101)
      %52 = arith.select %51, %50, %13 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc102)
      %53 = arith.cmpi sge, %52, %cst_7 : tensor<64x1xi64> loc(#loc103)
      %54 = arith.cmpi slt, %52, %cst : tensor<64x1xi64> loc(#loc104)
      %55 = arith.andi %53, %54 : tensor<64x1xi1> loc(#loc105)
      %56 = arith.ori %55, %35 : tensor<64x1xi1> loc(#loc106)
      %57 = tt.broadcast %56 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc106)
      tt.assert %57, "index out of bounds: 0 <= tmp32 < 77" : tensor<64x64xi1> loc(#loc107)
      %58 = arith.muli %52, %cst_0 : tensor<64x1xi64> loc(#loc108)
      %59 = tt.broadcast %58 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc108)
      %60 = arith.addi %41, %59 : tensor<64x64xi64> loc(#loc109)
      %61 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc110)
      %62 = tt.addptr %61, %60 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc110)
      %63 = tt.load %62, %47, %cst_6 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>> loc(#loc111)
      %64 = arith.extf %63 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc112)
      %65 = arith.addf %49, %64 : tensor<64x64xf32> loc(#loc113)
      %66 = tt.broadcast %16 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc114)
      %67 = arith.subf %65, %66 : tensor<64x64xf32> loc(#loc114)
      %68 = arith.divf %17, %cst_10 : tensor<64x1xf32> loc(#loc115)
      %69 = arith.addf %68, %cst_9 : tensor<64x1xf32> loc(#loc116)
      %70 = tt.extern_elementwise %69 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc117)
      %71 = tt.broadcast %70 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc118)
      %72 = arith.mulf %67, %71 : tensor<64x64xf32> loc(#loc118)
      %73 = tt.broadcast %24 : tensor<1x64xf32> -> tensor<64x64xf32> loc(#loc119)
      %74 = arith.mulf %72, %73 : tensor<64x64xf32> loc(#loc119)
      %75 = tt.broadcast %28 : tensor<1x64xf32> -> tensor<64x64xf32> loc(#loc120)
      %76 = arith.addf %74, %75 : tensor<64x64xf32> loc(#loc120)
      %77 = arith.muli %5, %cst_8 : tensor<64x1xi32> loc(#loc121)
      %78 = tt.broadcast %19 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc122)
      %79 = tt.broadcast %77 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc122)
      %80 = arith.addi %78, %79 : tensor<64x64xi32> loc(#loc122)
      %81 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc123)
      %82 = tt.addptr %81, %80 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc123)
      %83 = arith.truncf %76 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc124)
      tt.store %82, %83, %47 : tensor<64x64x!tt.ptr<bf16>> loc(#loc124)
    } loc(#loc76)
    tt.return loc(#loc125)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":24:36)
#loc5 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":24:44)
#loc6 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":24:23)
#loc7 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":25:21)
#loc8 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":26:37)
#loc9 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":29:30)
#loc10 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":29:35)
#loc11 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":30:30)
#loc12 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":30:35)
#loc13 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":34:40)
#loc14 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":35:31)
#loc15 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":36:29)
#loc16 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":41:22)
#loc17 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":42:22)
#loc18 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":43:36)
#loc19 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:32)
#loc20 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:48)
#loc21 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:41)
#loc22 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:60)
#loc23 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:58)
#loc24 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":44:68)
#loc25 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:45)
#loc26 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:41)
#loc27 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:34)
#loc28 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:62)
#loc29 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:52)
#loc30 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":45:113)
#loc31 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":47:22)
#loc32 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":48:23)
#loc33 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":49:38)
#loc34 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":50:32)
#loc35 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":50:50)
#loc36 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":50:42)
#loc37 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":50:57)
#loc38 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":50:67)
#loc39 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":51:46)
#loc40 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":51:42)
#loc41 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":51:35)
#loc42 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":51:54)
#loc43 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":51:115)
#loc44 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":52:23)
#loc45 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":56:66)
#loc46 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":203:7)
#loc47 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":56:55)
#loc48 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":206:31)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":208:24)
#loc50 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":209:30)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:34)
#loc52 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":210:26)
#loc53 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:39)
#loc54 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:31)
#loc55 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":211:22)
#loc56 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":58:64)
#loc57 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":59:60)
#loc58 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":60:68)
#loc59 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":60:8)
#loc60 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":229:46)
#loc62 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":217:21)
#loc63 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":218:28)
#loc64 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:39)
#loc65 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:60)
#loc66 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":219:49)
#loc67 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:25)
#loc68 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":221:17)
#loc69 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:15)
#loc70 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:30)
#loc71 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:38)
#loc72 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:49)
#loc73 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":222:22)
#loc74 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":62:18)
#loc75 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":63:18)
#loc76 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":65:40)
#loc77 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":66:31)
#loc78 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":67:29)
#loc79 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":71:35)
#loc80 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":71:42)
#loc81 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":71:95)
#loc82 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":72:35)
#loc83 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":72:42)
#loc84 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":72:95)
#loc85 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":74:23)
#loc86 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":75:23)
#loc87 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":76:39)
#loc88 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:32)
#loc89 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:50)
#loc90 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:42)
#loc91 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:62)
#loc92 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:60)
#loc93 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":77:70)
#loc94 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:46)
#loc95 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:42)
#loc96 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:35)
#loc97 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:64)
#loc98 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:54)
#loc99 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":78:116)
#loc100 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":80:23)
#loc101 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":81:23)
#loc102 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":82:39)
#loc103 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":83:32)
#loc104 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":83:50)
#loc105 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":83:42)
#loc106 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":83:57)
#loc107 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":83:67)
#loc108 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":84:46)
#loc109 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":84:42)
#loc110 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":84:35)
#loc111 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":84:54)
#loc112 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":84:116)
#loc113 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":85:24)
#loc114 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":87:24)
#loc115 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":89:25)
#loc116 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":91:24)
#loc117 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":92:32)
#loc118 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":93:24)
#loc119 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":95:24)
#loc120 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":97:24)
#loc121 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":99:40)
#loc122 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":99:36)
#loc123 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":99:29)
#loc124 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":99:52)
#loc125 = loc("/tmp/torchinductor_root/vt/cvti7n5k2r2zpvwefkqxjlron55kwb7ssjbm24uccezbfygkudbb.py":65:4)
#loc126 = loc(callsite(#loc46 at #loc47))
#loc127 = loc(callsite(#loc48 at #loc47))
#loc128 = loc(callsite(#loc49 at #loc47))
#loc129 = loc(callsite(#loc50 at #loc47))
#loc130 = loc(callsite(#loc51 at #loc47))
#loc131 = loc(callsite(#loc52 at #loc47))
#loc132 = loc(callsite(#loc53 at #loc47))
#loc133 = loc(callsite(#loc54 at #loc47))
#loc134 = loc(callsite(#loc55 at #loc47))
#loc135 = loc(callsite(#loc60 at #loc61))
#loc137 = loc(callsite(#loc62 at #loc60))
#loc138 = loc(callsite(#loc63 at #loc60))
#loc139 = loc(callsite(#loc64 at #loc60))
#loc140 = loc(callsite(#loc65 at #loc60))
#loc141 = loc(callsite(#loc66 at #loc60))
#loc142 = loc(callsite(#loc67 at #loc60))
#loc143 = loc(callsite(#loc68 at #loc60))
#loc144 = loc(callsite(#loc69 at #loc60))
#loc145 = loc(callsite(#loc70 at #loc60))
#loc146 = loc(callsite(#loc71 at #loc60))
#loc147 = loc(callsite(#loc72 at #loc60))
#loc148 = loc(callsite(#loc73 at #loc60))
#loc149 = loc(callsite(#loc137 at #loc61))
#loc150 = loc(callsite(#loc138 at #loc61))
#loc151 = loc(callsite(#loc139 at #loc61))
#loc152 = loc(callsite(#loc140 at #loc61))
#loc153 = loc(callsite(#loc141 at #loc61))
#loc154 = loc(callsite(#loc142 at #loc61))
#loc155 = loc(callsite(#loc143 at #loc61))
#loc156 = loc(callsite(#loc144 at #loc61))
#loc157 = loc(callsite(#loc145 at #loc61))
#loc158 = loc(callsite(#loc146 at #loc61))
#loc159 = loc(callsite(#loc147 at #loc61))
#loc160 = loc(callsite(#loc148 at #loc61))
