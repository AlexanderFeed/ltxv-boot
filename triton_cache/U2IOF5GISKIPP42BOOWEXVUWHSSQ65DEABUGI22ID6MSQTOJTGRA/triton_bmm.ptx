//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<257>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<20>;
	.loc	1 17 0                          // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:17:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_bmm_param_0];
	ld.param.u64 	%rd15, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:41:24
	mov.u32 	%r121, %ctaid.x;
	.loc	1 47 22                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:47:22
	shr.s32 	%r122, %r121, 31;
	shr.u32 	%r123, %r122, 25;
	add.s32 	%r124, %r121, %r123;
	shr.s32 	%r125, %r124, 7;
	ld.param.u64 	%rd16, [triton_bmm_param_2];
	.loc	1 48 41                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:48:41
	shl.b32 	%r126, %r125, 3;
	.loc	1 48 30                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:48:30
	sub.s32 	%r127, 8, %r126;
	.loc	1 48 50                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:48:50
	min.s32 	%r128, %r127, 8;
	.loc	1 49 40                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:49:40
	rem.s32 	%r129, %r121, %r128;
	.loc	1 49 34                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:49:34
	add.s32 	%r130, %r129, %r126;
	.loc	1 50 19                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:50:19
	and.b32  	%r131, %r124, -128;
	sub.s32 	%r132, %r121, %r131;
	.loc	1 50 30                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:50:30
	div.s32 	%r133, %r132, %r128;
	.loc	1 52 17                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:52:17
	shl.b32 	%r134, %r130, 6;
	.loc	1 52 40                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:52:40
	mov.u32 	%r135, %tid.x;
	and.b32  	%r136, %r135, 4;
	and.b32  	%r137, %r135, 16;
	shr.u32 	%r138, %r135, 2;
	and.b32  	%r139, %r138, 8;
	bfe.u32 	%r140, %r135, 2, 4;
	and.b32  	%r141, %r135, 64;
	shr.u32 	%r142, %r141, 2;
	and.b32  	%r143, %r135, 128;
	shr.u32 	%r144, %r143, 2;
	or.b32  	%r145, %r142, %r140;
	or.b32  	%r146, %r145, %r144;
	.loc	1 52 27                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:52:27
	or.b32  	%r147, %r134, %r146;
	.loc	1 53 17                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:53:17
	shl.b32 	%r148, %r133, 5;
	.loc	1 53 40                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:53:40
	bfe.u32 	%r149, %r135, 3, 5;
	shl.b32 	%r150, %r135, 3;
	and.b32  	%r151, %r150, 24;
	.loc	1 53 27                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:53:27
	or.b32  	%r152, %r148, %r149;
	.loc	1 57 19                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:57:19
	bfe.s32 	%r153, %r130, 25, 1;
	shr.u32 	%r154, %r153, 23;
	add.s32 	%r155, %r147, %r154;
	and.b32  	%r156, %r155, 1048064;
	sub.s32 	%r157, %r147, %r156;
	.loc	1 61 19                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:61:19
	bfe.s32 	%r158, %r133, 26, 1;
	shr.u32 	%r159, %r158, 23;
	add.s32 	%r160, %r152, %r159;
	and.b32  	%r161, %r160, 1048064;
	sub.s32 	%r162, %r152, %r161;
	.loc	1 65 26                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:65:26
	mov.u32 	%r163, %ctaid.y;
	.loc	1 66 28                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:66:28
	shl.b32 	%r164, %r157, 12;
	.loc	1 66 72                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:66:72
	shl.b32 	%r165, %r163, 6;
	.loc	1 66 40                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:66:40
	or.b32  	%r166, %r151, %r165;
	.loc	1 66 66                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:66:66
	add.s32 	%r167, %r166, %r164;
	.loc	1 66 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:66:13
	mul.wide.s32 	%rd17, %r167, 2;
	add.s64 	%rd1, %rd14, %rd17;
	.loc	1 67 16                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:67:16
	shl.b32 	%r168, %r135, 2;
	and.b32  	%r169, %r168, 8;
	and.b32  	%r170, %r168, 12;
	shl.b32 	%r171, %r136, 2;
	or.b32  	%r172, %r170, %r171;
	.loc	1 67 54                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:67:54
	shl.b32 	%r173, %r162, 12;
	.loc	1 67 39                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:67:39
	or.b32  	%r174, %r172, %r165;
	.loc	1 67 66                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:67:66
	add.s32 	%r175, %r174, %r173;
	.loc	1 67 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:67:13
	mul.wide.s32 	%rd18, %r175, 2;
	add.s64 	%rd2, %rd15, %rd18;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	xor.b32  	%r176, %r150, %r135;
	and.b32  	%r177, %r176, 24;
	shl.b32 	%r178, %r177, 1;
	shl.b32 	%r179, %r146, 6;
	or.b32  	%r180, %r179, %r178;
	mov.u32 	%r181, global_smem;
	add.s32 	%r1, %r181, %r180;
	mov.b32 	%r2, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r1 + 0 ], [ %rd1 + 0 ], 0x10, %r2;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	shr.u32 	%r182, %r137, 1;
	shr.u32 	%r183, %r135, 1;
	and.b32  	%r184, %r183, 24;
	xor.b32  	%r185, %r172, %r184;
	shl.b32 	%r186, %r185, 1;
	shl.b32 	%r187, %r149, 6;
	or.b32  	%r188, %r187, %r186;
	add.s32 	%r189, %r181, 16384;
	add.s32 	%r3, %r189, %r188;
	mov.b32 	%r4, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r3 + 0 ], [ %rd2 + 0 ], 0x8, %r4;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:78:13
	add.s64 	%rd3, %rd1, 64;
	.loc	1 79 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:79:13
	add.s64 	%rd4, %rd2, 64;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	bar.sync 	0;
	add.s32 	%r190, %r181, 4096;
	add.s32 	%r5, %r190, %r180;
	// begin inline asm
	cp.async.cg.shared.global [ %r5 + 0 ], [ %rd3 + 0 ], 0x10, %r2;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	add.s32 	%r191, %r181, 18432;
	add.s32 	%r7, %r191, %r188;
	// begin inline asm
	cp.async.ca.shared.global [ %r7 + 0 ], [ %rd4 + 0 ], 0x8, %r4;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:78:13
	add.s64 	%rd5, %rd1, 128;
	.loc	1 79 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:79:13
	add.s64 	%rd6, %rd2, 128;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	bar.sync 	0;
	add.s32 	%r9, %r1, 8192;
	mov.b32 	%r10, 0;
	// begin inline asm
	cp.async.cg.shared.global [ %r9 + 0 ], [ %rd5 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	add.s32 	%r192, %r181, %r188;
	add.s32 	%r11, %r192, 20480;
	// begin inline asm
	cp.async.ca.shared.global [ %r11 + 0 ], [ %rd6 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:78:13
	add.s64 	%rd7, %rd1, 192;
	.loc	1 79 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:79:13
	add.s64 	%rd8, %rd2, 192;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	bar.sync 	0;
	add.s32 	%r13, %r1, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r13 + 0 ], [ %rd7 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	add.s32 	%r15, %r192, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r15 + 0 ], [ %rd8 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	or.b32  	%r193, %r169, %r171;
	and.b32  	%r194, %r135, 7;
	and.b32  	%r195, %r135, 15;
	xor.b32  	%r196, %r193, %r182;
	or.b32  	%r197, %r142, %r195;
	or.b32  	%r198, %r197, %r144;
	shl.b32 	%r199, %r198, 5;
	or.b32  	%r200, %r199, %r196;
	or.b32  	%r201, %r169, 16;
	or.b32  	%r202, %r182, %r171;
	xor.b32  	%r203, %r202, %r201;
	or.b32  	%r204, %r203, %r199;
	and.b32  	%r205, %r135, 24;
	xor.b32  	%r206, %r193, %r205;
	or.b32  	%r207, %r139, %r194;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r208, %r200, 1;
	add.s32 	%r21, %r181, %r208;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r37, %r38, %r39, %r40}, [%r21];
	// end inline asm
	shl.b32 	%r209, %r204, 1;
	add.s32 	%r26, %r181, %r209;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r49, %r50, %r51, %r52}, [%r26];
	// end inline asm
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	shl.b32 	%r210, %r207, 6;
	shl.b32 	%r211, %r206, 1;
	or.b32  	%r212, %r210, %r211;
	add.s32 	%r31, %r189, %r212;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r41, %r42, %r53, %r54}, [%r31];
	// end inline asm
	add.s32 	%r36, %r31, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r47, %r48, %r59, %r60}, [%r36];
	// end inline asm
	mov.f32 	%f25, 0f00000000;
	.loc	1 77 25                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:77:25
	mov.f32 	%f17, %f25;
	mov.f32 	%f18, %f25;
	mov.f32 	%f19, %f25;
	mov.f32 	%f20, %f25;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r37, %r38, %r39, %r40 }, { %r41, %r42 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	mov.f32 	%f26, %f25;
	mov.f32 	%f27, %f25;
	mov.f32 	%f28, %f25;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r37, %r38, %r39, %r40 }, { %r47, %r48 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r49, %r50, %r51, %r52 }, { %r53, %r54 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r49, %r50, %r51, %r52 }, { %r59, %r60 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	.loc	1 78 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:78:13
	add.s64 	%rd9, %rd1, 256;
	.loc	1 79 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:79:13
	add.s64 	%rd10, %rd2, 256;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [ %r1 + 0 ], [ %rd9 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	// begin inline asm
	cp.async.ca.shared.global [ %r3 + 0 ], [ %rd10 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	add.s32 	%r69, %r190, %r208;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r85, %r86, %r87, %r88}, [%r69];
	// end inline asm
	add.s32 	%r74, %r190, %r209;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r97, %r98, %r99, %r100}, [%r74];
	// end inline asm
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	add.s32 	%r79, %r191, %r212;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r89, %r90, %r101, %r102}, [%r79];
	// end inline asm
	add.s32 	%r84, %r79, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r95, %r96, %r107, %r108}, [%r84];
	// end inline asm
	.loc	1 77 25                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r85, %r86, %r87, %r88 }, { %r89, %r90 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r85, %r86, %r87, %r88 }, { %r95, %r96 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f17, %f18, %f19, %f20 }, { %r97, %r98, %r99, %r100 }, { %r101, %r102 }, { %f17, %f18, %f19, %f20 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f25, %f26, %f27, %f28 }, { %r97, %r98, %r99, %r100 }, { %r107, %r108 }, { %f25, %f26, %f27, %f28 };
	// end inline asm
	.loc	1 78 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:78:13
	add.s64 	%rd11, %rd1, 320;
	.loc	1 79 13                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:79:13
	add.s64 	%rd12, %rd2, 320;
	.loc	1 72 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:72:24
	bar.sync 	0;
	add.s32 	%r109, %r1, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r109 + 0 ], [ %rd11 + 0 ], 0x10, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:73:24
	add.s32 	%r111, %r3, 2048;
	// begin inline asm
	cp.async.ca.shared.global [ %r111 + 0 ], [ %rd12 + 0 ], 0x8, %r10;
	// end inline asm
	cp.async.commit_group;
	.loc	1 53 27                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:53:27
	or.b32  	%r213, %r148, %r151;
	.loc	1 70 25                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 26                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:87:26
	max.s32 	%r214, %r147, %r213;
	setp.lt.s32 	%p5, %r214, 512;
	.loc	1 90 25                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:90:25
	shl.b32 	%r215, %r147, 9;
	.loc	1 90 40                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:90:40
	shl.b32 	%r216, %r163, 18;
	.loc	1 90 21                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:90:21
	add.s32 	%r217, %r213, %r216;
	.loc	1 90 33                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:90:33
	add.s32 	%r218, %r217, %r215;
	.loc	1 91 25                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:91:25
	mul.wide.s32 	%rd19, %r218, 2;
	add.s64 	%rd13, %rd16, %rd19;
	.loc	1 91 67                         // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f17;
	cvt.rn.bf16.f32 	%rs2, %f18;
	cvt.rn.bf16.f32 	%rs3, %f19;
	cvt.rn.bf16.f32 	%rs4, %f20;
	cvt.rn.bf16.f32 	%rs5, %f25;
	cvt.rn.bf16.f32 	%rs6, %f26;
	cvt.rn.bf16.f32 	%rs7, %f27;
	cvt.rn.bf16.f32 	%rs8, %f28;
	shl.b32 	%r219, %r135, 1;
	and.b32  	%r220, %r219, 6;
	shl.b32 	%r221, %r136, 3;
	or.b32  	%r222, %r220, %r221;
	and.b32  	%r223, %r150, 64;
	or.b32  	%r224, %r222, %r223;
	shl.b32 	%r225, %r137, 3;
	or.b32  	%r226, %r224, %r225;
	or.b32  	%r227, %r226, %r139;
	shl.b32 	%r228, %r141, 3;
	shl.b32 	%r229, %r143, 3;
	or.b32  	%r230, %r229, %r228;
	or.b32  	%r231, %r230, %r227;
	and.b32  	%r232, %r150, 376;
	or.b32  	%r233, %r232, %r225;
	or.b32  	%r234, %r233, %r228;
	or.b32  	%r235, %r234, %r229;
	shr.u32 	%r236, %r231, 1;
	and.b32  	%r237, %r236, 2147483632;
	add.s32 	%r238, %r181, %r237;
	shl.b32 	%r239, %r231, 1;
	add.s32 	%r113, %r238, %r239;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r113 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r240, %r231, 256;
	shr.u32 	%r241, %r240, 1;
	and.b32  	%r242, %r241, 2147483632;
	add.s32 	%r243, %r181, %r242;
	shl.b32 	%r244, %r240, 1;
	add.s32 	%r114, %r243, %r244;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r114 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r245, %r231, 16;
	shl.b32 	%r246, %r245, 1;
	add.s32 	%r115, %r238, %r246;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r115 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r247, %r231, 272;
	shr.u32 	%r248, %r247, 1;
	and.b32  	%r249, %r248, 2147483632;
	add.s32 	%r250, %r181, %r249;
	shl.b32 	%r251, %r247, 1;
	add.s32 	%r116, %r250, %r251;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r116 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r252, %r235, 1;
	and.b32  	%r253, %r252, 1008;
	add.s32 	%r254, %r181, %r253;
	shl.b32 	%r255, %r235, 1;
	add.s32 	%r256, %r254, %r255;
	ld.shared.v4.u32 	{%r117, %r118, %r119, %r120}, [%r256];
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	.loc	1 91 4                          // ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/cp/ccpb2zzzbx3u2cu6wzl2mqefv2xgowmjcqizkmfxe5uwjn33yuei.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 112
.b8 98
.b8 50
.b8 122
.b8 122
.b8 122
.b8 98
.b8 120
.b8 51
.b8 117
.b8 50
.b8 99
.b8 117
.b8 54
.b8 119
.b8 122
.b8 108
.b8 50
.b8 109
.b8 113
.b8 101
.b8 102
.b8 118
.b8 50
.b8 120
.b8 103
.b8 111
.b8 119
.b8 109
.b8 106
.b8 99
.b8 113
.b8 105
.b8 122
.b8 107
.b8 109
.b8 102
.b8 120
.b8 101
.b8 53
.b8 117
.b8 119
.b8 106
.b8 110
.b8 51
.b8 51
.b8 121
.b8 117
.b8 101
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 99
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
