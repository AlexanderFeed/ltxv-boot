//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<134>;
	.reg .b16 	%rs<22>;
	.reg .b32 	%r<3070>;
	.reg .b64 	%rd<172>;
	.loc	1 17 0                          // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:17:0

// %bb.0:
	ld.param.u64 	%rd17, [triton_mm_param_2];
	ld.param.u64 	%rd43, [triton_mm_param_0];
	ld.param.u64 	%rd44, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:40:24
	mov.u32 	%r339, %ctaid.x;
	.loc	1 46 22                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:46:22
	mul.hi.s32 	%r340, %r339, 715827883;
	shr.u32 	%r341, %r340, 31;
	shr.s32 	%r342, %r340, 5;
	add.s32 	%r343, %r342, %r341;
	.loc	1 47 41                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:47:41
	shl.b32 	%r344, %r343, 3;
	.loc	1 47 30                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:47:30
	sub.s32 	%r345, 15, %r344;
	.loc	1 47 50                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:47:50
	min.s32 	%r346, %r345, 8;
	.loc	1 48 40                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:48:40
	rem.s32 	%r347, %r339, %r346;
	.loc	1 48 34                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:48:34
	add.s32 	%r348, %r347, %r344;
	.loc	1 49 19                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:49:19
	mul.lo.s32 	%r349, %r343, 192;
	sub.s32 	%r350, %r339, %r349;
	.loc	1 49 30                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:49:30
	div.s32 	%r351, %r350, %r346;
	.loc	1 51 17                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:51:17
	shl.b32 	%r1, %r348, 8;
	.loc	1 51 40                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r352, %r2, 8;
	and.b32  	%r3, %r2, 16;
	and.b32  	%r353, %r2, 32;
	bfe.u32 	%r354, %r2, 3, 5;
	or.b32  	%r355, %r354, 32;
	or.b32  	%r356, %r354, 64;
	or.b32  	%r357, %r354, 96;
	.loc	1 51 27                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:51:27
	or.b32  	%r358, %r1, %r354;
	or.b32  	%r359, %r1, %r355;
	or.b32  	%r360, %r1, %r356;
	or.b32  	%r361, %r1, %r357;
	or.b32  	%r362, %r358, 128;
	or.b32  	%r363, %r358, 160;
	or.b32  	%r364, %r358, 192;
	or.b32  	%r365, %r358, 224;
	.loc	1 52 17                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:52:17
	shl.b32 	%r4, %r351, 7;
	.loc	1 52 27                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:52:27
	or.b32  	%r366, %r4, %r354;
	or.b32  	%r367, %r4, %r355;
	or.b32  	%r368, %r4, %r356;
	or.b32  	%r369, %r4, %r357;
	.loc	1 54 57                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:54:57
	mul.hi.s32 	%r370, %r358, -1851608123;
	add.s32 	%r371, %r370, %r358;
	shr.u32 	%r372, %r371, 31;
	shr.u32 	%r373, %r371, 11;
	add.s32 	%r374, %r373, %r372;
	mul.lo.s32 	%r375, %r374, 3600;
	sub.s32 	%r376, %r358, %r375;
	mul.hi.s32 	%r377, %r359, -1851608123;
	add.s32 	%r378, %r377, %r359;
	shr.u32 	%r379, %r378, 31;
	shr.u32 	%r380, %r378, 11;
	add.s32 	%r381, %r380, %r379;
	mul.lo.s32 	%r382, %r381, 3600;
	sub.s32 	%r383, %r359, %r382;
	mul.hi.s32 	%r384, %r360, -1851608123;
	add.s32 	%r385, %r384, %r360;
	shr.u32 	%r386, %r385, 31;
	shr.u32 	%r387, %r385, 11;
	add.s32 	%r388, %r387, %r386;
	mul.lo.s32 	%r389, %r388, 3600;
	sub.s32 	%r390, %r360, %r389;
	mul.hi.s32 	%r391, %r361, -1851608123;
	add.s32 	%r392, %r391, %r361;
	shr.u32 	%r393, %r392, 31;
	shr.u32 	%r394, %r392, 11;
	add.s32 	%r395, %r394, %r393;
	mul.lo.s32 	%r396, %r395, 3600;
	sub.s32 	%r397, %r361, %r396;
	mul.hi.s32 	%r398, %r362, -1851608123;
	add.s32 	%r399, %r398, %r362;
	shr.u32 	%r400, %r399, 31;
	shr.u32 	%r401, %r399, 11;
	add.s32 	%r402, %r401, %r400;
	mul.lo.s32 	%r403, %r402, 3600;
	sub.s32 	%r404, %r362, %r403;
	mul.hi.s32 	%r405, %r363, -1851608123;
	add.s32 	%r406, %r405, %r363;
	shr.u32 	%r407, %r406, 31;
	shr.u32 	%r408, %r406, 11;
	add.s32 	%r409, %r408, %r407;
	mul.lo.s32 	%r410, %r409, 3600;
	sub.s32 	%r411, %r363, %r410;
	mul.hi.s32 	%r412, %r364, -1851608123;
	add.s32 	%r413, %r412, %r364;
	shr.u32 	%r414, %r413, 31;
	shr.u32 	%r415, %r413, 11;
	add.s32 	%r416, %r415, %r414;
	mul.lo.s32 	%r417, %r416, 3600;
	sub.s32 	%r418, %r364, %r417;
	mul.hi.s32 	%r419, %r365, -1851608123;
	add.s32 	%r420, %r419, %r365;
	shr.u32 	%r421, %r420, 31;
	shr.u32 	%r422, %r420, 11;
	add.s32 	%r423, %r422, %r421;
	mul.lo.s32 	%r424, %r423, 3600;
	sub.s32 	%r425, %r365, %r424;
	.loc	1 58 57                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:58:57
	mul.hi.s32 	%r426, %r366, 715827883;
	shr.u32 	%r427, %r426, 31;
	shr.u32 	%r428, %r426, 9;
	add.s32 	%r429, %r428, %r427;
	mul.lo.s32 	%r430, %r429, 3072;
	sub.s32 	%r431, %r366, %r430;
	cvt.u16.u32 	%rs1, %r367;
	mul.hi.s16 	%rs2, %rs1, 10923;
	shr.u16 	%rs3, %rs2, 15;
	shr.u16 	%rs4, %rs2, 9;
	add.s16 	%rs5, %rs4, %rs3;
	mul.lo.s16 	%rs6, %rs5, 3072;
	sub.s16 	%rs7, %rs1, %rs6;
	cvt.u16.u32 	%rs8, %r368;
	mul.hi.s16 	%rs9, %rs8, 10923;
	shr.u16 	%rs10, %rs9, 15;
	shr.u16 	%rs11, %rs9, 9;
	add.s16 	%rs12, %rs11, %rs10;
	mul.lo.s16 	%rs13, %rs12, 3072;
	sub.s16 	%rs14, %rs8, %rs13;
	cvt.u16.u32 	%rs15, %r369;
	mul.hi.s16 	%rs16, %rs15, 10923;
	shr.u16 	%rs17, %rs16, 15;
	shr.u16 	%rs18, %rs16, 9;
	add.s16 	%rs19, %rs18, %rs17;
	mul.lo.s16 	%rs20, %rs19, 3072;
	sub.s16 	%rs21, %rs15, %rs20;
	.loc	1 66 30                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:66:30
	shl.b32 	%r432, %r2, 4;
	and.b32  	%r433, %r432, 16;
	and.b32  	%r434, %r432, 32;
	and.b32  	%r435, %r432, 48;
	and.b32  	%r436, %r432, 64;
	and.b32  	%r437, %r432, 112;
	.loc	1 71 31                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:71:31
	mul.lo.s32 	%r438, %r376, 12288;
	mul.lo.s32 	%r439, %r383, 12288;
	mul.lo.s32 	%r440, %r390, 12288;
	mul.lo.s32 	%r441, %r397, 12288;
	mul.lo.s32 	%r442, %r404, 12288;
	mul.lo.s32 	%r443, %r411, 12288;
	mul.lo.s32 	%r444, %r418, 12288;
	mul.lo.s32 	%r445, %r425, 12288;
	.loc	1 77 56                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:56
	mul.lo.s32 	%r446, %r431, 12288;
	mul.wide.s16 	%r447, %rs7, 12288;
	mul.wide.s16 	%r448, %rs14, 12288;
	mul.wide.s16 	%r449, %rs21, 12288;
	.loc	1 71 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:71:25
	or.b32  	%r450, %r438, %r437;
	or.b32  	%r451, %r439, %r437;
	or.b32  	%r452, %r440, %r437;
	or.b32  	%r453, %r441, %r437;
	or.b32  	%r454, %r442, %r437;
	or.b32  	%r455, %r443, %r437;
	or.b32  	%r456, %r444, %r437;
	or.b32  	%r457, %r445, %r437;
	.loc	1 72 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:25
	cvt.s64.s32 	%rd45, %r450;
	add.s64 	%rd18, %rd43, %rd45;
	cvt.s64.s32 	%rd46, %r451;
	add.s64 	%rd19, %rd43, %rd46;
	cvt.s64.s32 	%rd47, %r452;
	add.s64 	%rd20, %rd43, %rd47;
	cvt.s64.s32 	%rd48, %r453;
	add.s64 	%rd21, %rd43, %rd48;
	cvt.s64.s32 	%rd49, %r454;
	add.s64 	%rd22, %rd43, %rd49;
	cvt.s64.s32 	%rd50, %r455;
	add.s64 	%rd23, %rd43, %rd50;
	cvt.s64.s32 	%rd51, %r456;
	add.s64 	%rd24, %rd43, %rd51;
	cvt.s64.s32 	%rd52, %r457;
	add.s64 	%rd25, %rd43, %rd52;
	.loc	1 72 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:20
	shl.b32 	%r5, %r2, 1;
	and.b32  	%r458, %r5, 48;
	xor.b32  	%r6, %r458, %r437;
	shl.b32 	%r459, %r353, 1;
	xor.b32  	%r460, %r6, %r459;
	shl.b32 	%r461, %r354, 7;
	or.b32  	%r8, %r460, %r461;
	mov.u32 	%r462, global_smem;
	add.s32 	%r288, %r462, %r8;
	add.s32 	%r290, %r288, 4096;
	add.s32 	%r292, %r288, 8192;
	add.s32 	%r294, %r288, 12288;
	add.s32 	%r296, %r288, 16384;
	add.s32 	%r298, %r288, 20480;
	add.s32 	%r300, %r288, 24576;
	add.s32 	%r302, %r288, 28672;
	mov.b32 	%r289, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r288 + 0 ], [ %rd18 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r290 + 0 ], [ %rd19 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r292 + 0 ], [ %rd20 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r294 + 0 ], [ %rd21 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r296 + 0 ], [ %rd22 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r298 + 0 ], [ %rd23 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r300 + 0 ], [ %rd24 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r302 + 0 ], [ %rd25 + 0 ], 0x10, %r289;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:50
	or.b32  	%r463, %r446, %r437;
	or.b32  	%r464, %r447, %r437;
	or.b32  	%r465, %r448, %r437;
	or.b32  	%r466, %r449, %r437;
	.loc	1 77 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:25
	cvt.s64.s32 	%rd53, %r463;
	add.s64 	%rd26, %rd44, %rd53;
	cvt.s64.s32 	%rd54, %r464;
	add.s64 	%rd27, %rd44, %rd54;
	cvt.s64.s32 	%rd55, %r465;
	add.s64 	%rd28, %rd44, %rd55;
	cvt.s64.s32 	%rd56, %r466;
	add.s64 	%rd29, %rd44, %rd56;
	.loc	1 77 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:20
	add.s32 	%r304, %r288, 65536;
	add.s32 	%r306, %r288, 69632;
	add.s32 	%r308, %r288, 73728;
	add.s32 	%r310, %r288, 77824;
	// begin inline asm
	cp.async.cg.shared.global [ %r304 + 0 ], [ %rd26 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r306 + 0 ], [ %rd27 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r308 + 0 ], [ %rd28 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r310 + 0 ], [ %rd29 + 0 ], 0x10, %r289;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:25
	cvt.s64.s32 	%rd57, %r438;
	cvt.u64.u32 	%rd58, %r437;
	or.b64  	%rd59, %rd57, %rd58;
	add.s64 	%rd60, %rd43, %rd59;
	add.s64 	%rd30, %rd60, 128;
	cvt.s64.s32 	%rd61, %r439;
	or.b64  	%rd62, %rd61, %rd58;
	add.s64 	%rd63, %rd43, %rd62;
	add.s64 	%rd31, %rd63, 128;
	cvt.s64.s32 	%rd64, %r440;
	or.b64  	%rd65, %rd64, %rd58;
	add.s64 	%rd66, %rd43, %rd65;
	add.s64 	%rd32, %rd66, 128;
	cvt.s64.s32 	%rd67, %r441;
	or.b64  	%rd68, %rd67, %rd58;
	add.s64 	%rd69, %rd43, %rd68;
	add.s64 	%rd33, %rd69, 128;
	cvt.s64.s32 	%rd70, %r442;
	or.b64  	%rd71, %rd70, %rd58;
	add.s64 	%rd72, %rd43, %rd71;
	add.s64 	%rd34, %rd72, 128;
	cvt.s64.s32 	%rd73, %r443;
	or.b64  	%rd74, %rd73, %rd58;
	add.s64 	%rd75, %rd43, %rd74;
	add.s64 	%rd35, %rd75, 128;
	cvt.s64.s32 	%rd76, %r444;
	or.b64  	%rd77, %rd76, %rd58;
	add.s64 	%rd78, %rd43, %rd77;
	add.s64 	%rd36, %rd78, 128;
	cvt.s64.s32 	%rd79, %r445;
	or.b64  	%rd80, %rd79, %rd58;
	add.s64 	%rd81, %rd43, %rd80;
	add.s64 	%rd37, %rd81, 128;
	.loc	1 72 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:20
	bar.sync 	0;
	add.s32 	%r312, %r288, 32768;
	add.s32 	%r314, %r288, 36864;
	add.s32 	%r316, %r288, 40960;
	add.s32 	%r318, %r288, 45056;
	add.s32 	%r320, %r288, 49152;
	add.s32 	%r322, %r288, 53248;
	add.s32 	%r324, %r288, 57344;
	add.s32 	%r326, %r288, 61440;
	// begin inline asm
	cp.async.cg.shared.global [ %r312 + 0 ], [ %rd30 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r314 + 0 ], [ %rd31 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r316 + 0 ], [ %rd32 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r318 + 0 ], [ %rd33 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r320 + 0 ], [ %rd34 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r322 + 0 ], [ %rd35 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r324 + 0 ], [ %rd36 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r326 + 0 ], [ %rd37 + 0 ], 0x10, %r289;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:25
	cvt.s64.s32 	%rd82, %r446;
	or.b64  	%rd83, %rd82, %rd58;
	add.s64 	%rd84, %rd44, %rd83;
	add.s64 	%rd38, %rd84, 128;
	cvt.s64.s32 	%rd85, %r447;
	or.b64  	%rd86, %rd85, %rd58;
	add.s64 	%rd87, %rd44, %rd86;
	add.s64 	%rd39, %rd87, 128;
	cvt.s64.s32 	%rd88, %r448;
	or.b64  	%rd89, %rd88, %rd58;
	add.s64 	%rd90, %rd44, %rd89;
	add.s64 	%rd40, %rd90, 128;
	cvt.s64.s32 	%rd91, %r449;
	or.b64  	%rd92, %rd91, %rd58;
	add.s64 	%rd93, %rd44, %rd92;
	add.s64 	%rd41, %rd93, 128;
	.loc	1 77 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:20
	add.s32 	%r328, %r288, 81920;
	add.s32 	%r330, %r288, 86016;
	add.s32 	%r332, %r288, 90112;
	add.s32 	%r334, %r288, 94208;
	// begin inline asm
	cp.async.cg.shared.global [ %r328 + 0 ], [ %rd38 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r330 + 0 ], [ %rd39 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r332 + 0 ], [ %rd40 + 0 ], 0x10, %r289;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r334 + 0 ], [ %rd41 + 0 ], 0x10, %r289;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:64:26
	or.b32  	%r467, %r436, %r3;
	and.b32  	%r468, %r2, 7;
	and.b32  	%r469, %r2, 15;
	xor.b32  	%r9, %r437, %r3;
	shr.u32 	%r470, %r2, 2;
	and.b32  	%r471, %r470, 16;
	and.b32  	%r472, %r470, 32;
	or.b32  	%r473, %r471, %r469;
	or.b32  	%r474, %r473, %r472;
	shl.b32 	%r10, %r474, 7;
	or.b32  	%r11, %r10, %r9;
	or.b32  	%r475, %r433, 32;
	xor.b32  	%r476, %r475, %r434;
	or.b32  	%r477, %r476, %r436;
	xor.b32  	%r12, %r477, %r3;
	or.b32  	%r13, %r12, %r10;
	or.b32  	%r478, %r435, 64;
	xor.b32  	%r14, %r478, %r467;
	or.b32  	%r15, %r14, %r10;
	or.b32  	%r479, %r433, 96;
	and.b32  	%r480, %r432, 96;
	or.b32  	%r481, %r480, %r3;
	xor.b32  	%r16, %r481, %r479;
	or.b32  	%r17, %r16, %r10;
	or.b32  	%r482, %r468, 64;
	or.b32  	%r483, %r471, %r352;
	or.b32  	%r484, %r483, %r472;
	or.b32  	%r485, %r484, %r482;
	shl.b32 	%r486, %r485, 7;
	or.b32  	%r18, %r486, %r9;
	or.b32  	%r19, %r12, %r486;
	or.b32  	%r20, %r486, %r14;
	or.b32  	%r21, %r16, %r486;
	shr.u32 	%r22, %r353, 2;
	or.b32  	%r487, %r22, %r468;
	shl.b32 	%r23, %r487, 7;
	or.b32  	%r24, %r6, %r23;
	or.b32  	%r488, %r436, %r458;
	xor.b32  	%r25, %r488, %r478;
	or.b32  	%r489, %r482, %r22;
	shl.b32 	%r26, %r489, 7;
	or.b32  	%r27, %r6, %r26;
	add.s64 	%rd1, %rd93, 256;
	add.s64 	%rd2, %rd90, 256;
	add.s64 	%rd3, %rd87, 256;
	add.s64 	%rd4, %rd84, 256;
	add.s64 	%rd5, %rd81, 256;
	add.s64 	%rd6, %rd78, 256;
	add.s64 	%rd7, %rd75, 256;
	add.s64 	%rd8, %rd72, 256;
	add.s64 	%rd9, %rd69, 256;
	add.s64 	%rd10, %rd66, 256;
	add.s64 	%rd11, %rd63, 256;
	add.s64 	%rd12, %rd60, 256;
	mov.b32 	%r2942, 0;
	mov.b32 	%r2941, 1;
	mov.b32 	%r2940, -1;
	mov.b64 	%rd170, 0;
	mov.u64 	%rd171, %rd170;
	mov.u32 	%r2943, %r2942;
	mov.u32 	%r2944, %r2942;
	mov.u32 	%r2945, %r2942;
	mov.u32 	%r2946, %r2942;
	mov.u32 	%r2947, %r2942;
	mov.u32 	%r2948, %r2942;
	mov.u32 	%r2949, %r2942;
	mov.u32 	%r2950, %r2942;
	mov.u32 	%r2951, %r2942;
	mov.u32 	%r2952, %r2942;
	mov.u32 	%r2953, %r2942;
	mov.u32 	%r2954, %r2942;
	mov.u32 	%r2955, %r2942;
	mov.u32 	%r2956, %r2942;
	mov.u32 	%r2957, %r2942;
	mov.u32 	%r2958, %r2942;
	mov.u32 	%r2959, %r2942;
	mov.u32 	%r2960, %r2942;
	mov.u32 	%r2961, %r2942;
	mov.u32 	%r2962, %r2942;
	mov.u32 	%r2963, %r2942;
	mov.u32 	%r2964, %r2942;
	mov.u32 	%r2965, %r2942;
	mov.u32 	%r2966, %r2942;
	mov.u32 	%r2967, %r2942;
	mov.u32 	%r2968, %r2942;
	mov.u32 	%r2969, %r2942;
	mov.u32 	%r2970, %r2942;
	mov.u32 	%r2971, %r2942;
	mov.u32 	%r2972, %r2942;
	mov.u32 	%r2973, %r2942;
	mov.u32 	%r2974, %r2942;
	mov.u32 	%r2975, %r2942;
	mov.u32 	%r2976, %r2942;
	mov.u32 	%r2977, %r2942;
	mov.u32 	%r2978, %r2942;
	mov.u32 	%r2979, %r2942;
	mov.u32 	%r2980, %r2942;
	mov.u32 	%r2981, %r2942;
	mov.u32 	%r2982, %r2942;
	mov.u32 	%r2983, %r2942;
	mov.u32 	%r2984, %r2942;
	mov.u32 	%r2985, %r2942;
	mov.u32 	%r2986, %r2942;
	mov.u32 	%r2987, %r2942;
	mov.u32 	%r2988, %r2942;
	mov.u32 	%r2989, %r2942;
	mov.u32 	%r2990, %r2942;
	mov.u32 	%r2991, %r2942;
	mov.u32 	%r2992, %r2942;
	mov.u32 	%r2993, %r2942;
	mov.u32 	%r2994, %r2942;
	mov.u32 	%r2995, %r2942;
	mov.u32 	%r2996, %r2942;
	mov.u32 	%r2997, %r2942;
	mov.u32 	%r2998, %r2942;
	mov.u32 	%r2999, %r2942;
	mov.u32 	%r3000, %r2942;
	mov.u32 	%r3001, %r2942;
	mov.u32 	%r3002, %r2942;
	mov.u32 	%r3003, %r2942;
	mov.u32 	%r3004, %r2942;
	mov.u32 	%r3005, %r2942;
	mov.u32 	%r3006, %r2942;
	mov.u32 	%r3007, %r2942;
	mov.u32 	%r3008, %r2942;
	mov.u32 	%r3009, %r2942;
	mov.u32 	%r3010, %r2942;
	mov.u32 	%r3011, %r2942;
	mov.u32 	%r3012, %r2942;
	mov.u32 	%r3013, %r2942;
	mov.u32 	%r3014, %r2942;
	mov.u32 	%r3015, %r2942;
	mov.u32 	%r3016, %r2942;
	mov.u32 	%r3017, %r2942;
	mov.u32 	%r3018, %r2942;
	mov.u32 	%r3019, %r2942;
	mov.u32 	%r3020, %r2942;
	mov.u32 	%r3021, %r2942;
	mov.u32 	%r3022, %r2942;
	mov.u32 	%r3023, %r2942;
	mov.u32 	%r3024, %r2942;
	mov.u32 	%r3025, %r2942;
	mov.u32 	%r3026, %r2942;
	mov.u32 	%r3027, %r2942;
	mov.u32 	%r3028, %r2942;
	mov.u32 	%r3029, %r2942;
	mov.u32 	%r3030, %r2942;
	mov.u32 	%r3031, %r2942;
	mov.u32 	%r3032, %r2942;
	mov.u32 	%r3033, %r2942;
	mov.u32 	%r3034, %r2942;
	mov.u32 	%r3035, %r2942;
	mov.u32 	%r3036, %r2942;
	mov.u32 	%r3037, %r2942;
	mov.u32 	%r3038, %r2942;
	mov.u32 	%r3039, %r2942;
	mov.u32 	%r3040, %r2942;
	mov.u32 	%r3041, %r2942;
	mov.u32 	%r3042, %r2942;
	mov.u32 	%r3043, %r2942;
	mov.u32 	%r3044, %r2942;
	mov.u32 	%r3045, %r2942;
	mov.u32 	%r3046, %r2942;
	mov.u32 	%r3047, %r2942;
	mov.u32 	%r3048, %r2942;
	mov.u32 	%r3049, %r2942;
	mov.u32 	%r3050, %r2942;
	mov.u32 	%r3051, %r2942;
	mov.u32 	%r3052, %r2942;
	mov.u32 	%r3053, %r2942;
	mov.u32 	%r3054, %r2942;
	mov.u32 	%r3055, %r2942;
	mov.u32 	%r3056, %r2942;
	mov.u32 	%r3057, %r2942;
	mov.u32 	%r3058, %r2942;
	mov.u32 	%r3059, %r2942;
	mov.u32 	%r3060, %r2942;
	mov.u32 	%r3061, %r2942;
	mov.u32 	%r3062, %r2942;
	mov.u32 	%r3063, %r2942;
	mov.u32 	%r3064, %r2942;
	mov.u32 	%r3065, %r2942;
	mov.u32 	%r3066, %r2942;
	mov.u32 	%r3067, %r2942;
	mov.u32 	%r3068, %r2942;
	mov.u32 	%r3069, %r2942;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd171, 94;
	add.s32 	%r2466, %r2940, 1;
	setp.lt.s32 	%p2, %r2466, 2;
	selp.b32 	%r2940, %r2466, 0, %p2;
	.loc	1 72 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r2467, %r2940, 15;
	add.s32 	%r2469, %r462, %r2467;
	add.s32 	%r494, %r2469, %r11;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r658, %r659, %r660, %r661}, [%r494];
	// end inline asm
	add.s32 	%r499, %r2469, %r13;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1106, %r1107, %r1108, %r1109}, [%r499];
	// end inline asm
	add.s32 	%r504, %r2469, %r15;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1554, %r1555, %r1556, %r1557}, [%r504];
	// end inline asm
	add.s32 	%r509, %r2469, %r17;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2002, %r2003, %r2004, %r2005}, [%r509];
	// end inline asm
	add.s32 	%r514, %r2469, %r18;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r770, %r771, %r772, %r773}, [%r514];
	// end inline asm
	add.s32 	%r519, %r2469, %r19;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1218, %r1219, %r1220, %r1221}, [%r519];
	// end inline asm
	add.s32 	%r524, %r2469, %r20;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1666, %r1667, %r1668, %r1669}, [%r524];
	// end inline asm
	add.s32 	%r529, %r2469, %r21;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2114, %r2115, %r2116, %r2117}, [%r529];
	// end inline asm
	add.s32 	%r2470, %r10, %r9;
	add.s32 	%r2471, %r2469, %r2470;
	add.s32 	%r534, %r2471, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r882, %r883, %r884, %r885}, [%r534];
	// end inline asm
	add.s32 	%r2472, %r12, %r10;
	add.s32 	%r2473, %r2469, %r2472;
	add.s32 	%r539, %r2473, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1330, %r1331, %r1332, %r1333}, [%r539];
	// end inline asm
	add.s32 	%r2474, %r10, %r14;
	add.s32 	%r2475, %r2469, %r2474;
	add.s32 	%r544, %r2475, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1778, %r1779, %r1780, %r1781}, [%r544];
	// end inline asm
	add.s32 	%r2476, %r16, %r10;
	add.s32 	%r2477, %r2469, %r2476;
	add.s32 	%r549, %r2477, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2226, %r2227, %r2228, %r2229}, [%r549];
	// end inline asm
	add.s32 	%r554, %r2471, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r994, %r995, %r996, %r997}, [%r554];
	// end inline asm
	add.s32 	%r559, %r2473, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1442, %r1443, %r1444, %r1445}, [%r559];
	// end inline asm
	add.s32 	%r564, %r2475, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1890, %r1891, %r1892, %r1893}, [%r564];
	// end inline asm
	add.s32 	%r569, %r2477, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r2338, %r2339, %r2340, %r2341}, [%r569];
	// end inline asm
	.loc	1 77 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:20
	shl.b32 	%r2478, %r2940, 14;
	add.s32 	%r2479, %r462, 65536;
	add.s32 	%r2480, %r2479, %r2478;
	add.s32 	%r574, %r2480, %r24;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r662, %r663, %r1110, %r1111}, [%r574];
	// end inline asm
	add.s32 	%r2481, %r2480, %r25;
	add.s32 	%r579, %r2481, %r23;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1558, %r1559, %r2006, %r2007}, [%r579];
	// end inline asm
	add.s32 	%r2482, %r23, %r6;
	add.s32 	%r2483, %r2480, %r2482;
	add.s32 	%r584, %r2483, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r676, %r677, %r1124, %r1125}, [%r584];
	// end inline asm
	add.s32 	%r589, %r579, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1572, %r1573, %r2020, %r2021}, [%r589];
	// end inline asm
	add.s32 	%r594, %r2483, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r690, %r691, %r1138, %r1139}, [%r594];
	// end inline asm
	add.s32 	%r599, %r579, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1586, %r1587, %r2034, %r2035}, [%r599];
	// end inline asm
	add.s32 	%r604, %r2483, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r704, %r705, %r1152, %r1153}, [%r604];
	// end inline asm
	add.s32 	%r609, %r579, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1600, %r1601, %r2048, %r2049}, [%r609];
	// end inline asm
	add.s32 	%r614, %r2480, %r27;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r718, %r719, %r1166, %r1167}, [%r614];
	// end inline asm
	add.s32 	%r619, %r2481, %r26;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1614, %r1615, %r2062, %r2063}, [%r619];
	// end inline asm
	add.s32 	%r624, %r2483, 10240;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r732, %r733, %r1180, %r1181}, [%r624];
	// end inline asm
	add.s32 	%r629, %r579, 10240;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1628, %r1629, %r2076, %r2077}, [%r629];
	// end inline asm
	add.s32 	%r634, %r2483, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r746, %r747, %r1194, %r1195}, [%r634];
	// end inline asm
	add.s32 	%r639, %r579, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1642, %r1643, %r2090, %r2091}, [%r639];
	// end inline asm
	add.s32 	%r644, %r2483, 14336;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r760, %r761, %r1208, %r1209}, [%r644];
	// end inline asm
	add.s32 	%r649, %r579, 14336;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1656, %r1657, %r2104, %r2105}, [%r649];
	// end inline asm
	.loc	1 78 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2942, %r2943, %r2944, %r2945 }, { %r658, %r659, %r660, %r661 }, { %r662, %r663 }, { %r2942, %r2943, %r2944, %r2945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2946, %r2947, %r2948, %r2949 }, { %r658, %r659, %r660, %r661 }, { %r676, %r677 }, { %r2946, %r2947, %r2948, %r2949 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2950, %r2951, %r2952, %r2953 }, { %r658, %r659, %r660, %r661 }, { %r690, %r691 }, { %r2950, %r2951, %r2952, %r2953 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2954, %r2955, %r2956, %r2957 }, { %r658, %r659, %r660, %r661 }, { %r704, %r705 }, { %r2954, %r2955, %r2956, %r2957 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2958, %r2959, %r2960, %r2961 }, { %r658, %r659, %r660, %r661 }, { %r718, %r719 }, { %r2958, %r2959, %r2960, %r2961 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2962, %r2963, %r2964, %r2965 }, { %r658, %r659, %r660, %r661 }, { %r732, %r733 }, { %r2962, %r2963, %r2964, %r2965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2966, %r2967, %r2968, %r2969 }, { %r658, %r659, %r660, %r661 }, { %r746, %r747 }, { %r2966, %r2967, %r2968, %r2969 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2970, %r2971, %r2972, %r2973 }, { %r658, %r659, %r660, %r661 }, { %r760, %r761 }, { %r2970, %r2971, %r2972, %r2973 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2974, %r2975, %r2976, %r2977 }, { %r770, %r771, %r772, %r773 }, { %r662, %r663 }, { %r2974, %r2975, %r2976, %r2977 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2978, %r2979, %r2980, %r2981 }, { %r770, %r771, %r772, %r773 }, { %r676, %r677 }, { %r2978, %r2979, %r2980, %r2981 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2982, %r2983, %r2984, %r2985 }, { %r770, %r771, %r772, %r773 }, { %r690, %r691 }, { %r2982, %r2983, %r2984, %r2985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2986, %r2987, %r2988, %r2989 }, { %r770, %r771, %r772, %r773 }, { %r704, %r705 }, { %r2986, %r2987, %r2988, %r2989 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2990, %r2991, %r2992, %r2993 }, { %r770, %r771, %r772, %r773 }, { %r718, %r719 }, { %r2990, %r2991, %r2992, %r2993 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2994, %r2995, %r2996, %r2997 }, { %r770, %r771, %r772, %r773 }, { %r732, %r733 }, { %r2994, %r2995, %r2996, %r2997 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2998, %r2999, %r3000, %r3001 }, { %r770, %r771, %r772, %r773 }, { %r746, %r747 }, { %r2998, %r2999, %r3000, %r3001 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3002, %r3003, %r3004, %r3005 }, { %r770, %r771, %r772, %r773 }, { %r760, %r761 }, { %r3002, %r3003, %r3004, %r3005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3006, %r3007, %r3008, %r3009 }, { %r882, %r883, %r884, %r885 }, { %r662, %r663 }, { %r3006, %r3007, %r3008, %r3009 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3010, %r3011, %r3012, %r3013 }, { %r882, %r883, %r884, %r885 }, { %r676, %r677 }, { %r3010, %r3011, %r3012, %r3013 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3014, %r3015, %r3016, %r3017 }, { %r882, %r883, %r884, %r885 }, { %r690, %r691 }, { %r3014, %r3015, %r3016, %r3017 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3018, %r3019, %r3020, %r3021 }, { %r882, %r883, %r884, %r885 }, { %r704, %r705 }, { %r3018, %r3019, %r3020, %r3021 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3022, %r3023, %r3024, %r3025 }, { %r882, %r883, %r884, %r885 }, { %r718, %r719 }, { %r3022, %r3023, %r3024, %r3025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3026, %r3027, %r3028, %r3029 }, { %r882, %r883, %r884, %r885 }, { %r732, %r733 }, { %r3026, %r3027, %r3028, %r3029 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3030, %r3031, %r3032, %r3033 }, { %r882, %r883, %r884, %r885 }, { %r746, %r747 }, { %r3030, %r3031, %r3032, %r3033 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3034, %r3035, %r3036, %r3037 }, { %r882, %r883, %r884, %r885 }, { %r760, %r761 }, { %r3034, %r3035, %r3036, %r3037 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3038, %r3039, %r3040, %r3041 }, { %r994, %r995, %r996, %r997 }, { %r662, %r663 }, { %r3038, %r3039, %r3040, %r3041 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3042, %r3043, %r3044, %r3045 }, { %r994, %r995, %r996, %r997 }, { %r676, %r677 }, { %r3042, %r3043, %r3044, %r3045 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3046, %r3047, %r3048, %r3049 }, { %r994, %r995, %r996, %r997 }, { %r690, %r691 }, { %r3046, %r3047, %r3048, %r3049 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3050, %r3051, %r3052, %r3053 }, { %r994, %r995, %r996, %r997 }, { %r704, %r705 }, { %r3050, %r3051, %r3052, %r3053 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3054, %r3055, %r3056, %r3057 }, { %r994, %r995, %r996, %r997 }, { %r718, %r719 }, { %r3054, %r3055, %r3056, %r3057 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3058, %r3059, %r3060, %r3061 }, { %r994, %r995, %r996, %r997 }, { %r732, %r733 }, { %r3058, %r3059, %r3060, %r3061 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3062, %r3063, %r3064, %r3065 }, { %r994, %r995, %r996, %r997 }, { %r746, %r747 }, { %r3062, %r3063, %r3064, %r3065 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3066, %r3067, %r3068, %r3069 }, { %r994, %r995, %r996, %r997 }, { %r760, %r761 }, { %r3066, %r3067, %r3068, %r3069 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2942, %r2943, %r2944, %r2945 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1110, %r1111 }, { %r2942, %r2943, %r2944, %r2945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2946, %r2947, %r2948, %r2949 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1124, %r1125 }, { %r2946, %r2947, %r2948, %r2949 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2950, %r2951, %r2952, %r2953 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1138, %r1139 }, { %r2950, %r2951, %r2952, %r2953 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2954, %r2955, %r2956, %r2957 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1152, %r1153 }, { %r2954, %r2955, %r2956, %r2957 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2958, %r2959, %r2960, %r2961 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1166, %r1167 }, { %r2958, %r2959, %r2960, %r2961 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2962, %r2963, %r2964, %r2965 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1180, %r1181 }, { %r2962, %r2963, %r2964, %r2965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2966, %r2967, %r2968, %r2969 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1194, %r1195 }, { %r2966, %r2967, %r2968, %r2969 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2970, %r2971, %r2972, %r2973 }, { %r1106, %r1107, %r1108, %r1109 }, { %r1208, %r1209 }, { %r2970, %r2971, %r2972, %r2973 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2974, %r2975, %r2976, %r2977 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1110, %r1111 }, { %r2974, %r2975, %r2976, %r2977 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2978, %r2979, %r2980, %r2981 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1124, %r1125 }, { %r2978, %r2979, %r2980, %r2981 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2982, %r2983, %r2984, %r2985 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1138, %r1139 }, { %r2982, %r2983, %r2984, %r2985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2986, %r2987, %r2988, %r2989 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1152, %r1153 }, { %r2986, %r2987, %r2988, %r2989 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2990, %r2991, %r2992, %r2993 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1166, %r1167 }, { %r2990, %r2991, %r2992, %r2993 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2994, %r2995, %r2996, %r2997 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1180, %r1181 }, { %r2994, %r2995, %r2996, %r2997 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2998, %r2999, %r3000, %r3001 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1194, %r1195 }, { %r2998, %r2999, %r3000, %r3001 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3002, %r3003, %r3004, %r3005 }, { %r1218, %r1219, %r1220, %r1221 }, { %r1208, %r1209 }, { %r3002, %r3003, %r3004, %r3005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3006, %r3007, %r3008, %r3009 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1110, %r1111 }, { %r3006, %r3007, %r3008, %r3009 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3010, %r3011, %r3012, %r3013 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1124, %r1125 }, { %r3010, %r3011, %r3012, %r3013 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3014, %r3015, %r3016, %r3017 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1138, %r1139 }, { %r3014, %r3015, %r3016, %r3017 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3018, %r3019, %r3020, %r3021 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1152, %r1153 }, { %r3018, %r3019, %r3020, %r3021 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3022, %r3023, %r3024, %r3025 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1166, %r1167 }, { %r3022, %r3023, %r3024, %r3025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3026, %r3027, %r3028, %r3029 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1180, %r1181 }, { %r3026, %r3027, %r3028, %r3029 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3030, %r3031, %r3032, %r3033 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1194, %r1195 }, { %r3030, %r3031, %r3032, %r3033 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3034, %r3035, %r3036, %r3037 }, { %r1330, %r1331, %r1332, %r1333 }, { %r1208, %r1209 }, { %r3034, %r3035, %r3036, %r3037 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3038, %r3039, %r3040, %r3041 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1110, %r1111 }, { %r3038, %r3039, %r3040, %r3041 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3042, %r3043, %r3044, %r3045 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1124, %r1125 }, { %r3042, %r3043, %r3044, %r3045 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3046, %r3047, %r3048, %r3049 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1138, %r1139 }, { %r3046, %r3047, %r3048, %r3049 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3050, %r3051, %r3052, %r3053 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1152, %r1153 }, { %r3050, %r3051, %r3052, %r3053 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3054, %r3055, %r3056, %r3057 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1166, %r1167 }, { %r3054, %r3055, %r3056, %r3057 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3058, %r3059, %r3060, %r3061 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1180, %r1181 }, { %r3058, %r3059, %r3060, %r3061 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3062, %r3063, %r3064, %r3065 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1194, %r1195 }, { %r3062, %r3063, %r3064, %r3065 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3066, %r3067, %r3068, %r3069 }, { %r1442, %r1443, %r1444, %r1445 }, { %r1208, %r1209 }, { %r3066, %r3067, %r3068, %r3069 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2942, %r2943, %r2944, %r2945 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1558, %r1559 }, { %r2942, %r2943, %r2944, %r2945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2946, %r2947, %r2948, %r2949 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1572, %r1573 }, { %r2946, %r2947, %r2948, %r2949 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2950, %r2951, %r2952, %r2953 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1586, %r1587 }, { %r2950, %r2951, %r2952, %r2953 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2954, %r2955, %r2956, %r2957 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1600, %r1601 }, { %r2954, %r2955, %r2956, %r2957 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2958, %r2959, %r2960, %r2961 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1614, %r1615 }, { %r2958, %r2959, %r2960, %r2961 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2962, %r2963, %r2964, %r2965 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1628, %r1629 }, { %r2962, %r2963, %r2964, %r2965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2966, %r2967, %r2968, %r2969 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1642, %r1643 }, { %r2966, %r2967, %r2968, %r2969 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2970, %r2971, %r2972, %r2973 }, { %r1554, %r1555, %r1556, %r1557 }, { %r1656, %r1657 }, { %r2970, %r2971, %r2972, %r2973 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2974, %r2975, %r2976, %r2977 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1558, %r1559 }, { %r2974, %r2975, %r2976, %r2977 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2978, %r2979, %r2980, %r2981 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1572, %r1573 }, { %r2978, %r2979, %r2980, %r2981 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2982, %r2983, %r2984, %r2985 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1586, %r1587 }, { %r2982, %r2983, %r2984, %r2985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2986, %r2987, %r2988, %r2989 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1600, %r1601 }, { %r2986, %r2987, %r2988, %r2989 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2990, %r2991, %r2992, %r2993 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1614, %r1615 }, { %r2990, %r2991, %r2992, %r2993 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2994, %r2995, %r2996, %r2997 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1628, %r1629 }, { %r2994, %r2995, %r2996, %r2997 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2998, %r2999, %r3000, %r3001 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1642, %r1643 }, { %r2998, %r2999, %r3000, %r3001 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3002, %r3003, %r3004, %r3005 }, { %r1666, %r1667, %r1668, %r1669 }, { %r1656, %r1657 }, { %r3002, %r3003, %r3004, %r3005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3006, %r3007, %r3008, %r3009 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1558, %r1559 }, { %r3006, %r3007, %r3008, %r3009 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3010, %r3011, %r3012, %r3013 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1572, %r1573 }, { %r3010, %r3011, %r3012, %r3013 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3014, %r3015, %r3016, %r3017 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1586, %r1587 }, { %r3014, %r3015, %r3016, %r3017 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3018, %r3019, %r3020, %r3021 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1600, %r1601 }, { %r3018, %r3019, %r3020, %r3021 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3022, %r3023, %r3024, %r3025 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1614, %r1615 }, { %r3022, %r3023, %r3024, %r3025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3026, %r3027, %r3028, %r3029 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1628, %r1629 }, { %r3026, %r3027, %r3028, %r3029 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3030, %r3031, %r3032, %r3033 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1642, %r1643 }, { %r3030, %r3031, %r3032, %r3033 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3034, %r3035, %r3036, %r3037 }, { %r1778, %r1779, %r1780, %r1781 }, { %r1656, %r1657 }, { %r3034, %r3035, %r3036, %r3037 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3038, %r3039, %r3040, %r3041 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1558, %r1559 }, { %r3038, %r3039, %r3040, %r3041 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3042, %r3043, %r3044, %r3045 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1572, %r1573 }, { %r3042, %r3043, %r3044, %r3045 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3046, %r3047, %r3048, %r3049 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1586, %r1587 }, { %r3046, %r3047, %r3048, %r3049 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3050, %r3051, %r3052, %r3053 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1600, %r1601 }, { %r3050, %r3051, %r3052, %r3053 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3054, %r3055, %r3056, %r3057 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1614, %r1615 }, { %r3054, %r3055, %r3056, %r3057 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3058, %r3059, %r3060, %r3061 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1628, %r1629 }, { %r3058, %r3059, %r3060, %r3061 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3062, %r3063, %r3064, %r3065 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1642, %r1643 }, { %r3062, %r3063, %r3064, %r3065 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3066, %r3067, %r3068, %r3069 }, { %r1890, %r1891, %r1892, %r1893 }, { %r1656, %r1657 }, { %r3066, %r3067, %r3068, %r3069 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2942, %r2943, %r2944, %r2945 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2006, %r2007 }, { %r2942, %r2943, %r2944, %r2945 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2946, %r2947, %r2948, %r2949 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2020, %r2021 }, { %r2946, %r2947, %r2948, %r2949 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2950, %r2951, %r2952, %r2953 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2034, %r2035 }, { %r2950, %r2951, %r2952, %r2953 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2954, %r2955, %r2956, %r2957 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2048, %r2049 }, { %r2954, %r2955, %r2956, %r2957 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2958, %r2959, %r2960, %r2961 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2062, %r2063 }, { %r2958, %r2959, %r2960, %r2961 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2962, %r2963, %r2964, %r2965 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2076, %r2077 }, { %r2962, %r2963, %r2964, %r2965 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2966, %r2967, %r2968, %r2969 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2090, %r2091 }, { %r2966, %r2967, %r2968, %r2969 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2970, %r2971, %r2972, %r2973 }, { %r2002, %r2003, %r2004, %r2005 }, { %r2104, %r2105 }, { %r2970, %r2971, %r2972, %r2973 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2974, %r2975, %r2976, %r2977 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2006, %r2007 }, { %r2974, %r2975, %r2976, %r2977 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2978, %r2979, %r2980, %r2981 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2020, %r2021 }, { %r2978, %r2979, %r2980, %r2981 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2982, %r2983, %r2984, %r2985 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2034, %r2035 }, { %r2982, %r2983, %r2984, %r2985 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2986, %r2987, %r2988, %r2989 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2048, %r2049 }, { %r2986, %r2987, %r2988, %r2989 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2990, %r2991, %r2992, %r2993 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2062, %r2063 }, { %r2990, %r2991, %r2992, %r2993 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2994, %r2995, %r2996, %r2997 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2076, %r2077 }, { %r2994, %r2995, %r2996, %r2997 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r2998, %r2999, %r3000, %r3001 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2090, %r2091 }, { %r2998, %r2999, %r3000, %r3001 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3002, %r3003, %r3004, %r3005 }, { %r2114, %r2115, %r2116, %r2117 }, { %r2104, %r2105 }, { %r3002, %r3003, %r3004, %r3005 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3006, %r3007, %r3008, %r3009 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2006, %r2007 }, { %r3006, %r3007, %r3008, %r3009 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3010, %r3011, %r3012, %r3013 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2020, %r2021 }, { %r3010, %r3011, %r3012, %r3013 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3014, %r3015, %r3016, %r3017 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2034, %r2035 }, { %r3014, %r3015, %r3016, %r3017 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3018, %r3019, %r3020, %r3021 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2048, %r2049 }, { %r3018, %r3019, %r3020, %r3021 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3022, %r3023, %r3024, %r3025 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2062, %r2063 }, { %r3022, %r3023, %r3024, %r3025 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3026, %r3027, %r3028, %r3029 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2076, %r2077 }, { %r3026, %r3027, %r3028, %r3029 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3030, %r3031, %r3032, %r3033 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2090, %r2091 }, { %r3030, %r3031, %r3032, %r3033 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3034, %r3035, %r3036, %r3037 }, { %r2226, %r2227, %r2228, %r2229 }, { %r2104, %r2105 }, { %r3034, %r3035, %r3036, %r3037 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3038, %r3039, %r3040, %r3041 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2006, %r2007 }, { %r3038, %r3039, %r3040, %r3041 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3042, %r3043, %r3044, %r3045 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2020, %r2021 }, { %r3042, %r3043, %r3044, %r3045 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3046, %r3047, %r3048, %r3049 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2034, %r2035 }, { %r3046, %r3047, %r3048, %r3049 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3050, %r3051, %r3052, %r3053 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2048, %r2049 }, { %r3050, %r3051, %r3052, %r3053 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3054, %r3055, %r3056, %r3057 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2062, %r2063 }, { %r3054, %r3055, %r3056, %r3057 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3058, %r3059, %r3060, %r3061 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2076, %r2077 }, { %r3058, %r3059, %r3060, %r3061 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3062, %r3063, %r3064, %r3065 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2090, %r2091 }, { %r3062, %r3063, %r3064, %r3065 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r3066, %r3067, %r3068, %r3069 }, { %r2338, %r2339, %r2340, %r2341 }, { %r2104, %r2105 }, { %r3066, %r3067, %r3068, %r3069 };
	// end inline asm
	.loc	1 64 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:64:26
	add.s32 	%r2484, %r2941, 1;
	setp.lt.s32 	%p3, %r2484, 2;
	selp.b32 	%r2941, %r2484, 0, %p3;
	.loc	1 72 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:25
	add.s64 	%rd94, %rd12, %rd170;
	add.s64 	%rd95, %rd11, %rd170;
	add.s64 	%rd96, %rd10, %rd170;
	add.s64 	%rd97, %rd9, %rd170;
	add.s64 	%rd98, %rd8, %rd170;
	add.s64 	%rd99, %rd7, %rd170;
	add.s64 	%rd100, %rd6, %rd170;
	.loc	1 72 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:72:20
	add.s64 	%rd101, %rd5, %rd170;
	shl.b32 	%r2485, %r2941, 15;
	add.s32 	%r2486, %r462, %r2485;
	bar.sync 	0;
	add.s32 	%r2442, %r2486, %r8;
	add.s32 	%r2444, %r2442, 4096;
	add.s32 	%r2446, %r2442, 8192;
	add.s32 	%r2448, %r2442, 12288;
	add.s32 	%r2450, %r2442, 16384;
	add.s32 	%r2452, %r2442, 20480;
	add.s32 	%r2454, %r2442, 24576;
	add.s32 	%r2456, %r2442, 28672;
	selp.b32 	%r2443, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r2442 + 0 ], [ %rd94 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2444 + 0 ], [ %rd95 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2446 + 0 ], [ %rd96 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2448 + 0 ], [ %rd97 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2450 + 0 ], [ %rd98 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2452 + 0 ], [ %rd99 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2454 + 0 ], [ %rd100 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2456 + 0 ], [ %rd101 + 0 ], 0x10, %r2443;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:25
	add.s64 	%rd102, %rd4, %rd170;
	add.s64 	%rd103, %rd3, %rd170;
	add.s64 	%rd104, %rd2, %rd170;
	.loc	1 77 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:77:20
	add.s64 	%rd105, %rd1, %rd170;
	shl.b32 	%r2488, %r2941, 14;
	add.s32 	%r2489, %r2479, %r2488;
	add.s32 	%r2458, %r2489, %r8;
	add.s32 	%r2460, %r2458, 4096;
	add.s32 	%r2462, %r2458, 8192;
	add.s32 	%r2464, %r2458, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r2458 + 0 ], [ %rd102 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2460 + 0 ], [ %rd103 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2462 + 0 ], [ %rd104 + 0 ], 0x10, %r2443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2464 + 0 ], [ %rd105 + 0 ], 0x10, %r2443;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:64:26
	add.s64 	%rd171, %rd171, 1;
	add.s64 	%rd170, %rd170, 128;
	setp.ne.s64 	%p4, %rd170, 12288;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:52:40
	shl.b32 	%r2811, %r2, 2;
	and.b32  	%r2812, %r2811, 124;
	.loc	1 52 27                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:52:27
	or.b32  	%r2813, %r4, %r2812;
	.loc	1 51 40                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:51:40
	bfe.u32 	%r2814, %r2, 5, 3;
	.loc	1 51 27                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:51:27
	or.b32  	%r2815, %r2814, %r1;
	or.b32  	%r2816, %r2815, 248;
	or.b32  	%r2817, %r2815, 240;
	or.b32  	%r2818, %r2815, 232;
	or.b32  	%r2819, %r2815, 224;
	or.b32  	%r2820, %r2815, 216;
	or.b32  	%r2821, %r2815, 208;
	or.b32  	%r2822, %r2815, 200;
	or.b32  	%r2823, %r2815, 192;
	or.b32  	%r2824, %r2815, 184;
	or.b32  	%r2825, %r2815, 176;
	or.b32  	%r2826, %r2815, 168;
	or.b32  	%r2827, %r2815, 160;
	or.b32  	%r2828, %r2815, 152;
	or.b32  	%r2829, %r2815, 144;
	or.b32  	%r2830, %r2815, 136;
	or.b32  	%r2831, %r2815, 128;
	or.b32  	%r2832, %r2815, 120;
	or.b32  	%r2833, %r2815, 112;
	or.b32  	%r2834, %r2815, 104;
	or.b32  	%r2835, %r2815, 96;
	or.b32  	%r2836, %r2815, 88;
	or.b32  	%r2837, %r2815, 80;
	or.b32  	%r2838, %r2815, 72;
	or.b32  	%r2839, %r2815, 64;
	or.b32  	%r2840, %r2815, 56;
	or.b32  	%r2841, %r2815, 48;
	or.b32  	%r2842, %r2815, 40;
	or.b32  	%r2843, %r2815, 32;
	or.b32  	%r2844, %r2815, 24;
	or.b32  	%r2845, %r2815, 16;
	or.b32  	%r2846, %r2815, 8;
	.loc	1 64 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:85:20
	setp.lt.s32 	%p101, %r2815, 3600;
	setp.lt.s32 	%p102, %r2846, 3600;
	setp.lt.s32 	%p103, %r2845, 3600;
	setp.lt.s32 	%p104, %r2844, 3600;
	setp.lt.s32 	%p105, %r2843, 3600;
	setp.lt.s32 	%p106, %r2842, 3600;
	setp.lt.s32 	%p107, %r2841, 3600;
	setp.lt.s32 	%p108, %r2840, 3600;
	setp.lt.s32 	%p109, %r2839, 3600;
	setp.lt.s32 	%p110, %r2838, 3600;
	setp.lt.s32 	%p111, %r2837, 3600;
	setp.lt.s32 	%p112, %r2836, 3600;
	setp.lt.s32 	%p113, %r2835, 3600;
	setp.lt.s32 	%p114, %r2834, 3600;
	setp.lt.s32 	%p115, %r2833, 3600;
	setp.lt.s32 	%p116, %r2832, 3600;
	setp.lt.s32 	%p117, %r2831, 3600;
	setp.lt.s32 	%p118, %r2830, 3600;
	setp.lt.s32 	%p119, %r2829, 3600;
	setp.lt.s32 	%p120, %r2828, 3600;
	setp.lt.s32 	%p121, %r2827, 3600;
	setp.lt.s32 	%p122, %r2826, 3600;
	setp.lt.s32 	%p123, %r2825, 3600;
	setp.lt.s32 	%p124, %r2824, 3600;
	setp.lt.s32 	%p125, %r2823, 3600;
	setp.lt.s32 	%p126, %r2822, 3600;
	setp.lt.s32 	%p127, %r2821, 3600;
	setp.lt.s32 	%p128, %r2820, 3600;
	setp.lt.s32 	%p129, %r2819, 3600;
	setp.lt.s32 	%p130, %r2818, 3600;
	setp.lt.s32 	%p131, %r2817, 3600;
	setp.lt.s32 	%p132, %r2816, 3600;
	.loc	1 85 34                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:85:34
	setp.lt.s32 	%p133, %r2813, 3072;
	.loc	1 85 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:85:26
	and.pred  	%p69, %p101, %p133;
	and.pred  	%p70, %p102, %p133;
	and.pred  	%p71, %p103, %p133;
	and.pred  	%p72, %p104, %p133;
	and.pred  	%p73, %p105, %p133;
	and.pred  	%p74, %p106, %p133;
	and.pred  	%p75, %p107, %p133;
	and.pred  	%p76, %p108, %p133;
	and.pred  	%p77, %p109, %p133;
	and.pred  	%p78, %p110, %p133;
	and.pred  	%p79, %p111, %p133;
	and.pred  	%p80, %p112, %p133;
	and.pred  	%p81, %p113, %p133;
	and.pred  	%p82, %p114, %p133;
	and.pred  	%p83, %p115, %p133;
	and.pred  	%p84, %p116, %p133;
	and.pred  	%p85, %p117, %p133;
	and.pred  	%p86, %p118, %p133;
	and.pred  	%p87, %p119, %p133;
	and.pred  	%p88, %p120, %p133;
	and.pred  	%p89, %p121, %p133;
	and.pred  	%p90, %p122, %p133;
	and.pred  	%p91, %p123, %p133;
	and.pred  	%p92, %p124, %p133;
	and.pred  	%p93, %p125, %p133;
	and.pred  	%p94, %p126, %p133;
	and.pred  	%p95, %p127, %p133;
	and.pred  	%p96, %p128, %p133;
	and.pred  	%p97, %p129, %p133;
	and.pred  	%p98, %p130, %p133;
	and.pred  	%p99, %p131, %p133;
	and.pred  	%p100, %p132, %p133;
	.loc	1 88 26                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:88:26
	mad.lo.s32 	%r2847, %r2815, 3072, %r2813;
	add.s32 	%r2848, %r2847, 24576;
	add.s32 	%r2849, %r2847, 49152;
	add.s32 	%r2850, %r2847, 73728;
	add.s32 	%r2851, %r2847, 98304;
	add.s32 	%r2852, %r2847, 122880;
	add.s32 	%r2853, %r2847, 147456;
	add.s32 	%r2854, %r2847, 172032;
	add.s32 	%r2855, %r2847, 196608;
	add.s32 	%r2856, %r2847, 221184;
	add.s32 	%r2857, %r2847, 245760;
	add.s32 	%r2858, %r2847, 270336;
	add.s32 	%r2859, %r2847, 294912;
	add.s32 	%r2860, %r2847, 319488;
	add.s32 	%r2861, %r2847, 344064;
	add.s32 	%r2862, %r2847, 368640;
	add.s32 	%r2863, %r2847, 393216;
	add.s32 	%r2864, %r2847, 417792;
	add.s32 	%r2865, %r2847, 442368;
	add.s32 	%r2866, %r2847, 466944;
	add.s32 	%r2867, %r2847, 491520;
	add.s32 	%r2868, %r2847, 516096;
	add.s32 	%r2869, %r2847, 540672;
	add.s32 	%r2870, %r2847, 565248;
	add.s32 	%r2871, %r2847, 589824;
	add.s32 	%r2872, %r2847, 614400;
	add.s32 	%r2873, %r2847, 638976;
	add.s32 	%r2874, %r2847, 663552;
	add.s32 	%r2875, %r2847, 688128;
	add.s32 	%r2876, %r2847, 712704;
	add.s32 	%r2877, %r2847, 737280;
	.loc	1 88 21                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:88:21
	add.s32 	%r2878, %r2847, 761856;
	.loc	1 89 25                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:89:25
	mul.wide.s32 	%rd138, %r2847, 4;
	add.s64 	%rd106, %rd17, %rd138;
	mul.wide.s32 	%rd139, %r2848, 4;
	add.s64 	%rd107, %rd17, %rd139;
	mul.wide.s32 	%rd140, %r2849, 4;
	add.s64 	%rd108, %rd17, %rd140;
	mul.wide.s32 	%rd141, %r2850, 4;
	add.s64 	%rd109, %rd17, %rd141;
	mul.wide.s32 	%rd142, %r2851, 4;
	add.s64 	%rd110, %rd17, %rd142;
	mul.wide.s32 	%rd143, %r2852, 4;
	add.s64 	%rd111, %rd17, %rd143;
	mul.wide.s32 	%rd144, %r2853, 4;
	add.s64 	%rd112, %rd17, %rd144;
	mul.wide.s32 	%rd145, %r2854, 4;
	add.s64 	%rd113, %rd17, %rd145;
	mul.wide.s32 	%rd146, %r2855, 4;
	add.s64 	%rd114, %rd17, %rd146;
	mul.wide.s32 	%rd147, %r2856, 4;
	add.s64 	%rd115, %rd17, %rd147;
	mul.wide.s32 	%rd148, %r2857, 4;
	add.s64 	%rd116, %rd17, %rd148;
	mul.wide.s32 	%rd149, %r2858, 4;
	add.s64 	%rd117, %rd17, %rd149;
	mul.wide.s32 	%rd150, %r2859, 4;
	add.s64 	%rd118, %rd17, %rd150;
	mul.wide.s32 	%rd151, %r2860, 4;
	add.s64 	%rd119, %rd17, %rd151;
	mul.wide.s32 	%rd152, %r2861, 4;
	add.s64 	%rd120, %rd17, %rd152;
	mul.wide.s32 	%rd153, %r2862, 4;
	add.s64 	%rd121, %rd17, %rd153;
	mul.wide.s32 	%rd154, %r2863, 4;
	add.s64 	%rd122, %rd17, %rd154;
	mul.wide.s32 	%rd155, %r2864, 4;
	add.s64 	%rd123, %rd17, %rd155;
	mul.wide.s32 	%rd156, %r2865, 4;
	add.s64 	%rd124, %rd17, %rd156;
	mul.wide.s32 	%rd157, %r2866, 4;
	add.s64 	%rd125, %rd17, %rd157;
	mul.wide.s32 	%rd158, %r2867, 4;
	add.s64 	%rd126, %rd17, %rd158;
	mul.wide.s32 	%rd159, %r2868, 4;
	add.s64 	%rd127, %rd17, %rd159;
	mul.wide.s32 	%rd160, %r2869, 4;
	add.s64 	%rd128, %rd17, %rd160;
	mul.wide.s32 	%rd161, %r2870, 4;
	add.s64 	%rd129, %rd17, %rd161;
	mul.wide.s32 	%rd162, %r2871, 4;
	add.s64 	%rd130, %rd17, %rd162;
	mul.wide.s32 	%rd163, %r2872, 4;
	add.s64 	%rd131, %rd17, %rd163;
	mul.wide.s32 	%rd164, %r2873, 4;
	add.s64 	%rd132, %rd17, %rd164;
	mul.wide.s32 	%rd165, %r2874, 4;
	add.s64 	%rd133, %rd17, %rd165;
	mul.wide.s32 	%rd166, %r2875, 4;
	add.s64 	%rd134, %rd17, %rd166;
	mul.wide.s32 	%rd167, %r2876, 4;
	add.s64 	%rd135, %rd17, %rd167;
	mul.wide.s32 	%rd168, %r2877, 4;
	add.s64 	%rd136, %rd17, %rd168;
	mul.wide.s32 	%rd169, %r2878, 4;
	add.s64 	%rd137, %rd17, %rd169;
	.loc	1 89 67                         // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:89:67
	and.b32  	%r2879, %r5, 6;
	shl.b32 	%r2880, %r2, 5;
	and.b32  	%r2881, %r2880, 384;
	or.b32  	%r2882, %r2881, %r2879;
	shl.b32 	%r2883, %r3, 5;
	or.b32  	%r2884, %r2882, %r2883;
	and.b32  	%r2885, %r2880, 6144;
	or.b32  	%r2886, %r2884, %r2885;
	or.b32  	%r2887, %r2886, %r22;
	and.b32  	%r2888, %r2811, 1020;
	shr.u32 	%r2889, %r2886, 3;
	add.s32 	%r2891, %r462, %r2889;
	shl.b32 	%r2892, %r2887, 2;
	add.s32 	%r2491, %r2891, %r2892;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2491 + 0 ], { %r2942, %r2943 };
	// end inline asm
	or.b32  	%r2893, %r2886, 1024;
	shr.u32 	%r2894, %r2893, 3;
	add.s32 	%r2895, %r462, %r2894;
	add.s32 	%r2896, %r2895, %r2892;
	add.s32 	%r2494, %r2896, 4096;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2494 + 0 ], { %r2944, %r2945 };
	// end inline asm
	add.s32 	%r2497, %r2491, 64;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2497 + 0 ], { %r2946, %r2947 };
	// end inline asm
	add.s32 	%r2500, %r2896, 4160;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2500 + 0 ], { %r2948, %r2949 };
	// end inline asm
	add.s32 	%r2503, %r2491, 128;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2503 + 0 ], { %r2950, %r2951 };
	// end inline asm
	and.b32  	%r2897, %r2894, 1008;
	add.s32 	%r2898, %r462, %r2897;
	add.s32 	%r2899, %r2898, %r2892;
	add.s32 	%r2506, %r2899, 4224;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2506 + 0 ], { %r2952, %r2953 };
	// end inline asm
	add.s32 	%r2509, %r2491, 192;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2509 + 0 ], { %r2954, %r2955 };
	// end inline asm
	add.s32 	%r2512, %r2899, 4288;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2512 + 0 ], { %r2956, %r2957 };
	// end inline asm
	add.s32 	%r2515, %r2491, 256;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2515 + 0 ], { %r2958, %r2959 };
	// end inline asm
	add.s32 	%r2518, %r2899, 4352;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2518 + 0 ], { %r2960, %r2961 };
	// end inline asm
	add.s32 	%r2521, %r2491, 320;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2521 + 0 ], { %r2962, %r2963 };
	// end inline asm
	add.s32 	%r2524, %r2899, 4416;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2524 + 0 ], { %r2964, %r2965 };
	// end inline asm
	add.s32 	%r2527, %r2491, 384;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2527 + 0 ], { %r2966, %r2967 };
	// end inline asm
	add.s32 	%r2530, %r2899, 4480;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2530 + 0 ], { %r2968, %r2969 };
	// end inline asm
	add.s32 	%r2533, %r2491, 448;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2533 + 0 ], { %r2970, %r2971 };
	// end inline asm
	add.s32 	%r2536, %r2899, 4544;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2536 + 0 ], { %r2972, %r2973 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r2900, %r2, 1;
	and.b32  	%r2901, %r2900, 112;
	add.s32 	%r2902, %r462, %r2901;
	shl.b32 	%r2903, %r2888, 2;
	add.s32 	%r2904, %r2902, %r2903;
	ld.shared.v4.u32 	{%r2683, %r2684, %r2685, %r2686}, [%r2904];
	or.b32  	%r2905, %r2888, 1024;
	shr.u32 	%r2906, %r2905, 3;
	and.b32  	%r2907, %r2906, 240;
	add.s32 	%r2908, %r462, %r2907;
	add.s32 	%r2909, %r2908, %r2903;
	ld.shared.v4.u32 	{%r2687, %r2688, %r2689, %r2690}, [%r2909+4096];
	or.b32  	%r2910, %r2888, 2048;
	shr.u32 	%r2911, %r2910, 3;
	and.b32  	%r2912, %r2911, 368;
	add.s32 	%r2913, %r462, %r2912;
	add.s32 	%r2914, %r2913, %r2903;
	ld.shared.v4.u32 	{%r2691, %r2692, %r2693, %r2694}, [%r2914+8192];
	or.b32  	%r2915, %r2888, 3072;
	shr.u32 	%r2916, %r2915, 3;
	and.b32  	%r2917, %r2916, 496;
	add.s32 	%r2918, %r462, %r2917;
	add.s32 	%r2919, %r2918, %r2903;
	ld.shared.v4.u32 	{%r2695, %r2696, %r2697, %r2698}, [%r2919+12288];
	or.b32  	%r2920, %r2888, 4096;
	shr.u32 	%r2921, %r2920, 3;
	and.b32  	%r2922, %r2921, 624;
	add.s32 	%r2923, %r462, %r2922;
	add.s32 	%r2924, %r2923, %r2903;
	ld.shared.v4.u32 	{%r2699, %r2700, %r2701, %r2702}, [%r2924+16384];
	or.b32  	%r2925, %r2888, 5120;
	shr.u32 	%r2926, %r2925, 3;
	and.b32  	%r2927, %r2926, 752;
	add.s32 	%r2928, %r462, %r2927;
	add.s32 	%r2929, %r2928, %r2903;
	ld.shared.v4.u32 	{%r2703, %r2704, %r2705, %r2706}, [%r2929+20480];
	or.b32  	%r2930, %r2888, 6144;
	shr.u32 	%r2931, %r2930, 3;
	and.b32  	%r2932, %r2931, 880;
	add.s32 	%r2933, %r462, %r2932;
	add.s32 	%r2934, %r2933, %r2903;
	ld.shared.v4.u32 	{%r2707, %r2708, %r2709, %r2710}, [%r2934+24576];
	or.b32  	%r2935, %r2888, 7168;
	shr.u32 	%r2936, %r2935, 3;
	and.b32  	%r2937, %r2936, 1008;
	add.s32 	%r2938, %r462, %r2937;
	add.s32 	%r2939, %r2938, %r2903;
	ld.shared.v4.u32 	{%r2711, %r2712, %r2713, %r2714}, [%r2939+28672];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2491 + 0 ], { %r2974, %r2975 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2494 + 0 ], { %r2976, %r2977 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2497 + 0 ], { %r2978, %r2979 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2500 + 0 ], { %r2980, %r2981 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2503 + 0 ], { %r2982, %r2983 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2506 + 0 ], { %r2984, %r2985 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2509 + 0 ], { %r2986, %r2987 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2512 + 0 ], { %r2988, %r2989 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2515 + 0 ], { %r2990, %r2991 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2518 + 0 ], { %r2992, %r2993 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2521 + 0 ], { %r2994, %r2995 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2524 + 0 ], { %r2996, %r2997 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2527 + 0 ], { %r2998, %r2999 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2530 + 0 ], { %r3000, %r3001 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2533 + 0 ], { %r3002, %r3003 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2536 + 0 ], { %r3004, %r3005 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2715, %r2716, %r2717, %r2718}, [%r2904];
	ld.shared.v4.u32 	{%r2719, %r2720, %r2721, %r2722}, [%r2909+4096];
	ld.shared.v4.u32 	{%r2723, %r2724, %r2725, %r2726}, [%r2914+8192];
	ld.shared.v4.u32 	{%r2727, %r2728, %r2729, %r2730}, [%r2919+12288];
	ld.shared.v4.u32 	{%r2731, %r2732, %r2733, %r2734}, [%r2924+16384];
	ld.shared.v4.u32 	{%r2735, %r2736, %r2737, %r2738}, [%r2929+20480];
	ld.shared.v4.u32 	{%r2739, %r2740, %r2741, %r2742}, [%r2934+24576];
	ld.shared.v4.u32 	{%r2743, %r2744, %r2745, %r2746}, [%r2939+28672];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2491 + 0 ], { %r3006, %r3007 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2494 + 0 ], { %r3008, %r3009 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2497 + 0 ], { %r3010, %r3011 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2500 + 0 ], { %r3012, %r3013 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2503 + 0 ], { %r3014, %r3015 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2506 + 0 ], { %r3016, %r3017 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2509 + 0 ], { %r3018, %r3019 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2512 + 0 ], { %r3020, %r3021 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2515 + 0 ], { %r3022, %r3023 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2518 + 0 ], { %r3024, %r3025 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2521 + 0 ], { %r3026, %r3027 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2524 + 0 ], { %r3028, %r3029 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2527 + 0 ], { %r3030, %r3031 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2530 + 0 ], { %r3032, %r3033 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2533 + 0 ], { %r3034, %r3035 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2536 + 0 ], { %r3036, %r3037 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2747, %r2748, %r2749, %r2750}, [%r2904];
	ld.shared.v4.u32 	{%r2751, %r2752, %r2753, %r2754}, [%r2909+4096];
	ld.shared.v4.u32 	{%r2755, %r2756, %r2757, %r2758}, [%r2914+8192];
	ld.shared.v4.u32 	{%r2759, %r2760, %r2761, %r2762}, [%r2919+12288];
	ld.shared.v4.u32 	{%r2763, %r2764, %r2765, %r2766}, [%r2924+16384];
	ld.shared.v4.u32 	{%r2767, %r2768, %r2769, %r2770}, [%r2929+20480];
	ld.shared.v4.u32 	{%r2771, %r2772, %r2773, %r2774}, [%r2934+24576];
	ld.shared.v4.u32 	{%r2775, %r2776, %r2777, %r2778}, [%r2939+28672];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2491 + 0 ], { %r3038, %r3039 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2494 + 0 ], { %r3040, %r3041 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2497 + 0 ], { %r3042, %r3043 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2500 + 0 ], { %r3044, %r3045 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2503 + 0 ], { %r3046, %r3047 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2506 + 0 ], { %r3048, %r3049 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2509 + 0 ], { %r3050, %r3051 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2512 + 0 ], { %r3052, %r3053 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2515 + 0 ], { %r3054, %r3055 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2518 + 0 ], { %r3056, %r3057 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2521 + 0 ], { %r3058, %r3059 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2524 + 0 ], { %r3060, %r3061 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2527 + 0 ], { %r3062, %r3063 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2530 + 0 ], { %r3064, %r3065 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2533 + 0 ], { %r3066, %r3067 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b32 [ %r2536 + 0 ], { %r3068, %r3069 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2779, %r2780, %r2781, %r2782}, [%r2904];
	ld.shared.v4.u32 	{%r2783, %r2784, %r2785, %r2786}, [%r2909+4096];
	ld.shared.v4.u32 	{%r2787, %r2788, %r2789, %r2790}, [%r2914+8192];
	ld.shared.v4.u32 	{%r2791, %r2792, %r2793, %r2794}, [%r2919+12288];
	ld.shared.v4.u32 	{%r2795, %r2796, %r2797, %r2798}, [%r2924+16384];
	ld.shared.v4.u32 	{%r2799, %r2800, %r2801, %r2802}, [%r2929+20480];
	ld.shared.v4.u32 	{%r2803, %r2804, %r2805, %r2806}, [%r2934+24576];
	ld.shared.v4.u32 	{%r2807, %r2808, %r2809, %r2810}, [%r2939+28672];
	// begin inline asm
	@%p69 st.global.v4.b32 [ %rd106 + 0 ], { %r2683, %r2684, %r2685, %r2686 };
	// end inline asm
	// begin inline asm
	@%p70 st.global.v4.b32 [ %rd107 + 0 ], { %r2687, %r2688, %r2689, %r2690 };
	// end inline asm
	// begin inline asm
	@%p71 st.global.v4.b32 [ %rd108 + 0 ], { %r2691, %r2692, %r2693, %r2694 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.v4.b32 [ %rd109 + 0 ], { %r2695, %r2696, %r2697, %r2698 };
	// end inline asm
	// begin inline asm
	@%p73 st.global.v4.b32 [ %rd110 + 0 ], { %r2699, %r2700, %r2701, %r2702 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.v4.b32 [ %rd111 + 0 ], { %r2703, %r2704, %r2705, %r2706 };
	// end inline asm
	// begin inline asm
	@%p75 st.global.v4.b32 [ %rd112 + 0 ], { %r2707, %r2708, %r2709, %r2710 };
	// end inline asm
	// begin inline asm
	@%p76 st.global.v4.b32 [ %rd113 + 0 ], { %r2711, %r2712, %r2713, %r2714 };
	// end inline asm
	// begin inline asm
	@%p77 st.global.v4.b32 [ %rd114 + 0 ], { %r2715, %r2716, %r2717, %r2718 };
	// end inline asm
	// begin inline asm
	@%p78 st.global.v4.b32 [ %rd115 + 0 ], { %r2719, %r2720, %r2721, %r2722 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.v4.b32 [ %rd116 + 0 ], { %r2723, %r2724, %r2725, %r2726 };
	// end inline asm
	// begin inline asm
	@%p80 st.global.v4.b32 [ %rd117 + 0 ], { %r2727, %r2728, %r2729, %r2730 };
	// end inline asm
	// begin inline asm
	@%p81 st.global.v4.b32 [ %rd118 + 0 ], { %r2731, %r2732, %r2733, %r2734 };
	// end inline asm
	// begin inline asm
	@%p82 st.global.v4.b32 [ %rd119 + 0 ], { %r2735, %r2736, %r2737, %r2738 };
	// end inline asm
	// begin inline asm
	@%p83 st.global.v4.b32 [ %rd120 + 0 ], { %r2739, %r2740, %r2741, %r2742 };
	// end inline asm
	// begin inline asm
	@%p84 st.global.v4.b32 [ %rd121 + 0 ], { %r2743, %r2744, %r2745, %r2746 };
	// end inline asm
	// begin inline asm
	@%p85 st.global.v4.b32 [ %rd122 + 0 ], { %r2747, %r2748, %r2749, %r2750 };
	// end inline asm
	// begin inline asm
	@%p86 st.global.v4.b32 [ %rd123 + 0 ], { %r2751, %r2752, %r2753, %r2754 };
	// end inline asm
	// begin inline asm
	@%p87 st.global.v4.b32 [ %rd124 + 0 ], { %r2755, %r2756, %r2757, %r2758 };
	// end inline asm
	// begin inline asm
	@%p88 st.global.v4.b32 [ %rd125 + 0 ], { %r2759, %r2760, %r2761, %r2762 };
	// end inline asm
	// begin inline asm
	@%p89 st.global.v4.b32 [ %rd126 + 0 ], { %r2763, %r2764, %r2765, %r2766 };
	// end inline asm
	// begin inline asm
	@%p90 st.global.v4.b32 [ %rd127 + 0 ], { %r2767, %r2768, %r2769, %r2770 };
	// end inline asm
	// begin inline asm
	@%p91 st.global.v4.b32 [ %rd128 + 0 ], { %r2771, %r2772, %r2773, %r2774 };
	// end inline asm
	// begin inline asm
	@%p92 st.global.v4.b32 [ %rd129 + 0 ], { %r2775, %r2776, %r2777, %r2778 };
	// end inline asm
	// begin inline asm
	@%p93 st.global.v4.b32 [ %rd130 + 0 ], { %r2779, %r2780, %r2781, %r2782 };
	// end inline asm
	// begin inline asm
	@%p94 st.global.v4.b32 [ %rd131 + 0 ], { %r2783, %r2784, %r2785, %r2786 };
	// end inline asm
	// begin inline asm
	@%p95 st.global.v4.b32 [ %rd132 + 0 ], { %r2787, %r2788, %r2789, %r2790 };
	// end inline asm
	// begin inline asm
	@%p96 st.global.v4.b32 [ %rd133 + 0 ], { %r2791, %r2792, %r2793, %r2794 };
	// end inline asm
	// begin inline asm
	@%p97 st.global.v4.b32 [ %rd134 + 0 ], { %r2795, %r2796, %r2797, %r2798 };
	// end inline asm
	// begin inline asm
	@%p98 st.global.v4.b32 [ %rd135 + 0 ], { %r2799, %r2800, %r2801, %r2802 };
	// end inline asm
	// begin inline asm
	@%p99 st.global.v4.b32 [ %rd136 + 0 ], { %r2803, %r2804, %r2805, %r2806 };
	// end inline asm
	// begin inline asm
	@%p100 st.global.v4.b32 [ %rd137 + 0 ], { %r2807, %r2808, %r2809, %r2810 };
	// end inline asm
	.loc	1 89 4                          // csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/sq/csqdlallicu6p5upbg5h53uarqgxjgl6drtwvoe25xwqtwqjp62i.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 113
.b8 100
.b8 108
.b8 97
.b8 108
.b8 108
.b8 105
.b8 99
.b8 117
.b8 54
.b8 112
.b8 53
.b8 117
.b8 112
.b8 98
.b8 103
.b8 53
.b8 104
.b8 53
.b8 51
.b8 117
.b8 97
.b8 114
.b8 113
.b8 103
.b8 120
.b8 106
.b8 103
.b8 108
.b8 54
.b8 100
.b8 114
.b8 116
.b8 119
.b8 118
.b8 111
.b8 101
.b8 50
.b8 53
.b8 120
.b8 119
.b8 113
.b8 116
.b8 119
.b8 113
.b8 106
.b8 112
.b8 54
.b8 50
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 115
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
