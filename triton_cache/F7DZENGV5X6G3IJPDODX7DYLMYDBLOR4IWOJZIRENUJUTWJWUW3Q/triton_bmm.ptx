//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<363>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<37>;
	.loc	1 17 0                          // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:17:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_bmm_param_2];
	ld.param.u64 	%rd14, [triton_bmm_param_0];
	ld.param.u64 	%rd15, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:41:24
	mov.u32 	%r34, %ctaid.x;
	.loc	1 47 22                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:47:22
	shr.s32 	%r35, %r34, 31;
	shr.u32 	%r36, %r35, 29;
	add.s32 	%r37, %r34, %r36;
	.loc	1 48 41                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:48:41
	and.b32  	%r38, %r37, -8;
	.loc	1 48 30                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:48:30
	sub.s32 	%r39, 4, %r38;
	.loc	1 48 50                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:48:50
	min.s32 	%r40, %r39, 8;
	.loc	1 49 40                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:49:40
	rem.s32 	%r41, %r34, %r40;
	.loc	1 49 34                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:49:34
	add.s32 	%r42, %r41, %r38;
	.loc	1 50 19                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:50:19
	sub.s32 	%r43, %r34, %r38;
	.loc	1 50 30                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:50:30
	div.s32 	%r44, %r43, %r40;
	.loc	1 52 17                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:52:17
	shl.b32 	%r1, %r42, 7;
	.loc	1 52 40                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r45, %r2, 4;
	shr.u32 	%r46, %r2, 2;
	and.b32  	%r3, %r46, 8;
	and.b32  	%r47, %r46, 16;
	and.b32  	%r4, %r2, 128;
	shr.u32 	%r48, %r4, 2;
	bfe.u32 	%r49, %r2, 2, 5;
	or.b32  	%r50, %r49, %r48;
	bfe.u32 	%r5, %r2, 3, 5;
	.loc	1 52 27                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:52:27
	or.b32  	%r51, %r1, %r50;
	or.b32  	%r52, %r51, 64;
	.loc	1 53 17                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:53:17
	shl.b32 	%r53, %r44, 6;
	.loc	1 53 40                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:53:40
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r54, %r6, 8;
	and.b32  	%r55, %r2, 2;
	shl.b32 	%r56, %r55, 3;
	or.b32  	%r57, %r54, %r56;
	shl.b32 	%r58, %r45, 3;
	or.b32  	%r7, %r57, %r58;
	.loc	1 53 27                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:53:27
	or.b32  	%r8, %r53, %r7;
	.loc	1 55 52                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:55:52
	bfe.s32 	%r59, %r42, 24, 1;
	shr.u32 	%r60, %r59, 23;
	add.s32 	%r61, %r51, %r60;
	and.b32  	%r62, %r61, 8388096;
	sub.s32 	%r63, %r51, %r62;
	add.s32 	%r64, %r52, %r60;
	and.b32  	%r65, %r64, 8388096;
	sub.s32 	%r66, %r52, %r65;
	.loc	1 61 19                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:61:19
	bfe.s32 	%r67, %r44, 25, 1;
	shr.u32 	%r68, %r67, 26;
	add.s32 	%r69, %r8, %r68;
	and.b32  	%r70, %r69, -64;
	sub.s32 	%r71, %r8, %r70;
	.loc	1 65 26                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:65:26
	mov.u32 	%r9, %ctaid.y;
	.loc	1 66 28                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:66:28
	shl.b32 	%r72, %r63, 9;
	shl.b32 	%r73, %r66, 9;
	.loc	1 66 72                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:66:72
	shl.b32 	%r74, %r9, 18;
	.loc	1 66 40                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:66:40
	or.b32  	%r75, %r57, %r74;
	.loc	1 66 66                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:66:66
	add.s32 	%r76, %r75, %r72;
	add.s32 	%r77, %r75, %r73;
	.loc	1 66 13                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:66:13
	mul.wide.s32 	%rd16, %r76, 2;
	add.s64 	%rd11, %rd14, %rd16;
	mul.wide.s32 	%rd17, %r77, 2;
	add.s64 	%rd12, %rd14, %rd17;
	.loc	1 67 27                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:67:27
	shl.b32 	%r78, %r5, 12;
	.loc	1 67 72                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:67:72
	shl.b32 	%r79, %r9, 6;
	.loc	1 67 39                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:67:39
	add.s32 	%r80, %r78, %r79;
	.loc	1 67 66                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:67:66
	add.s32 	%r81, %r80, %r71;
	.loc	1 67 13                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:67:13
	mul.wide.s32 	%rd18, %r81, 2;
	add.s64 	%rd13, %rd15, %rd18;
	.loc	1 72 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:72:24
	and.b32  	%r82, %r2, 24;
	xor.b32  	%r83, %r57, %r82;
	shl.b32 	%r84, %r50, 6;
	shl.b32 	%r85, %r83, 1;
	or.b32  	%r86, %r84, %r85;
	mov.u32 	%r87, global_smem;
	add.s32 	%r259, %r87, %r86;
	add.s32 	%r261, %r259, 4096;
	mov.b32 	%r27, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r259 + 0 ], [ %rd11 + 0 ], 0x10, %r27;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r261 + 0 ], [ %rd12 + 0 ], 0x10, %r27;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:73:24
	and.b32  	%r88, %r2, 56;
	xor.b32  	%r89, %r7, %r88;
	shl.b32 	%r90, %r89, 1;
	add.s32 	%r91, %r87, %r90;
	shl.b32 	%r92, %r5, 7;
	add.s32 	%r93, %r91, %r92;
	add.s32 	%r30, %r93, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r30 + 0 ], [ %rd13 + 0 ], 0x10, %r27;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r94, %r55, 2;
	shl.b32 	%r95, %r45, 2;
	or.b32  	%r96, %r94, %r95;
	and.b32  	%r97, %r2, 15;
	shr.u32 	%r98, %r2, 1;
	and.b32  	%r99, %r98, 8;
	xor.b32  	%r13, %r96, %r99;
	or.b32  	%r100, %r47, %r97;
	or.b32  	%r101, %r100, %r48;
	shl.b32 	%r14, %r101, 5;
	or.b32  	%r15, %r14, %r13;
	or.b32  	%r102, %r94, 16;
	or.b32  	%r103, %r99, %r95;
	xor.b32  	%r16, %r103, %r102;
	or.b32  	%r17, %r16, %r14;
	xor.b32  	%r104, %r7, %r3;
	shl.b32 	%r105, %r2, 6;
	and.b32  	%r106, %r105, 1984;
	or.b32  	%r18, %r104, %r106;
	or.b32  	%r107, %r54, 16;
	xor.b32  	%r108, %r107, %r56;
	or.b32  	%r109, %r108, %r58;
	xor.b32  	%r110, %r109, %r3;
	or.b32  	%r19, %r110, %r106;
	or.b32  	%r111, %r57, 32;
	or.b32  	%r112, %r3, %r58;
	xor.b32  	%r113, %r112, %r111;
	or.b32  	%r20, %r113, %r106;
	or.b32  	%r114, %r54, 48;
	or.b32  	%r115, %r112, %r56;
	xor.b32  	%r116, %r115, %r114;
	or.b32  	%r21, %r116, %r106;
	.loc	1 70 25                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:70:25
	add.s64 	%rd36, %rd13, 262144;
	add.s32 	%r117, %r74, %r73;
	or.b32  	%r118, %r117, %r56;
	or.b32  	%r119, %r118, %r54;
	mul.wide.s32 	%rd19, %r119, 2;
	add.s64 	%rd20, %rd19, %rd14;
	add.s64 	%rd35, %rd20, 64;
	add.s32 	%r120, %r74, %r72;
	or.b32  	%r121, %r120, %r56;
	or.b32  	%r122, %r121, %r54;
	mul.wide.s32 	%rd21, %r122, 2;
	add.s64 	%rd22, %rd21, %rd14;
	add.s64 	%rd34, %rd22, 64;
	mov.b32 	%r362, 0;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r361, -1;
	shl.b32 	%r269, %r15, 1;
	shl.b32 	%r270, %r17, 1;
	shl.b32 	%r280, %r18, 1;
	shl.b32 	%r281, %r19, 1;
	shl.b32 	%r282, %r20, 1;
	shl.b32 	%r283, %r21, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u32 	%p1, %r362, 480;
	add.s32 	%r265, %r361, 1;
	setp.gt.u32 	%p2, %r361, 2147483646;
	selp.b32 	%r361, %r265, 0, %p2;
	.loc	1 72 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:72:24
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r266, %r361, 13;
	add.s32 	%r268, %r87, %r266;
	add.s32 	%r127, %r268, %r269;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r163, %r164, %r165, %r166}, [%r127];
	// end inline asm
	add.s32 	%r132, %r268, %r270;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r211, %r212, %r213, %r214}, [%r132];
	// end inline asm
	add.s32 	%r271, %r14, %r13;
	shl.b32 	%r272, %r271, 1;
	add.s32 	%r273, %r268, %r272;
	add.s32 	%r137, %r273, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r187, %r188, %r189, %r190}, [%r137];
	// end inline asm
	add.s32 	%r274, %r14, %r16;
	shl.b32 	%r275, %r274, 1;
	add.s32 	%r276, %r268, %r275;
	add.s32 	%r142, %r276, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r235, %r236, %r237, %r238}, [%r142];
	// end inline asm
	.loc	1 73 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:73:24
	shl.b32 	%r277, %r361, 12;
	add.s32 	%r278, %r87, %r277;
	add.s32 	%r279, %r278, 8192;
	add.s32 	%r147, %r279, %r280;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r167, %r168, %r215, %r216}, [%r147];
	// end inline asm
	add.s32 	%r152, %r279, %r281;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r173, %r174, %r221, %r222}, [%r152];
	// end inline asm
	add.s32 	%r157, %r279, %r282;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r179, %r180, %r227, %r228}, [%r157];
	// end inline asm
	add.s32 	%r162, %r279, %r283;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r185, %r186, %r233, %r234}, [%r162];
	// end inline asm
	.loc	1 77 25                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r163, %r164, %r165, %r166 }, { %r167, %r168 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r163, %r164, %r165, %r166 }, { %r173, %r174 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r163, %r164, %r165, %r166 }, { %r179, %r180 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r163, %r164, %r165, %r166 }, { %r185, %r186 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r187, %r188, %r189, %r190 }, { %r167, %r168 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r187, %r188, %r189, %r190 }, { %r173, %r174 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r187, %r188, %r189, %r190 }, { %r179, %r180 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r187, %r188, %r189, %r190 }, { %r185, %r186 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r211, %r212, %r213, %r214 }, { %r215, %r216 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r211, %r212, %r213, %r214 }, { %r221, %r222 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r211, %r212, %r213, %r214 }, { %r227, %r228 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r211, %r212, %r213, %r214 }, { %r233, %r234 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r235, %r236, %r237, %r238 }, { %r215, %r216 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r235, %r236, %r237, %r238 }, { %r221, %r222 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r235, %r236, %r237, %r238 }, { %r227, %r228 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r235, %r236, %r237, %r238 }, { %r233, %r234 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 72 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:72:24
	bar.sync 	0;
	selp.b32 	%r260, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r259 + 0 ], [ %rd34 + 0 ], 0x10, %r260;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r261 + 0 ], [ %rd35 + 0 ], 0x10, %r260;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r30 + 0 ], [ %rd36 + 0 ], 0x10, %r260;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:70:25
	add.s32 	%r362, %r362, 32;
	add.s64 	%rd36, %rd36, 262144;
	add.s64 	%rd35, %rd35, 64;
	add.s64 	%rd34, %rd34, 64;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:52:40
	or.b32  	%r316, %r1, %r5;
	.loc	1 52 27                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:52:27
	or.b32  	%r317, %r316, 96;
	or.b32  	%r318, %r316, 64;
	or.b32  	%r319, %r316, 32;
	.loc	1 70 25                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:87:20
	setp.lt.s32 	%p23, %r316, 512;
	setp.lt.s32 	%p24, %r319, 512;
	setp.lt.s32 	%p25, %r318, 512;
	setp.lt.s32 	%p26, %r317, 512;
	.loc	1 87 34                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:87:34
	setp.lt.s32 	%p27, %r8, 64;
	.loc	1 87 26                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:87:26
	and.pred  	%p19, %p23, %p27;
	and.pred  	%p20, %p24, %p27;
	and.pred  	%p21, %p25, %p27;
	and.pred  	%p22, %p26, %p27;
	.loc	1 90 24                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:24
	shl.b32 	%r320, %r316, 6;
	shl.b32 	%r321, %r319, 6;
	shl.b32 	%r322, %r318, 6;
	shl.b32 	%r323, %r317, 6;
	.loc	1 90 38                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:38
	shl.b32 	%r324, %r9, 15;
	.loc	1 90 21                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:21
	add.s32 	%r325, %r8, %r324;
	.loc	1 90 32                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:32
	add.s32 	%r326, %r325, %r320;
	.loc	1 90 21                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:21
	add.s32 	%r327, %r321, %r324;
	.loc	1 90 32                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:32
	add.s32 	%r328, %r327, %r8;
	.loc	1 90 21                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:21
	add.s32 	%r329, %r322, %r324;
	.loc	1 90 32                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:32
	add.s32 	%r330, %r329, %r8;
	.loc	1 90 21                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:21
	add.s32 	%r331, %r323, %r324;
	.loc	1 90 32                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:90:32
	add.s32 	%r332, %r331, %r8;
	.loc	1 91 25                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:91:25
	mul.wide.s32 	%rd30, %r326, 2;
	add.s64 	%rd26, %rd10, %rd30;
	mul.wide.s32 	%rd31, %r328, 2;
	add.s64 	%rd27, %rd10, %rd31;
	mul.wide.s32 	%rd32, %r330, 2;
	add.s64 	%rd28, %rd10, %rd32;
	mul.wide.s32 	%rd33, %r332, 2;
	add.s64 	%rd29, %rd10, %rd33;
	.loc	1 91 67                         // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f194;
	cvt.rn.bf16.f32 	%rs2, %f195;
	cvt.rn.bf16.f32 	%rs3, %f196;
	cvt.rn.bf16.f32 	%rs4, %f197;
	cvt.rn.bf16.f32 	%rs5, %f198;
	cvt.rn.bf16.f32 	%rs6, %f199;
	cvt.rn.bf16.f32 	%rs7, %f200;
	cvt.rn.bf16.f32 	%rs8, %f201;
	cvt.rn.bf16.f32 	%rs9, %f202;
	cvt.rn.bf16.f32 	%rs10, %f203;
	cvt.rn.bf16.f32 	%rs11, %f204;
	cvt.rn.bf16.f32 	%rs12, %f205;
	cvt.rn.bf16.f32 	%rs13, %f206;
	cvt.rn.bf16.f32 	%rs14, %f207;
	cvt.rn.bf16.f32 	%rs15, %f208;
	cvt.rn.bf16.f32 	%rs16, %f209;
	cvt.rn.bf16.f32 	%rs17, %f210;
	cvt.rn.bf16.f32 	%rs18, %f211;
	cvt.rn.bf16.f32 	%rs19, %f212;
	cvt.rn.bf16.f32 	%rs20, %f213;
	cvt.rn.bf16.f32 	%rs21, %f214;
	cvt.rn.bf16.f32 	%rs22, %f215;
	cvt.rn.bf16.f32 	%rs23, %f216;
	cvt.rn.bf16.f32 	%rs24, %f217;
	cvt.rn.bf16.f32 	%rs25, %f218;
	cvt.rn.bf16.f32 	%rs26, %f219;
	cvt.rn.bf16.f32 	%rs27, %f220;
	cvt.rn.bf16.f32 	%rs28, %f221;
	cvt.rn.bf16.f32 	%rs29, %f222;
	cvt.rn.bf16.f32 	%rs30, %f223;
	cvt.rn.bf16.f32 	%rs31, %f224;
	cvt.rn.bf16.f32 	%rs32, %f225;
	shl.b32 	%r333, %r2, 1;
	and.b32  	%r334, %r333, 6;
	shl.b32 	%r335, %r2, 4;
	and.b32  	%r336, %r335, 1472;
	or.b32  	%r337, %r336, %r334;
	shl.b32 	%r338, %r4, 4;
	or.b32  	%r339, %r337, %r338;
	or.b32  	%r340, %r339, %r3;
	and.b32  	%r341, %r6, 1984;
	or.b32  	%r342, %r7, %r341;
	shr.u32 	%r343, %r339, 2;
	and.b32  	%r344, %r343, 1020;
	add.s32 	%r346, %r87, %r344;
	shl.b32 	%r347, %r340, 1;
	add.s32 	%r284, %r346, %r347;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r284 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r348, %r339, 512;
	shr.u32 	%r349, %r348, 2;
	and.b32  	%r350, %r349, 1008;
	add.s32 	%r351, %r87, %r350;
	add.s32 	%r352, %r351, %r347;
	add.s32 	%r285, %r352, 1024;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r285 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r286, %r284, 32;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r286 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r287, %r352, 1056;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r287 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r288, %r284, 64;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r288 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r289, %r352, 1088;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r289 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r290, %r284, 96;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r290 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r291, %r352, 1120;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r291 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r353, %r341, 2;
	add.s32 	%r354, %r87, %r353;
	shl.b32 	%r355, %r342, 1;
	add.s32 	%r356, %r354, %r355;
	ld.shared.v4.u32 	{%r300, %r301, %r302, %r303}, [%r356];
	or.b32  	%r357, %r341, 2048;
	shr.u32 	%r358, %r357, 2;
	add.s32 	%r359, %r87, %r358;
	add.s32 	%r360, %r359, %r355;
	ld.shared.v4.u32 	{%r304, %r305, %r306, %r307}, [%r360+4096];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r284 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r285 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r286 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r287 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r288 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r289 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r290 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r291 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r308, %r309, %r310, %r311}, [%r356];
	ld.shared.v4.u32 	{%r312, %r313, %r314, %r315}, [%r360+4096];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd26 + 0 ], { %r300, %r301, %r302, %r303 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd27 + 0 ], { %r304, %r305, %r306, %r307 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd28 + 0 ], { %r308, %r309, %r310, %r311 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd29 + 0 ], { %r312, %r313, %r314, %r315 };
	// end inline asm
	.loc	1 91 4                          // ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/kg/ckgz4oumwntmxfnmuz5mktn2oemp7br3e6hhvsgxesmigeh2jwiz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 103
.b8 122
.b8 52
.b8 111
.b8 117
.b8 109
.b8 119
.b8 110
.b8 116
.b8 109
.b8 120
.b8 102
.b8 110
.b8 109
.b8 117
.b8 122
.b8 53
.b8 109
.b8 107
.b8 116
.b8 110
.b8 50
.b8 111
.b8 101
.b8 109
.b8 112
.b8 55
.b8 98
.b8 114
.b8 51
.b8 101
.b8 54
.b8 104
.b8 104
.b8 118
.b8 115
.b8 103
.b8 120
.b8 101
.b8 115
.b8 109
.b8 105
.b8 103
.b8 101
.b8 104
.b8 50
.b8 106
.b8 119
.b8 105
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 107
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
