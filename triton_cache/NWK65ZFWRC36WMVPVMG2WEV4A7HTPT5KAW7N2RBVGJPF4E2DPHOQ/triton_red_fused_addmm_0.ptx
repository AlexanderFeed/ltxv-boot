//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<63>;
	.reg .b64 	%rd<16>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd9, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r22, %ctaid.x;
	.loc	1 23 33                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:33
	shl.b32 	%r23, %r22, 1;
	ld.param.u64 	%rd10, [triton_red_fused_addmm_0_param_2];
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	mov.u32 	%r24, %tid.x;
	bfe.u32 	%r25, %r24, 9, 1;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r26, %r25, %r23;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r26, 9216;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	shl.b32 	%r27, %r24, 1;
	and.b32  	%r28, %r27, 1022;
	and.b32  	%r29, %r24, 1023;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r30, %r26, 3072;
	or.b32  	%r31, %r30, %r28;
	shl.b32 	%r32, %r29, 2;
	mov.u32 	%r33, global_smem;
	add.s32 	%r3, %r33, %r32;
	shl.b32 	%r34, %r28, 2;
	add.s32 	%r35, %r33, %r34;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd11, %r29, 2;
	add.s64 	%rd1, %rd8, %rd11;
	mov.b16 	%rs2, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd12, %r31, 2;
	add.s64 	%rd2, %rd9, %rd12;
	mov.b32 	%r2, 0;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r1, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r1 }, [ %rd2 + 0 ];
	// end inline asm
	mov.f32 	%f2, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f3, %f2, %f1;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	ex2.approx.f32 	%f5, %f4;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f6, %f5, 0f3F800000;
	mov.f32 	%f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f8, %f7, %f6;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f9, %f8, %f1;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r4, %f9;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r4;
	// end inline asm
	bar.sync 	0;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 2048;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r36, %r31, 1024;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd13, %r36, 2;
	add.s64 	%rd4, %rd9, %rd13;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd5, %rd1, 4096;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r37, %r31, 2048;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd14, %r37, 2;
	add.s64 	%rd6, %rd9, %rd14;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs7, %rs8}, %r1;
	cvt.f32.bf16 	%f10, %rs7;
	cvt.f32.bf16 	%f11, %rs8;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	ld.shared.v2.f32 	{%f12, %f13}, [%r35];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f14, %f13, %f11, 0f00000000;
	fma.rn.f32 	%f15, %f12, %f10, 0f00000000;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f16, %rs3;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r5, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs9, %rs10}, %r5;
	cvt.f32.bf16 	%f17, %rs10;
	cvt.f32.bf16 	%f18, %rs9;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f19, %f2, %f16;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f20, %f19, 0f3FB8AA3B;
	ex2.approx.f32 	%f21, %f20;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f22, %f21, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f23, %f7, %f22;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f24, %f23, %f16;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r8, %f24;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f25, %f26}, [%r35];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f27, %f25, %f18, %f15;
	fma.rn.f32 	%f28, %f26, %f17, %f14;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f29, %rs5;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r9, %r2;
	@%p2 ld.global.L1::evict_first.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs11, %rs12}, %r9;
	cvt.f32.bf16 	%f30, %rs11;
	cvt.f32.bf16 	%f31, %rs12;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f32, %f2, %f29;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f33, %f32, 0f3FB8AA3B;
	ex2.approx.f32 	%f34, %f33;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f35, %f34, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f36, %f7, %f35;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f37, %f36, %f29;
	.loc	1 44 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:44:22
	bar.sync 	0;
	mov.b32 	%r12, %f37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r3 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f38, %f39}, [%r35];
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f40, %f39, %f31, %f28;
	fma.rn.f32 	%f41, %f38, %f30, %f27;
	.loc	1 24 44                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:44
	and.b32  	%r38, %r24, 1;
	and.b32  	%r39, %r24, 31;
	.loc	1 24 23                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:24:23
	or.b32  	%r40, %r23, %r38;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p15, %r40, 9216;
$L__tmp7:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f41, %f40;
	selp.f32 	%f43, %f42, 0f00000000, %p2;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f43;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f44, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f45;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f46, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r45, %f47;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f48, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f49;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f50, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f51;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f52, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p10, %r39, 0;
	shr.u32 	%r51, %r24, 3;
	and.b32  	%r52, %r51, 60;
	shl.b32 	%r53, %r25, 6;
	or.b32  	%r54, %r53, %r52;
	add.s32 	%r13, %r33, %r54;
	mov.b32 	%r14, %f53;
	// begin inline asm
	@%p10 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p11, %r24, 32;
	shl.b32 	%r55, %r24, 2;
	add.s32 	%r16, %r33, %r55;
	// begin inline asm
	@%p11 ld.shared.b32 %r15, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r15;
	shfl.sync.bfly.b32	%r56, %r15, 8, 31, -1;
	mov.b32 	%f55, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f56;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f57, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f58;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f59, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f60;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f61, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r63, %r24, 15;
	setp.eq.s32 	%p16, %r63, 0;
	and.pred  	%p12, %p11, %p16;
	mov.b32 	%r18, %f62;
	// begin inline asm
	@%p12 st.shared.b32 [ %r16 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r64, %r33, %r53;
	ld.shared.u32 	%r20, [%r64];
$L__tmp8:
	.loc	1 48 30                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:48:30
	bar.sync 	0;
	mad.lo.s32 	%r19, %r25, -60, %r64;
	// begin inline asm
	@%p1 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r65, %r38, 2;
	add.s32 	%r66, %r33, %r65;
	ld.shared.u32 	%r21, [%r66];
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd15, %r40, 4;
	add.s64 	%rd7, %rd10, %rd15;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r67, %r24, 1022;
	setp.eq.s32 	%p17, %r67, 0;
	and.pred  	%p14, %p17, %p15;
	// begin inline asm
	@%p14 st.global.b32 [ %rd7 + 0 ], { %r21 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
