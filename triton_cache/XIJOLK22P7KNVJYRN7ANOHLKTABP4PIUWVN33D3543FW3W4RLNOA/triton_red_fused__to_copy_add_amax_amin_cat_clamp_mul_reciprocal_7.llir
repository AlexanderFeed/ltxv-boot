; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 1, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = and i32 %11, 1, !dbg !11
  %13 = or disjoint i32 %10, 1, !dbg !12
  %14 = or disjoint i32 %10, %12, !dbg !12
  %15 = icmp slt i32 %10, 4112, !dbg !13
  %16 = icmp slt i32 %14, 4112, !dbg !13
  %17 = shl i32 %11, 4, !dbg !14
  %18 = and i32 %17, 8176, !dbg !14
  %19 = or disjoint i32 %18, 4, !dbg !14
  %20 = or disjoint i32 %18, 8, !dbg !14
  %21 = or disjoint i32 %18, 12, !dbg !14
  %22 = mul i32 %9, 6144, !dbg !15
  %23 = mul i32 %13, 3072, !dbg !15
  %24 = mul i32 %9, 24576, !dbg !16
  %25 = mul i32 %13, 12288, !dbg !16
  %invariant.op = add i32 %24, -3072, !dbg !17
  %invariant.op1209 = add nsw i32 %25, -3072, !dbg !17
  %26 = zext nneg i32 %18 to i64, !dbg !17
  br label %27, !dbg !17

27:                                               ; preds = %8, %__nv_tanhf.exit1201
  %28 = phi i1 [ true, %8 ], [ false, %__nv_tanhf.exit1201 ]
  %indvars.iv = phi i64 [ 0, %8 ], [ 8192, %__nv_tanhf.exit1201 ]
  %29 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %8 ], [ %1575, %__nv_tanhf.exit1201 ]
  %30 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %8 ], [ %1576, %__nv_tanhf.exit1201 ]
  %31 = phi <16 x float> [ splat (float 0xFFF0000000000000), %8 ], [ %1577, %__nv_tanhf.exit1201 ]
  %32 = phi <16 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %1568, %__nv_tanhf.exit1201 ]
  %33 = phi <8 x float> [ splat (float 0x7FF0000000000000), %8 ], [ %1531, %__nv_tanhf.exit1201 ]
  %34 = phi <16 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>, %8 ], [ %1572, %__nv_tanhf.exit1201 ]
  %35 = or disjoint i64 %indvars.iv, %26, !dbg !18
  %36 = icmp samesign ult i64 %35, 15360, !dbg !19
  %37 = icmp samesign ult i64 %35, 3072, !dbg !20
  %38 = trunc nuw nsw i64 %35 to i32, !dbg !21
  %39 = add i32 %22, %38, !dbg !21
  %40 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !21
  %41 = or disjoint i32 %20, %40, !dbg !21
  %42 = add i32 %41, %22, !dbg !21
  %43 = add i32 %23, %38, !dbg !21
  %44 = add i32 %41, %23, !dbg !21
  %45 = sext i32 %39 to i64, !dbg !22
  %46 = getelementptr bfloat, ptr addrspace(1) %0, i64 %45, !dbg !22
  %47 = sext i32 %42 to i64, !dbg !22
  %48 = getelementptr bfloat, ptr addrspace(1) %0, i64 %47, !dbg !22
  %49 = sext i32 %43 to i64, !dbg !22
  %50 = getelementptr bfloat, ptr addrspace(1) %0, i64 %49, !dbg !22
  %51 = sext i32 %44 to i64, !dbg !22
  %52 = getelementptr bfloat, ptr addrspace(1) %0, i64 %51, !dbg !22
  %53 = and i1 %15, %36, !dbg !23
  %54 = and i1 %15, %37, !dbg !24
  %55 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %46, i1 %54) #5, !dbg !25
  %56 = extractvalue { i32, i32, i32, i32 } %55, 0, !dbg !25
  %57 = bitcast i32 %56 to <2 x bfloat>, !dbg !25
  %58 = extractvalue { i32, i32, i32, i32 } %55, 1, !dbg !25
  %59 = bitcast i32 %58 to <2 x bfloat>, !dbg !25
  %60 = extractvalue { i32, i32, i32, i32 } %55, 2, !dbg !25
  %61 = bitcast i32 %60 to <2 x bfloat>, !dbg !25
  %62 = extractvalue { i32, i32, i32, i32 } %55, 3, !dbg !25
  %63 = bitcast i32 %62 to <2 x bfloat>, !dbg !25
  %64 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %48, i1 %54) #5, !dbg !25
  %65 = extractvalue { i32, i32, i32, i32 } %64, 0, !dbg !25
  %66 = bitcast i32 %65 to <2 x bfloat>, !dbg !25
  %67 = extractvalue { i32, i32, i32, i32 } %64, 1, !dbg !25
  %68 = bitcast i32 %67 to <2 x bfloat>, !dbg !25
  %69 = extractvalue { i32, i32, i32, i32 } %64, 2, !dbg !25
  %70 = bitcast i32 %69 to <2 x bfloat>, !dbg !25
  %71 = extractvalue { i32, i32, i32, i32 } %64, 3, !dbg !25
  %72 = bitcast i32 %71 to <2 x bfloat>, !dbg !25
  %73 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %50, i1 %54) #5, !dbg !25
  %74 = extractvalue { i32, i32, i32, i32 } %73, 0, !dbg !25
  %75 = bitcast i32 %74 to <2 x bfloat>, !dbg !25
  %76 = extractvalue { i32, i32, i32, i32 } %73, 1, !dbg !25
  %77 = bitcast i32 %76 to <2 x bfloat>, !dbg !25
  %78 = extractvalue { i32, i32, i32, i32 } %73, 2, !dbg !25
  %79 = bitcast i32 %78 to <2 x bfloat>, !dbg !25
  %80 = extractvalue { i32, i32, i32, i32 } %73, 3, !dbg !25
  %81 = bitcast i32 %80 to <2 x bfloat>, !dbg !25
  %82 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %52, i1 %54) #5, !dbg !25
  %83 = extractvalue { i32, i32, i32, i32 } %82, 0, !dbg !25
  %84 = bitcast i32 %83 to <2 x bfloat>, !dbg !25
  %85 = extractvalue { i32, i32, i32, i32 } %82, 1, !dbg !25
  %86 = bitcast i32 %85 to <2 x bfloat>, !dbg !25
  %87 = extractvalue { i32, i32, i32, i32 } %82, 2, !dbg !25
  %88 = bitcast i32 %87 to <2 x bfloat>, !dbg !25
  %89 = extractvalue { i32, i32, i32, i32 } %82, 3, !dbg !25
  %90 = bitcast i32 %89 to <2 x bfloat>, !dbg !25
  %91 = shufflevector <2 x bfloat> %61, <2 x bfloat> %59, <4 x i32> <i32 1, i32 0, i32 3, i32 2>, !dbg !26
  %92 = fpext <4 x bfloat> %91 to <4 x float>, !dbg !26
  %93 = shufflevector <2 x bfloat> %70, <2 x bfloat> %68, <8 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %94 = shufflevector <2 x bfloat> %66, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %95 = shufflevector <8 x bfloat> %93, <8 x bfloat> %94, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 9, i32 poison, i32 poison, i32 poison>, !dbg !26
  %96 = shufflevector <2 x bfloat> %66, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %97 = shufflevector <8 x bfloat> %95, <8 x bfloat> %96, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %98 = shufflevector <2 x bfloat> %63, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %99 = shufflevector <8 x bfloat> %97, <8 x bfloat> %98, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 9, i32 poison>, !dbg !26
  %100 = shufflevector <2 x bfloat> %63, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %101 = shufflevector <8 x bfloat> %99, <8 x bfloat> %100, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  %102 = fpext <8 x bfloat> %101 to <8 x float>, !dbg !26
  %103 = shufflevector <2 x bfloat> %75, <2 x bfloat> %57, <4 x i32> <i32 0, i32 2, i32 1, i32 3>, !dbg !26
  %104 = fpext <4 x bfloat> %103 to <4 x float>, !dbg !26
  %105 = shufflevector <2 x bfloat> %90, <2 x bfloat> %88, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %106 = shufflevector <2 x bfloat> %86, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %107 = shufflevector <16 x bfloat> %105, <16 x bfloat> %106, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %108 = shufflevector <2 x bfloat> %86, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %109 = shufflevector <16 x bfloat> %107, <16 x bfloat> %108, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %110 = shufflevector <2 x bfloat> %84, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %111 = shufflevector <16 x bfloat> %109, <16 x bfloat> %110, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %112 = shufflevector <2 x bfloat> %84, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %113 = shufflevector <16 x bfloat> %111, <16 x bfloat> %112, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %114 = shufflevector <2 x bfloat> %81, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %115 = shufflevector <16 x bfloat> %113, <16 x bfloat> %114, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %116 = shufflevector <2 x bfloat> %81, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %117 = shufflevector <16 x bfloat> %115, <16 x bfloat> %116, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %118 = shufflevector <2 x bfloat> %79, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %119 = shufflevector <16 x bfloat> %117, <16 x bfloat> %118, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %120 = shufflevector <2 x bfloat> %79, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %121 = shufflevector <16 x bfloat> %119, <16 x bfloat> %120, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %122 = shufflevector <2 x bfloat> %77, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %123 = shufflevector <16 x bfloat> %121, <16 x bfloat> %122, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 17, i32 poison, i32 poison, i32 poison>, !dbg !26
  %124 = shufflevector <2 x bfloat> %77, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %125 = shufflevector <16 x bfloat> %123, <16 x bfloat> %124, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !26
  %126 = shufflevector <2 x bfloat> %72, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %127 = shufflevector <16 x bfloat> %125, <16 x bfloat> %126, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 17, i32 poison>, !dbg !26
  %128 = shufflevector <2 x bfloat> %72, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %129 = shufflevector <16 x bfloat> %127, <16 x bfloat> %128, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !26
  %130 = fpext <16 x bfloat> %129 to <16 x float>, !dbg !26
  %131 = icmp samesign ugt i64 %35, 3071, !dbg !27
  %.reass = add i32 %invariant.op, %38
  %132 = trunc nuw nsw i64 %indvars.iv to i32
  %133 = or disjoint i32 %19, %132
  %.reass1204 = add i32 %133, %invariant.op
  %.reass1206 = add i32 %41, %invariant.op
  %134 = trunc nuw nsw i64 %indvars.iv to i32
  %135 = or disjoint i32 %21, %134
  %.reass1208 = add i32 %135, %invariant.op
  %.reass1210 = add i32 %invariant.op1209, %38
  %.reass1212 = add i32 %133, %invariant.op1209
  %.reass1214 = add i32 %41, %invariant.op1209
  %.reass1216 = add i32 %135, %invariant.op1209
  %136 = sext i32 %.reass to i64, !dbg !28
  %137 = getelementptr float, ptr addrspace(1) %1, i64 %136, !dbg !28
  %138 = sext i32 %.reass1204 to i64, !dbg !28
  %139 = getelementptr float, ptr addrspace(1) %1, i64 %138, !dbg !28
  %140 = sext i32 %.reass1206 to i64, !dbg !28
  %141 = getelementptr float, ptr addrspace(1) %1, i64 %140, !dbg !28
  %142 = sext i32 %.reass1208 to i64, !dbg !28
  %143 = getelementptr float, ptr addrspace(1) %1, i64 %142, !dbg !28
  %144 = sext i32 %.reass1210 to i64, !dbg !28
  %145 = getelementptr float, ptr addrspace(1) %1, i64 %144, !dbg !28
  %146 = sext i32 %.reass1212 to i64, !dbg !28
  %147 = getelementptr float, ptr addrspace(1) %1, i64 %146, !dbg !28
  %148 = sext i32 %.reass1214 to i64, !dbg !28
  %149 = getelementptr float, ptr addrspace(1) %1, i64 %148, !dbg !28
  %150 = sext i32 %.reass1216 to i64, !dbg !28
  %151 = getelementptr float, ptr addrspace(1) %1, i64 %150, !dbg !28
  %152 = and i1 %131, %53, !dbg !29
  %153 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %137, i1 %152) #5, !dbg !30
  %154 = extractvalue { i32, i32, i32, i32 } %153, 0, !dbg !30
  %155 = extractvalue { i32, i32, i32, i32 } %153, 1, !dbg !30
  %156 = extractvalue { i32, i32, i32, i32 } %153, 2, !dbg !30
  %157 = extractvalue { i32, i32, i32, i32 } %153, 3, !dbg !30
  %158 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %139, i1 %152) #5, !dbg !30
  %159 = extractvalue { i32, i32, i32, i32 } %158, 0, !dbg !30
  %160 = extractvalue { i32, i32, i32, i32 } %158, 1, !dbg !30
  %161 = extractvalue { i32, i32, i32, i32 } %158, 2, !dbg !30
  %162 = extractvalue { i32, i32, i32, i32 } %158, 3, !dbg !30
  %163 = insertelement <4 x i32> poison, i32 %160, i64 0, !dbg !30
  %164 = insertelement <4 x i32> %163, i32 %159, i64 1, !dbg !30
  %165 = insertelement <4 x i32> %164, i32 %157, i64 2, !dbg !30
  %166 = insertelement <4 x i32> %165, i32 %156, i64 3, !dbg !30
  %167 = bitcast <4 x i32> %166 to <4 x float>, !dbg !30
  %168 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %141, i1 %152) #5, !dbg !30
  %169 = extractvalue { i32, i32, i32, i32 } %168, 0, !dbg !30
  %170 = extractvalue { i32, i32, i32, i32 } %168, 1, !dbg !30
  %171 = extractvalue { i32, i32, i32, i32 } %168, 2, !dbg !30
  %172 = extractvalue { i32, i32, i32, i32 } %168, 3, !dbg !30
  %173 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %143, i1 %152) #5, !dbg !30
  %174 = extractvalue { i32, i32, i32, i32 } %173, 0, !dbg !30
  %175 = extractvalue { i32, i32, i32, i32 } %173, 1, !dbg !30
  %176 = extractvalue { i32, i32, i32, i32 } %173, 2, !dbg !30
  %177 = extractvalue { i32, i32, i32, i32 } %173, 3, !dbg !30
  %178 = insertelement <8 x i32> poison, i32 %175, i64 0, !dbg !30
  %179 = insertelement <8 x i32> %178, i32 %174, i64 1, !dbg !30
  %180 = insertelement <8 x i32> %179, i32 %172, i64 2, !dbg !30
  %181 = insertelement <8 x i32> %180, i32 %171, i64 3, !dbg !30
  %182 = insertelement <8 x i32> %181, i32 %170, i64 4, !dbg !30
  %183 = insertelement <8 x i32> %182, i32 %169, i64 5, !dbg !30
  %184 = insertelement <8 x i32> %183, i32 %162, i64 6, !dbg !30
  %185 = insertelement <8 x i32> %184, i32 %161, i64 7, !dbg !30
  %186 = bitcast <8 x i32> %185 to <8 x float>, !dbg !30
  %187 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %145, i1 %152) #5, !dbg !30
  %188 = extractvalue { i32, i32, i32, i32 } %187, 0, !dbg !30
  %189 = extractvalue { i32, i32, i32, i32 } %187, 1, !dbg !30
  %190 = extractvalue { i32, i32, i32, i32 } %187, 2, !dbg !30
  %191 = extractvalue { i32, i32, i32, i32 } %187, 3, !dbg !30
  %192 = insertelement <4 x i32> poison, i32 %188, i64 0, !dbg !30
  %193 = insertelement <4 x i32> %192, i32 %154, i64 1, !dbg !30
  %194 = insertelement <4 x i32> %193, i32 %189, i64 2, !dbg !30
  %195 = insertelement <4 x i32> %194, i32 %155, i64 3, !dbg !30
  %196 = bitcast <4 x i32> %195 to <4 x float>, !dbg !30
  %197 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %147, i1 %152) #5, !dbg !30
  %198 = extractvalue { i32, i32, i32, i32 } %197, 0, !dbg !30
  %199 = extractvalue { i32, i32, i32, i32 } %197, 1, !dbg !30
  %200 = extractvalue { i32, i32, i32, i32 } %197, 2, !dbg !30
  %201 = extractvalue { i32, i32, i32, i32 } %197, 3, !dbg !30
  %202 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %149, i1 %152) #5, !dbg !30
  %203 = extractvalue { i32, i32, i32, i32 } %202, 0, !dbg !30
  %204 = extractvalue { i32, i32, i32, i32 } %202, 1, !dbg !30
  %205 = extractvalue { i32, i32, i32, i32 } %202, 2, !dbg !30
  %206 = extractvalue { i32, i32, i32, i32 } %202, 3, !dbg !30
  %207 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %151, i1 %152) #5, !dbg !30
  %208 = extractvalue { i32, i32, i32, i32 } %207, 0, !dbg !30
  %209 = extractvalue { i32, i32, i32, i32 } %207, 1, !dbg !30
  %210 = extractvalue { i32, i32, i32, i32 } %207, 2, !dbg !30
  %211 = extractvalue { i32, i32, i32, i32 } %207, 3, !dbg !30
  %212 = insertelement <16 x i32> poison, i32 %211, i64 0, !dbg !30
  %213 = insertelement <16 x i32> %212, i32 %210, i64 1, !dbg !30
  %214 = insertelement <16 x i32> %213, i32 %209, i64 2, !dbg !30
  %215 = insertelement <16 x i32> %214, i32 %208, i64 3, !dbg !30
  %216 = insertelement <16 x i32> %215, i32 %206, i64 4, !dbg !30
  %217 = insertelement <16 x i32> %216, i32 %205, i64 5, !dbg !30
  %218 = insertelement <16 x i32> %217, i32 %204, i64 6, !dbg !30
  %219 = insertelement <16 x i32> %218, i32 %203, i64 7, !dbg !30
  %220 = insertelement <16 x i32> %219, i32 %201, i64 8, !dbg !30
  %221 = insertelement <16 x i32> %220, i32 %200, i64 9, !dbg !30
  %222 = insertelement <16 x i32> %221, i32 %199, i64 10, !dbg !30
  %223 = insertelement <16 x i32> %222, i32 %198, i64 11, !dbg !30
  %224 = insertelement <16 x i32> %223, i32 %191, i64 12, !dbg !30
  %225 = insertelement <16 x i32> %224, i32 %190, i64 13, !dbg !30
  %226 = insertelement <16 x i32> %225, i32 %177, i64 14, !dbg !30
  %227 = insertelement <16 x i32> %226, i32 %176, i64 15, !dbg !30
  %228 = bitcast <16 x i32> %227 to <16 x float>, !dbg !30
  %229 = fmul <4 x float> %167, splat (float 5.000000e-01), !dbg !31
  %230 = fmul <8 x float> %186, splat (float 5.000000e-01), !dbg !31
  %231 = fmul <4 x float> %196, splat (float 5.000000e-01), !dbg !31
  %232 = fmul <16 x float> %228, splat (float 5.000000e-01), !dbg !31
  %233 = bitcast i32 %154 to float, !dbg !32
  %234 = fmul float %233, %233, !dbg !32
  %235 = bitcast i32 %155 to float, !dbg !32
  %236 = fmul float %235, %235, !dbg !32
  %237 = bitcast i32 %156 to float, !dbg !32
  %238 = fmul float %237, %237, !dbg !32
  %239 = bitcast i32 %157 to float, !dbg !32
  %240 = fmul float %239, %239, !dbg !32
  %241 = bitcast i32 %159 to float, !dbg !32
  %242 = fmul float %241, %241, !dbg !32
  %243 = bitcast i32 %160 to float, !dbg !32
  %244 = fmul float %243, %243, !dbg !32
  %245 = bitcast i32 %161 to float, !dbg !32
  %246 = fmul float %245, %245, !dbg !32
  %247 = bitcast i32 %162 to float, !dbg !32
  %248 = fmul float %247, %247, !dbg !32
  %249 = bitcast i32 %169 to float, !dbg !32
  %250 = fmul float %249, %249, !dbg !32
  %251 = bitcast i32 %170 to float, !dbg !32
  %252 = fmul float %251, %251, !dbg !32
  %253 = bitcast i32 %171 to float, !dbg !32
  %254 = fmul float %253, %253, !dbg !32
  %255 = bitcast i32 %172 to float, !dbg !32
  %256 = fmul float %255, %255, !dbg !32
  %257 = bitcast i32 %174 to float, !dbg !32
  %258 = fmul float %257, %257, !dbg !32
  %259 = bitcast i32 %175 to float, !dbg !32
  %260 = fmul float %259, %259, !dbg !32
  %261 = bitcast i32 %176 to float, !dbg !32
  %262 = fmul float %261, %261, !dbg !32
  %263 = bitcast i32 %177 to float, !dbg !32
  %264 = fmul float %263, %263, !dbg !32
  %265 = bitcast i32 %188 to float, !dbg !32
  %266 = fmul float %265, %265, !dbg !32
  %267 = bitcast i32 %189 to float, !dbg !32
  %268 = fmul float %267, %267, !dbg !32
  %269 = bitcast i32 %190 to float, !dbg !32
  %270 = fmul float %269, %269, !dbg !32
  %271 = bitcast i32 %191 to float, !dbg !32
  %272 = fmul float %271, %271, !dbg !32
  %273 = bitcast i32 %198 to float, !dbg !32
  %274 = fmul float %273, %273, !dbg !32
  %275 = bitcast i32 %199 to float, !dbg !32
  %276 = fmul float %275, %275, !dbg !32
  %277 = bitcast i32 %200 to float, !dbg !32
  %278 = fmul float %277, %277, !dbg !32
  %279 = bitcast i32 %201 to float, !dbg !32
  %280 = fmul float %279, %279, !dbg !32
  %281 = bitcast i32 %203 to float, !dbg !32
  %282 = fmul float %281, %281, !dbg !32
  %283 = bitcast i32 %204 to float, !dbg !32
  %284 = fmul float %283, %283, !dbg !32
  %285 = bitcast i32 %205 to float, !dbg !32
  %286 = fmul float %285, %285, !dbg !32
  %287 = bitcast i32 %206 to float, !dbg !32
  %288 = fmul float %287, %287, !dbg !32
  %289 = bitcast i32 %208 to float, !dbg !32
  %290 = fmul float %289, %289, !dbg !32
  %291 = bitcast i32 %209 to float, !dbg !32
  %292 = fmul float %291, %291, !dbg !32
  %293 = bitcast i32 %210 to float, !dbg !32
  %294 = fmul float %293, %293, !dbg !32
  %295 = bitcast i32 %211 to float, !dbg !32
  %296 = fmul float %295, %295, !dbg !32
  %297 = fmul float %234, %233, !dbg !33
  %298 = fmul float %236, %235, !dbg !33
  %299 = fmul float %238, %237, !dbg !33
  %300 = fmul float %240, %239, !dbg !33
  %301 = fmul float %242, %241, !dbg !33
  %302 = fmul float %244, %243, !dbg !33
  %303 = fmul float %246, %245, !dbg !33
  %304 = fmul float %248, %247, !dbg !33
  %305 = fmul float %250, %249, !dbg !33
  %306 = fmul float %252, %251, !dbg !33
  %307 = fmul float %254, %253, !dbg !33
  %308 = fmul float %256, %255, !dbg !33
  %309 = fmul float %258, %257, !dbg !33
  %310 = fmul float %260, %259, !dbg !33
  %311 = fmul float %262, %261, !dbg !33
  %312 = fmul float %264, %263, !dbg !33
  %313 = fmul float %266, %265, !dbg !33
  %314 = fmul float %268, %267, !dbg !33
  %315 = fmul float %270, %269, !dbg !33
  %316 = fmul float %272, %271, !dbg !33
  %317 = fmul float %274, %273, !dbg !33
  %318 = fmul float %276, %275, !dbg !33
  %319 = fmul float %278, %277, !dbg !33
  %320 = fmul float %280, %279, !dbg !33
  %321 = fmul float %282, %281, !dbg !33
  %322 = fmul float %284, %283, !dbg !33
  %323 = fmul float %286, %285, !dbg !33
  %324 = fmul float %288, %287, !dbg !33
  %325 = fmul float %290, %289, !dbg !33
  %326 = fmul float %292, %291, !dbg !33
  %327 = fmul float %294, %293, !dbg !33
  %328 = fmul float %296, %295, !dbg !33
  %329 = fmul float %297, 0x3FA6E4E260000000, !dbg !34
  %330 = fmul float %298, 0x3FA6E4E260000000, !dbg !34
  %331 = fmul float %299, 0x3FA6E4E260000000, !dbg !34
  %332 = fmul float %300, 0x3FA6E4E260000000, !dbg !34
  %333 = fmul float %301, 0x3FA6E4E260000000, !dbg !34
  %334 = fmul float %302, 0x3FA6E4E260000000, !dbg !34
  %335 = fmul float %303, 0x3FA6E4E260000000, !dbg !34
  %336 = fmul float %304, 0x3FA6E4E260000000, !dbg !34
  %337 = fmul float %305, 0x3FA6E4E260000000, !dbg !34
  %338 = fmul float %306, 0x3FA6E4E260000000, !dbg !34
  %339 = fmul float %307, 0x3FA6E4E260000000, !dbg !34
  %340 = fmul float %308, 0x3FA6E4E260000000, !dbg !34
  %341 = fmul float %309, 0x3FA6E4E260000000, !dbg !34
  %342 = fmul float %310, 0x3FA6E4E260000000, !dbg !34
  %343 = fmul float %311, 0x3FA6E4E260000000, !dbg !34
  %344 = fmul float %312, 0x3FA6E4E260000000, !dbg !34
  %345 = fmul float %313, 0x3FA6E4E260000000, !dbg !34
  %346 = fmul float %314, 0x3FA6E4E260000000, !dbg !34
  %347 = fmul float %315, 0x3FA6E4E260000000, !dbg !34
  %348 = fmul float %316, 0x3FA6E4E260000000, !dbg !34
  %349 = fmul float %317, 0x3FA6E4E260000000, !dbg !34
  %350 = fmul float %318, 0x3FA6E4E260000000, !dbg !34
  %351 = fmul float %319, 0x3FA6E4E260000000, !dbg !34
  %352 = fmul float %320, 0x3FA6E4E260000000, !dbg !34
  %353 = fmul float %321, 0x3FA6E4E260000000, !dbg !34
  %354 = fmul float %322, 0x3FA6E4E260000000, !dbg !34
  %355 = fmul float %323, 0x3FA6E4E260000000, !dbg !34
  %356 = fmul float %324, 0x3FA6E4E260000000, !dbg !34
  %357 = fmul float %325, 0x3FA6E4E260000000, !dbg !34
  %358 = fmul float %326, 0x3FA6E4E260000000, !dbg !34
  %359 = fmul float %327, 0x3FA6E4E260000000, !dbg !34
  %360 = fmul float %328, 0x3FA6E4E260000000, !dbg !34
  %361 = fadd float %329, %233, !dbg !35
  %362 = fadd float %330, %235, !dbg !35
  %363 = fadd float %331, %237, !dbg !35
  %364 = fadd float %332, %239, !dbg !35
  %365 = fadd float %333, %241, !dbg !35
  %366 = fadd float %334, %243, !dbg !35
  %367 = fadd float %335, %245, !dbg !35
  %368 = fadd float %336, %247, !dbg !35
  %369 = fadd float %337, %249, !dbg !35
  %370 = fadd float %338, %251, !dbg !35
  %371 = fadd float %339, %253, !dbg !35
  %372 = fadd float %340, %255, !dbg !35
  %373 = fadd float %341, %257, !dbg !35
  %374 = fadd float %342, %259, !dbg !35
  %375 = fadd float %343, %261, !dbg !35
  %376 = fadd float %344, %263, !dbg !35
  %377 = fadd float %345, %265, !dbg !35
  %378 = fadd float %346, %267, !dbg !35
  %379 = fadd float %347, %269, !dbg !35
  %380 = fadd float %348, %271, !dbg !35
  %381 = fadd float %349, %273, !dbg !35
  %382 = fadd float %350, %275, !dbg !35
  %383 = fadd float %351, %277, !dbg !35
  %384 = fadd float %352, %279, !dbg !35
  %385 = fadd float %353, %281, !dbg !35
  %386 = fadd float %354, %283, !dbg !35
  %387 = fadd float %355, %285, !dbg !35
  %388 = fadd float %356, %287, !dbg !35
  %389 = fadd float %357, %289, !dbg !35
  %390 = fadd float %358, %291, !dbg !35
  %391 = fadd float %359, %293, !dbg !35
  %392 = fadd float %360, %295, !dbg !35
  %393 = fmul float %361, 0x3FE9884540000000, !dbg !36
  %394 = fmul float %362, 0x3FE9884540000000, !dbg !36
  %395 = fmul float %363, 0x3FE9884540000000, !dbg !36
  %396 = fmul float %364, 0x3FE9884540000000, !dbg !36
  %397 = fmul float %365, 0x3FE9884540000000, !dbg !36
  %398 = fmul float %366, 0x3FE9884540000000, !dbg !36
  %399 = fmul float %367, 0x3FE9884540000000, !dbg !36
  %400 = fmul float %368, 0x3FE9884540000000, !dbg !36
  %401 = fmul float %369, 0x3FE9884540000000, !dbg !36
  %402 = fmul float %370, 0x3FE9884540000000, !dbg !36
  %403 = fmul float %371, 0x3FE9884540000000, !dbg !36
  %404 = fmul float %372, 0x3FE9884540000000, !dbg !36
  %405 = fmul float %373, 0x3FE9884540000000, !dbg !36
  %406 = fmul float %374, 0x3FE9884540000000, !dbg !36
  %407 = fmul float %375, 0x3FE9884540000000, !dbg !36
  %408 = fmul float %376, 0x3FE9884540000000, !dbg !36
  %409 = fmul float %377, 0x3FE9884540000000, !dbg !36
  %410 = fmul float %378, 0x3FE9884540000000, !dbg !36
  %411 = fmul float %379, 0x3FE9884540000000, !dbg !36
  %412 = fmul float %380, 0x3FE9884540000000, !dbg !36
  %413 = fmul float %381, 0x3FE9884540000000, !dbg !36
  %414 = fmul float %382, 0x3FE9884540000000, !dbg !36
  %415 = fmul float %383, 0x3FE9884540000000, !dbg !36
  %416 = fmul float %384, 0x3FE9884540000000, !dbg !36
  %417 = fmul float %385, 0x3FE9884540000000, !dbg !36
  %418 = fmul float %386, 0x3FE9884540000000, !dbg !36
  %419 = fmul float %387, 0x3FE9884540000000, !dbg !36
  %420 = fmul float %388, 0x3FE9884540000000, !dbg !36
  %421 = fmul float %389, 0x3FE9884540000000, !dbg !36
  %422 = fmul float %390, 0x3FE9884540000000, !dbg !36
  %423 = fmul float %391, 0x3FE9884540000000, !dbg !36
  %424 = fmul float %392, 0x3FE9884540000000, !dbg !36
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i594 = icmp eq i32 %425, 0, !dbg !37
  %426 = tail call float @llvm.nvvm.fabs.ftz.f(float %393) #5, !dbg !37
  %427 = tail call float @llvm.nvvm.fabs.f(float %393) #5, !dbg !37
  %.01.i595 = select i1 %.not.i594, float %427, float %426, !dbg !37
  %428 = fcmp ult float %.01.i595, 0x3FE3333340000000, !dbg !37
  br i1 %428, label %__internal_fmad.exit3.i601, label %__internal_fmad.exit1.i596, !dbg !37

__internal_fmad.exit1.i596:                       ; preds = %27
  %429 = fmul float %.01.i595, 0x4007154760000000, !dbg !37
  %430 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %429) #5, !dbg !37
  %431 = fadd float %430, 1.000000e+00, !dbg !37
  %432 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %431) #6, !dbg !37, !srcloc !38
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i597 = icmp eq i32 %433, 0, !dbg !37
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i598 = select i1 %.not6.i597, float %435, float %434, !dbg !37
  %436 = fcmp oge float %.01.i595, 0x4022059680000000, !dbg !37
  %s.0.i599 = select i1 %436, float 1.000000e+00, float %.03.i598, !dbg !37
  %437 = bitcast float %s.0.i599 to i32, !dbg !37
  %438 = bitcast float %393 to i32, !dbg !37
  %439 = and i32 %438, -2147483648, !dbg !37
  %440 = or i32 %439, %437, !dbg !37
  %441 = bitcast i32 %440 to float, !dbg !37
  br label %__nv_tanhf.exit612, !dbg !37

__internal_fmad.exit3.i601:                       ; preds = %27
  %442 = fmul float %393, %393, !dbg !37
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i602 = icmp eq i32 %443, 0, !dbg !37
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #5, !dbg !37
  %445 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i603 = select i1 %.not1.i602, float %445, float %444, !dbg !37
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i604 = icmp eq i32 %446, 0, !dbg !37
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i603, float %442, float 0x3FC10B2820000000) #5, !dbg !37
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i603, float %442, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i605 = select i1 %.not2.i604, float %448, float %447, !dbg !37
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i606 = icmp eq i32 %449, 0, !dbg !37
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i605, float %442, float 0xBFD5553DA0000000) #5, !dbg !37
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i605, float %442, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i607 = select i1 %.not3.i606, float %451, float %450, !dbg !37
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i608 = icmp eq i32 %452, 0, !dbg !37
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i607, float %442, float 0.000000e+00) #5, !dbg !37
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i607, float %442, float 0.000000e+00) #5, !dbg !37
  %.04.i609 = select i1 %.not4.i608, float %454, float %453, !dbg !37
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i610 = icmp eq i32 %455, 0, !dbg !37
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i609, float %393, float %393) #5, !dbg !37
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i609, float %393, float %393) #5, !dbg !37
  %.02.i611 = select i1 %.not5.i610, float %457, float %456, !dbg !37
  br label %__nv_tanhf.exit612, !dbg !37

__nv_tanhf.exit612:                               ; preds = %__internal_fmad.exit1.i596, %__internal_fmad.exit3.i601
  %s.1.i600 = phi float [ %441, %__internal_fmad.exit1.i596 ], [ %.02.i611, %__internal_fmad.exit3.i601 ], !dbg !37
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i613 = icmp eq i32 %458, 0, !dbg !37
  %459 = tail call float @llvm.nvvm.fabs.ftz.f(float %394) #5, !dbg !37
  %460 = tail call float @llvm.nvvm.fabs.f(float %394) #5, !dbg !37
  %.01.i614 = select i1 %.not.i613, float %460, float %459, !dbg !37
  %461 = fcmp ult float %.01.i614, 0x3FE3333340000000, !dbg !37
  br i1 %461, label %__internal_fmad.exit3.i620, label %__internal_fmad.exit1.i615, !dbg !37

__internal_fmad.exit1.i615:                       ; preds = %__nv_tanhf.exit612
  %462 = fmul float %.01.i614, 0x4007154760000000, !dbg !37
  %463 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %462) #5, !dbg !37
  %464 = fadd float %463, 1.000000e+00, !dbg !37
  %465 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %464) #6, !dbg !37, !srcloc !38
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i616 = icmp eq i32 %466, 0, !dbg !37
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %465, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %465, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i617 = select i1 %.not6.i616, float %468, float %467, !dbg !37
  %469 = fcmp oge float %.01.i614, 0x4022059680000000, !dbg !37
  %s.0.i618 = select i1 %469, float 1.000000e+00, float %.03.i617, !dbg !37
  %470 = bitcast float %s.0.i618 to i32, !dbg !37
  %471 = bitcast float %394 to i32, !dbg !37
  %472 = and i32 %471, -2147483648, !dbg !37
  %473 = or i32 %472, %470, !dbg !37
  %474 = bitcast i32 %473 to float, !dbg !37
  br label %__nv_tanhf.exit631, !dbg !37

__internal_fmad.exit3.i620:                       ; preds = %__nv_tanhf.exit612
  %475 = fmul float %394, %394, !dbg !37
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i621 = icmp eq i32 %476, 0, !dbg !37
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #5, !dbg !37
  %478 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i622 = select i1 %.not1.i621, float %478, float %477, !dbg !37
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i623 = icmp eq i32 %479, 0, !dbg !37
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i622, float %475, float 0x3FC10B2820000000) #5, !dbg !37
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i622, float %475, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i624 = select i1 %.not2.i623, float %481, float %480, !dbg !37
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i625 = icmp eq i32 %482, 0, !dbg !37
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i624, float %475, float 0xBFD5553DA0000000) #5, !dbg !37
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i624, float %475, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i626 = select i1 %.not3.i625, float %484, float %483, !dbg !37
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i627 = icmp eq i32 %485, 0, !dbg !37
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i626, float %475, float 0.000000e+00) #5, !dbg !37
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i626, float %475, float 0.000000e+00) #5, !dbg !37
  %.04.i628 = select i1 %.not4.i627, float %487, float %486, !dbg !37
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i629 = icmp eq i32 %488, 0, !dbg !37
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i628, float %394, float %394) #5, !dbg !37
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i628, float %394, float %394) #5, !dbg !37
  %.02.i630 = select i1 %.not5.i629, float %490, float %489, !dbg !37
  br label %__nv_tanhf.exit631, !dbg !37

__nv_tanhf.exit631:                               ; preds = %__internal_fmad.exit1.i615, %__internal_fmad.exit3.i620
  %s.1.i619 = phi float [ %474, %__internal_fmad.exit1.i615 ], [ %.02.i630, %__internal_fmad.exit3.i620 ], !dbg !37
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i632 = icmp eq i32 %491, 0, !dbg !37
  %492 = tail call float @llvm.nvvm.fabs.ftz.f(float %395) #5, !dbg !37
  %493 = tail call float @llvm.nvvm.fabs.f(float %395) #5, !dbg !37
  %.01.i633 = select i1 %.not.i632, float %493, float %492, !dbg !37
  %494 = fcmp ult float %.01.i633, 0x3FE3333340000000, !dbg !37
  br i1 %494, label %__internal_fmad.exit3.i639, label %__internal_fmad.exit1.i634, !dbg !37

__internal_fmad.exit1.i634:                       ; preds = %__nv_tanhf.exit631
  %495 = fmul float %.01.i633, 0x4007154760000000, !dbg !37
  %496 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %495) #5, !dbg !37
  %497 = fadd float %496, 1.000000e+00, !dbg !37
  %498 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %497) #6, !dbg !37, !srcloc !38
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i635 = icmp eq i32 %499, 0, !dbg !37
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %498, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %498, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i636 = select i1 %.not6.i635, float %501, float %500, !dbg !37
  %502 = fcmp oge float %.01.i633, 0x4022059680000000, !dbg !37
  %s.0.i637 = select i1 %502, float 1.000000e+00, float %.03.i636, !dbg !37
  %503 = bitcast float %s.0.i637 to i32, !dbg !37
  %504 = bitcast float %395 to i32, !dbg !37
  %505 = and i32 %504, -2147483648, !dbg !37
  %506 = or i32 %505, %503, !dbg !37
  %507 = bitcast i32 %506 to float, !dbg !37
  br label %__nv_tanhf.exit650, !dbg !37

__internal_fmad.exit3.i639:                       ; preds = %__nv_tanhf.exit631
  %508 = fmul float %395, %395, !dbg !37
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i640 = icmp eq i32 %509, 0, !dbg !37
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #5, !dbg !37
  %511 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i641 = select i1 %.not1.i640, float %511, float %510, !dbg !37
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i642 = icmp eq i32 %512, 0, !dbg !37
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i641, float %508, float 0x3FC10B2820000000) #5, !dbg !37
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i641, float %508, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i643 = select i1 %.not2.i642, float %514, float %513, !dbg !37
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i644 = icmp eq i32 %515, 0, !dbg !37
  %516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i643, float %508, float 0xBFD5553DA0000000) #5, !dbg !37
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i643, float %508, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i645 = select i1 %.not3.i644, float %517, float %516, !dbg !37
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i646 = icmp eq i32 %518, 0, !dbg !37
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i645, float %508, float 0.000000e+00) #5, !dbg !37
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i645, float %508, float 0.000000e+00) #5, !dbg !37
  %.04.i647 = select i1 %.not4.i646, float %520, float %519, !dbg !37
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i648 = icmp eq i32 %521, 0, !dbg !37
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i647, float %395, float %395) #5, !dbg !37
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i647, float %395, float %395) #5, !dbg !37
  %.02.i649 = select i1 %.not5.i648, float %523, float %522, !dbg !37
  br label %__nv_tanhf.exit650, !dbg !37

__nv_tanhf.exit650:                               ; preds = %__internal_fmad.exit1.i634, %__internal_fmad.exit3.i639
  %s.1.i638 = phi float [ %507, %__internal_fmad.exit1.i634 ], [ %.02.i649, %__internal_fmad.exit3.i639 ], !dbg !37
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i651 = icmp eq i32 %524, 0, !dbg !37
  %525 = tail call float @llvm.nvvm.fabs.ftz.f(float %396) #5, !dbg !37
  %526 = tail call float @llvm.nvvm.fabs.f(float %396) #5, !dbg !37
  %.01.i652 = select i1 %.not.i651, float %526, float %525, !dbg !37
  %527 = fcmp ult float %.01.i652, 0x3FE3333340000000, !dbg !37
  br i1 %527, label %__internal_fmad.exit3.i658, label %__internal_fmad.exit1.i653, !dbg !37

__internal_fmad.exit1.i653:                       ; preds = %__nv_tanhf.exit650
  %528 = fmul float %.01.i652, 0x4007154760000000, !dbg !37
  %529 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %528) #5, !dbg !37
  %530 = fadd float %529, 1.000000e+00, !dbg !37
  %531 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %530) #6, !dbg !37, !srcloc !38
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i654 = icmp eq i32 %532, 0, !dbg !37
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %531, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %531, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i655 = select i1 %.not6.i654, float %534, float %533, !dbg !37
  %535 = fcmp oge float %.01.i652, 0x4022059680000000, !dbg !37
  %s.0.i656 = select i1 %535, float 1.000000e+00, float %.03.i655, !dbg !37
  %536 = bitcast float %s.0.i656 to i32, !dbg !37
  %537 = bitcast float %396 to i32, !dbg !37
  %538 = and i32 %537, -2147483648, !dbg !37
  %539 = or i32 %538, %536, !dbg !37
  %540 = bitcast i32 %539 to float, !dbg !37
  br label %__nv_tanhf.exit669, !dbg !37

__internal_fmad.exit3.i658:                       ; preds = %__nv_tanhf.exit650
  %541 = fmul float %396, %396, !dbg !37
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i659 = icmp eq i32 %542, 0, !dbg !37
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #5, !dbg !37
  %544 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i660 = select i1 %.not1.i659, float %544, float %543, !dbg !37
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i661 = icmp eq i32 %545, 0, !dbg !37
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i660, float %541, float 0x3FC10B2820000000) #5, !dbg !37
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i660, float %541, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i662 = select i1 %.not2.i661, float %547, float %546, !dbg !37
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i663 = icmp eq i32 %548, 0, !dbg !37
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i662, float %541, float 0xBFD5553DA0000000) #5, !dbg !37
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i662, float %541, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i664 = select i1 %.not3.i663, float %550, float %549, !dbg !37
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i665 = icmp eq i32 %551, 0, !dbg !37
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i664, float %541, float 0.000000e+00) #5, !dbg !37
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i664, float %541, float 0.000000e+00) #5, !dbg !37
  %.04.i666 = select i1 %.not4.i665, float %553, float %552, !dbg !37
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i667 = icmp eq i32 %554, 0, !dbg !37
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i666, float %396, float %396) #5, !dbg !37
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i666, float %396, float %396) #5, !dbg !37
  %.02.i668 = select i1 %.not5.i667, float %556, float %555, !dbg !37
  br label %__nv_tanhf.exit669, !dbg !37

__nv_tanhf.exit669:                               ; preds = %__internal_fmad.exit1.i653, %__internal_fmad.exit3.i658
  %s.1.i657 = phi float [ %540, %__internal_fmad.exit1.i653 ], [ %.02.i668, %__internal_fmad.exit3.i658 ], !dbg !37
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i670 = icmp eq i32 %557, 0, !dbg !37
  %558 = tail call float @llvm.nvvm.fabs.ftz.f(float %397) #5, !dbg !37
  %559 = tail call float @llvm.nvvm.fabs.f(float %397) #5, !dbg !37
  %.01.i671 = select i1 %.not.i670, float %559, float %558, !dbg !37
  %560 = fcmp ult float %.01.i671, 0x3FE3333340000000, !dbg !37
  br i1 %560, label %__internal_fmad.exit3.i677, label %__internal_fmad.exit1.i672, !dbg !37

__internal_fmad.exit1.i672:                       ; preds = %__nv_tanhf.exit669
  %561 = fmul float %.01.i671, 0x4007154760000000, !dbg !37
  %562 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %561) #5, !dbg !37
  %563 = fadd float %562, 1.000000e+00, !dbg !37
  %564 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %563) #6, !dbg !37, !srcloc !38
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i673 = icmp eq i32 %565, 0, !dbg !37
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i674 = select i1 %.not6.i673, float %567, float %566, !dbg !37
  %568 = fcmp oge float %.01.i671, 0x4022059680000000, !dbg !37
  %s.0.i675 = select i1 %568, float 1.000000e+00, float %.03.i674, !dbg !37
  %569 = bitcast float %s.0.i675 to i32, !dbg !37
  %570 = bitcast float %397 to i32, !dbg !37
  %571 = and i32 %570, -2147483648, !dbg !37
  %572 = or i32 %571, %569, !dbg !37
  %573 = bitcast i32 %572 to float, !dbg !37
  br label %__nv_tanhf.exit688, !dbg !37

__internal_fmad.exit3.i677:                       ; preds = %__nv_tanhf.exit669
  %574 = fmul float %397, %397, !dbg !37
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i678 = icmp eq i32 %575, 0, !dbg !37
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #5, !dbg !37
  %577 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i679 = select i1 %.not1.i678, float %577, float %576, !dbg !37
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i680 = icmp eq i32 %578, 0, !dbg !37
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i679, float %574, float 0x3FC10B2820000000) #5, !dbg !37
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i679, float %574, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i681 = select i1 %.not2.i680, float %580, float %579, !dbg !37
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i682 = icmp eq i32 %581, 0, !dbg !37
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i681, float %574, float 0xBFD5553DA0000000) #5, !dbg !37
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i681, float %574, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i683 = select i1 %.not3.i682, float %583, float %582, !dbg !37
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i684 = icmp eq i32 %584, 0, !dbg !37
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i683, float %574, float 0.000000e+00) #5, !dbg !37
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i683, float %574, float 0.000000e+00) #5, !dbg !37
  %.04.i685 = select i1 %.not4.i684, float %586, float %585, !dbg !37
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i686 = icmp eq i32 %587, 0, !dbg !37
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i685, float %397, float %397) #5, !dbg !37
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i685, float %397, float %397) #5, !dbg !37
  %.02.i687 = select i1 %.not5.i686, float %589, float %588, !dbg !37
  br label %__nv_tanhf.exit688, !dbg !37

__nv_tanhf.exit688:                               ; preds = %__internal_fmad.exit1.i672, %__internal_fmad.exit3.i677
  %s.1.i676 = phi float [ %573, %__internal_fmad.exit1.i672 ], [ %.02.i687, %__internal_fmad.exit3.i677 ], !dbg !37
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i689 = icmp eq i32 %590, 0, !dbg !37
  %591 = tail call float @llvm.nvvm.fabs.ftz.f(float %398) #5, !dbg !37
  %592 = tail call float @llvm.nvvm.fabs.f(float %398) #5, !dbg !37
  %.01.i690 = select i1 %.not.i689, float %592, float %591, !dbg !37
  %593 = fcmp ult float %.01.i690, 0x3FE3333340000000, !dbg !37
  br i1 %593, label %__internal_fmad.exit3.i696, label %__internal_fmad.exit1.i691, !dbg !37

__internal_fmad.exit1.i691:                       ; preds = %__nv_tanhf.exit688
  %594 = fmul float %.01.i690, 0x4007154760000000, !dbg !37
  %595 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %594) #5, !dbg !37
  %596 = fadd float %595, 1.000000e+00, !dbg !37
  %597 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %596) #6, !dbg !37, !srcloc !38
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i692 = icmp eq i32 %598, 0, !dbg !37
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i693 = select i1 %.not6.i692, float %600, float %599, !dbg !37
  %601 = fcmp oge float %.01.i690, 0x4022059680000000, !dbg !37
  %s.0.i694 = select i1 %601, float 1.000000e+00, float %.03.i693, !dbg !37
  %602 = bitcast float %s.0.i694 to i32, !dbg !37
  %603 = bitcast float %398 to i32, !dbg !37
  %604 = and i32 %603, -2147483648, !dbg !37
  %605 = or i32 %604, %602, !dbg !37
  %606 = bitcast i32 %605 to float, !dbg !37
  br label %__nv_tanhf.exit707, !dbg !37

__internal_fmad.exit3.i696:                       ; preds = %__nv_tanhf.exit688
  %607 = fmul float %398, %398, !dbg !37
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i697 = icmp eq i32 %608, 0, !dbg !37
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #5, !dbg !37
  %610 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i698 = select i1 %.not1.i697, float %610, float %609, !dbg !37
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i699 = icmp eq i32 %611, 0, !dbg !37
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i698, float %607, float 0x3FC10B2820000000) #5, !dbg !37
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i698, float %607, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i700 = select i1 %.not2.i699, float %613, float %612, !dbg !37
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i701 = icmp eq i32 %614, 0, !dbg !37
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i700, float %607, float 0xBFD5553DA0000000) #5, !dbg !37
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i700, float %607, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i702 = select i1 %.not3.i701, float %616, float %615, !dbg !37
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i703 = icmp eq i32 %617, 0, !dbg !37
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i702, float %607, float 0.000000e+00) #5, !dbg !37
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i702, float %607, float 0.000000e+00) #5, !dbg !37
  %.04.i704 = select i1 %.not4.i703, float %619, float %618, !dbg !37
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i705 = icmp eq i32 %620, 0, !dbg !37
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i704, float %398, float %398) #5, !dbg !37
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i704, float %398, float %398) #5, !dbg !37
  %.02.i706 = select i1 %.not5.i705, float %622, float %621, !dbg !37
  br label %__nv_tanhf.exit707, !dbg !37

__nv_tanhf.exit707:                               ; preds = %__internal_fmad.exit1.i691, %__internal_fmad.exit3.i696
  %s.1.i695 = phi float [ %606, %__internal_fmad.exit1.i691 ], [ %.02.i706, %__internal_fmad.exit3.i696 ], !dbg !37
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i708 = icmp eq i32 %623, 0, !dbg !37
  %624 = tail call float @llvm.nvvm.fabs.ftz.f(float %399) #5, !dbg !37
  %625 = tail call float @llvm.nvvm.fabs.f(float %399) #5, !dbg !37
  %.01.i709 = select i1 %.not.i708, float %625, float %624, !dbg !37
  %626 = fcmp ult float %.01.i709, 0x3FE3333340000000, !dbg !37
  br i1 %626, label %__internal_fmad.exit3.i715, label %__internal_fmad.exit1.i710, !dbg !37

__internal_fmad.exit1.i710:                       ; preds = %__nv_tanhf.exit707
  %627 = fmul float %.01.i709, 0x4007154760000000, !dbg !37
  %628 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %627) #5, !dbg !37
  %629 = fadd float %628, 1.000000e+00, !dbg !37
  %630 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %629) #6, !dbg !37, !srcloc !38
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i711 = icmp eq i32 %631, 0, !dbg !37
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i712 = select i1 %.not6.i711, float %633, float %632, !dbg !37
  %634 = fcmp oge float %.01.i709, 0x4022059680000000, !dbg !37
  %s.0.i713 = select i1 %634, float 1.000000e+00, float %.03.i712, !dbg !37
  %635 = bitcast float %s.0.i713 to i32, !dbg !37
  %636 = bitcast float %399 to i32, !dbg !37
  %637 = and i32 %636, -2147483648, !dbg !37
  %638 = or i32 %637, %635, !dbg !37
  %639 = bitcast i32 %638 to float, !dbg !37
  br label %__nv_tanhf.exit726, !dbg !37

__internal_fmad.exit3.i715:                       ; preds = %__nv_tanhf.exit707
  %640 = fmul float %399, %399, !dbg !37
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i716 = icmp eq i32 %641, 0, !dbg !37
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #5, !dbg !37
  %643 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i717 = select i1 %.not1.i716, float %643, float %642, !dbg !37
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i718 = icmp eq i32 %644, 0, !dbg !37
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i717, float %640, float 0x3FC10B2820000000) #5, !dbg !37
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i717, float %640, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i719 = select i1 %.not2.i718, float %646, float %645, !dbg !37
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i720 = icmp eq i32 %647, 0, !dbg !37
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i719, float %640, float 0xBFD5553DA0000000) #5, !dbg !37
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i719, float %640, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i721 = select i1 %.not3.i720, float %649, float %648, !dbg !37
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i722 = icmp eq i32 %650, 0, !dbg !37
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i721, float %640, float 0.000000e+00) #5, !dbg !37
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i721, float %640, float 0.000000e+00) #5, !dbg !37
  %.04.i723 = select i1 %.not4.i722, float %652, float %651, !dbg !37
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i724 = icmp eq i32 %653, 0, !dbg !37
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i723, float %399, float %399) #5, !dbg !37
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i723, float %399, float %399) #5, !dbg !37
  %.02.i725 = select i1 %.not5.i724, float %655, float %654, !dbg !37
  br label %__nv_tanhf.exit726, !dbg !37

__nv_tanhf.exit726:                               ; preds = %__internal_fmad.exit1.i710, %__internal_fmad.exit3.i715
  %s.1.i714 = phi float [ %639, %__internal_fmad.exit1.i710 ], [ %.02.i725, %__internal_fmad.exit3.i715 ], !dbg !37
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i727 = icmp eq i32 %656, 0, !dbg !37
  %657 = tail call float @llvm.nvvm.fabs.ftz.f(float %400) #5, !dbg !37
  %658 = tail call float @llvm.nvvm.fabs.f(float %400) #5, !dbg !37
  %.01.i728 = select i1 %.not.i727, float %658, float %657, !dbg !37
  %659 = fcmp ult float %.01.i728, 0x3FE3333340000000, !dbg !37
  br i1 %659, label %__internal_fmad.exit3.i734, label %__internal_fmad.exit1.i729, !dbg !37

__internal_fmad.exit1.i729:                       ; preds = %__nv_tanhf.exit726
  %660 = fmul float %.01.i728, 0x4007154760000000, !dbg !37
  %661 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %660) #5, !dbg !37
  %662 = fadd float %661, 1.000000e+00, !dbg !37
  %663 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %662) #6, !dbg !37, !srcloc !38
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i730 = icmp eq i32 %664, 0, !dbg !37
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %666 = tail call float @llvm.nvvm.fma.rn.f(float %663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i731 = select i1 %.not6.i730, float %666, float %665, !dbg !37
  %667 = fcmp oge float %.01.i728, 0x4022059680000000, !dbg !37
  %s.0.i732 = select i1 %667, float 1.000000e+00, float %.03.i731, !dbg !37
  %668 = bitcast float %s.0.i732 to i32, !dbg !37
  %669 = bitcast float %400 to i32, !dbg !37
  %670 = and i32 %669, -2147483648, !dbg !37
  %671 = or i32 %670, %668, !dbg !37
  %672 = bitcast i32 %671 to float, !dbg !37
  br label %__nv_tanhf.exit745, !dbg !37

__internal_fmad.exit3.i734:                       ; preds = %__nv_tanhf.exit726
  %673 = fmul float %400, %400, !dbg !37
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i735 = icmp eq i32 %674, 0, !dbg !37
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #5, !dbg !37
  %676 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i736 = select i1 %.not1.i735, float %676, float %675, !dbg !37
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i737 = icmp eq i32 %677, 0, !dbg !37
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i736, float %673, float 0x3FC10B2820000000) #5, !dbg !37
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i736, float %673, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i738 = select i1 %.not2.i737, float %679, float %678, !dbg !37
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i739 = icmp eq i32 %680, 0, !dbg !37
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i738, float %673, float 0xBFD5553DA0000000) #5, !dbg !37
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i738, float %673, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i740 = select i1 %.not3.i739, float %682, float %681, !dbg !37
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i741 = icmp eq i32 %683, 0, !dbg !37
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i740, float %673, float 0.000000e+00) #5, !dbg !37
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i740, float %673, float 0.000000e+00) #5, !dbg !37
  %.04.i742 = select i1 %.not4.i741, float %685, float %684, !dbg !37
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i743 = icmp eq i32 %686, 0, !dbg !37
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i742, float %400, float %400) #5, !dbg !37
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i742, float %400, float %400) #5, !dbg !37
  %.02.i744 = select i1 %.not5.i743, float %688, float %687, !dbg !37
  br label %__nv_tanhf.exit745, !dbg !37

__nv_tanhf.exit745:                               ; preds = %__internal_fmad.exit1.i729, %__internal_fmad.exit3.i734
  %s.1.i733 = phi float [ %672, %__internal_fmad.exit1.i729 ], [ %.02.i744, %__internal_fmad.exit3.i734 ], !dbg !37
  %689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i746 = icmp eq i32 %689, 0, !dbg !37
  %690 = tail call float @llvm.nvvm.fabs.ftz.f(float %401) #5, !dbg !37
  %691 = tail call float @llvm.nvvm.fabs.f(float %401) #5, !dbg !37
  %.01.i747 = select i1 %.not.i746, float %691, float %690, !dbg !37
  %692 = fcmp ult float %.01.i747, 0x3FE3333340000000, !dbg !37
  br i1 %692, label %__internal_fmad.exit3.i753, label %__internal_fmad.exit1.i748, !dbg !37

__internal_fmad.exit1.i748:                       ; preds = %__nv_tanhf.exit745
  %693 = fmul float %.01.i747, 0x4007154760000000, !dbg !37
  %694 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %693) #5, !dbg !37
  %695 = fadd float %694, 1.000000e+00, !dbg !37
  %696 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %695) #6, !dbg !37, !srcloc !38
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i749 = icmp eq i32 %697, 0, !dbg !37
  %698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %699 = tail call float @llvm.nvvm.fma.rn.f(float %696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i750 = select i1 %.not6.i749, float %699, float %698, !dbg !37
  %700 = fcmp oge float %.01.i747, 0x4022059680000000, !dbg !37
  %s.0.i751 = select i1 %700, float 1.000000e+00, float %.03.i750, !dbg !37
  %701 = bitcast float %s.0.i751 to i32, !dbg !37
  %702 = bitcast float %401 to i32, !dbg !37
  %703 = and i32 %702, -2147483648, !dbg !37
  %704 = or i32 %703, %701, !dbg !37
  %705 = bitcast i32 %704 to float, !dbg !37
  br label %__nv_tanhf.exit764, !dbg !37

__internal_fmad.exit3.i753:                       ; preds = %__nv_tanhf.exit745
  %706 = fmul float %401, %401, !dbg !37
  %707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i754 = icmp eq i32 %707, 0, !dbg !37
  %708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %706, float 0xBFAAC795C0000000) #5, !dbg !37
  %709 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %706, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i755 = select i1 %.not1.i754, float %709, float %708, !dbg !37
  %710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i756 = icmp eq i32 %710, 0, !dbg !37
  %711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i755, float %706, float 0x3FC10B2820000000) #5, !dbg !37
  %712 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i755, float %706, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i757 = select i1 %.not2.i756, float %712, float %711, !dbg !37
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i758 = icmp eq i32 %713, 0, !dbg !37
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i757, float %706, float 0xBFD5553DA0000000) #5, !dbg !37
  %715 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i757, float %706, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i759 = select i1 %.not3.i758, float %715, float %714, !dbg !37
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i760 = icmp eq i32 %716, 0, !dbg !37
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i759, float %706, float 0.000000e+00) #5, !dbg !37
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i759, float %706, float 0.000000e+00) #5, !dbg !37
  %.04.i761 = select i1 %.not4.i760, float %718, float %717, !dbg !37
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i762 = icmp eq i32 %719, 0, !dbg !37
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i761, float %401, float %401) #5, !dbg !37
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i761, float %401, float %401) #5, !dbg !37
  %.02.i763 = select i1 %.not5.i762, float %721, float %720, !dbg !37
  br label %__nv_tanhf.exit764, !dbg !37

__nv_tanhf.exit764:                               ; preds = %__internal_fmad.exit1.i748, %__internal_fmad.exit3.i753
  %s.1.i752 = phi float [ %705, %__internal_fmad.exit1.i748 ], [ %.02.i763, %__internal_fmad.exit3.i753 ], !dbg !37
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i765 = icmp eq i32 %722, 0, !dbg !37
  %723 = tail call float @llvm.nvvm.fabs.ftz.f(float %402) #5, !dbg !37
  %724 = tail call float @llvm.nvvm.fabs.f(float %402) #5, !dbg !37
  %.01.i766 = select i1 %.not.i765, float %724, float %723, !dbg !37
  %725 = fcmp ult float %.01.i766, 0x3FE3333340000000, !dbg !37
  br i1 %725, label %__internal_fmad.exit3.i772, label %__internal_fmad.exit1.i767, !dbg !37

__internal_fmad.exit1.i767:                       ; preds = %__nv_tanhf.exit764
  %726 = fmul float %.01.i766, 0x4007154760000000, !dbg !37
  %727 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %726) #5, !dbg !37
  %728 = fadd float %727, 1.000000e+00, !dbg !37
  %729 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %728) #6, !dbg !37, !srcloc !38
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i768 = icmp eq i32 %730, 0, !dbg !37
  %731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %732 = tail call float @llvm.nvvm.fma.rn.f(float %729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i769 = select i1 %.not6.i768, float %732, float %731, !dbg !37
  %733 = fcmp oge float %.01.i766, 0x4022059680000000, !dbg !37
  %s.0.i770 = select i1 %733, float 1.000000e+00, float %.03.i769, !dbg !37
  %734 = bitcast float %s.0.i770 to i32, !dbg !37
  %735 = bitcast float %402 to i32, !dbg !37
  %736 = and i32 %735, -2147483648, !dbg !37
  %737 = or i32 %736, %734, !dbg !37
  %738 = bitcast i32 %737 to float, !dbg !37
  br label %__nv_tanhf.exit783, !dbg !37

__internal_fmad.exit3.i772:                       ; preds = %__nv_tanhf.exit764
  %739 = fmul float %402, %402, !dbg !37
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i773 = icmp eq i32 %740, 0, !dbg !37
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %739, float 0xBFAAC795C0000000) #5, !dbg !37
  %742 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %739, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i774 = select i1 %.not1.i773, float %742, float %741, !dbg !37
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i775 = icmp eq i32 %743, 0, !dbg !37
  %744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i774, float %739, float 0x3FC10B2820000000) #5, !dbg !37
  %745 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i774, float %739, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i776 = select i1 %.not2.i775, float %745, float %744, !dbg !37
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i777 = icmp eq i32 %746, 0, !dbg !37
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i776, float %739, float 0xBFD5553DA0000000) #5, !dbg !37
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i776, float %739, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i778 = select i1 %.not3.i777, float %748, float %747, !dbg !37
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i779 = icmp eq i32 %749, 0, !dbg !37
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i778, float %739, float 0.000000e+00) #5, !dbg !37
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i778, float %739, float 0.000000e+00) #5, !dbg !37
  %.04.i780 = select i1 %.not4.i779, float %751, float %750, !dbg !37
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i781 = icmp eq i32 %752, 0, !dbg !37
  %753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i780, float %402, float %402) #5, !dbg !37
  %754 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i780, float %402, float %402) #5, !dbg !37
  %.02.i782 = select i1 %.not5.i781, float %754, float %753, !dbg !37
  br label %__nv_tanhf.exit783, !dbg !37

__nv_tanhf.exit783:                               ; preds = %__internal_fmad.exit1.i767, %__internal_fmad.exit3.i772
  %s.1.i771 = phi float [ %738, %__internal_fmad.exit1.i767 ], [ %.02.i782, %__internal_fmad.exit3.i772 ], !dbg !37
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i784 = icmp eq i32 %755, 0, !dbg !37
  %756 = tail call float @llvm.nvvm.fabs.ftz.f(float %403) #5, !dbg !37
  %757 = tail call float @llvm.nvvm.fabs.f(float %403) #5, !dbg !37
  %.01.i785 = select i1 %.not.i784, float %757, float %756, !dbg !37
  %758 = fcmp ult float %.01.i785, 0x3FE3333340000000, !dbg !37
  br i1 %758, label %__internal_fmad.exit3.i791, label %__internal_fmad.exit1.i786, !dbg !37

__internal_fmad.exit1.i786:                       ; preds = %__nv_tanhf.exit783
  %759 = fmul float %.01.i785, 0x4007154760000000, !dbg !37
  %760 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %759) #5, !dbg !37
  %761 = fadd float %760, 1.000000e+00, !dbg !37
  %762 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %761) #6, !dbg !37, !srcloc !38
  %763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i787 = icmp eq i32 %763, 0, !dbg !37
  %764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %765 = tail call float @llvm.nvvm.fma.rn.f(float %762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i788 = select i1 %.not6.i787, float %765, float %764, !dbg !37
  %766 = fcmp oge float %.01.i785, 0x4022059680000000, !dbg !37
  %s.0.i789 = select i1 %766, float 1.000000e+00, float %.03.i788, !dbg !37
  %767 = bitcast float %s.0.i789 to i32, !dbg !37
  %768 = bitcast float %403 to i32, !dbg !37
  %769 = and i32 %768, -2147483648, !dbg !37
  %770 = or i32 %769, %767, !dbg !37
  %771 = bitcast i32 %770 to float, !dbg !37
  br label %__nv_tanhf.exit802, !dbg !37

__internal_fmad.exit3.i791:                       ; preds = %__nv_tanhf.exit783
  %772 = fmul float %403, %403, !dbg !37
  %773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i792 = icmp eq i32 %773, 0, !dbg !37
  %774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %772, float 0xBFAAC795C0000000) #5, !dbg !37
  %775 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %772, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i793 = select i1 %.not1.i792, float %775, float %774, !dbg !37
  %776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i794 = icmp eq i32 %776, 0, !dbg !37
  %777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i793, float %772, float 0x3FC10B2820000000) #5, !dbg !37
  %778 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i793, float %772, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i795 = select i1 %.not2.i794, float %778, float %777, !dbg !37
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i796 = icmp eq i32 %779, 0, !dbg !37
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i795, float %772, float 0xBFD5553DA0000000) #5, !dbg !37
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i795, float %772, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i797 = select i1 %.not3.i796, float %781, float %780, !dbg !37
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i798 = icmp eq i32 %782, 0, !dbg !37
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i797, float %772, float 0.000000e+00) #5, !dbg !37
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i797, float %772, float 0.000000e+00) #5, !dbg !37
  %.04.i799 = select i1 %.not4.i798, float %784, float %783, !dbg !37
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i800 = icmp eq i32 %785, 0, !dbg !37
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i799, float %403, float %403) #5, !dbg !37
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i799, float %403, float %403) #5, !dbg !37
  %.02.i801 = select i1 %.not5.i800, float %787, float %786, !dbg !37
  br label %__nv_tanhf.exit802, !dbg !37

__nv_tanhf.exit802:                               ; preds = %__internal_fmad.exit1.i786, %__internal_fmad.exit3.i791
  %s.1.i790 = phi float [ %771, %__internal_fmad.exit1.i786 ], [ %.02.i801, %__internal_fmad.exit3.i791 ], !dbg !37
  %788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i803 = icmp eq i32 %788, 0, !dbg !37
  %789 = tail call float @llvm.nvvm.fabs.ftz.f(float %404) #5, !dbg !37
  %790 = tail call float @llvm.nvvm.fabs.f(float %404) #5, !dbg !37
  %.01.i804 = select i1 %.not.i803, float %790, float %789, !dbg !37
  %791 = fcmp ult float %.01.i804, 0x3FE3333340000000, !dbg !37
  br i1 %791, label %__internal_fmad.exit3.i810, label %__internal_fmad.exit1.i805, !dbg !37

__internal_fmad.exit1.i805:                       ; preds = %__nv_tanhf.exit802
  %792 = fmul float %.01.i804, 0x4007154760000000, !dbg !37
  %793 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %792) #5, !dbg !37
  %794 = fadd float %793, 1.000000e+00, !dbg !37
  %795 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %794) #6, !dbg !37, !srcloc !38
  %796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i806 = icmp eq i32 %796, 0, !dbg !37
  %797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %798 = tail call float @llvm.nvvm.fma.rn.f(float %795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i807 = select i1 %.not6.i806, float %798, float %797, !dbg !37
  %799 = fcmp oge float %.01.i804, 0x4022059680000000, !dbg !37
  %s.0.i808 = select i1 %799, float 1.000000e+00, float %.03.i807, !dbg !37
  %800 = bitcast float %s.0.i808 to i32, !dbg !37
  %801 = bitcast float %404 to i32, !dbg !37
  %802 = and i32 %801, -2147483648, !dbg !37
  %803 = or i32 %802, %800, !dbg !37
  %804 = bitcast i32 %803 to float, !dbg !37
  br label %__nv_tanhf.exit821, !dbg !37

__internal_fmad.exit3.i810:                       ; preds = %__nv_tanhf.exit802
  %805 = fmul float %404, %404, !dbg !37
  %806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i811 = icmp eq i32 %806, 0, !dbg !37
  %807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %805, float 0xBFAAC795C0000000) #5, !dbg !37
  %808 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %805, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i812 = select i1 %.not1.i811, float %808, float %807, !dbg !37
  %809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i813 = icmp eq i32 %809, 0, !dbg !37
  %810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i812, float %805, float 0x3FC10B2820000000) #5, !dbg !37
  %811 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i812, float %805, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i814 = select i1 %.not2.i813, float %811, float %810, !dbg !37
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i815 = icmp eq i32 %812, 0, !dbg !37
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i814, float %805, float 0xBFD5553DA0000000) #5, !dbg !37
  %814 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i814, float %805, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i816 = select i1 %.not3.i815, float %814, float %813, !dbg !37
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i817 = icmp eq i32 %815, 0, !dbg !37
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i816, float %805, float 0.000000e+00) #5, !dbg !37
  %817 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i816, float %805, float 0.000000e+00) #5, !dbg !37
  %.04.i818 = select i1 %.not4.i817, float %817, float %816, !dbg !37
  %818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i819 = icmp eq i32 %818, 0, !dbg !37
  %819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i818, float %404, float %404) #5, !dbg !37
  %820 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i818, float %404, float %404) #5, !dbg !37
  %.02.i820 = select i1 %.not5.i819, float %820, float %819, !dbg !37
  br label %__nv_tanhf.exit821, !dbg !37

__nv_tanhf.exit821:                               ; preds = %__internal_fmad.exit1.i805, %__internal_fmad.exit3.i810
  %s.1.i809 = phi float [ %804, %__internal_fmad.exit1.i805 ], [ %.02.i820, %__internal_fmad.exit3.i810 ], !dbg !37
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i822 = icmp eq i32 %821, 0, !dbg !37
  %822 = tail call float @llvm.nvvm.fabs.ftz.f(float %405) #5, !dbg !37
  %823 = tail call float @llvm.nvvm.fabs.f(float %405) #5, !dbg !37
  %.01.i823 = select i1 %.not.i822, float %823, float %822, !dbg !37
  %824 = fcmp ult float %.01.i823, 0x3FE3333340000000, !dbg !37
  br i1 %824, label %__internal_fmad.exit3.i829, label %__internal_fmad.exit1.i824, !dbg !37

__internal_fmad.exit1.i824:                       ; preds = %__nv_tanhf.exit821
  %825 = fmul float %.01.i823, 0x4007154760000000, !dbg !37
  %826 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %825) #5, !dbg !37
  %827 = fadd float %826, 1.000000e+00, !dbg !37
  %828 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %827) #6, !dbg !37, !srcloc !38
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i825 = icmp eq i32 %829, 0, !dbg !37
  %830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %831 = tail call float @llvm.nvvm.fma.rn.f(float %828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i826 = select i1 %.not6.i825, float %831, float %830, !dbg !37
  %832 = fcmp oge float %.01.i823, 0x4022059680000000, !dbg !37
  %s.0.i827 = select i1 %832, float 1.000000e+00, float %.03.i826, !dbg !37
  %833 = bitcast float %s.0.i827 to i32, !dbg !37
  %834 = bitcast float %405 to i32, !dbg !37
  %835 = and i32 %834, -2147483648, !dbg !37
  %836 = or i32 %835, %833, !dbg !37
  %837 = bitcast i32 %836 to float, !dbg !37
  br label %__nv_tanhf.exit840, !dbg !37

__internal_fmad.exit3.i829:                       ; preds = %__nv_tanhf.exit821
  %838 = fmul float %405, %405, !dbg !37
  %839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i830 = icmp eq i32 %839, 0, !dbg !37
  %840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %838, float 0xBFAAC795C0000000) #5, !dbg !37
  %841 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %838, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i831 = select i1 %.not1.i830, float %841, float %840, !dbg !37
  %842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i832 = icmp eq i32 %842, 0, !dbg !37
  %843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i831, float %838, float 0x3FC10B2820000000) #5, !dbg !37
  %844 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i831, float %838, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i833 = select i1 %.not2.i832, float %844, float %843, !dbg !37
  %845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i834 = icmp eq i32 %845, 0, !dbg !37
  %846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i833, float %838, float 0xBFD5553DA0000000) #5, !dbg !37
  %847 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i833, float %838, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i835 = select i1 %.not3.i834, float %847, float %846, !dbg !37
  %848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i836 = icmp eq i32 %848, 0, !dbg !37
  %849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i835, float %838, float 0.000000e+00) #5, !dbg !37
  %850 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i835, float %838, float 0.000000e+00) #5, !dbg !37
  %.04.i837 = select i1 %.not4.i836, float %850, float %849, !dbg !37
  %851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i838 = icmp eq i32 %851, 0, !dbg !37
  %852 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i837, float %405, float %405) #5, !dbg !37
  %853 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i837, float %405, float %405) #5, !dbg !37
  %.02.i839 = select i1 %.not5.i838, float %853, float %852, !dbg !37
  br label %__nv_tanhf.exit840, !dbg !37

__nv_tanhf.exit840:                               ; preds = %__internal_fmad.exit1.i824, %__internal_fmad.exit3.i829
  %s.1.i828 = phi float [ %837, %__internal_fmad.exit1.i824 ], [ %.02.i839, %__internal_fmad.exit3.i829 ], !dbg !37
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i841 = icmp eq i32 %854, 0, !dbg !37
  %855 = tail call float @llvm.nvvm.fabs.ftz.f(float %406) #5, !dbg !37
  %856 = tail call float @llvm.nvvm.fabs.f(float %406) #5, !dbg !37
  %.01.i842 = select i1 %.not.i841, float %856, float %855, !dbg !37
  %857 = fcmp ult float %.01.i842, 0x3FE3333340000000, !dbg !37
  br i1 %857, label %__internal_fmad.exit3.i848, label %__internal_fmad.exit1.i843, !dbg !37

__internal_fmad.exit1.i843:                       ; preds = %__nv_tanhf.exit840
  %858 = fmul float %.01.i842, 0x4007154760000000, !dbg !37
  %859 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %858) #5, !dbg !37
  %860 = fadd float %859, 1.000000e+00, !dbg !37
  %861 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %860) #6, !dbg !37, !srcloc !38
  %862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i844 = icmp eq i32 %862, 0, !dbg !37
  %863 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %864 = tail call float @llvm.nvvm.fma.rn.f(float %861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i845 = select i1 %.not6.i844, float %864, float %863, !dbg !37
  %865 = fcmp oge float %.01.i842, 0x4022059680000000, !dbg !37
  %s.0.i846 = select i1 %865, float 1.000000e+00, float %.03.i845, !dbg !37
  %866 = bitcast float %s.0.i846 to i32, !dbg !37
  %867 = bitcast float %406 to i32, !dbg !37
  %868 = and i32 %867, -2147483648, !dbg !37
  %869 = or i32 %868, %866, !dbg !37
  %870 = bitcast i32 %869 to float, !dbg !37
  br label %__nv_tanhf.exit859, !dbg !37

__internal_fmad.exit3.i848:                       ; preds = %__nv_tanhf.exit840
  %871 = fmul float %406, %406, !dbg !37
  %872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i849 = icmp eq i32 %872, 0, !dbg !37
  %873 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %871, float 0xBFAAC795C0000000) #5, !dbg !37
  %874 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %871, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i850 = select i1 %.not1.i849, float %874, float %873, !dbg !37
  %875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i851 = icmp eq i32 %875, 0, !dbg !37
  %876 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i850, float %871, float 0x3FC10B2820000000) #5, !dbg !37
  %877 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i850, float %871, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i852 = select i1 %.not2.i851, float %877, float %876, !dbg !37
  %878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i853 = icmp eq i32 %878, 0, !dbg !37
  %879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i852, float %871, float 0xBFD5553DA0000000) #5, !dbg !37
  %880 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i852, float %871, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i854 = select i1 %.not3.i853, float %880, float %879, !dbg !37
  %881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i855 = icmp eq i32 %881, 0, !dbg !37
  %882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i854, float %871, float 0.000000e+00) #5, !dbg !37
  %883 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i854, float %871, float 0.000000e+00) #5, !dbg !37
  %.04.i856 = select i1 %.not4.i855, float %883, float %882, !dbg !37
  %884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i857 = icmp eq i32 %884, 0, !dbg !37
  %885 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i856, float %406, float %406) #5, !dbg !37
  %886 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i856, float %406, float %406) #5, !dbg !37
  %.02.i858 = select i1 %.not5.i857, float %886, float %885, !dbg !37
  br label %__nv_tanhf.exit859, !dbg !37

__nv_tanhf.exit859:                               ; preds = %__internal_fmad.exit1.i843, %__internal_fmad.exit3.i848
  %s.1.i847 = phi float [ %870, %__internal_fmad.exit1.i843 ], [ %.02.i858, %__internal_fmad.exit3.i848 ], !dbg !37
  %887 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i860 = icmp eq i32 %887, 0, !dbg !37
  %888 = tail call float @llvm.nvvm.fabs.ftz.f(float %407) #5, !dbg !37
  %889 = tail call float @llvm.nvvm.fabs.f(float %407) #5, !dbg !37
  %.01.i861 = select i1 %.not.i860, float %889, float %888, !dbg !37
  %890 = fcmp ult float %.01.i861, 0x3FE3333340000000, !dbg !37
  br i1 %890, label %__internal_fmad.exit3.i867, label %__internal_fmad.exit1.i862, !dbg !37

__internal_fmad.exit1.i862:                       ; preds = %__nv_tanhf.exit859
  %891 = fmul float %.01.i861, 0x4007154760000000, !dbg !37
  %892 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %891) #5, !dbg !37
  %893 = fadd float %892, 1.000000e+00, !dbg !37
  %894 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %893) #6, !dbg !37, !srcloc !38
  %895 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i863 = icmp eq i32 %895, 0, !dbg !37
  %896 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %894, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %897 = tail call float @llvm.nvvm.fma.rn.f(float %894, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i864 = select i1 %.not6.i863, float %897, float %896, !dbg !37
  %898 = fcmp oge float %.01.i861, 0x4022059680000000, !dbg !37
  %s.0.i865 = select i1 %898, float 1.000000e+00, float %.03.i864, !dbg !37
  %899 = bitcast float %s.0.i865 to i32, !dbg !37
  %900 = bitcast float %407 to i32, !dbg !37
  %901 = and i32 %900, -2147483648, !dbg !37
  %902 = or i32 %901, %899, !dbg !37
  %903 = bitcast i32 %902 to float, !dbg !37
  br label %__nv_tanhf.exit878, !dbg !37

__internal_fmad.exit3.i867:                       ; preds = %__nv_tanhf.exit859
  %904 = fmul float %407, %407, !dbg !37
  %905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i868 = icmp eq i32 %905, 0, !dbg !37
  %906 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %904, float 0xBFAAC795C0000000) #5, !dbg !37
  %907 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %904, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i869 = select i1 %.not1.i868, float %907, float %906, !dbg !37
  %908 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i870 = icmp eq i32 %908, 0, !dbg !37
  %909 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i869, float %904, float 0x3FC10B2820000000) #5, !dbg !37
  %910 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i869, float %904, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i871 = select i1 %.not2.i870, float %910, float %909, !dbg !37
  %911 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i872 = icmp eq i32 %911, 0, !dbg !37
  %912 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i871, float %904, float 0xBFD5553DA0000000) #5, !dbg !37
  %913 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i871, float %904, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i873 = select i1 %.not3.i872, float %913, float %912, !dbg !37
  %914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i874 = icmp eq i32 %914, 0, !dbg !37
  %915 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i873, float %904, float 0.000000e+00) #5, !dbg !37
  %916 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i873, float %904, float 0.000000e+00) #5, !dbg !37
  %.04.i875 = select i1 %.not4.i874, float %916, float %915, !dbg !37
  %917 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i876 = icmp eq i32 %917, 0, !dbg !37
  %918 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i875, float %407, float %407) #5, !dbg !37
  %919 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i875, float %407, float %407) #5, !dbg !37
  %.02.i877 = select i1 %.not5.i876, float %919, float %918, !dbg !37
  br label %__nv_tanhf.exit878, !dbg !37

__nv_tanhf.exit878:                               ; preds = %__internal_fmad.exit1.i862, %__internal_fmad.exit3.i867
  %s.1.i866 = phi float [ %903, %__internal_fmad.exit1.i862 ], [ %.02.i877, %__internal_fmad.exit3.i867 ], !dbg !37
  %920 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i879 = icmp eq i32 %920, 0, !dbg !37
  %921 = tail call float @llvm.nvvm.fabs.ftz.f(float %408) #5, !dbg !37
  %922 = tail call float @llvm.nvvm.fabs.f(float %408) #5, !dbg !37
  %.01.i880 = select i1 %.not.i879, float %922, float %921, !dbg !37
  %923 = fcmp ult float %.01.i880, 0x3FE3333340000000, !dbg !37
  br i1 %923, label %__internal_fmad.exit3.i886, label %__internal_fmad.exit1.i881, !dbg !37

__internal_fmad.exit1.i881:                       ; preds = %__nv_tanhf.exit878
  %924 = fmul float %.01.i880, 0x4007154760000000, !dbg !37
  %925 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %924) #5, !dbg !37
  %926 = fadd float %925, 1.000000e+00, !dbg !37
  %927 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %926) #6, !dbg !37, !srcloc !38
  %928 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i882 = icmp eq i32 %928, 0, !dbg !37
  %929 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %927, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %930 = tail call float @llvm.nvvm.fma.rn.f(float %927, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i883 = select i1 %.not6.i882, float %930, float %929, !dbg !37
  %931 = fcmp oge float %.01.i880, 0x4022059680000000, !dbg !37
  %s.0.i884 = select i1 %931, float 1.000000e+00, float %.03.i883, !dbg !37
  %932 = bitcast float %s.0.i884 to i32, !dbg !37
  %933 = bitcast float %408 to i32, !dbg !37
  %934 = and i32 %933, -2147483648, !dbg !37
  %935 = or i32 %934, %932, !dbg !37
  %936 = bitcast i32 %935 to float, !dbg !37
  br label %__nv_tanhf.exit897, !dbg !37

__internal_fmad.exit3.i886:                       ; preds = %__nv_tanhf.exit878
  %937 = fmul float %408, %408, !dbg !37
  %938 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i887 = icmp eq i32 %938, 0, !dbg !37
  %939 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %937, float 0xBFAAC795C0000000) #5, !dbg !37
  %940 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %937, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i888 = select i1 %.not1.i887, float %940, float %939, !dbg !37
  %941 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i889 = icmp eq i32 %941, 0, !dbg !37
  %942 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i888, float %937, float 0x3FC10B2820000000) #5, !dbg !37
  %943 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i888, float %937, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i890 = select i1 %.not2.i889, float %943, float %942, !dbg !37
  %944 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i891 = icmp eq i32 %944, 0, !dbg !37
  %945 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i890, float %937, float 0xBFD5553DA0000000) #5, !dbg !37
  %946 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i890, float %937, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i892 = select i1 %.not3.i891, float %946, float %945, !dbg !37
  %947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i893 = icmp eq i32 %947, 0, !dbg !37
  %948 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i892, float %937, float 0.000000e+00) #5, !dbg !37
  %949 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i892, float %937, float 0.000000e+00) #5, !dbg !37
  %.04.i894 = select i1 %.not4.i893, float %949, float %948, !dbg !37
  %950 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i895 = icmp eq i32 %950, 0, !dbg !37
  %951 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i894, float %408, float %408) #5, !dbg !37
  %952 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i894, float %408, float %408) #5, !dbg !37
  %.02.i896 = select i1 %.not5.i895, float %952, float %951, !dbg !37
  br label %__nv_tanhf.exit897, !dbg !37

__nv_tanhf.exit897:                               ; preds = %__internal_fmad.exit1.i881, %__internal_fmad.exit3.i886
  %s.1.i885 = phi float [ %936, %__internal_fmad.exit1.i881 ], [ %.02.i896, %__internal_fmad.exit3.i886 ], !dbg !37
  %953 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i898 = icmp eq i32 %953, 0, !dbg !37
  %954 = tail call float @llvm.nvvm.fabs.ftz.f(float %409) #5, !dbg !37
  %955 = tail call float @llvm.nvvm.fabs.f(float %409) #5, !dbg !37
  %.01.i899 = select i1 %.not.i898, float %955, float %954, !dbg !37
  %956 = fcmp ult float %.01.i899, 0x3FE3333340000000, !dbg !37
  br i1 %956, label %__internal_fmad.exit3.i905, label %__internal_fmad.exit1.i900, !dbg !37

__internal_fmad.exit1.i900:                       ; preds = %__nv_tanhf.exit897
  %957 = fmul float %.01.i899, 0x4007154760000000, !dbg !37
  %958 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %957) #5, !dbg !37
  %959 = fadd float %958, 1.000000e+00, !dbg !37
  %960 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %959) #6, !dbg !37, !srcloc !38
  %961 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i901 = icmp eq i32 %961, 0, !dbg !37
  %962 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %960, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %963 = tail call float @llvm.nvvm.fma.rn.f(float %960, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i902 = select i1 %.not6.i901, float %963, float %962, !dbg !37
  %964 = fcmp oge float %.01.i899, 0x4022059680000000, !dbg !37
  %s.0.i903 = select i1 %964, float 1.000000e+00, float %.03.i902, !dbg !37
  %965 = bitcast float %s.0.i903 to i32, !dbg !37
  %966 = bitcast float %409 to i32, !dbg !37
  %967 = and i32 %966, -2147483648, !dbg !37
  %968 = or i32 %967, %965, !dbg !37
  %969 = bitcast i32 %968 to float, !dbg !37
  br label %__nv_tanhf.exit916, !dbg !37

__internal_fmad.exit3.i905:                       ; preds = %__nv_tanhf.exit897
  %970 = fmul float %409, %409, !dbg !37
  %971 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i906 = icmp eq i32 %971, 0, !dbg !37
  %972 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %970, float 0xBFAAC795C0000000) #5, !dbg !37
  %973 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %970, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i907 = select i1 %.not1.i906, float %973, float %972, !dbg !37
  %974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i908 = icmp eq i32 %974, 0, !dbg !37
  %975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i907, float %970, float 0x3FC10B2820000000) #5, !dbg !37
  %976 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i907, float %970, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i909 = select i1 %.not2.i908, float %976, float %975, !dbg !37
  %977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i910 = icmp eq i32 %977, 0, !dbg !37
  %978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i909, float %970, float 0xBFD5553DA0000000) #5, !dbg !37
  %979 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i909, float %970, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i911 = select i1 %.not3.i910, float %979, float %978, !dbg !37
  %980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i912 = icmp eq i32 %980, 0, !dbg !37
  %981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i911, float %970, float 0.000000e+00) #5, !dbg !37
  %982 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i911, float %970, float 0.000000e+00) #5, !dbg !37
  %.04.i913 = select i1 %.not4.i912, float %982, float %981, !dbg !37
  %983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i914 = icmp eq i32 %983, 0, !dbg !37
  %984 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i913, float %409, float %409) #5, !dbg !37
  %985 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i913, float %409, float %409) #5, !dbg !37
  %.02.i915 = select i1 %.not5.i914, float %985, float %984, !dbg !37
  br label %__nv_tanhf.exit916, !dbg !37

__nv_tanhf.exit916:                               ; preds = %__internal_fmad.exit1.i900, %__internal_fmad.exit3.i905
  %s.1.i904 = phi float [ %969, %__internal_fmad.exit1.i900 ], [ %.02.i915, %__internal_fmad.exit3.i905 ], !dbg !37
  %986 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i917 = icmp eq i32 %986, 0, !dbg !37
  %987 = tail call float @llvm.nvvm.fabs.ftz.f(float %410) #5, !dbg !37
  %988 = tail call float @llvm.nvvm.fabs.f(float %410) #5, !dbg !37
  %.01.i918 = select i1 %.not.i917, float %988, float %987, !dbg !37
  %989 = fcmp ult float %.01.i918, 0x3FE3333340000000, !dbg !37
  br i1 %989, label %__internal_fmad.exit3.i924, label %__internal_fmad.exit1.i919, !dbg !37

__internal_fmad.exit1.i919:                       ; preds = %__nv_tanhf.exit916
  %990 = fmul float %.01.i918, 0x4007154760000000, !dbg !37
  %991 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %990) #5, !dbg !37
  %992 = fadd float %991, 1.000000e+00, !dbg !37
  %993 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %992) #6, !dbg !37, !srcloc !38
  %994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i920 = icmp eq i32 %994, 0, !dbg !37
  %995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %993, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %996 = tail call float @llvm.nvvm.fma.rn.f(float %993, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i921 = select i1 %.not6.i920, float %996, float %995, !dbg !37
  %997 = fcmp oge float %.01.i918, 0x4022059680000000, !dbg !37
  %s.0.i922 = select i1 %997, float 1.000000e+00, float %.03.i921, !dbg !37
  %998 = bitcast float %s.0.i922 to i32, !dbg !37
  %999 = bitcast float %410 to i32, !dbg !37
  %1000 = and i32 %999, -2147483648, !dbg !37
  %1001 = or i32 %1000, %998, !dbg !37
  %1002 = bitcast i32 %1001 to float, !dbg !37
  br label %__nv_tanhf.exit935, !dbg !37

__internal_fmad.exit3.i924:                       ; preds = %__nv_tanhf.exit916
  %1003 = fmul float %410, %410, !dbg !37
  %1004 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i925 = icmp eq i32 %1004, 0, !dbg !37
  %1005 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1003, float 0xBFAAC795C0000000) #5, !dbg !37
  %1006 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1003, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i926 = select i1 %.not1.i925, float %1006, float %1005, !dbg !37
  %1007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i927 = icmp eq i32 %1007, 0, !dbg !37
  %1008 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i926, float %1003, float 0x3FC10B2820000000) #5, !dbg !37
  %1009 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i926, float %1003, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i928 = select i1 %.not2.i927, float %1009, float %1008, !dbg !37
  %1010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i929 = icmp eq i32 %1010, 0, !dbg !37
  %1011 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i928, float %1003, float 0xBFD5553DA0000000) #5, !dbg !37
  %1012 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i928, float %1003, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i930 = select i1 %.not3.i929, float %1012, float %1011, !dbg !37
  %1013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i931 = icmp eq i32 %1013, 0, !dbg !37
  %1014 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i930, float %1003, float 0.000000e+00) #5, !dbg !37
  %1015 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i930, float %1003, float 0.000000e+00) #5, !dbg !37
  %.04.i932 = select i1 %.not4.i931, float %1015, float %1014, !dbg !37
  %1016 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i933 = icmp eq i32 %1016, 0, !dbg !37
  %1017 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i932, float %410, float %410) #5, !dbg !37
  %1018 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i932, float %410, float %410) #5, !dbg !37
  %.02.i934 = select i1 %.not5.i933, float %1018, float %1017, !dbg !37
  br label %__nv_tanhf.exit935, !dbg !37

__nv_tanhf.exit935:                               ; preds = %__internal_fmad.exit1.i919, %__internal_fmad.exit3.i924
  %s.1.i923 = phi float [ %1002, %__internal_fmad.exit1.i919 ], [ %.02.i934, %__internal_fmad.exit3.i924 ], !dbg !37
  %1019 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i936 = icmp eq i32 %1019, 0, !dbg !37
  %1020 = tail call float @llvm.nvvm.fabs.ftz.f(float %411) #5, !dbg !37
  %1021 = tail call float @llvm.nvvm.fabs.f(float %411) #5, !dbg !37
  %.01.i937 = select i1 %.not.i936, float %1021, float %1020, !dbg !37
  %1022 = fcmp ult float %.01.i937, 0x3FE3333340000000, !dbg !37
  br i1 %1022, label %__internal_fmad.exit3.i943, label %__internal_fmad.exit1.i938, !dbg !37

__internal_fmad.exit1.i938:                       ; preds = %__nv_tanhf.exit935
  %1023 = fmul float %.01.i937, 0x4007154760000000, !dbg !37
  %1024 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1023) #5, !dbg !37
  %1025 = fadd float %1024, 1.000000e+00, !dbg !37
  %1026 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1025) #6, !dbg !37, !srcloc !38
  %1027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i939 = icmp eq i32 %1027, 0, !dbg !37
  %1028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1026, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1029 = tail call float @llvm.nvvm.fma.rn.f(float %1026, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i940 = select i1 %.not6.i939, float %1029, float %1028, !dbg !37
  %1030 = fcmp oge float %.01.i937, 0x4022059680000000, !dbg !37
  %s.0.i941 = select i1 %1030, float 1.000000e+00, float %.03.i940, !dbg !37
  %1031 = bitcast float %s.0.i941 to i32, !dbg !37
  %1032 = bitcast float %411 to i32, !dbg !37
  %1033 = and i32 %1032, -2147483648, !dbg !37
  %1034 = or i32 %1033, %1031, !dbg !37
  %1035 = bitcast i32 %1034 to float, !dbg !37
  br label %__nv_tanhf.exit954, !dbg !37

__internal_fmad.exit3.i943:                       ; preds = %__nv_tanhf.exit935
  %1036 = fmul float %411, %411, !dbg !37
  %1037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i944 = icmp eq i32 %1037, 0, !dbg !37
  %1038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1036, float 0xBFAAC795C0000000) #5, !dbg !37
  %1039 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1036, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i945 = select i1 %.not1.i944, float %1039, float %1038, !dbg !37
  %1040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i946 = icmp eq i32 %1040, 0, !dbg !37
  %1041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i945, float %1036, float 0x3FC10B2820000000) #5, !dbg !37
  %1042 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i945, float %1036, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i947 = select i1 %.not2.i946, float %1042, float %1041, !dbg !37
  %1043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i948 = icmp eq i32 %1043, 0, !dbg !37
  %1044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i947, float %1036, float 0xBFD5553DA0000000) #5, !dbg !37
  %1045 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i947, float %1036, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i949 = select i1 %.not3.i948, float %1045, float %1044, !dbg !37
  %1046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i950 = icmp eq i32 %1046, 0, !dbg !37
  %1047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i949, float %1036, float 0.000000e+00) #5, !dbg !37
  %1048 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i949, float %1036, float 0.000000e+00) #5, !dbg !37
  %.04.i951 = select i1 %.not4.i950, float %1048, float %1047, !dbg !37
  %1049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i952 = icmp eq i32 %1049, 0, !dbg !37
  %1050 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i951, float %411, float %411) #5, !dbg !37
  %1051 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i951, float %411, float %411) #5, !dbg !37
  %.02.i953 = select i1 %.not5.i952, float %1051, float %1050, !dbg !37
  br label %__nv_tanhf.exit954, !dbg !37

__nv_tanhf.exit954:                               ; preds = %__internal_fmad.exit1.i938, %__internal_fmad.exit3.i943
  %s.1.i942 = phi float [ %1035, %__internal_fmad.exit1.i938 ], [ %.02.i953, %__internal_fmad.exit3.i943 ], !dbg !37
  %1052 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i955 = icmp eq i32 %1052, 0, !dbg !37
  %1053 = tail call float @llvm.nvvm.fabs.ftz.f(float %412) #5, !dbg !37
  %1054 = tail call float @llvm.nvvm.fabs.f(float %412) #5, !dbg !37
  %.01.i956 = select i1 %.not.i955, float %1054, float %1053, !dbg !37
  %1055 = fcmp ult float %.01.i956, 0x3FE3333340000000, !dbg !37
  br i1 %1055, label %__internal_fmad.exit3.i962, label %__internal_fmad.exit1.i957, !dbg !37

__internal_fmad.exit1.i957:                       ; preds = %__nv_tanhf.exit954
  %1056 = fmul float %.01.i956, 0x4007154760000000, !dbg !37
  %1057 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1056) #5, !dbg !37
  %1058 = fadd float %1057, 1.000000e+00, !dbg !37
  %1059 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1058) #6, !dbg !37, !srcloc !38
  %1060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i958 = icmp eq i32 %1060, 0, !dbg !37
  %1061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1059, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1062 = tail call float @llvm.nvvm.fma.rn.f(float %1059, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i959 = select i1 %.not6.i958, float %1062, float %1061, !dbg !37
  %1063 = fcmp oge float %.01.i956, 0x4022059680000000, !dbg !37
  %s.0.i960 = select i1 %1063, float 1.000000e+00, float %.03.i959, !dbg !37
  %1064 = bitcast float %s.0.i960 to i32, !dbg !37
  %1065 = bitcast float %412 to i32, !dbg !37
  %1066 = and i32 %1065, -2147483648, !dbg !37
  %1067 = or i32 %1066, %1064, !dbg !37
  %1068 = bitcast i32 %1067 to float, !dbg !37
  br label %__nv_tanhf.exit973, !dbg !37

__internal_fmad.exit3.i962:                       ; preds = %__nv_tanhf.exit954
  %1069 = fmul float %412, %412, !dbg !37
  %1070 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i963 = icmp eq i32 %1070, 0, !dbg !37
  %1071 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1069, float 0xBFAAC795C0000000) #5, !dbg !37
  %1072 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1069, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i964 = select i1 %.not1.i963, float %1072, float %1071, !dbg !37
  %1073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i965 = icmp eq i32 %1073, 0, !dbg !37
  %1074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i964, float %1069, float 0x3FC10B2820000000) #5, !dbg !37
  %1075 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i964, float %1069, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i966 = select i1 %.not2.i965, float %1075, float %1074, !dbg !37
  %1076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i967 = icmp eq i32 %1076, 0, !dbg !37
  %1077 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i966, float %1069, float 0xBFD5553DA0000000) #5, !dbg !37
  %1078 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i966, float %1069, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i968 = select i1 %.not3.i967, float %1078, float %1077, !dbg !37
  %1079 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i969 = icmp eq i32 %1079, 0, !dbg !37
  %1080 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i968, float %1069, float 0.000000e+00) #5, !dbg !37
  %1081 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i968, float %1069, float 0.000000e+00) #5, !dbg !37
  %.04.i970 = select i1 %.not4.i969, float %1081, float %1080, !dbg !37
  %1082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i971 = icmp eq i32 %1082, 0, !dbg !37
  %1083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i970, float %412, float %412) #5, !dbg !37
  %1084 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i970, float %412, float %412) #5, !dbg !37
  %.02.i972 = select i1 %.not5.i971, float %1084, float %1083, !dbg !37
  br label %__nv_tanhf.exit973, !dbg !37

__nv_tanhf.exit973:                               ; preds = %__internal_fmad.exit1.i957, %__internal_fmad.exit3.i962
  %s.1.i961 = phi float [ %1068, %__internal_fmad.exit1.i957 ], [ %.02.i972, %__internal_fmad.exit3.i962 ], !dbg !37
  %1085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i974 = icmp eq i32 %1085, 0, !dbg !37
  %1086 = tail call float @llvm.nvvm.fabs.ftz.f(float %413) #5, !dbg !37
  %1087 = tail call float @llvm.nvvm.fabs.f(float %413) #5, !dbg !37
  %.01.i975 = select i1 %.not.i974, float %1087, float %1086, !dbg !37
  %1088 = fcmp ult float %.01.i975, 0x3FE3333340000000, !dbg !37
  br i1 %1088, label %__internal_fmad.exit3.i981, label %__internal_fmad.exit1.i976, !dbg !37

__internal_fmad.exit1.i976:                       ; preds = %__nv_tanhf.exit973
  %1089 = fmul float %.01.i975, 0x4007154760000000, !dbg !37
  %1090 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1089) #5, !dbg !37
  %1091 = fadd float %1090, 1.000000e+00, !dbg !37
  %1092 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1091) #6, !dbg !37, !srcloc !38
  %1093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i977 = icmp eq i32 %1093, 0, !dbg !37
  %1094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1092, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1095 = tail call float @llvm.nvvm.fma.rn.f(float %1092, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i978 = select i1 %.not6.i977, float %1095, float %1094, !dbg !37
  %1096 = fcmp oge float %.01.i975, 0x4022059680000000, !dbg !37
  %s.0.i979 = select i1 %1096, float 1.000000e+00, float %.03.i978, !dbg !37
  %1097 = bitcast float %s.0.i979 to i32, !dbg !37
  %1098 = bitcast float %413 to i32, !dbg !37
  %1099 = and i32 %1098, -2147483648, !dbg !37
  %1100 = or i32 %1099, %1097, !dbg !37
  %1101 = bitcast i32 %1100 to float, !dbg !37
  br label %__nv_tanhf.exit992, !dbg !37

__internal_fmad.exit3.i981:                       ; preds = %__nv_tanhf.exit973
  %1102 = fmul float %413, %413, !dbg !37
  %1103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i982 = icmp eq i32 %1103, 0, !dbg !37
  %1104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1102, float 0xBFAAC795C0000000) #5, !dbg !37
  %1105 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1102, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i983 = select i1 %.not1.i982, float %1105, float %1104, !dbg !37
  %1106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i984 = icmp eq i32 %1106, 0, !dbg !37
  %1107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i983, float %1102, float 0x3FC10B2820000000) #5, !dbg !37
  %1108 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i983, float %1102, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i985 = select i1 %.not2.i984, float %1108, float %1107, !dbg !37
  %1109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i986 = icmp eq i32 %1109, 0, !dbg !37
  %1110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i985, float %1102, float 0xBFD5553DA0000000) #5, !dbg !37
  %1111 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i985, float %1102, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i987 = select i1 %.not3.i986, float %1111, float %1110, !dbg !37
  %1112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i988 = icmp eq i32 %1112, 0, !dbg !37
  %1113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i987, float %1102, float 0.000000e+00) #5, !dbg !37
  %1114 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i987, float %1102, float 0.000000e+00) #5, !dbg !37
  %.04.i989 = select i1 %.not4.i988, float %1114, float %1113, !dbg !37
  %1115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i990 = icmp eq i32 %1115, 0, !dbg !37
  %1116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i989, float %413, float %413) #5, !dbg !37
  %1117 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i989, float %413, float %413) #5, !dbg !37
  %.02.i991 = select i1 %.not5.i990, float %1117, float %1116, !dbg !37
  br label %__nv_tanhf.exit992, !dbg !37

__nv_tanhf.exit992:                               ; preds = %__internal_fmad.exit1.i976, %__internal_fmad.exit3.i981
  %s.1.i980 = phi float [ %1101, %__internal_fmad.exit1.i976 ], [ %.02.i991, %__internal_fmad.exit3.i981 ], !dbg !37
  %1118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i993 = icmp eq i32 %1118, 0, !dbg !37
  %1119 = tail call float @llvm.nvvm.fabs.ftz.f(float %414) #5, !dbg !37
  %1120 = tail call float @llvm.nvvm.fabs.f(float %414) #5, !dbg !37
  %.01.i994 = select i1 %.not.i993, float %1120, float %1119, !dbg !37
  %1121 = fcmp ult float %.01.i994, 0x3FE3333340000000, !dbg !37
  br i1 %1121, label %__internal_fmad.exit3.i1000, label %__internal_fmad.exit1.i995, !dbg !37

__internal_fmad.exit1.i995:                       ; preds = %__nv_tanhf.exit992
  %1122 = fmul float %.01.i994, 0x4007154760000000, !dbg !37
  %1123 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1122) #5, !dbg !37
  %1124 = fadd float %1123, 1.000000e+00, !dbg !37
  %1125 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1124) #6, !dbg !37, !srcloc !38
  %1126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i996 = icmp eq i32 %1126, 0, !dbg !37
  %1127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1125, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1128 = tail call float @llvm.nvvm.fma.rn.f(float %1125, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i997 = select i1 %.not6.i996, float %1128, float %1127, !dbg !37
  %1129 = fcmp oge float %.01.i994, 0x4022059680000000, !dbg !37
  %s.0.i998 = select i1 %1129, float 1.000000e+00, float %.03.i997, !dbg !37
  %1130 = bitcast float %s.0.i998 to i32, !dbg !37
  %1131 = bitcast float %414 to i32, !dbg !37
  %1132 = and i32 %1131, -2147483648, !dbg !37
  %1133 = or i32 %1132, %1130, !dbg !37
  %1134 = bitcast i32 %1133 to float, !dbg !37
  br label %__nv_tanhf.exit1011, !dbg !37

__internal_fmad.exit3.i1000:                      ; preds = %__nv_tanhf.exit992
  %1135 = fmul float %414, %414, !dbg !37
  %1136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1001 = icmp eq i32 %1136, 0, !dbg !37
  %1137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1135, float 0xBFAAC795C0000000) #5, !dbg !37
  %1138 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1135, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1002 = select i1 %.not1.i1001, float %1138, float %1137, !dbg !37
  %1139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1003 = icmp eq i32 %1139, 0, !dbg !37
  %1140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1002, float %1135, float 0x3FC10B2820000000) #5, !dbg !37
  %1141 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1002, float %1135, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1004 = select i1 %.not2.i1003, float %1141, float %1140, !dbg !37
  %1142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1005 = icmp eq i32 %1142, 0, !dbg !37
  %1143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1004, float %1135, float 0xBFD5553DA0000000) #5, !dbg !37
  %1144 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1004, float %1135, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1006 = select i1 %.not3.i1005, float %1144, float %1143, !dbg !37
  %1145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1007 = icmp eq i32 %1145, 0, !dbg !37
  %1146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1006, float %1135, float 0.000000e+00) #5, !dbg !37
  %1147 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1006, float %1135, float 0.000000e+00) #5, !dbg !37
  %.04.i1008 = select i1 %.not4.i1007, float %1147, float %1146, !dbg !37
  %1148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1009 = icmp eq i32 %1148, 0, !dbg !37
  %1149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1008, float %414, float %414) #5, !dbg !37
  %1150 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1008, float %414, float %414) #5, !dbg !37
  %.02.i1010 = select i1 %.not5.i1009, float %1150, float %1149, !dbg !37
  br label %__nv_tanhf.exit1011, !dbg !37

__nv_tanhf.exit1011:                              ; preds = %__internal_fmad.exit1.i995, %__internal_fmad.exit3.i1000
  %s.1.i999 = phi float [ %1134, %__internal_fmad.exit1.i995 ], [ %.02.i1010, %__internal_fmad.exit3.i1000 ], !dbg !37
  %1151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1012 = icmp eq i32 %1151, 0, !dbg !37
  %1152 = tail call float @llvm.nvvm.fabs.ftz.f(float %415) #5, !dbg !37
  %1153 = tail call float @llvm.nvvm.fabs.f(float %415) #5, !dbg !37
  %.01.i1013 = select i1 %.not.i1012, float %1153, float %1152, !dbg !37
  %1154 = fcmp ult float %.01.i1013, 0x3FE3333340000000, !dbg !37
  br i1 %1154, label %__internal_fmad.exit3.i1019, label %__internal_fmad.exit1.i1014, !dbg !37

__internal_fmad.exit1.i1014:                      ; preds = %__nv_tanhf.exit1011
  %1155 = fmul float %.01.i1013, 0x4007154760000000, !dbg !37
  %1156 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1155) #5, !dbg !37
  %1157 = fadd float %1156, 1.000000e+00, !dbg !37
  %1158 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1157) #6, !dbg !37, !srcloc !38
  %1159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1015 = icmp eq i32 %1159, 0, !dbg !37
  %1160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1158, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1161 = tail call float @llvm.nvvm.fma.rn.f(float %1158, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1016 = select i1 %.not6.i1015, float %1161, float %1160, !dbg !37
  %1162 = fcmp oge float %.01.i1013, 0x4022059680000000, !dbg !37
  %s.0.i1017 = select i1 %1162, float 1.000000e+00, float %.03.i1016, !dbg !37
  %1163 = bitcast float %s.0.i1017 to i32, !dbg !37
  %1164 = bitcast float %415 to i32, !dbg !37
  %1165 = and i32 %1164, -2147483648, !dbg !37
  %1166 = or i32 %1165, %1163, !dbg !37
  %1167 = bitcast i32 %1166 to float, !dbg !37
  br label %__nv_tanhf.exit1030, !dbg !37

__internal_fmad.exit3.i1019:                      ; preds = %__nv_tanhf.exit1011
  %1168 = fmul float %415, %415, !dbg !37
  %1169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1020 = icmp eq i32 %1169, 0, !dbg !37
  %1170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1168, float 0xBFAAC795C0000000) #5, !dbg !37
  %1171 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1168, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1021 = select i1 %.not1.i1020, float %1171, float %1170, !dbg !37
  %1172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1022 = icmp eq i32 %1172, 0, !dbg !37
  %1173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1021, float %1168, float 0x3FC10B2820000000) #5, !dbg !37
  %1174 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1021, float %1168, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1023 = select i1 %.not2.i1022, float %1174, float %1173, !dbg !37
  %1175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1024 = icmp eq i32 %1175, 0, !dbg !37
  %1176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1023, float %1168, float 0xBFD5553DA0000000) #5, !dbg !37
  %1177 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1023, float %1168, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1025 = select i1 %.not3.i1024, float %1177, float %1176, !dbg !37
  %1178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1026 = icmp eq i32 %1178, 0, !dbg !37
  %1179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1025, float %1168, float 0.000000e+00) #5, !dbg !37
  %1180 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1025, float %1168, float 0.000000e+00) #5, !dbg !37
  %.04.i1027 = select i1 %.not4.i1026, float %1180, float %1179, !dbg !37
  %1181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1028 = icmp eq i32 %1181, 0, !dbg !37
  %1182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1027, float %415, float %415) #5, !dbg !37
  %1183 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1027, float %415, float %415) #5, !dbg !37
  %.02.i1029 = select i1 %.not5.i1028, float %1183, float %1182, !dbg !37
  br label %__nv_tanhf.exit1030, !dbg !37

__nv_tanhf.exit1030:                              ; preds = %__internal_fmad.exit1.i1014, %__internal_fmad.exit3.i1019
  %s.1.i1018 = phi float [ %1167, %__internal_fmad.exit1.i1014 ], [ %.02.i1029, %__internal_fmad.exit3.i1019 ], !dbg !37
  %1184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1031 = icmp eq i32 %1184, 0, !dbg !37
  %1185 = tail call float @llvm.nvvm.fabs.ftz.f(float %416) #5, !dbg !37
  %1186 = tail call float @llvm.nvvm.fabs.f(float %416) #5, !dbg !37
  %.01.i1032 = select i1 %.not.i1031, float %1186, float %1185, !dbg !37
  %1187 = fcmp ult float %.01.i1032, 0x3FE3333340000000, !dbg !37
  br i1 %1187, label %__internal_fmad.exit3.i1038, label %__internal_fmad.exit1.i1033, !dbg !37

__internal_fmad.exit1.i1033:                      ; preds = %__nv_tanhf.exit1030
  %1188 = fmul float %.01.i1032, 0x4007154760000000, !dbg !37
  %1189 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1188) #5, !dbg !37
  %1190 = fadd float %1189, 1.000000e+00, !dbg !37
  %1191 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1190) #6, !dbg !37, !srcloc !38
  %1192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1034 = icmp eq i32 %1192, 0, !dbg !37
  %1193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1191, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1194 = tail call float @llvm.nvvm.fma.rn.f(float %1191, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1035 = select i1 %.not6.i1034, float %1194, float %1193, !dbg !37
  %1195 = fcmp oge float %.01.i1032, 0x4022059680000000, !dbg !37
  %s.0.i1036 = select i1 %1195, float 1.000000e+00, float %.03.i1035, !dbg !37
  %1196 = bitcast float %s.0.i1036 to i32, !dbg !37
  %1197 = bitcast float %416 to i32, !dbg !37
  %1198 = and i32 %1197, -2147483648, !dbg !37
  %1199 = or i32 %1198, %1196, !dbg !37
  %1200 = bitcast i32 %1199 to float, !dbg !37
  br label %__nv_tanhf.exit1049, !dbg !37

__internal_fmad.exit3.i1038:                      ; preds = %__nv_tanhf.exit1030
  %1201 = fmul float %416, %416, !dbg !37
  %1202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1039 = icmp eq i32 %1202, 0, !dbg !37
  %1203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1201, float 0xBFAAC795C0000000) #5, !dbg !37
  %1204 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1201, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1040 = select i1 %.not1.i1039, float %1204, float %1203, !dbg !37
  %1205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1041 = icmp eq i32 %1205, 0, !dbg !37
  %1206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1040, float %1201, float 0x3FC10B2820000000) #5, !dbg !37
  %1207 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1040, float %1201, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1042 = select i1 %.not2.i1041, float %1207, float %1206, !dbg !37
  %1208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1043 = icmp eq i32 %1208, 0, !dbg !37
  %1209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1042, float %1201, float 0xBFD5553DA0000000) #5, !dbg !37
  %1210 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1042, float %1201, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1044 = select i1 %.not3.i1043, float %1210, float %1209, !dbg !37
  %1211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1045 = icmp eq i32 %1211, 0, !dbg !37
  %1212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1044, float %1201, float 0.000000e+00) #5, !dbg !37
  %1213 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1044, float %1201, float 0.000000e+00) #5, !dbg !37
  %.04.i1046 = select i1 %.not4.i1045, float %1213, float %1212, !dbg !37
  %1214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1047 = icmp eq i32 %1214, 0, !dbg !37
  %1215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1046, float %416, float %416) #5, !dbg !37
  %1216 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1046, float %416, float %416) #5, !dbg !37
  %.02.i1048 = select i1 %.not5.i1047, float %1216, float %1215, !dbg !37
  br label %__nv_tanhf.exit1049, !dbg !37

__nv_tanhf.exit1049:                              ; preds = %__internal_fmad.exit1.i1033, %__internal_fmad.exit3.i1038
  %s.1.i1037 = phi float [ %1200, %__internal_fmad.exit1.i1033 ], [ %.02.i1048, %__internal_fmad.exit3.i1038 ], !dbg !37
  %1217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1050 = icmp eq i32 %1217, 0, !dbg !37
  %1218 = tail call float @llvm.nvvm.fabs.ftz.f(float %417) #5, !dbg !37
  %1219 = tail call float @llvm.nvvm.fabs.f(float %417) #5, !dbg !37
  %.01.i1051 = select i1 %.not.i1050, float %1219, float %1218, !dbg !37
  %1220 = fcmp ult float %.01.i1051, 0x3FE3333340000000, !dbg !37
  br i1 %1220, label %__internal_fmad.exit3.i1057, label %__internal_fmad.exit1.i1052, !dbg !37

__internal_fmad.exit1.i1052:                      ; preds = %__nv_tanhf.exit1049
  %1221 = fmul float %.01.i1051, 0x4007154760000000, !dbg !37
  %1222 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1221) #5, !dbg !37
  %1223 = fadd float %1222, 1.000000e+00, !dbg !37
  %1224 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1223) #6, !dbg !37, !srcloc !38
  %1225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1053 = icmp eq i32 %1225, 0, !dbg !37
  %1226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1224, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1227 = tail call float @llvm.nvvm.fma.rn.f(float %1224, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1054 = select i1 %.not6.i1053, float %1227, float %1226, !dbg !37
  %1228 = fcmp oge float %.01.i1051, 0x4022059680000000, !dbg !37
  %s.0.i1055 = select i1 %1228, float 1.000000e+00, float %.03.i1054, !dbg !37
  %1229 = bitcast float %s.0.i1055 to i32, !dbg !37
  %1230 = bitcast float %417 to i32, !dbg !37
  %1231 = and i32 %1230, -2147483648, !dbg !37
  %1232 = or i32 %1231, %1229, !dbg !37
  %1233 = bitcast i32 %1232 to float, !dbg !37
  br label %__nv_tanhf.exit1068, !dbg !37

__internal_fmad.exit3.i1057:                      ; preds = %__nv_tanhf.exit1049
  %1234 = fmul float %417, %417, !dbg !37
  %1235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1058 = icmp eq i32 %1235, 0, !dbg !37
  %1236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1234, float 0xBFAAC795C0000000) #5, !dbg !37
  %1237 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1234, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1059 = select i1 %.not1.i1058, float %1237, float %1236, !dbg !37
  %1238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1060 = icmp eq i32 %1238, 0, !dbg !37
  %1239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1059, float %1234, float 0x3FC10B2820000000) #5, !dbg !37
  %1240 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1059, float %1234, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1061 = select i1 %.not2.i1060, float %1240, float %1239, !dbg !37
  %1241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1062 = icmp eq i32 %1241, 0, !dbg !37
  %1242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1061, float %1234, float 0xBFD5553DA0000000) #5, !dbg !37
  %1243 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1061, float %1234, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1063 = select i1 %.not3.i1062, float %1243, float %1242, !dbg !37
  %1244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1064 = icmp eq i32 %1244, 0, !dbg !37
  %1245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1063, float %1234, float 0.000000e+00) #5, !dbg !37
  %1246 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1063, float %1234, float 0.000000e+00) #5, !dbg !37
  %.04.i1065 = select i1 %.not4.i1064, float %1246, float %1245, !dbg !37
  %1247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1066 = icmp eq i32 %1247, 0, !dbg !37
  %1248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1065, float %417, float %417) #5, !dbg !37
  %1249 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1065, float %417, float %417) #5, !dbg !37
  %.02.i1067 = select i1 %.not5.i1066, float %1249, float %1248, !dbg !37
  br label %__nv_tanhf.exit1068, !dbg !37

__nv_tanhf.exit1068:                              ; preds = %__internal_fmad.exit1.i1052, %__internal_fmad.exit3.i1057
  %s.1.i1056 = phi float [ %1233, %__internal_fmad.exit1.i1052 ], [ %.02.i1067, %__internal_fmad.exit3.i1057 ], !dbg !37
  %1250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1069 = icmp eq i32 %1250, 0, !dbg !37
  %1251 = tail call float @llvm.nvvm.fabs.ftz.f(float %418) #5, !dbg !37
  %1252 = tail call float @llvm.nvvm.fabs.f(float %418) #5, !dbg !37
  %.01.i1070 = select i1 %.not.i1069, float %1252, float %1251, !dbg !37
  %1253 = fcmp ult float %.01.i1070, 0x3FE3333340000000, !dbg !37
  br i1 %1253, label %__internal_fmad.exit3.i1076, label %__internal_fmad.exit1.i1071, !dbg !37

__internal_fmad.exit1.i1071:                      ; preds = %__nv_tanhf.exit1068
  %1254 = fmul float %.01.i1070, 0x4007154760000000, !dbg !37
  %1255 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1254) #5, !dbg !37
  %1256 = fadd float %1255, 1.000000e+00, !dbg !37
  %1257 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1256) #6, !dbg !37, !srcloc !38
  %1258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1072 = icmp eq i32 %1258, 0, !dbg !37
  %1259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1257, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1260 = tail call float @llvm.nvvm.fma.rn.f(float %1257, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1073 = select i1 %.not6.i1072, float %1260, float %1259, !dbg !37
  %1261 = fcmp oge float %.01.i1070, 0x4022059680000000, !dbg !37
  %s.0.i1074 = select i1 %1261, float 1.000000e+00, float %.03.i1073, !dbg !37
  %1262 = bitcast float %s.0.i1074 to i32, !dbg !37
  %1263 = bitcast float %418 to i32, !dbg !37
  %1264 = and i32 %1263, -2147483648, !dbg !37
  %1265 = or i32 %1264, %1262, !dbg !37
  %1266 = bitcast i32 %1265 to float, !dbg !37
  br label %__nv_tanhf.exit1087, !dbg !37

__internal_fmad.exit3.i1076:                      ; preds = %__nv_tanhf.exit1068
  %1267 = fmul float %418, %418, !dbg !37
  %1268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1077 = icmp eq i32 %1268, 0, !dbg !37
  %1269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1267, float 0xBFAAC795C0000000) #5, !dbg !37
  %1270 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1267, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1078 = select i1 %.not1.i1077, float %1270, float %1269, !dbg !37
  %1271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1079 = icmp eq i32 %1271, 0, !dbg !37
  %1272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1078, float %1267, float 0x3FC10B2820000000) #5, !dbg !37
  %1273 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1078, float %1267, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1080 = select i1 %.not2.i1079, float %1273, float %1272, !dbg !37
  %1274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1081 = icmp eq i32 %1274, 0, !dbg !37
  %1275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1080, float %1267, float 0xBFD5553DA0000000) #5, !dbg !37
  %1276 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1080, float %1267, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1082 = select i1 %.not3.i1081, float %1276, float %1275, !dbg !37
  %1277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1083 = icmp eq i32 %1277, 0, !dbg !37
  %1278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1082, float %1267, float 0.000000e+00) #5, !dbg !37
  %1279 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1082, float %1267, float 0.000000e+00) #5, !dbg !37
  %.04.i1084 = select i1 %.not4.i1083, float %1279, float %1278, !dbg !37
  %1280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1085 = icmp eq i32 %1280, 0, !dbg !37
  %1281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1084, float %418, float %418) #5, !dbg !37
  %1282 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1084, float %418, float %418) #5, !dbg !37
  %.02.i1086 = select i1 %.not5.i1085, float %1282, float %1281, !dbg !37
  br label %__nv_tanhf.exit1087, !dbg !37

__nv_tanhf.exit1087:                              ; preds = %__internal_fmad.exit1.i1071, %__internal_fmad.exit3.i1076
  %s.1.i1075 = phi float [ %1266, %__internal_fmad.exit1.i1071 ], [ %.02.i1086, %__internal_fmad.exit3.i1076 ], !dbg !37
  %1283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1088 = icmp eq i32 %1283, 0, !dbg !37
  %1284 = tail call float @llvm.nvvm.fabs.ftz.f(float %419) #5, !dbg !37
  %1285 = tail call float @llvm.nvvm.fabs.f(float %419) #5, !dbg !37
  %.01.i1089 = select i1 %.not.i1088, float %1285, float %1284, !dbg !37
  %1286 = fcmp ult float %.01.i1089, 0x3FE3333340000000, !dbg !37
  br i1 %1286, label %__internal_fmad.exit3.i1095, label %__internal_fmad.exit1.i1090, !dbg !37

__internal_fmad.exit1.i1090:                      ; preds = %__nv_tanhf.exit1087
  %1287 = fmul float %.01.i1089, 0x4007154760000000, !dbg !37
  %1288 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1287) #5, !dbg !37
  %1289 = fadd float %1288, 1.000000e+00, !dbg !37
  %1290 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1289) #6, !dbg !37, !srcloc !38
  %1291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1091 = icmp eq i32 %1291, 0, !dbg !37
  %1292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1290, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1293 = tail call float @llvm.nvvm.fma.rn.f(float %1290, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1092 = select i1 %.not6.i1091, float %1293, float %1292, !dbg !37
  %1294 = fcmp oge float %.01.i1089, 0x4022059680000000, !dbg !37
  %s.0.i1093 = select i1 %1294, float 1.000000e+00, float %.03.i1092, !dbg !37
  %1295 = bitcast float %s.0.i1093 to i32, !dbg !37
  %1296 = bitcast float %419 to i32, !dbg !37
  %1297 = and i32 %1296, -2147483648, !dbg !37
  %1298 = or i32 %1297, %1295, !dbg !37
  %1299 = bitcast i32 %1298 to float, !dbg !37
  br label %__nv_tanhf.exit1106, !dbg !37

__internal_fmad.exit3.i1095:                      ; preds = %__nv_tanhf.exit1087
  %1300 = fmul float %419, %419, !dbg !37
  %1301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1096 = icmp eq i32 %1301, 0, !dbg !37
  %1302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1300, float 0xBFAAC795C0000000) #5, !dbg !37
  %1303 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1300, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1097 = select i1 %.not1.i1096, float %1303, float %1302, !dbg !37
  %1304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1098 = icmp eq i32 %1304, 0, !dbg !37
  %1305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1097, float %1300, float 0x3FC10B2820000000) #5, !dbg !37
  %1306 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1097, float %1300, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1099 = select i1 %.not2.i1098, float %1306, float %1305, !dbg !37
  %1307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1100 = icmp eq i32 %1307, 0, !dbg !37
  %1308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1099, float %1300, float 0xBFD5553DA0000000) #5, !dbg !37
  %1309 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1099, float %1300, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1101 = select i1 %.not3.i1100, float %1309, float %1308, !dbg !37
  %1310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1102 = icmp eq i32 %1310, 0, !dbg !37
  %1311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1101, float %1300, float 0.000000e+00) #5, !dbg !37
  %1312 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1101, float %1300, float 0.000000e+00) #5, !dbg !37
  %.04.i1103 = select i1 %.not4.i1102, float %1312, float %1311, !dbg !37
  %1313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1104 = icmp eq i32 %1313, 0, !dbg !37
  %1314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1103, float %419, float %419) #5, !dbg !37
  %1315 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1103, float %419, float %419) #5, !dbg !37
  %.02.i1105 = select i1 %.not5.i1104, float %1315, float %1314, !dbg !37
  br label %__nv_tanhf.exit1106, !dbg !37

__nv_tanhf.exit1106:                              ; preds = %__internal_fmad.exit1.i1090, %__internal_fmad.exit3.i1095
  %s.1.i1094 = phi float [ %1299, %__internal_fmad.exit1.i1090 ], [ %.02.i1105, %__internal_fmad.exit3.i1095 ], !dbg !37
  %1316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1107 = icmp eq i32 %1316, 0, !dbg !37
  %1317 = tail call float @llvm.nvvm.fabs.ftz.f(float %420) #5, !dbg !37
  %1318 = tail call float @llvm.nvvm.fabs.f(float %420) #5, !dbg !37
  %.01.i1108 = select i1 %.not.i1107, float %1318, float %1317, !dbg !37
  %1319 = fcmp ult float %.01.i1108, 0x3FE3333340000000, !dbg !37
  br i1 %1319, label %__internal_fmad.exit3.i1114, label %__internal_fmad.exit1.i1109, !dbg !37

__internal_fmad.exit1.i1109:                      ; preds = %__nv_tanhf.exit1106
  %1320 = fmul float %.01.i1108, 0x4007154760000000, !dbg !37
  %1321 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1320) #5, !dbg !37
  %1322 = fadd float %1321, 1.000000e+00, !dbg !37
  %1323 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1322) #6, !dbg !37, !srcloc !38
  %1324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1110 = icmp eq i32 %1324, 0, !dbg !37
  %1325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1323, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1326 = tail call float @llvm.nvvm.fma.rn.f(float %1323, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1111 = select i1 %.not6.i1110, float %1326, float %1325, !dbg !37
  %1327 = fcmp oge float %.01.i1108, 0x4022059680000000, !dbg !37
  %s.0.i1112 = select i1 %1327, float 1.000000e+00, float %.03.i1111, !dbg !37
  %1328 = bitcast float %s.0.i1112 to i32, !dbg !37
  %1329 = bitcast float %420 to i32, !dbg !37
  %1330 = and i32 %1329, -2147483648, !dbg !37
  %1331 = or i32 %1330, %1328, !dbg !37
  %1332 = bitcast i32 %1331 to float, !dbg !37
  br label %__nv_tanhf.exit1125, !dbg !37

__internal_fmad.exit3.i1114:                      ; preds = %__nv_tanhf.exit1106
  %1333 = fmul float %420, %420, !dbg !37
  %1334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1115 = icmp eq i32 %1334, 0, !dbg !37
  %1335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1333, float 0xBFAAC795C0000000) #5, !dbg !37
  %1336 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1333, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1116 = select i1 %.not1.i1115, float %1336, float %1335, !dbg !37
  %1337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1117 = icmp eq i32 %1337, 0, !dbg !37
  %1338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1116, float %1333, float 0x3FC10B2820000000) #5, !dbg !37
  %1339 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1116, float %1333, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1118 = select i1 %.not2.i1117, float %1339, float %1338, !dbg !37
  %1340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1119 = icmp eq i32 %1340, 0, !dbg !37
  %1341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1118, float %1333, float 0xBFD5553DA0000000) #5, !dbg !37
  %1342 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1118, float %1333, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1120 = select i1 %.not3.i1119, float %1342, float %1341, !dbg !37
  %1343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1121 = icmp eq i32 %1343, 0, !dbg !37
  %1344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1120, float %1333, float 0.000000e+00) #5, !dbg !37
  %1345 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1120, float %1333, float 0.000000e+00) #5, !dbg !37
  %.04.i1122 = select i1 %.not4.i1121, float %1345, float %1344, !dbg !37
  %1346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1123 = icmp eq i32 %1346, 0, !dbg !37
  %1347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1122, float %420, float %420) #5, !dbg !37
  %1348 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1122, float %420, float %420) #5, !dbg !37
  %.02.i1124 = select i1 %.not5.i1123, float %1348, float %1347, !dbg !37
  br label %__nv_tanhf.exit1125, !dbg !37

__nv_tanhf.exit1125:                              ; preds = %__internal_fmad.exit1.i1109, %__internal_fmad.exit3.i1114
  %s.1.i1113 = phi float [ %1332, %__internal_fmad.exit1.i1109 ], [ %.02.i1124, %__internal_fmad.exit3.i1114 ], !dbg !37
  %1349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1126 = icmp eq i32 %1349, 0, !dbg !37
  %1350 = tail call float @llvm.nvvm.fabs.ftz.f(float %421) #5, !dbg !37
  %1351 = tail call float @llvm.nvvm.fabs.f(float %421) #5, !dbg !37
  %.01.i1127 = select i1 %.not.i1126, float %1351, float %1350, !dbg !37
  %1352 = fcmp ult float %.01.i1127, 0x3FE3333340000000, !dbg !37
  br i1 %1352, label %__internal_fmad.exit3.i1133, label %__internal_fmad.exit1.i1128, !dbg !37

__internal_fmad.exit1.i1128:                      ; preds = %__nv_tanhf.exit1125
  %1353 = fmul float %.01.i1127, 0x4007154760000000, !dbg !37
  %1354 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1353) #5, !dbg !37
  %1355 = fadd float %1354, 1.000000e+00, !dbg !37
  %1356 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1355) #6, !dbg !37, !srcloc !38
  %1357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1129 = icmp eq i32 %1357, 0, !dbg !37
  %1358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1356, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1359 = tail call float @llvm.nvvm.fma.rn.f(float %1356, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1130 = select i1 %.not6.i1129, float %1359, float %1358, !dbg !37
  %1360 = fcmp oge float %.01.i1127, 0x4022059680000000, !dbg !37
  %s.0.i1131 = select i1 %1360, float 1.000000e+00, float %.03.i1130, !dbg !37
  %1361 = bitcast float %s.0.i1131 to i32, !dbg !37
  %1362 = bitcast float %421 to i32, !dbg !37
  %1363 = and i32 %1362, -2147483648, !dbg !37
  %1364 = or i32 %1363, %1361, !dbg !37
  %1365 = bitcast i32 %1364 to float, !dbg !37
  br label %__nv_tanhf.exit1144, !dbg !37

__internal_fmad.exit3.i1133:                      ; preds = %__nv_tanhf.exit1125
  %1366 = fmul float %421, %421, !dbg !37
  %1367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1134 = icmp eq i32 %1367, 0, !dbg !37
  %1368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1366, float 0xBFAAC795C0000000) #5, !dbg !37
  %1369 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1366, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1135 = select i1 %.not1.i1134, float %1369, float %1368, !dbg !37
  %1370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1136 = icmp eq i32 %1370, 0, !dbg !37
  %1371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1135, float %1366, float 0x3FC10B2820000000) #5, !dbg !37
  %1372 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1135, float %1366, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1137 = select i1 %.not2.i1136, float %1372, float %1371, !dbg !37
  %1373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1138 = icmp eq i32 %1373, 0, !dbg !37
  %1374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1137, float %1366, float 0xBFD5553DA0000000) #5, !dbg !37
  %1375 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1137, float %1366, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1139 = select i1 %.not3.i1138, float %1375, float %1374, !dbg !37
  %1376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1140 = icmp eq i32 %1376, 0, !dbg !37
  %1377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1139, float %1366, float 0.000000e+00) #5, !dbg !37
  %1378 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1139, float %1366, float 0.000000e+00) #5, !dbg !37
  %.04.i1141 = select i1 %.not4.i1140, float %1378, float %1377, !dbg !37
  %1379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1142 = icmp eq i32 %1379, 0, !dbg !37
  %1380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1141, float %421, float %421) #5, !dbg !37
  %1381 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1141, float %421, float %421) #5, !dbg !37
  %.02.i1143 = select i1 %.not5.i1142, float %1381, float %1380, !dbg !37
  br label %__nv_tanhf.exit1144, !dbg !37

__nv_tanhf.exit1144:                              ; preds = %__internal_fmad.exit1.i1128, %__internal_fmad.exit3.i1133
  %s.1.i1132 = phi float [ %1365, %__internal_fmad.exit1.i1128 ], [ %.02.i1143, %__internal_fmad.exit3.i1133 ], !dbg !37
  %1382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1145 = icmp eq i32 %1382, 0, !dbg !37
  %1383 = tail call float @llvm.nvvm.fabs.ftz.f(float %422) #5, !dbg !37
  %1384 = tail call float @llvm.nvvm.fabs.f(float %422) #5, !dbg !37
  %.01.i1146 = select i1 %.not.i1145, float %1384, float %1383, !dbg !37
  %1385 = fcmp ult float %.01.i1146, 0x3FE3333340000000, !dbg !37
  br i1 %1385, label %__internal_fmad.exit3.i1152, label %__internal_fmad.exit1.i1147, !dbg !37

__internal_fmad.exit1.i1147:                      ; preds = %__nv_tanhf.exit1144
  %1386 = fmul float %.01.i1146, 0x4007154760000000, !dbg !37
  %1387 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1386) #5, !dbg !37
  %1388 = fadd float %1387, 1.000000e+00, !dbg !37
  %1389 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1388) #6, !dbg !37, !srcloc !38
  %1390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1148 = icmp eq i32 %1390, 0, !dbg !37
  %1391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1389, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1392 = tail call float @llvm.nvvm.fma.rn.f(float %1389, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1149 = select i1 %.not6.i1148, float %1392, float %1391, !dbg !37
  %1393 = fcmp oge float %.01.i1146, 0x4022059680000000, !dbg !37
  %s.0.i1150 = select i1 %1393, float 1.000000e+00, float %.03.i1149, !dbg !37
  %1394 = bitcast float %s.0.i1150 to i32, !dbg !37
  %1395 = bitcast float %422 to i32, !dbg !37
  %1396 = and i32 %1395, -2147483648, !dbg !37
  %1397 = or i32 %1396, %1394, !dbg !37
  %1398 = bitcast i32 %1397 to float, !dbg !37
  br label %__nv_tanhf.exit1163, !dbg !37

__internal_fmad.exit3.i1152:                      ; preds = %__nv_tanhf.exit1144
  %1399 = fmul float %422, %422, !dbg !37
  %1400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1153 = icmp eq i32 %1400, 0, !dbg !37
  %1401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1399, float 0xBFAAC795C0000000) #5, !dbg !37
  %1402 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1399, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1154 = select i1 %.not1.i1153, float %1402, float %1401, !dbg !37
  %1403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1155 = icmp eq i32 %1403, 0, !dbg !37
  %1404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1154, float %1399, float 0x3FC10B2820000000) #5, !dbg !37
  %1405 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1154, float %1399, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1156 = select i1 %.not2.i1155, float %1405, float %1404, !dbg !37
  %1406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1157 = icmp eq i32 %1406, 0, !dbg !37
  %1407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1156, float %1399, float 0xBFD5553DA0000000) #5, !dbg !37
  %1408 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1156, float %1399, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1158 = select i1 %.not3.i1157, float %1408, float %1407, !dbg !37
  %1409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1159 = icmp eq i32 %1409, 0, !dbg !37
  %1410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1158, float %1399, float 0.000000e+00) #5, !dbg !37
  %1411 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1158, float %1399, float 0.000000e+00) #5, !dbg !37
  %.04.i1160 = select i1 %.not4.i1159, float %1411, float %1410, !dbg !37
  %1412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1161 = icmp eq i32 %1412, 0, !dbg !37
  %1413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1160, float %422, float %422) #5, !dbg !37
  %1414 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1160, float %422, float %422) #5, !dbg !37
  %.02.i1162 = select i1 %.not5.i1161, float %1414, float %1413, !dbg !37
  br label %__nv_tanhf.exit1163, !dbg !37

__nv_tanhf.exit1163:                              ; preds = %__internal_fmad.exit1.i1147, %__internal_fmad.exit3.i1152
  %s.1.i1151 = phi float [ %1398, %__internal_fmad.exit1.i1147 ], [ %.02.i1162, %__internal_fmad.exit3.i1152 ], !dbg !37
  %1415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1164 = icmp eq i32 %1415, 0, !dbg !37
  %1416 = tail call float @llvm.nvvm.fabs.ftz.f(float %423) #5, !dbg !37
  %1417 = tail call float @llvm.nvvm.fabs.f(float %423) #5, !dbg !37
  %.01.i1165 = select i1 %.not.i1164, float %1417, float %1416, !dbg !37
  %1418 = fcmp ult float %.01.i1165, 0x3FE3333340000000, !dbg !37
  br i1 %1418, label %__internal_fmad.exit3.i1171, label %__internal_fmad.exit1.i1166, !dbg !37

__internal_fmad.exit1.i1166:                      ; preds = %__nv_tanhf.exit1163
  %1419 = fmul float %.01.i1165, 0x4007154760000000, !dbg !37
  %1420 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1419) #5, !dbg !37
  %1421 = fadd float %1420, 1.000000e+00, !dbg !37
  %1422 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1421) #6, !dbg !37, !srcloc !38
  %1423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1167 = icmp eq i32 %1423, 0, !dbg !37
  %1424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1422, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1425 = tail call float @llvm.nvvm.fma.rn.f(float %1422, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1168 = select i1 %.not6.i1167, float %1425, float %1424, !dbg !37
  %1426 = fcmp oge float %.01.i1165, 0x4022059680000000, !dbg !37
  %s.0.i1169 = select i1 %1426, float 1.000000e+00, float %.03.i1168, !dbg !37
  %1427 = bitcast float %s.0.i1169 to i32, !dbg !37
  %1428 = bitcast float %423 to i32, !dbg !37
  %1429 = and i32 %1428, -2147483648, !dbg !37
  %1430 = or i32 %1429, %1427, !dbg !37
  %1431 = bitcast i32 %1430 to float, !dbg !37
  br label %__nv_tanhf.exit1182, !dbg !37

__internal_fmad.exit3.i1171:                      ; preds = %__nv_tanhf.exit1163
  %1432 = fmul float %423, %423, !dbg !37
  %1433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1172 = icmp eq i32 %1433, 0, !dbg !37
  %1434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1432, float 0xBFAAC795C0000000) #5, !dbg !37
  %1435 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1432, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1173 = select i1 %.not1.i1172, float %1435, float %1434, !dbg !37
  %1436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1174 = icmp eq i32 %1436, 0, !dbg !37
  %1437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1173, float %1432, float 0x3FC10B2820000000) #5, !dbg !37
  %1438 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1173, float %1432, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1175 = select i1 %.not2.i1174, float %1438, float %1437, !dbg !37
  %1439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1176 = icmp eq i32 %1439, 0, !dbg !37
  %1440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1175, float %1432, float 0xBFD5553DA0000000) #5, !dbg !37
  %1441 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1175, float %1432, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1177 = select i1 %.not3.i1176, float %1441, float %1440, !dbg !37
  %1442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1178 = icmp eq i32 %1442, 0, !dbg !37
  %1443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1177, float %1432, float 0.000000e+00) #5, !dbg !37
  %1444 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1177, float %1432, float 0.000000e+00) #5, !dbg !37
  %.04.i1179 = select i1 %.not4.i1178, float %1444, float %1443, !dbg !37
  %1445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1180 = icmp eq i32 %1445, 0, !dbg !37
  %1446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1179, float %423, float %423) #5, !dbg !37
  %1447 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1179, float %423, float %423) #5, !dbg !37
  %.02.i1181 = select i1 %.not5.i1180, float %1447, float %1446, !dbg !37
  br label %__nv_tanhf.exit1182, !dbg !37

__nv_tanhf.exit1182:                              ; preds = %__internal_fmad.exit1.i1166, %__internal_fmad.exit3.i1171
  %s.1.i1170 = phi float [ %1431, %__internal_fmad.exit1.i1166 ], [ %.02.i1181, %__internal_fmad.exit3.i1171 ], !dbg !37
  %1448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i1183 = icmp eq i32 %1448, 0, !dbg !37
  %1449 = tail call float @llvm.nvvm.fabs.ftz.f(float %424) #5, !dbg !37
  %1450 = tail call float @llvm.nvvm.fabs.f(float %424) #5, !dbg !37
  %.01.i1184 = select i1 %.not.i1183, float %1450, float %1449, !dbg !37
  %1451 = fcmp ult float %.01.i1184, 0x3FE3333340000000, !dbg !37
  br i1 %1451, label %__internal_fmad.exit3.i1190, label %__internal_fmad.exit1.i1185, !dbg !37

__internal_fmad.exit1.i1185:                      ; preds = %__nv_tanhf.exit1182
  %1452 = fmul float %.01.i1184, 0x4007154760000000, !dbg !37
  %1453 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1452) #5, !dbg !37
  %1454 = fadd float %1453, 1.000000e+00, !dbg !37
  %1455 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1454) #6, !dbg !37, !srcloc !38
  %1456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not6.i1186 = icmp eq i32 %1456, 0, !dbg !37
  %1457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1455, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %1458 = tail call float @llvm.nvvm.fma.rn.f(float %1455, float -2.000000e+00, float 1.000000e+00) #5, !dbg !37
  %.03.i1187 = select i1 %.not6.i1186, float %1458, float %1457, !dbg !37
  %1459 = fcmp oge float %.01.i1184, 0x4022059680000000, !dbg !37
  %s.0.i1188 = select i1 %1459, float 1.000000e+00, float %.03.i1187, !dbg !37
  %1460 = bitcast float %s.0.i1188 to i32, !dbg !37
  %1461 = bitcast float %424 to i32, !dbg !37
  %1462 = and i32 %1461, -2147483648, !dbg !37
  %1463 = or i32 %1462, %1460, !dbg !37
  %1464 = bitcast i32 %1463 to float, !dbg !37
  br label %__nv_tanhf.exit1201, !dbg !37

__internal_fmad.exit3.i1190:                      ; preds = %__nv_tanhf.exit1182
  %1465 = fmul float %424, %424, !dbg !37
  %1466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not1.i1191 = icmp eq i32 %1466, 0, !dbg !37
  %1467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1465, float 0xBFAAC795C0000000) #5, !dbg !37
  %1468 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1465, float 0xBFAAC795C0000000) #5, !dbg !37
  %.06.i1192 = select i1 %.not1.i1191, float %1468, float %1467, !dbg !37
  %1469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not2.i1193 = icmp eq i32 %1469, 0, !dbg !37
  %1470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i1192, float %1465, float 0x3FC10B2820000000) #5, !dbg !37
  %1471 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i1192, float %1465, float 0x3FC10B2820000000) #5, !dbg !37
  %.05.i1194 = select i1 %.not2.i1193, float %1471, float %1470, !dbg !37
  %1472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not3.i1195 = icmp eq i32 %1472, 0, !dbg !37
  %1473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i1194, float %1465, float 0xBFD5553DA0000000) #5, !dbg !37
  %1474 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i1194, float %1465, float 0xBFD5553DA0000000) #5, !dbg !37
  %.0.i1196 = select i1 %.not3.i1195, float %1474, float %1473, !dbg !37
  %1475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not4.i1197 = icmp eq i32 %1475, 0, !dbg !37
  %1476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i1196, float %1465, float 0.000000e+00) #5, !dbg !37
  %1477 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i1196, float %1465, float 0.000000e+00) #5, !dbg !37
  %.04.i1198 = select i1 %.not4.i1197, float %1477, float %1476, !dbg !37
  %1478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not5.i1199 = icmp eq i32 %1478, 0, !dbg !37
  %1479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i1198, float %424, float %424) #5, !dbg !37
  %1480 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i1198, float %424, float %424) #5, !dbg !37
  %.02.i1200 = select i1 %.not5.i1199, float %1480, float %1479, !dbg !37
  br label %__nv_tanhf.exit1201, !dbg !37

__nv_tanhf.exit1201:                              ; preds = %__internal_fmad.exit1.i1185, %__internal_fmad.exit3.i1190
  %s.1.i1189 = phi float [ %1464, %__internal_fmad.exit1.i1185 ], [ %.02.i1200, %__internal_fmad.exit3.i1190 ], !dbg !37
  %1481 = insertelement <4 x float> poison, float %s.1.i904, i64 0, !dbg !39
  %1482 = insertelement <4 x float> %1481, float %s.1.i600, i64 1, !dbg !39
  %1483 = insertelement <4 x float> %1482, float %s.1.i923, i64 2, !dbg !39
  %1484 = insertelement <4 x float> %1483, float %s.1.i619, i64 3, !dbg !39
  %1485 = fadd <4 x float> %1484, splat (float 1.000000e+00), !dbg !39
  %1486 = insertelement <4 x float> poison, float %s.1.i695, i64 0, !dbg !39
  %1487 = insertelement <4 x float> %1486, float %s.1.i676, i64 1, !dbg !39
  %1488 = insertelement <4 x float> %1487, float %s.1.i657, i64 2, !dbg !39
  %1489 = insertelement <4 x float> %1488, float %s.1.i638, i64 3, !dbg !39
  %1490 = fadd <4 x float> %1489, splat (float 1.000000e+00), !dbg !39
  %1491 = insertelement <8 x float> poison, float %s.1.i847, i64 0, !dbg !39
  %1492 = insertelement <8 x float> %1491, float %s.1.i828, i64 1, !dbg !39
  %1493 = insertelement <8 x float> %1492, float %s.1.i809, i64 2, !dbg !39
  %1494 = insertelement <8 x float> %1493, float %s.1.i790, i64 3, !dbg !39
  %1495 = insertelement <8 x float> %1494, float %s.1.i771, i64 4, !dbg !39
  %1496 = insertelement <8 x float> %1495, float %s.1.i752, i64 5, !dbg !39
  %1497 = insertelement <8 x float> %1496, float %s.1.i733, i64 6, !dbg !39
  %1498 = insertelement <8 x float> %1497, float %s.1.i714, i64 7, !dbg !39
  %1499 = fadd <8 x float> %1498, splat (float 1.000000e+00), !dbg !39
  %1500 = insertelement <16 x float> poison, float %s.1.i1189, i64 0, !dbg !39
  %1501 = insertelement <16 x float> %1500, float %s.1.i1170, i64 1, !dbg !39
  %1502 = insertelement <16 x float> %1501, float %s.1.i1151, i64 2, !dbg !39
  %1503 = insertelement <16 x float> %1502, float %s.1.i1132, i64 3, !dbg !39
  %1504 = insertelement <16 x float> %1503, float %s.1.i1113, i64 4, !dbg !39
  %1505 = insertelement <16 x float> %1504, float %s.1.i1094, i64 5, !dbg !39
  %1506 = insertelement <16 x float> %1505, float %s.1.i1075, i64 6, !dbg !39
  %1507 = insertelement <16 x float> %1506, float %s.1.i1056, i64 7, !dbg !39
  %1508 = insertelement <16 x float> %1507, float %s.1.i1037, i64 8, !dbg !39
  %1509 = insertelement <16 x float> %1508, float %s.1.i1018, i64 9, !dbg !39
  %1510 = insertelement <16 x float> %1509, float %s.1.i999, i64 10, !dbg !39
  %1511 = insertelement <16 x float> %1510, float %s.1.i980, i64 11, !dbg !39
  %1512 = insertelement <16 x float> %1511, float %s.1.i961, i64 12, !dbg !39
  %1513 = insertelement <16 x float> %1512, float %s.1.i942, i64 13, !dbg !39
  %1514 = insertelement <16 x float> %1513, float %s.1.i885, i64 14, !dbg !39
  %1515 = insertelement <16 x float> %1514, float %s.1.i866, i64 15, !dbg !39
  %1516 = fadd <16 x float> %1515, splat (float 1.000000e+00), !dbg !39
  %1517 = fcmp uno <4 x float> %30, zeroinitializer, !dbg !40
  %1518 = fcmp uno <4 x float> %29, zeroinitializer, !dbg !40
  %1519 = fcmp uno <16 x float> %34, zeroinitializer, !dbg !40
  %1520 = fcmp uno <8 x float> %33, zeroinitializer, !dbg !44
  %1521 = fcmp uno <16 x float> %32, zeroinitializer, !dbg !44
  %1522 = fmul <8 x float> %230, %1499, !dbg !46
  %1523 = insertelement <8 x i1> poison, i1 %37, i64 0, !dbg !47
  %1524 = shufflevector <8 x i1> %1523, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !47
  %1525 = select <8 x i1> %1524, <8 x float> %102, <8 x float> %1522, !dbg !47
  %1526 = fcmp olt <8 x float> %33, %1525, !dbg !48
  %1527 = or <8 x i1> %1520, %1526, !dbg !49
  %1528 = select <8 x i1> %1527, <8 x float> %33, <8 x float> %1525, !dbg !50
  %1529 = insertelement <8 x i1> poison, i1 %53, i64 0, !dbg !51
  %1530 = shufflevector <8 x i1> %1529, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !51
  %1531 = select <8 x i1> %1530, <8 x float> %1528, <8 x float> %33, !dbg !51
  %1532 = fcmp uno <16 x float> %31, zeroinitializer, !dbg !40
  %1533 = fmul <4 x float> %229, %1490, !dbg !46
  %1534 = insertelement <4 x i1> poison, i1 %37, i64 0, !dbg !47
  %1535 = shufflevector <4 x i1> %1534, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !47
  %1536 = select <4 x i1> %1535, <4 x float> %92, <4 x float> %1533, !dbg !47
  %1537 = shufflevector <4 x float> %1536, <4 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1538 = shufflevector <8 x float> %1525, <8 x float> %1537, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !52
  %1539 = fcmp ogt <16 x float> %34, %1538, !dbg !52
  %1540 = fcmp olt <16 x float> %34, %1538, !dbg !52
  %1541 = shufflevector <16 x i1> %1539, <16 x i1> %1540, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 28, i32 29, i32 30, i32 31>, !dbg !52
  %1542 = or <16 x i1> %1519, %1541, !dbg !53
  %1543 = shufflevector <4 x float> %1536, <4 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3>, !dbg !54
  %1544 = shufflevector <8 x float> %1525, <8 x float> %1543, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !54
  %1545 = select <16 x i1> %1542, <16 x float> %34, <16 x float> %1544, !dbg !54
  %1546 = fmul <4 x float> %231, %1485, !dbg !46
  %1547 = select <4 x i1> %1535, <4 x float> %104, <4 x float> %1546, !dbg !47
  %1548 = shufflevector <4 x float> %1547, <4 x float> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>, !dbg !52
  %1549 = fcmp ogt <4 x float> %30, %1548, !dbg !52
  %1550 = fcmp olt <4 x float> %30, %1548, !dbg !52
  %1551 = shufflevector <4 x i1> %1549, <4 x i1> %1550, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !52
  %1552 = or <4 x i1> %1517, %1551, !dbg !53
  %1553 = select <4 x i1> %1552, <4 x float> %30, <4 x float> %1548, !dbg !54
  %1554 = fcmp ogt <4 x float> %29, %1547, !dbg !52
  %1555 = fcmp olt <4 x float> %29, %1547, !dbg !52
  %1556 = shufflevector <4 x i1> %1554, <4 x i1> %1555, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !52
  %1557 = or <4 x i1> %1518, %1556, !dbg !53
  %1558 = select <4 x i1> %1557, <4 x float> %29, <4 x float> %1547, !dbg !54
  %1559 = fmul <16 x float> %232, %1516, !dbg !46
  %1560 = insertelement <16 x i1> poison, i1 %37, i64 0, !dbg !47
  %1561 = shufflevector <16 x i1> %1560, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !47
  %1562 = select <16 x i1> %1561, <16 x float> %130, <16 x float> %1559, !dbg !47
  %1563 = fcmp olt <16 x float> %32, %1562, !dbg !48
  %1564 = or <16 x i1> %1521, %1563, !dbg !49
  %1565 = select <16 x i1> %1564, <16 x float> %32, <16 x float> %1562, !dbg !50
  %1566 = insertelement <16 x i1> poison, i1 %53, i64 0, !dbg !51
  %1567 = shufflevector <16 x i1> %1566, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !51
  %1568 = select <16 x i1> %1567, <16 x float> %1565, <16 x float> %32, !dbg !51
  %1569 = fcmp ogt <16 x float> %31, %1562, !dbg !52
  %1570 = or <16 x i1> %1532, %1569, !dbg !53
  %1571 = select <16 x i1> %1570, <16 x float> %31, <16 x float> %1562, !dbg !54
  %1572 = select <16 x i1> %1567, <16 x float> %1545, <16 x float> %34, !dbg !55
  %1573 = insertelement <4 x i1> poison, i1 %53, i64 0, !dbg !55
  %1574 = shufflevector <4 x i1> %1573, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !55
  %1575 = select <4 x i1> %1574, <4 x float> %1558, <4 x float> %29, !dbg !55
  %1576 = select <4 x i1> %1574, <4 x float> %1553, <4 x float> %30, !dbg !55
  %1577 = select <16 x i1> %1567, <16 x float> %1571, <16 x float> %31, !dbg !55
  br i1 %28, label %27, label %1578, !dbg !17

1578:                                             ; preds = %__nv_tanhf.exit1201
  %1579 = and i32 %11, 31, !dbg !11
  %1580 = lshr i32 %11, 5, !dbg !14
  %1581 = fcmp ogt <4 x float> %1575, %1576, !dbg !56
  %1582 = extractelement <4 x float> %1576, i64 3, !dbg !59
  %1583 = fcmp uno float %1582, 0.000000e+00, !dbg !59
  %1584 = extractelement <4 x i1> %1581, i64 3, !dbg !61
  %1585 = or i1 %1584, %1583, !dbg !61
  %1586 = extractelement <4 x float> %1575, i64 3, !dbg !62
  %1587 = select i1 %1585, float %1582, float %1586, !dbg !62
  %1588 = extractelement <16 x float> %1572, i64 15, !dbg !63
  %1589 = fcmp olt float %1587, %1588, !dbg !63
  %1590 = fcmp uno float %1587, 0.000000e+00, !dbg !59
  %1591 = or i1 %1589, %1590, !dbg !61
  %1592 = select i1 %1591, float %1587, float %1588, !dbg !62
  %1593 = extractelement <16 x float> %1572, i64 14, !dbg !63
  %1594 = fcmp olt float %1592, %1593, !dbg !63
  %1595 = fcmp uno float %1592, 0.000000e+00, !dbg !59
  %1596 = or i1 %1594, %1595, !dbg !61
  %1597 = select i1 %1596, float %1592, float %1593, !dbg !62
  %1598 = extractelement <16 x float> %1572, i64 13, !dbg !63
  %1599 = fcmp olt float %1597, %1598, !dbg !63
  %1600 = fcmp uno float %1597, 0.000000e+00, !dbg !59
  %1601 = or i1 %1599, %1600, !dbg !61
  %1602 = select i1 %1601, float %1597, float %1598, !dbg !62
  %1603 = extractelement <16 x float> %1572, i64 12, !dbg !63
  %1604 = fcmp olt float %1602, %1603, !dbg !63
  %1605 = fcmp uno float %1602, 0.000000e+00, !dbg !59
  %1606 = or i1 %1604, %1605, !dbg !61
  %1607 = select i1 %1606, float %1602, float %1603, !dbg !62
  %1608 = extractelement <8 x float> %1531, i64 7, !dbg !63
  %1609 = fcmp olt float %1607, %1608, !dbg !63
  %1610 = fcmp uno float %1607, 0.000000e+00, !dbg !59
  %1611 = or i1 %1609, %1610, !dbg !61
  %1612 = select i1 %1611, float %1607, float %1608, !dbg !62
  %1613 = extractelement <8 x float> %1531, i64 6, !dbg !63
  %1614 = fcmp olt float %1612, %1613, !dbg !63
  %1615 = fcmp uno float %1612, 0.000000e+00, !dbg !59
  %1616 = or i1 %1614, %1615, !dbg !61
  %1617 = select i1 %1616, float %1612, float %1613, !dbg !62
  %1618 = extractelement <8 x float> %1531, i64 5, !dbg !63
  %1619 = fcmp olt float %1617, %1618, !dbg !63
  %1620 = fcmp uno float %1617, 0.000000e+00, !dbg !59
  %1621 = or i1 %1619, %1620, !dbg !61
  %1622 = select i1 %1621, float %1617, float %1618, !dbg !62
  %1623 = extractelement <8 x float> %1531, i64 4, !dbg !63
  %1624 = fcmp olt float %1622, %1623, !dbg !63
  %1625 = fcmp uno float %1622, 0.000000e+00, !dbg !59
  %1626 = or i1 %1624, %1625, !dbg !61
  %1627 = select i1 %1626, float %1622, float %1623, !dbg !62
  %1628 = extractelement <8 x float> %1531, i64 3, !dbg !63
  %1629 = fcmp olt float %1627, %1628, !dbg !63
  %1630 = fcmp uno float %1627, 0.000000e+00, !dbg !59
  %1631 = or i1 %1629, %1630, !dbg !61
  %1632 = select i1 %1631, float %1627, float %1628, !dbg !62
  %1633 = extractelement <8 x float> %1531, i64 2, !dbg !63
  %1634 = fcmp olt float %1632, %1633, !dbg !63
  %1635 = fcmp uno float %1632, 0.000000e+00, !dbg !59
  %1636 = or i1 %1634, %1635, !dbg !61
  %1637 = select i1 %1636, float %1632, float %1633, !dbg !62
  %1638 = extractelement <8 x float> %1531, i64 1, !dbg !63
  %1639 = fcmp olt float %1637, %1638, !dbg !63
  %1640 = fcmp uno float %1637, 0.000000e+00, !dbg !59
  %1641 = or i1 %1639, %1640, !dbg !61
  %1642 = select i1 %1641, float %1637, float %1638, !dbg !62
  %1643 = extractelement <8 x float> %1531, i64 0, !dbg !63
  %1644 = fcmp olt float %1642, %1643, !dbg !63
  %1645 = fcmp uno float %1642, 0.000000e+00, !dbg !59
  %1646 = or i1 %1644, %1645, !dbg !61
  %1647 = select i1 %1646, float %1642, float %1643, !dbg !62
  %1648 = extractelement <16 x float> %1568, i64 15, !dbg !63
  %1649 = fcmp olt float %1647, %1648, !dbg !63
  %1650 = fcmp uno float %1647, 0.000000e+00, !dbg !59
  %1651 = or i1 %1649, %1650, !dbg !61
  %1652 = select i1 %1651, float %1647, float %1648, !dbg !62
  %1653 = extractelement <16 x float> %1568, i64 14, !dbg !63
  %1654 = fcmp olt float %1652, %1653, !dbg !63
  %1655 = fcmp uno float %1652, 0.000000e+00, !dbg !59
  %1656 = or i1 %1654, %1655, !dbg !61
  %1657 = select i1 %1656, float %1652, float %1653, !dbg !62
  %1658 = extractelement <4 x float> %1576, i64 2, !dbg !59
  %1659 = fcmp uno float %1658, 0.000000e+00, !dbg !59
  %1660 = extractelement <4 x i1> %1581, i64 2, !dbg !61
  %1661 = or i1 %1660, %1659, !dbg !61
  %1662 = extractelement <4 x float> %1575, i64 2, !dbg !62
  %1663 = select i1 %1661, float %1658, float %1662, !dbg !62
  %1664 = extractelement <16 x float> %1568, i64 13, !dbg !63
  %1665 = fcmp olt float %1663, %1664, !dbg !63
  %1666 = fcmp uno float %1663, 0.000000e+00, !dbg !59
  %1667 = or i1 %1665, %1666, !dbg !61
  %1668 = select i1 %1667, float %1663, float %1664, !dbg !62
  %1669 = extractelement <16 x float> %1568, i64 12, !dbg !63
  %1670 = fcmp olt float %1668, %1669, !dbg !63
  %1671 = fcmp uno float %1668, 0.000000e+00, !dbg !59
  %1672 = or i1 %1670, %1671, !dbg !61
  %1673 = select i1 %1672, float %1668, float %1669, !dbg !62
  %1674 = extractelement <16 x float> %1568, i64 11, !dbg !63
  %1675 = fcmp olt float %1673, %1674, !dbg !63
  %1676 = fcmp uno float %1673, 0.000000e+00, !dbg !59
  %1677 = or i1 %1675, %1676, !dbg !61
  %1678 = select i1 %1677, float %1673, float %1674, !dbg !62
  %1679 = extractelement <16 x float> %1568, i64 10, !dbg !63
  %1680 = fcmp olt float %1678, %1679, !dbg !63
  %1681 = fcmp uno float %1678, 0.000000e+00, !dbg !59
  %1682 = or i1 %1680, %1681, !dbg !61
  %1683 = select i1 %1682, float %1678, float %1679, !dbg !62
  %1684 = extractelement <16 x float> %1568, i64 9, !dbg !63
  %1685 = fcmp olt float %1683, %1684, !dbg !63
  %1686 = fcmp uno float %1683, 0.000000e+00, !dbg !59
  %1687 = or i1 %1685, %1686, !dbg !61
  %1688 = select i1 %1687, float %1683, float %1684, !dbg !62
  %1689 = extractelement <16 x float> %1568, i64 8, !dbg !63
  %1690 = fcmp olt float %1688, %1689, !dbg !63
  %1691 = fcmp uno float %1688, 0.000000e+00, !dbg !59
  %1692 = or i1 %1690, %1691, !dbg !61
  %1693 = select i1 %1692, float %1688, float %1689, !dbg !62
  %1694 = extractelement <16 x float> %1568, i64 7, !dbg !63
  %1695 = fcmp olt float %1693, %1694, !dbg !63
  %1696 = fcmp uno float %1693, 0.000000e+00, !dbg !59
  %1697 = or i1 %1695, %1696, !dbg !61
  %1698 = select i1 %1697, float %1693, float %1694, !dbg !62
  %1699 = extractelement <16 x float> %1568, i64 6, !dbg !63
  %1700 = fcmp olt float %1698, %1699, !dbg !63
  %1701 = fcmp uno float %1698, 0.000000e+00, !dbg !59
  %1702 = or i1 %1700, %1701, !dbg !61
  %1703 = select i1 %1702, float %1698, float %1699, !dbg !62
  %1704 = extractelement <16 x float> %1568, i64 5, !dbg !63
  %1705 = fcmp olt float %1703, %1704, !dbg !63
  %1706 = fcmp uno float %1703, 0.000000e+00, !dbg !59
  %1707 = or i1 %1705, %1706, !dbg !61
  %1708 = select i1 %1707, float %1703, float %1704, !dbg !62
  %1709 = extractelement <16 x float> %1568, i64 4, !dbg !63
  %1710 = fcmp olt float %1708, %1709, !dbg !63
  %1711 = fcmp uno float %1708, 0.000000e+00, !dbg !59
  %1712 = or i1 %1710, %1711, !dbg !61
  %1713 = select i1 %1712, float %1708, float %1709, !dbg !62
  %1714 = extractelement <16 x float> %1568, i64 3, !dbg !63
  %1715 = fcmp olt float %1713, %1714, !dbg !63
  %1716 = fcmp uno float %1713, 0.000000e+00, !dbg !59
  %1717 = or i1 %1715, %1716, !dbg !61
  %1718 = select i1 %1717, float %1713, float %1714, !dbg !62
  %1719 = extractelement <16 x float> %1568, i64 2, !dbg !63
  %1720 = fcmp olt float %1718, %1719, !dbg !63
  %1721 = fcmp uno float %1718, 0.000000e+00, !dbg !59
  %1722 = or i1 %1720, %1721, !dbg !61
  %1723 = select i1 %1722, float %1718, float %1719, !dbg !62
  %1724 = extractelement <16 x float> %1568, i64 1, !dbg !63
  %1725 = fcmp olt float %1723, %1724, !dbg !63
  %1726 = fcmp uno float %1723, 0.000000e+00, !dbg !59
  %1727 = or i1 %1725, %1726, !dbg !61
  %1728 = select i1 %1727, float %1723, float %1724, !dbg !62
  %1729 = extractelement <16 x float> %1568, i64 0, !dbg !63
  %1730 = fcmp olt float %1728, %1729, !dbg !63
  %1731 = fcmp uno float %1728, 0.000000e+00, !dbg !59
  %1732 = or i1 %1730, %1731, !dbg !61
  %1733 = select i1 %1732, float %1728, float %1729, !dbg !62
  %1734 = bitcast float %1657 to i32, !dbg !64
  %1735 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1734, i32 16, i32 31), !dbg !64
  %1736 = bitcast i32 %1735 to float, !dbg !64
  %1737 = fcmp olt float %1657, %1736, !dbg !63
  %1738 = fcmp uno float %1657, 0.000000e+00, !dbg !59
  %1739 = or i1 %1738, %1737, !dbg !61
  %1740 = select i1 %1739, float %1657, float %1736, !dbg !62
  %1741 = bitcast float %1740 to i32, !dbg !64
  %1742 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1741, i32 8, i32 31), !dbg !64
  %1743 = bitcast i32 %1742 to float, !dbg !64
  %1744 = fcmp olt float %1740, %1743, !dbg !63
  %1745 = fcmp uno float %1740, 0.000000e+00, !dbg !59
  %1746 = or i1 %1744, %1745, !dbg !61
  %1747 = select i1 %1746, float %1740, float %1743, !dbg !62
  %1748 = bitcast float %1747 to i32, !dbg !64
  %1749 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1748, i32 4, i32 31), !dbg !64
  %1750 = bitcast i32 %1749 to float, !dbg !64
  %1751 = fcmp olt float %1747, %1750, !dbg !63
  %1752 = fcmp uno float %1747, 0.000000e+00, !dbg !59
  %1753 = or i1 %1751, %1752, !dbg !61
  %1754 = select i1 %1753, float %1747, float %1750, !dbg !62
  %1755 = bitcast float %1754 to i32, !dbg !64
  %1756 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1755, i32 2, i32 31), !dbg !64
  %1757 = bitcast i32 %1756 to float, !dbg !64
  %1758 = fcmp olt float %1754, %1757, !dbg !63
  %1759 = fcmp uno float %1754, 0.000000e+00, !dbg !59
  %1760 = or i1 %1758, %1759, !dbg !61
  %1761 = select i1 %1760, float %1754, float %1757, !dbg !62
  %1762 = bitcast float %1761 to i32, !dbg !64
  %1763 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1762, i32 1, i32 31), !dbg !64
  %1764 = bitcast i32 %1763 to float, !dbg !64
  %1765 = fcmp olt float %1761, %1764, !dbg !63
  %1766 = fcmp uno float %1761, 0.000000e+00, !dbg !59
  %1767 = or i1 %1765, %1766, !dbg !61
  %1768 = bitcast float %1733 to i32, !dbg !64
  %1769 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1768, i32 16, i32 31), !dbg !64
  %1770 = bitcast i32 %1769 to float, !dbg !64
  %1771 = fcmp olt float %1733, %1770, !dbg !63
  %1772 = fcmp uno float %1733, 0.000000e+00, !dbg !59
  %1773 = or i1 %1772, %1771, !dbg !61
  %1774 = select i1 %1773, float %1733, float %1770, !dbg !62
  %1775 = bitcast float %1774 to i32, !dbg !64
  %1776 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1775, i32 8, i32 31), !dbg !64
  %1777 = bitcast i32 %1776 to float, !dbg !64
  %1778 = fcmp olt float %1774, %1777, !dbg !63
  %1779 = fcmp uno float %1774, 0.000000e+00, !dbg !59
  %1780 = or i1 %1778, %1779, !dbg !61
  %1781 = select i1 %1780, float %1774, float %1777, !dbg !62
  %1782 = bitcast float %1781 to i32, !dbg !64
  %1783 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1782, i32 4, i32 31), !dbg !64
  %1784 = bitcast i32 %1783 to float, !dbg !64
  %1785 = fcmp olt float %1781, %1784, !dbg !63
  %1786 = fcmp uno float %1781, 0.000000e+00, !dbg !59
  %1787 = or i1 %1785, %1786, !dbg !61
  %1788 = select i1 %1787, float %1781, float %1784, !dbg !62
  %1789 = bitcast float %1788 to i32, !dbg !64
  %1790 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1789, i32 2, i32 31), !dbg !64
  %1791 = bitcast i32 %1790 to float, !dbg !64
  %1792 = fcmp olt float %1788, %1791, !dbg !63
  %1793 = fcmp uno float %1788, 0.000000e+00, !dbg !59
  %1794 = or i1 %1792, %1793, !dbg !61
  %1795 = select i1 %1794, float %1788, float %1791, !dbg !62
  %1796 = bitcast float %1795 to i32, !dbg !64
  %1797 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1796, i32 1, i32 31), !dbg !64
  %1798 = bitcast i32 %1797 to float, !dbg !64
  %1799 = fcmp olt float %1795, %1798, !dbg !63
  %1800 = fcmp uno float %1795, 0.000000e+00, !dbg !59
  %1801 = or i1 %1799, %1800, !dbg !61
  %1802 = and i32 %1580, 15, !dbg !64
  %1803 = icmp eq i32 %1579, 0, !dbg !64
  %1804 = getelementptr float, ptr addrspace(3) @global_smem, i32 %1802, !dbg !64
  %1805 = select i1 %1767, i32 %1762, i32 %1763, !dbg !62
  %1806 = insertelement <1 x i32> poison, i32 %1805, i64 0, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1804, <1 x i32> %1806, i1 %1803) #5, !dbg !64
  %1807 = or disjoint i32 %1802, 16, !dbg !64
  %1808 = getelementptr float, ptr addrspace(3) @global_smem, i32 %1807, !dbg !64
  %1809 = select i1 %1801, i32 %1796, i32 %1797, !dbg !62
  %1810 = insertelement <1 x i32> poison, i32 %1809, i64 0, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1808, <1 x i32> %1810, i1 %1803) #5, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %1811 = icmp slt i32 %11, 32, !dbg !64
  %1812 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !64
  %1813 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1812, i1 %1811) #5, !dbg !64
  %1814 = bitcast i32 %1813 to float, !dbg !64
  %1815 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1813, i32 8, i32 31), !dbg !64
  %1816 = bitcast i32 %1815 to float, !dbg !64
  %1817 = fcmp olt float %1814, %1816, !dbg !63
  %1818 = fcmp uno float %1814, 0.000000e+00, !dbg !59
  %1819 = or i1 %1818, %1817, !dbg !61
  %1820 = select i1 %1819, float %1814, float %1816, !dbg !62
  %1821 = bitcast float %1820 to i32, !dbg !64
  %1822 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1821, i32 4, i32 31), !dbg !64
  %1823 = bitcast i32 %1822 to float, !dbg !64
  %1824 = fcmp olt float %1820, %1823, !dbg !63
  %1825 = fcmp uno float %1820, 0.000000e+00, !dbg !59
  %1826 = or i1 %1824, %1825, !dbg !61
  %1827 = select i1 %1826, float %1820, float %1823, !dbg !62
  %1828 = bitcast float %1827 to i32, !dbg !64
  %1829 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1828, i32 2, i32 31), !dbg !64
  %1830 = bitcast i32 %1829 to float, !dbg !64
  %1831 = fcmp olt float %1827, %1830, !dbg !63
  %1832 = fcmp uno float %1827, 0.000000e+00, !dbg !59
  %1833 = or i1 %1831, %1832, !dbg !61
  %1834 = select i1 %1833, float %1827, float %1830, !dbg !62
  %1835 = bitcast float %1834 to i32, !dbg !64
  %1836 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1835, i32 1, i32 31), !dbg !64
  %1837 = bitcast i32 %1836 to float, !dbg !64
  %1838 = fcmp olt float %1834, %1837, !dbg !63
  %1839 = fcmp uno float %1834, 0.000000e+00, !dbg !59
  %1840 = or i1 %1838, %1839, !dbg !61
  %1841 = and i32 %11, 15, !dbg !64
  %1842 = icmp eq i32 %1841, 0, !dbg !64
  %1843 = and i1 %1811, %1842, !dbg !64
  %1844 = select i1 %1840, i32 %1835, i32 %1836, !dbg !62
  %1845 = insertelement <1 x i32> poison, i32 %1844, i64 0, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1812, <1 x i32> %1845, i1 %1843) #5, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %1846 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !64
  %1847 = load float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 64), align 16, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1848 = bitcast float %1846 to i32, !dbg !65
  %1849 = bitcast float %1847 to i32, !dbg !65
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) @global_smem, i32 %1848, i32 %1849, i1 true) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1850 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %12, !dbg !65
  %1851 = load float, ptr addrspace(3) %1850, align 4, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !66
  %1852 = extractelement <4 x float> %1575, i64 1, !dbg !67
  %1853 = fcmp uno float %1852, 0.000000e+00, !dbg !67
  %1854 = extractelement <4 x i1> %1581, i64 1, !dbg !68
  %1855 = or i1 %1854, %1853, !dbg !68
  %1856 = extractelement <4 x float> %1576, i64 1, !dbg !69
  %1857 = select i1 %1855, float %1852, float %1856, !dbg !69
  %1858 = extractelement <16 x float> %1572, i64 11, !dbg !56
  %1859 = fcmp ogt float %1857, %1858, !dbg !56
  %1860 = fcmp uno float %1857, 0.000000e+00, !dbg !67
  %1861 = or i1 %1859, %1860, !dbg !68
  %1862 = select i1 %1861, float %1857, float %1858, !dbg !69
  %1863 = extractelement <16 x float> %1572, i64 10, !dbg !56
  %1864 = fcmp ogt float %1862, %1863, !dbg !56
  %1865 = fcmp uno float %1862, 0.000000e+00, !dbg !67
  %1866 = or i1 %1864, %1865, !dbg !68
  %1867 = select i1 %1866, float %1862, float %1863, !dbg !69
  %1868 = extractelement <16 x float> %1572, i64 9, !dbg !56
  %1869 = fcmp ogt float %1867, %1868, !dbg !56
  %1870 = fcmp uno float %1867, 0.000000e+00, !dbg !67
  %1871 = or i1 %1869, %1870, !dbg !68
  %1872 = select i1 %1871, float %1867, float %1868, !dbg !69
  %1873 = extractelement <16 x float> %1572, i64 8, !dbg !56
  %1874 = fcmp ogt float %1872, %1873, !dbg !56
  %1875 = fcmp uno float %1872, 0.000000e+00, !dbg !67
  %1876 = or i1 %1874, %1875, !dbg !68
  %1877 = select i1 %1876, float %1872, float %1873, !dbg !69
  %1878 = extractelement <16 x float> %1572, i64 7, !dbg !56
  %1879 = fcmp ogt float %1877, %1878, !dbg !56
  %1880 = fcmp uno float %1877, 0.000000e+00, !dbg !67
  %1881 = or i1 %1879, %1880, !dbg !68
  %1882 = select i1 %1881, float %1877, float %1878, !dbg !69
  %1883 = extractelement <16 x float> %1572, i64 6, !dbg !56
  %1884 = fcmp ogt float %1882, %1883, !dbg !56
  %1885 = fcmp uno float %1882, 0.000000e+00, !dbg !67
  %1886 = or i1 %1884, %1885, !dbg !68
  %1887 = select i1 %1886, float %1882, float %1883, !dbg !69
  %1888 = extractelement <16 x float> %1572, i64 5, !dbg !56
  %1889 = fcmp ogt float %1887, %1888, !dbg !56
  %1890 = fcmp uno float %1887, 0.000000e+00, !dbg !67
  %1891 = or i1 %1889, %1890, !dbg !68
  %1892 = select i1 %1891, float %1887, float %1888, !dbg !69
  %1893 = extractelement <16 x float> %1572, i64 4, !dbg !56
  %1894 = fcmp ogt float %1892, %1893, !dbg !56
  %1895 = fcmp uno float %1892, 0.000000e+00, !dbg !67
  %1896 = or i1 %1894, %1895, !dbg !68
  %1897 = select i1 %1896, float %1892, float %1893, !dbg !69
  %1898 = extractelement <16 x float> %1572, i64 3, !dbg !56
  %1899 = fcmp ogt float %1897, %1898, !dbg !56
  %1900 = fcmp uno float %1897, 0.000000e+00, !dbg !67
  %1901 = or i1 %1899, %1900, !dbg !68
  %1902 = select i1 %1901, float %1897, float %1898, !dbg !69
  %1903 = extractelement <16 x float> %1572, i64 2, !dbg !56
  %1904 = fcmp ogt float %1902, %1903, !dbg !56
  %1905 = fcmp uno float %1902, 0.000000e+00, !dbg !67
  %1906 = or i1 %1904, %1905, !dbg !68
  %1907 = select i1 %1906, float %1902, float %1903, !dbg !69
  %1908 = extractelement <16 x float> %1572, i64 1, !dbg !56
  %1909 = fcmp ogt float %1907, %1908, !dbg !56
  %1910 = fcmp uno float %1907, 0.000000e+00, !dbg !67
  %1911 = or i1 %1909, %1910, !dbg !68
  %1912 = select i1 %1911, float %1907, float %1908, !dbg !69
  %1913 = extractelement <16 x float> %1572, i64 0, !dbg !56
  %1914 = fcmp ogt float %1912, %1913, !dbg !56
  %1915 = fcmp uno float %1912, 0.000000e+00, !dbg !67
  %1916 = or i1 %1914, %1915, !dbg !68
  %1917 = select i1 %1916, float %1912, float %1913, !dbg !69
  %1918 = extractelement <16 x float> %1577, i64 15, !dbg !56
  %1919 = fcmp ogt float %1917, %1918, !dbg !56
  %1920 = fcmp uno float %1917, 0.000000e+00, !dbg !67
  %1921 = or i1 %1919, %1920, !dbg !68
  %1922 = select i1 %1921, float %1917, float %1918, !dbg !69
  %1923 = extractelement <16 x float> %1577, i64 14, !dbg !56
  %1924 = fcmp ogt float %1922, %1923, !dbg !56
  %1925 = fcmp uno float %1922, 0.000000e+00, !dbg !67
  %1926 = or i1 %1924, %1925, !dbg !68
  %1927 = select i1 %1926, float %1922, float %1923, !dbg !69
  %1928 = extractelement <4 x float> %1575, i64 0, !dbg !67
  %1929 = fcmp uno float %1928, 0.000000e+00, !dbg !67
  %1930 = extractelement <4 x i1> %1581, i64 0, !dbg !68
  %1931 = or i1 %1930, %1929, !dbg !68
  %1932 = extractelement <4 x float> %1576, i64 0, !dbg !69
  %1933 = select i1 %1931, float %1928, float %1932, !dbg !69
  %1934 = extractelement <16 x float> %1577, i64 13, !dbg !56
  %1935 = fcmp ogt float %1933, %1934, !dbg !56
  %1936 = fcmp uno float %1933, 0.000000e+00, !dbg !67
  %1937 = or i1 %1935, %1936, !dbg !68
  %1938 = select i1 %1937, float %1933, float %1934, !dbg !69
  %1939 = extractelement <16 x float> %1577, i64 12, !dbg !56
  %1940 = fcmp ogt float %1938, %1939, !dbg !56
  %1941 = fcmp uno float %1938, 0.000000e+00, !dbg !67
  %1942 = or i1 %1940, %1941, !dbg !68
  %1943 = select i1 %1942, float %1938, float %1939, !dbg !69
  %1944 = extractelement <16 x float> %1577, i64 11, !dbg !56
  %1945 = fcmp ogt float %1943, %1944, !dbg !56
  %1946 = fcmp uno float %1943, 0.000000e+00, !dbg !67
  %1947 = or i1 %1945, %1946, !dbg !68
  %1948 = select i1 %1947, float %1943, float %1944, !dbg !69
  %1949 = extractelement <16 x float> %1577, i64 10, !dbg !56
  %1950 = fcmp ogt float %1948, %1949, !dbg !56
  %1951 = fcmp uno float %1948, 0.000000e+00, !dbg !67
  %1952 = or i1 %1950, %1951, !dbg !68
  %1953 = select i1 %1952, float %1948, float %1949, !dbg !69
  %1954 = extractelement <16 x float> %1577, i64 9, !dbg !56
  %1955 = fcmp ogt float %1953, %1954, !dbg !56
  %1956 = fcmp uno float %1953, 0.000000e+00, !dbg !67
  %1957 = or i1 %1955, %1956, !dbg !68
  %1958 = select i1 %1957, float %1953, float %1954, !dbg !69
  %1959 = extractelement <16 x float> %1577, i64 8, !dbg !56
  %1960 = fcmp ogt float %1958, %1959, !dbg !56
  %1961 = fcmp uno float %1958, 0.000000e+00, !dbg !67
  %1962 = or i1 %1960, %1961, !dbg !68
  %1963 = select i1 %1962, float %1958, float %1959, !dbg !69
  %1964 = extractelement <16 x float> %1577, i64 7, !dbg !56
  %1965 = fcmp ogt float %1963, %1964, !dbg !56
  %1966 = fcmp uno float %1963, 0.000000e+00, !dbg !67
  %1967 = or i1 %1965, %1966, !dbg !68
  %1968 = select i1 %1967, float %1963, float %1964, !dbg !69
  %1969 = extractelement <16 x float> %1577, i64 6, !dbg !56
  %1970 = fcmp ogt float %1968, %1969, !dbg !56
  %1971 = fcmp uno float %1968, 0.000000e+00, !dbg !67
  %1972 = or i1 %1970, %1971, !dbg !68
  %1973 = select i1 %1972, float %1968, float %1969, !dbg !69
  %1974 = extractelement <16 x float> %1577, i64 5, !dbg !56
  %1975 = fcmp ogt float %1973, %1974, !dbg !56
  %1976 = fcmp uno float %1973, 0.000000e+00, !dbg !67
  %1977 = or i1 %1975, %1976, !dbg !68
  %1978 = select i1 %1977, float %1973, float %1974, !dbg !69
  %1979 = extractelement <16 x float> %1577, i64 4, !dbg !56
  %1980 = fcmp ogt float %1978, %1979, !dbg !56
  %1981 = fcmp uno float %1978, 0.000000e+00, !dbg !67
  %1982 = or i1 %1980, %1981, !dbg !68
  %1983 = select i1 %1982, float %1978, float %1979, !dbg !69
  %1984 = extractelement <16 x float> %1577, i64 3, !dbg !56
  %1985 = fcmp ogt float %1983, %1984, !dbg !56
  %1986 = fcmp uno float %1983, 0.000000e+00, !dbg !67
  %1987 = or i1 %1985, %1986, !dbg !68
  %1988 = select i1 %1987, float %1983, float %1984, !dbg !69
  %1989 = extractelement <16 x float> %1577, i64 2, !dbg !56
  %1990 = fcmp ogt float %1988, %1989, !dbg !56
  %1991 = fcmp uno float %1988, 0.000000e+00, !dbg !67
  %1992 = or i1 %1990, %1991, !dbg !68
  %1993 = select i1 %1992, float %1988, float %1989, !dbg !69
  %1994 = extractelement <16 x float> %1577, i64 1, !dbg !56
  %1995 = fcmp ogt float %1993, %1994, !dbg !56
  %1996 = fcmp uno float %1993, 0.000000e+00, !dbg !67
  %1997 = or i1 %1995, %1996, !dbg !68
  %1998 = select i1 %1997, float %1993, float %1994, !dbg !69
  %1999 = extractelement <16 x float> %1577, i64 0, !dbg !56
  %2000 = fcmp ogt float %1998, %1999, !dbg !56
  %2001 = fcmp uno float %1998, 0.000000e+00, !dbg !67
  %2002 = or i1 %2000, %2001, !dbg !68
  %2003 = select i1 %2002, float %1998, float %1999, !dbg !69
  %2004 = bitcast float %1927 to i32, !dbg !66
  %2005 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2004, i32 16, i32 31), !dbg !66
  %2006 = bitcast i32 %2005 to float, !dbg !66
  %2007 = fcmp ogt float %1927, %2006, !dbg !56
  %2008 = fcmp uno float %1927, 0.000000e+00, !dbg !67
  %2009 = or i1 %2008, %2007, !dbg !68
  %2010 = select i1 %2009, float %1927, float %2006, !dbg !69
  %2011 = bitcast float %2010 to i32, !dbg !66
  %2012 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2011, i32 8, i32 31), !dbg !66
  %2013 = bitcast i32 %2012 to float, !dbg !66
  %2014 = fcmp ogt float %2010, %2013, !dbg !56
  %2015 = fcmp uno float %2010, 0.000000e+00, !dbg !67
  %2016 = or i1 %2014, %2015, !dbg !68
  %2017 = select i1 %2016, float %2010, float %2013, !dbg !69
  %2018 = bitcast float %2017 to i32, !dbg !66
  %2019 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2018, i32 4, i32 31), !dbg !66
  %2020 = bitcast i32 %2019 to float, !dbg !66
  %2021 = fcmp ogt float %2017, %2020, !dbg !56
  %2022 = fcmp uno float %2017, 0.000000e+00, !dbg !67
  %2023 = or i1 %2021, %2022, !dbg !68
  %2024 = select i1 %2023, float %2017, float %2020, !dbg !69
  %2025 = bitcast float %2024 to i32, !dbg !66
  %2026 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2025, i32 2, i32 31), !dbg !66
  %2027 = bitcast i32 %2026 to float, !dbg !66
  %2028 = fcmp ogt float %2024, %2027, !dbg !56
  %2029 = fcmp uno float %2024, 0.000000e+00, !dbg !67
  %2030 = or i1 %2028, %2029, !dbg !68
  %2031 = select i1 %2030, float %2024, float %2027, !dbg !69
  %2032 = bitcast float %2031 to i32, !dbg !66
  %2033 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2032, i32 1, i32 31), !dbg !66
  %2034 = bitcast i32 %2033 to float, !dbg !66
  %2035 = fcmp ogt float %2031, %2034, !dbg !56
  %2036 = fcmp uno float %2031, 0.000000e+00, !dbg !67
  %2037 = or i1 %2035, %2036, !dbg !68
  %2038 = bitcast float %2003 to i32, !dbg !66
  %2039 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2038, i32 16, i32 31), !dbg !66
  %2040 = bitcast i32 %2039 to float, !dbg !66
  %2041 = fcmp ogt float %2003, %2040, !dbg !56
  %2042 = fcmp uno float %2003, 0.000000e+00, !dbg !67
  %2043 = or i1 %2042, %2041, !dbg !68
  %2044 = select i1 %2043, float %2003, float %2040, !dbg !69
  %2045 = bitcast float %2044 to i32, !dbg !66
  %2046 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2045, i32 8, i32 31), !dbg !66
  %2047 = bitcast i32 %2046 to float, !dbg !66
  %2048 = fcmp ogt float %2044, %2047, !dbg !56
  %2049 = fcmp uno float %2044, 0.000000e+00, !dbg !67
  %2050 = or i1 %2048, %2049, !dbg !68
  %2051 = select i1 %2050, float %2044, float %2047, !dbg !69
  %2052 = bitcast float %2051 to i32, !dbg !66
  %2053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2052, i32 4, i32 31), !dbg !66
  %2054 = bitcast i32 %2053 to float, !dbg !66
  %2055 = fcmp ogt float %2051, %2054, !dbg !56
  %2056 = fcmp uno float %2051, 0.000000e+00, !dbg !67
  %2057 = or i1 %2055, %2056, !dbg !68
  %2058 = select i1 %2057, float %2051, float %2054, !dbg !69
  %2059 = bitcast float %2058 to i32, !dbg !66
  %2060 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2059, i32 2, i32 31), !dbg !66
  %2061 = bitcast i32 %2060 to float, !dbg !66
  %2062 = fcmp ogt float %2058, %2061, !dbg !56
  %2063 = fcmp uno float %2058, 0.000000e+00, !dbg !67
  %2064 = or i1 %2062, %2063, !dbg !68
  %2065 = select i1 %2064, float %2058, float %2061, !dbg !69
  %2066 = bitcast float %2065 to i32, !dbg !66
  %2067 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2066, i32 1, i32 31), !dbg !66
  %2068 = bitcast i32 %2067 to float, !dbg !66
  %2069 = fcmp ogt float %2065, %2068, !dbg !56
  %2070 = fcmp uno float %2065, 0.000000e+00, !dbg !67
  %2071 = or i1 %2069, %2070, !dbg !68
  %2072 = select i1 %2037, i32 %2032, i32 %2033, !dbg !69
  %2073 = insertelement <1 x i32> poison, i32 %2072, i64 0, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1804, <1 x i32> %2073, i1 %1803) #5, !dbg !66
  %2074 = select i1 %2071, i32 %2066, i32 %2067, !dbg !69
  %2075 = insertelement <1 x i32> poison, i32 %2074, i64 0, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1808, <1 x i32> %2075, i1 %1803) #5, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !66
  %2076 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1812, i1 %1811) #5, !dbg !66
  %2077 = bitcast i32 %2076 to float, !dbg !66
  %2078 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2076, i32 8, i32 31), !dbg !66
  %2079 = bitcast i32 %2078 to float, !dbg !66
  %2080 = fcmp ogt float %2077, %2079, !dbg !56
  %2081 = fcmp uno float %2077, 0.000000e+00, !dbg !67
  %2082 = or i1 %2081, %2080, !dbg !68
  %2083 = select i1 %2082, float %2077, float %2079, !dbg !69
  %2084 = bitcast float %2083 to i32, !dbg !66
  %2085 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2084, i32 4, i32 31), !dbg !66
  %2086 = bitcast i32 %2085 to float, !dbg !66
  %2087 = fcmp ogt float %2083, %2086, !dbg !56
  %2088 = fcmp uno float %2083, 0.000000e+00, !dbg !67
  %2089 = or i1 %2087, %2088, !dbg !68
  %2090 = select i1 %2089, float %2083, float %2086, !dbg !69
  %2091 = bitcast float %2090 to i32, !dbg !66
  %2092 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2091, i32 2, i32 31), !dbg !66
  %2093 = bitcast i32 %2092 to float, !dbg !66
  %2094 = fcmp ogt float %2090, %2093, !dbg !56
  %2095 = fcmp uno float %2090, 0.000000e+00, !dbg !67
  %2096 = or i1 %2094, %2095, !dbg !68
  %2097 = select i1 %2096, float %2090, float %2093, !dbg !69
  %2098 = bitcast float %2097 to i32, !dbg !66
  %2099 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %2098, i32 1, i32 31), !dbg !66
  %2100 = bitcast i32 %2099 to float, !dbg !66
  %2101 = fcmp ogt float %2097, %2100, !dbg !56
  %2102 = fcmp uno float %2097, 0.000000e+00, !dbg !67
  %2103 = or i1 %2101, %2102, !dbg !68
  %2104 = select i1 %2103, i32 %2098, i32 %2099, !dbg !69
  %2105 = insertelement <1 x i32> poison, i32 %2104, i64 0, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1812, <1 x i32> %2105, i1 %1843) #5, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !66
  %2106 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !66
  %2107 = load float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 64), align 16, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !70
  %2108 = bitcast float %2106 to i32, !dbg !70
  %2109 = bitcast float %2107 to i32, !dbg !70
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) @global_smem, i32 %2108, i32 %2109, i1 true) #5, !dbg !70
  tail call void @llvm.nvvm.barrier0(), !dbg !70
  %2110 = load float, ptr addrspace(3) %1850, align 4, !dbg !70
  %2111 = sext i32 %14 to i64, !dbg !71
  %2112 = getelementptr bfloat, ptr addrspace(1) %2, i64 %2111, !dbg !71
  %2113 = fptrunc float %1851 to bfloat, !dbg !65
  %2114 = and i32 %11, 510, !dbg !65
  %2115 = icmp eq i32 %2114, 0, !dbg !65
  %2116 = bitcast bfloat %2113 to i16, !dbg !65
  %2117 = and i1 %2115, %16, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %2116, ptr addrspace(1) %2112, i1 %2117) #5, !dbg !65
  %2118 = getelementptr bfloat, ptr addrspace(1) %3, i64 %2111, !dbg !72
  %2119 = fptrunc float %2110 to bfloat, !dbg !70
  %2120 = bitcast bfloat %2119 to i16, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %2120, ptr addrspace(1) %2118, i1 %2117) #5, !dbg !70
  %.inv = fcmp oge float %1846, 0.000000e+00, !dbg !73
  %2121 = select i1 %.inv, float 0.000000e+00, float %1846, !dbg !73
  %.inv2 = fcmp oge float %1847, 0.000000e+00, !dbg !73
  %2122 = select i1 %.inv2, float 0.000000e+00, float %1847, !dbg !73
  %2123 = fsub float 0.000000e+00, %2121, !dbg !75
  %2124 = fsub float 0.000000e+00, %2122, !dbg !75
  %.inv3 = fcmp ole float %2106, 0.000000e+00, !dbg !76
  %2125 = select i1 %.inv3, float 0.000000e+00, float %2106, !dbg !76
  %.inv4 = fcmp ole float %2107, 0.000000e+00, !dbg !76
  %2126 = select i1 %.inv4, float 0.000000e+00, float %2107, !dbg !76
  %2127 = fcmp ogt float %2123, %2125, !dbg !78
  %2128 = fcmp ogt float %2124, %2126, !dbg !78
  %2129 = fcmp uno float %2123, 0.000000e+00, !dbg !80
  %2130 = fcmp uno float %2124, 0.000000e+00, !dbg !80
  %2131 = or i1 %2129, %2127, !dbg !81
  %2132 = or i1 %2130, %2128, !dbg !81
  %2133 = select i1 %2131, float %2123, float %2125, !dbg !82
  %2134 = select i1 %2132, float %2124, float %2126, !dbg !82
  %2135 = fmul float %2133, 0x3F80204080000000, !dbg !83
  %2136 = fmul float %2134, 0x3F80204080000000, !dbg !83
  %2137 = fcmp ogt float %2135, 0x3EE4F8B580000000, !dbg !84
  %2138 = fcmp ogt float %2136, 0x3EE4F8B580000000, !dbg !84
  %2139 = fcmp uno float %2135, 0.000000e+00, !dbg !86
  %2140 = fcmp uno float %2136, 0.000000e+00, !dbg !86
  %2141 = or i1 %2137, %2139, !dbg !87
  %2142 = or i1 %2138, %2140, !dbg !87
  %2143 = select i1 %2141, float %2135, float 0x3EE4F8B580000000, !dbg !88
  %2144 = select i1 %2142, float %2136, float 0x3EE4F8B580000000, !dbg !88
  %2145 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %2143), !dbg !89
  %2146 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %2144), !dbg !89
  %2147 = mul i32 %9, 30720, !dbg !90
  %2148 = mul i32 %13, 15360, !dbg !90
  br label %2149, !dbg !91

2149:                                             ; preds = %1578, %__nv_tanhf.exit593
  %2150 = phi i1 [ true, %1578 ], [ false, %__nv_tanhf.exit593 ]
  %indvars.iv1296 = phi i64 [ 0, %1578 ], [ 8192, %__nv_tanhf.exit593 ]
  %2151 = or disjoint i64 %indvars.iv1296, %26, !dbg !92
  %2152 = icmp samesign ult i64 %2151, 15360, !dbg !93
  %2153 = icmp samesign ult i64 %2151, 3072, !dbg !94
  %2154 = trunc nuw nsw i64 %2151 to i32, !dbg !95
  %2155 = add i32 %22, %2154, !dbg !95
  %2156 = trunc nuw nsw i64 %indvars.iv1296 to i32, !dbg !95
  %2157 = or disjoint i32 %20, %2156, !dbg !95
  %2158 = add i32 %2157, %22, !dbg !95
  %2159 = add i32 %23, %2154, !dbg !95
  %2160 = add i32 %2157, %23, !dbg !95
  %2161 = sext i32 %2155 to i64, !dbg !96
  %2162 = getelementptr bfloat, ptr addrspace(1) %0, i64 %2161, !dbg !96
  %2163 = sext i32 %2158 to i64, !dbg !96
  %2164 = getelementptr bfloat, ptr addrspace(1) %0, i64 %2163, !dbg !96
  %2165 = sext i32 %2159 to i64, !dbg !96
  %2166 = getelementptr bfloat, ptr addrspace(1) %0, i64 %2165, !dbg !96
  %2167 = sext i32 %2160 to i64, !dbg !96
  %2168 = getelementptr bfloat, ptr addrspace(1) %0, i64 %2167, !dbg !96
  %2169 = and i1 %15, %2152, !dbg !97
  %2170 = and i1 %15, %2153, !dbg !98
  %2171 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2162, i1 %2170) #5, !dbg !99
  %2172 = extractvalue { i32, i32, i32, i32 } %2171, 0, !dbg !99
  %2173 = bitcast i32 %2172 to <2 x bfloat>, !dbg !99
  %2174 = extractvalue { i32, i32, i32, i32 } %2171, 1, !dbg !99
  %2175 = bitcast i32 %2174 to <2 x bfloat>, !dbg !99
  %2176 = extractvalue { i32, i32, i32, i32 } %2171, 2, !dbg !99
  %2177 = bitcast i32 %2176 to <2 x bfloat>, !dbg !99
  %2178 = extractvalue { i32, i32, i32, i32 } %2171, 3, !dbg !99
  %2179 = bitcast i32 %2178 to <2 x bfloat>, !dbg !99
  %2180 = extractelement <2 x bfloat> %2173, i64 0, !dbg !99
  %2181 = extractelement <2 x bfloat> %2173, i64 1, !dbg !99
  %2182 = extractelement <2 x bfloat> %2175, i64 0, !dbg !99
  %2183 = extractelement <2 x bfloat> %2175, i64 1, !dbg !99
  %2184 = extractelement <2 x bfloat> %2177, i64 0, !dbg !99
  %2185 = extractelement <2 x bfloat> %2177, i64 1, !dbg !99
  %2186 = extractelement <2 x bfloat> %2179, i64 0, !dbg !99
  %2187 = extractelement <2 x bfloat> %2179, i64 1, !dbg !99
  %2188 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2164, i1 %2170) #5, !dbg !99
  %2189 = extractvalue { i32, i32, i32, i32 } %2188, 0, !dbg !99
  %2190 = bitcast i32 %2189 to <2 x bfloat>, !dbg !99
  %2191 = extractvalue { i32, i32, i32, i32 } %2188, 1, !dbg !99
  %2192 = bitcast i32 %2191 to <2 x bfloat>, !dbg !99
  %2193 = extractvalue { i32, i32, i32, i32 } %2188, 2, !dbg !99
  %2194 = bitcast i32 %2193 to <2 x bfloat>, !dbg !99
  %2195 = extractvalue { i32, i32, i32, i32 } %2188, 3, !dbg !99
  %2196 = bitcast i32 %2195 to <2 x bfloat>, !dbg !99
  %2197 = extractelement <2 x bfloat> %2190, i64 0, !dbg !99
  %2198 = extractelement <2 x bfloat> %2190, i64 1, !dbg !99
  %2199 = extractelement <2 x bfloat> %2192, i64 0, !dbg !99
  %2200 = extractelement <2 x bfloat> %2192, i64 1, !dbg !99
  %2201 = extractelement <2 x bfloat> %2194, i64 0, !dbg !99
  %2202 = extractelement <2 x bfloat> %2194, i64 1, !dbg !99
  %2203 = extractelement <2 x bfloat> %2196, i64 0, !dbg !99
  %2204 = extractelement <2 x bfloat> %2196, i64 1, !dbg !99
  %2205 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2166, i1 %2170) #5, !dbg !99
  %2206 = extractvalue { i32, i32, i32, i32 } %2205, 0, !dbg !99
  %2207 = bitcast i32 %2206 to <2 x bfloat>, !dbg !99
  %2208 = extractvalue { i32, i32, i32, i32 } %2205, 1, !dbg !99
  %2209 = bitcast i32 %2208 to <2 x bfloat>, !dbg !99
  %2210 = extractvalue { i32, i32, i32, i32 } %2205, 2, !dbg !99
  %2211 = bitcast i32 %2210 to <2 x bfloat>, !dbg !99
  %2212 = extractvalue { i32, i32, i32, i32 } %2205, 3, !dbg !99
  %2213 = bitcast i32 %2212 to <2 x bfloat>, !dbg !99
  %2214 = extractelement <2 x bfloat> %2207, i64 0, !dbg !99
  %2215 = extractelement <2 x bfloat> %2207, i64 1, !dbg !99
  %2216 = extractelement <2 x bfloat> %2209, i64 0, !dbg !99
  %2217 = extractelement <2 x bfloat> %2209, i64 1, !dbg !99
  %2218 = extractelement <2 x bfloat> %2211, i64 0, !dbg !99
  %2219 = extractelement <2 x bfloat> %2211, i64 1, !dbg !99
  %2220 = extractelement <2 x bfloat> %2213, i64 0, !dbg !99
  %2221 = extractelement <2 x bfloat> %2213, i64 1, !dbg !99
  %2222 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2168, i1 %2170) #5, !dbg !99
  %2223 = extractvalue { i32, i32, i32, i32 } %2222, 0, !dbg !99
  %2224 = bitcast i32 %2223 to <2 x bfloat>, !dbg !99
  %2225 = extractvalue { i32, i32, i32, i32 } %2222, 1, !dbg !99
  %2226 = bitcast i32 %2225 to <2 x bfloat>, !dbg !99
  %2227 = extractvalue { i32, i32, i32, i32 } %2222, 2, !dbg !99
  %2228 = bitcast i32 %2227 to <2 x bfloat>, !dbg !99
  %2229 = extractvalue { i32, i32, i32, i32 } %2222, 3, !dbg !99
  %2230 = bitcast i32 %2229 to <2 x bfloat>, !dbg !99
  %2231 = extractelement <2 x bfloat> %2224, i64 0, !dbg !99
  %2232 = extractelement <2 x bfloat> %2224, i64 1, !dbg !99
  %2233 = extractelement <2 x bfloat> %2226, i64 0, !dbg !99
  %2234 = extractelement <2 x bfloat> %2226, i64 1, !dbg !99
  %2235 = extractelement <2 x bfloat> %2228, i64 0, !dbg !99
  %2236 = extractelement <2 x bfloat> %2228, i64 1, !dbg !99
  %2237 = extractelement <2 x bfloat> %2230, i64 0, !dbg !99
  %2238 = extractelement <2 x bfloat> %2230, i64 1, !dbg !99
  %2239 = fpext bfloat %2180 to float, !dbg !100
  %2240 = fpext bfloat %2181 to float, !dbg !100
  %2241 = fpext bfloat %2182 to float, !dbg !100
  %2242 = fpext bfloat %2183 to float, !dbg !100
  %2243 = fpext bfloat %2184 to float, !dbg !100
  %2244 = fpext bfloat %2185 to float, !dbg !100
  %2245 = fpext bfloat %2186 to float, !dbg !100
  %2246 = fpext bfloat %2187 to float, !dbg !100
  %2247 = fpext bfloat %2197 to float, !dbg !100
  %2248 = fpext bfloat %2198 to float, !dbg !100
  %2249 = fpext bfloat %2199 to float, !dbg !100
  %2250 = fpext bfloat %2200 to float, !dbg !100
  %2251 = fpext bfloat %2201 to float, !dbg !100
  %2252 = fpext bfloat %2202 to float, !dbg !100
  %2253 = fpext bfloat %2203 to float, !dbg !100
  %2254 = fpext bfloat %2204 to float, !dbg !100
  %2255 = fpext bfloat %2214 to float, !dbg !100
  %2256 = fpext bfloat %2215 to float, !dbg !100
  %2257 = fpext bfloat %2216 to float, !dbg !100
  %2258 = fpext bfloat %2217 to float, !dbg !100
  %2259 = fpext bfloat %2218 to float, !dbg !100
  %2260 = fpext bfloat %2219 to float, !dbg !100
  %2261 = fpext bfloat %2220 to float, !dbg !100
  %2262 = fpext bfloat %2221 to float, !dbg !100
  %2263 = fpext bfloat %2231 to float, !dbg !100
  %2264 = fpext bfloat %2232 to float, !dbg !100
  %2265 = fpext bfloat %2233 to float, !dbg !100
  %2266 = fpext bfloat %2234 to float, !dbg !100
  %2267 = fpext bfloat %2235 to float, !dbg !100
  %2268 = fpext bfloat %2236 to float, !dbg !100
  %2269 = fpext bfloat %2237 to float, !dbg !100
  %2270 = fpext bfloat %2238 to float, !dbg !100
  %2271 = icmp samesign ugt i64 %2151, 3071, !dbg !101
  %.reass1218 = add i32 %invariant.op, %2154
  %2272 = trunc nuw nsw i64 %indvars.iv1296 to i32
  %2273 = or disjoint i32 %19, %2272
  %.reass1220 = add i32 %2273, %invariant.op
  %.reass1222 = add i32 %2157, %invariant.op
  %2274 = trunc nuw nsw i64 %indvars.iv1296 to i32
  %2275 = or disjoint i32 %21, %2274
  %.reass1224 = add i32 %2275, %invariant.op
  %.reass1226 = add i32 %invariant.op1209, %2154
  %.reass1228 = add i32 %2273, %invariant.op1209
  %.reass1230 = add i32 %2157, %invariant.op1209
  %.reass1232 = add i32 %2275, %invariant.op1209
  %2276 = sext i32 %.reass1218 to i64, !dbg !102
  %2277 = getelementptr float, ptr addrspace(1) %1, i64 %2276, !dbg !102
  %2278 = sext i32 %.reass1220 to i64, !dbg !102
  %2279 = getelementptr float, ptr addrspace(1) %1, i64 %2278, !dbg !102
  %2280 = sext i32 %.reass1222 to i64, !dbg !102
  %2281 = getelementptr float, ptr addrspace(1) %1, i64 %2280, !dbg !102
  %2282 = sext i32 %.reass1224 to i64, !dbg !102
  %2283 = getelementptr float, ptr addrspace(1) %1, i64 %2282, !dbg !102
  %2284 = sext i32 %.reass1226 to i64, !dbg !102
  %2285 = getelementptr float, ptr addrspace(1) %1, i64 %2284, !dbg !102
  %2286 = sext i32 %.reass1228 to i64, !dbg !102
  %2287 = getelementptr float, ptr addrspace(1) %1, i64 %2286, !dbg !102
  %2288 = sext i32 %.reass1230 to i64, !dbg !102
  %2289 = getelementptr float, ptr addrspace(1) %1, i64 %2288, !dbg !102
  %2290 = sext i32 %.reass1232 to i64, !dbg !102
  %2291 = getelementptr float, ptr addrspace(1) %1, i64 %2290, !dbg !102
  %2292 = and i1 %2271, %2169, !dbg !103
  %2293 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2277, i1 %2292) #5, !dbg !104
  %2294 = extractvalue { i32, i32, i32, i32 } %2293, 0, !dbg !104
  %2295 = extractvalue { i32, i32, i32, i32 } %2293, 1, !dbg !104
  %2296 = extractvalue { i32, i32, i32, i32 } %2293, 2, !dbg !104
  %2297 = extractvalue { i32, i32, i32, i32 } %2293, 3, !dbg !104
  %2298 = bitcast i32 %2294 to float, !dbg !104
  %2299 = bitcast i32 %2295 to float, !dbg !104
  %2300 = bitcast i32 %2296 to float, !dbg !104
  %2301 = bitcast i32 %2297 to float, !dbg !104
  %2302 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2279, i1 %2292) #5, !dbg !104
  %2303 = extractvalue { i32, i32, i32, i32 } %2302, 0, !dbg !104
  %2304 = extractvalue { i32, i32, i32, i32 } %2302, 1, !dbg !104
  %2305 = extractvalue { i32, i32, i32, i32 } %2302, 2, !dbg !104
  %2306 = extractvalue { i32, i32, i32, i32 } %2302, 3, !dbg !104
  %2307 = bitcast i32 %2303 to float, !dbg !104
  %2308 = bitcast i32 %2304 to float, !dbg !104
  %2309 = bitcast i32 %2305 to float, !dbg !104
  %2310 = bitcast i32 %2306 to float, !dbg !104
  %2311 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2281, i1 %2292) #5, !dbg !104
  %2312 = extractvalue { i32, i32, i32, i32 } %2311, 0, !dbg !104
  %2313 = extractvalue { i32, i32, i32, i32 } %2311, 1, !dbg !104
  %2314 = extractvalue { i32, i32, i32, i32 } %2311, 2, !dbg !104
  %2315 = extractvalue { i32, i32, i32, i32 } %2311, 3, !dbg !104
  %2316 = bitcast i32 %2312 to float, !dbg !104
  %2317 = bitcast i32 %2313 to float, !dbg !104
  %2318 = bitcast i32 %2314 to float, !dbg !104
  %2319 = bitcast i32 %2315 to float, !dbg !104
  %2320 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2283, i1 %2292) #5, !dbg !104
  %2321 = extractvalue { i32, i32, i32, i32 } %2320, 0, !dbg !104
  %2322 = extractvalue { i32, i32, i32, i32 } %2320, 1, !dbg !104
  %2323 = extractvalue { i32, i32, i32, i32 } %2320, 2, !dbg !104
  %2324 = extractvalue { i32, i32, i32, i32 } %2320, 3, !dbg !104
  %2325 = bitcast i32 %2321 to float, !dbg !104
  %2326 = bitcast i32 %2322 to float, !dbg !104
  %2327 = bitcast i32 %2323 to float, !dbg !104
  %2328 = bitcast i32 %2324 to float, !dbg !104
  %2329 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2285, i1 %2292) #5, !dbg !104
  %2330 = extractvalue { i32, i32, i32, i32 } %2329, 0, !dbg !104
  %2331 = extractvalue { i32, i32, i32, i32 } %2329, 1, !dbg !104
  %2332 = extractvalue { i32, i32, i32, i32 } %2329, 2, !dbg !104
  %2333 = extractvalue { i32, i32, i32, i32 } %2329, 3, !dbg !104
  %2334 = bitcast i32 %2330 to float, !dbg !104
  %2335 = bitcast i32 %2331 to float, !dbg !104
  %2336 = bitcast i32 %2332 to float, !dbg !104
  %2337 = bitcast i32 %2333 to float, !dbg !104
  %2338 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2287, i1 %2292) #5, !dbg !104
  %2339 = extractvalue { i32, i32, i32, i32 } %2338, 0, !dbg !104
  %2340 = extractvalue { i32, i32, i32, i32 } %2338, 1, !dbg !104
  %2341 = extractvalue { i32, i32, i32, i32 } %2338, 2, !dbg !104
  %2342 = extractvalue { i32, i32, i32, i32 } %2338, 3, !dbg !104
  %2343 = bitcast i32 %2339 to float, !dbg !104
  %2344 = bitcast i32 %2340 to float, !dbg !104
  %2345 = bitcast i32 %2341 to float, !dbg !104
  %2346 = bitcast i32 %2342 to float, !dbg !104
  %2347 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2289, i1 %2292) #5, !dbg !104
  %2348 = extractvalue { i32, i32, i32, i32 } %2347, 0, !dbg !104
  %2349 = extractvalue { i32, i32, i32, i32 } %2347, 1, !dbg !104
  %2350 = extractvalue { i32, i32, i32, i32 } %2347, 2, !dbg !104
  %2351 = extractvalue { i32, i32, i32, i32 } %2347, 3, !dbg !104
  %2352 = bitcast i32 %2348 to float, !dbg !104
  %2353 = bitcast i32 %2349 to float, !dbg !104
  %2354 = bitcast i32 %2350 to float, !dbg !104
  %2355 = bitcast i32 %2351 to float, !dbg !104
  %2356 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %2291, i1 %2292) #5, !dbg !104
  %2357 = extractvalue { i32, i32, i32, i32 } %2356, 0, !dbg !104
  %2358 = extractvalue { i32, i32, i32, i32 } %2356, 1, !dbg !104
  %2359 = extractvalue { i32, i32, i32, i32 } %2356, 2, !dbg !104
  %2360 = extractvalue { i32, i32, i32, i32 } %2356, 3, !dbg !104
  %2361 = bitcast i32 %2357 to float, !dbg !104
  %2362 = bitcast i32 %2358 to float, !dbg !104
  %2363 = bitcast i32 %2359 to float, !dbg !104
  %2364 = bitcast i32 %2360 to float, !dbg !104
  %2365 = fmul float %2298, 5.000000e-01, !dbg !105
  %2366 = fmul float %2299, 5.000000e-01, !dbg !105
  %2367 = fmul float %2300, 5.000000e-01, !dbg !105
  %2368 = fmul float %2301, 5.000000e-01, !dbg !105
  %2369 = fmul float %2307, 5.000000e-01, !dbg !105
  %2370 = fmul float %2308, 5.000000e-01, !dbg !105
  %2371 = fmul float %2309, 5.000000e-01, !dbg !105
  %2372 = fmul float %2310, 5.000000e-01, !dbg !105
  %2373 = fmul float %2316, 5.000000e-01, !dbg !105
  %2374 = fmul float %2317, 5.000000e-01, !dbg !105
  %2375 = fmul float %2318, 5.000000e-01, !dbg !105
  %2376 = fmul float %2319, 5.000000e-01, !dbg !105
  %2377 = fmul float %2325, 5.000000e-01, !dbg !105
  %2378 = fmul float %2326, 5.000000e-01, !dbg !105
  %2379 = fmul float %2327, 5.000000e-01, !dbg !105
  %2380 = fmul float %2328, 5.000000e-01, !dbg !105
  %2381 = fmul float %2334, 5.000000e-01, !dbg !105
  %2382 = fmul float %2335, 5.000000e-01, !dbg !105
  %2383 = fmul float %2336, 5.000000e-01, !dbg !105
  %2384 = fmul float %2337, 5.000000e-01, !dbg !105
  %2385 = fmul float %2343, 5.000000e-01, !dbg !105
  %2386 = fmul float %2344, 5.000000e-01, !dbg !105
  %2387 = fmul float %2345, 5.000000e-01, !dbg !105
  %2388 = fmul float %2346, 5.000000e-01, !dbg !105
  %2389 = fmul float %2352, 5.000000e-01, !dbg !105
  %2390 = fmul float %2353, 5.000000e-01, !dbg !105
  %2391 = fmul float %2354, 5.000000e-01, !dbg !105
  %2392 = fmul float %2355, 5.000000e-01, !dbg !105
  %2393 = fmul float %2361, 5.000000e-01, !dbg !105
  %2394 = fmul float %2362, 5.000000e-01, !dbg !105
  %2395 = fmul float %2363, 5.000000e-01, !dbg !105
  %2396 = fmul float %2364, 5.000000e-01, !dbg !105
  %2397 = fmul float %2298, %2298, !dbg !106
  %2398 = fmul float %2299, %2299, !dbg !106
  %2399 = fmul float %2300, %2300, !dbg !106
  %2400 = fmul float %2301, %2301, !dbg !106
  %2401 = fmul float %2307, %2307, !dbg !106
  %2402 = fmul float %2308, %2308, !dbg !106
  %2403 = fmul float %2309, %2309, !dbg !106
  %2404 = fmul float %2310, %2310, !dbg !106
  %2405 = fmul float %2316, %2316, !dbg !106
  %2406 = fmul float %2317, %2317, !dbg !106
  %2407 = fmul float %2318, %2318, !dbg !106
  %2408 = fmul float %2319, %2319, !dbg !106
  %2409 = fmul float %2325, %2325, !dbg !106
  %2410 = fmul float %2326, %2326, !dbg !106
  %2411 = fmul float %2327, %2327, !dbg !106
  %2412 = fmul float %2328, %2328, !dbg !106
  %2413 = fmul float %2334, %2334, !dbg !106
  %2414 = fmul float %2335, %2335, !dbg !106
  %2415 = fmul float %2336, %2336, !dbg !106
  %2416 = fmul float %2337, %2337, !dbg !106
  %2417 = fmul float %2343, %2343, !dbg !106
  %2418 = fmul float %2344, %2344, !dbg !106
  %2419 = fmul float %2345, %2345, !dbg !106
  %2420 = fmul float %2346, %2346, !dbg !106
  %2421 = fmul float %2352, %2352, !dbg !106
  %2422 = fmul float %2353, %2353, !dbg !106
  %2423 = fmul float %2354, %2354, !dbg !106
  %2424 = fmul float %2355, %2355, !dbg !106
  %2425 = fmul float %2361, %2361, !dbg !106
  %2426 = fmul float %2362, %2362, !dbg !106
  %2427 = fmul float %2363, %2363, !dbg !106
  %2428 = fmul float %2364, %2364, !dbg !106
  %2429 = fmul float %2397, %2298, !dbg !107
  %2430 = fmul float %2398, %2299, !dbg !107
  %2431 = fmul float %2399, %2300, !dbg !107
  %2432 = fmul float %2400, %2301, !dbg !107
  %2433 = fmul float %2401, %2307, !dbg !107
  %2434 = fmul float %2402, %2308, !dbg !107
  %2435 = fmul float %2403, %2309, !dbg !107
  %2436 = fmul float %2404, %2310, !dbg !107
  %2437 = fmul float %2405, %2316, !dbg !107
  %2438 = fmul float %2406, %2317, !dbg !107
  %2439 = fmul float %2407, %2318, !dbg !107
  %2440 = fmul float %2408, %2319, !dbg !107
  %2441 = fmul float %2409, %2325, !dbg !107
  %2442 = fmul float %2410, %2326, !dbg !107
  %2443 = fmul float %2411, %2327, !dbg !107
  %2444 = fmul float %2412, %2328, !dbg !107
  %2445 = fmul float %2413, %2334, !dbg !107
  %2446 = fmul float %2414, %2335, !dbg !107
  %2447 = fmul float %2415, %2336, !dbg !107
  %2448 = fmul float %2416, %2337, !dbg !107
  %2449 = fmul float %2417, %2343, !dbg !107
  %2450 = fmul float %2418, %2344, !dbg !107
  %2451 = fmul float %2419, %2345, !dbg !107
  %2452 = fmul float %2420, %2346, !dbg !107
  %2453 = fmul float %2421, %2352, !dbg !107
  %2454 = fmul float %2422, %2353, !dbg !107
  %2455 = fmul float %2423, %2354, !dbg !107
  %2456 = fmul float %2424, %2355, !dbg !107
  %2457 = fmul float %2425, %2361, !dbg !107
  %2458 = fmul float %2426, %2362, !dbg !107
  %2459 = fmul float %2427, %2363, !dbg !107
  %2460 = fmul float %2428, %2364, !dbg !107
  %2461 = fmul float %2429, 0x3FA6E4E260000000, !dbg !108
  %2462 = fmul float %2430, 0x3FA6E4E260000000, !dbg !108
  %2463 = fmul float %2431, 0x3FA6E4E260000000, !dbg !108
  %2464 = fmul float %2432, 0x3FA6E4E260000000, !dbg !108
  %2465 = fmul float %2433, 0x3FA6E4E260000000, !dbg !108
  %2466 = fmul float %2434, 0x3FA6E4E260000000, !dbg !108
  %2467 = fmul float %2435, 0x3FA6E4E260000000, !dbg !108
  %2468 = fmul float %2436, 0x3FA6E4E260000000, !dbg !108
  %2469 = fmul float %2437, 0x3FA6E4E260000000, !dbg !108
  %2470 = fmul float %2438, 0x3FA6E4E260000000, !dbg !108
  %2471 = fmul float %2439, 0x3FA6E4E260000000, !dbg !108
  %2472 = fmul float %2440, 0x3FA6E4E260000000, !dbg !108
  %2473 = fmul float %2441, 0x3FA6E4E260000000, !dbg !108
  %2474 = fmul float %2442, 0x3FA6E4E260000000, !dbg !108
  %2475 = fmul float %2443, 0x3FA6E4E260000000, !dbg !108
  %2476 = fmul float %2444, 0x3FA6E4E260000000, !dbg !108
  %2477 = fmul float %2445, 0x3FA6E4E260000000, !dbg !108
  %2478 = fmul float %2446, 0x3FA6E4E260000000, !dbg !108
  %2479 = fmul float %2447, 0x3FA6E4E260000000, !dbg !108
  %2480 = fmul float %2448, 0x3FA6E4E260000000, !dbg !108
  %2481 = fmul float %2449, 0x3FA6E4E260000000, !dbg !108
  %2482 = fmul float %2450, 0x3FA6E4E260000000, !dbg !108
  %2483 = fmul float %2451, 0x3FA6E4E260000000, !dbg !108
  %2484 = fmul float %2452, 0x3FA6E4E260000000, !dbg !108
  %2485 = fmul float %2453, 0x3FA6E4E260000000, !dbg !108
  %2486 = fmul float %2454, 0x3FA6E4E260000000, !dbg !108
  %2487 = fmul float %2455, 0x3FA6E4E260000000, !dbg !108
  %2488 = fmul float %2456, 0x3FA6E4E260000000, !dbg !108
  %2489 = fmul float %2457, 0x3FA6E4E260000000, !dbg !108
  %2490 = fmul float %2458, 0x3FA6E4E260000000, !dbg !108
  %2491 = fmul float %2459, 0x3FA6E4E260000000, !dbg !108
  %2492 = fmul float %2460, 0x3FA6E4E260000000, !dbg !108
  %2493 = fadd float %2461, %2298, !dbg !109
  %2494 = fadd float %2462, %2299, !dbg !109
  %2495 = fadd float %2463, %2300, !dbg !109
  %2496 = fadd float %2464, %2301, !dbg !109
  %2497 = fadd float %2465, %2307, !dbg !109
  %2498 = fadd float %2466, %2308, !dbg !109
  %2499 = fadd float %2467, %2309, !dbg !109
  %2500 = fadd float %2468, %2310, !dbg !109
  %2501 = fadd float %2469, %2316, !dbg !109
  %2502 = fadd float %2470, %2317, !dbg !109
  %2503 = fadd float %2471, %2318, !dbg !109
  %2504 = fadd float %2472, %2319, !dbg !109
  %2505 = fadd float %2473, %2325, !dbg !109
  %2506 = fadd float %2474, %2326, !dbg !109
  %2507 = fadd float %2475, %2327, !dbg !109
  %2508 = fadd float %2476, %2328, !dbg !109
  %2509 = fadd float %2477, %2334, !dbg !109
  %2510 = fadd float %2478, %2335, !dbg !109
  %2511 = fadd float %2479, %2336, !dbg !109
  %2512 = fadd float %2480, %2337, !dbg !109
  %2513 = fadd float %2481, %2343, !dbg !109
  %2514 = fadd float %2482, %2344, !dbg !109
  %2515 = fadd float %2483, %2345, !dbg !109
  %2516 = fadd float %2484, %2346, !dbg !109
  %2517 = fadd float %2485, %2352, !dbg !109
  %2518 = fadd float %2486, %2353, !dbg !109
  %2519 = fadd float %2487, %2354, !dbg !109
  %2520 = fadd float %2488, %2355, !dbg !109
  %2521 = fadd float %2489, %2361, !dbg !109
  %2522 = fadd float %2490, %2362, !dbg !109
  %2523 = fadd float %2491, %2363, !dbg !109
  %2524 = fadd float %2492, %2364, !dbg !109
  %2525 = fmul float %2493, 0x3FE9884540000000, !dbg !110
  %2526 = fmul float %2494, 0x3FE9884540000000, !dbg !110
  %2527 = fmul float %2495, 0x3FE9884540000000, !dbg !110
  %2528 = fmul float %2496, 0x3FE9884540000000, !dbg !110
  %2529 = fmul float %2497, 0x3FE9884540000000, !dbg !110
  %2530 = fmul float %2498, 0x3FE9884540000000, !dbg !110
  %2531 = fmul float %2499, 0x3FE9884540000000, !dbg !110
  %2532 = fmul float %2500, 0x3FE9884540000000, !dbg !110
  %2533 = fmul float %2501, 0x3FE9884540000000, !dbg !110
  %2534 = fmul float %2502, 0x3FE9884540000000, !dbg !110
  %2535 = fmul float %2503, 0x3FE9884540000000, !dbg !110
  %2536 = fmul float %2504, 0x3FE9884540000000, !dbg !110
  %2537 = fmul float %2505, 0x3FE9884540000000, !dbg !110
  %2538 = fmul float %2506, 0x3FE9884540000000, !dbg !110
  %2539 = fmul float %2507, 0x3FE9884540000000, !dbg !110
  %2540 = fmul float %2508, 0x3FE9884540000000, !dbg !110
  %2541 = fmul float %2509, 0x3FE9884540000000, !dbg !110
  %2542 = fmul float %2510, 0x3FE9884540000000, !dbg !110
  %2543 = fmul float %2511, 0x3FE9884540000000, !dbg !110
  %2544 = fmul float %2512, 0x3FE9884540000000, !dbg !110
  %2545 = fmul float %2513, 0x3FE9884540000000, !dbg !110
  %2546 = fmul float %2514, 0x3FE9884540000000, !dbg !110
  %2547 = fmul float %2515, 0x3FE9884540000000, !dbg !110
  %2548 = fmul float %2516, 0x3FE9884540000000, !dbg !110
  %2549 = fmul float %2517, 0x3FE9884540000000, !dbg !110
  %2550 = fmul float %2518, 0x3FE9884540000000, !dbg !110
  %2551 = fmul float %2519, 0x3FE9884540000000, !dbg !110
  %2552 = fmul float %2520, 0x3FE9884540000000, !dbg !110
  %2553 = fmul float %2521, 0x3FE9884540000000, !dbg !110
  %2554 = fmul float %2522, 0x3FE9884540000000, !dbg !110
  %2555 = fmul float %2523, 0x3FE9884540000000, !dbg !110
  %2556 = fmul float %2524, 0x3FE9884540000000, !dbg !110
  %2557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i = icmp eq i32 %2557, 0, !dbg !111
  %2558 = tail call float @llvm.nvvm.fabs.ftz.f(float %2525) #5, !dbg !111
  %2559 = tail call float @llvm.nvvm.fabs.f(float %2525) #5, !dbg !111
  %.01.i = select i1 %.not.i, float %2559, float %2558, !dbg !111
  %2560 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !111
  br i1 %2560, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !111

__internal_fmad.exit1.i:                          ; preds = %2149
  %2561 = fmul float %.01.i, 0x4007154760000000, !dbg !111
  %2562 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2561) #5, !dbg !111
  %2563 = fadd float %2562, 1.000000e+00, !dbg !111
  %2564 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2563) #6, !dbg !111, !srcloc !38
  %2565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i = icmp eq i32 %2565, 0, !dbg !111
  %2566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2567 = tail call float @llvm.nvvm.fma.rn.f(float %2564, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i = select i1 %.not6.i, float %2567, float %2566, !dbg !111
  %2568 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !111
  %s.0.i = select i1 %2568, float 1.000000e+00, float %.03.i, !dbg !111
  %2569 = bitcast float %s.0.i to i32, !dbg !111
  %2570 = bitcast float %2525 to i32, !dbg !111
  %2571 = and i32 %2570, -2147483648, !dbg !111
  %2572 = or i32 %2571, %2569, !dbg !111
  %2573 = bitcast i32 %2572 to float, !dbg !111
  br label %__nv_tanhf.exit, !dbg !111

__internal_fmad.exit3.i:                          ; preds = %2149
  %2574 = fmul float %2525, %2525, !dbg !111
  %2575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i = icmp eq i32 %2575, 0, !dbg !111
  %2576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2574, float 0xBFAAC795C0000000) #5, !dbg !111
  %2577 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2574, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i = select i1 %.not1.i, float %2577, float %2576, !dbg !111
  %2578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i = icmp eq i32 %2578, 0, !dbg !111
  %2579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %2574, float 0x3FC10B2820000000) #5, !dbg !111
  %2580 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %2574, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i = select i1 %.not2.i, float %2580, float %2579, !dbg !111
  %2581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i = icmp eq i32 %2581, 0, !dbg !111
  %2582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %2574, float 0xBFD5553DA0000000) #5, !dbg !111
  %2583 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %2574, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i = select i1 %.not3.i, float %2583, float %2582, !dbg !111
  %2584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i = icmp eq i32 %2584, 0, !dbg !111
  %2585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %2574, float 0.000000e+00) #5, !dbg !111
  %2586 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %2574, float 0.000000e+00) #5, !dbg !111
  %.04.i = select i1 %.not4.i, float %2586, float %2585, !dbg !111
  %2587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i = icmp eq i32 %2587, 0, !dbg !111
  %2588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %2525, float %2525) #5, !dbg !111
  %2589 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %2525, float %2525) #5, !dbg !111
  %.02.i = select i1 %.not5.i, float %2589, float %2588, !dbg !111
  br label %__nv_tanhf.exit, !dbg !111

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %2573, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !111
  %2590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i5 = icmp eq i32 %2590, 0, !dbg !111
  %2591 = tail call float @llvm.nvvm.fabs.ftz.f(float %2526) #5, !dbg !111
  %2592 = tail call float @llvm.nvvm.fabs.f(float %2526) #5, !dbg !111
  %.01.i6 = select i1 %.not.i5, float %2592, float %2591, !dbg !111
  %2593 = fcmp ult float %.01.i6, 0x3FE3333340000000, !dbg !111
  br i1 %2593, label %__internal_fmad.exit3.i12, label %__internal_fmad.exit1.i7, !dbg !111

__internal_fmad.exit1.i7:                         ; preds = %__nv_tanhf.exit
  %2594 = fmul float %.01.i6, 0x4007154760000000, !dbg !111
  %2595 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2594) #5, !dbg !111
  %2596 = fadd float %2595, 1.000000e+00, !dbg !111
  %2597 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2596) #6, !dbg !111, !srcloc !38
  %2598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i8 = icmp eq i32 %2598, 0, !dbg !111
  %2599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2600 = tail call float @llvm.nvvm.fma.rn.f(float %2597, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i9 = select i1 %.not6.i8, float %2600, float %2599, !dbg !111
  %2601 = fcmp oge float %.01.i6, 0x4022059680000000, !dbg !111
  %s.0.i10 = select i1 %2601, float 1.000000e+00, float %.03.i9, !dbg !111
  %2602 = bitcast float %s.0.i10 to i32, !dbg !111
  %2603 = bitcast float %2526 to i32, !dbg !111
  %2604 = and i32 %2603, -2147483648, !dbg !111
  %2605 = or i32 %2604, %2602, !dbg !111
  %2606 = bitcast i32 %2605 to float, !dbg !111
  br label %__nv_tanhf.exit23, !dbg !111

__internal_fmad.exit3.i12:                        ; preds = %__nv_tanhf.exit
  %2607 = fmul float %2526, %2526, !dbg !111
  %2608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i13 = icmp eq i32 %2608, 0, !dbg !111
  %2609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2607, float 0xBFAAC795C0000000) #5, !dbg !111
  %2610 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2607, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i14 = select i1 %.not1.i13, float %2610, float %2609, !dbg !111
  %2611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i15 = icmp eq i32 %2611, 0, !dbg !111
  %2612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i14, float %2607, float 0x3FC10B2820000000) #5, !dbg !111
  %2613 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i14, float %2607, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i16 = select i1 %.not2.i15, float %2613, float %2612, !dbg !111
  %2614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i17 = icmp eq i32 %2614, 0, !dbg !111
  %2615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i16, float %2607, float 0xBFD5553DA0000000) #5, !dbg !111
  %2616 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i16, float %2607, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i18 = select i1 %.not3.i17, float %2616, float %2615, !dbg !111
  %2617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i19 = icmp eq i32 %2617, 0, !dbg !111
  %2618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %2607, float 0.000000e+00) #5, !dbg !111
  %2619 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %2607, float 0.000000e+00) #5, !dbg !111
  %.04.i20 = select i1 %.not4.i19, float %2619, float %2618, !dbg !111
  %2620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i21 = icmp eq i32 %2620, 0, !dbg !111
  %2621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i20, float %2526, float %2526) #5, !dbg !111
  %2622 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i20, float %2526, float %2526) #5, !dbg !111
  %.02.i22 = select i1 %.not5.i21, float %2622, float %2621, !dbg !111
  br label %__nv_tanhf.exit23, !dbg !111

__nv_tanhf.exit23:                                ; preds = %__internal_fmad.exit1.i7, %__internal_fmad.exit3.i12
  %s.1.i11 = phi float [ %2606, %__internal_fmad.exit1.i7 ], [ %.02.i22, %__internal_fmad.exit3.i12 ], !dbg !111
  %2623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i24 = icmp eq i32 %2623, 0, !dbg !111
  %2624 = tail call float @llvm.nvvm.fabs.ftz.f(float %2527) #5, !dbg !111
  %2625 = tail call float @llvm.nvvm.fabs.f(float %2527) #5, !dbg !111
  %.01.i25 = select i1 %.not.i24, float %2625, float %2624, !dbg !111
  %2626 = fcmp ult float %.01.i25, 0x3FE3333340000000, !dbg !111
  br i1 %2626, label %__internal_fmad.exit3.i31, label %__internal_fmad.exit1.i26, !dbg !111

__internal_fmad.exit1.i26:                        ; preds = %__nv_tanhf.exit23
  %2627 = fmul float %.01.i25, 0x4007154760000000, !dbg !111
  %2628 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2627) #5, !dbg !111
  %2629 = fadd float %2628, 1.000000e+00, !dbg !111
  %2630 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2629) #6, !dbg !111, !srcloc !38
  %2631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i27 = icmp eq i32 %2631, 0, !dbg !111
  %2632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2633 = tail call float @llvm.nvvm.fma.rn.f(float %2630, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i28 = select i1 %.not6.i27, float %2633, float %2632, !dbg !111
  %2634 = fcmp oge float %.01.i25, 0x4022059680000000, !dbg !111
  %s.0.i29 = select i1 %2634, float 1.000000e+00, float %.03.i28, !dbg !111
  %2635 = bitcast float %s.0.i29 to i32, !dbg !111
  %2636 = bitcast float %2527 to i32, !dbg !111
  %2637 = and i32 %2636, -2147483648, !dbg !111
  %2638 = or i32 %2637, %2635, !dbg !111
  %2639 = bitcast i32 %2638 to float, !dbg !111
  br label %__nv_tanhf.exit42, !dbg !111

__internal_fmad.exit3.i31:                        ; preds = %__nv_tanhf.exit23
  %2640 = fmul float %2527, %2527, !dbg !111
  %2641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i32 = icmp eq i32 %2641, 0, !dbg !111
  %2642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2640, float 0xBFAAC795C0000000) #5, !dbg !111
  %2643 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2640, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i33 = select i1 %.not1.i32, float %2643, float %2642, !dbg !111
  %2644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i34 = icmp eq i32 %2644, 0, !dbg !111
  %2645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i33, float %2640, float 0x3FC10B2820000000) #5, !dbg !111
  %2646 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i33, float %2640, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i35 = select i1 %.not2.i34, float %2646, float %2645, !dbg !111
  %2647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i36 = icmp eq i32 %2647, 0, !dbg !111
  %2648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i35, float %2640, float 0xBFD5553DA0000000) #5, !dbg !111
  %2649 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i35, float %2640, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i37 = select i1 %.not3.i36, float %2649, float %2648, !dbg !111
  %2650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i38 = icmp eq i32 %2650, 0, !dbg !111
  %2651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i37, float %2640, float 0.000000e+00) #5, !dbg !111
  %2652 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i37, float %2640, float 0.000000e+00) #5, !dbg !111
  %.04.i39 = select i1 %.not4.i38, float %2652, float %2651, !dbg !111
  %2653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i40 = icmp eq i32 %2653, 0, !dbg !111
  %2654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i39, float %2527, float %2527) #5, !dbg !111
  %2655 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i39, float %2527, float %2527) #5, !dbg !111
  %.02.i41 = select i1 %.not5.i40, float %2655, float %2654, !dbg !111
  br label %__nv_tanhf.exit42, !dbg !111

__nv_tanhf.exit42:                                ; preds = %__internal_fmad.exit1.i26, %__internal_fmad.exit3.i31
  %s.1.i30 = phi float [ %2639, %__internal_fmad.exit1.i26 ], [ %.02.i41, %__internal_fmad.exit3.i31 ], !dbg !111
  %2656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i43 = icmp eq i32 %2656, 0, !dbg !111
  %2657 = tail call float @llvm.nvvm.fabs.ftz.f(float %2528) #5, !dbg !111
  %2658 = tail call float @llvm.nvvm.fabs.f(float %2528) #5, !dbg !111
  %.01.i44 = select i1 %.not.i43, float %2658, float %2657, !dbg !111
  %2659 = fcmp ult float %.01.i44, 0x3FE3333340000000, !dbg !111
  br i1 %2659, label %__internal_fmad.exit3.i50, label %__internal_fmad.exit1.i45, !dbg !111

__internal_fmad.exit1.i45:                        ; preds = %__nv_tanhf.exit42
  %2660 = fmul float %.01.i44, 0x4007154760000000, !dbg !111
  %2661 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2660) #5, !dbg !111
  %2662 = fadd float %2661, 1.000000e+00, !dbg !111
  %2663 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2662) #6, !dbg !111, !srcloc !38
  %2664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i46 = icmp eq i32 %2664, 0, !dbg !111
  %2665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2666 = tail call float @llvm.nvvm.fma.rn.f(float %2663, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i47 = select i1 %.not6.i46, float %2666, float %2665, !dbg !111
  %2667 = fcmp oge float %.01.i44, 0x4022059680000000, !dbg !111
  %s.0.i48 = select i1 %2667, float 1.000000e+00, float %.03.i47, !dbg !111
  %2668 = bitcast float %s.0.i48 to i32, !dbg !111
  %2669 = bitcast float %2528 to i32, !dbg !111
  %2670 = and i32 %2669, -2147483648, !dbg !111
  %2671 = or i32 %2670, %2668, !dbg !111
  %2672 = bitcast i32 %2671 to float, !dbg !111
  br label %__nv_tanhf.exit61, !dbg !111

__internal_fmad.exit3.i50:                        ; preds = %__nv_tanhf.exit42
  %2673 = fmul float %2528, %2528, !dbg !111
  %2674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i51 = icmp eq i32 %2674, 0, !dbg !111
  %2675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2673, float 0xBFAAC795C0000000) #5, !dbg !111
  %2676 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2673, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i52 = select i1 %.not1.i51, float %2676, float %2675, !dbg !111
  %2677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i53 = icmp eq i32 %2677, 0, !dbg !111
  %2678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i52, float %2673, float 0x3FC10B2820000000) #5, !dbg !111
  %2679 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i52, float %2673, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i54 = select i1 %.not2.i53, float %2679, float %2678, !dbg !111
  %2680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i55 = icmp eq i32 %2680, 0, !dbg !111
  %2681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i54, float %2673, float 0xBFD5553DA0000000) #5, !dbg !111
  %2682 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i54, float %2673, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i56 = select i1 %.not3.i55, float %2682, float %2681, !dbg !111
  %2683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i57 = icmp eq i32 %2683, 0, !dbg !111
  %2684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i56, float %2673, float 0.000000e+00) #5, !dbg !111
  %2685 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i56, float %2673, float 0.000000e+00) #5, !dbg !111
  %.04.i58 = select i1 %.not4.i57, float %2685, float %2684, !dbg !111
  %2686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i59 = icmp eq i32 %2686, 0, !dbg !111
  %2687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i58, float %2528, float %2528) #5, !dbg !111
  %2688 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i58, float %2528, float %2528) #5, !dbg !111
  %.02.i60 = select i1 %.not5.i59, float %2688, float %2687, !dbg !111
  br label %__nv_tanhf.exit61, !dbg !111

__nv_tanhf.exit61:                                ; preds = %__internal_fmad.exit1.i45, %__internal_fmad.exit3.i50
  %s.1.i49 = phi float [ %2672, %__internal_fmad.exit1.i45 ], [ %.02.i60, %__internal_fmad.exit3.i50 ], !dbg !111
  %2689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i62 = icmp eq i32 %2689, 0, !dbg !111
  %2690 = tail call float @llvm.nvvm.fabs.ftz.f(float %2529) #5, !dbg !111
  %2691 = tail call float @llvm.nvvm.fabs.f(float %2529) #5, !dbg !111
  %.01.i63 = select i1 %.not.i62, float %2691, float %2690, !dbg !111
  %2692 = fcmp ult float %.01.i63, 0x3FE3333340000000, !dbg !111
  br i1 %2692, label %__internal_fmad.exit3.i69, label %__internal_fmad.exit1.i64, !dbg !111

__internal_fmad.exit1.i64:                        ; preds = %__nv_tanhf.exit61
  %2693 = fmul float %.01.i63, 0x4007154760000000, !dbg !111
  %2694 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2693) #5, !dbg !111
  %2695 = fadd float %2694, 1.000000e+00, !dbg !111
  %2696 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2695) #6, !dbg !111, !srcloc !38
  %2697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i65 = icmp eq i32 %2697, 0, !dbg !111
  %2698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2699 = tail call float @llvm.nvvm.fma.rn.f(float %2696, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i66 = select i1 %.not6.i65, float %2699, float %2698, !dbg !111
  %2700 = fcmp oge float %.01.i63, 0x4022059680000000, !dbg !111
  %s.0.i67 = select i1 %2700, float 1.000000e+00, float %.03.i66, !dbg !111
  %2701 = bitcast float %s.0.i67 to i32, !dbg !111
  %2702 = bitcast float %2529 to i32, !dbg !111
  %2703 = and i32 %2702, -2147483648, !dbg !111
  %2704 = or i32 %2703, %2701, !dbg !111
  %2705 = bitcast i32 %2704 to float, !dbg !111
  br label %__nv_tanhf.exit80, !dbg !111

__internal_fmad.exit3.i69:                        ; preds = %__nv_tanhf.exit61
  %2706 = fmul float %2529, %2529, !dbg !111
  %2707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i70 = icmp eq i32 %2707, 0, !dbg !111
  %2708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2706, float 0xBFAAC795C0000000) #5, !dbg !111
  %2709 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2706, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i71 = select i1 %.not1.i70, float %2709, float %2708, !dbg !111
  %2710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i72 = icmp eq i32 %2710, 0, !dbg !111
  %2711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i71, float %2706, float 0x3FC10B2820000000) #5, !dbg !111
  %2712 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i71, float %2706, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i73 = select i1 %.not2.i72, float %2712, float %2711, !dbg !111
  %2713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i74 = icmp eq i32 %2713, 0, !dbg !111
  %2714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i73, float %2706, float 0xBFD5553DA0000000) #5, !dbg !111
  %2715 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i73, float %2706, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i75 = select i1 %.not3.i74, float %2715, float %2714, !dbg !111
  %2716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i76 = icmp eq i32 %2716, 0, !dbg !111
  %2717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i75, float %2706, float 0.000000e+00) #5, !dbg !111
  %2718 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i75, float %2706, float 0.000000e+00) #5, !dbg !111
  %.04.i77 = select i1 %.not4.i76, float %2718, float %2717, !dbg !111
  %2719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i78 = icmp eq i32 %2719, 0, !dbg !111
  %2720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i77, float %2529, float %2529) #5, !dbg !111
  %2721 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i77, float %2529, float %2529) #5, !dbg !111
  %.02.i79 = select i1 %.not5.i78, float %2721, float %2720, !dbg !111
  br label %__nv_tanhf.exit80, !dbg !111

__nv_tanhf.exit80:                                ; preds = %__internal_fmad.exit1.i64, %__internal_fmad.exit3.i69
  %s.1.i68 = phi float [ %2705, %__internal_fmad.exit1.i64 ], [ %.02.i79, %__internal_fmad.exit3.i69 ], !dbg !111
  %2722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i81 = icmp eq i32 %2722, 0, !dbg !111
  %2723 = tail call float @llvm.nvvm.fabs.ftz.f(float %2530) #5, !dbg !111
  %2724 = tail call float @llvm.nvvm.fabs.f(float %2530) #5, !dbg !111
  %.01.i82 = select i1 %.not.i81, float %2724, float %2723, !dbg !111
  %2725 = fcmp ult float %.01.i82, 0x3FE3333340000000, !dbg !111
  br i1 %2725, label %__internal_fmad.exit3.i88, label %__internal_fmad.exit1.i83, !dbg !111

__internal_fmad.exit1.i83:                        ; preds = %__nv_tanhf.exit80
  %2726 = fmul float %.01.i82, 0x4007154760000000, !dbg !111
  %2727 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2726) #5, !dbg !111
  %2728 = fadd float %2727, 1.000000e+00, !dbg !111
  %2729 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2728) #6, !dbg !111, !srcloc !38
  %2730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i84 = icmp eq i32 %2730, 0, !dbg !111
  %2731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2732 = tail call float @llvm.nvvm.fma.rn.f(float %2729, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i85 = select i1 %.not6.i84, float %2732, float %2731, !dbg !111
  %2733 = fcmp oge float %.01.i82, 0x4022059680000000, !dbg !111
  %s.0.i86 = select i1 %2733, float 1.000000e+00, float %.03.i85, !dbg !111
  %2734 = bitcast float %s.0.i86 to i32, !dbg !111
  %2735 = bitcast float %2530 to i32, !dbg !111
  %2736 = and i32 %2735, -2147483648, !dbg !111
  %2737 = or i32 %2736, %2734, !dbg !111
  %2738 = bitcast i32 %2737 to float, !dbg !111
  br label %__nv_tanhf.exit99, !dbg !111

__internal_fmad.exit3.i88:                        ; preds = %__nv_tanhf.exit80
  %2739 = fmul float %2530, %2530, !dbg !111
  %2740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i89 = icmp eq i32 %2740, 0, !dbg !111
  %2741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2739, float 0xBFAAC795C0000000) #5, !dbg !111
  %2742 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2739, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i90 = select i1 %.not1.i89, float %2742, float %2741, !dbg !111
  %2743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i91 = icmp eq i32 %2743, 0, !dbg !111
  %2744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i90, float %2739, float 0x3FC10B2820000000) #5, !dbg !111
  %2745 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i90, float %2739, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i92 = select i1 %.not2.i91, float %2745, float %2744, !dbg !111
  %2746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i93 = icmp eq i32 %2746, 0, !dbg !111
  %2747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i92, float %2739, float 0xBFD5553DA0000000) #5, !dbg !111
  %2748 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i92, float %2739, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i94 = select i1 %.not3.i93, float %2748, float %2747, !dbg !111
  %2749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i95 = icmp eq i32 %2749, 0, !dbg !111
  %2750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i94, float %2739, float 0.000000e+00) #5, !dbg !111
  %2751 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i94, float %2739, float 0.000000e+00) #5, !dbg !111
  %.04.i96 = select i1 %.not4.i95, float %2751, float %2750, !dbg !111
  %2752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i97 = icmp eq i32 %2752, 0, !dbg !111
  %2753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i96, float %2530, float %2530) #5, !dbg !111
  %2754 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i96, float %2530, float %2530) #5, !dbg !111
  %.02.i98 = select i1 %.not5.i97, float %2754, float %2753, !dbg !111
  br label %__nv_tanhf.exit99, !dbg !111

__nv_tanhf.exit99:                                ; preds = %__internal_fmad.exit1.i83, %__internal_fmad.exit3.i88
  %s.1.i87 = phi float [ %2738, %__internal_fmad.exit1.i83 ], [ %.02.i98, %__internal_fmad.exit3.i88 ], !dbg !111
  %2755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i100 = icmp eq i32 %2755, 0, !dbg !111
  %2756 = tail call float @llvm.nvvm.fabs.ftz.f(float %2531) #5, !dbg !111
  %2757 = tail call float @llvm.nvvm.fabs.f(float %2531) #5, !dbg !111
  %.01.i101 = select i1 %.not.i100, float %2757, float %2756, !dbg !111
  %2758 = fcmp ult float %.01.i101, 0x3FE3333340000000, !dbg !111
  br i1 %2758, label %__internal_fmad.exit3.i107, label %__internal_fmad.exit1.i102, !dbg !111

__internal_fmad.exit1.i102:                       ; preds = %__nv_tanhf.exit99
  %2759 = fmul float %.01.i101, 0x4007154760000000, !dbg !111
  %2760 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2759) #5, !dbg !111
  %2761 = fadd float %2760, 1.000000e+00, !dbg !111
  %2762 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2761) #6, !dbg !111, !srcloc !38
  %2763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i103 = icmp eq i32 %2763, 0, !dbg !111
  %2764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2765 = tail call float @llvm.nvvm.fma.rn.f(float %2762, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i104 = select i1 %.not6.i103, float %2765, float %2764, !dbg !111
  %2766 = fcmp oge float %.01.i101, 0x4022059680000000, !dbg !111
  %s.0.i105 = select i1 %2766, float 1.000000e+00, float %.03.i104, !dbg !111
  %2767 = bitcast float %s.0.i105 to i32, !dbg !111
  %2768 = bitcast float %2531 to i32, !dbg !111
  %2769 = and i32 %2768, -2147483648, !dbg !111
  %2770 = or i32 %2769, %2767, !dbg !111
  %2771 = bitcast i32 %2770 to float, !dbg !111
  br label %__nv_tanhf.exit118, !dbg !111

__internal_fmad.exit3.i107:                       ; preds = %__nv_tanhf.exit99
  %2772 = fmul float %2531, %2531, !dbg !111
  %2773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i108 = icmp eq i32 %2773, 0, !dbg !111
  %2774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2772, float 0xBFAAC795C0000000) #5, !dbg !111
  %2775 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2772, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i109 = select i1 %.not1.i108, float %2775, float %2774, !dbg !111
  %2776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i110 = icmp eq i32 %2776, 0, !dbg !111
  %2777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i109, float %2772, float 0x3FC10B2820000000) #5, !dbg !111
  %2778 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i109, float %2772, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i111 = select i1 %.not2.i110, float %2778, float %2777, !dbg !111
  %2779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i112 = icmp eq i32 %2779, 0, !dbg !111
  %2780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i111, float %2772, float 0xBFD5553DA0000000) #5, !dbg !111
  %2781 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i111, float %2772, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i113 = select i1 %.not3.i112, float %2781, float %2780, !dbg !111
  %2782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i114 = icmp eq i32 %2782, 0, !dbg !111
  %2783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i113, float %2772, float 0.000000e+00) #5, !dbg !111
  %2784 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i113, float %2772, float 0.000000e+00) #5, !dbg !111
  %.04.i115 = select i1 %.not4.i114, float %2784, float %2783, !dbg !111
  %2785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i116 = icmp eq i32 %2785, 0, !dbg !111
  %2786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i115, float %2531, float %2531) #5, !dbg !111
  %2787 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i115, float %2531, float %2531) #5, !dbg !111
  %.02.i117 = select i1 %.not5.i116, float %2787, float %2786, !dbg !111
  br label %__nv_tanhf.exit118, !dbg !111

__nv_tanhf.exit118:                               ; preds = %__internal_fmad.exit1.i102, %__internal_fmad.exit3.i107
  %s.1.i106 = phi float [ %2771, %__internal_fmad.exit1.i102 ], [ %.02.i117, %__internal_fmad.exit3.i107 ], !dbg !111
  %2788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i119 = icmp eq i32 %2788, 0, !dbg !111
  %2789 = tail call float @llvm.nvvm.fabs.ftz.f(float %2532) #5, !dbg !111
  %2790 = tail call float @llvm.nvvm.fabs.f(float %2532) #5, !dbg !111
  %.01.i120 = select i1 %.not.i119, float %2790, float %2789, !dbg !111
  %2791 = fcmp ult float %.01.i120, 0x3FE3333340000000, !dbg !111
  br i1 %2791, label %__internal_fmad.exit3.i126, label %__internal_fmad.exit1.i121, !dbg !111

__internal_fmad.exit1.i121:                       ; preds = %__nv_tanhf.exit118
  %2792 = fmul float %.01.i120, 0x4007154760000000, !dbg !111
  %2793 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2792) #5, !dbg !111
  %2794 = fadd float %2793, 1.000000e+00, !dbg !111
  %2795 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2794) #6, !dbg !111, !srcloc !38
  %2796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i122 = icmp eq i32 %2796, 0, !dbg !111
  %2797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2798 = tail call float @llvm.nvvm.fma.rn.f(float %2795, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i123 = select i1 %.not6.i122, float %2798, float %2797, !dbg !111
  %2799 = fcmp oge float %.01.i120, 0x4022059680000000, !dbg !111
  %s.0.i124 = select i1 %2799, float 1.000000e+00, float %.03.i123, !dbg !111
  %2800 = bitcast float %s.0.i124 to i32, !dbg !111
  %2801 = bitcast float %2532 to i32, !dbg !111
  %2802 = and i32 %2801, -2147483648, !dbg !111
  %2803 = or i32 %2802, %2800, !dbg !111
  %2804 = bitcast i32 %2803 to float, !dbg !111
  br label %__nv_tanhf.exit137, !dbg !111

__internal_fmad.exit3.i126:                       ; preds = %__nv_tanhf.exit118
  %2805 = fmul float %2532, %2532, !dbg !111
  %2806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i127 = icmp eq i32 %2806, 0, !dbg !111
  %2807 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2805, float 0xBFAAC795C0000000) #5, !dbg !111
  %2808 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2805, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i128 = select i1 %.not1.i127, float %2808, float %2807, !dbg !111
  %2809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i129 = icmp eq i32 %2809, 0, !dbg !111
  %2810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i128, float %2805, float 0x3FC10B2820000000) #5, !dbg !111
  %2811 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i128, float %2805, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i130 = select i1 %.not2.i129, float %2811, float %2810, !dbg !111
  %2812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i131 = icmp eq i32 %2812, 0, !dbg !111
  %2813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i130, float %2805, float 0xBFD5553DA0000000) #5, !dbg !111
  %2814 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i130, float %2805, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i132 = select i1 %.not3.i131, float %2814, float %2813, !dbg !111
  %2815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i133 = icmp eq i32 %2815, 0, !dbg !111
  %2816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i132, float %2805, float 0.000000e+00) #5, !dbg !111
  %2817 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i132, float %2805, float 0.000000e+00) #5, !dbg !111
  %.04.i134 = select i1 %.not4.i133, float %2817, float %2816, !dbg !111
  %2818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i135 = icmp eq i32 %2818, 0, !dbg !111
  %2819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i134, float %2532, float %2532) #5, !dbg !111
  %2820 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i134, float %2532, float %2532) #5, !dbg !111
  %.02.i136 = select i1 %.not5.i135, float %2820, float %2819, !dbg !111
  br label %__nv_tanhf.exit137, !dbg !111

__nv_tanhf.exit137:                               ; preds = %__internal_fmad.exit1.i121, %__internal_fmad.exit3.i126
  %s.1.i125 = phi float [ %2804, %__internal_fmad.exit1.i121 ], [ %.02.i136, %__internal_fmad.exit3.i126 ], !dbg !111
  %2821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i138 = icmp eq i32 %2821, 0, !dbg !111
  %2822 = tail call float @llvm.nvvm.fabs.ftz.f(float %2533) #5, !dbg !111
  %2823 = tail call float @llvm.nvvm.fabs.f(float %2533) #5, !dbg !111
  %.01.i139 = select i1 %.not.i138, float %2823, float %2822, !dbg !111
  %2824 = fcmp ult float %.01.i139, 0x3FE3333340000000, !dbg !111
  br i1 %2824, label %__internal_fmad.exit3.i145, label %__internal_fmad.exit1.i140, !dbg !111

__internal_fmad.exit1.i140:                       ; preds = %__nv_tanhf.exit137
  %2825 = fmul float %.01.i139, 0x4007154760000000, !dbg !111
  %2826 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2825) #5, !dbg !111
  %2827 = fadd float %2826, 1.000000e+00, !dbg !111
  %2828 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2827) #6, !dbg !111, !srcloc !38
  %2829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i141 = icmp eq i32 %2829, 0, !dbg !111
  %2830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2831 = tail call float @llvm.nvvm.fma.rn.f(float %2828, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i142 = select i1 %.not6.i141, float %2831, float %2830, !dbg !111
  %2832 = fcmp oge float %.01.i139, 0x4022059680000000, !dbg !111
  %s.0.i143 = select i1 %2832, float 1.000000e+00, float %.03.i142, !dbg !111
  %2833 = bitcast float %s.0.i143 to i32, !dbg !111
  %2834 = bitcast float %2533 to i32, !dbg !111
  %2835 = and i32 %2834, -2147483648, !dbg !111
  %2836 = or i32 %2835, %2833, !dbg !111
  %2837 = bitcast i32 %2836 to float, !dbg !111
  br label %__nv_tanhf.exit156, !dbg !111

__internal_fmad.exit3.i145:                       ; preds = %__nv_tanhf.exit137
  %2838 = fmul float %2533, %2533, !dbg !111
  %2839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i146 = icmp eq i32 %2839, 0, !dbg !111
  %2840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2838, float 0xBFAAC795C0000000) #5, !dbg !111
  %2841 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2838, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i147 = select i1 %.not1.i146, float %2841, float %2840, !dbg !111
  %2842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i148 = icmp eq i32 %2842, 0, !dbg !111
  %2843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i147, float %2838, float 0x3FC10B2820000000) #5, !dbg !111
  %2844 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i147, float %2838, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i149 = select i1 %.not2.i148, float %2844, float %2843, !dbg !111
  %2845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i150 = icmp eq i32 %2845, 0, !dbg !111
  %2846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i149, float %2838, float 0xBFD5553DA0000000) #5, !dbg !111
  %2847 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i149, float %2838, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i151 = select i1 %.not3.i150, float %2847, float %2846, !dbg !111
  %2848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i152 = icmp eq i32 %2848, 0, !dbg !111
  %2849 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i151, float %2838, float 0.000000e+00) #5, !dbg !111
  %2850 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i151, float %2838, float 0.000000e+00) #5, !dbg !111
  %.04.i153 = select i1 %.not4.i152, float %2850, float %2849, !dbg !111
  %2851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i154 = icmp eq i32 %2851, 0, !dbg !111
  %2852 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i153, float %2533, float %2533) #5, !dbg !111
  %2853 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i153, float %2533, float %2533) #5, !dbg !111
  %.02.i155 = select i1 %.not5.i154, float %2853, float %2852, !dbg !111
  br label %__nv_tanhf.exit156, !dbg !111

__nv_tanhf.exit156:                               ; preds = %__internal_fmad.exit1.i140, %__internal_fmad.exit3.i145
  %s.1.i144 = phi float [ %2837, %__internal_fmad.exit1.i140 ], [ %.02.i155, %__internal_fmad.exit3.i145 ], !dbg !111
  %2854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i157 = icmp eq i32 %2854, 0, !dbg !111
  %2855 = tail call float @llvm.nvvm.fabs.ftz.f(float %2534) #5, !dbg !111
  %2856 = tail call float @llvm.nvvm.fabs.f(float %2534) #5, !dbg !111
  %.01.i158 = select i1 %.not.i157, float %2856, float %2855, !dbg !111
  %2857 = fcmp ult float %.01.i158, 0x3FE3333340000000, !dbg !111
  br i1 %2857, label %__internal_fmad.exit3.i164, label %__internal_fmad.exit1.i159, !dbg !111

__internal_fmad.exit1.i159:                       ; preds = %__nv_tanhf.exit156
  %2858 = fmul float %.01.i158, 0x4007154760000000, !dbg !111
  %2859 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2858) #5, !dbg !111
  %2860 = fadd float %2859, 1.000000e+00, !dbg !111
  %2861 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2860) #6, !dbg !111, !srcloc !38
  %2862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i160 = icmp eq i32 %2862, 0, !dbg !111
  %2863 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2864 = tail call float @llvm.nvvm.fma.rn.f(float %2861, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i161 = select i1 %.not6.i160, float %2864, float %2863, !dbg !111
  %2865 = fcmp oge float %.01.i158, 0x4022059680000000, !dbg !111
  %s.0.i162 = select i1 %2865, float 1.000000e+00, float %.03.i161, !dbg !111
  %2866 = bitcast float %s.0.i162 to i32, !dbg !111
  %2867 = bitcast float %2534 to i32, !dbg !111
  %2868 = and i32 %2867, -2147483648, !dbg !111
  %2869 = or i32 %2868, %2866, !dbg !111
  %2870 = bitcast i32 %2869 to float, !dbg !111
  br label %__nv_tanhf.exit175, !dbg !111

__internal_fmad.exit3.i164:                       ; preds = %__nv_tanhf.exit156
  %2871 = fmul float %2534, %2534, !dbg !111
  %2872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i165 = icmp eq i32 %2872, 0, !dbg !111
  %2873 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2871, float 0xBFAAC795C0000000) #5, !dbg !111
  %2874 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2871, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i166 = select i1 %.not1.i165, float %2874, float %2873, !dbg !111
  %2875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i167 = icmp eq i32 %2875, 0, !dbg !111
  %2876 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i166, float %2871, float 0x3FC10B2820000000) #5, !dbg !111
  %2877 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i166, float %2871, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i168 = select i1 %.not2.i167, float %2877, float %2876, !dbg !111
  %2878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i169 = icmp eq i32 %2878, 0, !dbg !111
  %2879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i168, float %2871, float 0xBFD5553DA0000000) #5, !dbg !111
  %2880 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i168, float %2871, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i170 = select i1 %.not3.i169, float %2880, float %2879, !dbg !111
  %2881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i171 = icmp eq i32 %2881, 0, !dbg !111
  %2882 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i170, float %2871, float 0.000000e+00) #5, !dbg !111
  %2883 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i170, float %2871, float 0.000000e+00) #5, !dbg !111
  %.04.i172 = select i1 %.not4.i171, float %2883, float %2882, !dbg !111
  %2884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i173 = icmp eq i32 %2884, 0, !dbg !111
  %2885 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i172, float %2534, float %2534) #5, !dbg !111
  %2886 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i172, float %2534, float %2534) #5, !dbg !111
  %.02.i174 = select i1 %.not5.i173, float %2886, float %2885, !dbg !111
  br label %__nv_tanhf.exit175, !dbg !111

__nv_tanhf.exit175:                               ; preds = %__internal_fmad.exit1.i159, %__internal_fmad.exit3.i164
  %s.1.i163 = phi float [ %2870, %__internal_fmad.exit1.i159 ], [ %.02.i174, %__internal_fmad.exit3.i164 ], !dbg !111
  %2887 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i176 = icmp eq i32 %2887, 0, !dbg !111
  %2888 = tail call float @llvm.nvvm.fabs.ftz.f(float %2535) #5, !dbg !111
  %2889 = tail call float @llvm.nvvm.fabs.f(float %2535) #5, !dbg !111
  %.01.i177 = select i1 %.not.i176, float %2889, float %2888, !dbg !111
  %2890 = fcmp ult float %.01.i177, 0x3FE3333340000000, !dbg !111
  br i1 %2890, label %__internal_fmad.exit3.i183, label %__internal_fmad.exit1.i178, !dbg !111

__internal_fmad.exit1.i178:                       ; preds = %__nv_tanhf.exit175
  %2891 = fmul float %.01.i177, 0x4007154760000000, !dbg !111
  %2892 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2891) #5, !dbg !111
  %2893 = fadd float %2892, 1.000000e+00, !dbg !111
  %2894 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2893) #6, !dbg !111, !srcloc !38
  %2895 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i179 = icmp eq i32 %2895, 0, !dbg !111
  %2896 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2894, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2897 = tail call float @llvm.nvvm.fma.rn.f(float %2894, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i180 = select i1 %.not6.i179, float %2897, float %2896, !dbg !111
  %2898 = fcmp oge float %.01.i177, 0x4022059680000000, !dbg !111
  %s.0.i181 = select i1 %2898, float 1.000000e+00, float %.03.i180, !dbg !111
  %2899 = bitcast float %s.0.i181 to i32, !dbg !111
  %2900 = bitcast float %2535 to i32, !dbg !111
  %2901 = and i32 %2900, -2147483648, !dbg !111
  %2902 = or i32 %2901, %2899, !dbg !111
  %2903 = bitcast i32 %2902 to float, !dbg !111
  br label %__nv_tanhf.exit194, !dbg !111

__internal_fmad.exit3.i183:                       ; preds = %__nv_tanhf.exit175
  %2904 = fmul float %2535, %2535, !dbg !111
  %2905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i184 = icmp eq i32 %2905, 0, !dbg !111
  %2906 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2904, float 0xBFAAC795C0000000) #5, !dbg !111
  %2907 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2904, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i185 = select i1 %.not1.i184, float %2907, float %2906, !dbg !111
  %2908 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i186 = icmp eq i32 %2908, 0, !dbg !111
  %2909 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i185, float %2904, float 0x3FC10B2820000000) #5, !dbg !111
  %2910 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i185, float %2904, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i187 = select i1 %.not2.i186, float %2910, float %2909, !dbg !111
  %2911 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i188 = icmp eq i32 %2911, 0, !dbg !111
  %2912 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i187, float %2904, float 0xBFD5553DA0000000) #5, !dbg !111
  %2913 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i187, float %2904, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i189 = select i1 %.not3.i188, float %2913, float %2912, !dbg !111
  %2914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i190 = icmp eq i32 %2914, 0, !dbg !111
  %2915 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i189, float %2904, float 0.000000e+00) #5, !dbg !111
  %2916 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i189, float %2904, float 0.000000e+00) #5, !dbg !111
  %.04.i191 = select i1 %.not4.i190, float %2916, float %2915, !dbg !111
  %2917 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i192 = icmp eq i32 %2917, 0, !dbg !111
  %2918 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i191, float %2535, float %2535) #5, !dbg !111
  %2919 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i191, float %2535, float %2535) #5, !dbg !111
  %.02.i193 = select i1 %.not5.i192, float %2919, float %2918, !dbg !111
  br label %__nv_tanhf.exit194, !dbg !111

__nv_tanhf.exit194:                               ; preds = %__internal_fmad.exit1.i178, %__internal_fmad.exit3.i183
  %s.1.i182 = phi float [ %2903, %__internal_fmad.exit1.i178 ], [ %.02.i193, %__internal_fmad.exit3.i183 ], !dbg !111
  %2920 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i195 = icmp eq i32 %2920, 0, !dbg !111
  %2921 = tail call float @llvm.nvvm.fabs.ftz.f(float %2536) #5, !dbg !111
  %2922 = tail call float @llvm.nvvm.fabs.f(float %2536) #5, !dbg !111
  %.01.i196 = select i1 %.not.i195, float %2922, float %2921, !dbg !111
  %2923 = fcmp ult float %.01.i196, 0x3FE3333340000000, !dbg !111
  br i1 %2923, label %__internal_fmad.exit3.i202, label %__internal_fmad.exit1.i197, !dbg !111

__internal_fmad.exit1.i197:                       ; preds = %__nv_tanhf.exit194
  %2924 = fmul float %.01.i196, 0x4007154760000000, !dbg !111
  %2925 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2924) #5, !dbg !111
  %2926 = fadd float %2925, 1.000000e+00, !dbg !111
  %2927 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2926) #6, !dbg !111, !srcloc !38
  %2928 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i198 = icmp eq i32 %2928, 0, !dbg !111
  %2929 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2927, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2930 = tail call float @llvm.nvvm.fma.rn.f(float %2927, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i199 = select i1 %.not6.i198, float %2930, float %2929, !dbg !111
  %2931 = fcmp oge float %.01.i196, 0x4022059680000000, !dbg !111
  %s.0.i200 = select i1 %2931, float 1.000000e+00, float %.03.i199, !dbg !111
  %2932 = bitcast float %s.0.i200 to i32, !dbg !111
  %2933 = bitcast float %2536 to i32, !dbg !111
  %2934 = and i32 %2933, -2147483648, !dbg !111
  %2935 = or i32 %2934, %2932, !dbg !111
  %2936 = bitcast i32 %2935 to float, !dbg !111
  br label %__nv_tanhf.exit213, !dbg !111

__internal_fmad.exit3.i202:                       ; preds = %__nv_tanhf.exit194
  %2937 = fmul float %2536, %2536, !dbg !111
  %2938 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i203 = icmp eq i32 %2938, 0, !dbg !111
  %2939 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2937, float 0xBFAAC795C0000000) #5, !dbg !111
  %2940 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2937, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i204 = select i1 %.not1.i203, float %2940, float %2939, !dbg !111
  %2941 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i205 = icmp eq i32 %2941, 0, !dbg !111
  %2942 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i204, float %2937, float 0x3FC10B2820000000) #5, !dbg !111
  %2943 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i204, float %2937, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i206 = select i1 %.not2.i205, float %2943, float %2942, !dbg !111
  %2944 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i207 = icmp eq i32 %2944, 0, !dbg !111
  %2945 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i206, float %2937, float 0xBFD5553DA0000000) #5, !dbg !111
  %2946 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i206, float %2937, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i208 = select i1 %.not3.i207, float %2946, float %2945, !dbg !111
  %2947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i209 = icmp eq i32 %2947, 0, !dbg !111
  %2948 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i208, float %2937, float 0.000000e+00) #5, !dbg !111
  %2949 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i208, float %2937, float 0.000000e+00) #5, !dbg !111
  %.04.i210 = select i1 %.not4.i209, float %2949, float %2948, !dbg !111
  %2950 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i211 = icmp eq i32 %2950, 0, !dbg !111
  %2951 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i210, float %2536, float %2536) #5, !dbg !111
  %2952 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i210, float %2536, float %2536) #5, !dbg !111
  %.02.i212 = select i1 %.not5.i211, float %2952, float %2951, !dbg !111
  br label %__nv_tanhf.exit213, !dbg !111

__nv_tanhf.exit213:                               ; preds = %__internal_fmad.exit1.i197, %__internal_fmad.exit3.i202
  %s.1.i201 = phi float [ %2936, %__internal_fmad.exit1.i197 ], [ %.02.i212, %__internal_fmad.exit3.i202 ], !dbg !111
  %2953 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i214 = icmp eq i32 %2953, 0, !dbg !111
  %2954 = tail call float @llvm.nvvm.fabs.ftz.f(float %2537) #5, !dbg !111
  %2955 = tail call float @llvm.nvvm.fabs.f(float %2537) #5, !dbg !111
  %.01.i215 = select i1 %.not.i214, float %2955, float %2954, !dbg !111
  %2956 = fcmp ult float %.01.i215, 0x3FE3333340000000, !dbg !111
  br i1 %2956, label %__internal_fmad.exit3.i221, label %__internal_fmad.exit1.i216, !dbg !111

__internal_fmad.exit1.i216:                       ; preds = %__nv_tanhf.exit213
  %2957 = fmul float %.01.i215, 0x4007154760000000, !dbg !111
  %2958 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2957) #5, !dbg !111
  %2959 = fadd float %2958, 1.000000e+00, !dbg !111
  %2960 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2959) #6, !dbg !111, !srcloc !38
  %2961 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i217 = icmp eq i32 %2961, 0, !dbg !111
  %2962 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2960, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2963 = tail call float @llvm.nvvm.fma.rn.f(float %2960, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i218 = select i1 %.not6.i217, float %2963, float %2962, !dbg !111
  %2964 = fcmp oge float %.01.i215, 0x4022059680000000, !dbg !111
  %s.0.i219 = select i1 %2964, float 1.000000e+00, float %.03.i218, !dbg !111
  %2965 = bitcast float %s.0.i219 to i32, !dbg !111
  %2966 = bitcast float %2537 to i32, !dbg !111
  %2967 = and i32 %2966, -2147483648, !dbg !111
  %2968 = or i32 %2967, %2965, !dbg !111
  %2969 = bitcast i32 %2968 to float, !dbg !111
  br label %__nv_tanhf.exit232, !dbg !111

__internal_fmad.exit3.i221:                       ; preds = %__nv_tanhf.exit213
  %2970 = fmul float %2537, %2537, !dbg !111
  %2971 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i222 = icmp eq i32 %2971, 0, !dbg !111
  %2972 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %2970, float 0xBFAAC795C0000000) #5, !dbg !111
  %2973 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %2970, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i223 = select i1 %.not1.i222, float %2973, float %2972, !dbg !111
  %2974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i224 = icmp eq i32 %2974, 0, !dbg !111
  %2975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i223, float %2970, float 0x3FC10B2820000000) #5, !dbg !111
  %2976 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i223, float %2970, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i225 = select i1 %.not2.i224, float %2976, float %2975, !dbg !111
  %2977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i226 = icmp eq i32 %2977, 0, !dbg !111
  %2978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i225, float %2970, float 0xBFD5553DA0000000) #5, !dbg !111
  %2979 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i225, float %2970, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i227 = select i1 %.not3.i226, float %2979, float %2978, !dbg !111
  %2980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i228 = icmp eq i32 %2980, 0, !dbg !111
  %2981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i227, float %2970, float 0.000000e+00) #5, !dbg !111
  %2982 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i227, float %2970, float 0.000000e+00) #5, !dbg !111
  %.04.i229 = select i1 %.not4.i228, float %2982, float %2981, !dbg !111
  %2983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i230 = icmp eq i32 %2983, 0, !dbg !111
  %2984 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i229, float %2537, float %2537) #5, !dbg !111
  %2985 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i229, float %2537, float %2537) #5, !dbg !111
  %.02.i231 = select i1 %.not5.i230, float %2985, float %2984, !dbg !111
  br label %__nv_tanhf.exit232, !dbg !111

__nv_tanhf.exit232:                               ; preds = %__internal_fmad.exit1.i216, %__internal_fmad.exit3.i221
  %s.1.i220 = phi float [ %2969, %__internal_fmad.exit1.i216 ], [ %.02.i231, %__internal_fmad.exit3.i221 ], !dbg !111
  %2986 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i233 = icmp eq i32 %2986, 0, !dbg !111
  %2987 = tail call float @llvm.nvvm.fabs.ftz.f(float %2538) #5, !dbg !111
  %2988 = tail call float @llvm.nvvm.fabs.f(float %2538) #5, !dbg !111
  %.01.i234 = select i1 %.not.i233, float %2988, float %2987, !dbg !111
  %2989 = fcmp ult float %.01.i234, 0x3FE3333340000000, !dbg !111
  br i1 %2989, label %__internal_fmad.exit3.i240, label %__internal_fmad.exit1.i235, !dbg !111

__internal_fmad.exit1.i235:                       ; preds = %__nv_tanhf.exit232
  %2990 = fmul float %.01.i234, 0x4007154760000000, !dbg !111
  %2991 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %2990) #5, !dbg !111
  %2992 = fadd float %2991, 1.000000e+00, !dbg !111
  %2993 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %2992) #6, !dbg !111, !srcloc !38
  %2994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i236 = icmp eq i32 %2994, 0, !dbg !111
  %2995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %2993, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %2996 = tail call float @llvm.nvvm.fma.rn.f(float %2993, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i237 = select i1 %.not6.i236, float %2996, float %2995, !dbg !111
  %2997 = fcmp oge float %.01.i234, 0x4022059680000000, !dbg !111
  %s.0.i238 = select i1 %2997, float 1.000000e+00, float %.03.i237, !dbg !111
  %2998 = bitcast float %s.0.i238 to i32, !dbg !111
  %2999 = bitcast float %2538 to i32, !dbg !111
  %3000 = and i32 %2999, -2147483648, !dbg !111
  %3001 = or i32 %3000, %2998, !dbg !111
  %3002 = bitcast i32 %3001 to float, !dbg !111
  br label %__nv_tanhf.exit251, !dbg !111

__internal_fmad.exit3.i240:                       ; preds = %__nv_tanhf.exit232
  %3003 = fmul float %2538, %2538, !dbg !111
  %3004 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i241 = icmp eq i32 %3004, 0, !dbg !111
  %3005 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3003, float 0xBFAAC795C0000000) #5, !dbg !111
  %3006 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3003, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i242 = select i1 %.not1.i241, float %3006, float %3005, !dbg !111
  %3007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i243 = icmp eq i32 %3007, 0, !dbg !111
  %3008 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i242, float %3003, float 0x3FC10B2820000000) #5, !dbg !111
  %3009 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i242, float %3003, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i244 = select i1 %.not2.i243, float %3009, float %3008, !dbg !111
  %3010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i245 = icmp eq i32 %3010, 0, !dbg !111
  %3011 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i244, float %3003, float 0xBFD5553DA0000000) #5, !dbg !111
  %3012 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i244, float %3003, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i246 = select i1 %.not3.i245, float %3012, float %3011, !dbg !111
  %3013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i247 = icmp eq i32 %3013, 0, !dbg !111
  %3014 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i246, float %3003, float 0.000000e+00) #5, !dbg !111
  %3015 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i246, float %3003, float 0.000000e+00) #5, !dbg !111
  %.04.i248 = select i1 %.not4.i247, float %3015, float %3014, !dbg !111
  %3016 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i249 = icmp eq i32 %3016, 0, !dbg !111
  %3017 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i248, float %2538, float %2538) #5, !dbg !111
  %3018 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i248, float %2538, float %2538) #5, !dbg !111
  %.02.i250 = select i1 %.not5.i249, float %3018, float %3017, !dbg !111
  br label %__nv_tanhf.exit251, !dbg !111

__nv_tanhf.exit251:                               ; preds = %__internal_fmad.exit1.i235, %__internal_fmad.exit3.i240
  %s.1.i239 = phi float [ %3002, %__internal_fmad.exit1.i235 ], [ %.02.i250, %__internal_fmad.exit3.i240 ], !dbg !111
  %3019 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i252 = icmp eq i32 %3019, 0, !dbg !111
  %3020 = tail call float @llvm.nvvm.fabs.ftz.f(float %2539) #5, !dbg !111
  %3021 = tail call float @llvm.nvvm.fabs.f(float %2539) #5, !dbg !111
  %.01.i253 = select i1 %.not.i252, float %3021, float %3020, !dbg !111
  %3022 = fcmp ult float %.01.i253, 0x3FE3333340000000, !dbg !111
  br i1 %3022, label %__internal_fmad.exit3.i259, label %__internal_fmad.exit1.i254, !dbg !111

__internal_fmad.exit1.i254:                       ; preds = %__nv_tanhf.exit251
  %3023 = fmul float %.01.i253, 0x4007154760000000, !dbg !111
  %3024 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3023) #5, !dbg !111
  %3025 = fadd float %3024, 1.000000e+00, !dbg !111
  %3026 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3025) #6, !dbg !111, !srcloc !38
  %3027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i255 = icmp eq i32 %3027, 0, !dbg !111
  %3028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3026, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3029 = tail call float @llvm.nvvm.fma.rn.f(float %3026, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i256 = select i1 %.not6.i255, float %3029, float %3028, !dbg !111
  %3030 = fcmp oge float %.01.i253, 0x4022059680000000, !dbg !111
  %s.0.i257 = select i1 %3030, float 1.000000e+00, float %.03.i256, !dbg !111
  %3031 = bitcast float %s.0.i257 to i32, !dbg !111
  %3032 = bitcast float %2539 to i32, !dbg !111
  %3033 = and i32 %3032, -2147483648, !dbg !111
  %3034 = or i32 %3033, %3031, !dbg !111
  %3035 = bitcast i32 %3034 to float, !dbg !111
  br label %__nv_tanhf.exit270, !dbg !111

__internal_fmad.exit3.i259:                       ; preds = %__nv_tanhf.exit251
  %3036 = fmul float %2539, %2539, !dbg !111
  %3037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i260 = icmp eq i32 %3037, 0, !dbg !111
  %3038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3036, float 0xBFAAC795C0000000) #5, !dbg !111
  %3039 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3036, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i261 = select i1 %.not1.i260, float %3039, float %3038, !dbg !111
  %3040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i262 = icmp eq i32 %3040, 0, !dbg !111
  %3041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i261, float %3036, float 0x3FC10B2820000000) #5, !dbg !111
  %3042 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i261, float %3036, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i263 = select i1 %.not2.i262, float %3042, float %3041, !dbg !111
  %3043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i264 = icmp eq i32 %3043, 0, !dbg !111
  %3044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i263, float %3036, float 0xBFD5553DA0000000) #5, !dbg !111
  %3045 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i263, float %3036, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i265 = select i1 %.not3.i264, float %3045, float %3044, !dbg !111
  %3046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i266 = icmp eq i32 %3046, 0, !dbg !111
  %3047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i265, float %3036, float 0.000000e+00) #5, !dbg !111
  %3048 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i265, float %3036, float 0.000000e+00) #5, !dbg !111
  %.04.i267 = select i1 %.not4.i266, float %3048, float %3047, !dbg !111
  %3049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i268 = icmp eq i32 %3049, 0, !dbg !111
  %3050 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i267, float %2539, float %2539) #5, !dbg !111
  %3051 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i267, float %2539, float %2539) #5, !dbg !111
  %.02.i269 = select i1 %.not5.i268, float %3051, float %3050, !dbg !111
  br label %__nv_tanhf.exit270, !dbg !111

__nv_tanhf.exit270:                               ; preds = %__internal_fmad.exit1.i254, %__internal_fmad.exit3.i259
  %s.1.i258 = phi float [ %3035, %__internal_fmad.exit1.i254 ], [ %.02.i269, %__internal_fmad.exit3.i259 ], !dbg !111
  %3052 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i271 = icmp eq i32 %3052, 0, !dbg !111
  %3053 = tail call float @llvm.nvvm.fabs.ftz.f(float %2540) #5, !dbg !111
  %3054 = tail call float @llvm.nvvm.fabs.f(float %2540) #5, !dbg !111
  %.01.i272 = select i1 %.not.i271, float %3054, float %3053, !dbg !111
  %3055 = fcmp ult float %.01.i272, 0x3FE3333340000000, !dbg !111
  br i1 %3055, label %__internal_fmad.exit3.i278, label %__internal_fmad.exit1.i273, !dbg !111

__internal_fmad.exit1.i273:                       ; preds = %__nv_tanhf.exit270
  %3056 = fmul float %.01.i272, 0x4007154760000000, !dbg !111
  %3057 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3056) #5, !dbg !111
  %3058 = fadd float %3057, 1.000000e+00, !dbg !111
  %3059 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3058) #6, !dbg !111, !srcloc !38
  %3060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i274 = icmp eq i32 %3060, 0, !dbg !111
  %3061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3059, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3062 = tail call float @llvm.nvvm.fma.rn.f(float %3059, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i275 = select i1 %.not6.i274, float %3062, float %3061, !dbg !111
  %3063 = fcmp oge float %.01.i272, 0x4022059680000000, !dbg !111
  %s.0.i276 = select i1 %3063, float 1.000000e+00, float %.03.i275, !dbg !111
  %3064 = bitcast float %s.0.i276 to i32, !dbg !111
  %3065 = bitcast float %2540 to i32, !dbg !111
  %3066 = and i32 %3065, -2147483648, !dbg !111
  %3067 = or i32 %3066, %3064, !dbg !111
  %3068 = bitcast i32 %3067 to float, !dbg !111
  br label %__nv_tanhf.exit289, !dbg !111

__internal_fmad.exit3.i278:                       ; preds = %__nv_tanhf.exit270
  %3069 = fmul float %2540, %2540, !dbg !111
  %3070 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i279 = icmp eq i32 %3070, 0, !dbg !111
  %3071 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3069, float 0xBFAAC795C0000000) #5, !dbg !111
  %3072 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3069, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i280 = select i1 %.not1.i279, float %3072, float %3071, !dbg !111
  %3073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i281 = icmp eq i32 %3073, 0, !dbg !111
  %3074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i280, float %3069, float 0x3FC10B2820000000) #5, !dbg !111
  %3075 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i280, float %3069, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i282 = select i1 %.not2.i281, float %3075, float %3074, !dbg !111
  %3076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i283 = icmp eq i32 %3076, 0, !dbg !111
  %3077 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i282, float %3069, float 0xBFD5553DA0000000) #5, !dbg !111
  %3078 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i282, float %3069, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i284 = select i1 %.not3.i283, float %3078, float %3077, !dbg !111
  %3079 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i285 = icmp eq i32 %3079, 0, !dbg !111
  %3080 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i284, float %3069, float 0.000000e+00) #5, !dbg !111
  %3081 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i284, float %3069, float 0.000000e+00) #5, !dbg !111
  %.04.i286 = select i1 %.not4.i285, float %3081, float %3080, !dbg !111
  %3082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i287 = icmp eq i32 %3082, 0, !dbg !111
  %3083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i286, float %2540, float %2540) #5, !dbg !111
  %3084 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i286, float %2540, float %2540) #5, !dbg !111
  %.02.i288 = select i1 %.not5.i287, float %3084, float %3083, !dbg !111
  br label %__nv_tanhf.exit289, !dbg !111

__nv_tanhf.exit289:                               ; preds = %__internal_fmad.exit1.i273, %__internal_fmad.exit3.i278
  %s.1.i277 = phi float [ %3068, %__internal_fmad.exit1.i273 ], [ %.02.i288, %__internal_fmad.exit3.i278 ], !dbg !111
  %3085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i290 = icmp eq i32 %3085, 0, !dbg !111
  %3086 = tail call float @llvm.nvvm.fabs.ftz.f(float %2541) #5, !dbg !111
  %3087 = tail call float @llvm.nvvm.fabs.f(float %2541) #5, !dbg !111
  %.01.i291 = select i1 %.not.i290, float %3087, float %3086, !dbg !111
  %3088 = fcmp ult float %.01.i291, 0x3FE3333340000000, !dbg !111
  br i1 %3088, label %__internal_fmad.exit3.i297, label %__internal_fmad.exit1.i292, !dbg !111

__internal_fmad.exit1.i292:                       ; preds = %__nv_tanhf.exit289
  %3089 = fmul float %.01.i291, 0x4007154760000000, !dbg !111
  %3090 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3089) #5, !dbg !111
  %3091 = fadd float %3090, 1.000000e+00, !dbg !111
  %3092 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3091) #6, !dbg !111, !srcloc !38
  %3093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i293 = icmp eq i32 %3093, 0, !dbg !111
  %3094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3092, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3095 = tail call float @llvm.nvvm.fma.rn.f(float %3092, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i294 = select i1 %.not6.i293, float %3095, float %3094, !dbg !111
  %3096 = fcmp oge float %.01.i291, 0x4022059680000000, !dbg !111
  %s.0.i295 = select i1 %3096, float 1.000000e+00, float %.03.i294, !dbg !111
  %3097 = bitcast float %s.0.i295 to i32, !dbg !111
  %3098 = bitcast float %2541 to i32, !dbg !111
  %3099 = and i32 %3098, -2147483648, !dbg !111
  %3100 = or i32 %3099, %3097, !dbg !111
  %3101 = bitcast i32 %3100 to float, !dbg !111
  br label %__nv_tanhf.exit308, !dbg !111

__internal_fmad.exit3.i297:                       ; preds = %__nv_tanhf.exit289
  %3102 = fmul float %2541, %2541, !dbg !111
  %3103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i298 = icmp eq i32 %3103, 0, !dbg !111
  %3104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3102, float 0xBFAAC795C0000000) #5, !dbg !111
  %3105 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3102, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i299 = select i1 %.not1.i298, float %3105, float %3104, !dbg !111
  %3106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i300 = icmp eq i32 %3106, 0, !dbg !111
  %3107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i299, float %3102, float 0x3FC10B2820000000) #5, !dbg !111
  %3108 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i299, float %3102, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i301 = select i1 %.not2.i300, float %3108, float %3107, !dbg !111
  %3109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i302 = icmp eq i32 %3109, 0, !dbg !111
  %3110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i301, float %3102, float 0xBFD5553DA0000000) #5, !dbg !111
  %3111 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i301, float %3102, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i303 = select i1 %.not3.i302, float %3111, float %3110, !dbg !111
  %3112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i304 = icmp eq i32 %3112, 0, !dbg !111
  %3113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i303, float %3102, float 0.000000e+00) #5, !dbg !111
  %3114 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i303, float %3102, float 0.000000e+00) #5, !dbg !111
  %.04.i305 = select i1 %.not4.i304, float %3114, float %3113, !dbg !111
  %3115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i306 = icmp eq i32 %3115, 0, !dbg !111
  %3116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i305, float %2541, float %2541) #5, !dbg !111
  %3117 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i305, float %2541, float %2541) #5, !dbg !111
  %.02.i307 = select i1 %.not5.i306, float %3117, float %3116, !dbg !111
  br label %__nv_tanhf.exit308, !dbg !111

__nv_tanhf.exit308:                               ; preds = %__internal_fmad.exit1.i292, %__internal_fmad.exit3.i297
  %s.1.i296 = phi float [ %3101, %__internal_fmad.exit1.i292 ], [ %.02.i307, %__internal_fmad.exit3.i297 ], !dbg !111
  %3118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i309 = icmp eq i32 %3118, 0, !dbg !111
  %3119 = tail call float @llvm.nvvm.fabs.ftz.f(float %2542) #5, !dbg !111
  %3120 = tail call float @llvm.nvvm.fabs.f(float %2542) #5, !dbg !111
  %.01.i310 = select i1 %.not.i309, float %3120, float %3119, !dbg !111
  %3121 = fcmp ult float %.01.i310, 0x3FE3333340000000, !dbg !111
  br i1 %3121, label %__internal_fmad.exit3.i316, label %__internal_fmad.exit1.i311, !dbg !111

__internal_fmad.exit1.i311:                       ; preds = %__nv_tanhf.exit308
  %3122 = fmul float %.01.i310, 0x4007154760000000, !dbg !111
  %3123 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3122) #5, !dbg !111
  %3124 = fadd float %3123, 1.000000e+00, !dbg !111
  %3125 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3124) #6, !dbg !111, !srcloc !38
  %3126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i312 = icmp eq i32 %3126, 0, !dbg !111
  %3127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3125, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3128 = tail call float @llvm.nvvm.fma.rn.f(float %3125, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i313 = select i1 %.not6.i312, float %3128, float %3127, !dbg !111
  %3129 = fcmp oge float %.01.i310, 0x4022059680000000, !dbg !111
  %s.0.i314 = select i1 %3129, float 1.000000e+00, float %.03.i313, !dbg !111
  %3130 = bitcast float %s.0.i314 to i32, !dbg !111
  %3131 = bitcast float %2542 to i32, !dbg !111
  %3132 = and i32 %3131, -2147483648, !dbg !111
  %3133 = or i32 %3132, %3130, !dbg !111
  %3134 = bitcast i32 %3133 to float, !dbg !111
  br label %__nv_tanhf.exit327, !dbg !111

__internal_fmad.exit3.i316:                       ; preds = %__nv_tanhf.exit308
  %3135 = fmul float %2542, %2542, !dbg !111
  %3136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i317 = icmp eq i32 %3136, 0, !dbg !111
  %3137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3135, float 0xBFAAC795C0000000) #5, !dbg !111
  %3138 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3135, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i318 = select i1 %.not1.i317, float %3138, float %3137, !dbg !111
  %3139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i319 = icmp eq i32 %3139, 0, !dbg !111
  %3140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i318, float %3135, float 0x3FC10B2820000000) #5, !dbg !111
  %3141 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i318, float %3135, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i320 = select i1 %.not2.i319, float %3141, float %3140, !dbg !111
  %3142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i321 = icmp eq i32 %3142, 0, !dbg !111
  %3143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i320, float %3135, float 0xBFD5553DA0000000) #5, !dbg !111
  %3144 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i320, float %3135, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i322 = select i1 %.not3.i321, float %3144, float %3143, !dbg !111
  %3145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i323 = icmp eq i32 %3145, 0, !dbg !111
  %3146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i322, float %3135, float 0.000000e+00) #5, !dbg !111
  %3147 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i322, float %3135, float 0.000000e+00) #5, !dbg !111
  %.04.i324 = select i1 %.not4.i323, float %3147, float %3146, !dbg !111
  %3148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i325 = icmp eq i32 %3148, 0, !dbg !111
  %3149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i324, float %2542, float %2542) #5, !dbg !111
  %3150 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i324, float %2542, float %2542) #5, !dbg !111
  %.02.i326 = select i1 %.not5.i325, float %3150, float %3149, !dbg !111
  br label %__nv_tanhf.exit327, !dbg !111

__nv_tanhf.exit327:                               ; preds = %__internal_fmad.exit1.i311, %__internal_fmad.exit3.i316
  %s.1.i315 = phi float [ %3134, %__internal_fmad.exit1.i311 ], [ %.02.i326, %__internal_fmad.exit3.i316 ], !dbg !111
  %3151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i328 = icmp eq i32 %3151, 0, !dbg !111
  %3152 = tail call float @llvm.nvvm.fabs.ftz.f(float %2543) #5, !dbg !111
  %3153 = tail call float @llvm.nvvm.fabs.f(float %2543) #5, !dbg !111
  %.01.i329 = select i1 %.not.i328, float %3153, float %3152, !dbg !111
  %3154 = fcmp ult float %.01.i329, 0x3FE3333340000000, !dbg !111
  br i1 %3154, label %__internal_fmad.exit3.i335, label %__internal_fmad.exit1.i330, !dbg !111

__internal_fmad.exit1.i330:                       ; preds = %__nv_tanhf.exit327
  %3155 = fmul float %.01.i329, 0x4007154760000000, !dbg !111
  %3156 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3155) #5, !dbg !111
  %3157 = fadd float %3156, 1.000000e+00, !dbg !111
  %3158 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3157) #6, !dbg !111, !srcloc !38
  %3159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i331 = icmp eq i32 %3159, 0, !dbg !111
  %3160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3158, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3161 = tail call float @llvm.nvvm.fma.rn.f(float %3158, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i332 = select i1 %.not6.i331, float %3161, float %3160, !dbg !111
  %3162 = fcmp oge float %.01.i329, 0x4022059680000000, !dbg !111
  %s.0.i333 = select i1 %3162, float 1.000000e+00, float %.03.i332, !dbg !111
  %3163 = bitcast float %s.0.i333 to i32, !dbg !111
  %3164 = bitcast float %2543 to i32, !dbg !111
  %3165 = and i32 %3164, -2147483648, !dbg !111
  %3166 = or i32 %3165, %3163, !dbg !111
  %3167 = bitcast i32 %3166 to float, !dbg !111
  br label %__nv_tanhf.exit346, !dbg !111

__internal_fmad.exit3.i335:                       ; preds = %__nv_tanhf.exit327
  %3168 = fmul float %2543, %2543, !dbg !111
  %3169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i336 = icmp eq i32 %3169, 0, !dbg !111
  %3170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3168, float 0xBFAAC795C0000000) #5, !dbg !111
  %3171 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3168, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i337 = select i1 %.not1.i336, float %3171, float %3170, !dbg !111
  %3172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i338 = icmp eq i32 %3172, 0, !dbg !111
  %3173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i337, float %3168, float 0x3FC10B2820000000) #5, !dbg !111
  %3174 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i337, float %3168, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i339 = select i1 %.not2.i338, float %3174, float %3173, !dbg !111
  %3175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i340 = icmp eq i32 %3175, 0, !dbg !111
  %3176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i339, float %3168, float 0xBFD5553DA0000000) #5, !dbg !111
  %3177 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i339, float %3168, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i341 = select i1 %.not3.i340, float %3177, float %3176, !dbg !111
  %3178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i342 = icmp eq i32 %3178, 0, !dbg !111
  %3179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i341, float %3168, float 0.000000e+00) #5, !dbg !111
  %3180 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i341, float %3168, float 0.000000e+00) #5, !dbg !111
  %.04.i343 = select i1 %.not4.i342, float %3180, float %3179, !dbg !111
  %3181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i344 = icmp eq i32 %3181, 0, !dbg !111
  %3182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i343, float %2543, float %2543) #5, !dbg !111
  %3183 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i343, float %2543, float %2543) #5, !dbg !111
  %.02.i345 = select i1 %.not5.i344, float %3183, float %3182, !dbg !111
  br label %__nv_tanhf.exit346, !dbg !111

__nv_tanhf.exit346:                               ; preds = %__internal_fmad.exit1.i330, %__internal_fmad.exit3.i335
  %s.1.i334 = phi float [ %3167, %__internal_fmad.exit1.i330 ], [ %.02.i345, %__internal_fmad.exit3.i335 ], !dbg !111
  %3184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i347 = icmp eq i32 %3184, 0, !dbg !111
  %3185 = tail call float @llvm.nvvm.fabs.ftz.f(float %2544) #5, !dbg !111
  %3186 = tail call float @llvm.nvvm.fabs.f(float %2544) #5, !dbg !111
  %.01.i348 = select i1 %.not.i347, float %3186, float %3185, !dbg !111
  %3187 = fcmp ult float %.01.i348, 0x3FE3333340000000, !dbg !111
  br i1 %3187, label %__internal_fmad.exit3.i354, label %__internal_fmad.exit1.i349, !dbg !111

__internal_fmad.exit1.i349:                       ; preds = %__nv_tanhf.exit346
  %3188 = fmul float %.01.i348, 0x4007154760000000, !dbg !111
  %3189 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3188) #5, !dbg !111
  %3190 = fadd float %3189, 1.000000e+00, !dbg !111
  %3191 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3190) #6, !dbg !111, !srcloc !38
  %3192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i350 = icmp eq i32 %3192, 0, !dbg !111
  %3193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3191, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3194 = tail call float @llvm.nvvm.fma.rn.f(float %3191, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i351 = select i1 %.not6.i350, float %3194, float %3193, !dbg !111
  %3195 = fcmp oge float %.01.i348, 0x4022059680000000, !dbg !111
  %s.0.i352 = select i1 %3195, float 1.000000e+00, float %.03.i351, !dbg !111
  %3196 = bitcast float %s.0.i352 to i32, !dbg !111
  %3197 = bitcast float %2544 to i32, !dbg !111
  %3198 = and i32 %3197, -2147483648, !dbg !111
  %3199 = or i32 %3198, %3196, !dbg !111
  %3200 = bitcast i32 %3199 to float, !dbg !111
  br label %__nv_tanhf.exit365, !dbg !111

__internal_fmad.exit3.i354:                       ; preds = %__nv_tanhf.exit346
  %3201 = fmul float %2544, %2544, !dbg !111
  %3202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i355 = icmp eq i32 %3202, 0, !dbg !111
  %3203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3201, float 0xBFAAC795C0000000) #5, !dbg !111
  %3204 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3201, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i356 = select i1 %.not1.i355, float %3204, float %3203, !dbg !111
  %3205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i357 = icmp eq i32 %3205, 0, !dbg !111
  %3206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i356, float %3201, float 0x3FC10B2820000000) #5, !dbg !111
  %3207 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i356, float %3201, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i358 = select i1 %.not2.i357, float %3207, float %3206, !dbg !111
  %3208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i359 = icmp eq i32 %3208, 0, !dbg !111
  %3209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i358, float %3201, float 0xBFD5553DA0000000) #5, !dbg !111
  %3210 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i358, float %3201, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i360 = select i1 %.not3.i359, float %3210, float %3209, !dbg !111
  %3211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i361 = icmp eq i32 %3211, 0, !dbg !111
  %3212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i360, float %3201, float 0.000000e+00) #5, !dbg !111
  %3213 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i360, float %3201, float 0.000000e+00) #5, !dbg !111
  %.04.i362 = select i1 %.not4.i361, float %3213, float %3212, !dbg !111
  %3214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i363 = icmp eq i32 %3214, 0, !dbg !111
  %3215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i362, float %2544, float %2544) #5, !dbg !111
  %3216 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i362, float %2544, float %2544) #5, !dbg !111
  %.02.i364 = select i1 %.not5.i363, float %3216, float %3215, !dbg !111
  br label %__nv_tanhf.exit365, !dbg !111

__nv_tanhf.exit365:                               ; preds = %__internal_fmad.exit1.i349, %__internal_fmad.exit3.i354
  %s.1.i353 = phi float [ %3200, %__internal_fmad.exit1.i349 ], [ %.02.i364, %__internal_fmad.exit3.i354 ], !dbg !111
  %3217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i366 = icmp eq i32 %3217, 0, !dbg !111
  %3218 = tail call float @llvm.nvvm.fabs.ftz.f(float %2545) #5, !dbg !111
  %3219 = tail call float @llvm.nvvm.fabs.f(float %2545) #5, !dbg !111
  %.01.i367 = select i1 %.not.i366, float %3219, float %3218, !dbg !111
  %3220 = fcmp ult float %.01.i367, 0x3FE3333340000000, !dbg !111
  br i1 %3220, label %__internal_fmad.exit3.i373, label %__internal_fmad.exit1.i368, !dbg !111

__internal_fmad.exit1.i368:                       ; preds = %__nv_tanhf.exit365
  %3221 = fmul float %.01.i367, 0x4007154760000000, !dbg !111
  %3222 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3221) #5, !dbg !111
  %3223 = fadd float %3222, 1.000000e+00, !dbg !111
  %3224 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3223) #6, !dbg !111, !srcloc !38
  %3225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i369 = icmp eq i32 %3225, 0, !dbg !111
  %3226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3224, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3227 = tail call float @llvm.nvvm.fma.rn.f(float %3224, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i370 = select i1 %.not6.i369, float %3227, float %3226, !dbg !111
  %3228 = fcmp oge float %.01.i367, 0x4022059680000000, !dbg !111
  %s.0.i371 = select i1 %3228, float 1.000000e+00, float %.03.i370, !dbg !111
  %3229 = bitcast float %s.0.i371 to i32, !dbg !111
  %3230 = bitcast float %2545 to i32, !dbg !111
  %3231 = and i32 %3230, -2147483648, !dbg !111
  %3232 = or i32 %3231, %3229, !dbg !111
  %3233 = bitcast i32 %3232 to float, !dbg !111
  br label %__nv_tanhf.exit384, !dbg !111

__internal_fmad.exit3.i373:                       ; preds = %__nv_tanhf.exit365
  %3234 = fmul float %2545, %2545, !dbg !111
  %3235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i374 = icmp eq i32 %3235, 0, !dbg !111
  %3236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3234, float 0xBFAAC795C0000000) #5, !dbg !111
  %3237 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3234, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i375 = select i1 %.not1.i374, float %3237, float %3236, !dbg !111
  %3238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i376 = icmp eq i32 %3238, 0, !dbg !111
  %3239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i375, float %3234, float 0x3FC10B2820000000) #5, !dbg !111
  %3240 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i375, float %3234, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i377 = select i1 %.not2.i376, float %3240, float %3239, !dbg !111
  %3241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i378 = icmp eq i32 %3241, 0, !dbg !111
  %3242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i377, float %3234, float 0xBFD5553DA0000000) #5, !dbg !111
  %3243 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i377, float %3234, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i379 = select i1 %.not3.i378, float %3243, float %3242, !dbg !111
  %3244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i380 = icmp eq i32 %3244, 0, !dbg !111
  %3245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i379, float %3234, float 0.000000e+00) #5, !dbg !111
  %3246 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i379, float %3234, float 0.000000e+00) #5, !dbg !111
  %.04.i381 = select i1 %.not4.i380, float %3246, float %3245, !dbg !111
  %3247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i382 = icmp eq i32 %3247, 0, !dbg !111
  %3248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i381, float %2545, float %2545) #5, !dbg !111
  %3249 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i381, float %2545, float %2545) #5, !dbg !111
  %.02.i383 = select i1 %.not5.i382, float %3249, float %3248, !dbg !111
  br label %__nv_tanhf.exit384, !dbg !111

__nv_tanhf.exit384:                               ; preds = %__internal_fmad.exit1.i368, %__internal_fmad.exit3.i373
  %s.1.i372 = phi float [ %3233, %__internal_fmad.exit1.i368 ], [ %.02.i383, %__internal_fmad.exit3.i373 ], !dbg !111
  %3250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i385 = icmp eq i32 %3250, 0, !dbg !111
  %3251 = tail call float @llvm.nvvm.fabs.ftz.f(float %2546) #5, !dbg !111
  %3252 = tail call float @llvm.nvvm.fabs.f(float %2546) #5, !dbg !111
  %.01.i386 = select i1 %.not.i385, float %3252, float %3251, !dbg !111
  %3253 = fcmp ult float %.01.i386, 0x3FE3333340000000, !dbg !111
  br i1 %3253, label %__internal_fmad.exit3.i392, label %__internal_fmad.exit1.i387, !dbg !111

__internal_fmad.exit1.i387:                       ; preds = %__nv_tanhf.exit384
  %3254 = fmul float %.01.i386, 0x4007154760000000, !dbg !111
  %3255 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3254) #5, !dbg !111
  %3256 = fadd float %3255, 1.000000e+00, !dbg !111
  %3257 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3256) #6, !dbg !111, !srcloc !38
  %3258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i388 = icmp eq i32 %3258, 0, !dbg !111
  %3259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3257, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3260 = tail call float @llvm.nvvm.fma.rn.f(float %3257, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i389 = select i1 %.not6.i388, float %3260, float %3259, !dbg !111
  %3261 = fcmp oge float %.01.i386, 0x4022059680000000, !dbg !111
  %s.0.i390 = select i1 %3261, float 1.000000e+00, float %.03.i389, !dbg !111
  %3262 = bitcast float %s.0.i390 to i32, !dbg !111
  %3263 = bitcast float %2546 to i32, !dbg !111
  %3264 = and i32 %3263, -2147483648, !dbg !111
  %3265 = or i32 %3264, %3262, !dbg !111
  %3266 = bitcast i32 %3265 to float, !dbg !111
  br label %__nv_tanhf.exit403, !dbg !111

__internal_fmad.exit3.i392:                       ; preds = %__nv_tanhf.exit384
  %3267 = fmul float %2546, %2546, !dbg !111
  %3268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i393 = icmp eq i32 %3268, 0, !dbg !111
  %3269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3267, float 0xBFAAC795C0000000) #5, !dbg !111
  %3270 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3267, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i394 = select i1 %.not1.i393, float %3270, float %3269, !dbg !111
  %3271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i395 = icmp eq i32 %3271, 0, !dbg !111
  %3272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i394, float %3267, float 0x3FC10B2820000000) #5, !dbg !111
  %3273 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i394, float %3267, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i396 = select i1 %.not2.i395, float %3273, float %3272, !dbg !111
  %3274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i397 = icmp eq i32 %3274, 0, !dbg !111
  %3275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i396, float %3267, float 0xBFD5553DA0000000) #5, !dbg !111
  %3276 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i396, float %3267, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i398 = select i1 %.not3.i397, float %3276, float %3275, !dbg !111
  %3277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i399 = icmp eq i32 %3277, 0, !dbg !111
  %3278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i398, float %3267, float 0.000000e+00) #5, !dbg !111
  %3279 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i398, float %3267, float 0.000000e+00) #5, !dbg !111
  %.04.i400 = select i1 %.not4.i399, float %3279, float %3278, !dbg !111
  %3280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i401 = icmp eq i32 %3280, 0, !dbg !111
  %3281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i400, float %2546, float %2546) #5, !dbg !111
  %3282 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i400, float %2546, float %2546) #5, !dbg !111
  %.02.i402 = select i1 %.not5.i401, float %3282, float %3281, !dbg !111
  br label %__nv_tanhf.exit403, !dbg !111

__nv_tanhf.exit403:                               ; preds = %__internal_fmad.exit1.i387, %__internal_fmad.exit3.i392
  %s.1.i391 = phi float [ %3266, %__internal_fmad.exit1.i387 ], [ %.02.i402, %__internal_fmad.exit3.i392 ], !dbg !111
  %3283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i404 = icmp eq i32 %3283, 0, !dbg !111
  %3284 = tail call float @llvm.nvvm.fabs.ftz.f(float %2547) #5, !dbg !111
  %3285 = tail call float @llvm.nvvm.fabs.f(float %2547) #5, !dbg !111
  %.01.i405 = select i1 %.not.i404, float %3285, float %3284, !dbg !111
  %3286 = fcmp ult float %.01.i405, 0x3FE3333340000000, !dbg !111
  br i1 %3286, label %__internal_fmad.exit3.i411, label %__internal_fmad.exit1.i406, !dbg !111

__internal_fmad.exit1.i406:                       ; preds = %__nv_tanhf.exit403
  %3287 = fmul float %.01.i405, 0x4007154760000000, !dbg !111
  %3288 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3287) #5, !dbg !111
  %3289 = fadd float %3288, 1.000000e+00, !dbg !111
  %3290 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3289) #6, !dbg !111, !srcloc !38
  %3291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i407 = icmp eq i32 %3291, 0, !dbg !111
  %3292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3290, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3293 = tail call float @llvm.nvvm.fma.rn.f(float %3290, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i408 = select i1 %.not6.i407, float %3293, float %3292, !dbg !111
  %3294 = fcmp oge float %.01.i405, 0x4022059680000000, !dbg !111
  %s.0.i409 = select i1 %3294, float 1.000000e+00, float %.03.i408, !dbg !111
  %3295 = bitcast float %s.0.i409 to i32, !dbg !111
  %3296 = bitcast float %2547 to i32, !dbg !111
  %3297 = and i32 %3296, -2147483648, !dbg !111
  %3298 = or i32 %3297, %3295, !dbg !111
  %3299 = bitcast i32 %3298 to float, !dbg !111
  br label %__nv_tanhf.exit422, !dbg !111

__internal_fmad.exit3.i411:                       ; preds = %__nv_tanhf.exit403
  %3300 = fmul float %2547, %2547, !dbg !111
  %3301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i412 = icmp eq i32 %3301, 0, !dbg !111
  %3302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3300, float 0xBFAAC795C0000000) #5, !dbg !111
  %3303 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3300, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i413 = select i1 %.not1.i412, float %3303, float %3302, !dbg !111
  %3304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i414 = icmp eq i32 %3304, 0, !dbg !111
  %3305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i413, float %3300, float 0x3FC10B2820000000) #5, !dbg !111
  %3306 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i413, float %3300, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i415 = select i1 %.not2.i414, float %3306, float %3305, !dbg !111
  %3307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i416 = icmp eq i32 %3307, 0, !dbg !111
  %3308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i415, float %3300, float 0xBFD5553DA0000000) #5, !dbg !111
  %3309 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i415, float %3300, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i417 = select i1 %.not3.i416, float %3309, float %3308, !dbg !111
  %3310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i418 = icmp eq i32 %3310, 0, !dbg !111
  %3311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i417, float %3300, float 0.000000e+00) #5, !dbg !111
  %3312 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i417, float %3300, float 0.000000e+00) #5, !dbg !111
  %.04.i419 = select i1 %.not4.i418, float %3312, float %3311, !dbg !111
  %3313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i420 = icmp eq i32 %3313, 0, !dbg !111
  %3314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i419, float %2547, float %2547) #5, !dbg !111
  %3315 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i419, float %2547, float %2547) #5, !dbg !111
  %.02.i421 = select i1 %.not5.i420, float %3315, float %3314, !dbg !111
  br label %__nv_tanhf.exit422, !dbg !111

__nv_tanhf.exit422:                               ; preds = %__internal_fmad.exit1.i406, %__internal_fmad.exit3.i411
  %s.1.i410 = phi float [ %3299, %__internal_fmad.exit1.i406 ], [ %.02.i421, %__internal_fmad.exit3.i411 ], !dbg !111
  %3316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i423 = icmp eq i32 %3316, 0, !dbg !111
  %3317 = tail call float @llvm.nvvm.fabs.ftz.f(float %2548) #5, !dbg !111
  %3318 = tail call float @llvm.nvvm.fabs.f(float %2548) #5, !dbg !111
  %.01.i424 = select i1 %.not.i423, float %3318, float %3317, !dbg !111
  %3319 = fcmp ult float %.01.i424, 0x3FE3333340000000, !dbg !111
  br i1 %3319, label %__internal_fmad.exit3.i430, label %__internal_fmad.exit1.i425, !dbg !111

__internal_fmad.exit1.i425:                       ; preds = %__nv_tanhf.exit422
  %3320 = fmul float %.01.i424, 0x4007154760000000, !dbg !111
  %3321 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3320) #5, !dbg !111
  %3322 = fadd float %3321, 1.000000e+00, !dbg !111
  %3323 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3322) #6, !dbg !111, !srcloc !38
  %3324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i426 = icmp eq i32 %3324, 0, !dbg !111
  %3325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3323, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3326 = tail call float @llvm.nvvm.fma.rn.f(float %3323, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i427 = select i1 %.not6.i426, float %3326, float %3325, !dbg !111
  %3327 = fcmp oge float %.01.i424, 0x4022059680000000, !dbg !111
  %s.0.i428 = select i1 %3327, float 1.000000e+00, float %.03.i427, !dbg !111
  %3328 = bitcast float %s.0.i428 to i32, !dbg !111
  %3329 = bitcast float %2548 to i32, !dbg !111
  %3330 = and i32 %3329, -2147483648, !dbg !111
  %3331 = or i32 %3330, %3328, !dbg !111
  %3332 = bitcast i32 %3331 to float, !dbg !111
  br label %__nv_tanhf.exit441, !dbg !111

__internal_fmad.exit3.i430:                       ; preds = %__nv_tanhf.exit422
  %3333 = fmul float %2548, %2548, !dbg !111
  %3334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i431 = icmp eq i32 %3334, 0, !dbg !111
  %3335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3333, float 0xBFAAC795C0000000) #5, !dbg !111
  %3336 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3333, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i432 = select i1 %.not1.i431, float %3336, float %3335, !dbg !111
  %3337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i433 = icmp eq i32 %3337, 0, !dbg !111
  %3338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i432, float %3333, float 0x3FC10B2820000000) #5, !dbg !111
  %3339 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i432, float %3333, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i434 = select i1 %.not2.i433, float %3339, float %3338, !dbg !111
  %3340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i435 = icmp eq i32 %3340, 0, !dbg !111
  %3341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i434, float %3333, float 0xBFD5553DA0000000) #5, !dbg !111
  %3342 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i434, float %3333, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i436 = select i1 %.not3.i435, float %3342, float %3341, !dbg !111
  %3343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i437 = icmp eq i32 %3343, 0, !dbg !111
  %3344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i436, float %3333, float 0.000000e+00) #5, !dbg !111
  %3345 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i436, float %3333, float 0.000000e+00) #5, !dbg !111
  %.04.i438 = select i1 %.not4.i437, float %3345, float %3344, !dbg !111
  %3346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i439 = icmp eq i32 %3346, 0, !dbg !111
  %3347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i438, float %2548, float %2548) #5, !dbg !111
  %3348 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i438, float %2548, float %2548) #5, !dbg !111
  %.02.i440 = select i1 %.not5.i439, float %3348, float %3347, !dbg !111
  br label %__nv_tanhf.exit441, !dbg !111

__nv_tanhf.exit441:                               ; preds = %__internal_fmad.exit1.i425, %__internal_fmad.exit3.i430
  %s.1.i429 = phi float [ %3332, %__internal_fmad.exit1.i425 ], [ %.02.i440, %__internal_fmad.exit3.i430 ], !dbg !111
  %3349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i442 = icmp eq i32 %3349, 0, !dbg !111
  %3350 = tail call float @llvm.nvvm.fabs.ftz.f(float %2549) #5, !dbg !111
  %3351 = tail call float @llvm.nvvm.fabs.f(float %2549) #5, !dbg !111
  %.01.i443 = select i1 %.not.i442, float %3351, float %3350, !dbg !111
  %3352 = fcmp ult float %.01.i443, 0x3FE3333340000000, !dbg !111
  br i1 %3352, label %__internal_fmad.exit3.i449, label %__internal_fmad.exit1.i444, !dbg !111

__internal_fmad.exit1.i444:                       ; preds = %__nv_tanhf.exit441
  %3353 = fmul float %.01.i443, 0x4007154760000000, !dbg !111
  %3354 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3353) #5, !dbg !111
  %3355 = fadd float %3354, 1.000000e+00, !dbg !111
  %3356 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3355) #6, !dbg !111, !srcloc !38
  %3357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i445 = icmp eq i32 %3357, 0, !dbg !111
  %3358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3356, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3359 = tail call float @llvm.nvvm.fma.rn.f(float %3356, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i446 = select i1 %.not6.i445, float %3359, float %3358, !dbg !111
  %3360 = fcmp oge float %.01.i443, 0x4022059680000000, !dbg !111
  %s.0.i447 = select i1 %3360, float 1.000000e+00, float %.03.i446, !dbg !111
  %3361 = bitcast float %s.0.i447 to i32, !dbg !111
  %3362 = bitcast float %2549 to i32, !dbg !111
  %3363 = and i32 %3362, -2147483648, !dbg !111
  %3364 = or i32 %3363, %3361, !dbg !111
  %3365 = bitcast i32 %3364 to float, !dbg !111
  br label %__nv_tanhf.exit460, !dbg !111

__internal_fmad.exit3.i449:                       ; preds = %__nv_tanhf.exit441
  %3366 = fmul float %2549, %2549, !dbg !111
  %3367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i450 = icmp eq i32 %3367, 0, !dbg !111
  %3368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3366, float 0xBFAAC795C0000000) #5, !dbg !111
  %3369 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3366, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i451 = select i1 %.not1.i450, float %3369, float %3368, !dbg !111
  %3370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i452 = icmp eq i32 %3370, 0, !dbg !111
  %3371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i451, float %3366, float 0x3FC10B2820000000) #5, !dbg !111
  %3372 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i451, float %3366, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i453 = select i1 %.not2.i452, float %3372, float %3371, !dbg !111
  %3373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i454 = icmp eq i32 %3373, 0, !dbg !111
  %3374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i453, float %3366, float 0xBFD5553DA0000000) #5, !dbg !111
  %3375 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i453, float %3366, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i455 = select i1 %.not3.i454, float %3375, float %3374, !dbg !111
  %3376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i456 = icmp eq i32 %3376, 0, !dbg !111
  %3377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i455, float %3366, float 0.000000e+00) #5, !dbg !111
  %3378 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i455, float %3366, float 0.000000e+00) #5, !dbg !111
  %.04.i457 = select i1 %.not4.i456, float %3378, float %3377, !dbg !111
  %3379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i458 = icmp eq i32 %3379, 0, !dbg !111
  %3380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i457, float %2549, float %2549) #5, !dbg !111
  %3381 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i457, float %2549, float %2549) #5, !dbg !111
  %.02.i459 = select i1 %.not5.i458, float %3381, float %3380, !dbg !111
  br label %__nv_tanhf.exit460, !dbg !111

__nv_tanhf.exit460:                               ; preds = %__internal_fmad.exit1.i444, %__internal_fmad.exit3.i449
  %s.1.i448 = phi float [ %3365, %__internal_fmad.exit1.i444 ], [ %.02.i459, %__internal_fmad.exit3.i449 ], !dbg !111
  %3382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i461 = icmp eq i32 %3382, 0, !dbg !111
  %3383 = tail call float @llvm.nvvm.fabs.ftz.f(float %2550) #5, !dbg !111
  %3384 = tail call float @llvm.nvvm.fabs.f(float %2550) #5, !dbg !111
  %.01.i462 = select i1 %.not.i461, float %3384, float %3383, !dbg !111
  %3385 = fcmp ult float %.01.i462, 0x3FE3333340000000, !dbg !111
  br i1 %3385, label %__internal_fmad.exit3.i468, label %__internal_fmad.exit1.i463, !dbg !111

__internal_fmad.exit1.i463:                       ; preds = %__nv_tanhf.exit460
  %3386 = fmul float %.01.i462, 0x4007154760000000, !dbg !111
  %3387 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3386) #5, !dbg !111
  %3388 = fadd float %3387, 1.000000e+00, !dbg !111
  %3389 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3388) #6, !dbg !111, !srcloc !38
  %3390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i464 = icmp eq i32 %3390, 0, !dbg !111
  %3391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3389, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3392 = tail call float @llvm.nvvm.fma.rn.f(float %3389, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i465 = select i1 %.not6.i464, float %3392, float %3391, !dbg !111
  %3393 = fcmp oge float %.01.i462, 0x4022059680000000, !dbg !111
  %s.0.i466 = select i1 %3393, float 1.000000e+00, float %.03.i465, !dbg !111
  %3394 = bitcast float %s.0.i466 to i32, !dbg !111
  %3395 = bitcast float %2550 to i32, !dbg !111
  %3396 = and i32 %3395, -2147483648, !dbg !111
  %3397 = or i32 %3396, %3394, !dbg !111
  %3398 = bitcast i32 %3397 to float, !dbg !111
  br label %__nv_tanhf.exit479, !dbg !111

__internal_fmad.exit3.i468:                       ; preds = %__nv_tanhf.exit460
  %3399 = fmul float %2550, %2550, !dbg !111
  %3400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i469 = icmp eq i32 %3400, 0, !dbg !111
  %3401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3399, float 0xBFAAC795C0000000) #5, !dbg !111
  %3402 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3399, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i470 = select i1 %.not1.i469, float %3402, float %3401, !dbg !111
  %3403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i471 = icmp eq i32 %3403, 0, !dbg !111
  %3404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i470, float %3399, float 0x3FC10B2820000000) #5, !dbg !111
  %3405 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i470, float %3399, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i472 = select i1 %.not2.i471, float %3405, float %3404, !dbg !111
  %3406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i473 = icmp eq i32 %3406, 0, !dbg !111
  %3407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i472, float %3399, float 0xBFD5553DA0000000) #5, !dbg !111
  %3408 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i472, float %3399, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i474 = select i1 %.not3.i473, float %3408, float %3407, !dbg !111
  %3409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i475 = icmp eq i32 %3409, 0, !dbg !111
  %3410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i474, float %3399, float 0.000000e+00) #5, !dbg !111
  %3411 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i474, float %3399, float 0.000000e+00) #5, !dbg !111
  %.04.i476 = select i1 %.not4.i475, float %3411, float %3410, !dbg !111
  %3412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i477 = icmp eq i32 %3412, 0, !dbg !111
  %3413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i476, float %2550, float %2550) #5, !dbg !111
  %3414 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i476, float %2550, float %2550) #5, !dbg !111
  %.02.i478 = select i1 %.not5.i477, float %3414, float %3413, !dbg !111
  br label %__nv_tanhf.exit479, !dbg !111

__nv_tanhf.exit479:                               ; preds = %__internal_fmad.exit1.i463, %__internal_fmad.exit3.i468
  %s.1.i467 = phi float [ %3398, %__internal_fmad.exit1.i463 ], [ %.02.i478, %__internal_fmad.exit3.i468 ], !dbg !111
  %3415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i480 = icmp eq i32 %3415, 0, !dbg !111
  %3416 = tail call float @llvm.nvvm.fabs.ftz.f(float %2551) #5, !dbg !111
  %3417 = tail call float @llvm.nvvm.fabs.f(float %2551) #5, !dbg !111
  %.01.i481 = select i1 %.not.i480, float %3417, float %3416, !dbg !111
  %3418 = fcmp ult float %.01.i481, 0x3FE3333340000000, !dbg !111
  br i1 %3418, label %__internal_fmad.exit3.i487, label %__internal_fmad.exit1.i482, !dbg !111

__internal_fmad.exit1.i482:                       ; preds = %__nv_tanhf.exit479
  %3419 = fmul float %.01.i481, 0x4007154760000000, !dbg !111
  %3420 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3419) #5, !dbg !111
  %3421 = fadd float %3420, 1.000000e+00, !dbg !111
  %3422 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3421) #6, !dbg !111, !srcloc !38
  %3423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i483 = icmp eq i32 %3423, 0, !dbg !111
  %3424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3422, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3425 = tail call float @llvm.nvvm.fma.rn.f(float %3422, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i484 = select i1 %.not6.i483, float %3425, float %3424, !dbg !111
  %3426 = fcmp oge float %.01.i481, 0x4022059680000000, !dbg !111
  %s.0.i485 = select i1 %3426, float 1.000000e+00, float %.03.i484, !dbg !111
  %3427 = bitcast float %s.0.i485 to i32, !dbg !111
  %3428 = bitcast float %2551 to i32, !dbg !111
  %3429 = and i32 %3428, -2147483648, !dbg !111
  %3430 = or i32 %3429, %3427, !dbg !111
  %3431 = bitcast i32 %3430 to float, !dbg !111
  br label %__nv_tanhf.exit498, !dbg !111

__internal_fmad.exit3.i487:                       ; preds = %__nv_tanhf.exit479
  %3432 = fmul float %2551, %2551, !dbg !111
  %3433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i488 = icmp eq i32 %3433, 0, !dbg !111
  %3434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3432, float 0xBFAAC795C0000000) #5, !dbg !111
  %3435 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3432, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i489 = select i1 %.not1.i488, float %3435, float %3434, !dbg !111
  %3436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i490 = icmp eq i32 %3436, 0, !dbg !111
  %3437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i489, float %3432, float 0x3FC10B2820000000) #5, !dbg !111
  %3438 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i489, float %3432, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i491 = select i1 %.not2.i490, float %3438, float %3437, !dbg !111
  %3439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i492 = icmp eq i32 %3439, 0, !dbg !111
  %3440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i491, float %3432, float 0xBFD5553DA0000000) #5, !dbg !111
  %3441 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i491, float %3432, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i493 = select i1 %.not3.i492, float %3441, float %3440, !dbg !111
  %3442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i494 = icmp eq i32 %3442, 0, !dbg !111
  %3443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i493, float %3432, float 0.000000e+00) #5, !dbg !111
  %3444 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i493, float %3432, float 0.000000e+00) #5, !dbg !111
  %.04.i495 = select i1 %.not4.i494, float %3444, float %3443, !dbg !111
  %3445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i496 = icmp eq i32 %3445, 0, !dbg !111
  %3446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i495, float %2551, float %2551) #5, !dbg !111
  %3447 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i495, float %2551, float %2551) #5, !dbg !111
  %.02.i497 = select i1 %.not5.i496, float %3447, float %3446, !dbg !111
  br label %__nv_tanhf.exit498, !dbg !111

__nv_tanhf.exit498:                               ; preds = %__internal_fmad.exit1.i482, %__internal_fmad.exit3.i487
  %s.1.i486 = phi float [ %3431, %__internal_fmad.exit1.i482 ], [ %.02.i497, %__internal_fmad.exit3.i487 ], !dbg !111
  %3448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i499 = icmp eq i32 %3448, 0, !dbg !111
  %3449 = tail call float @llvm.nvvm.fabs.ftz.f(float %2552) #5, !dbg !111
  %3450 = tail call float @llvm.nvvm.fabs.f(float %2552) #5, !dbg !111
  %.01.i500 = select i1 %.not.i499, float %3450, float %3449, !dbg !111
  %3451 = fcmp ult float %.01.i500, 0x3FE3333340000000, !dbg !111
  br i1 %3451, label %__internal_fmad.exit3.i506, label %__internal_fmad.exit1.i501, !dbg !111

__internal_fmad.exit1.i501:                       ; preds = %__nv_tanhf.exit498
  %3452 = fmul float %.01.i500, 0x4007154760000000, !dbg !111
  %3453 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3452) #5, !dbg !111
  %3454 = fadd float %3453, 1.000000e+00, !dbg !111
  %3455 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3454) #6, !dbg !111, !srcloc !38
  %3456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i502 = icmp eq i32 %3456, 0, !dbg !111
  %3457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3455, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3458 = tail call float @llvm.nvvm.fma.rn.f(float %3455, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i503 = select i1 %.not6.i502, float %3458, float %3457, !dbg !111
  %3459 = fcmp oge float %.01.i500, 0x4022059680000000, !dbg !111
  %s.0.i504 = select i1 %3459, float 1.000000e+00, float %.03.i503, !dbg !111
  %3460 = bitcast float %s.0.i504 to i32, !dbg !111
  %3461 = bitcast float %2552 to i32, !dbg !111
  %3462 = and i32 %3461, -2147483648, !dbg !111
  %3463 = or i32 %3462, %3460, !dbg !111
  %3464 = bitcast i32 %3463 to float, !dbg !111
  br label %__nv_tanhf.exit517, !dbg !111

__internal_fmad.exit3.i506:                       ; preds = %__nv_tanhf.exit498
  %3465 = fmul float %2552, %2552, !dbg !111
  %3466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i507 = icmp eq i32 %3466, 0, !dbg !111
  %3467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3465, float 0xBFAAC795C0000000) #5, !dbg !111
  %3468 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3465, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i508 = select i1 %.not1.i507, float %3468, float %3467, !dbg !111
  %3469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i509 = icmp eq i32 %3469, 0, !dbg !111
  %3470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i508, float %3465, float 0x3FC10B2820000000) #5, !dbg !111
  %3471 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i508, float %3465, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i510 = select i1 %.not2.i509, float %3471, float %3470, !dbg !111
  %3472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i511 = icmp eq i32 %3472, 0, !dbg !111
  %3473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i510, float %3465, float 0xBFD5553DA0000000) #5, !dbg !111
  %3474 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i510, float %3465, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i512 = select i1 %.not3.i511, float %3474, float %3473, !dbg !111
  %3475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i513 = icmp eq i32 %3475, 0, !dbg !111
  %3476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i512, float %3465, float 0.000000e+00) #5, !dbg !111
  %3477 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i512, float %3465, float 0.000000e+00) #5, !dbg !111
  %.04.i514 = select i1 %.not4.i513, float %3477, float %3476, !dbg !111
  %3478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i515 = icmp eq i32 %3478, 0, !dbg !111
  %3479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i514, float %2552, float %2552) #5, !dbg !111
  %3480 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i514, float %2552, float %2552) #5, !dbg !111
  %.02.i516 = select i1 %.not5.i515, float %3480, float %3479, !dbg !111
  br label %__nv_tanhf.exit517, !dbg !111

__nv_tanhf.exit517:                               ; preds = %__internal_fmad.exit1.i501, %__internal_fmad.exit3.i506
  %s.1.i505 = phi float [ %3464, %__internal_fmad.exit1.i501 ], [ %.02.i516, %__internal_fmad.exit3.i506 ], !dbg !111
  %3481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i518 = icmp eq i32 %3481, 0, !dbg !111
  %3482 = tail call float @llvm.nvvm.fabs.ftz.f(float %2553) #5, !dbg !111
  %3483 = tail call float @llvm.nvvm.fabs.f(float %2553) #5, !dbg !111
  %.01.i519 = select i1 %.not.i518, float %3483, float %3482, !dbg !111
  %3484 = fcmp ult float %.01.i519, 0x3FE3333340000000, !dbg !111
  br i1 %3484, label %__internal_fmad.exit3.i525, label %__internal_fmad.exit1.i520, !dbg !111

__internal_fmad.exit1.i520:                       ; preds = %__nv_tanhf.exit517
  %3485 = fmul float %.01.i519, 0x4007154760000000, !dbg !111
  %3486 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3485) #5, !dbg !111
  %3487 = fadd float %3486, 1.000000e+00, !dbg !111
  %3488 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3487) #6, !dbg !111, !srcloc !38
  %3489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i521 = icmp eq i32 %3489, 0, !dbg !111
  %3490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3488, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3491 = tail call float @llvm.nvvm.fma.rn.f(float %3488, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i522 = select i1 %.not6.i521, float %3491, float %3490, !dbg !111
  %3492 = fcmp oge float %.01.i519, 0x4022059680000000, !dbg !111
  %s.0.i523 = select i1 %3492, float 1.000000e+00, float %.03.i522, !dbg !111
  %3493 = bitcast float %s.0.i523 to i32, !dbg !111
  %3494 = bitcast float %2553 to i32, !dbg !111
  %3495 = and i32 %3494, -2147483648, !dbg !111
  %3496 = or i32 %3495, %3493, !dbg !111
  %3497 = bitcast i32 %3496 to float, !dbg !111
  br label %__nv_tanhf.exit536, !dbg !111

__internal_fmad.exit3.i525:                       ; preds = %__nv_tanhf.exit517
  %3498 = fmul float %2553, %2553, !dbg !111
  %3499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i526 = icmp eq i32 %3499, 0, !dbg !111
  %3500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3498, float 0xBFAAC795C0000000) #5, !dbg !111
  %3501 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3498, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i527 = select i1 %.not1.i526, float %3501, float %3500, !dbg !111
  %3502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i528 = icmp eq i32 %3502, 0, !dbg !111
  %3503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i527, float %3498, float 0x3FC10B2820000000) #5, !dbg !111
  %3504 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i527, float %3498, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i529 = select i1 %.not2.i528, float %3504, float %3503, !dbg !111
  %3505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i530 = icmp eq i32 %3505, 0, !dbg !111
  %3506 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i529, float %3498, float 0xBFD5553DA0000000) #5, !dbg !111
  %3507 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i529, float %3498, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i531 = select i1 %.not3.i530, float %3507, float %3506, !dbg !111
  %3508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i532 = icmp eq i32 %3508, 0, !dbg !111
  %3509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i531, float %3498, float 0.000000e+00) #5, !dbg !111
  %3510 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i531, float %3498, float 0.000000e+00) #5, !dbg !111
  %.04.i533 = select i1 %.not4.i532, float %3510, float %3509, !dbg !111
  %3511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i534 = icmp eq i32 %3511, 0, !dbg !111
  %3512 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i533, float %2553, float %2553) #5, !dbg !111
  %3513 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i533, float %2553, float %2553) #5, !dbg !111
  %.02.i535 = select i1 %.not5.i534, float %3513, float %3512, !dbg !111
  br label %__nv_tanhf.exit536, !dbg !111

__nv_tanhf.exit536:                               ; preds = %__internal_fmad.exit1.i520, %__internal_fmad.exit3.i525
  %s.1.i524 = phi float [ %3497, %__internal_fmad.exit1.i520 ], [ %.02.i535, %__internal_fmad.exit3.i525 ], !dbg !111
  %3514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i537 = icmp eq i32 %3514, 0, !dbg !111
  %3515 = tail call float @llvm.nvvm.fabs.ftz.f(float %2554) #5, !dbg !111
  %3516 = tail call float @llvm.nvvm.fabs.f(float %2554) #5, !dbg !111
  %.01.i538 = select i1 %.not.i537, float %3516, float %3515, !dbg !111
  %3517 = fcmp ult float %.01.i538, 0x3FE3333340000000, !dbg !111
  br i1 %3517, label %__internal_fmad.exit3.i544, label %__internal_fmad.exit1.i539, !dbg !111

__internal_fmad.exit1.i539:                       ; preds = %__nv_tanhf.exit536
  %3518 = fmul float %.01.i538, 0x4007154760000000, !dbg !111
  %3519 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3518) #5, !dbg !111
  %3520 = fadd float %3519, 1.000000e+00, !dbg !111
  %3521 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3520) #6, !dbg !111, !srcloc !38
  %3522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i540 = icmp eq i32 %3522, 0, !dbg !111
  %3523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3521, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3524 = tail call float @llvm.nvvm.fma.rn.f(float %3521, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i541 = select i1 %.not6.i540, float %3524, float %3523, !dbg !111
  %3525 = fcmp oge float %.01.i538, 0x4022059680000000, !dbg !111
  %s.0.i542 = select i1 %3525, float 1.000000e+00, float %.03.i541, !dbg !111
  %3526 = bitcast float %s.0.i542 to i32, !dbg !111
  %3527 = bitcast float %2554 to i32, !dbg !111
  %3528 = and i32 %3527, -2147483648, !dbg !111
  %3529 = or i32 %3528, %3526, !dbg !111
  %3530 = bitcast i32 %3529 to float, !dbg !111
  br label %__nv_tanhf.exit555, !dbg !111

__internal_fmad.exit3.i544:                       ; preds = %__nv_tanhf.exit536
  %3531 = fmul float %2554, %2554, !dbg !111
  %3532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i545 = icmp eq i32 %3532, 0, !dbg !111
  %3533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3531, float 0xBFAAC795C0000000) #5, !dbg !111
  %3534 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3531, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i546 = select i1 %.not1.i545, float %3534, float %3533, !dbg !111
  %3535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i547 = icmp eq i32 %3535, 0, !dbg !111
  %3536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i546, float %3531, float 0x3FC10B2820000000) #5, !dbg !111
  %3537 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i546, float %3531, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i548 = select i1 %.not2.i547, float %3537, float %3536, !dbg !111
  %3538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i549 = icmp eq i32 %3538, 0, !dbg !111
  %3539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i548, float %3531, float 0xBFD5553DA0000000) #5, !dbg !111
  %3540 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i548, float %3531, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i550 = select i1 %.not3.i549, float %3540, float %3539, !dbg !111
  %3541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i551 = icmp eq i32 %3541, 0, !dbg !111
  %3542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i550, float %3531, float 0.000000e+00) #5, !dbg !111
  %3543 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i550, float %3531, float 0.000000e+00) #5, !dbg !111
  %.04.i552 = select i1 %.not4.i551, float %3543, float %3542, !dbg !111
  %3544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i553 = icmp eq i32 %3544, 0, !dbg !111
  %3545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i552, float %2554, float %2554) #5, !dbg !111
  %3546 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i552, float %2554, float %2554) #5, !dbg !111
  %.02.i554 = select i1 %.not5.i553, float %3546, float %3545, !dbg !111
  br label %__nv_tanhf.exit555, !dbg !111

__nv_tanhf.exit555:                               ; preds = %__internal_fmad.exit1.i539, %__internal_fmad.exit3.i544
  %s.1.i543 = phi float [ %3530, %__internal_fmad.exit1.i539 ], [ %.02.i554, %__internal_fmad.exit3.i544 ], !dbg !111
  %3547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i556 = icmp eq i32 %3547, 0, !dbg !111
  %3548 = tail call float @llvm.nvvm.fabs.ftz.f(float %2555) #5, !dbg !111
  %3549 = tail call float @llvm.nvvm.fabs.f(float %2555) #5, !dbg !111
  %.01.i557 = select i1 %.not.i556, float %3549, float %3548, !dbg !111
  %3550 = fcmp ult float %.01.i557, 0x3FE3333340000000, !dbg !111
  br i1 %3550, label %__internal_fmad.exit3.i563, label %__internal_fmad.exit1.i558, !dbg !111

__internal_fmad.exit1.i558:                       ; preds = %__nv_tanhf.exit555
  %3551 = fmul float %.01.i557, 0x4007154760000000, !dbg !111
  %3552 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3551) #5, !dbg !111
  %3553 = fadd float %3552, 1.000000e+00, !dbg !111
  %3554 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3553) #6, !dbg !111, !srcloc !38
  %3555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i559 = icmp eq i32 %3555, 0, !dbg !111
  %3556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3554, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3557 = tail call float @llvm.nvvm.fma.rn.f(float %3554, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i560 = select i1 %.not6.i559, float %3557, float %3556, !dbg !111
  %3558 = fcmp oge float %.01.i557, 0x4022059680000000, !dbg !111
  %s.0.i561 = select i1 %3558, float 1.000000e+00, float %.03.i560, !dbg !111
  %3559 = bitcast float %s.0.i561 to i32, !dbg !111
  %3560 = bitcast float %2555 to i32, !dbg !111
  %3561 = and i32 %3560, -2147483648, !dbg !111
  %3562 = or i32 %3561, %3559, !dbg !111
  %3563 = bitcast i32 %3562 to float, !dbg !111
  br label %__nv_tanhf.exit574, !dbg !111

__internal_fmad.exit3.i563:                       ; preds = %__nv_tanhf.exit555
  %3564 = fmul float %2555, %2555, !dbg !111
  %3565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i564 = icmp eq i32 %3565, 0, !dbg !111
  %3566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3564, float 0xBFAAC795C0000000) #5, !dbg !111
  %3567 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3564, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i565 = select i1 %.not1.i564, float %3567, float %3566, !dbg !111
  %3568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i566 = icmp eq i32 %3568, 0, !dbg !111
  %3569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i565, float %3564, float 0x3FC10B2820000000) #5, !dbg !111
  %3570 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i565, float %3564, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i567 = select i1 %.not2.i566, float %3570, float %3569, !dbg !111
  %3571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i568 = icmp eq i32 %3571, 0, !dbg !111
  %3572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i567, float %3564, float 0xBFD5553DA0000000) #5, !dbg !111
  %3573 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i567, float %3564, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i569 = select i1 %.not3.i568, float %3573, float %3572, !dbg !111
  %3574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i570 = icmp eq i32 %3574, 0, !dbg !111
  %3575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i569, float %3564, float 0.000000e+00) #5, !dbg !111
  %3576 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i569, float %3564, float 0.000000e+00) #5, !dbg !111
  %.04.i571 = select i1 %.not4.i570, float %3576, float %3575, !dbg !111
  %3577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i572 = icmp eq i32 %3577, 0, !dbg !111
  %3578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i571, float %2555, float %2555) #5, !dbg !111
  %3579 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i571, float %2555, float %2555) #5, !dbg !111
  %.02.i573 = select i1 %.not5.i572, float %3579, float %3578, !dbg !111
  br label %__nv_tanhf.exit574, !dbg !111

__nv_tanhf.exit574:                               ; preds = %__internal_fmad.exit1.i558, %__internal_fmad.exit3.i563
  %s.1.i562 = phi float [ %3563, %__internal_fmad.exit1.i558 ], [ %.02.i573, %__internal_fmad.exit3.i563 ], !dbg !111
  %3580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not.i575 = icmp eq i32 %3580, 0, !dbg !111
  %3581 = tail call float @llvm.nvvm.fabs.ftz.f(float %2556) #5, !dbg !111
  %3582 = tail call float @llvm.nvvm.fabs.f(float %2556) #5, !dbg !111
  %.01.i576 = select i1 %.not.i575, float %3582, float %3581, !dbg !111
  %3583 = fcmp ult float %.01.i576, 0x3FE3333340000000, !dbg !111
  br i1 %3583, label %__internal_fmad.exit3.i582, label %__internal_fmad.exit1.i577, !dbg !111

__internal_fmad.exit1.i577:                       ; preds = %__nv_tanhf.exit574
  %3584 = fmul float %.01.i576, 0x4007154760000000, !dbg !111
  %3585 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %3584) #5, !dbg !111
  %3586 = fadd float %3585, 1.000000e+00, !dbg !111
  %3587 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %3586) #6, !dbg !111, !srcloc !38
  %3588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not6.i578 = icmp eq i32 %3588, 0, !dbg !111
  %3589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %3587, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %3590 = tail call float @llvm.nvvm.fma.rn.f(float %3587, float -2.000000e+00, float 1.000000e+00) #5, !dbg !111
  %.03.i579 = select i1 %.not6.i578, float %3590, float %3589, !dbg !111
  %3591 = fcmp oge float %.01.i576, 0x4022059680000000, !dbg !111
  %s.0.i580 = select i1 %3591, float 1.000000e+00, float %.03.i579, !dbg !111
  %3592 = bitcast float %s.0.i580 to i32, !dbg !111
  %3593 = bitcast float %2556 to i32, !dbg !111
  %3594 = and i32 %3593, -2147483648, !dbg !111
  %3595 = or i32 %3594, %3592, !dbg !111
  %3596 = bitcast i32 %3595 to float, !dbg !111
  br label %__nv_tanhf.exit593, !dbg !111

__internal_fmad.exit3.i582:                       ; preds = %__nv_tanhf.exit574
  %3597 = fmul float %2556, %2556, !dbg !111
  %3598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not1.i583 = icmp eq i32 %3598, 0, !dbg !111
  %3599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %3597, float 0xBFAAC795C0000000) #5, !dbg !111
  %3600 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %3597, float 0xBFAAC795C0000000) #5, !dbg !111
  %.06.i584 = select i1 %.not1.i583, float %3600, float %3599, !dbg !111
  %3601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not2.i585 = icmp eq i32 %3601, 0, !dbg !111
  %3602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i584, float %3597, float 0x3FC10B2820000000) #5, !dbg !111
  %3603 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i584, float %3597, float 0x3FC10B2820000000) #5, !dbg !111
  %.05.i586 = select i1 %.not2.i585, float %3603, float %3602, !dbg !111
  %3604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not3.i587 = icmp eq i32 %3604, 0, !dbg !111
  %3605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i586, float %3597, float 0xBFD5553DA0000000) #5, !dbg !111
  %3606 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i586, float %3597, float 0xBFD5553DA0000000) #5, !dbg !111
  %.0.i588 = select i1 %.not3.i587, float %3606, float %3605, !dbg !111
  %3607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not4.i589 = icmp eq i32 %3607, 0, !dbg !111
  %3608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i588, float %3597, float 0.000000e+00) #5, !dbg !111
  %3609 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i588, float %3597, float 0.000000e+00) #5, !dbg !111
  %.04.i590 = select i1 %.not4.i589, float %3609, float %3608, !dbg !111
  %3610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !111
  %.not5.i591 = icmp eq i32 %3610, 0, !dbg !111
  %3611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i590, float %2556, float %2556) #5, !dbg !111
  %3612 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i590, float %2556, float %2556) #5, !dbg !111
  %.02.i592 = select i1 %.not5.i591, float %3612, float %3611, !dbg !111
  br label %__nv_tanhf.exit593, !dbg !111

__nv_tanhf.exit593:                               ; preds = %__internal_fmad.exit1.i577, %__internal_fmad.exit3.i582
  %s.1.i581 = phi float [ %3596, %__internal_fmad.exit1.i577 ], [ %.02.i592, %__internal_fmad.exit3.i582 ], !dbg !111
  %3613 = fadd float %s.1.i, 1.000000e+00, !dbg !112
  %3614 = fadd float %s.1.i11, 1.000000e+00, !dbg !112
  %3615 = fadd float %s.1.i30, 1.000000e+00, !dbg !112
  %3616 = fadd float %s.1.i49, 1.000000e+00, !dbg !112
  %3617 = fadd float %s.1.i68, 1.000000e+00, !dbg !112
  %3618 = fadd float %s.1.i87, 1.000000e+00, !dbg !112
  %3619 = fadd float %s.1.i106, 1.000000e+00, !dbg !112
  %3620 = fadd float %s.1.i125, 1.000000e+00, !dbg !112
  %3621 = fadd float %s.1.i144, 1.000000e+00, !dbg !112
  %3622 = fadd float %s.1.i163, 1.000000e+00, !dbg !112
  %3623 = fadd float %s.1.i182, 1.000000e+00, !dbg !112
  %3624 = fadd float %s.1.i201, 1.000000e+00, !dbg !112
  %3625 = fadd float %s.1.i220, 1.000000e+00, !dbg !112
  %3626 = fadd float %s.1.i239, 1.000000e+00, !dbg !112
  %3627 = fadd float %s.1.i258, 1.000000e+00, !dbg !112
  %3628 = fadd float %s.1.i277, 1.000000e+00, !dbg !112
  %3629 = fadd float %s.1.i296, 1.000000e+00, !dbg !112
  %3630 = fadd float %s.1.i315, 1.000000e+00, !dbg !112
  %3631 = fadd float %s.1.i334, 1.000000e+00, !dbg !112
  %3632 = fadd float %s.1.i353, 1.000000e+00, !dbg !112
  %3633 = fadd float %s.1.i372, 1.000000e+00, !dbg !112
  %3634 = fadd float %s.1.i391, 1.000000e+00, !dbg !112
  %3635 = fadd float %s.1.i410, 1.000000e+00, !dbg !112
  %3636 = fadd float %s.1.i429, 1.000000e+00, !dbg !112
  %3637 = fadd float %s.1.i448, 1.000000e+00, !dbg !112
  %3638 = fadd float %s.1.i467, 1.000000e+00, !dbg !112
  %3639 = fadd float %s.1.i486, 1.000000e+00, !dbg !112
  %3640 = fadd float %s.1.i505, 1.000000e+00, !dbg !112
  %3641 = fadd float %s.1.i524, 1.000000e+00, !dbg !112
  %3642 = fadd float %s.1.i543, 1.000000e+00, !dbg !112
  %3643 = fadd float %s.1.i562, 1.000000e+00, !dbg !112
  %3644 = fadd float %s.1.i581, 1.000000e+00, !dbg !112
  %3645 = fmul float %2365, %3613, !dbg !113
  %3646 = fmul float %2366, %3614, !dbg !113
  %3647 = fmul float %2367, %3615, !dbg !113
  %3648 = fmul float %2368, %3616, !dbg !113
  %3649 = fmul float %2369, %3617, !dbg !113
  %3650 = fmul float %2370, %3618, !dbg !113
  %3651 = fmul float %2371, %3619, !dbg !113
  %3652 = fmul float %2372, %3620, !dbg !113
  %3653 = fmul float %2373, %3621, !dbg !113
  %3654 = fmul float %2374, %3622, !dbg !113
  %3655 = fmul float %2375, %3623, !dbg !113
  %3656 = fmul float %2376, %3624, !dbg !113
  %3657 = fmul float %2377, %3625, !dbg !113
  %3658 = fmul float %2378, %3626, !dbg !113
  %3659 = fmul float %2379, %3627, !dbg !113
  %3660 = fmul float %2380, %3628, !dbg !113
  %3661 = fmul float %2381, %3629, !dbg !113
  %3662 = fmul float %2382, %3630, !dbg !113
  %3663 = fmul float %2383, %3631, !dbg !113
  %3664 = fmul float %2384, %3632, !dbg !113
  %3665 = fmul float %2385, %3633, !dbg !113
  %3666 = fmul float %2386, %3634, !dbg !113
  %3667 = fmul float %2387, %3635, !dbg !113
  %3668 = fmul float %2388, %3636, !dbg !113
  %3669 = fmul float %2389, %3637, !dbg !113
  %3670 = fmul float %2390, %3638, !dbg !113
  %3671 = fmul float %2391, %3639, !dbg !113
  %3672 = fmul float %2392, %3640, !dbg !113
  %3673 = fmul float %2393, %3641, !dbg !113
  %3674 = fmul float %2394, %3642, !dbg !113
  %3675 = fmul float %2395, %3643, !dbg !113
  %3676 = fmul float %2396, %3644, !dbg !113
  %3677 = select i1 %2153, float %2239, float %3645, !dbg !114
  %3678 = select i1 %2153, float %2240, float %3646, !dbg !114
  %3679 = select i1 %2153, float %2241, float %3647, !dbg !114
  %3680 = select i1 %2153, float %2242, float %3648, !dbg !114
  %3681 = select i1 %2153, float %2243, float %3649, !dbg !114
  %3682 = select i1 %2153, float %2244, float %3650, !dbg !114
  %3683 = select i1 %2153, float %2245, float %3651, !dbg !114
  %3684 = select i1 %2153, float %2246, float %3652, !dbg !114
  %3685 = select i1 %2153, float %2247, float %3653, !dbg !114
  %3686 = select i1 %2153, float %2248, float %3654, !dbg !114
  %3687 = select i1 %2153, float %2249, float %3655, !dbg !114
  %3688 = select i1 %2153, float %2250, float %3656, !dbg !114
  %3689 = select i1 %2153, float %2251, float %3657, !dbg !114
  %3690 = select i1 %2153, float %2252, float %3658, !dbg !114
  %3691 = select i1 %2153, float %2253, float %3659, !dbg !114
  %3692 = select i1 %2153, float %2254, float %3660, !dbg !114
  %3693 = select i1 %2153, float %2255, float %3661, !dbg !114
  %3694 = select i1 %2153, float %2256, float %3662, !dbg !114
  %3695 = select i1 %2153, float %2257, float %3663, !dbg !114
  %3696 = select i1 %2153, float %2258, float %3664, !dbg !114
  %3697 = select i1 %2153, float %2259, float %3665, !dbg !114
  %3698 = select i1 %2153, float %2260, float %3666, !dbg !114
  %3699 = select i1 %2153, float %2261, float %3667, !dbg !114
  %3700 = select i1 %2153, float %2262, float %3668, !dbg !114
  %3701 = select i1 %2153, float %2263, float %3669, !dbg !114
  %3702 = select i1 %2153, float %2264, float %3670, !dbg !114
  %3703 = select i1 %2153, float %2265, float %3671, !dbg !114
  %3704 = select i1 %2153, float %2266, float %3672, !dbg !114
  %3705 = select i1 %2153, float %2267, float %3673, !dbg !114
  %3706 = select i1 %2153, float %2268, float %3674, !dbg !114
  %3707 = select i1 %2153, float %2269, float %3675, !dbg !114
  %3708 = select i1 %2153, float %2270, float %3676, !dbg !114
  %3709 = fmul float %2145, %3677, !dbg !115
  %3710 = fmul float %2145, %3678, !dbg !115
  %3711 = fmul float %2145, %3679, !dbg !115
  %3712 = fmul float %2145, %3680, !dbg !115
  %3713 = fmul float %2145, %3681, !dbg !115
  %3714 = fmul float %2145, %3682, !dbg !115
  %3715 = fmul float %2145, %3683, !dbg !115
  %3716 = fmul float %2145, %3684, !dbg !115
  %3717 = fmul float %2145, %3685, !dbg !115
  %3718 = fmul float %2145, %3686, !dbg !115
  %3719 = fmul float %2145, %3687, !dbg !115
  %3720 = fmul float %2145, %3688, !dbg !115
  %3721 = fmul float %2145, %3689, !dbg !115
  %3722 = fmul float %2145, %3690, !dbg !115
  %3723 = fmul float %2145, %3691, !dbg !115
  %3724 = fmul float %2145, %3692, !dbg !115
  %3725 = fmul float %2146, %3693, !dbg !115
  %3726 = fmul float %2146, %3694, !dbg !115
  %3727 = fmul float %2146, %3695, !dbg !115
  %3728 = fmul float %2146, %3696, !dbg !115
  %3729 = fmul float %2146, %3697, !dbg !115
  %3730 = fmul float %2146, %3698, !dbg !115
  %3731 = fmul float %2146, %3699, !dbg !115
  %3732 = fmul float %2146, %3700, !dbg !115
  %3733 = fmul float %2146, %3701, !dbg !115
  %3734 = fmul float %2146, %3702, !dbg !115
  %3735 = fmul float %2146, %3703, !dbg !115
  %3736 = fmul float %2146, %3704, !dbg !115
  %3737 = fmul float %2146, %3705, !dbg !115
  %3738 = fmul float %2146, %3706, !dbg !115
  %3739 = fmul float %2146, %3707, !dbg !115
  %3740 = fmul float %2146, %3708, !dbg !115
  %3741 = tail call float @llvm.nvvm.round.f(float %3709) #5, !dbg !116
  %3742 = tail call float @llvm.nvvm.round.f(float %3710) #5, !dbg !116
  %3743 = tail call float @llvm.nvvm.round.f(float %3711) #5, !dbg !116
  %3744 = tail call float @llvm.nvvm.round.f(float %3712) #5, !dbg !116
  %3745 = tail call float @llvm.nvvm.round.f(float %3713) #5, !dbg !116
  %3746 = tail call float @llvm.nvvm.round.f(float %3714) #5, !dbg !116
  %3747 = tail call float @llvm.nvvm.round.f(float %3715) #5, !dbg !116
  %3748 = tail call float @llvm.nvvm.round.f(float %3716) #5, !dbg !116
  %3749 = tail call float @llvm.nvvm.round.f(float %3717) #5, !dbg !116
  %3750 = tail call float @llvm.nvvm.round.f(float %3718) #5, !dbg !116
  %3751 = tail call float @llvm.nvvm.round.f(float %3719) #5, !dbg !116
  %3752 = tail call float @llvm.nvvm.round.f(float %3720) #5, !dbg !116
  %3753 = tail call float @llvm.nvvm.round.f(float %3721) #5, !dbg !116
  %3754 = tail call float @llvm.nvvm.round.f(float %3722) #5, !dbg !116
  %3755 = tail call float @llvm.nvvm.round.f(float %3723) #5, !dbg !116
  %3756 = tail call float @llvm.nvvm.round.f(float %3724) #5, !dbg !116
  %3757 = tail call float @llvm.nvvm.round.f(float %3725) #5, !dbg !116
  %3758 = tail call float @llvm.nvvm.round.f(float %3726) #5, !dbg !116
  %3759 = tail call float @llvm.nvvm.round.f(float %3727) #5, !dbg !116
  %3760 = tail call float @llvm.nvvm.round.f(float %3728) #5, !dbg !116
  %3761 = tail call float @llvm.nvvm.round.f(float %3729) #5, !dbg !116
  %3762 = tail call float @llvm.nvvm.round.f(float %3730) #5, !dbg !116
  %3763 = tail call float @llvm.nvvm.round.f(float %3731) #5, !dbg !116
  %3764 = tail call float @llvm.nvvm.round.f(float %3732) #5, !dbg !116
  %3765 = tail call float @llvm.nvvm.round.f(float %3733) #5, !dbg !116
  %3766 = tail call float @llvm.nvvm.round.f(float %3734) #5, !dbg !116
  %3767 = tail call float @llvm.nvvm.round.f(float %3735) #5, !dbg !116
  %3768 = tail call float @llvm.nvvm.round.f(float %3736) #5, !dbg !116
  %3769 = tail call float @llvm.nvvm.round.f(float %3737) #5, !dbg !116
  %3770 = tail call float @llvm.nvvm.round.f(float %3738) #5, !dbg !116
  %3771 = tail call float @llvm.nvvm.round.f(float %3739) #5, !dbg !116
  %3772 = tail call float @llvm.nvvm.round.f(float %3740) #5, !dbg !116
  %3773 = insertelement <4 x float> poison, float %3741, i64 0, !dbg !117
  %3774 = insertelement <4 x float> %3773, float %3742, i64 1, !dbg !117
  %3775 = insertelement <4 x float> %3774, float %3743, i64 2, !dbg !117
  %3776 = insertelement <4 x float> %3775, float %3744, i64 3, !dbg !117
  %3777 = fcmp ogt <4 x float> %3776, splat (float -1.270000e+02), !dbg !117
  %3778 = fcmp uno <4 x float> %3776, zeroinitializer, !dbg !119
  %3779 = or <4 x i1> %3777, %3778, !dbg !120
  %3780 = select <4 x i1> %3779, <4 x float> %3776, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3781 = fcmp olt <4 x float> %3780, splat (float 1.270000e+02), !dbg !122
  %3782 = fcmp uno <4 x float> %3780, zeroinitializer, !dbg !124
  %3783 = or <4 x i1> %3781, %3782, !dbg !125
  %3784 = fptosi <4 x float> %3780 to <4 x i8>, !dbg !126
  %3785 = select <4 x i1> %3783, <4 x i8> %3784, <4 x i8> splat (i8 127), !dbg !127
  %3786 = insertelement <4 x float> poison, float %3745, i64 0, !dbg !117
  %3787 = insertelement <4 x float> %3786, float %3746, i64 1, !dbg !117
  %3788 = insertelement <4 x float> %3787, float %3747, i64 2, !dbg !117
  %3789 = insertelement <4 x float> %3788, float %3748, i64 3, !dbg !117
  %3790 = fcmp ogt <4 x float> %3789, splat (float -1.270000e+02), !dbg !117
  %3791 = fcmp uno <4 x float> %3789, zeroinitializer, !dbg !119
  %3792 = or <4 x i1> %3790, %3791, !dbg !120
  %3793 = select <4 x i1> %3792, <4 x float> %3789, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3794 = fcmp olt <4 x float> %3793, splat (float 1.270000e+02), !dbg !122
  %3795 = fcmp uno <4 x float> %3793, zeroinitializer, !dbg !124
  %3796 = or <4 x i1> %3794, %3795, !dbg !125
  %3797 = fptosi <4 x float> %3793 to <4 x i8>, !dbg !126
  %3798 = select <4 x i1> %3796, <4 x i8> %3797, <4 x i8> splat (i8 127), !dbg !127
  %3799 = insertelement <4 x float> poison, float %3749, i64 0, !dbg !117
  %3800 = insertelement <4 x float> %3799, float %3750, i64 1, !dbg !117
  %3801 = insertelement <4 x float> %3800, float %3751, i64 2, !dbg !117
  %3802 = insertelement <4 x float> %3801, float %3752, i64 3, !dbg !117
  %3803 = fcmp ogt <4 x float> %3802, splat (float -1.270000e+02), !dbg !117
  %3804 = fcmp uno <4 x float> %3802, zeroinitializer, !dbg !119
  %3805 = or <4 x i1> %3803, %3804, !dbg !120
  %3806 = select <4 x i1> %3805, <4 x float> %3802, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3807 = fcmp olt <4 x float> %3806, splat (float 1.270000e+02), !dbg !122
  %3808 = fcmp uno <4 x float> %3806, zeroinitializer, !dbg !124
  %3809 = or <4 x i1> %3807, %3808, !dbg !125
  %3810 = fptosi <4 x float> %3806 to <4 x i8>, !dbg !126
  %3811 = select <4 x i1> %3809, <4 x i8> %3810, <4 x i8> splat (i8 127), !dbg !127
  %3812 = insertelement <4 x float> poison, float %3753, i64 0, !dbg !117
  %3813 = insertelement <4 x float> %3812, float %3754, i64 1, !dbg !117
  %3814 = insertelement <4 x float> %3813, float %3755, i64 2, !dbg !117
  %3815 = insertelement <4 x float> %3814, float %3756, i64 3, !dbg !117
  %3816 = fcmp ogt <4 x float> %3815, splat (float -1.270000e+02), !dbg !117
  %3817 = fcmp uno <4 x float> %3815, zeroinitializer, !dbg !119
  %3818 = or <4 x i1> %3816, %3817, !dbg !120
  %3819 = select <4 x i1> %3818, <4 x float> %3815, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3820 = fcmp olt <4 x float> %3819, splat (float 1.270000e+02), !dbg !122
  %3821 = fcmp uno <4 x float> %3819, zeroinitializer, !dbg !124
  %3822 = or <4 x i1> %3820, %3821, !dbg !125
  %3823 = fptosi <4 x float> %3819 to <4 x i8>, !dbg !126
  %3824 = select <4 x i1> %3822, <4 x i8> %3823, <4 x i8> splat (i8 127), !dbg !127
  %3825 = insertelement <4 x float> poison, float %3757, i64 0, !dbg !117
  %3826 = insertelement <4 x float> %3825, float %3758, i64 1, !dbg !117
  %3827 = insertelement <4 x float> %3826, float %3759, i64 2, !dbg !117
  %3828 = insertelement <4 x float> %3827, float %3760, i64 3, !dbg !117
  %3829 = fcmp ogt <4 x float> %3828, splat (float -1.270000e+02), !dbg !117
  %3830 = fcmp uno <4 x float> %3828, zeroinitializer, !dbg !119
  %3831 = or <4 x i1> %3829, %3830, !dbg !120
  %3832 = select <4 x i1> %3831, <4 x float> %3828, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3833 = fcmp olt <4 x float> %3832, splat (float 1.270000e+02), !dbg !122
  %3834 = fcmp uno <4 x float> %3832, zeroinitializer, !dbg !124
  %3835 = or <4 x i1> %3833, %3834, !dbg !125
  %3836 = fptosi <4 x float> %3832 to <4 x i8>, !dbg !126
  %3837 = select <4 x i1> %3835, <4 x i8> %3836, <4 x i8> splat (i8 127), !dbg !127
  %3838 = insertelement <4 x float> poison, float %3761, i64 0, !dbg !117
  %3839 = insertelement <4 x float> %3838, float %3762, i64 1, !dbg !117
  %3840 = insertelement <4 x float> %3839, float %3763, i64 2, !dbg !117
  %3841 = insertelement <4 x float> %3840, float %3764, i64 3, !dbg !117
  %3842 = fcmp ogt <4 x float> %3841, splat (float -1.270000e+02), !dbg !117
  %3843 = fcmp uno <4 x float> %3841, zeroinitializer, !dbg !119
  %3844 = or <4 x i1> %3842, %3843, !dbg !120
  %3845 = select <4 x i1> %3844, <4 x float> %3841, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3846 = fcmp olt <4 x float> %3845, splat (float 1.270000e+02), !dbg !122
  %3847 = fcmp uno <4 x float> %3845, zeroinitializer, !dbg !124
  %3848 = or <4 x i1> %3846, %3847, !dbg !125
  %3849 = fptosi <4 x float> %3845 to <4 x i8>, !dbg !126
  %3850 = select <4 x i1> %3848, <4 x i8> %3849, <4 x i8> splat (i8 127), !dbg !127
  %3851 = insertelement <4 x float> poison, float %3765, i64 0, !dbg !117
  %3852 = insertelement <4 x float> %3851, float %3766, i64 1, !dbg !117
  %3853 = insertelement <4 x float> %3852, float %3767, i64 2, !dbg !117
  %3854 = insertelement <4 x float> %3853, float %3768, i64 3, !dbg !117
  %3855 = fcmp ogt <4 x float> %3854, splat (float -1.270000e+02), !dbg !117
  %3856 = fcmp uno <4 x float> %3854, zeroinitializer, !dbg !119
  %3857 = or <4 x i1> %3855, %3856, !dbg !120
  %3858 = select <4 x i1> %3857, <4 x float> %3854, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3859 = fcmp olt <4 x float> %3858, splat (float 1.270000e+02), !dbg !122
  %3860 = fcmp uno <4 x float> %3858, zeroinitializer, !dbg !124
  %3861 = or <4 x i1> %3859, %3860, !dbg !125
  %3862 = fptosi <4 x float> %3858 to <4 x i8>, !dbg !126
  %3863 = select <4 x i1> %3861, <4 x i8> %3862, <4 x i8> splat (i8 127), !dbg !127
  %3864 = insertelement <4 x float> poison, float %3769, i64 0, !dbg !117
  %3865 = insertelement <4 x float> %3864, float %3770, i64 1, !dbg !117
  %3866 = insertelement <4 x float> %3865, float %3771, i64 2, !dbg !117
  %3867 = insertelement <4 x float> %3866, float %3772, i64 3, !dbg !117
  %3868 = fcmp ogt <4 x float> %3867, splat (float -1.270000e+02), !dbg !117
  %3869 = fcmp uno <4 x float> %3867, zeroinitializer, !dbg !119
  %3870 = or <4 x i1> %3868, %3869, !dbg !120
  %3871 = select <4 x i1> %3870, <4 x float> %3867, <4 x float> splat (float -1.270000e+02), !dbg !121
  %3872 = fcmp olt <4 x float> %3871, splat (float 1.270000e+02), !dbg !122
  %3873 = fcmp uno <4 x float> %3871, zeroinitializer, !dbg !124
  %3874 = or <4 x i1> %3872, %3873, !dbg !125
  %3875 = fptosi <4 x float> %3871 to <4 x i8>, !dbg !126
  %3876 = select <4 x i1> %3874, <4 x i8> %3875, <4 x i8> splat (i8 127), !dbg !127
  %3877 = add i32 %2147, %2154, !dbg !128
  %3878 = add i32 %2148, %2154, !dbg !128
  %3879 = sext i32 %3877 to i64, !dbg !129
  %3880 = getelementptr i8, ptr addrspace(1) %4, i64 %3879, !dbg !129
  %3881 = sext i32 %3878 to i64, !dbg !129
  %3882 = getelementptr i8, ptr addrspace(1) %4, i64 %3881, !dbg !129
  %3883 = bitcast <4 x i8> %3785 to i32, !dbg !130
  %3884 = bitcast <4 x i8> %3798 to i32, !dbg !130
  %3885 = bitcast <4 x i8> %3811 to i32, !dbg !130
  %3886 = bitcast <4 x i8> %3824 to i32, !dbg !130
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %3883, i32 %3884, i32 %3885, i32 %3886, ptr addrspace(1) %3880, i1 %2169) #5, !dbg !130
  %3887 = bitcast <4 x i8> %3837 to i32, !dbg !130
  %3888 = bitcast <4 x i8> %3850 to i32, !dbg !130
  %3889 = bitcast <4 x i8> %3863 to i32, !dbg !130
  %3890 = bitcast <4 x i8> %3876 to i32, !dbg !130
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %3887, i32 %3888, i32 %3889, i32 %3890, ptr addrspace(1) %3882, i1 %2169) #5, !dbg !130
  br i1 %2150, label %2149, label %3891, !dbg !91

3891:                                             ; preds = %__nv_tanhf.exit593
  ret void, !dbg !131
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py", directory: "/tmp/torchinductor_root/tv")
!4 = !{ptr @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", linkageName: "triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 42, column: 39, scope: !6)
!16 = !DILocation(line: 46, column: 40, scope: !6)
!17 = !DILocation(line: 31, column: 40, scope: !6)
!18 = !DILocation(line: 32, column: 31, scope: !6)
!19 = !DILocation(line: 33, column: 29, scope: !6)
!20 = !DILocation(line: 41, column: 22, scope: !6)
!21 = !DILocation(line: 42, column: 45, scope: !6)
!22 = !DILocation(line: 42, column: 34, scope: !6)
!23 = !DILocation(line: 42, column: 63, scope: !6)
!24 = !DILocation(line: 42, column: 71, scope: !6)
!25 = !DILocation(line: 42, column: 53, scope: !6)
!26 = !DILocation(line: 42, column: 121, scope: !6)
!27 = !DILocation(line: 43, column: 23, scope: !6)
!28 = !DILocation(line: 46, column: 34, scope: !6)
!29 = !DILocation(line: 46, column: 82, scope: !6)
!30 = !DILocation(line: 46, column: 64, scope: !6)
!31 = !DILocation(line: 48, column: 23, scope: !6)
!32 = !DILocation(line: 49, column: 23, scope: !6)
!33 = !DILocation(line: 50, column: 24, scope: !6)
!34 = !DILocation(line: 52, column: 24, scope: !6)
!35 = !DILocation(line: 53, column: 23, scope: !6)
!36 = !DILocation(line: 55, column: 24, scope: !6)
!37 = !DILocation(line: 56, column: 31, scope: !6)
!38 = !{i32 21046}
!39 = !DILocation(line: 58, column: 24, scope: !6)
!40 = !DILocation(line: 104, column: 21, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !6, file: !42, discriminator: 0)
!42 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!43 = !DILocation(line: 67, column: 47, scope: !6)
!44 = !DILocation(line: 96, column: 21, scope: !41, inlinedAt: !45)
!45 = !DILocation(line: 65, column: 47, scope: !6)
!46 = !DILocation(line: 59, column: 24, scope: !6)
!47 = !DILocation(line: 63, column: 37, scope: !6)
!48 = !DILocation(line: 94, column: 15, scope: !41, inlinedAt: !45)
!49 = !DILocation(line: 96, column: 16, scope: !41, inlinedAt: !45)
!50 = !DILocation(line: 97, column: 29, scope: !41, inlinedAt: !45)
!51 = !DILocation(line: 66, column: 50, scope: !6)
!52 = !DILocation(line: 102, column: 15, scope: !41, inlinedAt: !43)
!53 = !DILocation(line: 104, column: 16, scope: !41, inlinedAt: !43)
!54 = !DILocation(line: 105, column: 29, scope: !41, inlinedAt: !43)
!55 = !DILocation(line: 68, column: 50, scope: !6)
!56 = !DILocation(line: 102, column: 15, scope: !57, inlinedAt: !58)
!57 = distinct !DILexicalBlockFile(scope: !41, file: !42, discriminator: 0)
!58 = !DILocation(line: 70, column: 40, scope: !6)
!59 = !DILocation(line: 96, column: 21, scope: !57, inlinedAt: !60)
!60 = !DILocation(line: 69, column: 40, scope: !6)
!61 = !DILocation(line: 96, column: 16, scope: !57, inlinedAt: !60)
!62 = !DILocation(line: 97, column: 29, scope: !57, inlinedAt: !60)
!63 = !DILocation(line: 94, column: 15, scope: !57, inlinedAt: !60)
!64 = !DILocation(line: 110, column: 29, scope: !41, inlinedAt: !60)
!65 = !DILocation(line: 71, column: 37, scope: !6)
!66 = !DILocation(line: 115, column: 29, scope: !41, inlinedAt: !58)
!67 = !DILocation(line: 104, column: 21, scope: !57, inlinedAt: !58)
!68 = !DILocation(line: 104, column: 16, scope: !57, inlinedAt: !58)
!69 = !DILocation(line: 105, column: 29, scope: !57, inlinedAt: !58)
!70 = !DILocation(line: 72, column: 37, scope: !6)
!71 = !DILocation(line: 71, column: 25, scope: !6)
!72 = !DILocation(line: 72, column: 25, scope: !6)
!73 = !DILocation(line: 97, column: 29, scope: !41, inlinedAt: !74)
!74 = !DILocation(line: 107, column: 46, scope: !6)
!75 = !DILocation(line: 108, column: 17, scope: !6)
!76 = !DILocation(line: 105, column: 29, scope: !41, inlinedAt: !77)
!77 = !DILocation(line: 109, column: 46, scope: !6)
!78 = !DILocation(line: 102, column: 15, scope: !41, inlinedAt: !79)
!79 = !DILocation(line: 110, column: 46, scope: !6)
!80 = !DILocation(line: 104, column: 21, scope: !41, inlinedAt: !79)
!81 = !DILocation(line: 104, column: 16, scope: !41, inlinedAt: !79)
!82 = !DILocation(line: 105, column: 29, scope: !41, inlinedAt: !79)
!83 = !DILocation(line: 112, column: 24, scope: !6)
!84 = !DILocation(line: 102, column: 15, scope: !41, inlinedAt: !85)
!85 = !DILocation(line: 115, column: 46, scope: !6)
!86 = !DILocation(line: 104, column: 21, scope: !41, inlinedAt: !85)
!87 = !DILocation(line: 104, column: 16, scope: !41, inlinedAt: !85)
!88 = !DILocation(line: 105, column: 29, scope: !41, inlinedAt: !85)
!89 = !DILocation(line: 118, column: 25, scope: !6)
!90 = !DILocation(line: 130, column: 42, scope: !6)
!91 = !DILocation(line: 73, column: 40, scope: !6)
!92 = !DILocation(line: 74, column: 31, scope: !6)
!93 = !DILocation(line: 75, column: 29, scope: !6)
!94 = !DILocation(line: 83, column: 24, scope: !6)
!95 = !DILocation(line: 84, column: 46, scope: !6)
!96 = !DILocation(line: 84, column: 35, scope: !6)
!97 = !DILocation(line: 84, column: 64, scope: !6)
!98 = !DILocation(line: 84, column: 72, scope: !6)
!99 = !DILocation(line: 84, column: 54, scope: !6)
!100 = !DILocation(line: 84, column: 123, scope: !6)
!101 = !DILocation(line: 85, column: 25, scope: !6)
!102 = !DILocation(line: 88, column: 35, scope: !6)
!103 = !DILocation(line: 88, column: 83, scope: !6)
!104 = !DILocation(line: 88, column: 65, scope: !6)
!105 = !DILocation(line: 90, column: 24, scope: !6)
!106 = !DILocation(line: 91, column: 24, scope: !6)
!107 = !DILocation(line: 92, column: 24, scope: !6)
!108 = !DILocation(line: 94, column: 24, scope: !6)
!109 = !DILocation(line: 95, column: 24, scope: !6)
!110 = !DILocation(line: 97, column: 24, scope: !6)
!111 = !DILocation(line: 98, column: 31, scope: !6)
!112 = !DILocation(line: 100, column: 24, scope: !6)
!113 = !DILocation(line: 101, column: 24, scope: !6)
!114 = !DILocation(line: 105, column: 39, scope: !6)
!115 = !DILocation(line: 121, column: 24, scope: !6)
!116 = !DILocation(line: 122, column: 36, scope: !6)
!117 = !DILocation(line: 102, column: 15, scope: !41, inlinedAt: !118)
!118 = !DILocation(line: 125, column: 46, scope: !6)
!119 = !DILocation(line: 104, column: 21, scope: !41, inlinedAt: !118)
!120 = !DILocation(line: 104, column: 16, scope: !41, inlinedAt: !118)
!121 = !DILocation(line: 105, column: 29, scope: !41, inlinedAt: !118)
!122 = !DILocation(line: 94, column: 15, scope: !41, inlinedAt: !123)
!123 = !DILocation(line: 127, column: 46, scope: !6)
!124 = !DILocation(line: 96, column: 21, scope: !41, inlinedAt: !123)
!125 = !DILocation(line: 96, column: 16, scope: !41, inlinedAt: !123)
!126 = !DILocation(line: 129, column: 25, scope: !6)
!127 = !DILocation(line: 97, column: 29, scope: !41, inlinedAt: !123)
!128 = !DILocation(line: 130, column: 36, scope: !6)
!129 = !DILocation(line: 130, column: 29, scope: !6)
!130 = !DILocation(line: 130, column: 54, scope: !6)
!131 = !DILocation(line: 73, column: 4, scope: !6)
