//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<235>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<28>;
	.loc	1 17 0                          // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:17:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_bmm_param_2];
	ld.param.u64 	%rd16, [triton_bmm_param_0];
	ld.param.u64 	%rd17, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:41:24
	mov.u32 	%r43, %ctaid.x;
	.loc	1 47 22                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:47:22
	shr.s32 	%r44, %r43, 31;
	shr.u32 	%r45, %r44, 28;
	add.s32 	%r46, %r43, %r45;
	shr.s32 	%r47, %r46, 4;
	.loc	1 48 41                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:48:41
	shl.b32 	%r48, %r47, 3;
	.loc	1 48 30                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:48:30
	sub.s32 	%r49, 8, %r48;
	.loc	1 48 50                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:48:50
	min.s32 	%r50, %r49, 8;
	.loc	1 49 40                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:49:40
	rem.s32 	%r51, %r43, %r50;
	.loc	1 49 34                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:49:34
	add.s32 	%r52, %r51, %r48;
	.loc	1 50 19                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:50:19
	and.b32  	%r53, %r46, -16;
	sub.s32 	%r54, %r43, %r53;
	.loc	1 50 30                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:50:30
	div.s32 	%r55, %r54, %r50;
	.loc	1 52 17                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:52:17
	shl.b32 	%r56, %r52, 6;
	.loc	1 52 40                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:52:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 4;
	and.b32  	%r3, %r1, 16;
	shr.u32 	%r57, %r1, 2;
	and.b32  	%r4, %r57, 8;
	bfe.u32 	%r58, %r1, 2, 4;
	and.b32  	%r5, %r1, 64;
	shr.u32 	%r59, %r5, 2;
	and.b32  	%r6, %r1, 128;
	shr.u32 	%r60, %r6, 2;
	or.b32  	%r61, %r59, %r58;
	or.b32  	%r62, %r61, %r60;
	.loc	1 52 27                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:52:27
	or.b32  	%r7, %r56, %r62;
	.loc	1 53 17                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:53:17
	shl.b32 	%r8, %r55, 5;
	.loc	1 53 40                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:53:40
	shl.b32 	%r63, %r1, 2;
	and.b32  	%r64, %r63, 8;
	and.b32  	%r65, %r63, 12;
	shl.b32 	%r66, %r2, 2;
	or.b32  	%r67, %r65, %r66;
	shl.b32 	%r9, %r1, 3;
	and.b32  	%r10, %r9, 24;
	.loc	1 53 27                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:53:27
	or.b32  	%r68, %r8, %r67;
	.loc	1 55 52                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:55:52
	bfe.s32 	%r69, %r52, 25, 1;
	shr.u32 	%r70, %r69, 23;
	add.s32 	%r71, %r7, %r70;
	and.b32  	%r72, %r71, 8388096;
	sub.s32 	%r73, %r7, %r72;
	.loc	1 61 19                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:61:19
	bfe.s32 	%r74, %r55, 26, 1;
	shr.u32 	%r75, %r74, 26;
	add.s32 	%r76, %r68, %r75;
	and.b32  	%r77, %r76, -64;
	sub.s32 	%r78, %r68, %r77;
	.loc	1 65 26                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:65:26
	mov.u32 	%r11, %ctaid.y;
	.loc	1 66 28                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:66:28
	shl.b32 	%r79, %r73, 9;
	.loc	1 66 72                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:66:72
	shl.b32 	%r80, %r11, 18;
	.loc	1 66 40                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:66:40
	or.b32  	%r81, %r10, %r80;
	.loc	1 66 66                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:66:66
	add.s32 	%r82, %r81, %r79;
	.loc	1 66 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:66:13
	mul.wide.s32 	%rd18, %r82, 2;
	add.s64 	%rd8, %rd16, %rd18;
	.loc	1 67 16                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:16
	bfe.u32 	%r83, %r1, 3, 5;
	.loc	1 67 27                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:27
	shl.b32 	%r84, %r83, 12;
	.loc	1 67 72                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:72
	shl.b32 	%r85, %r11, 6;
	.loc	1 67 39                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:39
	add.s32 	%r86, %r84, %r85;
	.loc	1 67 66                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:66
	add.s32 	%r87, %r86, %r78;
	.loc	1 67 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:67:13
	mul.wide.s32 	%rd19, %r87, 2;
	add.s64 	%rd9, %rd17, %rd19;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	xor.b32  	%r88, %r9, %r1;
	and.b32  	%r89, %r88, 24;
	shl.b32 	%r90, %r89, 1;
	shl.b32 	%r91, %r62, 6;
	or.b32  	%r92, %r91, %r90;
	mov.u32 	%r93, global_smem;
	add.s32 	%r24, %r93, %r92;
	mov.b32 	%r25, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd8 + 0 ], 0x10, %r25;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	shr.u32 	%r94, %r3, 1;
	shr.u32 	%r95, %r1, 1;
	and.b32  	%r96, %r95, 24;
	xor.b32  	%r97, %r67, %r96;
	shl.b32 	%r98, %r97, 1;
	shl.b32 	%r99, %r83, 6;
	or.b32  	%r100, %r99, %r98;
	add.s32 	%r101, %r93, %r100;
	add.s32 	%r26, %r101, 16384;
	mov.b32 	%r27, 8;
	// begin inline asm
	cp.async.ca.shared.global [ %r26 + 0 ], [ %rd9 + 0 ], 0x8, %r27;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:78:13
	add.s64 	%rd10, %rd8, 64;
	.loc	1 79 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:79:13
	add.s64 	%rd11, %rd9, 262144;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	bar.sync 	0;
	add.s32 	%r28, %r24, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r28 + 0 ], [ %rd10 + 0 ], 0x10, %r25;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	add.s32 	%r30, %r101, 18432;
	// begin inline asm
	cp.async.ca.shared.global [ %r30 + 0 ], [ %rd11 + 0 ], 0x8, %r27;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:78:13
	add.s64 	%rd12, %rd8, 128;
	.loc	1 79 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:79:13
	add.s64 	%rd13, %rd9, 524288;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	bar.sync 	0;
	add.s32 	%r32, %r24, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r32 + 0 ], [ %rd12 + 0 ], 0x10, %r25;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	add.s32 	%r34, %r101, 20480;
	// begin inline asm
	cp.async.ca.shared.global [ %r34 + 0 ], [ %rd13 + 0 ], 0x8, %r27;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:78:13
	add.s64 	%rd14, %rd8, 192;
	.loc	1 79 13                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:79:13
	add.s64 	%rd15, %rd9, 786432;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	bar.sync 	0;
	add.s32 	%r36, %r24, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r36 + 0 ], [ %rd14 + 0 ], 0x10, %r25;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	add.s32 	%r38, %r101, 22528;
	// begin inline asm
	cp.async.ca.shared.global [ %r38 + 0 ], [ %rd15 + 0 ], 0x8, %r27;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:70:25
	or.b32  	%r102, %r66, %r94;
	or.b32  	%r103, %r66, %r4;
	or.b32  	%r104, %r64, %r66;
	and.b32  	%r105, %r1, 15;
	xor.b32  	%r106, %r104, %r94;
	or.b32  	%r107, %r59, %r105;
	or.b32  	%r108, %r107, %r60;
	shl.b32 	%r109, %r108, 5;
	or.b32  	%r14, %r109, %r106;
	or.b32  	%r110, %r64, 16;
	xor.b32  	%r111, %r110, %r102;
	or.b32  	%r15, %r111, %r109;
	xor.b32  	%r112, %r104, %r4;
	shl.b32 	%r113, %r1, 5;
	and.b32  	%r114, %r113, 992;
	or.b32  	%r16, %r112, %r114;
	xor.b32  	%r115, %r110, %r103;
	or.b32  	%r17, %r115, %r114;
	add.s64 	%rd27, %rd9, 1048576;
	add.s32 	%r116, %r80, %r79;
	or.b32  	%r117, %r116, %r10;
	mul.wide.s32 	%rd20, %r117, 2;
	add.s64 	%rd21, %rd20, %rd16;
	add.s64 	%rd26, %rd21, 256;
	mov.f32 	%f50, 0f00000000;
	mov.b32 	%r234, 3;
	mov.b32 	%r233, -1;
	mov.b32 	%r232, -32;
	shl.b32 	%r170, %r14, 1;
	shl.b32 	%r171, %r15, 1;
	shl.b32 	%r175, %r16, 1;
	shl.b32 	%r176, %r17, 1;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r232, %r232, 32;
	setp.lt.u32 	%p1, %r232, 384;
	add.s32 	%r166, %r233, 1;
	setp.lt.s32 	%p2, %r166, 4;
	selp.b32 	%r233, %r166, 0, %p2;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	cp.async.wait_group 6;
	bar.sync 	0;
	shl.b32 	%r167, %r233, 12;
	add.s32 	%r169, %r93, %r167;
	add.s32 	%r122, %r169, %r170;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r138, %r139, %r140, %r141}, [%r122];
	// end inline asm
	add.s32 	%r127, %r169, %r171;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r150, %r151, %r152, %r153}, [%r127];
	// end inline asm
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	shl.b32 	%r172, %r233, 11;
	add.s32 	%r173, %r93, %r172;
	add.s32 	%r174, %r173, 16384;
	add.s32 	%r132, %r174, %r175;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r128, %r129, %r130, %r131}, [%r132];
	// end inline asm
	add.s32 	%r137, %r174, %r176;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r133, %r134, %r135, %r136}, [%r137];
	// end inline asm
	.loc	1 77 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r138, %r139, %r140, %r141 }, { %r128, %r129 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r138, %r139, %r140, %r141 }, { %r133, %r134 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f50, %f51, %f52, %f53 }, { %r150, %r151, %r152, %r153 }, { %r130, %r131 }, { %f50, %f51, %f52, %f53 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f54, %f55, %f56, %f57 }, { %r150, %r151, %r152, %r153 }, { %r135, %r136 }, { %f54, %f55, %f56, %f57 };
	// end inline asm
	.loc	1 70 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:70:25
	add.s32 	%r177, %r234, 1;
	setp.lt.s32 	%p3, %r177, 4;
	selp.b32 	%r234, %r177, 0, %p3;
	.loc	1 72 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:72:24
	shl.b32 	%r178, %r234, 12;
	bar.sync 	0;
	add.s32 	%r162, %r24, %r178;
	selp.b32 	%r163, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r162 + 0 ], [ %rd26 + 0 ], 0x10, %r163;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:73:24
	shl.b32 	%r179, %r234, 11;
	add.s32 	%r164, %r26, %r179;
	selp.b32 	%r165, 8, 0, %p1;
	// begin inline asm
	cp.async.ca.shared.global [ %r164 + 0 ], [ %rd27 + 0 ], 0x8, %r165;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:70:25
	add.s64 	%rd27, %rd27, 262144;
	add.s64 	%rd26, %rd26, 64;
	setp.lt.u32 	%p4, %r232, 480;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 53 27                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:53:27
	or.b32  	%r188, %r8, %r10;
	.loc	1 70 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:87:20
	setp.lt.s32 	%p10, %r7, 512;
	.loc	1 87 34                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:87:34
	setp.lt.s32 	%p11, %r188, 64;
	.loc	1 87 26                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:87:26
	and.pred  	%p9, %p10, %p11;
	.loc	1 90 24                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:90:24
	shl.b32 	%r189, %r7, 6;
	.loc	1 90 38                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:90:38
	shl.b32 	%r190, %r11, 15;
	.loc	1 90 21                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:90:21
	add.s32 	%r191, %r188, %r190;
	.loc	1 90 32                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:90:32
	add.s32 	%r192, %r191, %r189;
	.loc	1 91 25                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:91:25
	mul.wide.s32 	%rd25, %r192, 2;
	add.s64 	%rd24, %rd7, %rd25;
	.loc	1 91 67                         // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f50;
	cvt.rn.bf16.f32 	%rs2, %f51;
	cvt.rn.bf16.f32 	%rs3, %f52;
	cvt.rn.bf16.f32 	%rs4, %f53;
	cvt.rn.bf16.f32 	%rs5, %f54;
	cvt.rn.bf16.f32 	%rs6, %f55;
	cvt.rn.bf16.f32 	%rs7, %f56;
	cvt.rn.bf16.f32 	%rs8, %f57;
	shl.b32 	%r193, %r1, 1;
	and.b32  	%r194, %r193, 6;
	shl.b32 	%r195, %r2, 3;
	or.b32  	%r196, %r194, %r195;
	and.b32  	%r197, %r9, 64;
	or.b32  	%r198, %r196, %r197;
	shl.b32 	%r199, %r3, 3;
	or.b32  	%r200, %r198, %r199;
	or.b32  	%r201, %r200, %r4;
	shl.b32 	%r202, %r5, 3;
	shl.b32 	%r203, %r6, 3;
	or.b32  	%r204, %r203, %r202;
	xor.b32  	%r205, %r204, %r201;
	and.b32  	%r206, %r9, 376;
	or.b32  	%r207, %r206, %r199;
	or.b32  	%r208, %r207, %r202;
	or.b32  	%r209, %r208, %r203;
	shr.u32 	%r210, %r205, 1;
	and.b32  	%r211, %r210, 2147483632;
	add.s32 	%r213, %r93, %r211;
	shl.b32 	%r214, %r205, 1;
	add.s32 	%r180, %r213, %r214;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r180 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r215, %r205, 256;
	shr.u32 	%r216, %r215, 1;
	and.b32  	%r217, %r216, 2147483632;
	add.s32 	%r218, %r93, %r217;
	shl.b32 	%r219, %r215, 1;
	add.s32 	%r181, %r218, %r219;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r181 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r220, %r205, 16;
	shl.b32 	%r221, %r220, 1;
	add.s32 	%r182, %r213, %r221;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r182 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r222, %r205, 272;
	shr.u32 	%r223, %r222, 1;
	and.b32  	%r224, %r223, 2147483632;
	add.s32 	%r225, %r93, %r224;
	shl.b32 	%r226, %r222, 1;
	add.s32 	%r183, %r225, %r226;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r183 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r227, %r209, 1;
	and.b32  	%r228, %r227, 1008;
	add.s32 	%r229, %r93, %r228;
	shl.b32 	%r230, %r209, 1;
	add.s32 	%r231, %r229, %r230;
	ld.shared.v4.u32 	{%r184, %r185, %r186, %r187}, [%r231];
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd24 + 0 ], { %r184, %r185, %r186, %r187 };
	// end inline asm
	.loc	1 91 4                          // cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/l7/cl7exx6aqzijzxokh6xffeuv4qtj337mcksrbfvjrtg3iegcmtqn.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 55
.b8 101
.b8 120
.b8 120
.b8 54
.b8 97
.b8 113
.b8 122
.b8 105
.b8 106
.b8 122
.b8 120
.b8 111
.b8 107
.b8 104
.b8 54
.b8 120
.b8 102
.b8 102
.b8 101
.b8 117
.b8 118
.b8 52
.b8 113
.b8 116
.b8 106
.b8 51
.b8 51
.b8 55
.b8 109
.b8 99
.b8 107
.b8 115
.b8 114
.b8 98
.b8 102
.b8 118
.b8 106
.b8 114
.b8 116
.b8 103
.b8 51
.b8 105
.b8 101
.b8 103
.b8 99
.b8 109
.b8 116
.b8 113
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 108
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
