//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_                 // -- Begin function triton_
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_
.visible .entry triton_(
	.param .u64 .ptr .global .align 1 triton__param_0,
	.param .u64 .ptr .global .align 1 triton__param_1,
	.param .u32 triton__param_2,
	.param .u64 .ptr .global .align 1 triton__param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<31>;
	.reg .f32 	%f<133>;
	.reg .b64 	%rd<8>;
	.loc	1 22 0                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:22:0
$L__func_begin0:
	.loc	1 22 0                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:22:0

// %bb.0:
	ld.param.u64 	%rd4, [triton__param_0];
	ld.param.u64 	%rd5, [triton__param_1];
$L__tmp0:
	.loc	1 24 28                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:24:28
	mov.u32 	%r7, %ctaid.x;
	.loc	1 24 33                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:24:33
	shl.b32 	%r8, %r7, 9;
	.loc	1 25 36                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:25:36
	mov.u32 	%r9, %tid.x;
	shl.b32 	%r10, %r9, 2;
	and.b32  	%r11, %r10, 508;
	.loc	1 25 23                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:25:23
	or.b32  	%r12, %r11, %r8;
	.loc	1 28 34                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:34
	mul.wide.s32 	%rd6, %r12, 2;
	add.s64 	%rd7, %rd4, %rd6;
	.loc	1 28 39                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:39
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	ld.global.v2.b32 { %r3, %r4 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 28 48                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:28:48
	mov.b32 	{%rs1, %rs2}, %r3;
	cvt.f32.bf16 	%f2, %rs2;
	cvt.f32.bf16 	%f1, %rs1;
	mov.b32 	{%rs3, %rs4}, %r4;
	cvt.f32.bf16 	%f4, %rs4;
	cvt.f32.bf16 	%f3, %rs3;
	.loc	1 29 31                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:31
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 29 36                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	ld.global.v2.b32 { %r5, %r6 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:32:18
	mul.f32 	%f25, %f1, %f1;
	mul.f32 	%f26, %f2, %f2;
	mul.f32 	%f27, %f3, %f3;
	mul.f32 	%f28, %f4, %f4;
	.loc	1 33 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:33:18
	mul.f32 	%f29, %f25, %f1;
	mul.f32 	%f30, %f26, %f2;
	mul.f32 	%f31, %f27, %f3;
	mul.f32 	%f32, %f28, %f4;
	.loc	1 36 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:36:18
	fma.rn.f32 	%f33, %f29, 0f3D372713, %f1;
	fma.rn.f32 	%f34, %f30, 0f3D372713, %f2;
	fma.rn.f32 	%f35, %f31, 0f3D372713, %f3;
	.loc	1 38 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:38:18
	mul.f32 	%f5, %f33, 0f3F4C422A;
	mul.f32 	%f6, %f34, 0f3F4C422A;
	.loc	1 39 27                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:39:27
	abs.ftz.f32 	%f9, %f5;
	setp.ltu.f32 	%p1, %f9, 0f3F19999A;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f45, %f5, %f5;
	mov.f32 	%f46, 0fBD563CAE;
	mov.f32 	%f47, 0f3C80F082;
	fma.rn.ftz.f32 	%f48, %f47, %f45, %f46;
	mov.f32 	%f49, 0f3E085941;
	fma.rn.ftz.f32 	%f50, %f48, %f45, %f49;
	mov.f32 	%f51, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f52, %f50, %f45, %f51;
	mov.f32 	%f53, 0f00000000;
	fma.rn.ftz.f32 	%f54, %f52, %f45, %f53;
	fma.rn.ftz.f32 	%f129, %f54, %f5, %f5;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f39, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f40, %f39;
	add.f32 	%f38, %f40, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f37,%f38;
	// end inline asm
	mov.f32 	%f41, 0f3F800000;
	mov.f32 	%f42, 0fC0000000;
	fma.rn.ftz.f32 	%f43, %f37, %f42, %f41;
	setp.ge.f32 	%p2, %f9, 0f41102CB4;
	selp.f32 	%f44, 0f3F800000, %f43, %p2;
	mov.b32 	%r13, %f44;
	mov.b32 	%r14, %f5;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r15, %r13;
	mov.b32 	%f129, %r16;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:0:0
	fma.rn.f32 	%f36, %f32, 0f3D372713, %f4;
	mul.f32 	%f7, %f35, 0f3F4C422A;
	.loc	1 39 27                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:39:27
	abs.ftz.f32 	%f13, %f6;
	setp.ltu.f32 	%p3, %f13, 0f3F19999A;
	@%p3 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f63, %f6, %f6;
	mov.f32 	%f64, 0fBD563CAE;
	mov.f32 	%f65, 0f3C80F082;
	fma.rn.ftz.f32 	%f66, %f65, %f63, %f64;
	mov.f32 	%f67, 0f3E085941;
	fma.rn.ftz.f32 	%f68, %f66, %f63, %f67;
	mov.f32 	%f69, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f70, %f68, %f63, %f69;
	mov.f32 	%f71, 0f00000000;
	fma.rn.ftz.f32 	%f72, %f70, %f63, %f71;
	fma.rn.ftz.f32 	%f130, %f72, %f6, %f6;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f57, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f58, %f57;
	add.f32 	%f56, %f58, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f55,%f56;
	// end inline asm
	mov.f32 	%f59, 0f3F800000;
	mov.f32 	%f60, 0fC0000000;
	fma.rn.ftz.f32 	%f61, %f55, %f60, %f59;
	setp.ge.f32 	%p4, %f13, 0f41102CB4;
	selp.f32 	%f62, 0f3F800000, %f61, %p4;
	mov.b32 	%r17, %f62;
	mov.b32 	%r18, %f6;
	and.b32  	%r19, %r18, -2147483648;
	or.b32  	%r20, %r19, %r17;
	mov.b32 	%f130, %r20;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 0                           // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:0:0
	mul.f32 	%f8, %f36, 0f3F4C422A;
	.loc	1 39 27                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:39:27
	abs.ftz.f32 	%f17, %f7;
	setp.ltu.f32 	%p5, %f17, 0f3F19999A;
	@%p5 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f81, %f7, %f7;
	mov.f32 	%f82, 0fBD563CAE;
	mov.f32 	%f83, 0f3C80F082;
	fma.rn.ftz.f32 	%f84, %f83, %f81, %f82;
	mov.f32 	%f85, 0f3E085941;
	fma.rn.ftz.f32 	%f86, %f84, %f81, %f85;
	mov.f32 	%f87, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f88, %f86, %f81, %f87;
	mov.f32 	%f89, 0f00000000;
	fma.rn.ftz.f32 	%f90, %f88, %f81, %f89;
	fma.rn.ftz.f32 	%f131, %f90, %f7, %f7;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f75, %f17, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f76, %f75;
	add.f32 	%f74, %f76, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f73,%f74;
	// end inline asm
	mov.f32 	%f77, 0f3F800000;
	mov.f32 	%f78, 0fC0000000;
	fma.rn.ftz.f32 	%f79, %f73, %f78, %f77;
	setp.ge.f32 	%p6, %f17, 0f41102CB4;
	selp.f32 	%f80, 0f3F800000, %f79, %p6;
	mov.b32 	%r21, %f80;
	mov.b32 	%r22, %f7;
	and.b32  	%r23, %r22, -2147483648;
	or.b32  	%r24, %r23, %r21;
	mov.b32 	%f131, %r24;
$L__BB0_9:                              // %__nv_tanhf.exit38
	abs.ftz.f32 	%f21, %f8;
	setp.ltu.f32 	%p7, %f21, 0f3F19999A;
	@%p7 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f99, %f8, %f8;
	mov.f32 	%f100, 0fBD563CAE;
	mov.f32 	%f101, 0f3C80F082;
	fma.rn.ftz.f32 	%f102, %f101, %f99, %f100;
	mov.f32 	%f103, 0f3E085941;
	fma.rn.ftz.f32 	%f104, %f102, %f99, %f103;
	mov.f32 	%f105, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f106, %f104, %f99, %f105;
	mov.f32 	%f107, 0f00000000;
	fma.rn.ftz.f32 	%f108, %f106, %f99, %f107;
	fma.rn.ftz.f32 	%f132, %f108, %f8, %f8;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	mul.f32 	%f93, %f21, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f94, %f93;
	add.f32 	%f92, %f94, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f91,%f92;
	// end inline asm
	mov.f32 	%f95, 0f3F800000;
	mov.f32 	%f96, 0fC0000000;
	fma.rn.ftz.f32 	%f97, %f91, %f96, %f95;
	setp.ge.f32 	%p8, %f21, 0f41102CB4;
	selp.f32 	%f98, 0f3F800000, %f97, %p8;
	mov.b32 	%r25, %f98;
	mov.b32 	%r26, %f8;
	and.b32  	%r27, %r26, -2147483648;
	or.b32  	%r28, %r27, %r25;
	mov.b32 	%f132, %r28;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 31 18                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:31:18
	mul.f32 	%f109, %f3, 0f3F000000;
	mul.f32 	%f110, %f4, 0f3F000000;
	mul.f32 	%f111, %f1, 0f3F000000;
	mul.f32 	%f112, %f2, 0f3F000000;
	.loc	1 41 20                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:41:20
	add.f32 	%f113, %f129, 0f3F800000;
	add.f32 	%f114, %f130, 0f3F800000;
	add.f32 	%f115, %f131, 0f3F800000;
	add.f32 	%f116, %f132, 0f3F800000;
	.loc	1 29 45                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:45
	mov.b32 	{%rs5, %rs6}, %r5;
	cvt.f32.bf16 	%f117, %rs6;
	cvt.f32.bf16 	%f118, %rs5;
	.loc	1 42 19                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:42:19
	mul.f32 	%f119, %f112, %f114;
	mul.f32 	%f120, %f111, %f113;
	.loc	1 43 20                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:43:20
	mul.f32 	%f121, %f120, %f118;
	mul.f32 	%f122, %f119, %f117;
	.loc	1 44 40                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:44:40
	cvt.rn.bf16x2.f32 	%r29, %f122, %f121;
	.loc	1 29 45                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:29:45
	mov.b32 	{%rs7, %rs8}, %r6;
	cvt.f32.bf16 	%f123, %rs8;
	cvt.f32.bf16 	%f124, %rs7;
	.loc	1 42 19                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:42:19
	mul.f32 	%f125, %f110, %f116;
	mul.f32 	%f126, %f109, %f115;
	.loc	1 43 20                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:43:20
	mul.f32 	%f127, %f126, %f124;
	mul.f32 	%f128, %f125, %f123;
	.loc	1 44 40                         // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:44:40
	cvt.rn.bf16x2.f32 	%r30, %f128, %f127;
	// begin inline asm
	st.global.v2.b32 [ %rd7 + 0 ], { %r29, %r30 };
	// end inline asm
	.loc	1 44 4                          // c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/2u/c2uhda45fcybzkozwk5b72frxbiuir32hespb5i5zy6j7qkwxyv4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 117
.b8 104
.b8 100
.b8 97
.b8 52
.b8 53
.b8 102
.b8 99
.b8 121
.b8 98
.b8 122
.b8 107
.b8 111
.b8 122
.b8 119
.b8 107
.b8 53
.b8 98
.b8 55
.b8 50
.b8 102
.b8 114
.b8 120
.b8 98
.b8 105
.b8 117
.b8 105
.b8 114
.b8 51
.b8 50
.b8 104
.b8 101
.b8 115
.b8 112
.b8 98
.b8 53
.b8 105
.b8 53
.b8 122
.b8 121
.b8 54
.b8 106
.b8 55
.b8 113
.b8 107
.b8 119
.b8 120
.b8 121
.b8 118
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 50
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
