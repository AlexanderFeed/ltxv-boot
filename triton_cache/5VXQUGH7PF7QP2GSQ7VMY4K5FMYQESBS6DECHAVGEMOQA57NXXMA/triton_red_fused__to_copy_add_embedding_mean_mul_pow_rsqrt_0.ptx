//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 100, 115, 47, 99, 100, 115, 113, 120, 107, 113, 105, 117, 100, 51, 121, 110, 103, 115, 108, 53, 100, 101, 110, 114, 55, 117, 50, 111, 115, 101, 52, 55, 55, 103, 97, 110, 107, 122, 53, 116, 54, 102, 97, 108, 106, 110, 116, 109, 109, 53, 113, 50, 97, 53, 114, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<14>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<50>;
	.loc	1 18 0                          // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:18:0

// %bb.0:
	ld.param.u64 	%rd23, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:23:33
	shl.b32 	%r5, %r1, 6;
	.loc	1 24 44                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:24:44
	mov.u32 	%r6, %tid.x;
	bfe.u32 	%r2, %r6, 2, 6;
	.loc	1 24 23                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:24:23
	or.b32  	%r3, %r2, %r5;
	.loc	1 25 21                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:25:21
	setp.lt.s32 	%p1, %r3, 512;
	.loc	1 29 30                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:29:30
	mul.wide.s32 	%rd24, %r3, 8;
	add.s64 	%rd22, %rd23, %rd24;
	.loc	1 29 35                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:29:35
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 38 22                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:38:22
	add.s64 	%rd25, %rd21, 32128;
	.loc	1 39 22                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:39:22
	setp.lt.s64 	%p2, %rd21, 0;
	.loc	1 40 36                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:40:36
	selp.b64 	%rd1, %rd25, %rd21, %p2;
	.loc	1 41 41                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:41:41
	setp.gt.u64 	%p3, %rd1, 32127;
	.loc	1 42 46                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:42:46
	and.pred  	%p4, %p1, %p3;
	.loc	1 41 68                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:41:68
	@%p4 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:0:68
	ld.param.u64 	%rd20, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd19, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd18, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	and.b32  	%r4, %r6, 3;
	shl.b64 	%rd2, %rd1, 12;
	.loc	1 31 40                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:31:40
	cvt.u64.u32 	%rd3, %r4;
	or.b64  	%rd4, %rd2, %rd3;
	mov.f32 	%f18, 0f00000000;
	mov.b64 	%rd45, -4;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 41 68                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:41:68
	add.s64 	%rd45, %rd45, 4;
	bar.sync 	0;
	or.b64  	%rd28, %rd45, %rd4;
	.loc	1 42 34                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:42:34
	shl.b64 	%rd29, %rd28, 1;
	add.s64 	%rd27, %rd18, %rd29;
	mov.b16 	%rs2, 0;
	.loc	1 42 53                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:42:53
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p1 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:42:114
	cvt.f32.bf16 	%f5, %rs1;
	.loc	1 46 25                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:46:25
	fma.rn.f32 	%f6, %f5, %f5, %f18;
	.loc	1 47 50                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:47:50
	selp.f32 	%f18, %f6, %f18, %p1;
	.loc	1 31 40                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:31:40
	setp.lt.u64 	%p6, %rd45, 4092;
	@%p6 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r7, %f18;
	shfl.sync.bfly.b32	%r8, %r7, 2, 31, -1;
	mov.b32 	%f7, %r8;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f18, %f7;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r9, %f8;
	shfl.sync.bfly.b32	%r10, %r9, 1, 31, -1;
	mov.b32 	%f9, %r10;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	mov.f32 	%f11, 0f45800000;
$L__tmp2:
	.loc	1 64 25                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:64:25
	div.full.f32 	%f12, %f10, %f11;
	.loc	1 66 24                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:66:24
	add.f32 	%f13, %f12, 0f358637BD;
	.loc	1 67 32                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:67:32
	rsqrt.approx.ftz.f32 	%f3, %f13;
	.loc	1 49 40                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:49:40
	shl.b32 	%r11, %r1, 18;
	shl.b32 	%r12, %r2, 12;
	or.b32  	%r13, %r11, %r12;
	mul.wide.s32 	%rd31, %r13, 2;
	shl.b64 	%rd32, %rd3, 1;
	or.b64  	%rd33, %rd31, %rd32;
	add.s64 	%rd48, %rd20, %rd33;
	shl.b64 	%rd34, %rd1, 13;
	or.b64  	%rd35, %rd34, %rd32;
	add.s64 	%rd47, %rd18, %rd35;
	add.s64 	%rd46, %rd19, %rd32;
	mov.b64 	%rd49, -4;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:0:40
	mov.b16 	%rs4, 0;
	mov.pred 	%p7, -1;
	.loc	1 55 42                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:55:42
	// begin inline asm
	mov.u16 %rs3, %rs4;
	@%p7 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd46 + 0 ];
	// end inline asm
	.loc	1 55 95                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:55:95
	cvt.f32.bf16 	%f14, %rs3;
	.loc	1 60 70                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:60:70
	bar.sync 	0;
	.loc	1 61 55                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:61:55
	// begin inline asm
	mov.u16 %rs5, %rs4;
	@%p1 ld.global.L1::evict_first.b16 { %rs5 }, [ %rd47 + 0 ];
	// end inline asm
	.loc	1 61 117                        // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:61:117
	cvt.f32.bf16 	%f15, %rs5;
	.loc	1 68 24                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:68:24
	mul.f32 	%f16, %f3, %f15;
	.loc	1 70 24                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:70:24
	mul.f32 	%f17, %f16, %f14;
	.loc	1 71 53                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:71:53
	cvt.rn.bf16.f32 	%rs7, %f17;
	// begin inline asm
	@%p1 st.global.b16 [ %rd48 + 0 ], { %rs7 };
	// end inline asm
	.loc	1 49 40                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:49:40
	add.s64 	%rd49, %rd49, 4;
	add.s64 	%rd48, %rd48, 8;
	add.s64 	%rd47, %rd47, 8;
	add.s64 	%rd46, %rd46, 8;
	setp.lt.u64 	%p10, %rd49, 4092;
	@%p10 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 49 4                          // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:49:4
	ret;
$L__BB0_6:
	.loc	1 41 68                         // cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py:41:68
	mov.u64 	%rd39, assertMessage_0;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, assertFile_0;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, assertFunc_0;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd40;
	.param .b64 param1;
	st.param.b64 	[param1], %rd42;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd44;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/ds/cdsqxkqiud3yngsl5denr7u2ose477gankz5t6faljntmm5q2a5r.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 115
.b8 113
.b8 120
.b8 107
.b8 113
.b8 105
.b8 117
.b8 100
.b8 51
.b8 121
.b8 110
.b8 103
.b8 115
.b8 108
.b8 53
.b8 100
.b8 101
.b8 110
.b8 114
.b8 55
.b8 117
.b8 50
.b8 111
.b8 115
.b8 101
.b8 52
.b8 55
.b8 55
.b8 103
.b8 97
.b8 110
.b8 107
.b8 122
.b8 53
.b8 116
.b8 54
.b8 102
.b8 97
.b8 108
.b8 106
.b8 110
.b8 116
.b8 109
.b8 109
.b8 53
.b8 113
.b8 50
.b8 97
.b8 53
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 100
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
