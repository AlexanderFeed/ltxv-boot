//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<367>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<65>;
	.loc	1 17 0                          // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:17:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_mm_param_2];
	ld.param.u64 	%rd19, [triton_mm_param_0];
	ld.param.u64 	%rd20, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:40:24
	mov.u32 	%r45, %ctaid.x;
	.loc	1 46 22                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:46:22
	shr.s32 	%r46, %r45, 31;
	shr.u32 	%r47, %r46, 23;
	add.s32 	%r48, %r45, %r47;
	shr.s32 	%r49, %r48, 9;
	.loc	1 47 41                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:47:41
	shl.b32 	%r50, %r49, 3;
	.loc	1 47 30                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:47:30
	sub.s32 	%r51, 8, %r50;
	.loc	1 47 50                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:47:50
	min.s32 	%r52, %r51, 8;
	.loc	1 48 40                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:48:40
	rem.s32 	%r53, %r45, %r52;
	.loc	1 48 34                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:48:34
	add.s32 	%r54, %r53, %r50;
	.loc	1 49 19                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:49:19
	and.b32  	%r55, %r48, -512;
	sub.s32 	%r56, %r45, %r55;
	.loc	1 49 30                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:49:30
	div.s32 	%r57, %r56, %r52;
	.loc	1 51 17                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:51:17
	shl.b32 	%r58, %r54, 6;
	.loc	1 51 40                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:51:40
	mov.u32 	%r1, %tid.x;
	and.b32  	%r59, %r1, 8;
	and.b32  	%r2, %r1, 16;
	and.b32  	%r60, %r1, 32;
	bfe.u32 	%r61, %r1, 3, 4;
	and.b32  	%r3, %r1, 128;
	shr.u32 	%r62, %r3, 3;
	or.b32  	%r63, %r61, %r62;
	or.b32  	%r64, %r63, 32;
	shl.b32 	%r4, %r1, 3;
	and.b32  	%r65, %r4, 8;
	and.b32  	%r66, %r4, 16;
	and.b32  	%r67, %r4, 24;
	and.b32  	%r68, %r4, 32;
	and.b32  	%r5, %r4, 56;
	.loc	1 51 27                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:51:27
	or.b32  	%r6, %r58, %r63;
	or.b32  	%r7, %r58, %r64;
	.loc	1 52 17                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:52:17
	shl.b32 	%r8, %r57, 6;
	.loc	1 52 27                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:52:27
	or.b32  	%r69, %r8, %r63;
	or.b32  	%r70, %r8, %r64;
	.loc	1 54 57                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:54:57
	bfe.s32 	%r71, %r54, 25, 1;
	shr.u32 	%r72, %r71, 23;
	add.s32 	%r73, %r6, %r72;
	and.b32  	%r74, %r73, 1048064;
	sub.s32 	%r75, %r6, %r74;
	add.s32 	%r76, %r7, %r72;
	and.b32  	%r77, %r76, 1048064;
	sub.s32 	%r78, %r7, %r77;
	.loc	1 58 57                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:58:57
	bfe.s32 	%r79, %r57, 25, 1;
	shr.u32 	%r80, %r79, 20;
	add.s32 	%r81, %r69, %r80;
	and.b32  	%r82, %r81, 1044480;
	sub.s32 	%r83, %r69, %r82;
	cvt.u16.u32 	%rs1, %r70;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 4;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -4096;
	sub.s16 	%rs6, %rs1, %rs5;
	.loc	1 71 30                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:71:30
	shl.b32 	%r84, %r75, 12;
	shl.b32 	%r85, %r78, 12;
	.loc	1 77 55                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:55
	shl.b32 	%r86, %r83, 12;
	mul.wide.s16 	%r87, %rs6, 4096;
	.loc	1 71 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:71:25
	or.b32  	%r88, %r84, %r5;
	or.b32  	%r89, %r85, %r5;
	.loc	1 72 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:25
	mul.wide.s32 	%rd21, %r88, 2;
	add.s64 	%rd10, %rd19, %rd21;
	mul.wide.s32 	%rd22, %r89, 2;
	add.s64 	%rd11, %rd19, %rd22;
	.loc	1 72 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:20
	and.b32  	%r90, %r1, 24;
	xor.b32  	%r91, %r5, %r90;
	xor.b32  	%r92, %r91, %r60;
	shl.b32 	%r93, %r63, 6;
	or.b32  	%r9, %r92, %r93;
	shl.b32 	%r94, %r9, 1;
	mov.u32 	%r95, global_smem;
	add.s32 	%r27, %r95, %r94;
	add.s32 	%r29, %r27, 4096;
	mov.b32 	%r28, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd10 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd11 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:50
	or.b32  	%r96, %r86, %r5;
	or.b32  	%r97, %r87, %r5;
	.loc	1 77 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:25
	mul.wide.s32 	%rd23, %r96, 2;
	add.s64 	%rd12, %rd20, %rd23;
	mul.wide.s32 	%rd24, %r97, 2;
	add.s64 	%rd13, %rd20, %rd24;
	.loc	1 77 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:20
	add.s32 	%r31, %r27, 16384;
	add.s32 	%r33, %r27, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd12 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd13 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:25
	cvt.s64.s32 	%rd25, %r84;
	cvt.u64.u32 	%rd26, %r5;
	or.b64  	%rd27, %rd25, %rd26;
	shl.b64 	%rd28, %rd27, 1;
	add.s64 	%rd29, %rd19, %rd28;
	add.s64 	%rd14, %rd29, 128;
	cvt.s64.s32 	%rd30, %r85;
	or.b64  	%rd31, %rd30, %rd26;
	shl.b64 	%rd32, %rd31, 1;
	add.s64 	%rd33, %rd19, %rd32;
	add.s64 	%rd15, %rd33, 128;
	.loc	1 72 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:20
	bar.sync 	0;
	add.s32 	%r35, %r27, 8192;
	add.s32 	%r37, %r27, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r35 + 0 ], [ %rd14 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r37 + 0 ], [ %rd15 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:25
	cvt.s64.s32 	%rd34, %r86;
	or.b64  	%rd35, %rd34, %rd26;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd20, %rd36;
	add.s64 	%rd16, %rd37, 128;
	cvt.s64.s32 	%rd38, %r87;
	or.b64  	%rd39, %rd38, %rd26;
	shl.b64 	%rd40, %rd39, 1;
	add.s64 	%rd41, %rd20, %rd40;
	add.s64 	%rd17, %rd41, 128;
	.loc	1 77 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:20
	add.s32 	%r39, %r27, 24576;
	add.s32 	%r41, %r27, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r39 + 0 ], [ %rd16 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r41 + 0 ], [ %rd17 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:64:26
	or.b32  	%r98, %r59, %r62;
	and.b32  	%r99, %r1, 7;
	or.b32  	%r100, %r98, %r99;
	and.b32  	%r101, %r1, 15;
	shr.u32 	%r102, %r2, 1;
	xor.b32  	%r103, %r5, %r102;
	or.b32  	%r104, %r62, %r101;
	shl.b32 	%r105, %r104, 6;
	or.b32  	%r10, %r105, %r103;
	or.b32  	%r106, %r65, 16;
	xor.b32  	%r107, %r106, %r66;
	or.b32  	%r108, %r107, %r68;
	xor.b32  	%r109, %r108, %r102;
	or.b32  	%r11, %r109, %r105;
	or.b32  	%r110, %r67, 32;
	xor.b32  	%r111, %r110, %r68;
	xor.b32  	%r112, %r111, %r102;
	or.b32  	%r12, %r112, %r105;
	or.b32  	%r113, %r65, 48;
	and.b32  	%r114, %r4, 48;
	or.b32  	%r115, %r102, %r114;
	xor.b32  	%r116, %r115, %r113;
	or.b32  	%r13, %r116, %r105;
	shr.u32 	%r117, %r60, 2;
	or.b32  	%r118, %r99, %r117;
	shl.b32 	%r119, %r100, 6;
	or.b32  	%r120, %r119, 2048;
	or.b32  	%r14, %r120, %r103;
	or.b32  	%r15, %r109, %r120;
	or.b32  	%r16, %r112, %r120;
	or.b32  	%r17, %r116, %r120;
	shr.u32 	%r18, %r1, 2;
	and.b32  	%r121, %r18, 16;
	or.b32  	%r122, %r121, %r117;
	or.b32  	%r123, %r122, %r99;
	shl.b32 	%r124, %r123, 6;
	or.b32  	%r19, %r124, %r91;
	xor.b32  	%r125, %r111, %r90;
	or.b32  	%r20, %r125, %r124;
	or.b32  	%r126, %r118, %r121;
	shl.b32 	%r127, %r126, 6;
	or.b32  	%r128, %r127, 2048;
	or.b32  	%r21, %r128, %r91;
	or.b32  	%r22, %r125, %r128;
	mul.wide.u32 	%rd42, %r99, 16;
	mul.wide.s32 	%rd43, %r87, 2;
	or.b64  	%rd44, %rd42, %rd43;
	add.s64 	%rd45, %rd44, %rd20;
	add.s64 	%rd1, %rd45, 256;
	mul.wide.s32 	%rd46, %r86, 2;
	or.b64  	%rd47, %rd42, %rd46;
	add.s64 	%rd48, %rd47, %rd20;
	add.s64 	%rd2, %rd48, 256;
	mul.wide.s32 	%rd49, %r85, 2;
	or.b64  	%rd50, %rd42, %rd49;
	add.s64 	%rd51, %rd50, %rd19;
	add.s64 	%rd3, %rd51, 256;
	mul.wide.s32 	%rd52, %r84, 2;
	or.b64  	%rd53, %rd42, %rd52;
	add.s64 	%rd54, %rd53, %rd19;
	add.s64 	%rd4, %rd54, 256;
	mov.f32 	%f162, 0f00000000;
	mov.b32 	%r366, 1;
	mov.b32 	%r365, -1;
	mov.b64 	%rd63, 0;
	shl.b32 	%r297, %r10, 1;
	shl.b32 	%r298, %r11, 1;
	shl.b32 	%r299, %r12, 1;
	shl.b32 	%r300, %r13, 1;
	shl.b32 	%r301, %r14, 1;
	shl.b32 	%r302, %r15, 1;
	shl.b32 	%r303, %r16, 1;
	shl.b32 	%r304, %r17, 1;
	shl.b32 	%r307, %r19, 1;
	shl.b32 	%r308, %r20, 1;
	shl.b32 	%r309, %r21, 1;
	shl.b32 	%r310, %r22, 1;
	mov.u64 	%rd64, %rd63;
	mov.f32 	%f163, %f162;
	mov.f32 	%f164, %f162;
	mov.f32 	%f165, %f162;
	mov.f32 	%f166, %f162;
	mov.f32 	%f167, %f162;
	mov.f32 	%f168, %f162;
	mov.f32 	%f169, %f162;
	mov.f32 	%f170, %f162;
	mov.f32 	%f171, %f162;
	mov.f32 	%f172, %f162;
	mov.f32 	%f173, %f162;
	mov.f32 	%f174, %f162;
	mov.f32 	%f175, %f162;
	mov.f32 	%f176, %f162;
	mov.f32 	%f177, %f162;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd64, 62;
	add.s32 	%r293, %r365, 1;
	setp.lt.s32 	%p2, %r293, 2;
	selp.b32 	%r365, %r293, 0, %p2;
	.loc	1 72 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r294, %r365, 13;
	add.s32 	%r296, %r95, %r294;
	add.s32 	%r133, %r296, %r297;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r189, %r190, %r191, %r192}, [%r133];
	// end inline asm
	add.s32 	%r138, %r296, %r298;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r213, %r214, %r215, %r216}, [%r138];
	// end inline asm
	add.s32 	%r143, %r296, %r299;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r237, %r238, %r239, %r240}, [%r143];
	// end inline asm
	add.s32 	%r148, %r296, %r300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r261, %r262, %r263, %r264}, [%r148];
	// end inline asm
	add.s32 	%r153, %r296, %r301;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r201, %r202, %r203, %r204}, [%r153];
	// end inline asm
	add.s32 	%r158, %r296, %r302;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r225, %r226, %r227, %r228}, [%r158];
	// end inline asm
	add.s32 	%r163, %r296, %r303;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r249, %r250, %r251, %r252}, [%r163];
	// end inline asm
	add.s32 	%r168, %r296, %r304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r273, %r274, %r275, %r276}, [%r168];
	// end inline asm
	.loc	1 77 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:20
	add.s32 	%r305, %r95, 16384;
	add.s32 	%r306, %r305, %r294;
	add.s32 	%r173, %r306, %r307;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r193, %r194, %r217, %r218}, [%r173];
	// end inline asm
	add.s32 	%r178, %r306, %r308;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r241, %r242, %r265, %r266}, [%r178];
	// end inline asm
	add.s32 	%r183, %r306, %r309;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r199, %r200, %r223, %r224}, [%r183];
	// end inline asm
	add.s32 	%r188, %r306, %r310;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r247, %r248, %r271, %r272}, [%r188];
	// end inline asm
	.loc	1 78 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r189, %r190, %r191, %r192 }, { %r193, %r194 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r189, %r190, %r191, %r192 }, { %r199, %r200 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r201, %r202, %r203, %r204 }, { %r193, %r194 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r201, %r202, %r203, %r204 }, { %r199, %r200 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r213, %r214, %r215, %r216 }, { %r217, %r218 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r213, %r214, %r215, %r216 }, { %r223, %r224 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r225, %r226, %r227, %r228 }, { %r217, %r218 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r225, %r226, %r227, %r228 }, { %r223, %r224 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r237, %r238, %r239, %r240 }, { %r241, %r242 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r237, %r238, %r239, %r240 }, { %r247, %r248 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r249, %r250, %r251, %r252 }, { %r241, %r242 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r249, %r250, %r251, %r252 }, { %r247, %r248 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f162, %f163, %f164, %f165 }, { %r261, %r262, %r263, %r264 }, { %r265, %r266 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f166, %f167, %f168, %f169 }, { %r261, %r262, %r263, %r264 }, { %r271, %r272 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f170, %f171, %f172, %f173 }, { %r273, %r274, %r275, %r276 }, { %r265, %r266 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f174, %f175, %f176, %f177 }, { %r273, %r274, %r275, %r276 }, { %r271, %r272 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	.loc	1 64 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:64:26
	add.s32 	%r311, %r366, 1;
	setp.lt.s32 	%p3, %r311, 2;
	selp.b32 	%r366, %r311, 0, %p3;
	.loc	1 72 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:25
	add.s64 	%rd55, %rd4, %rd63;
	.loc	1 72 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:72:20
	add.s64 	%rd56, %rd3, %rd63;
	shl.b32 	%r312, %r366, 13;
	add.s32 	%r313, %r95, %r312;
	bar.sync 	0;
	add.s32 	%r285, %r313, %r94;
	add.s32 	%r287, %r285, 4096;
	selp.b32 	%r286, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r285 + 0 ], [ %rd55 + 0 ], 0x10, %r286;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r287 + 0 ], [ %rd56 + 0 ], 0x10, %r286;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:25
	add.s64 	%rd57, %rd2, %rd63;
	.loc	1 77 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:77:20
	add.s64 	%rd58, %rd1, %rd63;
	add.s32 	%r315, %r305, %r312;
	add.s32 	%r289, %r315, %r94;
	add.s32 	%r291, %r289, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r289 + 0 ], [ %rd57 + 0 ], 0x10, %r286;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r291 + 0 ], [ %rd58 + 0 ], 0x10, %r286;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:64:26
	add.s64 	%rd64, %rd64, 1;
	add.s64 	%rd63, %rd63, 128;
	setp.ne.s64 	%p4, %rd63, 8192;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 27                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:52:27
	or.b32  	%r332, %r8, %r5;
	.loc	1 64 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:85:20
	setp.lt.s32 	%p15, %r6, 512;
	setp.lt.s32 	%p16, %r7, 512;
	.loc	1 85 34                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:85:34
	setp.lt.s32 	%p17, %r332, 4096;
	.loc	1 85 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:85:26
	and.pred  	%p13, %p15, %p17;
	and.pred  	%p14, %p16, %p17;
	.loc	1 88 26                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:88:26
	shl.b32 	%r333, %r6, 12;
	shl.b32 	%r334, %r7, 12;
	.loc	1 88 21                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:88:21
	add.s32 	%r335, %r333, %r332;
	add.s32 	%r336, %r334, %r332;
	.loc	1 89 25                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:89:25
	mul.wide.s32 	%rd61, %r335, 2;
	add.s64 	%rd59, %rd9, %rd61;
	mul.wide.s32 	%rd62, %r336, 2;
	add.s64 	%rd60, %rd9, %rd62;
	.loc	1 89 67                         // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:89:67
	cvt.rn.bf16.f32 	%rs7, %f162;
	cvt.rn.bf16.f32 	%rs8, %f163;
	cvt.rn.bf16.f32 	%rs9, %f164;
	cvt.rn.bf16.f32 	%rs10, %f165;
	cvt.rn.bf16.f32 	%rs11, %f166;
	cvt.rn.bf16.f32 	%rs12, %f167;
	cvt.rn.bf16.f32 	%rs13, %f168;
	cvt.rn.bf16.f32 	%rs14, %f169;
	cvt.rn.bf16.f32 	%rs15, %f170;
	cvt.rn.bf16.f32 	%rs16, %f171;
	cvt.rn.bf16.f32 	%rs17, %f172;
	cvt.rn.bf16.f32 	%rs18, %f173;
	cvt.rn.bf16.f32 	%rs19, %f174;
	cvt.rn.bf16.f32 	%rs20, %f175;
	cvt.rn.bf16.f32 	%rs21, %f176;
	cvt.rn.bf16.f32 	%rs22, %f177;
	shl.b32 	%r337, %r1, 1;
	and.b32  	%r338, %r337, 6;
	shl.b32 	%r339, %r1, 4;
	and.b32  	%r340, %r339, 192;
	or.b32  	%r341, %r340, %r338;
	shl.b32 	%r342, %r2, 4;
	or.b32  	%r343, %r341, %r342;
	and.b32  	%r344, %r18, 24;
	or.b32  	%r345, %r343, %r344;
	shl.b32 	%r346, %r3, 3;
	or.b32  	%r347, %r345, %r346;
	and.b32  	%r348, %r4, 1016;
	or.b32  	%r349, %r348, %r346;
	shr.u32 	%r350, %r347, 2;
	and.b32  	%r351, %r350, 496;
	add.s32 	%r353, %r95, %r351;
	shl.b32 	%r354, %r347, 1;
	add.s32 	%r316, %r353, %r354;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r316 + 0 ], { %rs7, %rs8 };
	// end inline asm
	or.b32  	%r355, %r347, 512;
	shr.u32 	%r356, %r355, 2;
	and.b32  	%r357, %r356, 1073741808;
	add.s32 	%r358, %r95, %r357;
	add.s32 	%r359, %r358, %r354;
	add.s32 	%r317, %r359, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r317 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r318, %r316, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r318 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r319, %r359, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r319 + 0 ], { %rs13, %rs14 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r360, %r349, 2;
	and.b32  	%r361, %r360, 496;
	add.s32 	%r362, %r95, %r361;
	shl.b32 	%r363, %r349, 1;
	add.s32 	%r364, %r362, %r363;
	ld.shared.v4.u32 	{%r324, %r325, %r326, %r327}, [%r364];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r316 + 0 ], { %rs15, %rs16 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r317 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r318 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r319 + 0 ], { %rs21, %rs22 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r328, %r329, %r330, %r331}, [%r364];
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd59 + 0 ], { %r324, %r325, %r326, %r327 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd60 + 0 ], { %r328, %r329, %r330, %r331 };
	// end inline asm
	.loc	1 89 4                          // ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/iq/ciqpwczaddxque2naostygfgclgpdgrwsupx3fjxcztk64qgerra.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 113
.b8 112
.b8 119
.b8 99
.b8 122
.b8 97
.b8 100
.b8 100
.b8 120
.b8 113
.b8 117
.b8 101
.b8 50
.b8 110
.b8 97
.b8 111
.b8 115
.b8 116
.b8 121
.b8 103
.b8 102
.b8 103
.b8 99
.b8 108
.b8 103
.b8 112
.b8 100
.b8 103
.b8 114
.b8 119
.b8 115
.b8 117
.b8 112
.b8 120
.b8 51
.b8 102
.b8 106
.b8 120
.b8 99
.b8 122
.b8 116
.b8 107
.b8 54
.b8 52
.b8 113
.b8 103
.b8 101
.b8 114
.b8 114
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 105
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
