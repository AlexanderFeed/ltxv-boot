//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u32 triton_red_fused_addmm_0_param_3,
	.param .u32 triton_red_fused_addmm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<105>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:18:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused_addmm_0_param_0];
	ld.param.u64 	%rd7, [triton_red_fused_addmm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:23:28
	mov.u32 	%r24, %ctaid.x;
	.loc	1 25 21                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:25:21
	setp.lt.s32 	%p2, %r24, 9216;
	ld.param.u64 	%rd8, [triton_red_fused_addmm_0_param_2];
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 2;
	and.b32  	%r27, %r26, 2044;
	.loc	1 37 46                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:46
	mul.lo.s32 	%r28, %r24, 3072;
	.loc	1 30 40                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:30:40
	cvt.u64.u32 	%rd9, %r27;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	mul.wide.u32 	%rd10, %r27, 2;
	add.s64 	%rd1, %rd6, %rd10;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, -1;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	add.s32 	%r29, %r27, %r28;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd11, %r29, 2;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r6;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	cvt.f32.bf16 	%f3, %rs3;
	cvt.f32.bf16 	%f4, %rs4;
	mov.f32 	%f5, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f6, %f5, %f1;
	sub.f32 	%f7, %f5, %f2;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f8, %f6, 0f3FB8AA3B;
	ex2.approx.f32 	%f9, %f8;
	mul.f32 	%f10, %f7, 0f3FB8AA3B;
	ex2.approx.f32 	%f11, %f10;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f12, %f9, 0f3F800000;
	add.f32 	%f13, %f11, 0f3F800000;
	mov.f32 	%f14, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f15, %f14, %f12;
	div.full.f32 	%f16, %f14, %f13;
$L__tmp2:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f17, %f15, %f1;
	mul.f32 	%f18, %f16, %f2;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f19, %f17, %f3, 0f00000000;
	fma.rn.f32 	%f20, %f18, %f4, 0f00000000;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f21, %f19, 0f00000000, %p2;
	selp.f32 	%f22, %f20, 0f00000000, %p2;
	.loc	1 31 31                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:31:31
	or.b64  	%rd12, %rd9, 2048;
	.loc	1 32 29                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:32:29
	setp.lt.u64 	%p3, %rd12, 3072;
	.loc	1 36 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:34
	add.s64 	%rd3, %rd1, 4096;
	.loc	1 36 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:41
	// begin inline asm
	mov.u32 %r9, %r3;
	mov.u32 %r10, %r3;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r10;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	cvt.f32.bf16 	%f23, %rs5;
	cvt.f32.bf16 	%f24, %rs6;
	.loc	1 37 41                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:41
	cvt.u32.u64 	%r30, %rd12;
	add.s32 	%r31, %r28, %r30;
	.loc	1 37 34                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:34
	mul.wide.s32 	%rd13, %r31, 2;
	add.s64 	%rd4, %rd7, %rd13;
	.loc	1 37 61                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:61
	and.pred  	%p4, %p2, %p3;
	.loc	1 37 51                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:51
	// begin inline asm
	mov.u32 %r13, %r3;
	mov.u32 %r14, %r3;
	@%p4 ld.global.L1::evict_first.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs7, %rs8}, %r14;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	cvt.f32.bf16 	%f25, %rs7;
	cvt.f32.bf16 	%f26, %rs8;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f27, %f5, %f23;
	sub.f32 	%f28, %f5, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f29, %f27, 0f3FB8AA3B;
	ex2.approx.f32 	%f30, %f29;
	mul.f32 	%f31, %f28, 0f3FB8AA3B;
	ex2.approx.f32 	%f32, %f31;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f33, %f30, 0f3F800000;
	add.f32 	%f34, %f32, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f35, %f14, %f33;
	div.full.f32 	%f36, %f14, %f34;
$L__tmp4:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f37, %f35, %f23;
	mul.f32 	%f38, %f36, %f24;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f39, %f37, %f25, %f21;
	fma.rn.f32 	%f40, %f38, %f26, %f22;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs9, %rs10}, %r1;
	cvt.f32.bf16 	%f41, %rs10;
	cvt.f32.bf16 	%f42, %rs9;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs11, %rs12}, %r5;
	cvt.f32.bf16 	%f43, %rs12;
	cvt.f32.bf16 	%f44, %rs11;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f45, %f5, %f42;
	sub.f32 	%f46, %f5, %f41;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f47, %f45, 0f3FB8AA3B;
	ex2.approx.f32 	%f48, %f47;
	mul.f32 	%f49, %f46, 0f3FB8AA3B;
	ex2.approx.f32 	%f50, %f49;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f51, %f48, 0f3F800000;
	add.f32 	%f52, %f50, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f53, %f14, %f51;
	div.full.f32 	%f54, %f14, %f52;
$L__tmp6:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f55, %f54, %f41;
	mul.f32 	%f56, %f53, %f42;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f57, %f56, %f44, 0f00000000;
	fma.rn.f32 	%f58, %f55, %f43, 0f00000000;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f59, %f58, 0f00000000, %p2;
	selp.f32 	%f60, %f57, 0f00000000, %p2;
	.loc	1 36 94                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:36:94
	mov.b32 	{%rs13, %rs14}, %r9;
	cvt.f32.bf16 	%f61, %rs14;
	cvt.f32.bf16 	%f62, %rs13;
	.loc	1 37 113                        // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:37:113
	mov.b32 	{%rs15, %rs16}, %r13;
	cvt.f32.bf16 	%f63, %rs16;
	cvt.f32.bf16 	%f64, %rs15;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f65, %f5, %f62;
	sub.f32 	%f66, %f5, %f61;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f67, %f65, 0f3FB8AA3B;
	ex2.approx.f32 	%f68, %f67;
	mul.f32 	%f69, %f66, 0f3FB8AA3B;
	ex2.approx.f32 	%f70, %f69;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f71, %f68, 0f3F800000;
	add.f32 	%f72, %f70, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f73, %f14, %f71;
	div.full.f32 	%f74, %f14, %f72;
$L__tmp8:
	.loc	1 40 22                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:40:22
	mul.f32 	%f75, %f74, %f61;
	mul.f32 	%f76, %f73, %f62;
	.loc	1 46 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:46:25
	fma.rn.f32 	%f77, %f76, %f64, %f60;
	fma.rn.f32 	%f78, %f75, %f63, %f59;
	.loc	1 47 50                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:47:50
	selp.f32 	%f79, %f78, %f59, %p4;
	selp.f32 	%f80, %f77, %f60, %p4;
	selp.f32 	%f81, %f39, %f21, %p4;
	selp.f32 	%f82, %f40, %f22, %p4;
	.loc	1 26 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:26:37
	and.b32  	%r32, %r25, 31;
$L__tmp9:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f80, %f79;
	add.f32 	%f84, %f81, %f83;
	add.f32 	%f85, %f82, %f84;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r33, %f85;
	shfl.sync.bfly.b32	%r34, %r33, 16, 31, -1;
	mov.b32 	%f86, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f87;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f88, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r37, %f89;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f90, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f91;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f92, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f93;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f94, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p5, %r32, 0;
	shr.u32 	%r43, %r25, 3;
	and.b32  	%r44, %r43, 60;
	mov.u32 	%r45, global_smem;
	add.s32 	%r17, %r45, %r44;
	mov.b32 	%r18, %f95;
	// begin inline asm
	@%p5 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r25, 16;
	add.s32 	%r20, %r45, %r26;
	// begin inline asm
	@%p6 ld.shared.b32 %r19, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f96, %r19;
	shfl.sync.bfly.b32	%r46, %r19, 8, 31, -1;
	mov.b32 	%f97, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f98;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f99, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f100;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f101, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f102;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f103, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r53, %r25, 15;
	setp.eq.s32 	%p9, %r53, 0;
	and.pred  	%p7, %p6, %p9;
	mov.b32 	%r22, %f104;
	// begin inline asm
	@%p7 st.shared.b32 [ %r20 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r23, [global_smem];
$L__tmp10:
	.loc	1 49 25                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:25
	mul.wide.s32 	%rd14, %r24, 4;
	add.s64 	%rd5, %rd8, %rd14;
	.loc	1 49 37                         // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:37
	and.b32  	%r54, %r25, 511;
	setp.eq.s32 	%p10, %r54, 0;
	and.pred  	%p8, %p2, %p10;
	// begin inline asm
	@%p8 st.global.b32 [ %rd5 + 0 ], { %r23 };
	// end inline asm
	.loc	1 49 4                          // c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py:49:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3j/c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 106
.b8 97
.b8 118
.b8 98
.b8 116
.b8 119
.b8 111
.b8 51
.b8 107
.b8 113
.b8 53
.b8 51
.b8 115
.b8 105
.b8 100
.b8 106
.b8 109
.b8 101
.b8 52
.b8 109
.b8 105
.b8 106
.b8 111
.b8 108
.b8 51
.b8 102
.b8 108
.b8 120
.b8 54
.b8 100
.b8 114
.b8 118
.b8 50
.b8 116
.b8 119
.b8 55
.b8 107
.b8 118
.b8 117
.b8 52
.b8 51
.b8 101
.b8 112
.b8 55
.b8 116
.b8 54
.b8 51
.b8 101
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
