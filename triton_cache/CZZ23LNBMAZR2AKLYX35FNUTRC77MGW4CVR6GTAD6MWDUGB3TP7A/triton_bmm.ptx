//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<382>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<43>;
	.loc	1 17 0                          // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:17:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_bmm_param_2];
	ld.param.u64 	%rd20, [triton_bmm_param_0];
	ld.param.u64 	%rd21, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:41:24
	mov.u32 	%r48, %ctaid.x;
	.loc	1 47 22                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:47:22
	shr.s32 	%r49, %r48, 31;
	shr.u32 	%r50, %r49, 29;
	add.s32 	%r51, %r48, %r50;
	.loc	1 48 41                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:48:41
	and.b32  	%r52, %r51, -8;
	.loc	1 48 30                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:48:30
	sub.s32 	%r53, 4, %r52;
	.loc	1 48 50                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:48:50
	min.s32 	%r54, %r53, 8;
	.loc	1 49 40                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:49:40
	rem.s32 	%r55, %r48, %r54;
	.loc	1 49 34                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:49:34
	add.s32 	%r56, %r55, %r52;
	.loc	1 50 19                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:50:19
	sub.s32 	%r57, %r48, %r52;
	.loc	1 50 30                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:50:30
	div.s32 	%r58, %r57, %r54;
	.loc	1 52 17                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:52:17
	shl.b32 	%r1, %r56, 7;
	.loc	1 52 40                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r59, %r2, 4;
	shr.u32 	%r60, %r2, 2;
	and.b32  	%r3, %r60, 8;
	and.b32  	%r61, %r60, 16;
	and.b32  	%r4, %r2, 128;
	shr.u32 	%r62, %r4, 2;
	bfe.u32 	%r63, %r2, 2, 5;
	or.b32  	%r64, %r63, %r62;
	bfe.u32 	%r5, %r2, 3, 5;
	.loc	1 52 27                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:52:27
	or.b32  	%r65, %r1, %r64;
	or.b32  	%r66, %r65, 64;
	.loc	1 53 17                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:53:17
	shl.b32 	%r67, %r58, 6;
	.loc	1 53 40                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:53:40
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r68, %r6, 8;
	and.b32  	%r69, %r2, 2;
	shl.b32 	%r70, %r69, 3;
	or.b32  	%r71, %r68, %r70;
	shl.b32 	%r72, %r59, 3;
	or.b32  	%r7, %r71, %r72;
	.loc	1 53 27                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:53:27
	or.b32  	%r8, %r67, %r7;
	.loc	1 55 52                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:55:52
	bfe.s32 	%r73, %r56, 24, 1;
	shr.u32 	%r74, %r73, 23;
	add.s32 	%r75, %r65, %r74;
	and.b32  	%r76, %r75, 8388096;
	sub.s32 	%r77, %r65, %r76;
	add.s32 	%r78, %r66, %r74;
	and.b32  	%r79, %r78, 8388096;
	sub.s32 	%r80, %r66, %r79;
	.loc	1 61 19                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:61:19
	bfe.s32 	%r81, %r58, 25, 1;
	shr.u32 	%r82, %r81, 26;
	add.s32 	%r83, %r8, %r82;
	and.b32  	%r84, %r83, -64;
	sub.s32 	%r85, %r8, %r84;
	.loc	1 65 26                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:65:26
	mov.u32 	%r9, %ctaid.y;
	.loc	1 66 28                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:66:28
	shl.b32 	%r86, %r77, 9;
	shl.b32 	%r87, %r80, 9;
	.loc	1 66 72                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:66:72
	shl.b32 	%r88, %r9, 18;
	.loc	1 66 40                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:66:40
	or.b32  	%r89, %r71, %r88;
	.loc	1 66 66                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:66:66
	add.s32 	%r90, %r89, %r86;
	add.s32 	%r91, %r89, %r87;
	.loc	1 66 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:66:13
	mul.wide.s32 	%rd22, %r90, 2;
	add.s64 	%rd11, %rd20, %rd22;
	mul.wide.s32 	%rd23, %r91, 2;
	add.s64 	%rd12, %rd20, %rd23;
	.loc	1 67 27                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:67:27
	shl.b32 	%r92, %r5, 12;
	.loc	1 67 72                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:67:72
	shl.b32 	%r93, %r9, 6;
	.loc	1 67 39                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:67:39
	add.s32 	%r94, %r92, %r93;
	.loc	1 67 66                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:67:66
	add.s32 	%r95, %r94, %r85;
	.loc	1 67 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:67:13
	mul.wide.s32 	%rd24, %r95, 2;
	add.s64 	%rd13, %rd21, %rd24;
	.loc	1 72 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:72:24
	and.b32  	%r96, %r2, 24;
	xor.b32  	%r97, %r71, %r96;
	shl.b32 	%r98, %r64, 5;
	or.b32  	%r10, %r98, %r97;
	shl.b32 	%r99, %r10, 1;
	mov.u32 	%r100, global_smem;
	add.s32 	%r27, %r100, %r99;
	add.s32 	%r29, %r27, 4096;
	mov.b32 	%r28, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd11 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd12 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:73:24
	and.b32  	%r101, %r2, 56;
	xor.b32  	%r102, %r7, %r101;
	shl.b32 	%r103, %r102, 1;
	shl.b32 	%r104, %r5, 7;
	or.b32  	%r105, %r104, %r103;
	add.s32 	%r106, %r100, %r105;
	add.s32 	%r31, %r106, 24576;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd13 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:78:13
	add.s64 	%rd14, %rd11, 64;
	add.s64 	%rd15, %rd12, 64;
	.loc	1 79 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:79:13
	add.s64 	%rd16, %rd13, 262144;
	.loc	1 72 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:72:24
	bar.sync 	0;
	add.s32 	%r33, %r27, 8192;
	add.s32 	%r35, %r27, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd14 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r35 + 0 ], [ %rd15 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:73:24
	add.s32 	%r37, %r106, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r37 + 0 ], [ %rd16 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:78:13
	add.s64 	%rd17, %rd11, 128;
	add.s64 	%rd18, %rd12, 128;
	.loc	1 79 13                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:79:13
	add.s64 	%rd19, %rd13, 524288;
	.loc	1 72 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:72:24
	bar.sync 	0;
	add.s32 	%r39, %r27, 16384;
	add.s32 	%r41, %r27, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r39 + 0 ], [ %rd17 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r41 + 0 ], [ %rd18 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:73:24
	add.s32 	%r43, %r106, 32768;
	// begin inline asm
	cp.async.cg.shared.global [ %r43 + 0 ], [ %rd19 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r107, %r69, 2;
	shl.b32 	%r108, %r59, 2;
	or.b32  	%r109, %r107, %r108;
	and.b32  	%r110, %r2, 15;
	shr.u32 	%r111, %r2, 1;
	and.b32  	%r112, %r111, 8;
	xor.b32  	%r12, %r109, %r112;
	or.b32  	%r113, %r61, %r110;
	or.b32  	%r114, %r113, %r62;
	shl.b32 	%r13, %r114, 5;
	or.b32  	%r14, %r13, %r12;
	or.b32  	%r115, %r107, 16;
	or.b32  	%r116, %r112, %r108;
	xor.b32  	%r15, %r116, %r115;
	or.b32  	%r16, %r15, %r13;
	xor.b32  	%r117, %r7, %r3;
	shl.b32 	%r118, %r2, 6;
	and.b32  	%r119, %r118, 1984;
	or.b32  	%r17, %r117, %r119;
	or.b32  	%r120, %r68, 16;
	xor.b32  	%r121, %r120, %r70;
	or.b32  	%r122, %r121, %r72;
	xor.b32  	%r123, %r122, %r3;
	or.b32  	%r18, %r123, %r119;
	or.b32  	%r124, %r71, 32;
	or.b32  	%r125, %r3, %r72;
	xor.b32  	%r126, %r125, %r124;
	or.b32  	%r19, %r126, %r119;
	or.b32  	%r127, %r68, 48;
	or.b32  	%r128, %r125, %r70;
	xor.b32  	%r129, %r128, %r127;
	or.b32  	%r20, %r129, %r119;
	.loc	1 70 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:70:25
	add.s64 	%rd42, %rd13, 786432;
	add.s32 	%r130, %r88, %r87;
	or.b32  	%r131, %r130, %r70;
	or.b32  	%r132, %r131, %r68;
	mul.wide.s32 	%rd25, %r132, 2;
	add.s64 	%rd26, %rd25, %rd20;
	add.s64 	%rd41, %rd26, 192;
	add.s32 	%r133, %r88, %r86;
	or.b32  	%r134, %r133, %r70;
	or.b32  	%r135, %r134, %r68;
	mul.wide.s32 	%rd27, %r135, 2;
	add.s64 	%rd28, %rd27, %rd20;
	add.s64 	%rd40, %rd28, 192;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r381, 2;
	mov.b32 	%r380, -1;
	mov.b32 	%r379, -32;
	shl.b32 	%r282, %r14, 1;
	shl.b32 	%r283, %r16, 1;
	shl.b32 	%r293, %r17, 1;
	shl.b32 	%r294, %r18, 1;
	shl.b32 	%r295, %r19, 1;
	shl.b32 	%r296, %r20, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r379, %r379, 32;
	setp.lt.u32 	%p1, %r379, 416;
	add.s32 	%r278, %r380, 1;
	setp.lt.s32 	%p2, %r278, 3;
	selp.b32 	%r380, %r278, 0, %p2;
	.loc	1 72 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:72:24
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r279, %r380, 13;
	add.s32 	%r281, %r100, %r279;
	add.s32 	%r140, %r281, %r282;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r176, %r177, %r178, %r179}, [%r140];
	// end inline asm
	add.s32 	%r145, %r281, %r283;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r224, %r225, %r226, %r227}, [%r145];
	// end inline asm
	add.s32 	%r284, %r13, %r12;
	shl.b32 	%r285, %r284, 1;
	add.s32 	%r286, %r281, %r285;
	add.s32 	%r150, %r286, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r200, %r201, %r202, %r203}, [%r150];
	// end inline asm
	add.s32 	%r287, %r13, %r15;
	shl.b32 	%r288, %r287, 1;
	add.s32 	%r289, %r281, %r288;
	add.s32 	%r155, %r289, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r248, %r249, %r250, %r251}, [%r155];
	// end inline asm
	.loc	1 73 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:73:24
	shl.b32 	%r290, %r380, 12;
	add.s32 	%r291, %r100, %r290;
	add.s32 	%r292, %r291, 24576;
	add.s32 	%r160, %r292, %r293;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r180, %r181, %r228, %r229}, [%r160];
	// end inline asm
	add.s32 	%r165, %r292, %r294;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r186, %r187, %r234, %r235}, [%r165];
	// end inline asm
	add.s32 	%r170, %r292, %r295;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r192, %r193, %r240, %r241}, [%r170];
	// end inline asm
	add.s32 	%r175, %r292, %r296;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r198, %r199, %r246, %r247}, [%r175];
	// end inline asm
	.loc	1 77 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r176, %r177, %r178, %r179 }, { %r180, %r181 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r176, %r177, %r178, %r179 }, { %r186, %r187 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r176, %r177, %r178, %r179 }, { %r192, %r193 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r176, %r177, %r178, %r179 }, { %r198, %r199 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r200, %r201, %r202, %r203 }, { %r180, %r181 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r200, %r201, %r202, %r203 }, { %r186, %r187 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r200, %r201, %r202, %r203 }, { %r192, %r193 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r200, %r201, %r202, %r203 }, { %r198, %r199 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r224, %r225, %r226, %r227 }, { %r228, %r229 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r224, %r225, %r226, %r227 }, { %r234, %r235 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r224, %r225, %r226, %r227 }, { %r240, %r241 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r224, %r225, %r226, %r227 }, { %r246, %r247 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r248, %r249, %r250, %r251 }, { %r228, %r229 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r248, %r249, %r250, %r251 }, { %r234, %r235 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r248, %r249, %r250, %r251 }, { %r240, %r241 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r248, %r249, %r250, %r251 }, { %r246, %r247 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 70 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:70:25
	add.s32 	%r297, %r381, 1;
	setp.lt.s32 	%p3, %r297, 3;
	selp.b32 	%r381, %r297, 0, %p3;
	.loc	1 72 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:72:24
	shl.b32 	%r298, %r381, 13;
	add.s32 	%r299, %r100, %r298;
	bar.sync 	0;
	add.s32 	%r272, %r299, %r99;
	add.s32 	%r274, %r272, 4096;
	selp.b32 	%r273, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r272 + 0 ], [ %rd40 + 0 ], 0x10, %r273;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r274 + 0 ], [ %rd41 + 0 ], 0x10, %r273;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:73:24
	shl.b32 	%r301, %r381, 12;
	add.s32 	%r276, %r31, %r301;
	// begin inline asm
	cp.async.cg.shared.global [ %r276 + 0 ], [ %rd42 + 0 ], 0x10, %r273;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:70:25
	add.s64 	%rd42, %rd42, 262144;
	add.s64 	%rd41, %rd41, 64;
	add.s64 	%rd40, %rd40, 64;
	setp.lt.u32 	%p4, %r379, 480;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:52:40
	or.b32  	%r334, %r1, %r5;
	.loc	1 52 27                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:52:27
	or.b32  	%r335, %r334, 96;
	or.b32  	%r336, %r334, 64;
	or.b32  	%r337, %r334, 32;
	.loc	1 70 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:87:20
	setp.lt.s32 	%p25, %r334, 512;
	setp.lt.s32 	%p26, %r337, 512;
	setp.lt.s32 	%p27, %r336, 512;
	setp.lt.s32 	%p28, %r335, 512;
	.loc	1 87 34                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:87:34
	setp.lt.s32 	%p29, %r8, 64;
	.loc	1 87 26                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:87:26
	and.pred  	%p21, %p25, %p29;
	and.pred  	%p22, %p26, %p29;
	and.pred  	%p23, %p27, %p29;
	and.pred  	%p24, %p28, %p29;
	.loc	1 90 24                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:24
	shl.b32 	%r338, %r334, 6;
	shl.b32 	%r339, %r337, 6;
	shl.b32 	%r340, %r336, 6;
	shl.b32 	%r341, %r335, 6;
	.loc	1 90 38                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:38
	shl.b32 	%r342, %r9, 15;
	.loc	1 90 21                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:21
	add.s32 	%r343, %r8, %r342;
	.loc	1 90 32                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:32
	add.s32 	%r344, %r343, %r338;
	.loc	1 90 21                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:21
	add.s32 	%r345, %r339, %r342;
	.loc	1 90 32                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:32
	add.s32 	%r346, %r345, %r8;
	.loc	1 90 21                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:21
	add.s32 	%r347, %r340, %r342;
	.loc	1 90 32                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:32
	add.s32 	%r348, %r347, %r8;
	.loc	1 90 21                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:21
	add.s32 	%r349, %r341, %r342;
	.loc	1 90 32                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:90:32
	add.s32 	%r350, %r349, %r8;
	.loc	1 91 25                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:91:25
	mul.wide.s32 	%rd36, %r344, 2;
	add.s64 	%rd32, %rd10, %rd36;
	mul.wide.s32 	%rd37, %r346, 2;
	add.s64 	%rd33, %rd10, %rd37;
	mul.wide.s32 	%rd38, %r348, 2;
	add.s64 	%rd34, %rd10, %rd38;
	mul.wide.s32 	%rd39, %r350, 2;
	add.s64 	%rd35, %rd10, %rd39;
	.loc	1 91 67                         // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f194;
	cvt.rn.bf16.f32 	%rs2, %f195;
	cvt.rn.bf16.f32 	%rs3, %f196;
	cvt.rn.bf16.f32 	%rs4, %f197;
	cvt.rn.bf16.f32 	%rs5, %f198;
	cvt.rn.bf16.f32 	%rs6, %f199;
	cvt.rn.bf16.f32 	%rs7, %f200;
	cvt.rn.bf16.f32 	%rs8, %f201;
	cvt.rn.bf16.f32 	%rs9, %f202;
	cvt.rn.bf16.f32 	%rs10, %f203;
	cvt.rn.bf16.f32 	%rs11, %f204;
	cvt.rn.bf16.f32 	%rs12, %f205;
	cvt.rn.bf16.f32 	%rs13, %f206;
	cvt.rn.bf16.f32 	%rs14, %f207;
	cvt.rn.bf16.f32 	%rs15, %f208;
	cvt.rn.bf16.f32 	%rs16, %f209;
	cvt.rn.bf16.f32 	%rs17, %f210;
	cvt.rn.bf16.f32 	%rs18, %f211;
	cvt.rn.bf16.f32 	%rs19, %f212;
	cvt.rn.bf16.f32 	%rs20, %f213;
	cvt.rn.bf16.f32 	%rs21, %f214;
	cvt.rn.bf16.f32 	%rs22, %f215;
	cvt.rn.bf16.f32 	%rs23, %f216;
	cvt.rn.bf16.f32 	%rs24, %f217;
	cvt.rn.bf16.f32 	%rs25, %f218;
	cvt.rn.bf16.f32 	%rs26, %f219;
	cvt.rn.bf16.f32 	%rs27, %f220;
	cvt.rn.bf16.f32 	%rs28, %f221;
	cvt.rn.bf16.f32 	%rs29, %f222;
	cvt.rn.bf16.f32 	%rs30, %f223;
	cvt.rn.bf16.f32 	%rs31, %f224;
	cvt.rn.bf16.f32 	%rs32, %f225;
	shl.b32 	%r351, %r2, 1;
	and.b32  	%r352, %r351, 6;
	shl.b32 	%r353, %r2, 4;
	and.b32  	%r354, %r353, 1472;
	or.b32  	%r355, %r354, %r352;
	shl.b32 	%r356, %r4, 4;
	or.b32  	%r357, %r355, %r356;
	or.b32  	%r358, %r357, %r3;
	and.b32  	%r359, %r6, 1984;
	or.b32  	%r360, %r7, %r359;
	shr.u32 	%r361, %r357, 2;
	and.b32  	%r362, %r361, 1020;
	add.s32 	%r364, %r100, %r362;
	shl.b32 	%r365, %r358, 1;
	add.s32 	%r302, %r364, %r365;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r302 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r366, %r357, 512;
	shr.u32 	%r367, %r366, 2;
	and.b32  	%r368, %r367, 1008;
	add.s32 	%r369, %r100, %r368;
	add.s32 	%r370, %r369, %r365;
	add.s32 	%r303, %r370, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r303 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r304, %r302, 32;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r304 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r305, %r370, 1056;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r305 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r306, %r302, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r306 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r307, %r370, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r307 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r308, %r302, 96;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r308 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r309, %r370, 1120;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r309 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r371, %r359, 2;
	add.s32 	%r372, %r100, %r371;
	shl.b32 	%r373, %r360, 1;
	add.s32 	%r374, %r372, %r373;
	ld.shared.v4.u32 	{%r318, %r319, %r320, %r321}, [%r374];
	or.b32  	%r375, %r359, 2048;
	shr.u32 	%r376, %r375, 2;
	add.s32 	%r377, %r100, %r376;
	add.s32 	%r378, %r377, %r373;
	ld.shared.v4.u32 	{%r322, %r323, %r324, %r325}, [%r378+4096];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r302 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r303 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r304 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r305 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r306 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r307 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r308 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r309 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r326, %r327, %r328, %r329}, [%r374];
	ld.shared.v4.u32 	{%r330, %r331, %r332, %r333}, [%r378+4096];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd32 + 0 ], { %r318, %r319, %r320, %r321 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd33 + 0 ], { %r322, %r323, %r324, %r325 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd34 + 0 ], { %r326, %r327, %r328, %r329 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd35 + 0 ], { %r330, %r331, %r332, %r333 };
	// end inline asm
	.loc	1 91 4                          // c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3t/c3tt3tiflxfm2l3fhlfgnyvzdmp5c64zef5tmbmq2sqwqfhcl6hd.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 116
.b8 116
.b8 51
.b8 116
.b8 105
.b8 102
.b8 108
.b8 120
.b8 102
.b8 109
.b8 50
.b8 108
.b8 51
.b8 102
.b8 104
.b8 108
.b8 102
.b8 103
.b8 110
.b8 121
.b8 118
.b8 122
.b8 100
.b8 109
.b8 112
.b8 53
.b8 99
.b8 54
.b8 52
.b8 122
.b8 101
.b8 102
.b8 53
.b8 116
.b8 109
.b8 98
.b8 109
.b8 113
.b8 50
.b8 115
.b8 113
.b8 119
.b8 113
.b8 102
.b8 104
.b8 99
.b8 108
.b8 54
.b8 104
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
