//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 105, 120, 47, 99, 105, 120, 101, 111, 101, 100, 113, 105, 102, 100, 106, 50, 101, 120, 103, 99, 121, 102, 118, 107, 117, 106, 54, 98, 52, 109, 113, 108, 108, 53, 97, 108, 52, 106, 109, 99, 99, 99, 102, 109, 106, 53, 110, 50, 104, 106, 98, 110, 116, 55, 122, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<77>;
	.reg .b64 	%rd<42>;
	.loc	1 18 0                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:18:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 25 21                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:25:21
	setp.lt.s32 	%p10, %r1, 512;
	.loc	1 29 30                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:29:30
	mul.wide.s32 	%rd16, %r1, 8;
	add.s64 	%rd5, %rd14, %rd16;
	.loc	1 29 35                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:29:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 38 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:38:22
	add.s64 	%rd17, %rd12, 32128;
	.loc	1 39 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:39:22
	setp.lt.s64 	%p7, %rd12, 0;
	.loc	1 40 36                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:40:36
	selp.b64 	%rd18, %rd17, %rd12, %p7;
	.loc	1 41 41                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:41
	setp.gt.u64 	%p8, %rd18, 32127;
	.loc	1 42 46                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:46
	and.pred  	%p9, %p10, %p8;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	@%p9 bra 	$L__BB0_2;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:0:68
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r3, %r4, 2044;
	setp.lt.s64 	%p6, %rd10, 0;
	shl.b64 	%rd19, %rd10, 12;
	add.s64 	%rd20, %rd19, 131596288;
	selp.b64 	%rd21, %rd20, %rd19, %p6;
	shl.b64 	%rd22, %rd21, 1;
	add.s64 	%rd1, %rd15, %rd22;
	.loc	1 26 37                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:26:37
	and.b32  	%r39, %r2, 31;
	.loc	1 31 40                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:31:40
	cvt.u64.u32 	%rd31, %r3;
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	mul.wide.u32 	%rd32, %r3, 2;
	add.s64 	%rd23, %rd1, %rd32;
	mov.b32 	%r7, 0;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r5, %r7;
	mov.u32 %r6, %r7;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	bar.sync 	0;
	.loc	1 42 34                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:34
	add.s64 	%rd24, %rd23, 4096;
	.loc	1 42 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:53
	// begin inline asm
	mov.u32 %r9, %r7;
	mov.u32 %r10, %r7;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs1, %rs2}, %r5;
	cvt.f32.bf16 	%f1, %rs1;
	cvt.f32.bf16 	%f2, %rs2;
	mov.b32 	{%rs3, %rs4}, %r9;
	cvt.f32.bf16 	%f3, %rs4;
	cvt.f32.bf16 	%f4, %rs3;
	.loc	1 44 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:44:22
	mul.f32 	%f5, %f4, %f4;
	mul.f32 	%f6, %f3, %f3;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f7, %f2, %f2, %f6;
	fma.rn.f32 	%f8, %f1, %f1, %f5;
	.loc	1 42 114                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:42:114
	mov.b32 	{%rs5, %rs6}, %r6;
	cvt.f32.bf16 	%f9, %rs5;
	cvt.f32.bf16 	%f10, %rs6;
	mov.b32 	{%rs7, %rs8}, %r10;
	cvt.f32.bf16 	%f11, %rs8;
	cvt.f32.bf16 	%f12, %rs7;
	.loc	1 44 22                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:44:22
	mul.f32 	%f13, %f12, %f12;
	mul.f32 	%f14, %f11, %f11;
	.loc	1 46 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:46:25
	fma.rn.f32 	%f15, %f10, %f10, %f14;
	fma.rn.f32 	%f16, %f9, %f9, %f13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f8, %f7;
	add.f32 	%f18, %f16, %f17;
	add.f32 	%f19, %f15, %f18;
	selp.f32 	%f20, %f19, 0f00000000, %p10;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r40, %f20;
	shfl.sync.bfly.b32	%r41, %r40, 16, 31, -1;
	mov.b32 	%f21, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r42, %f22;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f23, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r44, %f24;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f25, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r46, %f26;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f27, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f28;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f29, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p12, %r39, 0;
	shr.u32 	%r50, %r2, 3;
	and.b32  	%r51, %r50, 60;
	mov.u32 	%r52, global_smem;
	add.s32 	%r13, %r52, %r51;
	mov.b32 	%r14, %f30;
	// begin inline asm
	@%p12 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r2, 16;
	add.s32 	%r16, %r52, %r4;
	// begin inline asm
	@%p13 ld.shared.b32 %r15, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r15;
	shfl.sync.bfly.b32	%r54, %r15, 8, 31, -1;
	mov.b32 	%f32, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f33;
	shfl.sync.bfly.b32	%r56, %r55, 4, 31, -1;
	mov.b32 	%f34, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f35;
	shfl.sync.bfly.b32	%r58, %r57, 2, 31, -1;
	mov.b32 	%f36, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f37;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	mov.b32 	%f38, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r61, %r2, 15;
	setp.eq.s32 	%p21, %r61, 0;
	and.pred  	%p14, %p13, %p21;
	mov.b32 	%r18, %f39;
	// begin inline asm
	@%p14 st.shared.b32 [ %r16 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f40, [global_smem];
	mov.f32 	%f41, 0f45800000;
$L__tmp2:
	.loc	1 64 25                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:64:25
	div.full.f32 	%f42, %f40, %f41;
	.loc	1 66 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:66:24
	add.f32 	%f43, %f42, 0f358637BD;
	.loc	1 67 32                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:67:32
	rsqrt.approx.ftz.f32 	%f44, %f43;
	.loc	1 71 41                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:41
	shl.b32 	%r62, %r1, 12;
	.loc	1 49 40                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:49:40
	cvt.s64.s32 	%rd33, %r62;
	.loc	1 55 35                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:35
	add.s64 	%rd25, %rd2, %rd32;
	mov.pred 	%p15, -1;
	.loc	1 55 42                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:42
	// begin inline asm
	mov.u32 %r19, %r7;
	mov.u32 %r20, %r7;
	@%p15 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 60 70                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:60:70
	bar.sync 	0;
	.loc	1 61 55                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:55
	// begin inline asm
	mov.u32 %r23, %r7;
	mov.u32 %r24, %r7;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r23, %r24 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 71 36                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:36
	or.b64  	%rd34, %rd31, %rd33;
	.loc	1 71 29                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:29
	shl.b64 	%rd35, %rd34, 1;
	add.s64 	%rd27, %rd3, %rd35;
	.loc	1 55 95                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:95
	mov.b32 	{%rs9, %rs10}, %r19;
	cvt.f32.bf16 	%f45, %rs10;
	cvt.f32.bf16 	%f46, %rs9;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs11, %rs12}, %r23;
	cvt.f32.bf16 	%f47, %rs11;
	cvt.f32.bf16 	%f48, %rs12;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f49, %f44, %f48;
	mul.f32 	%f50, %f44, %f47;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f51, %f50, %f46;
	mul.f32 	%f52, %f49, %f45;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r27, %f52, %f51;
	.loc	1 55 95                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:95
	mov.b32 	{%rs13, %rs14}, %r20;
	cvt.f32.bf16 	%f53, %rs14;
	cvt.f32.bf16 	%f54, %rs13;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs15, %rs16}, %r24;
	cvt.f32.bf16 	%f55, %rs15;
	cvt.f32.bf16 	%f56, %rs16;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f57, %f44, %f56;
	mul.f32 	%f58, %f44, %f55;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f59, %f58, %f54;
	mul.f32 	%f60, %f57, %f53;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r28, %f60, %f59;
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd27 + 0 ], { %r27, %r28 };
	// end inline asm
	.loc	1 55 35                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:35
	add.s64 	%rd28, %rd25, 4096;
	.loc	1 55 42                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:42
	// begin inline asm
	mov.u32 %r29, %r7;
	mov.u32 %r30, %r7;
	@%p15 ld.global.L1::evict_last.v2.b32 { %r29, %r30 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 60 70                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:60:70
	bar.sync 	0;
	.loc	1 61 55                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:55
	// begin inline asm
	mov.u32 %r33, %r7;
	mov.u32 %r34, %r7;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r33, %r34 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 71 29                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:29
	add.s64 	%rd30, %rd27, 4096;
	.loc	1 55 95                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:95
	mov.b32 	{%rs17, %rs18}, %r29;
	cvt.f32.bf16 	%f61, %rs18;
	cvt.f32.bf16 	%f62, %rs17;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs19, %rs20}, %r33;
	cvt.f32.bf16 	%f63, %rs19;
	cvt.f32.bf16 	%f64, %rs20;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f65, %f44, %f64;
	mul.f32 	%f66, %f44, %f63;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f67, %f66, %f62;
	mul.f32 	%f68, %f65, %f61;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r37, %f68, %f67;
	.loc	1 55 95                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:55:95
	mov.b32 	{%rs21, %rs22}, %r30;
	cvt.f32.bf16 	%f69, %rs22;
	cvt.f32.bf16 	%f70, %rs21;
	.loc	1 61 117                        // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:61:117
	mov.b32 	{%rs23, %rs24}, %r34;
	cvt.f32.bf16 	%f71, %rs23;
	cvt.f32.bf16 	%f72, %rs24;
	.loc	1 68 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:68:24
	mul.f32 	%f73, %f44, %f72;
	mul.f32 	%f74, %f44, %f71;
	.loc	1 70 24                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:70:24
	mul.f32 	%f75, %f74, %f70;
	mul.f32 	%f76, %f73, %f69;
	.loc	1 71 53                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:71:53
	cvt.rn.bf16x2.f32 	%r38, %f76, %f75;
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd30 + 0 ], { %r37, %r38 };
	// end inline asm
	.loc	1 49 4                          // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:49:4
	ret;
$L__BB0_2:
	.loc	1 41 68                         // cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py:41:68
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/ix/cixeoedqifdj2exgcyfvkuj6b4mqll5al4jmcccfmj5n2hjbnt7z.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 120
.b8 101
.b8 111
.b8 101
.b8 100
.b8 113
.b8 105
.b8 102
.b8 100
.b8 106
.b8 50
.b8 101
.b8 120
.b8 103
.b8 99
.b8 121
.b8 102
.b8 118
.b8 107
.b8 117
.b8 106
.b8 54
.b8 98
.b8 52
.b8 109
.b8 113
.b8 108
.b8 108
.b8 53
.b8 97
.b8 108
.b8 52
.b8 106
.b8 109
.b8 99
.b8 99
.b8 99
.b8 102
.b8 109
.b8 106
.b8 53
.b8 110
.b8 50
.b8 104
.b8 106
.b8 98
.b8 110
.b8 116
.b8 55
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 105
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
