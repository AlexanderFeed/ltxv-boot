//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 117, 119, 47, 99, 117, 119, 113, 119, 101, 113, 111, 109, 98, 102, 50, 50, 107, 50, 110, 116, 107, 111, 102, 103, 115, 98, 118, 53, 55, 115, 106, 53, 118, 118, 100, 99, 121, 98, 117, 113, 114, 99, 110, 104, 98, 104, 111, 112, 102, 104, 113, 115, 113, 54, 52, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_7,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<18>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<49>;
	.loc	1 18 0                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:18:0

// %bb.0:
	ld.param.u64 	%rd17, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_6];
	ld.param.u64 	%rd16, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_5];
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_4];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_3];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_0];
	ld.param.u64 	%rd21, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:23:28
	mov.u32 	%r3, %ctaid.x;
	.loc	1 23 33                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:23:33
	shl.b32 	%r4, %r3, 6;
	ld.param.u64 	%rd22, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8_param_2];
	.loc	1 24 44                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:24:44
	mov.u32 	%r5, %tid.x;
	bfe.u32 	%r6, %r5, 2, 6;
	.loc	1 24 23                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:24:23
	or.b32  	%r1, %r6, %r4;
	.loc	1 25 21                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:25:21
	setp.lt.s32 	%p5, %r1, 512;
	.loc	1 26 37                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:26:37
	and.b32  	%r7, %r5, 3;
	.loc	1 29 30                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:29:30
	mul.wide.s32 	%rd23, %r1, 8;
	add.s64 	%rd19, %rd21, %rd23;
	.loc	1 29 35                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:29:35
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 37 50                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:50
	shl.b32 	%r8, %r1, 12;
	.loc	1 41 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:41:22
	add.s64 	%rd24, %rd18, 32128;
	.loc	1 42 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:42:22
	setp.lt.s64 	%p3, %rd18, 0;
	.loc	1 43 36                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:43:36
	selp.b64 	%rd25, %rd24, %rd18, %p3;
	.loc	1 44 41                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:41
	setp.gt.u64 	%p4, %rd25, 32127;
	.loc	1 45 46                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:46
	and.pred  	%p1, %p5, %p4;
	.loc	1 31 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:31:40
	or.b32  	%r2, %r7, %r8;
	shl.b64 	%rd26, %rd25, 13;
	mul.wide.u32 	%rd1, %r7, 2;
	or.b64  	%rd27, %rd26, %rd1;
	add.s64 	%rd45, %rd22, %rd27;
	mov.f32 	%f24, 0f00000000;
	mov.b64 	%rd46, -4;
	not.pred 	%p8, %p1;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:0:40
	add.s64 	%rd46, %rd46, 4;
	cvt.u32.u64 	%r9, %rd46;
	or.b32  	%r10, %r2, %r9;
	.loc	1 37 38                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:38
	mul.wide.s32 	%rd31, %r10, 2;
	add.s64 	%rd28, %rd13, %rd31;
	mov.b16 	%rs9, 0;
	.loc	1 37 55                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:55
	// begin inline asm
	mov.u16 %rs4, %rs9;
	@%p5 ld.global.L1::evict_first.b16 { %rs4 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:34
	add.s64 	%rd29, %rd14, %rd31;
	.loc	1 38 51                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:51
	// begin inline asm
	mov.u16 %rs6, %rs9;
	@%p5 ld.global.L1::evict_first.b16 { %rs6 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:35
	add.s64 	%rd30, %rd15, %rd31;
	.loc	1 39 52                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:52
	// begin inline asm
	mov.u16 %rs8, %rs9;
	@%p5 ld.global.L1::evict_first.b16 { %rs8 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 44 68                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:68
	@%p8 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	.loc	1 39 114                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:39:114
	cvt.f32.bf16 	%f5, %rs8;
	.loc	1 38 113                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:38:113
	cvt.f32.bf16 	%f6, %rs6;
	.loc	1 37 117                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:37:117
	cvt.f32.bf16 	%f7, %rs4;
	.loc	1 44 68                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:68
	bar.sync 	0;
	.loc	1 45 53                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:53
	// begin inline asm
	mov.u16 %rs10, %rs9;
	@%p5 ld.global.L1::evict_first.b16 { %rs10 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 45 115                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:45:115
	cvt.f32.bf16 	%f8, %rs10;
	.loc	1 46 22                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:46:22
	add.f32 	%f9, %f7, %f8;
	.loc	1 47 23                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:47:23
	add.f32 	%f10, %f9, %f6;
	.loc	1 48 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:48:24
	add.f32 	%f11, %f10, %f5;
	.loc	1 52 25                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:52:25
	fma.rn.f32 	%f12, %f11, %f11, %f24;
	.loc	1 53 50                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:53:50
	selp.f32 	%f24, %f12, %f24, %p5;
	.loc	1 54 56                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:54:56
	cvt.rn.bf16.f32 	%rs12, %f11;
	// begin inline asm
	@%p5 st.global.b16 [ %rd28 + 0 ], { %rs12 };
	// end inline asm
	.loc	1 31 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:31:40
	add.s64 	%rd45, %rd45, 8;
	setp.lt.u64 	%p11, %rd46, 4092;
	@%p11 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r11, %f24;
	shfl.sync.bfly.b32	%r12, %r11, 2, 31, -1;
	mov.b32 	%f13, %r12;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f24, %f13;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r13, %f14;
	shfl.sync.bfly.b32	%r14, %r13, 1, 31, -1;
	mov.b32 	%f15, %r14;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	mov.f32 	%f17, 0f45800000;
$L__tmp2:
	.loc	1 66 25                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:66:25
	div.full.f32 	%f18, %f16, %f17;
	.loc	1 68 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:68:24
	add.f32 	%f19, %f18, 0f358637BD;
	.loc	1 69 32                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:69:32
	rsqrt.approx.ftz.f32 	%f3, %f19;
	.loc	1 56 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:40
	add.s64 	%rd47, %rd16, %rd1;
	mov.b64 	%rd48, -4;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:0:40
	mov.b16 	%rs14, 0;
	mov.pred 	%p12, -1;
	.loc	1 62 42                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:62:42
	// begin inline asm
	mov.u16 %rs13, %rs14;
	@%p12 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd47 + 0 ];
	// end inline asm
	.loc	1 62 95                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:62:95
	cvt.f32.bf16 	%f20, %rs13;
	add.s64 	%rd48, %rd48, 4;
	cvt.u32.u64 	%r15, %rd48;
	or.b32  	%r16, %r2, %r15;
	.loc	1 63 39                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:39
	mul.wide.s32 	%rd38, %r16, 2;
	add.s64 	%rd36, %rd13, %rd38;
	.loc	1 63 56                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:56
	// begin inline asm
	mov.u16 %rs15, %rs14;
	@%p5 ld.global.L1::evict_first.b16 { %rs15 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 63 118                        // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:63:118
	cvt.f32.bf16 	%f21, %rs15;
	.loc	1 70 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:70:24
	mul.f32 	%f22, %f3, %f21;
	.loc	1 72 24                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:72:24
	mul.f32 	%f23, %f22, %f20;
	.loc	1 73 29                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:73:29
	add.s64 	%rd37, %rd17, %rd38;
	.loc	1 73 53                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:73:53
	cvt.rn.bf16.f32 	%rs17, %f23;
	// begin inline asm
	@%p5 st.global.b16 [ %rd37 + 0 ], { %rs17 };
	// end inline asm
	.loc	1 56 40                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:40
	add.s64 	%rd47, %rd47, 8;
	setp.lt.u64 	%p15, %rd48, 4092;
	@%p15 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 56 4                          // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:56:4
	ret;
$L__BB0_2:
	.loc	1 44 68                         // cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py:44:68
	mov.u64 	%rd39, assertMessage_0;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, assertFile_0;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, assertFunc_0;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 14, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd40;
	.param .b64 param1;
	st.param.b64 	[param1], %rd42;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd44;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 14
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 119
.b8 113
.b8 119
.b8 101
.b8 113
.b8 111
.b8 109
.b8 98
.b8 102
.b8 50
.b8 50
.b8 107
.b8 50
.b8 110
.b8 116
.b8 107
.b8 111
.b8 102
.b8 103
.b8 115
.b8 98
.b8 118
.b8 53
.b8 55
.b8 115
.b8 106
.b8 53
.b8 118
.b8 118
.b8 100
.b8 99
.b8 121
.b8 98
.b8 117
.b8 113
.b8 114
.b8 99
.b8 110
.b8 104
.b8 98
.b8 104
.b8 111
.b8 112
.b8 102
.b8 104
.b8 113
.b8 115
.b8 113
.b8 54
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 117
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
