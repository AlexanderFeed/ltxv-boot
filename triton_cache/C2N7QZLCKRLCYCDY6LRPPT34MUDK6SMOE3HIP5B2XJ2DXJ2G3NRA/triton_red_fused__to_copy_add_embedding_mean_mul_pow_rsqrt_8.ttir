#loc = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)
#loc1 = loc(unknown)
#loc50 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:27)
#loc74 = loc(callsite(#loc1 at #loc50))
module {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<64x1xi64> loc(#loc1)
    %cst_0 = arith.constant dense<32128> : tensor<64x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x4xbf16> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x4xbf16> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4.096000e+03> : tensor<64x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<true> : tensor<64x1xi1> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<64x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<1x4xi32> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<64x4xf32> loc(#loc1)
    %cst_10 = arith.constant dense<512> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_10 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<4xi32> -> tensor<1x4xi32> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>> loc(#loc10)
    %10 = tt.addptr %9, %5 : tensor<64x1x!tt.ptr<i64>>, tensor<64x1xi32> loc(#loc10)
    %11 = tt.load %10, %6 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>> loc(#loc11)
    %12 = scf.for %arg9 = %c0_i32 to %c4096_i32 step %c4_i32 iter_args(%arg10 = %cst_9) -> (tensor<64x4xf32>)  : i32 {
      %15 = tt.splat %arg9 : i32 -> tensor<1x4xi32> loc(#loc13)
      %16 = arith.addi %15, %8 : tensor<1x4xi32> loc(#loc13)
      %17 = arith.cmpi slt, %16, %cst_8 : tensor<1x4xi32> loc(#loc14)
      %18 = arith.muli %5, %cst_7 : tensor<64x1xi32> loc(#loc15)
      %19 = tt.broadcast %16 : tensor<1x4xi32> -> tensor<64x4xi32> loc(#loc16)
      %20 = tt.broadcast %18 : tensor<64x1xi32> -> tensor<64x4xi32> loc(#loc16)
      %21 = arith.addi %19, %20 : tensor<64x4xi32> loc(#loc16)
      %22 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc17)
      %23 = tt.addptr %22, %21 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi32> loc(#loc17)
      %24 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x4xi1> loc(#loc18)
      %25 = tt.broadcast %17 : tensor<1x4xi1> -> tensor<64x4xi1> loc(#loc18)
      %26 = arith.andi %24, %25 : tensor<64x4xi1> loc(#loc18)
      %27 = tt.load %23, %26, %cst_3 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>> loc(#loc19)
      %28 = arith.extf %27 : tensor<64x4xbf16> to tensor<64x4xf32> loc(#loc20)
      %29 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc21)
      %30 = tt.addptr %29, %21 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi32> loc(#loc21)
      %31 = tt.load %30, %26, %cst_3 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>> loc(#loc22)
      %32 = arith.extf %31 : tensor<64x4xbf16> to tensor<64x4xf32> loc(#loc23)
      %33 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc24)
      %34 = tt.addptr %33, %21 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi32> loc(#loc24)
      %35 = tt.load %34, %26, %cst_3 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>> loc(#loc25)
      %36 = arith.extf %35 : tensor<64x4xbf16> to tensor<64x4xf32> loc(#loc26)
      %37 = arith.addi %11, %cst_0 : tensor<64x1xi64> loc(#loc27)
      %38 = arith.cmpi slt, %11, %cst_2 : tensor<64x1xi64> loc(#loc28)
      %39 = arith.select %38, %37, %11 : tensor<64x1xi1>, tensor<64x1xi64> loc(#loc29)
      %40 = arith.cmpi sge, %39, %cst_2 : tensor<64x1xi64> loc(#loc30)
      %41 = arith.cmpi slt, %39, %cst_0 : tensor<64x1xi64> loc(#loc31)
      %42 = arith.andi %40, %41 : tensor<64x1xi1> loc(#loc32)
      %43 = arith.xori %6, %cst_6 : tensor<64x1xi1> loc(#loc33)
      %44 = arith.ori %42, %43 : tensor<64x1xi1> loc(#loc34)
      %45 = tt.broadcast %44 : tensor<64x1xi1> -> tensor<64x4xi1> loc(#loc34)
      tt.assert %45, "index out of bounds: 0 <= tmp4 < 32128" : tensor<64x4xi1> loc(#loc35)
      %46 = arith.muli %39, %cst : tensor<64x1xi64> loc(#loc36)
      %47 = tt.broadcast %46 : tensor<64x1xi64> -> tensor<64x4xi64> loc(#loc36)
      %48 = arith.extsi %16 : tensor<1x4xi32> to tensor<1x4xi64> loc(#loc37)
      %49 = tt.broadcast %48 : tensor<1x4xi64> -> tensor<64x4xi64> loc(#loc37)
      %50 = arith.addi %49, %47 : tensor<64x4xi64> loc(#loc37)
      %51 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc38)
      %52 = tt.addptr %51, %50 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi64> loc(#loc38)
      %53 = tt.load %52, %26, %cst_3 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>> loc(#loc39)
      %54 = arith.extf %53 : tensor<64x4xbf16> to tensor<64x4xf32> loc(#loc40)
      %55 = arith.addf %54, %28 : tensor<64x4xf32> loc(#loc41)
      %56 = arith.addf %55, %32 : tensor<64x4xf32> loc(#loc42)
      %57 = arith.addf %56, %36 : tensor<64x4xf32> loc(#loc43)
      %58 = arith.mulf %57, %57 : tensor<64x4xf32> loc(#loc44)
      %59 = arith.addf %arg10, %58 : tensor<64x4xf32> loc(#loc45)
      %60 = arith.select %26, %59, %arg10 : tensor<64x4xi1>, tensor<64x4xf32> loc(#loc46)
      %61 = arith.truncf %57 : tensor<64x4xf32> to tensor<64x4xbf16> loc(#loc47)
      tt.store %23, %61, %26 : tensor<64x4x!tt.ptr<bf16>> loc(#loc47)
      scf.yield %60 : tensor<64x4xf32> loc(#loc48)
    } loc(#loc12)
    %13 = "tt.reduce"(%12) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc50)), %arg10: f32 loc(callsite(#loc1 at #loc50))):
      %15 = arith.addf %arg9, %arg10 : f32 loc(#loc76)
      tt.reduce.return %15 : f32 loc(#loc73)
    }) : (tensor<64x4xf32>) -> tensor<64xf32> loc(#loc73)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc52)
    scf.for %arg9 = %c0_i32 to %c4096_i32 step %c4_i32  : i32 {
      %15 = tt.splat %arg9 : i32 -> tensor<1x4xi32> loc(#loc54)
      %16 = arith.addi %15, %8 : tensor<1x4xi32> loc(#loc54)
      %17 = arith.cmpi slt, %16, %cst_8 : tensor<1x4xi32> loc(#loc55)
      %18 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<1x4x!tt.ptr<bf16>> loc(#loc56)
      %19 = tt.addptr %18, %16 : tensor<1x4x!tt.ptr<bf16>>, tensor<1x4xi32> loc(#loc56)
      %20 = tt.load %19, %17, %cst_1 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<bf16>> loc(#loc57)
      %21 = arith.extf %20 : tensor<1x4xbf16> to tensor<1x4xf32> loc(#loc58)
      %22 = arith.muli %5, %cst_7 : tensor<64x1xi32> loc(#loc59)
      %23 = tt.broadcast %16 : tensor<1x4xi32> -> tensor<64x4xi32> loc(#loc60)
      %24 = tt.broadcast %22 : tensor<64x1xi32> -> tensor<64x4xi32> loc(#loc60)
      %25 = arith.addi %23, %24 : tensor<64x4xi32> loc(#loc60)
      %26 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc61)
      %27 = tt.addptr %26, %25 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi32> loc(#loc61)
      %28 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x4xi1> loc(#loc62)
      %29 = tt.broadcast %17 : tensor<1x4xi1> -> tensor<64x4xi1> loc(#loc62)
      %30 = arith.andi %28, %29 : tensor<64x4xi1> loc(#loc62)
      %31 = tt.load %27, %30, %cst_3 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<bf16>> loc(#loc63)
      %32 = arith.extf %31 : tensor<64x4xbf16> to tensor<64x4xf32> loc(#loc64)
      %33 = arith.divf %14, %cst_5 : tensor<64x1xf32> loc(#loc65)
      %34 = arith.addf %33, %cst_4 : tensor<64x1xf32> loc(#loc66)
      %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc67)
      %36 = tt.broadcast %35 : tensor<64x1xf32> -> tensor<64x4xf32> loc(#loc68)
      %37 = arith.mulf %32, %36 : tensor<64x4xf32> loc(#loc68)
      %38 = tt.broadcast %21 : tensor<1x4xf32> -> tensor<64x4xf32> loc(#loc69)
      %39 = arith.mulf %38, %37 : tensor<64x4xf32> loc(#loc69)
      %40 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<64x4x!tt.ptr<bf16>> loc(#loc70)
      %41 = tt.addptr %40, %25 : tensor<64x4x!tt.ptr<bf16>>, tensor<64x4xi32> loc(#loc70)
      %42 = arith.truncf %39 : tensor<64x4xf32> to tensor<64x4xbf16> loc(#loc71)
      tt.store %41, %42, %30 : tensor<64x4x!tt.ptr<bf16>> loc(#loc71)
    } loc(#loc53)
    tt.return loc(#loc72)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":24:36)
#loc5 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":24:44)
#loc6 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":24:23)
#loc7 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":25:21)
#loc8 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":26:27)
#loc9 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":26:37)
#loc10 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:30)
#loc11 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:35)
#loc12 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":31:40)
#loc13 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":32:31)
#loc14 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":33:29)
#loc15 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:50)
#loc16 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:45)
#loc17 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:38)
#loc18 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:63)
#loc19 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:55)
#loc20 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:117)
#loc21 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:34)
#loc22 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:51)
#loc23 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:113)
#loc24 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:35)
#loc25 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:52)
#loc26 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:114)
#loc27 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":41:22)
#loc28 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":42:22)
#loc29 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":43:36)
#loc30 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:32)
#loc31 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:48)
#loc32 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:41)
#loc33 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:60)
#loc34 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:58)
#loc35 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:68)
#loc36 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:46)
#loc37 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:41)
#loc38 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:34)
#loc39 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:53)
#loc40 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:115)
#loc41 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":46:22)
#loc42 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":47:23)
#loc43 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":48:24)
#loc44 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":50:24)
#loc45 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":52:25)
#loc46 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":53:50)
#loc47 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:56)
#loc48 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:8)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc52 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:30)
#loc53 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:40)
#loc54 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":57:31)
#loc55 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":58:29)
#loc56 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:35)
#loc57 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:42)
#loc58 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:95)
#loc59 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:51)
#loc60 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:46)
#loc61 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:39)
#loc62 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:64)
#loc63 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:56)
#loc64 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:118)
#loc65 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":66:25)
#loc66 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":68:24)
#loc67 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":69:32)
#loc68 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":70:24)
#loc69 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":72:24)
#loc70 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:29)
#loc71 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:53)
#loc72 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:4)
#loc73 = loc(callsite(#loc49 at #loc50))
#loc75 = loc(callsite(#loc51 at #loc49))
#loc76 = loc(callsite(#loc75 at #loc50))
