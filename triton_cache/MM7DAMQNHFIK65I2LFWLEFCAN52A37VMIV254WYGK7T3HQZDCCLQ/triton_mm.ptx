//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<450>;
	.reg .b64 	%rd<32>;
	.loc	1 17 0                          // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:17:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_mm_param_2];
	ld.param.u64 	%rd9, [triton_mm_param_0];
	ld.param.u64 	%rd10, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:40:24
	mov.u32 	%r84, %ctaid.x;
	.loc	1 46 22                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:46:22
	mul.hi.s32 	%r85, %r84, 715827883;
	shr.u32 	%r86, %r85, 31;
	shr.s32 	%r87, %r85, 6;
	add.s32 	%r88, %r87, %r86;
	.loc	1 47 41                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:47:41
	shl.b32 	%r89, %r88, 3;
	.loc	1 47 30                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:47:30
	sub.s32 	%r90, 8, %r89;
	.loc	1 47 50                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:47:50
	min.s32 	%r91, %r90, 8;
	.loc	1 48 40                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:48:40
	rem.s32 	%r92, %r84, %r91;
	.loc	1 48 34                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:48:34
	add.s32 	%r93, %r92, %r89;
	.loc	1 49 19                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:49:19
	mul.lo.s32 	%r94, %r88, 384;
	sub.s32 	%r95, %r84, %r94;
	.loc	1 49 30                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:49:30
	div.s32 	%r96, %r95, %r91;
	.loc	1 51 17                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:17
	shl.b32 	%r1, %r93, 6;
	.loc	1 51 40                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r97, %r2, 8;
	bfe.u32 	%r98, %r2, 1, 6;
	shl.b32 	%r3, %r2, 2;
	and.b32  	%r99, %r3, 16;
	.loc	1 51 27                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:27
	or.b32  	%r100, %r1, %r98;
	.loc	1 52 17                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:52:17
	shl.b32 	%r4, %r96, 6;
	.loc	1 52 27                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:52:27
	or.b32  	%r101, %r4, %r98;
	.loc	1 54 57                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:54:57
	bfe.s32 	%r102, %r93, 25, 1;
	shr.u32 	%r103, %r102, 23;
	add.s32 	%r104, %r100, %r103;
	and.b32  	%r105, %r104, 4193792;
	sub.s32 	%r106, %r100, %r105;
	.loc	1 58 57                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:58:57
	mul.hi.s32 	%r107, %r101, 715827883;
	shr.u32 	%r108, %r107, 31;
	shr.u32 	%r109, %r107, 9;
	add.s32 	%r110, %r109, %r108;
	mul.lo.s32 	%r111, %r110, 3072;
	sub.s32 	%r112, %r101, %r111;
	.loc	1 66 30                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:66:30
	shl.b32 	%r5, %r2, 4;
	and.b32  	%r113, %r5, 16;
	.loc	1 71 30                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:71:30
	mul.lo.s32 	%r114, %r106, 3072;
	.loc	1 77 55                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:55
	mul.lo.s32 	%r115, %r112, 3072;
	.loc	1 71 25                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:71:25
	or.b32  	%r116, %r114, %r113;
	.loc	1 72 25                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:72:25
	cvt.s64.s32 	%rd11, %r116;
	add.s64 	%rd6, %rd9, %rd11;
	.loc	1 72 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:72:20
	shl.b32 	%r117, %r97, 1;
	xor.b32  	%r118, %r113, %r117;
	shl.b32 	%r119, %r98, 5;
	or.b32  	%r120, %r118, %r119;
	mov.u32 	%r121, global_smem;
	add.s32 	%r272, %r121, %r120;
	mov.b32 	%r79, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r272 + 0 ], [ %rd6 + 0 ], 0x10, %r79;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:50
	or.b32  	%r122, %r115, %r113;
	.loc	1 77 25                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:25
	cvt.s64.s32 	%rd12, %r122;
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 77 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:20
	add.s32 	%r80, %r272, 2048;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd7 + 0 ], 0x10, %r79;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r123, %r2, 7;
	.loc	1 64 26                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:64:26
	or.b32  	%r124, %r97, %r123;
	and.b32  	%r125, %r2, 15;
	xor.b32  	%r126, %r3, %r2;
	and.b32  	%r127, %r126, 16;
	shr.u32 	%r128, %r2, 2;
	and.b32  	%r129, %r128, 16;
	or.b32  	%r130, %r129, %r125;
	shl.b32 	%r131, %r130, 5;
	or.b32  	%r8, %r131, %r127;
	or.b32  	%r132, %r124, %r129;
	shl.b32 	%r133, %r132, 5;
	or.b32  	%r134, %r133, %r127;
	or.b32  	%r9, %r134, 1024;
	xor.b32  	%r135, %r99, %r117;
	and.b32  	%r10, %r128, 8;
	or.b32  	%r136, %r10, %r123;
	shl.b32 	%r137, %r136, 5;
	or.b32  	%r11, %r137, %r135;
	mov.b32 	%r418, 0;
	mov.b32 	%r417, -1;
	mov.b64 	%rd31, 32;
	mov.u32 	%r419, %r418;
	mov.u32 	%r420, %r418;
	mov.u32 	%r421, %r418;
	mov.u32 	%r422, %r418;
	mov.u32 	%r423, %r418;
	mov.u32 	%r424, %r418;
	mov.u32 	%r425, %r418;
	mov.u32 	%r426, %r418;
	mov.u32 	%r427, %r418;
	mov.u32 	%r428, %r418;
	mov.u32 	%r429, %r418;
	mov.u32 	%r430, %r418;
	mov.u32 	%r431, %r418;
	mov.u32 	%r432, %r418;
	mov.u32 	%r433, %r418;
	mov.u32 	%r434, %r418;
	mov.u32 	%r435, %r418;
	mov.u32 	%r436, %r418;
	mov.u32 	%r437, %r418;
	mov.u32 	%r438, %r418;
	mov.u32 	%r439, %r418;
	mov.u32 	%r440, %r418;
	mov.u32 	%r441, %r418;
	mov.u32 	%r442, %r418;
	mov.u32 	%r443, %r418;
	mov.u32 	%r444, %r418;
	mov.u32 	%r445, %r418;
	mov.u32 	%r446, %r418;
	mov.u32 	%r447, %r418;
	mov.u32 	%r448, %r418;
	mov.u32 	%r449, %r418;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd31, 3072;
	add.s32 	%r276, %r417, 1;
	setp.gt.u32 	%p2, %r417, 2147483646;
	selp.b32 	%r417, %r276, 0, %p2;
	.loc	1 72 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r277, %r417, 11;
	add.s32 	%r279, %r121, %r277;
	add.s32 	%r142, %r279, %r8;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r168, %r169, %r170, %r171}, [%r142];
	// end inline asm
	add.s32 	%r147, %r279, %r9;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r224, %r225, %r226, %r227}, [%r147];
	// end inline asm
	.loc	1 77 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:20
	add.s32 	%r280, %r279, %r11;
	add.s32 	%r150, %r280, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r172, %r173}, [%r150];
	// end inline asm
	add.s32 	%r153, %r280, 2560;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r186, %r187}, [%r153];
	// end inline asm
	add.s32 	%r156, %r280, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r200, %r201}, [%r156];
	// end inline asm
	add.s32 	%r159, %r280, 3584;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r214, %r215}, [%r159];
	// end inline asm
	.loc	1 78 25                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r418, %r419, %r420, %r421 }, { %r168, %r169, %r170, %r171 }, { %r172, %r173 }, { %r418, %r419, %r420, %r421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r422, %r423, %r424, %r425 }, { %r168, %r169, %r170, %r171 }, { %r186, %r187 }, { %r422, %r423, %r424, %r425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r426, %r427, %r428, %r429 }, { %r168, %r169, %r170, %r171 }, { %r200, %r201 }, { %r426, %r427, %r428, %r429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r430, %r431, %r432, %r433 }, { %r168, %r169, %r170, %r171 }, { %r214, %r215 }, { %r430, %r431, %r432, %r433 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r434, %r435, %r436, %r437 }, { %r224, %r225, %r226, %r227 }, { %r172, %r173 }, { %r434, %r435, %r436, %r437 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r438, %r439, %r440, %r441 }, { %r224, %r225, %r226, %r227 }, { %r186, %r187 }, { %r438, %r439, %r440, %r441 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r442, %r443, %r444, %r445 }, { %r224, %r225, %r226, %r227 }, { %r200, %r201 }, { %r442, %r443, %r444, %r445 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r446, %r447, %r448, %r449 }, { %r224, %r225, %r226, %r227 }, { %r214, %r215 }, { %r446, %r447, %r448, %r449 };
	// end inline asm
	.loc	1 72 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:72:20
	add.s64 	%rd13, %rd6, %rd31;
	bar.sync 	0;
	selp.b32 	%r273, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r272 + 0 ], [ %rd13 + 0 ], 0x10, %r273;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:77:20
	add.s64 	%rd14, %rd7, %rd31;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd14 + 0 ], 0x10, %r273;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:64:26
	add.s64 	%rd31, %rd31, 32;
	setp.ne.s64 	%p3, %rd31, 3104;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:40
	and.b32  	%r361, %r3, 60;
	.loc	1 52 27                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:52:27
	or.b32  	%r362, %r4, %r361;
	.loc	1 51 40                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:40
	bfe.u32 	%r363, %r2, 4, 3;
	.loc	1 51 27                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:51:27
	or.b32  	%r364, %r363, %r1;
	or.b32  	%r365, %r364, 56;
	or.b32  	%r366, %r364, 48;
	or.b32  	%r367, %r364, 40;
	or.b32  	%r368, %r364, 32;
	or.b32  	%r369, %r364, 24;
	or.b32  	%r370, %r364, 16;
	or.b32  	%r371, %r364, 8;
	.loc	1 64 26                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:85:20
	setp.lt.s32 	%p28, %r364, 512;
	setp.lt.s32 	%p29, %r371, 512;
	setp.lt.s32 	%p30, %r370, 512;
	setp.lt.s32 	%p31, %r369, 512;
	setp.lt.s32 	%p32, %r368, 512;
	setp.lt.s32 	%p33, %r367, 512;
	setp.lt.s32 	%p34, %r366, 512;
	setp.lt.s32 	%p35, %r365, 512;
	.loc	1 85 34                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:85:34
	setp.lt.s32 	%p36, %r362, 3072;
	.loc	1 85 26                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:85:26
	and.pred  	%p20, %p28, %p36;
	and.pred  	%p21, %p29, %p36;
	and.pred  	%p22, %p30, %p36;
	and.pred  	%p23, %p31, %p36;
	and.pred  	%p24, %p32, %p36;
	and.pred  	%p25, %p33, %p36;
	and.pred  	%p26, %p34, %p36;
	and.pred  	%p27, %p35, %p36;
	.loc	1 88 26                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:88:26
	mad.lo.s32 	%r372, %r364, 3072, %r362;
	add.s32 	%r373, %r372, 24576;
	add.s32 	%r374, %r372, 49152;
	add.s32 	%r375, %r372, 73728;
	add.s32 	%r376, %r372, 98304;
	add.s32 	%r377, %r372, 122880;
	add.s32 	%r378, %r372, 147456;
	.loc	1 88 21                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:88:21
	add.s32 	%r379, %r372, 172032;
	.loc	1 89 25                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:89:25
	mul.wide.s32 	%rd23, %r372, 4;
	add.s64 	%rd15, %rd5, %rd23;
	mul.wide.s32 	%rd24, %r373, 4;
	add.s64 	%rd16, %rd5, %rd24;
	mul.wide.s32 	%rd25, %r374, 4;
	add.s64 	%rd17, %rd5, %rd25;
	mul.wide.s32 	%rd26, %r375, 4;
	add.s64 	%rd18, %rd5, %rd26;
	mul.wide.s32 	%rd27, %r376, 4;
	add.s64 	%rd19, %rd5, %rd27;
	mul.wide.s32 	%rd28, %r377, 4;
	add.s64 	%rd20, %rd5, %rd28;
	mul.wide.s32 	%rd29, %r378, 4;
	add.s64 	%rd21, %rd5, %rd29;
	mul.wide.s32 	%rd30, %r379, 4;
	add.s64 	%rd22, %rd5, %rd30;
	.loc	1 89 67                         // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:89:67
	shl.b32 	%r380, %r2, 1;
	and.b32  	%r381, %r380, 6;
	and.b32  	%r382, %r5, 192;
	or.b32  	%r383, %r382, %r381;
	and.b32  	%r384, %r5, 1280;
	or.b32  	%r385, %r384, %r383;
	or.b32  	%r386, %r385, %r10;
	and.b32  	%r387, %r3, 508;
	shr.u32 	%r388, %r385, 2;
	and.b32  	%r389, %r388, 368;
	add.s32 	%r391, %r121, %r389;
	shl.b32 	%r392, %r386, 2;
	add.s32 	%r281, %r391, %r392;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r281 + 0 ], { %r418, %r419 };
	// end inline asm
	or.b32  	%r393, %r385, 512;
	shr.u32 	%r394, %r393, 2;
	and.b32  	%r395, %r394, 496;
	add.s32 	%r396, %r121, %r395;
	add.s32 	%r397, %r396, %r392;
	add.s32 	%r284, %r397, 2048;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r284 + 0 ], { %r420, %r421 };
	// end inline asm
	add.s32 	%r287, %r281, 64;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r287 + 0 ], { %r422, %r423 };
	// end inline asm
	add.s32 	%r290, %r397, 2112;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r290 + 0 ], { %r424, %r425 };
	// end inline asm
	add.s32 	%r293, %r281, 128;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r293 + 0 ], { %r426, %r427 };
	// end inline asm
	add.s32 	%r296, %r397, 2176;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r296 + 0 ], { %r428, %r429 };
	// end inline asm
	add.s32 	%r299, %r281, 192;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r299 + 0 ], { %r430, %r431 };
	// end inline asm
	add.s32 	%r302, %r397, 2240;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r302 + 0 ], { %r432, %r433 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r398, %r2, 112;
	add.s32 	%r399, %r121, %r398;
	shl.b32 	%r400, %r387, 2;
	add.s32 	%r401, %r399, %r400;
	ld.shared.v4.u32 	{%r329, %r330, %r331, %r332}, [%r401];
	or.b32  	%r402, %r387, 512;
	shr.u32 	%r403, %r402, 2;
	and.b32  	%r404, %r403, 240;
	add.s32 	%r405, %r121, %r404;
	add.s32 	%r406, %r405, %r400;
	ld.shared.v4.u32 	{%r333, %r334, %r335, %r336}, [%r406+2048];
	or.b32  	%r407, %r387, 1024;
	shr.u32 	%r408, %r407, 2;
	and.b32  	%r409, %r408, 368;
	add.s32 	%r410, %r121, %r409;
	add.s32 	%r411, %r410, %r400;
	ld.shared.v4.u32 	{%r337, %r338, %r339, %r340}, [%r411+4096];
	or.b32  	%r412, %r387, 1536;
	shr.u32 	%r413, %r412, 2;
	and.b32  	%r414, %r413, 496;
	add.s32 	%r415, %r121, %r414;
	add.s32 	%r416, %r415, %r400;
	ld.shared.v4.u32 	{%r341, %r342, %r343, %r344}, [%r416+6144];
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r281 + 0 ], { %r434, %r435 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r284 + 0 ], { %r436, %r437 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r287 + 0 ], { %r438, %r439 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r290 + 0 ], { %r440, %r441 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r293 + 0 ], { %r442, %r443 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r296 + 0 ], { %r444, %r445 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r299 + 0 ], { %r446, %r447 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r302 + 0 ], { %r448, %r449 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r345, %r346, %r347, %r348}, [%r401];
	ld.shared.v4.u32 	{%r349, %r350, %r351, %r352}, [%r406+2048];
	ld.shared.v4.u32 	{%r353, %r354, %r355, %r356}, [%r411+4096];
	ld.shared.v4.u32 	{%r357, %r358, %r359, %r360}, [%r416+6144];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd15 + 0 ], { %r329, %r330, %r331, %r332 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd16 + 0 ], { %r333, %r334, %r335, %r336 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd17 + 0 ], { %r337, %r338, %r339, %r340 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd18 + 0 ], { %r341, %r342, %r343, %r344 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd19 + 0 ], { %r345, %r346, %r347, %r348 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd20 + 0 ], { %r349, %r350, %r351, %r352 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd21 + 0 ], { %r353, %r354, %r355, %r356 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd22 + 0 ], { %r357, %r358, %r359, %r360 };
	// end inline asm
	.loc	1 89 4                          // c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/5z/c5z35spnthe5jokrm5o7jk6u5wji5dfkaiygcegniun6lfhy5a3d.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 122
.b8 51
.b8 53
.b8 115
.b8 112
.b8 110
.b8 116
.b8 104
.b8 101
.b8 53
.b8 106
.b8 111
.b8 107
.b8 114
.b8 109
.b8 53
.b8 111
.b8 55
.b8 106
.b8 107
.b8 54
.b8 117
.b8 53
.b8 119
.b8 106
.b8 105
.b8 53
.b8 100
.b8 102
.b8 107
.b8 97
.b8 105
.b8 121
.b8 103
.b8 99
.b8 101
.b8 103
.b8 110
.b8 105
.b8 117
.b8 110
.b8 54
.b8 108
.b8 102
.b8 104
.b8 121
.b8 53
.b8 97
.b8 51
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 53
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
