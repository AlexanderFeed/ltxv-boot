#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 16], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [32, 1], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 32], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0)
#loc1 = loc(unknown)
#loc32 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":43:38)
#loc36 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":44:38)
#loc81 = loc(callsite(#loc1 at #loc32))
#loc87 = loc(callsite(#loc1 at #loc36))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 32 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_clamp_mul_reciprocal_11(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":18:0)) attributes {noinline = false} {
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<1.270000e+02> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x512xbf16, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<0.00787401571> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<526336> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<3072> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<0xFF800000> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0x7F800000> : tensor<1x512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c128_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x512xi32, #blocked> loc(#loc70)
    %6 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc7)
    %7 = tt.splat %1 : i1 -> tensor<1x512xi1, #blocked> loc(#loc71)
    %8:2 = scf.for %arg6 = %c0_i32 to %c3072_i32 step %c512_i32 iter_args(%arg7 = %cst_10, %arg8 = %cst_9) -> (tensor<1x512xf32, #blocked>, tensor<1x512xf32, #blocked>)  : i32 {
      %50 = tt.splat %arg6 : i32 -> tensor<1x512xi32, #blocked> loc(#loc10)
      %51 = arith.addi %50, %3 : tensor<1x512xi32, #blocked> loc(#loc10)
      %52 = arith.cmpi slt, %51, %cst_8 : tensor<1x512xi32, #blocked> loc(#loc11)
      %53 = arith.divsi %51, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc12)
      %54 = arith.muli %53, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc13)
      %55 = arith.addi %5, %54 : tensor<1x512xi32, #blocked> loc(#loc6)
      %56 = arith.remsi %51, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc14)
      %57 = arith.addi %55, %56 : tensor<1x512xi32, #blocked> loc(#loc15)
      %58 = tt.addptr %6, %57 : tensor<1x512x!tt.ptr<bf16>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc7)
      %59 = arith.andi %7, %52 : tensor<1x512xi1, #blocked> loc(#loc8)
      %60 = tt.load %58, %59, %cst_3 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc16)
      %61 = arith.extf %60 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc17)
      %62 = arith.cmpf olt, %arg7, %61 : tensor<1x512xf32, #blocked> loc(#loc72)
      %63 = arith.cmpf une, %arg7, %arg7 : tensor<1x512xf32, #blocked> loc(#loc73)
      %64 = arith.ori %62, %63 : tensor<1x512xi1, #blocked> loc(#loc74)
      %65 = arith.select %64, %arg7, %61 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc75)
      %66 = arith.select %59, %65, %arg7 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc23)
      %67 = arith.cmpf ogt, %arg8, %61 : tensor<1x512xf32, #blocked> loc(#loc76)
      %68 = arith.cmpf une, %arg8, %arg8 : tensor<1x512xf32, #blocked> loc(#loc77)
      %69 = arith.ori %67, %68 : tensor<1x512xi1, #blocked> loc(#loc78)
      %70 = arith.select %69, %arg8, %61 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc79)
      %71 = arith.select %59, %70, %arg8 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc29)
      scf.yield %66, %71 : tensor<1x512xf32, #blocked>, tensor<1x512xf32, #blocked> loc(#loc30)
    } loc(#loc9)
    %9 = "tt.reduce"(%8#0) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc32)), %arg7: f32 loc(callsite(#loc1 at #loc32))):
      %50 = arith.cmpf olt, %arg6, %arg7 : f32 loc(#loc117)
      %51 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc118)
      %52 = arith.ori %50, %51 : i1 loc(#loc119)
      %53 = arith.select %52, %arg6, %arg7 : f32 loc(#loc120)
      tt.reduce.return %53 : f32 loc(#loc80)
    }) : (tensor<1x512xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc80)
    %10 = ttg.convert_layout %9 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc33)
    %11 = ttg.convert_layout %9 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc33)
    %12 = tt.expand_dims %11 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc34)
    %13 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc34)
    %14 = "tt.reduce"(%8#1) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc36)), %arg7: f32 loc(callsite(#loc1 at #loc36))):
      %50 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc121)
      %51 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc122)
      %52 = arith.ori %50, %51 : i1 loc(#loc123)
      %53 = arith.select %52, %arg6, %arg7 : f32 loc(#loc124)
      tt.reduce.return %53 : f32 loc(#loc86)
    }) : (tensor<1x512xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc86)
    %15 = ttg.convert_layout %14 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc37)
    %16 = ttg.convert_layout %14 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc37)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1xf32, #blocked2> loc(#loc38)
    %18 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc38)
    %19 = tt.addptr %arg1, %0 : !tt.ptr<bf16>, i32 loc(#loc39)
    %20 = arith.truncf %12 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc33)
    %21 = tt.splat %19 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc33)
    %22 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked2> loc(#loc33)
    tt.store %21, %20, %22 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc33)
    %23 = tt.addptr %arg2, %0 : !tt.ptr<bf16>, i32 loc(#loc40)
    %24 = arith.truncf %17 : tensor<1x1xf32, #blocked2> to tensor<1x1xbf16, #blocked2> loc(#loc37)
    %25 = tt.splat %23 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc37)
    tt.store %25, %24, %22 : tensor<1x1x!tt.ptr<bf16>, #blocked2> loc(#loc37)
    %26 = arith.cmpf olt, %13, %cst_5 : tensor<1x1xf32, #blocked1> loc(#loc92)
    %27 = arith.cmpf une, %13, %13 : tensor<1x1xf32, #blocked1> loc(#loc93)
    %28 = arith.ori %26, %27 : tensor<1x1xi1, #blocked1> loc(#loc94)
    %29 = arith.select %28, %13, %cst_5 : tensor<1x1xi1, #blocked1>, tensor<1x1xf32, #blocked1> loc(#loc95)
    %30 = arith.subf %cst_5, %29 : tensor<1x1xf32, #blocked1> loc(#loc42)
    %31 = arith.cmpf ogt, %18, %cst_5 : tensor<1x1xf32, #blocked1> loc(#loc96)
    %32 = arith.cmpf une, %18, %18 : tensor<1x1xf32, #blocked1> loc(#loc97)
    %33 = arith.ori %31, %32 : tensor<1x1xi1, #blocked1> loc(#loc98)
    %34 = arith.select %33, %18, %cst_5 : tensor<1x1xi1, #blocked1>, tensor<1x1xf32, #blocked1> loc(#loc99)
    %35 = arith.cmpf ogt, %30, %34 : tensor<1x1xf32, #blocked1> loc(#loc100)
    %36 = arith.cmpf une, %30, %30 : tensor<1x1xf32, #blocked1> loc(#loc101)
    %37 = arith.ori %35, %36 : tensor<1x1xi1, #blocked1> loc(#loc102)
    %38 = arith.select %37, %30, %34 : tensor<1x1xi1, #blocked1>, tensor<1x1xf32, #blocked1> loc(#loc103)
    %39 = arith.mulf %38, %cst_4 : tensor<1x1xf32, #blocked1> loc(#loc45)
    %40 = arith.cmpf ogt, %39, %cst_1 : tensor<1x1xf32, #blocked1> loc(#loc104)
    %41 = arith.cmpf une, %39, %39 : tensor<1x1xf32, #blocked1> loc(#loc105)
    %42 = arith.ori %40, %41 : tensor<1x1xi1, #blocked1> loc(#loc106)
    %43 = arith.select %42, %39, %cst_1 : tensor<1x1xi1, #blocked1>, tensor<1x1xf32, #blocked1> loc(#loc107)
    %44 = arith.divf %cst_2, %43 : tensor<1x1xf32, #blocked1> loc(#loc47)
    %45 = ttg.convert_layout %44 : tensor<1x1xf32, #blocked1> -> tensor<1x1xf32, #blocked> loc(#loc48)
    %46 = tt.broadcast %45 : tensor<1x1xf32, #blocked> -> tensor<1x512xf32, #blocked> loc(#loc48)
    %47 = arith.muli %0, %c3072_i32 : i32 loc(#loc49)
    %48 = tt.splat %47 : i32 -> tensor<1x512xi32, #blocked> loc(#loc108)
    %49 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<1x512x!tt.ptr<i8>, #blocked> loc(#loc51)
    scf.for %arg6 = %c0_i32 to %c3072_i32 step %c512_i32  : i32 {
      %50 = tt.splat %arg6 : i32 -> tensor<1x512xi32, #blocked> loc(#loc53)
      %51 = arith.addi %50, %3 : tensor<1x512xi32, #blocked> loc(#loc53)
      %52 = arith.cmpi slt, %51, %cst_8 : tensor<1x512xi32, #blocked> loc(#loc54)
      %53 = arith.divsi %51, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc55)
      %54 = arith.muli %53, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc56)
      %55 = arith.addi %5, %54 : tensor<1x512xi32, #blocked> loc(#loc57)
      %56 = arith.remsi %51, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc58)
      %57 = arith.addi %55, %56 : tensor<1x512xi32, #blocked> loc(#loc59)
      %58 = tt.addptr %6, %57 : tensor<1x512x!tt.ptr<bf16>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc60)
      %59 = arith.andi %7, %52 : tensor<1x512xi1, #blocked> loc(#loc61)
      %60 = tt.load %58, %59, %cst_3 evictionPolicy = evict_first : tensor<1x512x!tt.ptr<bf16>, #blocked> loc(#loc62)
      %61 = arith.extf %60 : tensor<1x512xbf16, #blocked> to tensor<1x512xf32, #blocked> loc(#loc63)
      %62 = arith.mulf %61, %46 : tensor<1x512xf32, #blocked> loc(#loc48)
      %63 = tt.extern_elementwise %62 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x512xf32, #blocked>) -> tensor<1x512xf32, #blocked> loc(#loc64)
      %64 = arith.cmpf ogt, %63, %cst_0 : tensor<1x512xf32, #blocked> loc(#loc109)
      %65 = arith.cmpf une, %63, %63 : tensor<1x512xf32, #blocked> loc(#loc110)
      %66 = arith.ori %64, %65 : tensor<1x512xi1, #blocked> loc(#loc111)
      %67 = arith.select %66, %63, %cst_0 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc112)
      %68 = arith.cmpf olt, %67, %cst : tensor<1x512xf32, #blocked> loc(#loc113)
      %69 = arith.cmpf une, %67, %67 : tensor<1x512xf32, #blocked> loc(#loc114)
      %70 = arith.ori %68, %69 : tensor<1x512xi1, #blocked> loc(#loc115)
      %71 = arith.select %70, %67, %cst : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc116)
      %72 = arith.fptosi %71 : tensor<1x512xf32, #blocked> to tensor<1x512xi8, #blocked> loc(#loc67)
      %73 = arith.addi %51, %48 : tensor<1x512xi32, #blocked> loc(#loc50)
      %74 = tt.addptr %49, %73 : tensor<1x512x!tt.ptr<i8>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc51)
      tt.store %74, %72, %59 : tensor<1x512x!tt.ptr<i8>, #blocked> loc(#loc68)
    } loc(#loc52)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":26:37)
#loc5 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:38)
#loc6 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:43)
#loc7 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:34)
#loc8 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:91)
#loc9 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":31:40)
#loc10 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":32:31)
#loc11 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":33:29)
#loc12 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:59)
#loc13 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:51)
#loc14 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:75)
#loc15 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:68)
#loc16 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:83)
#loc17 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":37:144)
#loc18 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc19 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":39:45)
#loc20 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc21 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc22 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc23 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":40:48)
#loc24 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc25 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":41:45)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc28 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc29 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":42:48)
#loc30 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":42:8)
#loc31 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc33 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":45:36)
#loc34 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":43:41)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc37 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":46:36)
#loc38 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":44:41)
#loc39 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":45:25)
#loc40 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":46:25)
#loc41 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":55:44)
#loc42 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":56:16)
#loc43 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":57:45)
#loc44 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":58:45)
#loc45 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":60:24)
#loc46 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":63:46)
#loc47 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":66:25)
#loc48 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":69:23)
#loc49 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":78:41)
#loc50 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":78:36)
#loc51 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":78:29)
#loc52 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":47:40)
#loc53 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":48:31)
#loc54 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":49:29)
#loc55 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:59)
#loc56 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:51)
#loc57 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:43)
#loc58 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:75)
#loc59 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:68)
#loc60 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:34)
#loc61 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:91)
#loc62 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:83)
#loc63 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":53:145)
#loc64 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":70:36)
#loc65 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":73:46)
#loc66 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":75:46)
#loc67 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":77:25)
#loc68 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":78:53)
#loc69 = loc("/tmp/torchinductor_root/cn/ccnfeeuff2srau22hcscreqrsvvhiuhx6xppalfghrtnhaosx7ti.py":47:4)
#loc70 = loc(fused[#loc6, #loc5])
#loc71 = loc(fused[#loc8, #loc3])
#loc72 = loc(callsite(#loc18 at #loc19))
#loc73 = loc(callsite(#loc20 at #loc19))
#loc74 = loc(callsite(#loc21 at #loc19))
#loc75 = loc(callsite(#loc22 at #loc19))
#loc76 = loc(callsite(#loc24 at #loc25))
#loc77 = loc(callsite(#loc26 at #loc25))
#loc78 = loc(callsite(#loc27 at #loc25))
#loc79 = loc(callsite(#loc28 at #loc25))
#loc80 = loc(callsite(#loc31 at #loc32))
#loc82 = loc(callsite(#loc18 at #loc31))
#loc83 = loc(callsite(#loc20 at #loc31))
#loc84 = loc(callsite(#loc21 at #loc31))
#loc85 = loc(callsite(#loc22 at #loc31))
#loc86 = loc(callsite(#loc35 at #loc36))
#loc88 = loc(callsite(#loc24 at #loc35))
#loc89 = loc(callsite(#loc26 at #loc35))
#loc90 = loc(callsite(#loc27 at #loc35))
#loc91 = loc(callsite(#loc28 at #loc35))
#loc92 = loc(callsite(#loc18 at #loc41))
#loc93 = loc(callsite(#loc20 at #loc41))
#loc94 = loc(callsite(#loc21 at #loc41))
#loc95 = loc(callsite(#loc22 at #loc41))
#loc96 = loc(callsite(#loc24 at #loc43))
#loc97 = loc(callsite(#loc26 at #loc43))
#loc98 = loc(callsite(#loc27 at #loc43))
#loc99 = loc(callsite(#loc28 at #loc43))
#loc100 = loc(callsite(#loc24 at #loc44))
#loc101 = loc(callsite(#loc26 at #loc44))
#loc102 = loc(callsite(#loc27 at #loc44))
#loc103 = loc(callsite(#loc28 at #loc44))
#loc104 = loc(callsite(#loc24 at #loc46))
#loc105 = loc(callsite(#loc26 at #loc46))
#loc106 = loc(callsite(#loc27 at #loc46))
#loc107 = loc(callsite(#loc28 at #loc46))
#loc108 = loc(fused[#loc50, #loc49])
#loc109 = loc(callsite(#loc24 at #loc65))
#loc110 = loc(callsite(#loc26 at #loc65))
#loc111 = loc(callsite(#loc27 at #loc65))
#loc112 = loc(callsite(#loc28 at #loc65))
#loc113 = loc(callsite(#loc18 at #loc66))
#loc114 = loc(callsite(#loc20 at #loc66))
#loc115 = loc(callsite(#loc21 at #loc66))
#loc116 = loc(callsite(#loc22 at #loc66))
#loc117 = loc(callsite(#loc82 at #loc32))
#loc118 = loc(callsite(#loc83 at #loc32))
#loc119 = loc(callsite(#loc84 at #loc32))
#loc120 = loc(callsite(#loc85 at #loc32))
#loc121 = loc(callsite(#loc88 at #loc36))
#loc122 = loc(callsite(#loc89 at #loc36))
#loc123 = loc(callsite(#loc90 at #loc36))
#loc124 = loc(callsite(#loc91 at #loc36))
