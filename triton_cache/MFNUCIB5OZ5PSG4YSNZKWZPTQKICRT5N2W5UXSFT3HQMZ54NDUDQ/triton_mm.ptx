//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<231>;
	.reg .f32 	%f<162>;
	.reg .b64 	%rd<24>;
	.loc	1 17 0                          // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:17:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_mm_param_2];
	ld.param.u64 	%rd9, [triton_mm_param_0];
	ld.param.u64 	%rd10, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:40:24
	mov.u32 	%r19, %ctaid.x;
	.loc	1 46 22                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:46:22
	shr.s32 	%r20, %r19, 31;
	shr.u32 	%r21, %r20, 23;
	add.s32 	%r22, %r19, %r21;
	shr.s32 	%r23, %r22, 9;
	.loc	1 47 41                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:47:41
	shl.b32 	%r24, %r23, 3;
	.loc	1 47 30                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:47:30
	sub.s32 	%r25, 8, %r24;
	.loc	1 47 50                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:47:50
	min.s32 	%r26, %r25, 8;
	.loc	1 48 40                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:48:40
	rem.s32 	%r27, %r19, %r26;
	.loc	1 48 34                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:48:34
	add.s32 	%r28, %r27, %r24;
	.loc	1 49 19                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:49:19
	and.b32  	%r29, %r22, -512;
	sub.s32 	%r30, %r19, %r29;
	.loc	1 49 30                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:49:30
	div.s32 	%r31, %r30, %r26;
	.loc	1 51 17                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:17
	shl.b32 	%r1, %r28, 6;
	.loc	1 51 40                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r32, %r2, 8;
	shr.u32 	%r33, %r2, 1;
	and.b32  	%r34, %r33, 8;
	bfe.u32 	%r35, %r2, 1, 6;
	shl.b32 	%r3, %r2, 3;
	and.b32  	%r36, %r3, 8;
	.loc	1 51 27                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:27
	or.b32  	%r37, %r1, %r35;
	.loc	1 52 17                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:52:17
	shl.b32 	%r4, %r31, 6;
	.loc	1 52 27                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:52:27
	or.b32  	%r38, %r4, %r35;
	.loc	1 54 57                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:54:57
	bfe.s32 	%r39, %r28, 25, 1;
	shr.u32 	%r40, %r39, 23;
	add.s32 	%r41, %r37, %r40;
	and.b32  	%r42, %r41, 2096640;
	sub.s32 	%r43, %r37, %r42;
	.loc	1 58 57                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:58:57
	bfe.s32 	%r44, %r31, 25, 1;
	shr.u32 	%r45, %r44, 20;
	add.s32 	%r46, %r38, %r45;
	and.b32  	%r47, %r46, 2093056;
	sub.s32 	%r48, %r38, %r47;
	.loc	1 71 31                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:71:31
	mul.lo.s32 	%r49, %r43, 10240;
	.loc	1 77 56                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:56
	mul.lo.s32 	%r50, %r48, 10240;
	.loc	1 71 25                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:71:25
	or.b32  	%r51, %r49, %r36;
	.loc	1 72 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:72:20
	xor.b32  	%r52, %r36, %r32;
	shl.b32 	%r53, %r52, 1;
	shl.b32 	%r54, %r35, 5;
	or.b32  	%r55, %r54, %r53;
	mov.u32 	%r56, global_smem;
	add.s32 	%r143, %r56, %r55;
	.loc	1 72 25                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:72:25
	mul.wide.s32 	%rd11, %r51, 2;
	.loc	1 64 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:64:26
	add.s64 	%rd6, %rd9, %rd11;
	mov.b32 	%r15, 16;
	.loc	1 72 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:72:20
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd6 + 0 ], 0x10, %r15;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:50
	or.b32  	%r57, %r50, %r36;
	.loc	1 77 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:20
	add.s32 	%r16, %r143, 2048;
	.loc	1 77 25                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:25
	mul.wide.s32 	%rd12, %r57, 2;
	.loc	1 64 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:64:26
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 77 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:20
	// begin inline asm
	cp.async.cg.shared.global [ %r16 + 0 ], [ %rd7 + 0 ], 0x10, %r15;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r58, %r2, 7;
	.loc	1 64 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:64:26
	or.b32  	%r59, %r32, %r58;
	shl.b32 	%r7, %r2, 1;
	and.b32  	%r60, %r7, 8;
	and.b32  	%r61, %r2, 15;
	xor.b32  	%r62, %r60, %r34;
	shr.u32 	%r63, %r2, 2;
	and.b32  	%r64, %r63, 16;
	or.b32  	%r65, %r64, %r61;
	shl.b32 	%r66, %r65, 4;
	or.b32  	%r8, %r66, %r62;
	or.b32  	%r67, %r59, %r64;
	shl.b32 	%r68, %r67, 4;
	or.b32  	%r69, %r68, %r62;
	or.b32  	%r9, %r69, 512;
	xor.b32  	%r70, %r60, %r32;
	and.b32  	%r10, %r63, 8;
	or.b32  	%r71, %r10, %r58;
	shl.b32 	%r72, %r71, 4;
	or.b32  	%r11, %r72, %r70;
	mov.f32 	%f130, 0f00000000;
	mov.b32 	%r230, -1;
	mov.b64 	%rd23, 32;
	shl.b32 	%r151, %r8, 1;
	shl.b32 	%r152, %r9, 1;
	shl.b32 	%r153, %r11, 1;
	mov.f32 	%f131, %f130;
	mov.f32 	%f132, %f130;
	mov.f32 	%f133, %f130;
	mov.f32 	%f134, %f130;
	mov.f32 	%f135, %f130;
	mov.f32 	%f136, %f130;
	mov.f32 	%f137, %f130;
	mov.f32 	%f138, %f130;
	mov.f32 	%f139, %f130;
	mov.f32 	%f140, %f130;
	mov.f32 	%f141, %f130;
	mov.f32 	%f142, %f130;
	mov.f32 	%f143, %f130;
	mov.f32 	%f144, %f130;
	mov.f32 	%f145, %f130;
	mov.f32 	%f146, %f130;
	mov.f32 	%f147, %f130;
	mov.f32 	%f148, %f130;
	mov.f32 	%f149, %f130;
	mov.f32 	%f150, %f130;
	mov.f32 	%f151, %f130;
	mov.f32 	%f152, %f130;
	mov.f32 	%f153, %f130;
	mov.f32 	%f154, %f130;
	mov.f32 	%f155, %f130;
	mov.f32 	%f156, %f130;
	mov.f32 	%f157, %f130;
	mov.f32 	%f158, %f130;
	mov.f32 	%f159, %f130;
	mov.f32 	%f160, %f130;
	mov.f32 	%f161, %f130;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd23, 20480;
	add.s32 	%r147, %r230, 1;
	setp.gt.u32 	%p2, %r230, 2147483646;
	selp.b32 	%r230, %r147, 0, %p2;
	.loc	1 72 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r148, %r230, 11;
	add.s32 	%r150, %r56, %r148;
	add.s32 	%r77, %r150, %r151;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r95, %r96, %r97, %r98}, [%r77];
	// end inline asm
	add.s32 	%r82, %r150, %r152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r119, %r120, %r121, %r122}, [%r82];
	// end inline asm
	.loc	1 77 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:20
	add.s32 	%r154, %r150, %r153;
	add.s32 	%r85, %r154, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r99, %r100}, [%r85];
	// end inline asm
	add.s32 	%r88, %r154, 2560;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r105, %r106}, [%r88];
	// end inline asm
	add.s32 	%r91, %r154, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r111, %r112}, [%r91];
	// end inline asm
	add.s32 	%r94, %r154, 3584;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r117, %r118}, [%r94];
	// end inline asm
	.loc	1 78 25                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f130, %f131, %f132, %f133 }, { %r95, %r96, %r97, %r98 }, { %r99, %r100 }, { %f130, %f131, %f132, %f133 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f134, %f135, %f136, %f137 }, { %r95, %r96, %r97, %r98 }, { %r105, %r106 }, { %f134, %f135, %f136, %f137 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f138, %f139, %f140, %f141 }, { %r95, %r96, %r97, %r98 }, { %r111, %r112 }, { %f138, %f139, %f140, %f141 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f142, %f143, %f144, %f145 }, { %r95, %r96, %r97, %r98 }, { %r117, %r118 }, { %f142, %f143, %f144, %f145 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r119, %r120, %r121, %r122 }, { %r99, %r100 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r119, %r120, %r121, %r122 }, { %r105, %r106 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f154, %f155, %f156, %f157 }, { %r119, %r120, %r121, %r122 }, { %r111, %r112 }, { %f154, %f155, %f156, %f157 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f158, %f159, %f160, %f161 }, { %r119, %r120, %r121, %r122 }, { %r117, %r118 }, { %f158, %f159, %f160, %f161 };
	// end inline asm
	.loc	1 72 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:72:20
	add.s64 	%rd13, %rd6, %rd23;
	bar.sync 	0;
	selp.b32 	%r144, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd13 + 0 ], 0x10, %r144;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:77:20
	add.s64 	%rd14, %rd7, %rd23;
	// begin inline asm
	cp.async.cg.shared.global [ %r16 + 0 ], [ %rd14 + 0 ], 0x10, %r144;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:64:26
	add.s64 	%rd23, %rd23, 32;
	setp.ne.s64 	%p3, %rd23, 20512;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:40
	and.b32  	%r187, %r3, 56;
	.loc	1 52 27                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:52:27
	or.b32  	%r188, %r4, %r187;
	.loc	1 51 40                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:40
	bfe.u32 	%r189, %r2, 3, 4;
	.loc	1 51 27                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:51:27
	or.b32  	%r190, %r189, %r1;
	or.b32  	%r191, %r190, 48;
	or.b32  	%r192, %r190, 32;
	or.b32  	%r193, %r190, 16;
	.loc	1 64 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:85:20
	setp.lt.s32 	%p24, %r190, 512;
	setp.lt.s32 	%p25, %r193, 512;
	setp.lt.s32 	%p26, %r192, 512;
	setp.lt.s32 	%p27, %r191, 512;
	.loc	1 85 34                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:85:34
	setp.lt.s32 	%p28, %r188, 4096;
	.loc	1 85 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:85:26
	and.pred  	%p20, %p24, %p28;
	and.pred  	%p21, %p25, %p28;
	and.pred  	%p22, %p26, %p28;
	and.pred  	%p23, %p27, %p28;
	.loc	1 88 26                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:88:26
	shl.b32 	%r194, %r190, 12;
	shl.b32 	%r195, %r193, 12;
	shl.b32 	%r196, %r192, 12;
	shl.b32 	%r197, %r191, 12;
	.loc	1 88 21                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:88:21
	add.s32 	%r198, %r194, %r188;
	add.s32 	%r199, %r195, %r188;
	add.s32 	%r200, %r196, %r188;
	add.s32 	%r201, %r197, %r188;
	.loc	1 89 25                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:89:25
	mul.wide.s32 	%rd19, %r198, 2;
	add.s64 	%rd15, %rd5, %rd19;
	mul.wide.s32 	%rd20, %r199, 2;
	add.s64 	%rd16, %rd5, %rd20;
	mul.wide.s32 	%rd21, %r200, 2;
	add.s64 	%rd17, %rd5, %rd21;
	mul.wide.s32 	%rd22, %r201, 2;
	add.s64 	%rd18, %rd5, %rd22;
	.loc	1 89 67                         // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f130;
	cvt.rn.bf16.f32 	%rs2, %f131;
	cvt.rn.bf16.f32 	%rs3, %f132;
	cvt.rn.bf16.f32 	%rs4, %f133;
	cvt.rn.bf16.f32 	%rs5, %f134;
	cvt.rn.bf16.f32 	%rs6, %f135;
	cvt.rn.bf16.f32 	%rs7, %f136;
	cvt.rn.bf16.f32 	%rs8, %f137;
	cvt.rn.bf16.f32 	%rs9, %f138;
	cvt.rn.bf16.f32 	%rs10, %f139;
	cvt.rn.bf16.f32 	%rs11, %f140;
	cvt.rn.bf16.f32 	%rs12, %f141;
	cvt.rn.bf16.f32 	%rs13, %f142;
	cvt.rn.bf16.f32 	%rs14, %f143;
	cvt.rn.bf16.f32 	%rs15, %f144;
	cvt.rn.bf16.f32 	%rs16, %f145;
	cvt.rn.bf16.f32 	%rs17, %f146;
	cvt.rn.bf16.f32 	%rs18, %f147;
	cvt.rn.bf16.f32 	%rs19, %f148;
	cvt.rn.bf16.f32 	%rs20, %f149;
	cvt.rn.bf16.f32 	%rs21, %f150;
	cvt.rn.bf16.f32 	%rs22, %f151;
	cvt.rn.bf16.f32 	%rs23, %f152;
	cvt.rn.bf16.f32 	%rs24, %f153;
	cvt.rn.bf16.f32 	%rs25, %f154;
	cvt.rn.bf16.f32 	%rs26, %f155;
	cvt.rn.bf16.f32 	%rs27, %f156;
	cvt.rn.bf16.f32 	%rs28, %f157;
	cvt.rn.bf16.f32 	%rs29, %f158;
	cvt.rn.bf16.f32 	%rs30, %f159;
	cvt.rn.bf16.f32 	%rs31, %f160;
	cvt.rn.bf16.f32 	%rs32, %f161;
	and.b32  	%r202, %r7, 6;
	shl.b32 	%r203, %r2, 4;
	and.b32  	%r204, %r203, 192;
	or.b32  	%r205, %r204, %r202;
	and.b32  	%r206, %r203, 1280;
	or.b32  	%r207, %r206, %r205;
	or.b32  	%r208, %r207, %r10;
	and.b32  	%r209, %r3, 1016;
	shr.u32 	%r210, %r207, 2;
	and.b32  	%r211, %r210, 368;
	add.s32 	%r213, %r56, %r211;
	shl.b32 	%r214, %r208, 1;
	add.s32 	%r155, %r213, %r214;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r155 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r215, %r207, 512;
	shr.u32 	%r216, %r215, 2;
	and.b32  	%r217, %r216, 496;
	add.s32 	%r218, %r56, %r217;
	add.s32 	%r219, %r218, %r214;
	add.s32 	%r156, %r219, 1024;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r156 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r157, %r155, 32;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r157 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r158, %r219, 1056;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r158 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r159, %r155, 64;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r159 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r160, %r219, 1088;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r160 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r161, %r155, 96;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r161 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r162, %r219, 1120;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r162 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r220, %r2, 120;
	shl.b32 	%r221, %r220, 1;
	add.s32 	%r222, %r56, %r221;
	shl.b32 	%r223, %r209, 1;
	add.s32 	%r224, %r222, %r223;
	ld.shared.v4.u32 	{%r171, %r172, %r173, %r174}, [%r224];
	or.b32  	%r225, %r209, 1024;
	shr.u32 	%r226, %r225, 2;
	and.b32  	%r227, %r226, 496;
	add.s32 	%r228, %r56, %r227;
	add.s32 	%r229, %r228, %r223;
	ld.shared.v4.u32 	{%r175, %r176, %r177, %r178}, [%r229+2048];
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r155 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r156 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r157 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r158 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r159 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r160 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r161 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b16 [ %r162 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r179, %r180, %r181, %r182}, [%r224];
	ld.shared.v4.u32 	{%r183, %r184, %r185, %r186}, [%r229+2048];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd15 + 0 ], { %r171, %r172, %r173, %r174 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd16 + 0 ], { %r175, %r176, %r177, %r178 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd17 + 0 ], { %r179, %r180, %r181, %r182 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd18 + 0 ], { %r183, %r184, %r185, %r186 };
	// end inline asm
	.loc	1 89 4                          // cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/wc/cwcmzx4bfirufmsc4s3pvcqvsp6yb5ibqqbeistwu2opi4k3qrdc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 99
.b8 109
.b8 122
.b8 120
.b8 52
.b8 98
.b8 102
.b8 105
.b8 114
.b8 117
.b8 102
.b8 109
.b8 115
.b8 99
.b8 52
.b8 115
.b8 51
.b8 112
.b8 118
.b8 99
.b8 113
.b8 118
.b8 115
.b8 112
.b8 54
.b8 121
.b8 98
.b8 53
.b8 105
.b8 98
.b8 113
.b8 113
.b8 98
.b8 101
.b8 105
.b8 115
.b8 116
.b8 119
.b8 117
.b8 50
.b8 111
.b8 112
.b8 105
.b8 52
.b8 107
.b8 51
.b8 113
.b8 114
.b8 100
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 119
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
