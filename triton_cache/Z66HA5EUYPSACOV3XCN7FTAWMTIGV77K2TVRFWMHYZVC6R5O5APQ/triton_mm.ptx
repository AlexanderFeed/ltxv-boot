//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<451>;
	.reg .b64 	%rd<32>;
	.loc	1 17 0                          // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:17:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_mm_param_2];
	ld.param.u64 	%rd9, [triton_mm_param_0];
	ld.param.u64 	%rd10, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:40:24
	mov.u32 	%r84, %ctaid.x;
	.loc	1 46 22                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:46:22
	mul.hi.s32 	%r85, %r84, 715827883;
	shr.u32 	%r86, %r85, 31;
	shr.s32 	%r87, %r85, 6;
	add.s32 	%r88, %r87, %r86;
	.loc	1 47 41                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:47:41
	shl.b32 	%r89, %r88, 3;
	.loc	1 47 30                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:47:30
	sub.s32 	%r90, 65, %r89;
	.loc	1 47 50                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:47:50
	min.s32 	%r91, %r90, 8;
	.loc	1 48 40                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:48:40
	rem.s32 	%r92, %r84, %r91;
	.loc	1 48 34                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:48:34
	add.s32 	%r93, %r92, %r89;
	.loc	1 49 19                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:49:19
	mul.lo.s32 	%r94, %r88, 384;
	sub.s32 	%r95, %r84, %r94;
	.loc	1 49 30                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:49:30
	div.s32 	%r96, %r95, %r91;
	.loc	1 51 17                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:17
	shl.b32 	%r1, %r93, 6;
	.loc	1 51 40                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r97, %r2, 8;
	bfe.u32 	%r98, %r2, 1, 6;
	shl.b32 	%r3, %r2, 2;
	and.b32  	%r99, %r3, 16;
	.loc	1 51 27                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:27
	or.b32  	%r100, %r1, %r98;
	.loc	1 52 17                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:52:17
	shl.b32 	%r4, %r96, 6;
	.loc	1 52 27                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:52:27
	or.b32  	%r101, %r4, %r98;
	.loc	1 54 57                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:54:57
	mul.hi.s32 	%r102, %r100, 2139127681;
	shr.u32 	%r103, %r102, 31;
	shr.s32 	%r104, %r102, 11;
	add.s32 	%r105, %r104, %r103;
	mul.lo.s32 	%r106, %r105, 4112;
	sub.s32 	%r107, %r100, %r106;
	.loc	1 58 57                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:58:57
	mul.hi.s32 	%r108, %r101, 715827883;
	shr.u32 	%r109, %r108, 31;
	shr.u32 	%r110, %r108, 9;
	add.s32 	%r111, %r110, %r109;
	mul.lo.s32 	%r112, %r111, 3072;
	sub.s32 	%r113, %r101, %r112;
	.loc	1 66 30                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:66:30
	shl.b32 	%r5, %r2, 4;
	and.b32  	%r114, %r5, 16;
	.loc	1 71 31                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:71:31
	mul.lo.s32 	%r115, %r107, 15360;
	.loc	1 77 56                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:56
	mul.lo.s32 	%r116, %r113, 15360;
	.loc	1 71 25                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:71:25
	or.b32  	%r117, %r115, %r114;
	.loc	1 72 25                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:72:25
	cvt.s64.s32 	%rd11, %r117;
	add.s64 	%rd6, %rd9, %rd11;
	.loc	1 72 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:72:20
	shl.b32 	%r118, %r97, 1;
	xor.b32  	%r119, %r114, %r118;
	shl.b32 	%r120, %r98, 5;
	or.b32  	%r121, %r119, %r120;
	mov.u32 	%r122, global_smem;
	add.s32 	%r273, %r122, %r121;
	mov.b32 	%r79, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r273 + 0 ], [ %rd6 + 0 ], 0x10, %r79;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:50
	or.b32  	%r123, %r116, %r114;
	.loc	1 77 25                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:25
	cvt.s64.s32 	%rd12, %r123;
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 77 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:20
	add.s32 	%r80, %r273, 2048;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd7 + 0 ], 0x10, %r79;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r124, %r2, 7;
	.loc	1 64 26                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:64:26
	or.b32  	%r125, %r97, %r124;
	and.b32  	%r126, %r2, 15;
	xor.b32  	%r127, %r3, %r2;
	and.b32  	%r128, %r127, 16;
	shr.u32 	%r129, %r2, 2;
	and.b32  	%r130, %r129, 16;
	or.b32  	%r131, %r130, %r126;
	shl.b32 	%r132, %r131, 5;
	or.b32  	%r8, %r132, %r128;
	or.b32  	%r133, %r125, %r130;
	shl.b32 	%r134, %r133, 5;
	or.b32  	%r135, %r134, %r128;
	or.b32  	%r9, %r135, 1024;
	xor.b32  	%r136, %r99, %r118;
	and.b32  	%r10, %r129, 8;
	or.b32  	%r137, %r10, %r124;
	shl.b32 	%r138, %r137, 5;
	or.b32  	%r11, %r138, %r136;
	mov.b32 	%r419, 0;
	mov.b32 	%r418, -1;
	mov.b64 	%rd31, 32;
	mov.u32 	%r420, %r419;
	mov.u32 	%r421, %r419;
	mov.u32 	%r422, %r419;
	mov.u32 	%r423, %r419;
	mov.u32 	%r424, %r419;
	mov.u32 	%r425, %r419;
	mov.u32 	%r426, %r419;
	mov.u32 	%r427, %r419;
	mov.u32 	%r428, %r419;
	mov.u32 	%r429, %r419;
	mov.u32 	%r430, %r419;
	mov.u32 	%r431, %r419;
	mov.u32 	%r432, %r419;
	mov.u32 	%r433, %r419;
	mov.u32 	%r434, %r419;
	mov.u32 	%r435, %r419;
	mov.u32 	%r436, %r419;
	mov.u32 	%r437, %r419;
	mov.u32 	%r438, %r419;
	mov.u32 	%r439, %r419;
	mov.u32 	%r440, %r419;
	mov.u32 	%r441, %r419;
	mov.u32 	%r442, %r419;
	mov.u32 	%r443, %r419;
	mov.u32 	%r444, %r419;
	mov.u32 	%r445, %r419;
	mov.u32 	%r446, %r419;
	mov.u32 	%r447, %r419;
	mov.u32 	%r448, %r419;
	mov.u32 	%r449, %r419;
	mov.u32 	%r450, %r419;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.eq.s64 	%p1, %rd31, 15360;
	add.s32 	%r277, %r418, 1;
	setp.gt.u32 	%p2, %r418, 2147483646;
	selp.b32 	%r418, %r277, 0, %p2;
	.loc	1 72 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:72:20
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r278, %r418, 11;
	add.s32 	%r280, %r122, %r278;
	add.s32 	%r143, %r280, %r8;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r169, %r170, %r171, %r172}, [%r143];
	// end inline asm
	add.s32 	%r148, %r280, %r9;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r225, %r226, %r227, %r228}, [%r148];
	// end inline asm
	.loc	1 77 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:20
	add.s32 	%r281, %r280, %r11;
	add.s32 	%r151, %r281, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r173, %r174}, [%r151];
	// end inline asm
	add.s32 	%r154, %r281, 2560;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r187, %r188}, [%r154];
	// end inline asm
	add.s32 	%r157, %r281, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r201, %r202}, [%r157];
	// end inline asm
	add.s32 	%r160, %r281, 3584;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.shared.b16 {%r215, %r216}, [%r160];
	// end inline asm
	.loc	1 78 25                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r419, %r420, %r421, %r422 }, { %r169, %r170, %r171, %r172 }, { %r173, %r174 }, { %r419, %r420, %r421, %r422 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r423, %r424, %r425, %r426 }, { %r169, %r170, %r171, %r172 }, { %r187, %r188 }, { %r423, %r424, %r425, %r426 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r427, %r428, %r429, %r430 }, { %r169, %r170, %r171, %r172 }, { %r201, %r202 }, { %r427, %r428, %r429, %r430 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r431, %r432, %r433, %r434 }, { %r169, %r170, %r171, %r172 }, { %r215, %r216 }, { %r431, %r432, %r433, %r434 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r435, %r436, %r437, %r438 }, { %r225, %r226, %r227, %r228 }, { %r173, %r174 }, { %r435, %r436, %r437, %r438 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r439, %r440, %r441, %r442 }, { %r225, %r226, %r227, %r228 }, { %r187, %r188 }, { %r439, %r440, %r441, %r442 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r443, %r444, %r445, %r446 }, { %r225, %r226, %r227, %r228 }, { %r201, %r202 }, { %r443, %r444, %r445, %r446 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k32.row.col.satfinite.s32.s8.s8.s32 { %r447, %r448, %r449, %r450 }, { %r225, %r226, %r227, %r228 }, { %r215, %r216 }, { %r447, %r448, %r449, %r450 };
	// end inline asm
	.loc	1 72 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:72:20
	add.s64 	%rd13, %rd6, %rd31;
	bar.sync 	0;
	selp.b32 	%r274, 0, 16, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r273 + 0 ], [ %rd13 + 0 ], 0x10, %r274;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:77:20
	add.s64 	%rd14, %rd7, %rd31;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd14 + 0 ], 0x10, %r274;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:64:26
	add.s64 	%rd31, %rd31, 32;
	setp.ne.s64 	%p3, %rd31, 15392;
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 40                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:40
	and.b32  	%r362, %r3, 60;
	.loc	1 52 27                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:52:27
	or.b32  	%r363, %r4, %r362;
	.loc	1 51 40                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:40
	bfe.u32 	%r364, %r2, 4, 3;
	.loc	1 51 27                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:51:27
	or.b32  	%r365, %r364, %r1;
	or.b32  	%r366, %r365, 56;
	or.b32  	%r367, %r365, 48;
	or.b32  	%r368, %r365, 40;
	or.b32  	%r369, %r365, 32;
	or.b32  	%r370, %r365, 24;
	or.b32  	%r371, %r365, 16;
	or.b32  	%r372, %r365, 8;
	.loc	1 64 26                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:85:20
	setp.lt.s32 	%p28, %r365, 4112;
	setp.lt.s32 	%p29, %r372, 4112;
	setp.lt.s32 	%p30, %r371, 4112;
	setp.lt.s32 	%p31, %r370, 4112;
	setp.lt.s32 	%p32, %r369, 4112;
	setp.lt.s32 	%p33, %r368, 4112;
	setp.lt.s32 	%p34, %r367, 4112;
	setp.lt.s32 	%p35, %r366, 4112;
	.loc	1 85 34                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:85:34
	setp.lt.s32 	%p36, %r363, 3072;
	.loc	1 85 26                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:85:26
	and.pred  	%p20, %p28, %p36;
	and.pred  	%p21, %p29, %p36;
	and.pred  	%p22, %p30, %p36;
	and.pred  	%p23, %p31, %p36;
	and.pred  	%p24, %p32, %p36;
	and.pred  	%p25, %p33, %p36;
	and.pred  	%p26, %p34, %p36;
	and.pred  	%p27, %p35, %p36;
	.loc	1 88 26                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:88:26
	mad.lo.s32 	%r373, %r365, 3072, %r363;
	add.s32 	%r374, %r373, 24576;
	add.s32 	%r375, %r373, 49152;
	add.s32 	%r376, %r373, 73728;
	add.s32 	%r377, %r373, 98304;
	add.s32 	%r378, %r373, 122880;
	add.s32 	%r379, %r373, 147456;
	.loc	1 88 21                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:88:21
	add.s32 	%r380, %r373, 172032;
	.loc	1 89 25                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:89:25
	mul.wide.s32 	%rd23, %r373, 4;
	add.s64 	%rd15, %rd5, %rd23;
	mul.wide.s32 	%rd24, %r374, 4;
	add.s64 	%rd16, %rd5, %rd24;
	mul.wide.s32 	%rd25, %r375, 4;
	add.s64 	%rd17, %rd5, %rd25;
	mul.wide.s32 	%rd26, %r376, 4;
	add.s64 	%rd18, %rd5, %rd26;
	mul.wide.s32 	%rd27, %r377, 4;
	add.s64 	%rd19, %rd5, %rd27;
	mul.wide.s32 	%rd28, %r378, 4;
	add.s64 	%rd20, %rd5, %rd28;
	mul.wide.s32 	%rd29, %r379, 4;
	add.s64 	%rd21, %rd5, %rd29;
	mul.wide.s32 	%rd30, %r380, 4;
	add.s64 	%rd22, %rd5, %rd30;
	.loc	1 89 67                         // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:89:67
	shl.b32 	%r381, %r2, 1;
	and.b32  	%r382, %r381, 6;
	and.b32  	%r383, %r5, 192;
	or.b32  	%r384, %r383, %r382;
	and.b32  	%r385, %r5, 1280;
	or.b32  	%r386, %r385, %r384;
	or.b32  	%r387, %r386, %r10;
	and.b32  	%r388, %r3, 508;
	shr.u32 	%r389, %r386, 2;
	and.b32  	%r390, %r389, 368;
	add.s32 	%r392, %r122, %r390;
	shl.b32 	%r393, %r387, 2;
	add.s32 	%r282, %r392, %r393;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r282 + 0 ], { %r419, %r420 };
	// end inline asm
	or.b32  	%r394, %r386, 512;
	shr.u32 	%r395, %r394, 2;
	and.b32  	%r396, %r395, 496;
	add.s32 	%r397, %r122, %r396;
	add.s32 	%r398, %r397, %r393;
	add.s32 	%r285, %r398, 2048;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r285 + 0 ], { %r421, %r422 };
	// end inline asm
	add.s32 	%r288, %r282, 64;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r288 + 0 ], { %r423, %r424 };
	// end inline asm
	add.s32 	%r291, %r398, 2112;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r291 + 0 ], { %r425, %r426 };
	// end inline asm
	add.s32 	%r294, %r282, 128;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r294 + 0 ], { %r427, %r428 };
	// end inline asm
	add.s32 	%r297, %r398, 2176;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r297 + 0 ], { %r429, %r430 };
	// end inline asm
	add.s32 	%r300, %r282, 192;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r300 + 0 ], { %r431, %r432 };
	// end inline asm
	add.s32 	%r303, %r398, 2240;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r303 + 0 ], { %r433, %r434 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r399, %r2, 112;
	add.s32 	%r400, %r122, %r399;
	shl.b32 	%r401, %r388, 2;
	add.s32 	%r402, %r400, %r401;
	ld.shared.v4.u32 	{%r330, %r331, %r332, %r333}, [%r402];
	or.b32  	%r403, %r388, 512;
	shr.u32 	%r404, %r403, 2;
	and.b32  	%r405, %r404, 240;
	add.s32 	%r406, %r122, %r405;
	add.s32 	%r407, %r406, %r401;
	ld.shared.v4.u32 	{%r334, %r335, %r336, %r337}, [%r407+2048];
	or.b32  	%r408, %r388, 1024;
	shr.u32 	%r409, %r408, 2;
	and.b32  	%r410, %r409, 368;
	add.s32 	%r411, %r122, %r410;
	add.s32 	%r412, %r411, %r401;
	ld.shared.v4.u32 	{%r338, %r339, %r340, %r341}, [%r412+4096];
	or.b32  	%r413, %r388, 1536;
	shr.u32 	%r414, %r413, 2;
	and.b32  	%r415, %r414, 496;
	add.s32 	%r416, %r122, %r415;
	add.s32 	%r417, %r416, %r401;
	ld.shared.v4.u32 	{%r342, %r343, %r344, %r345}, [%r417+6144];
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r282 + 0 ], { %r435, %r436 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r285 + 0 ], { %r437, %r438 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r288 + 0 ], { %r439, %r440 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r291 + 0 ], { %r441, %r442 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r294 + 0 ], { %r443, %r444 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r297 + 0 ], { %r445, %r446 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r300 + 0 ], { %r447, %r448 };
	// end inline asm
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r303 + 0 ], { %r449, %r450 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r346, %r347, %r348, %r349}, [%r402];
	ld.shared.v4.u32 	{%r350, %r351, %r352, %r353}, [%r407+2048];
	ld.shared.v4.u32 	{%r354, %r355, %r356, %r357}, [%r412+4096];
	ld.shared.v4.u32 	{%r358, %r359, %r360, %r361}, [%r417+6144];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd15 + 0 ], { %r330, %r331, %r332, %r333 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd16 + 0 ], { %r334, %r335, %r336, %r337 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd17 + 0 ], { %r338, %r339, %r340, %r341 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd18 + 0 ], { %r342, %r343, %r344, %r345 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd19 + 0 ], { %r346, %r347, %r348, %r349 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd20 + 0 ], { %r350, %r351, %r352, %r353 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd21 + 0 ], { %r354, %r355, %r356, %r357 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd22 + 0 ], { %r358, %r359, %r360, %r361 };
	// end inline asm
	.loc	1 89 4                          // crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/rp/crprwetsj3niifieyevurzmttkf6hv3yhcwvnrufyztovqpgj6b3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 112
.b8 114
.b8 119
.b8 101
.b8 116
.b8 115
.b8 106
.b8 51
.b8 110
.b8 105
.b8 105
.b8 102
.b8 105
.b8 101
.b8 121
.b8 101
.b8 118
.b8 117
.b8 114
.b8 122
.b8 109
.b8 116
.b8 116
.b8 107
.b8 102
.b8 54
.b8 104
.b8 118
.b8 51
.b8 121
.b8 104
.b8 99
.b8 119
.b8 118
.b8 110
.b8 114
.b8 117
.b8 102
.b8 121
.b8 122
.b8 116
.b8 111
.b8 118
.b8 113
.b8 112
.b8 103
.b8 106
.b8 54
.b8 98
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 114
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
