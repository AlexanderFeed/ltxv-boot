//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused_addmm_0 // -- Begin function triton_red_fused_addmm_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_addmm_0
.visible .entry triton_red_fused_addmm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_4,
	.param .u32 triton_red_fused_addmm_0_param_5,
	.param .u32 triton_red_fused_addmm_0_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_addmm_0_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<32>;
	.reg .b64 	%rd<40>;
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:18:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_red_fused_addmm_0_param_4];
	ld.param.u64 	%rd17, [triton_red_fused_addmm_0_param_3];
	ld.param.u64 	%rd16, [triton_red_fused_addmm_0_param_2];
	ld.param.u64 	%rd15, [triton_red_fused_addmm_0_param_1];
	ld.param.u64 	%rd14, [triton_red_fused_addmm_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:23:33
	shl.b32 	%r2, %r1, 6;
	.loc	1 24 44                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:44
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 2, 6;
	and.b32  	%r5, %r3, 3;
	.loc	1 24 23                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:23
	or.b32  	%r6, %r4, %r2;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p1, %r6, 18432;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	cvt.u64.u32 	%rd1, %r5;
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.preheader
	.loc	1 0 40                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:0:40
	cvt.u32.u64 	%r13, %rd1;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	mul.lo.s32 	%r14, %r4, 3072;
	mad.lo.s32 	%r15, %r1, 196608, %r14;
	or.b32  	%r16, %r15, %r13;
	cvt.u64.u32 	%rd4, %r16;
	shl.b64 	%rd27, %rd1, 1;
	add.s64 	%rd36, %rd14, %rd27;
	mov.f32 	%f8, 0f00000000;
	mov.b64 	%rd37, -4;
	mov.f32 	%f31, %f8;
	mov.f32 	%f30, %f8;
$L__BB0_4:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:0:40
	mov.b16 	%rs8, 0;
	mov.pred 	%p6, -1;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u16 %rs7, %rs8;
	@%p6 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 37 94                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:94
	cvt.f32.bf16 	%f9, %rs7;
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	add.s64 	%rd31, %rd4, %rd37;
	cvt.u32.u64 	%r17, %rd31;
	add.s32 	%r18, %r17, 4;
	mul.wide.s32 	%rd32, %r18, 2;
	add.s64 	%rd29, %rd15, %rd32;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u16 %rs9, %rs8;
	@%p6 ld.global.L1::evict_first.b16 { %rs9 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 38 113                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:113
	cvt.f32.bf16 	%f10, %rs9;
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd30, %rd16, %rd32;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u16 %rs11, %rs8;
	@%p6 ld.global.L1::evict_first.b16 { %rs11 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 39 114                        // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:114
	cvt.f32.bf16 	%f11, %rs11;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f13, %f8, %f9;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f14, %f13, 0f3FB8AA3B;
	ex2.approx.f32 	%f15, %f14;
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f16, %f15, 0f3F800000;
	mov.f32 	%f17, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	div.full.f32 	%f18, %f17, %f16;
$L__tmp2:
	.loc	1 42 22                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:42:22
	mul.f32 	%f19, %f18, %f9;
	.loc	1 48 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:48:25
	fma.rn.f32 	%f30, %f19, %f10, %f30;
	.loc	1 53 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:53:25
	fma.rn.f32 	%f31, %f19, %f11, %f31;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	add.s64 	%rd37, %rd37, 4;
	add.s64 	%rd36, %rd36, 8;
	setp.lt.u64 	%p9, %rd37, 3068;
	@%p9 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 40                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:0:40
	cvt.u32.u64 	%r7, %rd1;
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	mul.lo.s32 	%r8, %r4, 3072;
	mad.lo.s32 	%r9, %r1, 196608, %r8;
	or.b32  	%r10, %r9, %r7;
	cvt.u64.u32 	%rd2, %r10;
	shl.b64 	%rd20, %rd1, 1;
	add.s64 	%rd38, %rd14, %rd20;
	mov.b64 	%rd39, -4;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:0:40
	mov.b16 	%rs2, 0;
	mov.pred 	%p2, -1;
	.loc	1 37 41                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:37:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p2 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:34
	add.s64 	%rd24, %rd2, %rd39;
	cvt.u32.u64 	%r11, %rd24;
	add.s32 	%r12, %r11, 4;
	mul.wide.s32 	%rd25, %r12, 2;
	add.s64 	%rd22, %rd15, %rd25;
	mov.pred 	%p3, 0;
	.loc	1 38 51                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:38:51
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p3 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 39 35                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:35
	add.s64 	%rd23, %rd16, %rd25;
	.loc	1 39 52                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:39:52
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p3 ld.global.L1::evict_first.b16 { %rs5 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 31 40                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:31:40
	add.s64 	%rd39, %rd39, 4;
	add.s64 	%rd38, %rd38, 8;
	setp.lt.u64 	%p5, %rd39, 3068;
	mov.f32 	%f30, 0f00000000;
	mov.f32 	%f31, %f30;
	@%p5 bra 	$L__BB0_2;
$L__BB0_5:                              // %.split4.us
	.loc	1 24 44                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:44
	and.b32  	%r25, %r3, 63;
	.loc	1 24 23                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:24:23
	or.b32  	%r26, %r2, %r25;
	.loc	1 25 21                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:25:21
	setp.lt.s32 	%p14, %r26, 18432;
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r27, %f30;
	shfl.sync.bfly.b32	%r28, %r27, 2, 31, -1;
	mov.b32 	%f20, %r28;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f30, %f20;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r29, %f21;
	shfl.sync.bfly.b32	%r30, %r29, 1, 31, -1;
	mov.b32 	%f22, %r30;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
$L__tmp4:
	.loc	1 55 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:55:30
	shl.b32 	%r31, %r4, 2;
	mov.u32 	%r32, global_smem;
	add.s32 	%r19, %r32, %r31;
	mov.b32 	%r20, %f23;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r33, %r25, 2;
	add.s32 	%r34, %r32, %r33;
	ld.shared.u32 	%r23, [%r34];
$L__tmp5:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f31;
	shfl.sync.bfly.b32	%r36, %r35, 2, 31, -1;
	mov.b32 	%f24, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f31, %f24;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r37, %f25;
	shfl.sync.bfly.b32	%r38, %r37, 1, 31, -1;
	mov.b32 	%f26, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
$L__tmp6:
	.loc	1 56 30                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:56:30
	bar.sync 	0;
	mov.b32 	%r22, %f27;
	// begin inline asm
	@%p10 st.shared.b32 [ %r19 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r24, [%r34];
	.loc	1 57 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:25
	mul.wide.s32 	%rd35, %r26, 4;
	add.s64 	%rd33, %rd17, %rd35;
	.loc	1 57 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:57:37
	and.b32  	%r39, %r3, 192;
	setp.eq.s32 	%p15, %r39, 0;
	and.pred  	%p12, %p15, %p14;
	// begin inline asm
	@%p12 st.global.b32 [ %rd33 + 0 ], { %r23 };
	// end inline asm
	.loc	1 58 25                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:25
	add.s64 	%rd34, %rd18, %rd35;
	.loc	1 58 37                         // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:37
	// begin inline asm
	@%p12 st.global.b32 [ %rd34 + 0 ], { %r24 };
	// end inline asm
	.loc	1 58 4                          // cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py:58:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 226                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 100
.b8 101
.b8 106
.b8 114
.b8 102
.b8 121
.b8 118
.b8 50
.b8 107
.b8 119
.b8 101
.b8 100
.b8 52
.b8 52
.b8 118
.b8 112
.b8 108
.b8 100
.b8 117
.b8 51
.b8 108
.b8 113
.b8 51
.b8 102
.b8 113
.b8 121
.b8 113
.b8 113
.b8 122
.b8 116
.b8 97
.b8 108
.b8 111
.b8 101
.b8 119
.b8 99
.b8 98
.b8 55
.b8 51
.b8 53
.b8 114
.b8 54
.b8 119
.b8 105
.b8 114
.b8 117
.b8 120
.b8 55
.b8 97
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 112
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
