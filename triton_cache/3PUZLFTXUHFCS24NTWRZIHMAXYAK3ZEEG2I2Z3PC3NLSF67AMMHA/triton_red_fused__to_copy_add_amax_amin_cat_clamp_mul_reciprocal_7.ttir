#loc = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)
#loc1 = loc(unknown)
#loc49 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:40)
#loc52 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:40)
#loc116 = loc(callsite(#loc1 at #loc49))
#loc122 = loc(callsite(#loc1 at #loc52))
module {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg4: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)) attributes {noinline = false} {
    %c12288_i32 = arith.constant 12288 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c4112_i32 = arith.constant 4112 : i32 loc(#loc1)
    %cst = arith.constant dense<1.270000e+02> : tensor<1x1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.270000e+02> : tensor<1x1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x1024xbf16> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c15360_i32 = arith.constant 15360 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<0.00787401571> : tensor<1x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_7 = arith.constant dense<0.797884583> : tensor<1x1024xf32> loc(#loc1)
    %cst_8 = arith.constant dense<4.471500e-02> : tensor<1x1024xf32> loc(#loc1)
    %cst_9 = arith.constant dense<5.000000e-01> : tensor<1x1024xf32> loc(#loc1)
    %cst_10 = arith.constant dense<-3072> : tensor<1x1024xi32> loc(#loc1)
    %cst_11 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_12 = arith.constant dense<3072> : tensor<1x1024xi64> loc(#loc1)
    %cst_13 = arith.constant dense<15360> : tensor<1x1024xi32> loc(#loc1)
    %cst_14 = arith.constant dense<0xFF800000> : tensor<1x1024xf32> loc(#loc1)
    %cst_15 = arith.constant dense<0x7F800000> : tensor<1x1024xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4112_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %5:2 = scf.for %arg7 = %c0_i32 to %c15360_i32 step %c1024_i32 iter_args(%arg8 = %cst_15, %arg9 = %cst_14) -> (tensor<1x1024xf32>, tensor<1x1024xf32>)  : i32 {
      %16 = tt.splat %arg7 : i32 -> tensor<1x1024xi32> loc(#loc7)
      %17 = arith.addi %16, %4 : tensor<1x1024xi32> loc(#loc7)
      %18 = arith.cmpi slt, %17, %cst_13 : tensor<1x1024xi32> loc(#loc8)
      %19 = arith.extsi %17 : tensor<1x1024xi32> to tensor<1x1024xi64> loc(#loc9)
      %20 = arith.cmpi slt, %19, %cst_12 : tensor<1x1024xi64> loc(#loc9)
      %21 = arith.muli %0, %c3072_i32 : i32 loc(#loc10)
      %22 = tt.splat %21 : i32 -> tensor<1x1024xi32> loc(#loc104)
      %23 = arith.addi %22, %17 : tensor<1x1024xi32> loc(#loc11)
      %24 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x1024x!tt.ptr<bf16>> loc(#loc12)
      %25 = tt.addptr %24, %23 : tensor<1x1024x!tt.ptr<bf16>>, tensor<1x1024xi32> loc(#loc12)
      %26 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc105)
      %27 = arith.andi %18, %26 : tensor<1x1024xi1> loc(#loc13)
      %28 = arith.andi %27, %20 : tensor<1x1024xi1> loc(#loc14)
      %29 = tt.load %25, %28, %cst_3 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>> loc(#loc15)
      %30 = arith.extf %29 : tensor<1x1024xbf16> to tensor<1x1024xf32> loc(#loc16)
      %31 = arith.cmpi sge, %19, %cst_12 : tensor<1x1024xi64> loc(#loc17)
      %32 = arith.muli %0, %c12288_i32 : i32 loc(#loc18)
      %33 = arith.addi %17, %cst_10 : tensor<1x1024xi32> loc(#loc19)
      %34 = tt.splat %32 : i32 -> tensor<1x1024xi32> loc(#loc106)
      %35 = arith.addi %34, %33 : tensor<1x1024xi32> loc(#loc20)
      %36 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc21)
      %37 = tt.addptr %36, %35 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc21)
      %38 = arith.andi %27, %31 : tensor<1x1024xi1> loc(#loc22)
      %39 = tt.load %37, %38, %cst_11 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc23)
      %40 = arith.mulf %39, %cst_9 : tensor<1x1024xf32> loc(#loc24)
      %41 = arith.mulf %39, %39 : tensor<1x1024xf32> loc(#loc25)
      %42 = arith.mulf %41, %39 : tensor<1x1024xf32> loc(#loc26)
      %43 = arith.mulf %42, %cst_8 : tensor<1x1024xf32> loc(#loc27)
      %44 = arith.addf %39, %43 : tensor<1x1024xf32> loc(#loc28)
      %45 = arith.mulf %44, %cst_7 : tensor<1x1024xf32> loc(#loc29)
      %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc30)
      %47 = arith.addf %46, %cst_6 : tensor<1x1024xf32> loc(#loc31)
      %48 = arith.mulf %40, %47 : tensor<1x1024xf32> loc(#loc32)
      %49 = arith.select %31, %48, %cst_11 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc33)
      %50 = arith.select %20, %30, %49 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc34)
      %51 = arith.cmpf olt, %arg8, %50 : tensor<1x1024xf32> loc(#loc107)
      %52 = arith.cmpf une, %arg8, %arg8 : tensor<1x1024xf32> loc(#loc108)
      %53 = arith.ori %51, %52 : tensor<1x1024xi1> loc(#loc109)
      %54 = arith.select %53, %arg8, %50 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc110)
      %55 = arith.select %27, %54, %arg8 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc40)
      %56 = arith.cmpf ogt, %arg9, %50 : tensor<1x1024xf32> loc(#loc111)
      %57 = arith.cmpf une, %arg9, %arg9 : tensor<1x1024xf32> loc(#loc112)
      %58 = arith.ori %56, %57 : tensor<1x1024xi1> loc(#loc113)
      %59 = arith.select %58, %arg9, %50 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc114)
      %60 = arith.select %27, %59, %arg9 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc46)
      scf.yield %55, %60 : tensor<1x1024xf32>, tensor<1x1024xf32> loc(#loc47)
    } loc(#loc6)
    %6 = "tt.reduce"(%5#0) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc49)), %arg8: f32 loc(callsite(#loc1 at #loc49))):
      %16 = arith.cmpf olt, %arg7, %arg8 : f32 loc(#loc155)
      %17 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc156)
      %18 = arith.ori %16, %17 : i1 loc(#loc157)
      %19 = arith.select %18, %arg7, %arg8 : f32 loc(#loc158)
      tt.reduce.return %19 : f32 loc(#loc115)
    }) : (tensor<1x1024xf32>) -> tensor<1xf32> loc(#loc115)
    %7 = tt.expand_dims %6 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc50)
    %8 = "tt.reduce"(%5#1) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc52)), %arg8: f32 loc(callsite(#loc1 at #loc52))):
      %16 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc159)
      %17 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc160)
      %18 = arith.ori %16, %17 : i1 loc(#loc161)
      %19 = arith.select %18, %arg7, %arg8 : f32 loc(#loc162)
      tt.reduce.return %19 : f32 loc(#loc121)
    }) : (tensor<1x1024xf32>) -> tensor<1xf32> loc(#loc121)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc53)
    %10 = tt.addptr %arg2, %0 : !tt.ptr<bf16>, i32 loc(#loc54)
    %11 = tt.splat %10 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc54)
    %12 = arith.truncf %7 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc55)
    tt.store %11, %12, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc55)
    %13 = tt.addptr %arg3, %0 : !tt.ptr<bf16>, i32 loc(#loc56)
    %14 = tt.splat %13 : !tt.ptr<bf16> -> tensor<1x1x!tt.ptr<bf16>> loc(#loc56)
    %15 = arith.truncf %9 : tensor<1x1xf32> to tensor<1x1xbf16> loc(#loc57)
    tt.store %14, %15, %2 : tensor<1x1x!tt.ptr<bf16>> loc(#loc57)
    scf.for %arg7 = %c0_i32 to %c15360_i32 step %c1024_i32  : i32 {
      %16 = tt.splat %arg7 : i32 -> tensor<1x1024xi32> loc(#loc59)
      %17 = arith.addi %16, %4 : tensor<1x1024xi32> loc(#loc59)
      %18 = arith.cmpi slt, %17, %cst_13 : tensor<1x1024xi32> loc(#loc60)
      %19 = arith.extsi %17 : tensor<1x1024xi32> to tensor<1x1024xi64> loc(#loc61)
      %20 = arith.cmpi slt, %19, %cst_12 : tensor<1x1024xi64> loc(#loc61)
      %21 = arith.muli %0, %c3072_i32 : i32 loc(#loc62)
      %22 = tt.splat %21 : i32 -> tensor<1x1024xi32> loc(#loc127)
      %23 = arith.addi %22, %17 : tensor<1x1024xi32> loc(#loc63)
      %24 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x1024x!tt.ptr<bf16>> loc(#loc64)
      %25 = tt.addptr %24, %23 : tensor<1x1024x!tt.ptr<bf16>>, tensor<1x1024xi32> loc(#loc64)
      %26 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc128)
      %27 = arith.andi %18, %26 : tensor<1x1024xi1> loc(#loc65)
      %28 = arith.andi %27, %20 : tensor<1x1024xi1> loc(#loc66)
      %29 = tt.load %25, %28, %cst_3 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<bf16>> loc(#loc67)
      %30 = arith.extf %29 : tensor<1x1024xbf16> to tensor<1x1024xf32> loc(#loc68)
      %31 = arith.cmpi sge, %19, %cst_12 : tensor<1x1024xi64> loc(#loc69)
      %32 = arith.muli %0, %c12288_i32 : i32 loc(#loc70)
      %33 = arith.addi %17, %cst_10 : tensor<1x1024xi32> loc(#loc71)
      %34 = tt.splat %32 : i32 -> tensor<1x1024xi32> loc(#loc129)
      %35 = arith.addi %34, %33 : tensor<1x1024xi32> loc(#loc72)
      %36 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc73)
      %37 = tt.addptr %36, %35 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc73)
      %38 = arith.andi %27, %31 : tensor<1x1024xi1> loc(#loc74)
      %39 = tt.load %37, %38, %cst_11 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc75)
      %40 = arith.mulf %39, %cst_9 : tensor<1x1024xf32> loc(#loc76)
      %41 = arith.mulf %39, %39 : tensor<1x1024xf32> loc(#loc77)
      %42 = arith.mulf %41, %39 : tensor<1x1024xf32> loc(#loc78)
      %43 = arith.mulf %42, %cst_8 : tensor<1x1024xf32> loc(#loc79)
      %44 = arith.addf %39, %43 : tensor<1x1024xf32> loc(#loc80)
      %45 = arith.mulf %44, %cst_7 : tensor<1x1024xf32> loc(#loc81)
      %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc82)
      %47 = arith.addf %46, %cst_6 : tensor<1x1024xf32> loc(#loc83)
      %48 = arith.mulf %40, %47 : tensor<1x1024xf32> loc(#loc84)
      %49 = arith.select %31, %48, %cst_11 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc85)
      %50 = arith.select %20, %30, %49 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc86)
      %51 = arith.cmpf olt, %7, %cst_5 : tensor<1x1xf32> loc(#loc130)
      %52 = arith.cmpf une, %7, %7 : tensor<1x1xf32> loc(#loc131)
      %53 = arith.ori %51, %52 : tensor<1x1xi1> loc(#loc132)
      %54 = arith.select %53, %7, %cst_5 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc133)
      %55 = arith.subf %cst_5, %54 : tensor<1x1xf32> loc(#loc88)
      %56 = arith.cmpf ogt, %9, %cst_5 : tensor<1x1xf32> loc(#loc134)
      %57 = arith.cmpf une, %9, %9 : tensor<1x1xf32> loc(#loc135)
      %58 = arith.ori %56, %57 : tensor<1x1xi1> loc(#loc136)
      %59 = arith.select %58, %9, %cst_5 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc137)
      %60 = arith.cmpf ogt, %55, %59 : tensor<1x1xf32> loc(#loc138)
      %61 = arith.cmpf une, %55, %55 : tensor<1x1xf32> loc(#loc139)
      %62 = arith.ori %60, %61 : tensor<1x1xi1> loc(#loc140)
      %63 = arith.select %62, %55, %59 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc141)
      %64 = arith.mulf %63, %cst_4 : tensor<1x1xf32> loc(#loc91)
      %65 = arith.cmpf ogt, %64, %cst_1 : tensor<1x1xf32> loc(#loc142)
      %66 = arith.cmpf une, %64, %64 : tensor<1x1xf32> loc(#loc143)
      %67 = arith.ori %65, %66 : tensor<1x1xi1> loc(#loc144)
      %68 = arith.select %67, %64, %cst_1 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc145)
      %69 = arith.divf %cst_2, %68 : tensor<1x1xf32> loc(#loc93)
      %70 = tt.broadcast %69 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc94)
      %71 = arith.mulf %50, %70 : tensor<1x1024xf32> loc(#loc94)
      %72 = tt.extern_elementwise %71 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc95)
      %73 = arith.cmpf ogt, %72, %cst_0 : tensor<1x1024xf32> loc(#loc146)
      %74 = arith.cmpf une, %72, %72 : tensor<1x1024xf32> loc(#loc147)
      %75 = arith.ori %73, %74 : tensor<1x1024xi1> loc(#loc148)
      %76 = arith.select %75, %72, %cst_0 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc149)
      %77 = arith.cmpf olt, %76, %cst : tensor<1x1024xf32> loc(#loc150)
      %78 = arith.cmpf une, %76, %76 : tensor<1x1024xf32> loc(#loc151)
      %79 = arith.ori %77, %78 : tensor<1x1024xi1> loc(#loc152)
      %80 = arith.select %79, %76, %cst : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc153)
      %81 = arith.fptosi %80 : tensor<1x1024xf32> to tensor<1x1024xi8> loc(#loc98)
      %82 = arith.muli %0, %c15360_i32 : i32 loc(#loc99)
      %83 = tt.splat %82 : i32 -> tensor<1x1024xi32> loc(#loc154)
      %84 = arith.addi %17, %83 : tensor<1x1024xi32> loc(#loc100)
      %85 = tt.splat %arg4 : !tt.ptr<i8> -> tensor<1x1024x!tt.ptr<i8>> loc(#loc101)
      %86 = tt.addptr %85, %84 : tensor<1x1024x!tt.ptr<i8>>, tensor<1x1024xi32> loc(#loc101)
      tt.store %86, %81, %27 : tensor<1x1024x!tt.ptr<i8>> loc(#loc102)
    } loc(#loc58)
    tt.return loc(#loc103)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":25:21)
#loc4 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:27)
#loc5 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:37)
#loc6 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":31:40)
#loc7 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":32:31)
#loc8 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":33:29)
#loc9 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":41:22)
#loc10 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:39)
#loc11 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:45)
#loc12 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:34)
#loc13 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:63)
#loc14 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:71)
#loc15 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:53)
#loc16 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:121)
#loc17 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":43:23)
#loc18 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:40)
#loc19 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:56)
#loc20 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:46)
#loc21 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:34)
#loc22 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:82)
#loc23 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:64)
#loc24 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":48:23)
#loc25 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":49:23)
#loc26 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":50:24)
#loc27 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":52:24)
#loc28 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":53:23)
#loc29 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":55:24)
#loc30 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":56:31)
#loc31 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":58:24)
#loc32 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":59:24)
#loc33 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":62:38)
#loc34 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":63:37)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc36 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":65:47)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc40 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":66:50)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc42 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":67:47)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc44 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc46 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:50)
#loc47 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:8)
#loc48 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc50 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:43)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc53 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:43)
#loc54 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:25)
#loc55 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:37)
#loc56 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:25)
#loc57 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:37)
#loc58 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:40)
#loc59 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":74:31)
#loc60 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":75:29)
#loc61 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":83:24)
#loc62 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:40)
#loc63 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:46)
#loc64 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:35)
#loc65 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:64)
#loc66 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:72)
#loc67 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:54)
#loc68 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:123)
#loc69 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":85:25)
#loc70 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:41)
#loc71 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:57)
#loc72 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:47)
#loc73 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:35)
#loc74 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:83)
#loc75 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:65)
#loc76 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":90:24)
#loc77 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":91:24)
#loc78 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":92:24)
#loc79 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":94:24)
#loc80 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":95:24)
#loc81 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":97:24)
#loc82 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":98:31)
#loc83 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":100:24)
#loc84 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":101:24)
#loc85 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":104:39)
#loc86 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":105:39)
#loc87 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":107:46)
#loc88 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":108:17)
#loc89 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":109:46)
#loc90 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":110:46)
#loc91 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":112:24)
#loc92 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":115:46)
#loc93 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":118:25)
#loc94 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":121:24)
#loc95 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":122:36)
#loc96 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":125:46)
#loc97 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":127:46)
#loc98 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":129:25)
#loc99 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:42)
#loc100 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:36)
#loc101 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:29)
#loc102 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:54)
#loc103 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:4)
#loc104 = loc(fused[#loc11, #loc10])
#loc105 = loc(fused[#loc13, #loc3])
#loc106 = loc(fused[#loc20, #loc18])
#loc107 = loc(callsite(#loc35 at #loc36))
#loc108 = loc(callsite(#loc37 at #loc36))
#loc109 = loc(callsite(#loc38 at #loc36))
#loc110 = loc(callsite(#loc39 at #loc36))
#loc111 = loc(callsite(#loc41 at #loc42))
#loc112 = loc(callsite(#loc43 at #loc42))
#loc113 = loc(callsite(#loc44 at #loc42))
#loc114 = loc(callsite(#loc45 at #loc42))
#loc115 = loc(callsite(#loc48 at #loc49))
#loc117 = loc(callsite(#loc35 at #loc48))
#loc118 = loc(callsite(#loc37 at #loc48))
#loc119 = loc(callsite(#loc38 at #loc48))
#loc120 = loc(callsite(#loc39 at #loc48))
#loc121 = loc(callsite(#loc51 at #loc52))
#loc123 = loc(callsite(#loc41 at #loc51))
#loc124 = loc(callsite(#loc43 at #loc51))
#loc125 = loc(callsite(#loc44 at #loc51))
#loc126 = loc(callsite(#loc45 at #loc51))
#loc127 = loc(fused[#loc63, #loc62])
#loc128 = loc(fused[#loc65, #loc3])
#loc129 = loc(fused[#loc72, #loc70])
#loc130 = loc(callsite(#loc35 at #loc87))
#loc131 = loc(callsite(#loc37 at #loc87))
#loc132 = loc(callsite(#loc38 at #loc87))
#loc133 = loc(callsite(#loc39 at #loc87))
#loc134 = loc(callsite(#loc41 at #loc89))
#loc135 = loc(callsite(#loc43 at #loc89))
#loc136 = loc(callsite(#loc44 at #loc89))
#loc137 = loc(callsite(#loc45 at #loc89))
#loc138 = loc(callsite(#loc41 at #loc90))
#loc139 = loc(callsite(#loc43 at #loc90))
#loc140 = loc(callsite(#loc44 at #loc90))
#loc141 = loc(callsite(#loc45 at #loc90))
#loc142 = loc(callsite(#loc41 at #loc92))
#loc143 = loc(callsite(#loc43 at #loc92))
#loc144 = loc(callsite(#loc44 at #loc92))
#loc145 = loc(callsite(#loc45 at #loc92))
#loc146 = loc(callsite(#loc41 at #loc96))
#loc147 = loc(callsite(#loc43 at #loc96))
#loc148 = loc(callsite(#loc44 at #loc96))
#loc149 = loc(callsite(#loc45 at #loc96))
#loc150 = loc(callsite(#loc35 at #loc97))
#loc151 = loc(callsite(#loc37 at #loc97))
#loc152 = loc(callsite(#loc38 at #loc97))
#loc153 = loc(callsite(#loc39 at #loc97))
#loc154 = loc(fused[#loc100, #loc99])
#loc155 = loc(callsite(#loc117 at #loc49))
#loc156 = loc(callsite(#loc118 at #loc49))
#loc157 = loc(callsite(#loc119 at #loc49))
#loc158 = loc(callsite(#loc120 at #loc49))
#loc159 = loc(callsite(#loc123 at #loc52))
#loc160 = loc(callsite(#loc124 at #loc52))
#loc161 = loc(callsite(#loc125 at #loc52))
#loc162 = loc(callsite(#loc126 at #loc52))
