; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused__to_copy_add_mean_pow_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr !dbg !6 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %12 = icmp slt i32 %11, 98688, !dbg !10
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %14 = and i32 %13, 31, !dbg !11
  %15 = lshr i32 %13, 5, !dbg !11
  %16 = and i32 %13, 127, !dbg !11
  %17 = sdiv i32 %11, 24, !dbg !12
  %18 = mul i32 %17, 24, !dbg !13
  %.decomposed = sub i32 %11, %18, !dbg !13
  %19 = shl i32 %11, 7, !dbg !14
  %20 = or disjoint i32 %16, %19, !dbg !15
  %21 = sext i32 %20 to i64, !dbg !16
  %22 = getelementptr i32, ptr addrspace(1) %0, i64 %21, !dbg !16
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %12) #3, !dbg !17
  %24 = sext i32 %17 to i64, !dbg !18
  %25 = getelementptr bfloat, ptr addrspace(1) %1, i64 %24, !dbg !18
  %26 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %25, i1 %12) #3, !dbg !19
  %27 = bitcast i16 %26 to bfloat, !dbg !19
  %28 = getelementptr bfloat, ptr addrspace(1) %2, i64 %24, !dbg !20
  %29 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %12) #3, !dbg !21
  %30 = bitcast i16 %29 to bfloat, !dbg !21
  %31 = shl nsw i32 %.decomposed, 7, !dbg !22
  %32 = or disjoint i32 %31, %16, !dbg !23
  %33 = sext i32 %32 to i64, !dbg !24
  %34 = getelementptr bfloat, ptr addrspace(1) %3, i64 %33, !dbg !24
  %35 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %34, i1 %12) #3, !dbg !25
  %36 = bitcast i16 %35 to bfloat, !dbg !25
  %37 = fpext bfloat %36 to float, !dbg !26
  %38 = getelementptr bfloat, ptr addrspace(1) %4, i64 %33, !dbg !27
  %39 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %38, i1 %12) #3, !dbg !28
  %40 = bitcast i16 %39 to bfloat, !dbg !28
  %41 = fpext bfloat %40 to float, !dbg !29
  %42 = sitofp i32 %23 to float, !dbg !30
  %.inv = fcmp oge bfloat %27, 0xR0000, !dbg !31
  %43 = select i1 %.inv, bfloat 0xR0000, bfloat %27, !dbg !31
  %44 = fpext bfloat %43 to float, !dbg !31
  %45 = fsub float 0.000000e+00, %44, !dbg !35
  %.inv1 = fcmp ole bfloat %30, 0xR0000, !dbg !36
  %46 = select i1 %.inv1, bfloat 0xR0000, bfloat %30, !dbg !36
  %47 = fpext bfloat %46 to float, !dbg !36
  %48 = fcmp ogt float %45, %47, !dbg !38
  %49 = fcmp uno float %45, 0.000000e+00, !dbg !40
  %50 = or i1 %48, %49, !dbg !41
  %51 = select i1 %50, float %45, float %47, !dbg !42
  %52 = fmul float %51, 0x3F80204080000000, !dbg !43
  %53 = fcmp ogt float %52, 0x3EE4F8B580000000, !dbg !44
  %54 = fcmp uno float %52, 0.000000e+00, !dbg !46
  %55 = or i1 %53, %54, !dbg !47
  %56 = select i1 %55, float %52, float 0x3EE4F8B580000000, !dbg !48
  %57 = fmul float %56, %42, !dbg !49
  %58 = fmul float %57, %37, !dbg !50
  %59 = fadd float %58, %41, !dbg !51
  %60 = fmul float %59, %59, !dbg !52
  %61 = select i1 %12, float %60, float 0.000000e+00, !dbg !53
  %62 = bitcast float %61 to i32, !dbg !54
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 16, i32 31), !dbg !54
  %64 = bitcast i32 %63 to float, !dbg !54
  %65 = fadd float %61, %64, !dbg !58
  %66 = bitcast float %65 to i32, !dbg !54
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 8, i32 31), !dbg !54
  %68 = bitcast i32 %67 to float, !dbg !54
  %69 = fadd float %65, %68, !dbg !58
  %70 = bitcast float %69 to i32, !dbg !54
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 4, i32 31), !dbg !54
  %72 = bitcast i32 %71 to float, !dbg !54
  %73 = fadd float %69, %72, !dbg !58
  %74 = bitcast float %73 to i32, !dbg !54
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 2, i32 31), !dbg !54
  %76 = bitcast i32 %75 to float, !dbg !54
  %77 = fadd float %73, %76, !dbg !58
  %78 = bitcast float %77 to i32, !dbg !54
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 1, i32 31), !dbg !54
  %80 = bitcast i32 %79 to float, !dbg !54
  %81 = fadd float %77, %80, !dbg !58
  %82 = and i32 %15, 3, !dbg !54
  %83 = icmp eq i32 %14, 0, !dbg !54
  %84 = getelementptr float, ptr addrspace(3) @global_smem, i32 %82, !dbg !54
  %85 = bitcast float %81 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %84, <1 x i32> %85, i1 %83) #3, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %86 = icmp slt i32 %13, 4, !dbg !54
  %87 = getelementptr float, ptr addrspace(3) @global_smem, i32 %13, !dbg !54
  %88 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %87, i1 %86) #3, !dbg !54
  %89 = bitcast i32 %88 to float, !dbg !54
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %88, i32 2, i32 31), !dbg !54
  %91 = bitcast i32 %90 to float, !dbg !54
  %92 = fadd float %89, %91, !dbg !58
  %93 = bitcast float %92 to i32, !dbg !54
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !54
  %95 = bitcast i32 %94 to float, !dbg !54
  %96 = fadd float %92, %95, !dbg !58
  %97 = and i32 %13, 3, !dbg !54
  %98 = icmp eq i32 %97, 0, !dbg !54
  %99 = and i1 %86, %98, !dbg !54
  %100 = bitcast float %96 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %87, <1 x i32> %100, i1 %99) #3, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %101 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !54
  %102 = getelementptr bfloat, ptr addrspace(1) %5, i64 %21, !dbg !60
  %103 = fptrunc float %59 to bfloat, !dbg !61
  %104 = bitcast bfloat %103 to i16, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %104, ptr addrspace(1) %102, i1 %12) #3, !dbg !61
  %105 = sext i32 %11 to i64, !dbg !62
  %106 = getelementptr float, ptr addrspace(1) %6, i64 %105, !dbg !62
  %107 = icmp eq i32 %16, 0, !dbg !63
  %108 = and i1 %12, %107, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %101, ptr addrspace(1) %106, i1 %108) #3, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceqrvh7wabbdeykqepa3zmii6o4hoe3ux2wiocyvm5ynym6kf2go.py", directory: "/tmp/torchinductor_root/eq")
!4 = !{ptr @triton_per_fused__to_copy_add_mean_pow_2, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_mean_pow_2", linkageName: "triton_per_fused__to_copy_add_mean_pow_2", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 28, scope: !6)
!10 = !DILocation(line: 26, column: 21, scope: !6)
!11 = !DILocation(line: 27, column: 38, scope: !6)
!12 = !DILocation(line: 34, column: 19, scope: !6)
!13 = !DILocation(line: 35, column: 19, scope: !6)
!14 = !DILocation(line: 36, column: 41, scope: !6)
!15 = !DILocation(line: 36, column: 37, scope: !6)
!16 = !DILocation(line: 36, column: 30, scope: !6)
!17 = !DILocation(line: 36, column: 46, scope: !6)
!18 = !DILocation(line: 37, column: 30, scope: !6)
!19 = !DILocation(line: 37, column: 35, scope: !6)
!20 = !DILocation(line: 38, column: 30, scope: !6)
!21 = !DILocation(line: 38, column: 35, scope: !6)
!22 = !DILocation(line: 39, column: 42, scope: !6)
!23 = !DILocation(line: 39, column: 38, scope: !6)
!24 = !DILocation(line: 39, column: 31, scope: !6)
!25 = !DILocation(line: 39, column: 47, scope: !6)
!26 = !DILocation(line: 39, column: 98, scope: !6)
!27 = !DILocation(line: 40, column: 31, scope: !6)
!28 = !DILocation(line: 40, column: 47, scope: !6)
!29 = !DILocation(line: 40, column: 98, scope: !6)
!30 = !DILocation(line: 41, column: 19, scope: !6)
!31 = !DILocation(line: 97, column: 29, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !6, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 43, column: 40, scope: !6)
!35 = !DILocation(line: 44, column: 12, scope: !6)
!36 = !DILocation(line: 105, column: 29, scope: !32, inlinedAt: !37)
!37 = !DILocation(line: 45, column: 40, scope: !6)
!38 = !DILocation(line: 102, column: 15, scope: !32, inlinedAt: !39)
!39 = !DILocation(line: 46, column: 40, scope: !6)
!40 = !DILocation(line: 104, column: 21, scope: !32, inlinedAt: !39)
!41 = !DILocation(line: 104, column: 16, scope: !32, inlinedAt: !39)
!42 = !DILocation(line: 105, column: 29, scope: !32, inlinedAt: !39)
!43 = !DILocation(line: 48, column: 19, scope: !6)
!44 = !DILocation(line: 102, column: 15, scope: !32, inlinedAt: !45)
!45 = !DILocation(line: 51, column: 42, scope: !6)
!46 = !DILocation(line: 104, column: 21, scope: !32, inlinedAt: !45)
!47 = !DILocation(line: 104, column: 16, scope: !32, inlinedAt: !45)
!48 = !DILocation(line: 105, column: 29, scope: !32, inlinedAt: !45)
!49 = !DILocation(line: 53, column: 19, scope: !6)
!50 = !DILocation(line: 54, column: 20, scope: !6)
!51 = !DILocation(line: 55, column: 20, scope: !6)
!52 = !DILocation(line: 57, column: 20, scope: !6)
!53 = !DILocation(line: 59, column: 35, scope: !6)
!54 = !DILocation(line: 286, column: 36, scope: !55, inlinedAt: !57)
!55 = distinct !DILexicalBlockFile(scope: !6, file: !56, discriminator: 0)
!56 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/dist-packages/triton/language")
!57 = !DILocation(line: 60, column: 26, scope: !6)
!58 = !DILocation(line: 256, column: 15, scope: !59, inlinedAt: !57)
!59 = distinct !DILexicalBlockFile(scope: !55, file: !56, discriminator: 0)
!60 = !DILocation(line: 61, column: 25, scope: !6)
!61 = !DILocation(line: 61, column: 48, scope: !6)
!62 = !DILocation(line: 62, column: 25, scope: !6)
!63 = !DILocation(line: 62, column: 37, scope: !6)
!64 = !DILocation(line: 62, column: 4, scope: !6)
