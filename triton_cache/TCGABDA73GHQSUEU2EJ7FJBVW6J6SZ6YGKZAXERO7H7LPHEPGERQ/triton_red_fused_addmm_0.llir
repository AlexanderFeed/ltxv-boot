; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused_addmm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !9
  %8 = shl i32 %7, 3, !dbg !10
  %9 = and i32 %8, 2040, !dbg !10
  %10 = zext nneg i32 %9 to i64, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !12
  %12 = mul i32 %11, 6144, !dbg !13
  %13 = add i32 %12, 3072, !dbg !13
  %14 = shl i32 %11, 1, !dbg !14
  %15 = icmp slt i32 %14, 9216, !dbg !15
  %16 = getelementptr bfloat, ptr addrspace(1) %0, i64 %10, !dbg !16
  %17 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %16, i1 true) #4, !dbg !17
  %18 = extractvalue { i32, i32, i32, i32 } %17, 0, !dbg !17
  %19 = bitcast i32 %18 to <2 x bfloat>, !dbg !17
  %20 = extractvalue { i32, i32, i32, i32 } %17, 1, !dbg !17
  %21 = bitcast i32 %20 to <2 x bfloat>, !dbg !17
  %22 = extractvalue { i32, i32, i32, i32 } %17, 2, !dbg !17
  %23 = bitcast i32 %22 to <2 x bfloat>, !dbg !17
  %24 = extractvalue { i32, i32, i32, i32 } %17, 3, !dbg !17
  %25 = bitcast i32 %24 to <2 x bfloat>, !dbg !17
  %26 = or disjoint i32 %12, %9, !dbg !18
  %27 = add i32 %13, %9, !dbg !18
  %28 = sext i32 %26 to i64, !dbg !19
  %29 = getelementptr bfloat, ptr addrspace(1) %1, i64 %28, !dbg !19
  %30 = sext i32 %27 to i64, !dbg !19
  %31 = getelementptr bfloat, ptr addrspace(1) %1, i64 %30, !dbg !19
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %29, i1 %15) #4, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !20
  %34 = bitcast i32 %33 to <2 x bfloat>, !dbg !20
  %35 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !20
  %36 = bitcast i32 %35 to <2 x bfloat>, !dbg !20
  %37 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !20
  %38 = bitcast i32 %37 to <2 x bfloat>, !dbg !20
  %39 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !20
  %40 = bitcast i32 %39 to <2 x bfloat>, !dbg !20
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %31, i1 %15) #4, !dbg !20
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !20
  %43 = bitcast i32 %42 to <2 x bfloat>, !dbg !20
  %44 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !20
  %45 = bitcast i32 %44 to <2 x bfloat>, !dbg !20
  %46 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !20
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !20
  %48 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !20
  %49 = bitcast i32 %48 to <2 x bfloat>, !dbg !20
  %50 = shufflevector <2 x bfloat> %19, <2 x bfloat> %21, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %51 = shufflevector <2 x bfloat> %23, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %52 = shufflevector <8 x bfloat> %50, <8 x bfloat> %51, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !21
  %53 = shufflevector <2 x bfloat> %23, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %54 = shufflevector <8 x bfloat> %52, <8 x bfloat> %53, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 9, i32 poison, i32 poison>, !dbg !21
  %55 = shufflevector <2 x bfloat> %25, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %56 = shufflevector <8 x bfloat> %54, <8 x bfloat> %55, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !21
  %57 = shufflevector <2 x bfloat> %25, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %58 = shufflevector <8 x bfloat> %56, <8 x bfloat> %57, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 9>, !dbg !21
  %59 = fpext <8 x bfloat> %58 to <8 x float>, !dbg !21
  %60 = shufflevector <2 x bfloat> %34, <2 x bfloat> %36, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %61 = shufflevector <2 x bfloat> %38, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %62 = shufflevector <16 x bfloat> %60, <16 x bfloat> %61, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %63 = shufflevector <2 x bfloat> %38, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %64 = shufflevector <16 x bfloat> %62, <16 x bfloat> %63, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %65 = shufflevector <2 x bfloat> %40, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %66 = shufflevector <16 x bfloat> %64, <16 x bfloat> %65, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %67 = shufflevector <2 x bfloat> %40, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %68 = shufflevector <16 x bfloat> %66, <16 x bfloat> %67, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %69 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %70 = shufflevector <16 x bfloat> %68, <16 x bfloat> %69, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %71 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %72 = shufflevector <16 x bfloat> %70, <16 x bfloat> %71, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %73 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %74 = shufflevector <16 x bfloat> %72, <16 x bfloat> %73, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %75 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %76 = shufflevector <16 x bfloat> %74, <16 x bfloat> %75, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 17, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %77 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %78 = shufflevector <16 x bfloat> %76, <16 x bfloat> %77, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 poison, i32 poison, i32 poison>, !dbg !22
  %79 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %80 = shufflevector <16 x bfloat> %78, <16 x bfloat> %79, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 17, i32 poison, i32 poison>, !dbg !22
  %81 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %82 = shufflevector <16 x bfloat> %80, <16 x bfloat> %81, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 poison>, !dbg !22
  %83 = shufflevector <2 x bfloat> %49, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %84 = shufflevector <16 x bfloat> %82, <16 x bfloat> %83, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 17>, !dbg !22
  %85 = fpext <16 x bfloat> %84 to <16 x float>, !dbg !22
  %86 = extractelement <8 x float> %59, i64 0, !dbg !23
  %87 = fsub float 0.000000e+00, %86, !dbg !23
  %88 = extractelement <8 x float> %59, i64 1, !dbg !23
  %89 = fsub float 0.000000e+00, %88, !dbg !23
  %90 = extractelement <8 x float> %59, i64 2, !dbg !23
  %91 = fsub float 0.000000e+00, %90, !dbg !23
  %92 = extractelement <8 x float> %59, i64 3, !dbg !23
  %93 = fsub float 0.000000e+00, %92, !dbg !23
  %94 = extractelement <8 x float> %59, i64 4, !dbg !23
  %95 = fsub float 0.000000e+00, %94, !dbg !23
  %96 = extractelement <8 x float> %59, i64 5, !dbg !23
  %97 = fsub float 0.000000e+00, %96, !dbg !23
  %98 = extractelement <8 x float> %59, i64 6, !dbg !23
  %99 = fsub float 0.000000e+00, %98, !dbg !23
  %100 = extractelement <8 x float> %59, i64 7, !dbg !23
  %101 = fsub float 0.000000e+00, %100, !dbg !23
  %102 = fmul float %87, 0x3FF7154760000000, !dbg !27
  %103 = tail call float @llvm.nvvm.ex2.approx.f(float %102), !dbg !27
  %104 = fmul float %89, 0x3FF7154760000000, !dbg !27
  %105 = tail call float @llvm.nvvm.ex2.approx.f(float %104), !dbg !27
  %106 = fmul float %91, 0x3FF7154760000000, !dbg !27
  %107 = tail call float @llvm.nvvm.ex2.approx.f(float %106), !dbg !27
  %108 = fmul float %93, 0x3FF7154760000000, !dbg !27
  %109 = tail call float @llvm.nvvm.ex2.approx.f(float %108), !dbg !27
  %110 = fmul float %95, 0x3FF7154760000000, !dbg !27
  %111 = tail call float @llvm.nvvm.ex2.approx.f(float %110), !dbg !27
  %112 = fmul float %97, 0x3FF7154760000000, !dbg !27
  %113 = tail call float @llvm.nvvm.ex2.approx.f(float %112), !dbg !27
  %114 = fmul float %99, 0x3FF7154760000000, !dbg !27
  %115 = tail call float @llvm.nvvm.ex2.approx.f(float %114), !dbg !27
  %116 = fmul float %101, 0x3FF7154760000000, !dbg !27
  %117 = tail call float @llvm.nvvm.ex2.approx.f(float %116), !dbg !27
  %118 = fadd float %103, 1.000000e+00, !dbg !28
  %119 = fadd float %105, 1.000000e+00, !dbg !28
  %120 = fadd float %107, 1.000000e+00, !dbg !28
  %121 = fadd float %109, 1.000000e+00, !dbg !28
  %122 = fadd float %111, 1.000000e+00, !dbg !28
  %123 = fadd float %113, 1.000000e+00, !dbg !28
  %124 = fadd float %115, 1.000000e+00, !dbg !28
  %125 = fadd float %117, 1.000000e+00, !dbg !28
  %126 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %118), !dbg !29
  %127 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %119), !dbg !29
  %128 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %120), !dbg !29
  %129 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %121), !dbg !29
  %130 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %122), !dbg !29
  %131 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %123), !dbg !29
  %132 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %124), !dbg !29
  %133 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %125), !dbg !29
  %134 = insertelement <8 x float> poison, float %126, i64 0, !dbg !30
  %135 = insertelement <8 x float> %134, float %127, i64 1, !dbg !30
  %136 = insertelement <8 x float> %135, float %128, i64 2, !dbg !30
  %137 = insertelement <8 x float> %136, float %129, i64 3, !dbg !30
  %138 = insertelement <8 x float> %137, float %130, i64 4, !dbg !30
  %139 = insertelement <8 x float> %138, float %131, i64 5, !dbg !30
  %140 = insertelement <8 x float> %139, float %132, i64 6, !dbg !30
  %141 = insertelement <8 x float> %140, float %133, i64 7, !dbg !30
  %142 = fmul <8 x float> %141, %59, !dbg !30
  %143 = shufflevector <8 x float> %142, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !30
  %144 = fmul <16 x float> %143, %85, !dbg !31
  %145 = fadd <16 x float> %144, zeroinitializer, !dbg !32
  %146 = insertelement <16 x i1> poison, i1 %15, i64 0, !dbg !33
  %147 = shufflevector <16 x i1> %146, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !33
  %148 = select <16 x i1> %147, <16 x float> %145, <16 x float> zeroinitializer, !dbg !33
  %149 = or disjoint i64 %10, 2048, !dbg !34
  %150 = icmp samesign ult i64 %149, 3072, !dbg !35
  %151 = getelementptr bfloat, ptr addrspace(1) %0, i64 %149, !dbg !16
  %152 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %151, i1 %150) #4, !dbg !17
  %153 = extractvalue { i32, i32, i32, i32 } %152, 0, !dbg !17
  %154 = bitcast i32 %153 to <2 x bfloat>, !dbg !17
  %155 = extractvalue { i32, i32, i32, i32 } %152, 1, !dbg !17
  %156 = bitcast i32 %155 to <2 x bfloat>, !dbg !17
  %157 = extractvalue { i32, i32, i32, i32 } %152, 2, !dbg !17
  %158 = bitcast i32 %157 to <2 x bfloat>, !dbg !17
  %159 = extractvalue { i32, i32, i32, i32 } %152, 3, !dbg !17
  %160 = bitcast i32 %159 to <2 x bfloat>, !dbg !17
  %161 = trunc nuw nsw i64 %149 to i32, !dbg !18
  %162 = add i32 %12, %161, !dbg !18
  %163 = add i32 %13, %161, !dbg !18
  %164 = sext i32 %162 to i64, !dbg !19
  %165 = getelementptr bfloat, ptr addrspace(1) %1, i64 %164, !dbg !19
  %166 = sext i32 %163 to i64, !dbg !19
  %167 = getelementptr bfloat, ptr addrspace(1) %1, i64 %166, !dbg !19
  %168 = and i1 %15, %150, !dbg !36
  %169 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %165, i1 %168) #4, !dbg !20
  %170 = extractvalue { i32, i32, i32, i32 } %169, 0, !dbg !20
  %171 = bitcast i32 %170 to <2 x bfloat>, !dbg !20
  %172 = extractvalue { i32, i32, i32, i32 } %169, 1, !dbg !20
  %173 = bitcast i32 %172 to <2 x bfloat>, !dbg !20
  %174 = extractvalue { i32, i32, i32, i32 } %169, 2, !dbg !20
  %175 = bitcast i32 %174 to <2 x bfloat>, !dbg !20
  %176 = extractvalue { i32, i32, i32, i32 } %169, 3, !dbg !20
  %177 = bitcast i32 %176 to <2 x bfloat>, !dbg !20
  %178 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %167, i1 %168) #4, !dbg !20
  %179 = extractvalue { i32, i32, i32, i32 } %178, 0, !dbg !20
  %180 = bitcast i32 %179 to <2 x bfloat>, !dbg !20
  %181 = extractvalue { i32, i32, i32, i32 } %178, 1, !dbg !20
  %182 = bitcast i32 %181 to <2 x bfloat>, !dbg !20
  %183 = extractvalue { i32, i32, i32, i32 } %178, 2, !dbg !20
  %184 = bitcast i32 %183 to <2 x bfloat>, !dbg !20
  %185 = extractvalue { i32, i32, i32, i32 } %178, 3, !dbg !20
  %186 = bitcast i32 %185 to <2 x bfloat>, !dbg !20
  %187 = shufflevector <2 x bfloat> %154, <2 x bfloat> %156, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %188 = shufflevector <2 x bfloat> %158, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %189 = shufflevector <8 x bfloat> %187, <8 x bfloat> %188, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !21
  %190 = shufflevector <2 x bfloat> %158, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %191 = shufflevector <8 x bfloat> %189, <8 x bfloat> %190, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 9, i32 poison, i32 poison>, !dbg !21
  %192 = shufflevector <2 x bfloat> %160, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %193 = shufflevector <8 x bfloat> %191, <8 x bfloat> %192, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !21
  %194 = shufflevector <2 x bfloat> %160, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %195 = shufflevector <8 x bfloat> %193, <8 x bfloat> %194, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 9>, !dbg !21
  %196 = fpext <8 x bfloat> %195 to <8 x float>, !dbg !21
  %197 = shufflevector <2 x bfloat> %171, <2 x bfloat> %173, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %198 = shufflevector <2 x bfloat> %175, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %199 = shufflevector <16 x bfloat> %197, <16 x bfloat> %198, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %200 = shufflevector <2 x bfloat> %175, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %201 = shufflevector <16 x bfloat> %199, <16 x bfloat> %200, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %202 = shufflevector <2 x bfloat> %177, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %203 = shufflevector <16 x bfloat> %201, <16 x bfloat> %202, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %204 = shufflevector <2 x bfloat> %177, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %205 = shufflevector <16 x bfloat> %203, <16 x bfloat> %204, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %206 = shufflevector <2 x bfloat> %180, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %207 = shufflevector <16 x bfloat> %205, <16 x bfloat> %206, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %208 = shufflevector <2 x bfloat> %180, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %209 = shufflevector <16 x bfloat> %207, <16 x bfloat> %208, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %210 = shufflevector <2 x bfloat> %182, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %211 = shufflevector <16 x bfloat> %209, <16 x bfloat> %210, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %212 = shufflevector <2 x bfloat> %182, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %213 = shufflevector <16 x bfloat> %211, <16 x bfloat> %212, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 17, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %214 = shufflevector <2 x bfloat> %184, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %215 = shufflevector <16 x bfloat> %213, <16 x bfloat> %214, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 poison, i32 poison, i32 poison>, !dbg !22
  %216 = shufflevector <2 x bfloat> %184, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %217 = shufflevector <16 x bfloat> %215, <16 x bfloat> %216, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 17, i32 poison, i32 poison>, !dbg !22
  %218 = shufflevector <2 x bfloat> %186, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %219 = shufflevector <16 x bfloat> %217, <16 x bfloat> %218, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 poison>, !dbg !22
  %220 = shufflevector <2 x bfloat> %186, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !22
  %221 = shufflevector <16 x bfloat> %219, <16 x bfloat> %220, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 17>, !dbg !22
  %222 = fpext <16 x bfloat> %221 to <16 x float>, !dbg !22
  %223 = extractelement <8 x float> %196, i64 0, !dbg !23
  %224 = fsub float 0.000000e+00, %223, !dbg !23
  %225 = extractelement <8 x float> %196, i64 1, !dbg !23
  %226 = fsub float 0.000000e+00, %225, !dbg !23
  %227 = extractelement <8 x float> %196, i64 2, !dbg !23
  %228 = fsub float 0.000000e+00, %227, !dbg !23
  %229 = extractelement <8 x float> %196, i64 3, !dbg !23
  %230 = fsub float 0.000000e+00, %229, !dbg !23
  %231 = extractelement <8 x float> %196, i64 4, !dbg !23
  %232 = fsub float 0.000000e+00, %231, !dbg !23
  %233 = extractelement <8 x float> %196, i64 5, !dbg !23
  %234 = fsub float 0.000000e+00, %233, !dbg !23
  %235 = extractelement <8 x float> %196, i64 6, !dbg !23
  %236 = fsub float 0.000000e+00, %235, !dbg !23
  %237 = extractelement <8 x float> %196, i64 7, !dbg !23
  %238 = fsub float 0.000000e+00, %237, !dbg !23
  %239 = fmul float %224, 0x3FF7154760000000, !dbg !27
  %240 = tail call float @llvm.nvvm.ex2.approx.f(float %239), !dbg !27
  %241 = fmul float %226, 0x3FF7154760000000, !dbg !27
  %242 = tail call float @llvm.nvvm.ex2.approx.f(float %241), !dbg !27
  %243 = fmul float %228, 0x3FF7154760000000, !dbg !27
  %244 = tail call float @llvm.nvvm.ex2.approx.f(float %243), !dbg !27
  %245 = fmul float %230, 0x3FF7154760000000, !dbg !27
  %246 = tail call float @llvm.nvvm.ex2.approx.f(float %245), !dbg !27
  %247 = fmul float %232, 0x3FF7154760000000, !dbg !27
  %248 = tail call float @llvm.nvvm.ex2.approx.f(float %247), !dbg !27
  %249 = fmul float %234, 0x3FF7154760000000, !dbg !27
  %250 = tail call float @llvm.nvvm.ex2.approx.f(float %249), !dbg !27
  %251 = fmul float %236, 0x3FF7154760000000, !dbg !27
  %252 = tail call float @llvm.nvvm.ex2.approx.f(float %251), !dbg !27
  %253 = fmul float %238, 0x3FF7154760000000, !dbg !27
  %254 = tail call float @llvm.nvvm.ex2.approx.f(float %253), !dbg !27
  %255 = fadd float %240, 1.000000e+00, !dbg !28
  %256 = fadd float %242, 1.000000e+00, !dbg !28
  %257 = fadd float %244, 1.000000e+00, !dbg !28
  %258 = fadd float %246, 1.000000e+00, !dbg !28
  %259 = fadd float %248, 1.000000e+00, !dbg !28
  %260 = fadd float %250, 1.000000e+00, !dbg !28
  %261 = fadd float %252, 1.000000e+00, !dbg !28
  %262 = fadd float %254, 1.000000e+00, !dbg !28
  %263 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %255), !dbg !29
  %264 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %256), !dbg !29
  %265 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %257), !dbg !29
  %266 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %258), !dbg !29
  %267 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %259), !dbg !29
  %268 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %260), !dbg !29
  %269 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %261), !dbg !29
  %270 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %262), !dbg !29
  %271 = insertelement <8 x float> poison, float %263, i64 0, !dbg !30
  %272 = insertelement <8 x float> %271, float %264, i64 1, !dbg !30
  %273 = insertelement <8 x float> %272, float %265, i64 2, !dbg !30
  %274 = insertelement <8 x float> %273, float %266, i64 3, !dbg !30
  %275 = insertelement <8 x float> %274, float %267, i64 4, !dbg !30
  %276 = insertelement <8 x float> %275, float %268, i64 5, !dbg !30
  %277 = insertelement <8 x float> %276, float %269, i64 6, !dbg !30
  %278 = insertelement <8 x float> %277, float %270, i64 7, !dbg !30
  %279 = fmul <8 x float> %278, %196, !dbg !30
  %280 = shufflevector <8 x float> %279, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !30
  %281 = fmul <16 x float> %280, %222, !dbg !31
  %282 = fadd <16 x float> %148, %281, !dbg !32
  %283 = insertelement <16 x i1> poison, i1 %168, i64 0, !dbg !33
  %284 = shufflevector <16 x i1> %283, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !33
  %285 = select <16 x i1> %284, <16 x float> %282, <16 x float> %148, !dbg !33
  %286 = lshr i32 %7, 5, !dbg !10
  %287 = and i32 %7, 31, !dbg !9
  %288 = and i32 %7, 1, !dbg !9
  %289 = or disjoint i32 %14, %288, !dbg !37
  %290 = icmp slt i32 %289, 9216, !dbg !15
  %shift = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %291 = fadd <16 x float> %285, %shift, !dbg !38
  %shift46 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %292 = fadd <16 x float> %shift46, %291, !dbg !38
  %shift47 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %293 = fadd <16 x float> %shift47, %292, !dbg !38
  %shift48 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 4, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %294 = fadd <16 x float> %shift48, %293, !dbg !38
  %shift49 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 5, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %295 = fadd <16 x float> %shift49, %294, !dbg !38
  %shift50 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 6, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %296 = fadd <16 x float> %shift50, %295, !dbg !38
  %shift51 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %297 = fadd <16 x float> %shift51, %296, !dbg !38
  %298 = extractelement <16 x float> %297, i64 0, !dbg !38
  %shift52 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 9, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %299 = fadd <16 x float> %285, %shift52, !dbg !38
  %shift53 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 10, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %300 = fadd <16 x float> %shift53, %299, !dbg !38
  %shift54 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 11, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %301 = fadd <16 x float> %shift54, %300, !dbg !38
  %shift55 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 12, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %302 = fadd <16 x float> %shift55, %301, !dbg !38
  %shift56 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 13, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %303 = fadd <16 x float> %shift56, %302, !dbg !38
  %shift57 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %304 = fadd <16 x float> %shift57, %303, !dbg !38
  %shift58 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 15, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %305 = fadd <16 x float> %shift58, %304, !dbg !38
  %306 = extractelement <16 x float> %305, i64 8, !dbg !38
  %307 = bitcast float %298 to i32, !dbg !41
  %308 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %307, i32 16, i32 31), !dbg !41
  %309 = bitcast i32 %308 to float, !dbg !41
  %310 = fadd float %298, %309, !dbg !38
  %311 = bitcast float %310 to i32, !dbg !41
  %312 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %311, i32 8, i32 31), !dbg !41
  %313 = bitcast i32 %312 to float, !dbg !41
  %314 = fadd float %310, %313, !dbg !38
  %315 = bitcast float %314 to i32, !dbg !41
  %316 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %315, i32 4, i32 31), !dbg !41
  %317 = bitcast i32 %316 to float, !dbg !41
  %318 = fadd float %314, %317, !dbg !38
  %319 = bitcast float %318 to i32, !dbg !41
  %320 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %319, i32 2, i32 31), !dbg !41
  %321 = bitcast i32 %320 to float, !dbg !41
  %322 = fadd float %318, %321, !dbg !38
  %323 = bitcast float %322 to i32, !dbg !41
  %324 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %323, i32 1, i32 31), !dbg !41
  %325 = bitcast i32 %324 to float, !dbg !41
  %326 = fadd float %322, %325, !dbg !38
  %327 = bitcast float %306 to i32, !dbg !41
  %328 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %327, i32 16, i32 31), !dbg !41
  %329 = bitcast i32 %328 to float, !dbg !41
  %330 = fadd float %306, %329, !dbg !38
  %331 = bitcast float %330 to i32, !dbg !41
  %332 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %331, i32 8, i32 31), !dbg !41
  %333 = bitcast i32 %332 to float, !dbg !41
  %334 = fadd float %330, %333, !dbg !38
  %335 = bitcast float %334 to i32, !dbg !41
  %336 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %335, i32 4, i32 31), !dbg !41
  %337 = bitcast i32 %336 to float, !dbg !41
  %338 = fadd float %334, %337, !dbg !38
  %339 = bitcast float %338 to i32, !dbg !41
  %340 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %339, i32 2, i32 31), !dbg !41
  %341 = bitcast i32 %340 to float, !dbg !41
  %342 = fadd float %338, %341, !dbg !38
  %343 = bitcast float %342 to i32, !dbg !41
  %344 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %343, i32 1, i32 31), !dbg !41
  %345 = bitcast i32 %344 to float, !dbg !41
  %346 = fadd float %342, %345, !dbg !38
  %347 = and i32 %286, 7, !dbg !41
  %348 = icmp eq i32 %287, 0, !dbg !41
  %349 = getelementptr float, ptr addrspace(3) @global_smem, i32 %347, !dbg !41
  %350 = bitcast float %326 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %349, <1 x i32> %350, i1 %348) #4, !dbg !41
  %351 = or disjoint i32 %347, 8, !dbg !41
  %352 = getelementptr float, ptr addrspace(3) @global_smem, i32 %351, !dbg !41
  %353 = bitcast float %346 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %352, <1 x i32> %353, i1 %348) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %354 = icmp slt i32 %7, 16, !dbg !41
  %355 = getelementptr float, ptr addrspace(3) @global_smem, i32 %7, !dbg !41
  %356 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %355, i1 %354) #4, !dbg !41
  %357 = bitcast i32 %356 to float, !dbg !41
  %358 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %356, i32 4, i32 31), !dbg !41
  %359 = bitcast i32 %358 to float, !dbg !41
  %360 = fadd float %357, %359, !dbg !38
  %361 = bitcast float %360 to i32, !dbg !41
  %362 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %361, i32 2, i32 31), !dbg !41
  %363 = bitcast i32 %362 to float, !dbg !41
  %364 = fadd float %360, %363, !dbg !38
  %365 = bitcast float %364 to i32, !dbg !41
  %366 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %365, i32 1, i32 31), !dbg !41
  %367 = bitcast i32 %366 to float, !dbg !41
  %368 = fadd float %364, %367, !dbg !38
  %369 = and i32 %7, 7, !dbg !41
  %370 = icmp eq i32 %369, 0, !dbg !41
  %371 = and i1 %354, %370, !dbg !41
  %372 = bitcast float %368 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %355, <1 x i32> %372, i1 %371) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %373 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !41
  %374 = load i32, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32), align 16, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) @global_smem, i32 %373, i32 %374, i1 true) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %375 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %288, !dbg !42
  %376 = load i32, ptr addrspace(3) %375, align 4, !dbg !42
  %377 = sext i32 %289 to i64, !dbg !43
  %378 = getelementptr float, ptr addrspace(1) %2, i64 %377, !dbg !43
  %379 = and i32 %7, 254, !dbg !44
  %380 = icmp eq i32 %379, 0, !dbg !44
  %381 = and i1 %380, %290, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %376, ptr addrspace(1) %378, i1 %381) #4, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3javbtwo3kq53sidjme4mijol3flx6drv2tw7kvu43ep7t63egm.py", directory: "/tmp/torchinductor_root/3j")
!4 = !{ptr @triton_red_fused_addmm_0, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused_addmm_0", linkageName: "triton_red_fused_addmm_0", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 24, column: 44, scope: !6)
!10 = !DILocation(line: 26, column: 37, scope: !6)
!11 = !DILocation(line: 30, column: 40, scope: !6)
!12 = !DILocation(line: 23, column: 28, scope: !6)
!13 = !DILocation(line: 37, column: 46, scope: !6)
!14 = !DILocation(line: 23, column: 33, scope: !6)
!15 = !DILocation(line: 25, column: 21, scope: !6)
!16 = !DILocation(line: 36, column: 34, scope: !6)
!17 = !DILocation(line: 36, column: 41, scope: !6)
!18 = !DILocation(line: 37, column: 41, scope: !6)
!19 = !DILocation(line: 37, column: 34, scope: !6)
!20 = !DILocation(line: 37, column: 51, scope: !6)
!21 = !DILocation(line: 36, column: 94, scope: !6)
!22 = !DILocation(line: 37, column: 113, scope: !6)
!23 = !DILocation(line: 47, column: 30, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !6, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/dist-packages/triton/language")
!26 = !DILocation(line: 39, column: 26, scope: !6)
!27 = !DILocation(line: 47, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 47, column: 20, scope: !24, inlinedAt: !26)
!29 = !DILocation(line: 47, column: 16, scope: !24, inlinedAt: !26)
!30 = !DILocation(line: 40, column: 22, scope: !6)
!31 = !DILocation(line: 44, column: 22, scope: !6)
!32 = !DILocation(line: 46, column: 25, scope: !6)
!33 = !DILocation(line: 47, column: 50, scope: !6)
!34 = !DILocation(line: 31, column: 31, scope: !6)
!35 = !DILocation(line: 32, column: 29, scope: !6)
!36 = !DILocation(line: 37, column: 61, scope: !6)
!37 = !DILocation(line: 24, column: 23, scope: !6)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !40)
!39 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!40 = !DILocation(line: 48, column: 27, scope: !6)
!41 = !DILocation(line: 286, column: 36, scope: !24, inlinedAt: !40)
!42 = !DILocation(line: 48, column: 30, scope: !6)
!43 = !DILocation(line: 49, column: 25, scope: !6)
!44 = !DILocation(line: 49, column: 37, scope: !6)
!45 = !DILocation(line: 49, column: 4, scope: !6)
