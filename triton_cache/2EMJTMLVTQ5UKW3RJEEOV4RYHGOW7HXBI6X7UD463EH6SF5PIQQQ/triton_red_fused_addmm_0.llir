; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused_addmm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 6, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = lshr i32 %11, 3, !dbg !11
  %13 = and i32 %12, 63, !dbg !11
  %14 = or disjoint i32 %13, %10, !dbg !12
  %15 = icmp slt i32 %14, 18432, !dbg !13
  %16 = shl i32 %11, 3, !dbg !14
  %17 = and i32 %16, 56, !dbg !14
  %18 = mul i32 %14, 3072, !dbg !15
  %19 = zext nneg i32 %17 to i64, !dbg !16
  %20 = insertelement <16 x i1> poison, i1 %15, i64 0, !dbg !17
  %21 = shufflevector <16 x i1> %20, <16 x i1> poison, <16 x i32> zeroinitializer, !dbg !17
  br label %22, !dbg !16

22:                                               ; preds = %8, %22
  %indvars.iv = phi i64 [ 0, %8 ], [ %indvars.iv.next, %22 ]
  %23 = phi <16 x float> [ zeroinitializer, %8 ], [ %154, %22 ]
  %24 = or disjoint i64 %indvars.iv, %19, !dbg !18
  %25 = getelementptr bfloat, ptr addrspace(1) %0, i64 %24, !dbg !19
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %25, i1 true) #4, !dbg !20
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !20
  %28 = bitcast i32 %27 to <2 x bfloat>, !dbg !20
  %29 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !20
  %30 = bitcast i32 %29 to <2 x bfloat>, !dbg !20
  %31 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !20
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !20
  %34 = bitcast i32 %33 to <2 x bfloat>, !dbg !20
  %35 = trunc nuw nsw i64 %24 to i32, !dbg !21
  %36 = add i32 %18, %35, !dbg !21
  %37 = sext i32 %36 to i64, !dbg !22
  %38 = getelementptr bfloat, ptr addrspace(1) %1, i64 %37, !dbg !22
  %39 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %38, i1 %15) #4, !dbg !23
  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !23
  %41 = bitcast i32 %40 to <2 x bfloat>, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !23
  %43 = bitcast i32 %42 to <2 x bfloat>, !dbg !23
  %44 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !23
  %45 = bitcast i32 %44 to <2 x bfloat>, !dbg !23
  %46 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !23
  %47 = bitcast i32 %46 to <2 x bfloat>, !dbg !23
  %48 = getelementptr bfloat, ptr addrspace(1) %2, i64 %37, !dbg !24
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %48, i1 %15) #4, !dbg !25
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !25
  %51 = bitcast i32 %50 to <2 x bfloat>, !dbg !25
  %52 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !25
  %53 = bitcast i32 %52 to <2 x bfloat>, !dbg !25
  %54 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !25
  %55 = bitcast i32 %54 to <2 x bfloat>, !dbg !25
  %56 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !25
  %57 = bitcast i32 %56 to <2 x bfloat>, !dbg !25
  %58 = shufflevector <2 x bfloat> %28, <2 x bfloat> %30, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %59 = shufflevector <2 x bfloat> %32, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %60 = shufflevector <8 x bfloat> %58, <8 x bfloat> %59, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %61 = shufflevector <2 x bfloat> %32, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %62 = shufflevector <8 x bfloat> %60, <8 x bfloat> %61, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 9, i32 poison, i32 poison>, !dbg !26
  %63 = shufflevector <2 x bfloat> %34, <2 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %64 = shufflevector <8 x bfloat> %62, <8 x bfloat> %63, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %65 = shufflevector <2 x bfloat> %34, <2 x bfloat> poison, <8 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %66 = shufflevector <8 x bfloat> %64, <8 x bfloat> %65, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 9>, !dbg !26
  %67 = fpext <8 x bfloat> %66 to <8 x float>, !dbg !26
  %68 = shufflevector <2 x bfloat> %51, <2 x bfloat> %53, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %69 = shufflevector <2 x bfloat> %55, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %70 = shufflevector <16 x bfloat> %68, <16 x bfloat> %69, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %71 = shufflevector <2 x bfloat> %55, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %72 = shufflevector <16 x bfloat> %70, <16 x bfloat> %71, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %73 = shufflevector <2 x bfloat> %57, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %74 = shufflevector <16 x bfloat> %72, <16 x bfloat> %73, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %75 = shufflevector <2 x bfloat> %57, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %76 = shufflevector <16 x bfloat> %74, <16 x bfloat> %75, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %77 = shufflevector <2 x bfloat> %41, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %78 = shufflevector <16 x bfloat> %76, <16 x bfloat> %77, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %79 = shufflevector <2 x bfloat> %41, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %80 = shufflevector <16 x bfloat> %78, <16 x bfloat> %79, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 17, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %81 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %82 = shufflevector <16 x bfloat> %80, <16 x bfloat> %81, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %83 = shufflevector <2 x bfloat> %43, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %84 = shufflevector <16 x bfloat> %82, <16 x bfloat> %83, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 17, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %85 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %86 = shufflevector <16 x bfloat> %84, <16 x bfloat> %85, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 poison, i32 poison, i32 poison>, !dbg !27
  %87 = shufflevector <2 x bfloat> %45, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %88 = shufflevector <16 x bfloat> %86, <16 x bfloat> %87, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 17, i32 poison, i32 poison>, !dbg !27
  %89 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %90 = shufflevector <16 x bfloat> %88, <16 x bfloat> %89, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 poison>, !dbg !27
  %91 = shufflevector <2 x bfloat> %47, <2 x bfloat> poison, <16 x i32> <i32 poison, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !27
  %92 = shufflevector <16 x bfloat> %90, <16 x bfloat> %91, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 17>, !dbg !27
  %93 = fpext <16 x bfloat> %92 to <16 x float>, !dbg !27
  %94 = extractelement <8 x float> %67, i64 0, !dbg !28
  %95 = fsub float 0.000000e+00, %94, !dbg !28
  %96 = extractelement <8 x float> %67, i64 1, !dbg !28
  %97 = fsub float 0.000000e+00, %96, !dbg !28
  %98 = extractelement <8 x float> %67, i64 2, !dbg !28
  %99 = fsub float 0.000000e+00, %98, !dbg !28
  %100 = extractelement <8 x float> %67, i64 3, !dbg !28
  %101 = fsub float 0.000000e+00, %100, !dbg !28
  %102 = extractelement <8 x float> %67, i64 4, !dbg !28
  %103 = fsub float 0.000000e+00, %102, !dbg !28
  %104 = extractelement <8 x float> %67, i64 5, !dbg !28
  %105 = fsub float 0.000000e+00, %104, !dbg !28
  %106 = extractelement <8 x float> %67, i64 6, !dbg !28
  %107 = fsub float 0.000000e+00, %106, !dbg !28
  %108 = extractelement <8 x float> %67, i64 7, !dbg !28
  %109 = fsub float 0.000000e+00, %108, !dbg !28
  %110 = fmul float %95, 0x3FF7154760000000, !dbg !32
  %111 = tail call float @llvm.nvvm.ex2.approx.f(float %110), !dbg !32
  %112 = fmul float %97, 0x3FF7154760000000, !dbg !32
  %113 = tail call float @llvm.nvvm.ex2.approx.f(float %112), !dbg !32
  %114 = fmul float %99, 0x3FF7154760000000, !dbg !32
  %115 = tail call float @llvm.nvvm.ex2.approx.f(float %114), !dbg !32
  %116 = fmul float %101, 0x3FF7154760000000, !dbg !32
  %117 = tail call float @llvm.nvvm.ex2.approx.f(float %116), !dbg !32
  %118 = fmul float %103, 0x3FF7154760000000, !dbg !32
  %119 = tail call float @llvm.nvvm.ex2.approx.f(float %118), !dbg !32
  %120 = fmul float %105, 0x3FF7154760000000, !dbg !32
  %121 = tail call float @llvm.nvvm.ex2.approx.f(float %120), !dbg !32
  %122 = fmul float %107, 0x3FF7154760000000, !dbg !32
  %123 = tail call float @llvm.nvvm.ex2.approx.f(float %122), !dbg !32
  %124 = fmul float %109, 0x3FF7154760000000, !dbg !32
  %125 = tail call float @llvm.nvvm.ex2.approx.f(float %124), !dbg !32
  %126 = fadd float %111, 1.000000e+00, !dbg !33
  %127 = fadd float %113, 1.000000e+00, !dbg !33
  %128 = fadd float %115, 1.000000e+00, !dbg !33
  %129 = fadd float %117, 1.000000e+00, !dbg !33
  %130 = fadd float %119, 1.000000e+00, !dbg !33
  %131 = fadd float %121, 1.000000e+00, !dbg !33
  %132 = fadd float %123, 1.000000e+00, !dbg !33
  %133 = fadd float %125, 1.000000e+00, !dbg !33
  %134 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %126), !dbg !34
  %135 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %127), !dbg !34
  %136 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %128), !dbg !34
  %137 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %129), !dbg !34
  %138 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %130), !dbg !34
  %139 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %131), !dbg !34
  %140 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %132), !dbg !34
  %141 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %133), !dbg !34
  %142 = insertelement <8 x float> poison, float %134, i64 0, !dbg !35
  %143 = insertelement <8 x float> %142, float %135, i64 1, !dbg !35
  %144 = insertelement <8 x float> %143, float %136, i64 2, !dbg !35
  %145 = insertelement <8 x float> %144, float %137, i64 3, !dbg !35
  %146 = insertelement <8 x float> %145, float %138, i64 4, !dbg !35
  %147 = insertelement <8 x float> %146, float %139, i64 5, !dbg !35
  %148 = insertelement <8 x float> %147, float %140, i64 6, !dbg !35
  %149 = insertelement <8 x float> %148, float %141, i64 7, !dbg !35
  %150 = fmul <8 x float> %149, %67, !dbg !35
  %151 = shufflevector <8 x float> %150, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %152 = fmul <16 x float> %151, %93, !dbg !36
  %153 = fadd <16 x float> %23, %152, !dbg !37
  %154 = select <16 x i1> %21, <16 x float> %153, <16 x float> %23, !dbg !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 64, !dbg !16
  %155 = icmp samesign ult i64 %indvars.iv, 3008, !dbg !16
  br i1 %155, label %22, label %156, !dbg !16

156:                                              ; preds = %22
  %157 = and i32 %11, 63, !dbg !11
  %158 = or disjoint i32 %10, %157, !dbg !12
  %159 = icmp slt i32 %158, 18432, !dbg !13
  %shift = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 9, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %160 = fadd <16 x float> %154, %shift, !dbg !38
  %shift49 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 10, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %161 = fadd <16 x float> %shift49, %160, !dbg !38
  %shift50 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 11, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %162 = fadd <16 x float> %shift50, %161, !dbg !38
  %shift51 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 12, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %163 = fadd <16 x float> %shift51, %162, !dbg !38
  %shift52 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 13, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %164 = fadd <16 x float> %shift52, %163, !dbg !38
  %shift53 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 14, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %165 = fadd <16 x float> %shift53, %164, !dbg !38
  %shift54 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 15, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %166 = fadd <16 x float> %shift54, %165, !dbg !38
  %167 = extractelement <16 x float> %166, i64 8, !dbg !38
  %168 = bitcast float %167 to i32, !dbg !41
  %169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %168, i32 4, i32 31), !dbg !41
  %170 = bitcast i32 %169 to float, !dbg !41
  %171 = fadd float %167, %170, !dbg !38
  %172 = bitcast float %171 to i32, !dbg !41
  %173 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 2, i32 31), !dbg !41
  %174 = bitcast i32 %173 to float, !dbg !41
  %175 = fadd float %171, %174, !dbg !38
  %176 = bitcast float %175 to i32, !dbg !41
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %176, i32 1, i32 31), !dbg !41
  %178 = bitcast i32 %177 to float, !dbg !41
  %179 = fadd float %175, %178, !dbg !38
  %180 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %13, !dbg !42
  %181 = bitcast float %179 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %181, i1 true) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %182 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %157, !dbg !42
  %183 = load i32, ptr addrspace(3) %182, align 4, !dbg !42
  %shift55 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %184 = fadd <16 x float> %154, %shift55, !dbg !43
  %shift56 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %185 = fadd <16 x float> %shift56, %184, !dbg !43
  %shift57 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %186 = fadd <16 x float> %shift57, %185, !dbg !43
  %shift58 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 4, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %187 = fadd <16 x float> %shift58, %186, !dbg !43
  %shift59 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 5, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %188 = fadd <16 x float> %shift59, %187, !dbg !43
  %shift60 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 6, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %189 = fadd <16 x float> %shift60, %188, !dbg !43
  %shift61 = shufflevector <16 x float> %154, <16 x float> poison, <16 x i32> <i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !43
  %190 = fadd <16 x float> %shift61, %189, !dbg !43
  %191 = extractelement <16 x float> %190, i64 0, !dbg !43
  %192 = bitcast float %191 to i32, !dbg !45
  %193 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %192, i32 4, i32 31), !dbg !45
  %194 = bitcast i32 %193 to float, !dbg !45
  %195 = fadd float %191, %194, !dbg !43
  %196 = bitcast float %195 to i32, !dbg !45
  %197 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %196, i32 2, i32 31), !dbg !45
  %198 = bitcast i32 %197 to float, !dbg !45
  %199 = fadd float %195, %198, !dbg !43
  %200 = bitcast float %199 to i32, !dbg !45
  %201 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %200, i32 1, i32 31), !dbg !45
  %202 = bitcast i32 %201 to float, !dbg !45
  %203 = fadd float %199, %202, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %204 = bitcast float %203 to <1 x i32>, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %204, i1 true) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %205 = load i32, ptr addrspace(3) %182, align 4, !dbg !46
  %206 = sext i32 %158 to i64, !dbg !47
  %207 = getelementptr float, ptr addrspace(1) %3, i64 %206, !dbg !47
  %208 = and i32 %11, 448, !dbg !48
  %209 = icmp eq i32 %208, 0, !dbg !48
  %210 = and i1 %209, %159, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %183, ptr addrspace(1) %207, i1 %210) #4, !dbg !48
  %211 = getelementptr float, ptr addrspace(1) %4, i64 %206, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %205, ptr addrspace(1) %211, i1 %210) #4, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py", directory: "/tmp/torchinductor_root/pd")
!4 = !{ptr @triton_red_fused_addmm_0, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused_addmm_0", linkageName: "triton_red_fused_addmm_0", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 23, column: 28, scope: !6)
!10 = !DILocation(line: 23, column: 33, scope: !6)
!11 = !DILocation(line: 24, column: 44, scope: !6)
!12 = !DILocation(line: 24, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 21, scope: !6)
!14 = !DILocation(line: 26, column: 37, scope: !6)
!15 = !DILocation(line: 38, column: 46, scope: !6)
!16 = !DILocation(line: 31, column: 40, scope: !6)
!17 = !DILocation(line: 54, column: 50, scope: !6)
!18 = !DILocation(line: 32, column: 31, scope: !6)
!19 = !DILocation(line: 37, column: 34, scope: !6)
!20 = !DILocation(line: 37, column: 41, scope: !6)
!21 = !DILocation(line: 38, column: 41, scope: !6)
!22 = !DILocation(line: 38, column: 34, scope: !6)
!23 = !DILocation(line: 38, column: 51, scope: !6)
!24 = !DILocation(line: 39, column: 35, scope: !6)
!25 = !DILocation(line: 39, column: 52, scope: !6)
!26 = !DILocation(line: 37, column: 94, scope: !6)
!27 = !DILocation(line: 39, column: 114, scope: !6)
!28 = !DILocation(line: 47, column: 30, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !6, file: !30, discriminator: 0)
!30 = !DIFile(filename: "standard.py", directory: "/usr/local/lib/python3.10/dist-packages/triton/language")
!31 = !DILocation(line: 41, column: 26, scope: !6)
!32 = !DILocation(line: 47, column: 29, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 47, column: 20, scope: !29, inlinedAt: !31)
!34 = !DILocation(line: 47, column: 16, scope: !29, inlinedAt: !31)
!35 = !DILocation(line: 42, column: 22, scope: !6)
!36 = !DILocation(line: 51, column: 23, scope: !6)
!37 = !DILocation(line: 53, column: 25, scope: !6)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !40)
!39 = distinct !DILexicalBlockFile(scope: !29, file: !30, discriminator: 0)
!40 = !DILocation(line: 55, column: 27, scope: !6)
!41 = !DILocation(line: 286, column: 36, scope: !29, inlinedAt: !40)
!42 = !DILocation(line: 55, column: 30, scope: !6)
!43 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !44)
!44 = !DILocation(line: 56, column: 27, scope: !6)
!45 = !DILocation(line: 286, column: 36, scope: !29, inlinedAt: !44)
!46 = !DILocation(line: 56, column: 30, scope: !6)
!47 = !DILocation(line: 57, column: 25, scope: !6)
!48 = !DILocation(line: 57, column: 37, scope: !6)
!49 = !DILocation(line: 58, column: 25, scope: !6)
!50 = !DILocation(line: 58, column: 37, scope: !6)
!51 = !DILocation(line: 58, column: 4, scope: !6)
