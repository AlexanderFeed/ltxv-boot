#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 8], warpsPerCTA = [16, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 8], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0)
#loc1 = loc(unknown)
#loc37 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":55:27)
#loc40 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":56:27)
#loc52 = loc(callsite(#loc1 at #loc37))
#loc55 = loc(callsite(#loc1 at #loc40))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_addmm_0(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x64xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x64xbf16, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<18432> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<18432> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x64xbf16, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<3072> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<3072> : tensor<1x64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<64x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<64x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_1 : tensor<64x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_2 : tensor<64x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc7)
    %14 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>, #blocked> loc(#loc8)
    %15 = arith.muli %8, %cst_6 : tensor<64x1xi32, #blocked> loc(#loc9)
    %16 = tt.broadcast %15 : tensor<64x1xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc10)
    %17 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked> loc(#loc11)
    %18 = tt.broadcast %10 : tensor<64x1xi1, #blocked> -> tensor<64x64xi1, #blocked> loc(#loc12)
    %19 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked> loc(#loc13)
    %20:2 = scf.for %arg7 = %c0_i32 to %c3072_i32 step %c64_i32 iter_args(%arg8 = %cst, %arg9 = %cst) -> (tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>)  : i32 {
      %31 = tt.splat %arg7 : i32 -> tensor<1x64xi32, #blocked> loc(#loc15)
      %32 = arith.addi %31, %13 : tensor<1x64xi32, #blocked> loc(#loc15)
      %33 = arith.cmpi slt, %32, %cst_7 : tensor<1x64xi32, #blocked> loc(#loc16)
      %34 = tt.addptr %14, %32 : tensor<1x64x!tt.ptr<bf16>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc8)
      %35 = tt.load %34, %33, %cst_5 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<bf16>, #blocked> loc(#loc17)
      %36 = arith.extf %35 : tensor<1x64xbf16, #blocked> to tensor<1x64xf32, #blocked> loc(#loc18)
      %37 = tt.broadcast %32 : tensor<1x64xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc10)
      %38 = arith.addi %37, %16 : tensor<64x64xi32, #blocked> loc(#loc10)
      %39 = tt.addptr %17, %38 : tensor<64x64x!tt.ptr<bf16>, #blocked>, tensor<64x64xi32, #blocked> loc(#loc11)
      %40 = tt.broadcast %33 : tensor<1x64xi1, #blocked> -> tensor<64x64xi1, #blocked> loc(#loc12)
      %41 = arith.andi %18, %40 : tensor<64x64xi1, #blocked> loc(#loc12)
      %42 = tt.load %39, %41, %cst_0 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>, #blocked> loc(#loc19)
      %43 = arith.extf %42 : tensor<64x64xbf16, #blocked> to tensor<64x64xf32, #blocked> loc(#loc20)
      %44 = tt.addptr %19, %38 : tensor<64x64x!tt.ptr<bf16>, #blocked>, tensor<64x64xi32, #blocked> loc(#loc13)
      %45 = tt.load %44, %41, %cst_0 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<bf16>, #blocked> loc(#loc21)
      %46 = arith.extf %45 : tensor<64x64xbf16, #blocked> to tensor<64x64xf32, #blocked> loc(#loc22)
      %47 = arith.subf %cst_3, %36 : tensor<1x64xf32, #blocked> loc(#loc47)
      %48 = math.exp %47 : tensor<1x64xf32, #blocked> loc(#loc48)
      %49 = arith.addf %48, %cst_4 : tensor<1x64xf32, #blocked> loc(#loc49)
      %50 = arith.divf %cst_4, %49 : tensor<1x64xf32, #blocked> loc(#loc50)
      %51 = arith.mulf %36, %50 : tensor<1x64xf32, #blocked> loc(#loc28)
      %52 = tt.broadcast %51 : tensor<1x64xf32, #blocked> -> tensor<64x64xf32, #blocked> loc(#loc29)
      %53 = arith.mulf %52, %43 : tensor<64x64xf32, #blocked> loc(#loc29)
      %54 = arith.addf %arg8, %53 : tensor<64x64xf32, #blocked> loc(#loc30)
      %55 = arith.select %41, %54, %arg8 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc31)
      %56 = arith.mulf %52, %46 : tensor<64x64xf32, #blocked> loc(#loc32)
      %57 = arith.addf %arg9, %56 : tensor<64x64xf32, #blocked> loc(#loc33)
      %58 = arith.select %41, %57, %arg9 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc34)
      scf.yield %55, %58 : tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked> loc(#loc35)
    } loc(#loc14)
    %21 = "tt.reduce"(%20#0) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc37)), %arg8: f32 loc(callsite(#loc1 at #loc37))):
      %31 = arith.addf %arg7, %arg8 : f32 loc(#loc56)
      tt.reduce.return %31 : f32 loc(#loc51)
    }) : (tensor<64x64xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc51)
    %22 = ttg.convert_layout %21 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc39)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xf32, #blocked1> loc(#loc39)
    %24 = "tt.reduce"(%20#1) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc40)), %arg8: f32 loc(callsite(#loc1 at #loc40))):
      %31 = arith.addf %arg7, %arg8 : f32 loc(#loc57)
      tt.reduce.return %31 : f32 loc(#loc54)
    }) : (tensor<64x64xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc54)
    %25 = ttg.convert_layout %24 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc41)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xf32, #blocked1> loc(#loc41)
    %27 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked1> loc(#loc42)
    %28 = tt.addptr %27, %9 : tensor<64x1x!tt.ptr<f32>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc42)
    tt.store %28, %23, %11 : tensor<64x1x!tt.ptr<f32>, #blocked1> loc(#loc43)
    %29 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked1> loc(#loc44)
    %30 = tt.addptr %29, %9 : tensor<64x1x!tt.ptr<f32>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc44)
    tt.store %30, %26, %11 : tensor<64x1x!tt.ptr<f32>, #blocked1> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:34)
#loc9 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:46)
#loc10 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:41)
#loc11 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:34)
#loc12 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:59)
#loc13 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:35)
#loc14 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":31:40)
#loc15 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":32:31)
#loc16 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":33:29)
#loc17 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:41)
#loc18 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":37:94)
#loc19 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:51)
#loc20 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":38:113)
#loc21 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:52)
#loc22 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":39:114)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:30)
#loc24 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":41:26)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:29)
#loc26 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:20)
#loc27 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":47:16)
#loc28 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":42:22)
#loc29 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":46:22)
#loc30 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":48:25)
#loc31 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":49:50)
#loc32 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":51:23)
#loc33 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":53:25)
#loc34 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":54:50)
#loc35 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":54:8)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc38 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc39 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":55:30)
#loc41 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":56:30)
#loc42 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":57:25)
#loc43 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":57:37)
#loc44 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:25)
#loc45 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:37)
#loc46 = loc("/tmp/torchinductor_root/pd/cpdejrfyv2kwed44vpldu3lq3fqyqqztaloewcb735r6wirux7ab.py":58:4)
#loc47 = loc(callsite(#loc23 at #loc24))
#loc48 = loc(callsite(#loc25 at #loc24))
#loc49 = loc(callsite(#loc26 at #loc24))
#loc50 = loc(callsite(#loc27 at #loc24))
#loc51 = loc(callsite(#loc36 at #loc37))
#loc53 = loc(callsite(#loc38 at #loc36))
#loc54 = loc(callsite(#loc36 at #loc40))
#loc56 = loc(callsite(#loc53 at #loc37))
#loc57 = loc(callsite(#loc53 at #loc40))
