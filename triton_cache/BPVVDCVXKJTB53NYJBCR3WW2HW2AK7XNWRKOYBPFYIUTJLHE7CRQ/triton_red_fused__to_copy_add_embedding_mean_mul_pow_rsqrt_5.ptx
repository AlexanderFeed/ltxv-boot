//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 113, 113, 47, 99, 113, 113, 116, 110, 53, 108, 109, 98, 97, 105, 100, 97, 55, 100, 119, 102, 106, 104, 54, 119, 50, 111, 100, 112, 107, 103, 112, 117, 108, 54, 109, 109, 103, 104, 117, 99, 121, 121, 52, 120, 114, 103, 113, 119, 115, 116, 100, 119, 114, 107, 114, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b16 	%rs<35>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<140>;
	.reg .b64 	%rd<95>;
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:18:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_4];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_3];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_2];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_1];
	ld.param.u64 	%rd42, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_5_param_0];
$L__tmp0:
	.loc	1 23 28                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:28
	mov.u32 	%r15, %ctaid.x;
	.loc	1 23 33                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:23:33
	shl.b32 	%r16, %r15, 3;
	.loc	1 24 44                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:44
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.u32 	%r3, %r1, 6, 3;
	.loc	1 24 23                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:24:23
	or.b32  	%r4, %r3, %r16;
	.loc	1 25 21                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:25:21
	setp.lt.s32 	%p2, %r4, 512;
	setp.gt.s32 	%p22, %r16, 511;
	setp.lt.s32 	%p18, %r16, 512;
	.loc	1 26 37                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:26:37
	and.b32  	%r5, %r1, 31;
	shl.b32 	%r17, %r1, 3;
	and.b32  	%r6, %r17, 504;
	and.b32  	%r7, %r1, 511;
	.loc	1 29 30                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:30
	mul.wide.s32 	%rd43, %r4, 8;
	add.s64 	%rd14, %rd42, %rd43;
	mul.wide.s32 	%rd44, %r16, 8;
	add.s64 	%rd31, %rd42, %rd44;
	add.s64 	%rd34, %rd31, 16;
	add.s64 	%rd37, %rd31, 32;
	add.s64 	%rd40, %rd31, 48;
	.loc	1 29 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:29:35
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	mov.u64 %rd30, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd29, %rd30 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	mov.u64 %rd33, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd32, %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	mov.u64 %rd36, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd35, %rd36 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd38, 0x0;
	mov.u64 %rd39, 0x0;
	@%p18 ld.global.L1::evict_last.v2.b64 { %rd38, %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 37 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:46
	shl.b32 	%r18, %r4, 12;
	.loc	1 40 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:40:22
	setp.lt.s64 	%p23, %rd27, 0;
	.loc	1 39 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:39:22
	add.s64 	%rd45, %rd32, 32128;
	add.s64 	%rd46, %rd33, 32128;
	add.s64 	%rd47, %rd35, 32128;
	add.s64 	%rd48, %rd36, 32128;
	add.s64 	%rd49, %rd38, 32128;
	add.s64 	%rd50, %rd30, 32128;
	add.s64 	%rd51, %rd29, 32128;
	add.s64 	%rd52, %rd39, 32128;
	.loc	1 40 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:40:22
	setp.lt.s64 	%p24, %rd32, 0;
	setp.lt.s64 	%p25, %rd33, 0;
	setp.lt.s64 	%p26, %rd35, 0;
	setp.lt.s64 	%p27, %rd36, 0;
	setp.lt.s64 	%p28, %rd38, 0;
	setp.lt.s64 	%p29, %rd30, 0;
	setp.lt.s64 	%p30, %rd29, 0;
	setp.lt.s64 	%p31, %rd39, 0;
	.loc	1 41 36                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:41:36
	selp.b64 	%rd53, %rd52, %rd39, %p31;
	selp.b64 	%rd54, %rd51, %rd29, %p30;
	selp.b64 	%rd55, %rd50, %rd30, %p29;
	selp.b64 	%rd56, %rd49, %rd38, %p28;
	selp.b64 	%rd57, %rd48, %rd36, %p27;
	selp.b64 	%rd58, %rd47, %rd35, %p26;
	selp.b64 	%rd59, %rd46, %rd33, %p25;
	selp.b64 	%rd60, %rd45, %rd32, %p24;
	.loc	1 43 46                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:46
	shl.b64 	%rd61, %rd27, 12;
	add.s64 	%rd62, %rd61, 131596288;
	selp.b64 	%rd63, %rd62, %rd61, %p23;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	or.b32  	%r8, %r6, %r18;
	max.u64 	%rd64, %rd60, %rd59;
	max.u64 	%rd65, %rd64, %rd58;
	max.u64 	%rd66, %rd65, %rd57;
	max.u64 	%rd67, %rd66, %rd56;
	max.u64 	%rd68, %rd67, %rd55;
	max.u64 	%rd69, %rd68, %rd54;
	max.u64 	%rd70, %rd69, %rd53;
	setp.lt.u64 	%p32, %rd70, 32128;
	or.pred  	%p1, %p32, %p22;
	cvt.u64.u32 	%rd71, %r6;
	or.b64  	%rd1, %rd63, %rd71;
	mov.f32 	%f132, 0f00000000;
	mov.b64 	%rd92, 0;
	mov.f32 	%f133, %f132;
	mov.f32 	%f134, %f132;
	mov.f32 	%f135, %f132;
	mov.f32 	%f136, %f132;
	mov.f32 	%f137, %f132;
	mov.f32 	%f138, %f132;
	mov.f32 	%f139, %f132;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	cvt.u32.u64 	%r27, %rd92;
	or.b32  	%r28, %r8, %r27;
	.loc	1 37 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:34
	mul.wide.s32 	%rd73, %r28, 2;
	add.s64 	%rd72, %rd10, %rd73;
	mov.b32 	%r26, 0;
	.loc	1 37 51                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:51
	// begin inline asm
	mov.u32 %r19, %r26;
	mov.u32 %r20, %r26;
	mov.u32 %r21, %r26;
	mov.u32 %r22, %r26;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd72 + 0 ];
	// end inline asm
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	@%p1 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_2;
$L__BB0_3:                              //   in Loop: Header=BB0_1 Depth=1
	bar.sync 	0;
	or.b64  	%rd81, %rd92, %rd1;
	.loc	1 43 34                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:34
	shl.b64 	%rd82, %rd81, 1;
	add.s64 	%rd80, %rd9, %rd82;
	.loc	1 43 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:53
	// begin inline asm
	mov.u32 %r29, %r26;
	mov.u32 %r30, %r26;
	mov.u32 %r31, %r26;
	mov.u32 %r32, %r26;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd80 + 0 ];
	// end inline asm
	.loc	1 37 112                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:37:112
	mov.b32 	{%rs1, %rs2}, %r19;
	cvt.f32.bf16 	%f27, %rs1;
	cvt.f32.bf16 	%f28, %rs2;
	mov.b32 	{%rs3, %rs4}, %r20;
	cvt.f32.bf16 	%f29, %rs3;
	cvt.f32.bf16 	%f30, %rs4;
	mov.b32 	{%rs5, %rs6}, %r21;
	cvt.f32.bf16 	%f31, %rs5;
	cvt.f32.bf16 	%f32, %rs6;
	mov.b32 	{%rs7, %rs8}, %r22;
	cvt.f32.bf16 	%f33, %rs7;
	cvt.f32.bf16 	%f34, %rs8;
	.loc	1 43 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:43:114
	mov.b32 	{%rs9, %rs10}, %r29;
	cvt.f32.bf16 	%f35, %rs9;
	cvt.f32.bf16 	%f36, %rs10;
	mov.b32 	{%rs11, %rs12}, %r30;
	cvt.f32.bf16 	%f37, %rs11;
	cvt.f32.bf16 	%f38, %rs12;
	mov.b32 	{%rs13, %rs14}, %r31;
	cvt.f32.bf16 	%f39, %rs13;
	cvt.f32.bf16 	%f40, %rs14;
	mov.b32 	{%rs15, %rs16}, %r32;
	cvt.f32.bf16 	%f41, %rs15;
	cvt.f32.bf16 	%f42, %rs16;
	.loc	1 44 22                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:44:22
	add.f32 	%f43, %f34, %f42;
	add.f32 	%f44, %f33, %f41;
	add.f32 	%f45, %f32, %f40;
	add.f32 	%f46, %f31, %f39;
	add.f32 	%f47, %f30, %f38;
	add.f32 	%f48, %f29, %f37;
	add.f32 	%f49, %f28, %f36;
	add.f32 	%f50, %f27, %f35;
	.loc	1 48 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:48:25
	fma.rn.f32 	%f51, %f50, %f50, %f132;
	fma.rn.f32 	%f52, %f49, %f49, %f133;
	fma.rn.f32 	%f53, %f48, %f48, %f134;
	fma.rn.f32 	%f54, %f47, %f47, %f135;
	fma.rn.f32 	%f55, %f46, %f46, %f136;
	fma.rn.f32 	%f56, %f45, %f45, %f137;
	fma.rn.f32 	%f57, %f44, %f44, %f138;
	fma.rn.f32 	%f58, %f43, %f43, %f139;
	.loc	1 49 50                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:49:50
	selp.f32 	%f139, %f58, %f139, %p2;
	selp.f32 	%f138, %f57, %f138, %p2;
	selp.f32 	%f137, %f56, %f137, %p2;
	selp.f32 	%f136, %f55, %f136, %p2;
	selp.f32 	%f135, %f54, %f135, %p2;
	selp.f32 	%f134, %f53, %f134, %p2;
	selp.f32 	%f133, %f52, %f133, %p2;
	selp.f32 	%f132, %f51, %f132, %p2;
	.loc	1 31 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:31:40
	add.s64 	%rd3, %rd92, 512;
	setp.lt.u64 	%p35, %rd92, 3584;
	mov.u64 	%rd92, %rd3;
	@%p35 bra 	$L__BB0_1;
// %bb.4:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f132, %f133;
	add.f32 	%f60, %f134, %f59;
	add.f32 	%f61, %f135, %f60;
	add.f32 	%f62, %f136, %f61;
	add.f32 	%f63, %f137, %f62;
	add.f32 	%f64, %f138, %f63;
	add.f32 	%f65, %f139, %f64;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f65;
	shfl.sync.bfly.b32	%r44, %r43, 16, 31, -1;
	mov.b32 	%f66, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r45, %f67;
	shfl.sync.bfly.b32	%r46, %r45, 8, 31, -1;
	mov.b32 	%f68, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f69;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f70, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f71;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f72, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f73;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f74, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r53, %r2, 1;
	setp.eq.s32 	%p36, %r5, 0;
	shl.b32 	%r54, %r53, 2;
	shl.b32 	%r55, %r3, 3;
	or.b32  	%r56, %r55, %r54;
	mov.u32 	%r57, global_smem;
	add.s32 	%r37, %r57, %r56;
	mov.b32 	%r38, %f75;
	// begin inline asm
	@%p36 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p37, %r1, 16;
	shl.b32 	%r58, %r1, 2;
	add.s32 	%r40, %r57, %r58;
	// begin inline asm
	@%p37 ld.shared.b32 %r39, [ %r40 + 0 ];
	// end inline asm
	mov.b32 	%f76, %r39;
	shfl.sync.bfly.b32	%r59, %r39, 1, 31, -1;
	mov.b32 	%f77, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r60, %r1, 1;
	setp.eq.b32 	%p39, %r60, 1;
	not.pred 	%p40, %p39;
	and.pred  	%p38, %p37, %p40;
	mov.b32 	%r42, %f78;
	// begin inline asm
	@%p38 st.shared.b32 [ %r40 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r61, %r57, %r55;
	ld.shared.f32 	%f79, [%r61];
	mov.f32 	%f80, 0f45800000;
$L__tmp2:
	.loc	1 68 25                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:68:25
	div.full.f32 	%f81, %f79, %f80;
	.loc	1 70 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:70:24
	add.f32 	%f82, %f81, 0f358637BD;
	.loc	1 71 32                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:71:32
	rsqrt.approx.ftz.f32 	%f17, %f82;
	shl.b32 	%r62, %r7, 2;
	add.s32 	%r80, %r57, %r62;
	shl.b32 	%r63, %r6, 2;
	add.s32 	%r14, %r57, %r63;
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	mul.wide.u32 	%rd84, %r7, 2;
	add.s64 	%rd93, %rd11, %rd84;
	mov.b64 	%rd94, 0;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:0:40
	mov.b16 	%rs18, 0;
	mov.pred 	%p41, -1;
	.loc	1 57 42                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:42
	// begin inline asm
	mov.u16 %rs17, %rs18;
	@%p41 ld.global.L1::evict_last.b16 { %rs17 }, [ %rd93 + 0 ];
	// end inline asm
	cvt.u32.u64 	%r86, %rd94;
	or.b32  	%r87, %r8, %r86;
	.loc	1 58 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:35
	mul.wide.s32 	%rd89, %r87, 2;
	add.s64 	%rd86, %rd10, %rd89;
	mov.b32 	%r68, 0;
	.loc	1 58 52                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:52
	// begin inline asm
	mov.u32 %r64, %r68;
	mov.u32 %r65, %r68;
	mov.u32 %r66, %r68;
	mov.u32 %r67, %r68;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd86 + 0 ];
	// end inline asm
	.loc	1 57 95                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:57:95
	cvt.f32.bf16 	%f83, %rs17;
	.loc	1 63 70                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:63:70
	bar.sync 	0;
	or.b64  	%rd90, %rd94, %rd1;
	.loc	1 64 35                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:35
	shl.b64 	%rd91, %rd90, 1;
	add.s64 	%rd87, %rd9, %rd91;
	.loc	1 64 55                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:55
	// begin inline asm
	mov.u32 %r72, %r68;
	mov.u32 %r73, %r68;
	mov.u32 %r74, %r68;
	mov.u32 %r75, %r68;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r72, %r73, %r74, %r75 }, [ %rd87 + 0 ];
	// end inline asm
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	bar.sync 	0;
	mov.b32 	%r81, %f83;
	// begin inline asm
	@%p41 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
	.loc	1 75 29                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:29
	add.s64 	%rd88, %rd12, %rd89;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs19, %rs20}, %r64;
	cvt.f32.bf16 	%f84, %rs20;
	cvt.f32.bf16 	%f85, %rs19;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs21, %rs22}, %r72;
	cvt.f32.bf16 	%f86, %rs22;
	cvt.f32.bf16 	%f87, %rs21;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f88, %f85, %f87;
	add.f32 	%f89, %f84, %f86;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f90, %f17, %f89;
	mul.f32 	%f91, %f17, %f88;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	ld.shared.v4.f32 	{%f92, %f93, %f94, %f95}, [%r14];
	mul.f32 	%f96, %f92, %f91;
	mul.f32 	%f97, %f93, %f90;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r82, %f97, %f96;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs23, %rs24}, %r65;
	cvt.f32.bf16 	%f98, %rs24;
	cvt.f32.bf16 	%f99, %rs23;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs25, %rs26}, %r73;
	cvt.f32.bf16 	%f100, %rs26;
	cvt.f32.bf16 	%f101, %rs25;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f102, %f99, %f101;
	add.f32 	%f103, %f98, %f100;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f104, %f17, %f103;
	mul.f32 	%f105, %f17, %f102;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	mul.f32 	%f106, %f94, %f105;
	mul.f32 	%f107, %f95, %f104;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r83, %f107, %f106;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs27, %rs28}, %r66;
	cvt.f32.bf16 	%f108, %rs28;
	cvt.f32.bf16 	%f109, %rs27;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs29, %rs30}, %r74;
	cvt.f32.bf16 	%f110, %rs30;
	cvt.f32.bf16 	%f111, %rs29;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f112, %f109, %f111;
	add.f32 	%f113, %f108, %f110;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f114, %f17, %f113;
	mul.f32 	%f115, %f17, %f112;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	ld.shared.v4.f32 	{%f116, %f117, %f118, %f119}, [%r14+16];
	mul.f32 	%f120, %f116, %f115;
	mul.f32 	%f121, %f117, %f114;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r84, %f121, %f120;
	.loc	1 58 114                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:58:114
	mov.b32 	{%rs31, %rs32}, %r67;
	cvt.f32.bf16 	%f122, %rs32;
	cvt.f32.bf16 	%f123, %rs31;
	.loc	1 64 117                        // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:64:117
	mov.b32 	{%rs33, %rs34}, %r75;
	cvt.f32.bf16 	%f124, %rs34;
	cvt.f32.bf16 	%f125, %rs33;
	.loc	1 65 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:65:24
	add.f32 	%f126, %f123, %f125;
	add.f32 	%f127, %f122, %f124;
	.loc	1 72 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:72:24
	mul.f32 	%f128, %f17, %f127;
	mul.f32 	%f129, %f17, %f126;
	.loc	1 74 24                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:74:24
	mul.f32 	%f130, %f118, %f129;
	mul.f32 	%f131, %f119, %f128;
	.loc	1 75 53                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:75:53
	cvt.rn.bf16x2.f32 	%r85, %f131, %f130;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd88 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	.loc	1 51 40                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:40
	add.s64 	%rd7, %rd94, 512;
	add.s64 	%rd93, %rd93, 1024;
	setp.lt.u64 	%p46, %rd94, 3584;
	mov.u64 	%rd94, %rd7;
	@%p46 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 51 4                          // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:51:4
	ret;
$L__BB0_2:
	.loc	1 42 68                         // cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py:42:68
	mov.u64 	%rd74, assertMessage_0;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd76, assertFile_0;
	cvta.global.u64 	%rd77, %rd76;
	mov.u64 	%rd78, assertFunc_0;
	cvta.global.u64 	%rd79, %rd78;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd75;
	.param .b64 param1;
	st.param.b64 	[param1], %rd77;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd79;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/qq/cqqtn5lmbaida7dwfjh6w2odpkgpul6mmghucyy4xrgqwstdwrkr.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 116
.b8 110
.b8 53
.b8 108
.b8 109
.b8 98
.b8 97
.b8 105
.b8 100
.b8 97
.b8 55
.b8 100
.b8 119
.b8 102
.b8 106
.b8 104
.b8 54
.b8 119
.b8 50
.b8 111
.b8 100
.b8 112
.b8 107
.b8 103
.b8 112
.b8 117
.b8 108
.b8 54
.b8 109
.b8 109
.b8 103
.b8 104
.b8 117
.b8 99
.b8 121
.b8 121
.b8 52
.b8 120
.b8 114
.b8 103
.b8 113
.b8 119
.b8 115
.b8 116
.b8 100
.b8 119
.b8 114
.b8 107
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 113
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
