//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_per_fused__to_copy_add_mean_pow_3 // -- Begin function triton_per_fused__to_copy_add_mean_pow_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_add_mean_pow_3
.visible .entry triton_per_fused__to_copy_add_mean_pow_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_6,
	.param .u32 triton_per_fused__to_copy_add_mean_pow_3_param_7,
	.param .u32 triton_per_fused__to_copy_add_mean_pow_3_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_mean_pow_3_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<22>;
	.loc	1 18 0                          // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:18:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_per_fused__to_copy_add_mean_pow_3_param_0];
	ld.param.u64 	%rd11, [triton_per_fused__to_copy_add_mean_pow_3_param_1];
$L__tmp0:
	.loc	1 24 28                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:24:28
	mov.u32 	%r13, %ctaid.x;
	ld.param.u64 	%rd12, [triton_per_fused__to_copy_add_mean_pow_3_param_2];
	.loc	1 27 38                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:27:38
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 31;
	ld.param.u64 	%rd13, [triton_per_fused__to_copy_add_mean_pow_3_param_3];
	ld.param.u64 	%rd14, [triton_per_fused__to_copy_add_mean_pow_3_param_4];
	shl.b32 	%r16, %r14, 1;
	ld.param.u64 	%rd15, [triton_per_fused__to_copy_add_mean_pow_3_param_5];
	and.b32  	%r17, %r16, 126;
	ld.param.u64 	%rd16, [triton_per_fused__to_copy_add_mean_pow_3_param_6];
	.loc	1 34 19                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:34:19
	mul.hi.s32 	%r18, %r13, 715827883;
	shr.u32 	%r19, %r18, 31;
	shr.s32 	%r20, %r18, 2;
	add.s32 	%r21, %r20, %r19;
	.loc	1 35 19                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:35:19
	mul.lo.s32 	%r22, %r21, 24;
	sub.s32 	%r23, %r13, %r22;
	.loc	1 36 41                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:36:41
	shl.b32 	%r24, %r13, 7;
	.loc	1 36 37                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:36:37
	or.b32  	%r25, %r17, %r24;
	.loc	1 36 30                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:36:30
	mul.wide.s32 	%rd17, %r25, 4;
	add.s64 	%rd1, %rd10, %rd17;
	.loc	1 36 46                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:36:46
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	ld.global.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 37 30                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:37:30
	mul.wide.s32 	%rd18, %r21, 2;
	add.s64 	%rd2, %rd11, %rd18;
	.loc	1 37 35                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:37:35
	// begin inline asm
	mov.u16 %rs1, 0x0;
	ld.global.L1::evict_last.b16 { %rs1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs2, 0x0;
	ld.global.L1::evict_last.b16 { %rs2 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 38 30                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:38:30
	add.s64 	%rd4, %rd12, %rd18;
	.loc	1 38 35                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:38:35
	// begin inline asm
	mov.u16 %rs3, 0x0;
	ld.global.L1::evict_last.b16 { %rs3 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	ld.global.L1::evict_last.b16 { %rs4 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 39 42                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:39:42
	shl.b32 	%r26, %r23, 7;
	.loc	1 39 38                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:39:38
	or.b32  	%r27, %r17, %r26;
	.loc	1 39 31                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:39:31
	mul.wide.s32 	%rd19, %r27, 2;
	add.s64 	%rd6, %rd13, %rd19;
	.loc	1 39 47                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:39:47
	// begin inline asm
	mov.u32 %r3, 0x0;
	ld.global.L1::evict_last.b32 { %r3 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 31                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:40:31
	add.s64 	%rd7, %rd14, %rd19;
	.loc	1 40 47                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:40:47
	// begin inline asm
	mov.u32 %r4, 0x0;
	ld.global.L1::evict_last.b32 { %r4 }, [ %rd7 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 97 29                         // triton_helpers.py:97:29
	cvt.f32.bf16 	%f1, %rs2;
	setp.ge.f32 	%p5, %f1, 0f00000000;
	selp.b16 	%rs5, 0x0000, %rs2, %p5;
	cvt.f32.bf16 	%f2, %rs5;
	mov.f32 	%f3, 0f00000000;
$L__tmp2:
	.loc	1 44 12                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:44:12
	sub.f32 	%f4, %f3, %f2;
$L__tmp3:
	.loc	2 105 29                        // triton_helpers.py:105:29
	cvt.f32.bf16 	%f5, %rs4;
	setp.le.f32 	%p6, %f5, 0f00000000;
	selp.b16 	%rs6, 0x0000, %rs4, %p6;
	cvt.f32.bf16 	%f6, %rs6;
$L__tmp4:
	.loc	2 102 15                        // triton_helpers.py:102:15
	setp.gt.f32 	%p7, %f4, %f6;
	.loc	2 104 21                        // triton_helpers.py:104:21
	setp.nan.f32 	%p8, %f4, %f4;
	.loc	2 105 29                        // triton_helpers.py:105:29
	selp.f32 	%f7, %f4, %f6, %p7;
	selp.f32 	%f8, %f4, %f7, %p8;
$L__tmp5:
	.loc	1 48 19                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:48:19
	mul.f32 	%f9, %f8, 0f3C010204;
$L__tmp6:
	.loc	2 102 15                        // triton_helpers.py:102:15
	setp.gt.f32 	%p9, %f9, 0f3727C5AC;
	.loc	2 104 21                        // triton_helpers.py:104:21
	setp.nan.f32 	%p10, %f9, %f9;
	.loc	2 105 29                        // triton_helpers.py:105:29
	selp.f32 	%f10, %f9, 0f3727C5AC, %p10;
	selp.f32 	%f11, %f9, %f10, %p9;
$L__tmp7:
	.loc	1 39 86                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:39:86
	mov.b32 	{%rs7, %rs8}, %r3;
	cvt.f32.bf16 	%f12, %rs8;
	cvt.f32.bf16 	%f13, %rs7;
	.loc	1 40 86                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:40:86
	mov.b32 	{%rs9, %rs10}, %r4;
	cvt.f32.bf16 	%f14, %rs10;
	cvt.f32.bf16 	%f15, %rs9;
	.loc	1 41 19                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:41:19
	cvt.rn.f32.s32 	%f16, %r1;
	cvt.rn.f32.s32 	%f17, %r2;
	.loc	1 53 19                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:53:19
	mul.f32 	%f18, %f11, %f17;
	mul.f32 	%f19, %f11, %f16;
	.loc	1 55 20                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:55:20
	fma.rn.f32 	%f20, %f19, %f13, %f15;
	fma.rn.f32 	%f21, %f18, %f12, %f14;
	.loc	1 57 20                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:57:20
	mul.f32 	%f22, %f21, %f21;
$L__tmp8:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f23, %f20, %f20, %f22;
	.loc	3 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f23;
	shfl.sync.bfly.b32	%r29, %r28, 16, 31, -1;
	mov.b32 	%f24, %r29;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	3 286 36                        // standard.py:286:36
	mov.b32 	%r30, %f25;
	shfl.sync.bfly.b32	%r31, %r30, 8, 31, -1;
	mov.b32 	%f26, %r31;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	3 286 36                        // standard.py:286:36
	mov.b32 	%r32, %f27;
	shfl.sync.bfly.b32	%r33, %r32, 4, 31, -1;
	mov.b32 	%f28, %r33;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	3 286 36                        // standard.py:286:36
	mov.b32 	%r34, %f29;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f30, %r35;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	3 286 36                        // standard.py:286:36
	mov.b32 	%r36, %f31;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f32, %r37;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	3 286 36                        // standard.py:286:36
	setp.eq.s32 	%p1, %r15, 0;
	shr.u32 	%r38, %r14, 3;
	and.b32  	%r39, %r38, 4;
	mov.u32 	%r40, global_smem;
	add.s32 	%r5, %r40, %r39;
	mov.b32 	%r6, %f33;
	// begin inline asm
	@%p1 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p2, %r14, 2;
	shl.b32 	%r41, %r14, 2;
	add.s32 	%r8, %r40, %r41;
	// begin inline asm
	@%p2 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r7;
	shfl.sync.bfly.b32	%r42, %r7, 1, 31, -1;
	mov.b32 	%f35, %r42;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 286 36                        // standard.py:286:36
	and.b32  	%r43, %r14, 1;
	setp.eq.b32 	%p11, %r43, 1;
	not.pred 	%p12, %p11;
	and.pred  	%p3, %p2, %p12;
	mov.b32 	%r10, %f36;
	// begin inline asm
	@%p3 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r12, [global_smem];
$L__tmp9:
	.loc	1 60 25                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:60:25
	mul.wide.s32 	%rd20, %r25, 2;
	add.s64 	%rd8, %rd15, %rd20;
	.loc	1 60 48                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:60:48
	cvt.rn.bf16x2.f32 	%r11, %f21, %f20;
	// begin inline asm
	st.global.b32 [ %rd8 + 0 ], { %r11 };
	// end inline asm
	.loc	1 61 25                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:61:25
	mul.wide.s32 	%rd21, %r13, 4;
	add.s64 	%rd9, %rd16, %rd21;
	.loc	1 61 37                         // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:61:37
	and.b32  	%r44, %r14, 63;
	setp.eq.s32 	%p4, %r44, 0;
	// begin inline asm
	@%p4 st.global.b32 [ %rd9 + 0 ], { %r12 };
	// end inline asm
	.loc	1 61 4                          // czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py:61:4
	ret;
$L__tmp10:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/zb/czbzrbq5on2cwjnhnqxnh2wa5zuv62z3gavdrrggg5dimaepn3e2.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 290                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11b DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 98
.b8 122
.b8 114
.b8 98
.b8 113
.b8 53
.b8 111
.b8 110
.b8 50
.b8 99
.b8 119
.b8 106
.b8 110
.b8 104
.b8 110
.b8 113
.b8 120
.b8 110
.b8 104
.b8 50
.b8 119
.b8 97
.b8 53
.b8 122
.b8 117
.b8 118
.b8 54
.b8 50
.b8 122
.b8 51
.b8 103
.b8 97
.b8 118
.b8 100
.b8 114
.b8 114
.b8 103
.b8 103
.b8 103
.b8 53
.b8 100
.b8 105
.b8 109
.b8 97
.b8 101
.b8 112
.b8 110
.b8 51
.b8 101
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 122
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdc:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10c:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
