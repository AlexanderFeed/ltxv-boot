#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [1, 32], warpsPerCTA = [8, 2], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)
#loc1 = loc(unknown)
#loc48 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:27)
#loc71 = loc(callsite(#loc1 at #loc48))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_8(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg6: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4.096000e+03> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x512xbf16, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x512xbf16, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<true> : tensor<8x1xi1, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<4096> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<32128> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<32128> : tensor<8x1xi64, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<0> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<0> : tensor<8x1xi64, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_5 : tensor<8x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_6 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %14 = tt.expand_dims %12 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %15 = tt.expand_dims %13 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc7)
    %16 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>, #blocked> loc(#loc8)
    %17 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc8)
    %18 = tt.addptr %16, %8 : tensor<8x1x!tt.ptr<i64>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc8)
    %19 = tt.addptr %17, %9 : tensor<8x1x!tt.ptr<i64>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc8)
    %20 = tt.load %18, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<i64>, #blocked> loc(#loc9)
    %21 = tt.load %19, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc9)
    %22 = arith.muli %8, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc10)
    %23 = tt.broadcast %22 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc11)
    %24 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc12)
    %25 = tt.broadcast %10 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc13)
    %26 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc14)
    %27 = tt.splat %arg4 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc15)
    %28 = arith.addi %20, %cst_11 : tensor<8x1xi64, #blocked> loc(#loc16)
    %29 = arith.addi %21, %cst_12 : tensor<8x1xi64, #blocked1> loc(#loc16)
    %30 = arith.cmpi slt, %20, %cst_13 : tensor<8x1xi64, #blocked> loc(#loc17)
    %31 = arith.cmpi slt, %21, %cst_14 : tensor<8x1xi64, #blocked1> loc(#loc17)
    %32 = arith.select %30, %28, %20 : tensor<8x1xi1, #blocked>, tensor<8x1xi64, #blocked> loc(#loc18)
    %33 = arith.select %31, %29, %21 : tensor<8x1xi1, #blocked1>, tensor<8x1xi64, #blocked1> loc(#loc18)
    %34 = arith.cmpi sge, %33, %cst_14 : tensor<8x1xi64, #blocked1> loc(#loc19)
    %35 = arith.cmpi slt, %33, %cst_12 : tensor<8x1xi64, #blocked1> loc(#loc20)
    %36 = arith.andi %34, %35 : tensor<8x1xi1, #blocked1> loc(#loc21)
    %37 = arith.xori %11, %cst_9 : tensor<8x1xi1, #blocked1> loc(#loc22)
    %38 = arith.ori %36, %37 : tensor<8x1xi1, #blocked1> loc(#loc23)
    %39 = tt.broadcast %38 : tensor<8x1xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc23)
    %40 = arith.muli %32, %cst_10 : tensor<8x1xi64, #blocked> loc(#loc24)
    %41 = tt.broadcast %40 : tensor<8x1xi64, #blocked> -> tensor<8x512xi64, #blocked> loc(#loc24)
    %42 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc25)
    %43 = scf.for %arg9 = %c0_i32 to %c4096_i32 step %c512_i32 iter_args(%arg10 = %cst) -> (tensor<8x512xf32, #blocked>)  : i32 {
      %52 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked> loc(#loc27)
      %53 = arith.addi %52, %14 : tensor<1x512xi32, #blocked> loc(#loc27)
      %54 = arith.cmpi slt, %53, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc28)
      %55 = tt.broadcast %53 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc11)
      %56 = arith.addi %55, %23 : tensor<8x512xi32, #blocked> loc(#loc11)
      %57 = tt.addptr %24, %56 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc12)
      %58 = tt.broadcast %54 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc13)
      %59 = arith.andi %25, %58 : tensor<8x512xi1, #blocked> loc(#loc13)
      %60 = tt.load %57, %59, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc29)
      %61 = arith.extf %60 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc30)
      %62 = tt.addptr %26, %56 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc14)
      %63 = tt.load %62, %59, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc31)
      %64 = arith.extf %63 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc32)
      %65 = tt.addptr %27, %56 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc15)
      %66 = tt.load %65, %59, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc33)
      %67 = arith.extf %66 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc34)
      tt.assert %39, "index out of bounds: 0 <= tmp4 < 32128" : tensor<8x512xi1, #blocked1> loc(#loc35)
      %68 = arith.extsi %53 : tensor<1x512xi32, #blocked> to tensor<1x512xi64, #blocked> loc(#loc36)
      %69 = tt.broadcast %68 : tensor<1x512xi64, #blocked> -> tensor<8x512xi64, #blocked> loc(#loc36)
      %70 = arith.addi %69, %41 : tensor<8x512xi64, #blocked> loc(#loc36)
      %71 = tt.addptr %42, %70 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi64, #blocked> loc(#loc25)
      %72 = tt.load %71, %59, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc37)
      %73 = arith.extf %72 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc38)
      %74 = arith.addf %73, %61 : tensor<8x512xf32, #blocked> loc(#loc39)
      %75 = arith.addf %74, %64 : tensor<8x512xf32, #blocked> loc(#loc40)
      %76 = arith.addf %75, %67 : tensor<8x512xf32, #blocked> loc(#loc41)
      %77 = arith.mulf %76, %76 : tensor<8x512xf32, #blocked> loc(#loc42)
      %78 = arith.addf %arg10, %77 : tensor<8x512xf32, #blocked> loc(#loc43)
      %79 = arith.select %59, %78, %arg10 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc44)
      %80 = arith.truncf %76 : tensor<8x512xf32, #blocked> to tensor<8x512xbf16, #blocked> loc(#loc45)
      tt.store %57, %80, %59 : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc45)
      scf.yield %79 : tensor<8x512xf32, #blocked> loc(#loc46)
    } loc(#loc26)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc48)), %arg10: f32 loc(callsite(#loc1 at #loc48))):
      %52 = arith.addf %arg9, %arg10 : f32 loc(#loc73)
      tt.reduce.return %52 : f32 loc(#loc70)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc70)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc50)
    %46 = tt.splat %arg5 : !tt.ptr<bf16> -> tensor<1x512x!tt.ptr<bf16>, #blocked1> loc(#loc51)
    %47 = arith.divf %45, %cst_0 : tensor<8x1xf32, #blocked> loc(#loc52)
    %48 = arith.addf %47, %cst_1 : tensor<8x1xf32, #blocked> loc(#loc53)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc54)
    %50 = tt.broadcast %49 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc55)
    %51 = tt.splat %arg6 : !tt.ptr<bf16> -> tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc56)
    scf.for %arg9 = %c0_i32 to %c4096_i32 step %c512_i32  : i32 {
      %52 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked> loc(#loc58)
      %53 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc58)
      %54 = arith.addi %52, %14 : tensor<1x512xi32, #blocked> loc(#loc58)
      %55 = arith.addi %53, %15 : tensor<1x512xi32, #blocked1> loc(#loc58)
      %56 = arith.cmpi slt, %54, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc59)
      %57 = arith.cmpi slt, %55, %cst_3 : tensor<1x512xi32, #blocked1> loc(#loc59)
      %58 = tt.addptr %46, %55 : tensor<1x512x!tt.ptr<bf16>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc51)
      %59 = tt.load %58, %57, %cst_2 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<bf16>, #blocked1> loc(#loc60)
      %60 = arith.extf %59 : tensor<1x512xbf16, #blocked1> to tensor<1x512xf32, #blocked1> loc(#loc61)
      %61 = tt.broadcast %54 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc62)
      %62 = arith.addi %61, %23 : tensor<8x512xi32, #blocked> loc(#loc62)
      %63 = tt.addptr %24, %62 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc63)
      %64 = tt.broadcast %56 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc64)
      %65 = arith.andi %25, %64 : tensor<8x512xi1, #blocked> loc(#loc64)
      %66 = tt.load %63, %65, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc65)
      %67 = arith.extf %66 : tensor<8x512xbf16, #blocked> to tensor<8x512xf32, #blocked> loc(#loc66)
      %68 = arith.mulf %67, %50 : tensor<8x512xf32, #blocked> loc(#loc55)
      %69 = ttg.convert_layout %60 : tensor<1x512xf32, #blocked1> -> tensor<1x512xf32, #blocked> loc(#loc67)
      %70 = tt.broadcast %69 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc67)
      %71 = arith.mulf %70, %68 : tensor<8x512xf32, #blocked> loc(#loc67)
      %72 = tt.addptr %51, %62 : tensor<8x512x!tt.ptr<bf16>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc56)
      %73 = arith.truncf %71 : tensor<8x512xf32, #blocked> to tensor<8x512xbf16, #blocked> loc(#loc68)
      tt.store %72, %73, %65 : tensor<8x512x!tt.ptr<bf16>, #blocked> loc(#loc68)
    } loc(#loc57)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:30)
#loc9 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":29:35)
#loc10 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:50)
#loc11 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:45)
#loc12 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:38)
#loc13 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:63)
#loc14 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:34)
#loc15 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:35)
#loc16 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":41:22)
#loc17 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":42:22)
#loc18 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":43:36)
#loc19 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:32)
#loc20 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:48)
#loc21 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:41)
#loc22 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:60)
#loc23 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:58)
#loc24 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:46)
#loc25 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:34)
#loc26 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":31:40)
#loc27 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":32:31)
#loc28 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":33:29)
#loc29 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:55)
#loc30 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":37:117)
#loc31 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:51)
#loc32 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":38:113)
#loc33 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:52)
#loc34 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":39:114)
#loc35 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":44:68)
#loc36 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:41)
#loc37 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:53)
#loc38 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":45:115)
#loc39 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":46:22)
#loc40 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":47:23)
#loc41 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":48:24)
#loc42 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":50:24)
#loc43 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":52:25)
#loc44 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":53:50)
#loc45 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:56)
#loc46 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":54:8)
#loc47 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc50 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":55:30)
#loc51 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:35)
#loc52 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":66:25)
#loc53 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":68:24)
#loc54 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":69:32)
#loc55 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":70:24)
#loc56 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:29)
#loc57 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:40)
#loc58 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":57:31)
#loc59 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":58:29)
#loc60 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:42)
#loc61 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":62:95)
#loc62 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:46)
#loc63 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:39)
#loc64 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:64)
#loc65 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:56)
#loc66 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":63:118)
#loc67 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":72:24)
#loc68 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":73:53)
#loc69 = loc("/tmp/torchinductor_root/uw/cuwqweqombf22k2ntkofgsbv57sj5vvdcybuqrcnhbhopfhqsq64.py":56:4)
#loc70 = loc(callsite(#loc47 at #loc48))
#loc72 = loc(callsite(#loc49 at #loc47))
#loc73 = loc(callsite(#loc72 at #loc48))
