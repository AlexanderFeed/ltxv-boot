//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_mm               // -- Begin function triton_mm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_mm
.visible .entry triton_mm(
	.param .u64 .ptr .global .align 1 triton_mm_param_0,
	.param .u64 .ptr .global .align 1 triton_mm_param_1,
	.param .u64 .ptr .global .align 1 triton_mm_param_2,
	.param .u64 .ptr .global .align 1 triton_mm_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<340>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<66>;
	.loc	1 17 0                          // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:17:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_mm_param_2];
	ld.param.u64 	%rd23, [triton_mm_param_0];
	ld.param.u64 	%rd24, [triton_mm_param_1];
$L__tmp0:
	.loc	1 40 24                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:40:24
	mov.u32 	%r39, %ctaid.x;
	.loc	1 46 22                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:46:22
	mul.hi.s32 	%r40, %r39, 1717986919;
	shr.u32 	%r41, %r40, 31;
	shr.s32 	%r42, %r40, 9;
	add.s32 	%r43, %r42, %r41;
	.loc	1 47 41                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:47:41
	shl.b32 	%r44, %r43, 3;
	.loc	1 47 30                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:47:30
	sub.s32 	%r45, 4, %r44;
	.loc	1 47 50                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:47:50
	min.s32 	%r46, %r45, 8;
	.loc	1 48 40                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:48:40
	rem.s32 	%r47, %r39, %r46;
	.loc	1 48 34                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:48:34
	add.s32 	%r48, %r47, %r44;
	.loc	1 49 19                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:49:19
	mul.lo.s32 	%r49, %r43, 1280;
	sub.s32 	%r50, %r39, %r49;
	.loc	1 49 30                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:49:30
	div.s32 	%r51, %r50, %r46;
	.loc	1 51 17                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:51:17
	shl.b32 	%r1, %r48, 7;
	.loc	1 51 40                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:51:40
	mov.u32 	%r2, %tid.x;
	shr.u32 	%r52, %r2, 2;
	and.b32  	%r3, %r52, 8;
	and.b32  	%r53, %r52, 16;
	and.b32  	%r4, %r2, 128;
	shr.u32 	%r54, %r4, 2;
	bfe.u32 	%r55, %r2, 2, 5;
	or.b32  	%r56, %r55, %r54;
	.loc	1 51 27                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:51:27
	or.b32  	%r57, %r1, %r56;
	or.b32  	%r58, %r57, 64;
	.loc	1 52 17                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:52:17
	shl.b32 	%r5, %r51, 6;
	.loc	1 52 40                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:52:40
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r59, %r6, 24;
	.loc	1 52 27                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:52:27
	or.b32  	%r60, %r5, %r56;
	.loc	1 54 57                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:54:57
	bfe.s32 	%r61, %r48, 24, 1;
	shr.u32 	%r62, %r61, 23;
	add.s32 	%r63, %r57, %r62;
	and.b32  	%r64, %r63, 1048064;
	sub.s32 	%r65, %r57, %r64;
	add.s32 	%r66, %r58, %r62;
	and.b32  	%r67, %r66, 1048064;
	sub.s32 	%r68, %r58, %r67;
	.loc	1 58 57                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:58:57
	mul.hi.s32 	%r69, %r60, 1717986919;
	shr.u32 	%r70, %r69, 31;
	shr.u32 	%r71, %r69, 12;
	add.s32 	%r72, %r71, %r70;
	mul.lo.s32 	%r73, %r72, 10240;
	sub.s32 	%r74, %r60, %r73;
	.loc	1 71 30                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:71:30
	shl.b32 	%r75, %r65, 12;
	shl.b32 	%r76, %r68, 12;
	.loc	1 77 55                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:55
	shl.b32 	%r77, %r74, 12;
	.loc	1 71 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:71:25
	or.b32  	%r78, %r75, %r59;
	or.b32  	%r79, %r76, %r59;
	.loc	1 72 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:25
	mul.wide.s32 	%rd25, %r78, 2;
	add.s64 	%rd13, %rd23, %rd25;
	mul.wide.s32 	%rd26, %r79, 2;
	add.s64 	%rd14, %rd23, %rd26;
	.loc	1 72 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:20
	xor.b32  	%r80, %r6, %r2;
	and.b32  	%r81, %r80, 24;
	shl.b32 	%r82, %r56, 5;
	or.b32  	%r7, %r82, %r81;
	shl.b32 	%r83, %r7, 1;
	mov.u32 	%r84, global_smem;
	add.s32 	%r19, %r84, %r83;
	add.s32 	%r21, %r19, 4096;
	mov.b32 	%r20, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r19 + 0 ], [ %rd13 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r21 + 0 ], [ %rd14 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 50                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:50
	or.b32  	%r85, %r77, %r59;
	.loc	1 77 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:25
	mul.wide.s32 	%rd27, %r85, 2;
	add.s64 	%rd15, %rd24, %rd27;
	.loc	1 77 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:20
	add.s32 	%r23, %r19, 24576;
	// begin inline asm
	cp.async.cg.shared.global [ %r23 + 0 ], [ %rd15 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:25
	cvt.s64.s32 	%rd28, %r75;
	cvt.u64.u32 	%rd29, %r59;
	or.b64  	%rd30, %rd28, %rd29;
	shl.b64 	%rd31, %rd30, 1;
	add.s64 	%rd32, %rd23, %rd31;
	add.s64 	%rd16, %rd32, 64;
	cvt.s64.s32 	%rd33, %r76;
	or.b64  	%rd34, %rd33, %rd29;
	shl.b64 	%rd35, %rd34, 1;
	add.s64 	%rd36, %rd23, %rd35;
	add.s64 	%rd17, %rd36, 64;
	.loc	1 72 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:20
	bar.sync 	0;
	add.s32 	%r25, %r19, 8192;
	add.s32 	%r27, %r19, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r25 + 0 ], [ %rd16 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r27 + 0 ], [ %rd17 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:25
	cvt.s64.s32 	%rd37, %r77;
	or.b64  	%rd38, %rd37, %rd29;
	shl.b64 	%rd39, %rd38, 1;
	add.s64 	%rd40, %rd24, %rd39;
	add.s64 	%rd18, %rd40, 64;
	.loc	1 77 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:20
	add.s32 	%r29, %r19, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r29 + 0 ], [ %rd18 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 72 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:25
	add.s64 	%rd19, %rd32, 128;
	add.s64 	%rd20, %rd36, 128;
	.loc	1 72 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:20
	bar.sync 	0;
	add.s32 	%r31, %r19, 16384;
	add.s32 	%r33, %r19, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd19 + 0 ], 0x10, %r20;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd20 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:25
	add.s64 	%rd21, %rd40, 128;
	.loc	1 77 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:20
	add.s32 	%r35, %r19, 32768;
	// begin inline asm
	cp.async.cg.shared.global [ %r35 + 0 ], [ %rd21 + 0 ], 0x10, %r20;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r86, %r2, 2;
	and.b32  	%r87, %r86, 8;
	and.b32  	%r88, %r86, 16;
	and.b32  	%r89, %r86, 24;
	and.b32  	%r90, %r2, 7;
	and.b32  	%r91, %r2, 15;
	shr.u32 	%r92, %r2, 1;
	and.b32  	%r93, %r92, 8;
	xor.b32  	%r9, %r89, %r93;
	or.b32  	%r94, %r53, %r91;
	or.b32  	%r95, %r94, %r54;
	shl.b32 	%r10, %r95, 5;
	or.b32  	%r11, %r10, %r9;
	or.b32  	%r96, %r87, 16;
	or.b32  	%r97, %r93, %r88;
	xor.b32  	%r12, %r97, %r96;
	or.b32  	%r13, %r12, %r10;
	xor.b32  	%r98, %r86, %r2;
	and.b32  	%r99, %r98, 24;
	or.b32  	%r100, %r3, %r90;
	shl.b32 	%r101, %r100, 5;
	or.b32  	%r14, %r99, %r101;
	.loc	1 64 26                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:64:26
	and.b32  	%r102, %r2, 3;
	mul.wide.u32 	%rd41, %r102, 16;
	mul.wide.s32 	%rd42, %r77, 2;
	or.b64  	%rd43, %rd41, %rd42;
	add.s64 	%rd44, %rd43, %rd24;
	add.s64 	%rd64, %rd44, 192;
	mul.wide.s32 	%rd45, %r76, 2;
	or.b64  	%rd46, %rd41, %rd45;
	add.s64 	%rd47, %rd46, %rd23;
	add.s64 	%rd63, %rd47, 192;
	mul.wide.s32 	%rd48, %r75, 2;
	or.b64  	%rd49, %rd41, %rd48;
	add.s64 	%rd50, %rd49, %rd23;
	add.s64 	%rd62, %rd50, 192;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r339, 2;
	mov.b32 	%r338, -1;
	mov.b64 	%rd65, 0;
	shl.b32 	%r249, %r11, 1;
	shl.b32 	%r250, %r13, 1;
	shl.b32 	%r259, %r14, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p1, %rd65, 125;
	add.s32 	%r245, %r338, 1;
	setp.lt.s32 	%p2, %r245, 3;
	selp.b32 	%r338, %r245, 0, %p2;
	.loc	1 72 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:20
	cp.async.wait_group 4;
	bar.sync 	0;
	shl.b32 	%r246, %r338, 13;
	add.s32 	%r248, %r84, %r246;
	add.s32 	%r107, %r248, %r249;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r143, %r144, %r145, %r146}, [%r107];
	// end inline asm
	add.s32 	%r112, %r248, %r250;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r191, %r192, %r193, %r194}, [%r112];
	// end inline asm
	add.s32 	%r251, %r10, %r9;
	shl.b32 	%r252, %r251, 1;
	add.s32 	%r253, %r248, %r252;
	add.s32 	%r117, %r253, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r167, %r168, %r169, %r170}, [%r117];
	// end inline asm
	add.s32 	%r254, %r10, %r12;
	shl.b32 	%r255, %r254, 1;
	add.s32 	%r256, %r248, %r255;
	add.s32 	%r122, %r256, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r215, %r216, %r217, %r218}, [%r122];
	// end inline asm
	.loc	1 77 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:20
	shl.b32 	%r257, %r338, 12;
	add.s32 	%r258, %r84, %r257;
	add.s32 	%r260, %r258, %r259;
	add.s32 	%r127, %r260, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r147, %r148, %r195, %r196}, [%r127];
	// end inline asm
	add.s32 	%r132, %r260, 25600;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r153, %r154, %r201, %r202}, [%r132];
	// end inline asm
	add.s32 	%r137, %r260, 26624;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r159, %r160, %r207, %r208}, [%r137];
	// end inline asm
	add.s32 	%r142, %r260, 27648;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r213, %r214}, [%r142];
	// end inline asm
	.loc	1 78 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:78:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r143, %r144, %r145, %r146 }, { %r147, %r148 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r143, %r144, %r145, %r146 }, { %r153, %r154 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r143, %r144, %r145, %r146 }, { %r159, %r160 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r143, %r144, %r145, %r146 }, { %r165, %r166 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r167, %r168, %r169, %r170 }, { %r147, %r148 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r167, %r168, %r169, %r170 }, { %r153, %r154 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r167, %r168, %r169, %r170 }, { %r159, %r160 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r167, %r168, %r169, %r170 }, { %r165, %r166 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r191, %r192, %r193, %r194 }, { %r195, %r196 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r191, %r192, %r193, %r194 }, { %r201, %r202 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r191, %r192, %r193, %r194 }, { %r207, %r208 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r191, %r192, %r193, %r194 }, { %r213, %r214 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r215, %r216, %r217, %r218 }, { %r195, %r196 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r215, %r216, %r217, %r218 }, { %r201, %r202 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r215, %r216, %r217, %r218 }, { %r207, %r208 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r215, %r216, %r217, %r218 }, { %r213, %r214 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 64 26                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:64:26
	add.s32 	%r261, %r339, 1;
	setp.lt.s32 	%p3, %r261, 3;
	selp.b32 	%r339, %r261, 0, %p3;
	.loc	1 72 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:72:20
	shl.b32 	%r262, %r339, 13;
	add.s32 	%r263, %r84, %r262;
	bar.sync 	0;
	add.s32 	%r239, %r263, %r83;
	add.s32 	%r241, %r239, 4096;
	selp.b32 	%r240, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r239 + 0 ], [ %rd62 + 0 ], 0x10, %r240;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd63 + 0 ], 0x10, %r240;
	// end inline asm
	cp.async.commit_group;
	.loc	1 77 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:77:20
	shl.b32 	%r265, %r339, 12;
	add.s32 	%r243, %r23, %r265;
	// begin inline asm
	cp.async.cg.shared.global [ %r243 + 0 ], [ %rd64 + 0 ], 0x10, %r240;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 26                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:64:26
	add.s64 	%rd65, %rd65, 1;
	add.s64 	%rd64, %rd64, 64;
	add.s64 	%rd63, %rd63, 64;
	add.s64 	%rd62, %rd62, 64;
	setp.ne.s64 	%p4, %rd65, 128;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:52:40
	and.b32  	%r298, %r6, 56;
	.loc	1 52 27                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:52:27
	or.b32  	%r299, %r5, %r298;
	.loc	1 51 40                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:51:40
	bfe.u32 	%r300, %r2, 3, 5;
	.loc	1 51 27                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:51:27
	or.b32  	%r301, %r300, %r1;
	or.b32  	%r302, %r301, 96;
	or.b32  	%r303, %r301, 64;
	or.b32  	%r304, %r301, 32;
	.loc	1 64 26                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:64:26
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 85 20                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:85:20
	setp.lt.s32 	%p25, %r301, 512;
	setp.lt.s32 	%p26, %r304, 512;
	setp.lt.s32 	%p27, %r303, 512;
	setp.lt.s32 	%p28, %r302, 512;
	.loc	1 85 34                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:85:34
	setp.lt.s32 	%p29, %r299, 10240;
	.loc	1 85 26                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:85:26
	and.pred  	%p21, %p25, %p29;
	and.pred  	%p22, %p26, %p29;
	and.pred  	%p23, %p27, %p29;
	and.pred  	%p24, %p28, %p29;
	.loc	1 88 27                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:88:27
	mad.lo.s32 	%r305, %r301, 10240, %r299;
	add.s32 	%r306, %r305, 327680;
	add.s32 	%r307, %r305, 655360;
	.loc	1 88 21                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:88:21
	add.s32 	%r308, %r305, 983040;
	.loc	1 89 25                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:89:25
	mul.wide.s32 	%rd58, %r305, 2;
	add.s64 	%rd54, %rd12, %rd58;
	mul.wide.s32 	%rd59, %r306, 2;
	add.s64 	%rd55, %rd12, %rd59;
	mul.wide.s32 	%rd60, %r307, 2;
	add.s64 	%rd56, %rd12, %rd60;
	mul.wide.s32 	%rd61, %r308, 2;
	add.s64 	%rd57, %rd12, %rd61;
	.loc	1 89 67                         // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:89:67
	cvt.rn.bf16.f32 	%rs1, %f194;
	cvt.rn.bf16.f32 	%rs2, %f195;
	cvt.rn.bf16.f32 	%rs3, %f196;
	cvt.rn.bf16.f32 	%rs4, %f197;
	cvt.rn.bf16.f32 	%rs5, %f198;
	cvt.rn.bf16.f32 	%rs6, %f199;
	cvt.rn.bf16.f32 	%rs7, %f200;
	cvt.rn.bf16.f32 	%rs8, %f201;
	cvt.rn.bf16.f32 	%rs9, %f202;
	cvt.rn.bf16.f32 	%rs10, %f203;
	cvt.rn.bf16.f32 	%rs11, %f204;
	cvt.rn.bf16.f32 	%rs12, %f205;
	cvt.rn.bf16.f32 	%rs13, %f206;
	cvt.rn.bf16.f32 	%rs14, %f207;
	cvt.rn.bf16.f32 	%rs15, %f208;
	cvt.rn.bf16.f32 	%rs16, %f209;
	cvt.rn.bf16.f32 	%rs17, %f210;
	cvt.rn.bf16.f32 	%rs18, %f211;
	cvt.rn.bf16.f32 	%rs19, %f212;
	cvt.rn.bf16.f32 	%rs20, %f213;
	cvt.rn.bf16.f32 	%rs21, %f214;
	cvt.rn.bf16.f32 	%rs22, %f215;
	cvt.rn.bf16.f32 	%rs23, %f216;
	cvt.rn.bf16.f32 	%rs24, %f217;
	cvt.rn.bf16.f32 	%rs25, %f218;
	cvt.rn.bf16.f32 	%rs26, %f219;
	cvt.rn.bf16.f32 	%rs27, %f220;
	cvt.rn.bf16.f32 	%rs28, %f221;
	cvt.rn.bf16.f32 	%rs29, %f222;
	cvt.rn.bf16.f32 	%rs30, %f223;
	cvt.rn.bf16.f32 	%rs31, %f224;
	cvt.rn.bf16.f32 	%rs32, %f225;
	shl.b32 	%r309, %r2, 1;
	and.b32  	%r310, %r309, 6;
	shl.b32 	%r311, %r2, 4;
	and.b32  	%r312, %r311, 1472;
	or.b32  	%r313, %r312, %r310;
	shl.b32 	%r314, %r4, 4;
	or.b32  	%r315, %r313, %r314;
	or.b32  	%r316, %r315, %r3;
	and.b32  	%r317, %r6, 2040;
	shr.u32 	%r318, %r315, 2;
	and.b32  	%r319, %r318, 1020;
	add.s32 	%r321, %r84, %r319;
	shl.b32 	%r322, %r316, 1;
	add.s32 	%r266, %r321, %r322;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r323, %r315, 512;
	shr.u32 	%r324, %r323, 2;
	and.b32  	%r325, %r324, 1008;
	add.s32 	%r326, %r84, %r325;
	add.s32 	%r327, %r326, %r322;
	add.s32 	%r267, %r327, 1024;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r268, %r266, 32;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r269, %r327, 1056;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r270, %r266, 64;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r271, %r327, 1088;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r272, %r266, 96;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r272 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r273, %r327, 1120;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r273 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r328, %r2, 248;
	shl.b32 	%r329, %r328, 1;
	add.s32 	%r330, %r84, %r329;
	shl.b32 	%r331, %r317, 1;
	add.s32 	%r332, %r330, %r331;
	ld.shared.v4.u32 	{%r282, %r283, %r284, %r285}, [%r332];
	or.b32  	%r333, %r317, 2048;
	shr.u32 	%r334, %r333, 2;
	and.b32  	%r335, %r334, 1008;
	add.s32 	%r336, %r84, %r335;
	add.s32 	%r337, %r336, %r331;
	ld.shared.v4.u32 	{%r286, %r287, %r288, %r289}, [%r337+4096];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r266 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r267 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r268 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r269 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r270 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r271 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r272 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v2.b16 [ %r273 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r290, %r291, %r292, %r293}, [%r332];
	ld.shared.v4.u32 	{%r294, %r295, %r296, %r297}, [%r337+4096];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd54 + 0 ], { %r282, %r283, %r284, %r285 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd55 + 0 ], { %r286, %r287, %r288, %r289 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd56 + 0 ], { %r290, %r291, %r292, %r293 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd57 + 0 ], { %r294, %r295, %r296, %r297 };
	// end inline asm
	.loc	1 89 4                          // ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py:89:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/tj/ctjmxdxoxrqplhwfjux5hqigdo65am36geiyathoohx7og53vj6d.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 106
.b8 109
.b8 120
.b8 100
.b8 120
.b8 111
.b8 120
.b8 114
.b8 113
.b8 112
.b8 108
.b8 104
.b8 119
.b8 102
.b8 106
.b8 117
.b8 120
.b8 53
.b8 104
.b8 113
.b8 105
.b8 103
.b8 100
.b8 111
.b8 54
.b8 53
.b8 97
.b8 109
.b8 51
.b8 54
.b8 103
.b8 101
.b8 105
.b8 121
.b8 97
.b8 116
.b8 104
.b8 111
.b8 111
.b8 104
.b8 120
.b8 55
.b8 111
.b8 103
.b8 53
.b8 51
.b8 118
.b8 106
.b8 54
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 116
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
