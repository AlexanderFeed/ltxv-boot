#blocked = #ttg.blocked<{sizePerThread = [1, 16], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)
#loc1 = loc(unknown)
#loc44 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:40)
#loc50 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:40)
#loc93 = loc(callsite(#loc1 at #loc44))
#loc99 = loc(callsite(#loc1 at #loc50))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_amax_amin_cat_clamp_mul_reciprocal_7(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg4: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0x7F800000> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<5.000000e-01> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4.471500e-02> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.797884583> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1.000000e+00> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0.00787401571> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<1.000000e+00> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<9.99999974E-6> : tensor<2x1xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-1.270000e+02> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<1.270000e+02> : tensor<2x16384xf32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<2x16384xbf16, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<4112> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<4112> : tensor<2x1xi32, #blocked1> loc(#loc1)
    %cst_15 = arith.constant dense<15360> : tensor<1x16384xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<3072> : tensor<1x16384xi64, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<3072> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<12288> : tensor<2x1xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<-3072> : tensor<1x16384xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<15360> : tensor<2x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c2_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<2x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<2x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<2x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<2x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_13 : tensor<2x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_14 : tensor<2x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 16384 : i32, start = 0 : i32} : tensor<16384xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<16384xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16384xi32, #blocked> loc(#loc7)
    %14 = arith.cmpi slt, %13, %cst_15 : tensor<1x16384xi32, #blocked> loc(#loc8)
    %15 = arith.extsi %13 : tensor<1x16384xi32, #blocked> to tensor<1x16384xi64, #blocked> loc(#loc9)
    %16 = arith.cmpi slt, %15, %cst_16 : tensor<1x16384xi64, #blocked> loc(#loc9)
    %17 = arith.muli %8, %cst_17 : tensor<2x1xi32, #blocked> loc(#loc10)
    %18 = tt.broadcast %17 : tensor<2x1xi32, #blocked> -> tensor<2x16384xi32, #blocked> loc(#loc11)
    %19 = tt.broadcast %13 : tensor<1x16384xi32, #blocked> -> tensor<2x16384xi32, #blocked> loc(#loc11)
    %20 = arith.addi %18, %19 : tensor<2x16384xi32, #blocked> loc(#loc11)
    %21 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<2x16384x!tt.ptr<bf16>, #blocked> loc(#loc12)
    %22 = tt.addptr %21, %20 : tensor<2x16384x!tt.ptr<bf16>, #blocked>, tensor<2x16384xi32, #blocked> loc(#loc12)
    %23 = tt.broadcast %14 : tensor<1x16384xi1, #blocked> -> tensor<2x16384xi1, #blocked> loc(#loc13)
    %24 = tt.broadcast %10 : tensor<2x1xi1, #blocked> -> tensor<2x16384xi1, #blocked> loc(#loc13)
    %25 = arith.andi %23, %24 : tensor<2x16384xi1, #blocked> loc(#loc13)
    %26 = tt.broadcast %16 : tensor<1x16384xi1, #blocked> -> tensor<2x16384xi1, #blocked> loc(#loc14)
    %27 = arith.andi %25, %26 : tensor<2x16384xi1, #blocked> loc(#loc14)
    %28 = tt.load %22, %27, %cst_12 evictionPolicy = evict_last : tensor<2x16384x!tt.ptr<bf16>, #blocked> loc(#loc15)
    %29 = arith.extf %28 : tensor<2x16384xbf16, #blocked> to tensor<2x16384xf32, #blocked> loc(#loc16)
    %30 = arith.cmpi sge, %15, %cst_16 : tensor<1x16384xi64, #blocked> loc(#loc17)
    %31 = arith.muli %8, %cst_18 : tensor<2x1xi32, #blocked> loc(#loc18)
    %32 = arith.addi %13, %cst_19 : tensor<1x16384xi32, #blocked> loc(#loc19)
    %33 = tt.broadcast %31 : tensor<2x1xi32, #blocked> -> tensor<2x16384xi32, #blocked> loc(#loc20)
    %34 = tt.broadcast %32 : tensor<1x16384xi32, #blocked> -> tensor<2x16384xi32, #blocked> loc(#loc20)
    %35 = arith.addi %33, %34 : tensor<2x16384xi32, #blocked> loc(#loc20)
    %36 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x16384x!tt.ptr<f32>, #blocked> loc(#loc21)
    %37 = tt.addptr %36, %35 : tensor<2x16384x!tt.ptr<f32>, #blocked>, tensor<2x16384xi32, #blocked> loc(#loc21)
    %38 = tt.broadcast %30 : tensor<1x16384xi1, #blocked> -> tensor<2x16384xi1, #blocked> loc(#loc22)
    %39 = arith.andi %25, %38 : tensor<2x16384xi1, #blocked> loc(#loc22)
    %40 = tt.load %37, %39, %cst_1 evictionPolicy = evict_last : tensor<2x16384x!tt.ptr<f32>, #blocked> loc(#loc23)
    %41 = arith.mulf %40, %cst_2 : tensor<2x16384xf32, #blocked> loc(#loc24)
    %42 = arith.mulf %40, %40 : tensor<2x16384xf32, #blocked> loc(#loc25)
    %43 = arith.mulf %42, %40 : tensor<2x16384xf32, #blocked> loc(#loc26)
    %44 = arith.mulf %43, %cst_3 : tensor<2x16384xf32, #blocked> loc(#loc27)
    %45 = arith.addf %40, %44 : tensor<2x16384xf32, #blocked> loc(#loc28)
    %46 = arith.mulf %45, %cst_4 : tensor<2x16384xf32, #blocked> loc(#loc29)
    %47 = tt.extern_elementwise %46 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<2x16384xf32, #blocked>) -> tensor<2x16384xf32, #blocked> loc(#loc30)
    %48 = arith.addf %47, %cst_5 : tensor<2x16384xf32, #blocked> loc(#loc31)
    %49 = arith.mulf %41, %48 : tensor<2x16384xf32, #blocked> loc(#loc32)
    %50 = arith.select %38, %49, %cst_1 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc33)
    %51 = arith.select %26, %29, %50 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc34)
    %52 = arith.cmpf olt, %cst, %51 : tensor<2x16384xf32, #blocked> loc(#loc88)
    %53 = arith.select %52, %cst, %51 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc89)
    %54 = arith.select %25, %53, %cst : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc38)
    %55 = arith.cmpf ogt, %cst_0, %51 : tensor<2x16384xf32, #blocked> loc(#loc90)
    %56 = arith.select %55, %cst_0, %51 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc91)
    %57 = arith.select %25, %56, %cst_0 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc42)
    %58 = "tt.reduce"(%54) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc44)), %arg8: f32 loc(callsite(#loc1 at #loc44))):
      %122 = arith.cmpf olt, %arg7, %arg8 : f32 loc(#loc128)
      %123 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc129)
      %124 = arith.ori %122, %123 : i1 loc(#loc130)
      %125 = arith.select %124, %arg7, %arg8 : f32 loc(#loc131)
      tt.reduce.return %125 : f32 loc(#loc92)
    }) : (tensor<2x16384xf32, #blocked>) -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc92)
    %59 = ttg.convert_layout %58 : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc47)
    %60 = tt.expand_dims %59 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xf32, #blocked1> loc(#loc48)
    %61 = tt.expand_dims %58 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xf32, #blocked> loc(#loc48)
    %62 = "tt.reduce"(%57) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc50)), %arg8: f32 loc(callsite(#loc1 at #loc50))):
      %122 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc132)
      %123 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc133)
      %124 = arith.ori %122, %123 : i1 loc(#loc134)
      %125 = arith.select %124, %arg7, %arg8 : f32 loc(#loc135)
      tt.reduce.return %125 : f32 loc(#loc98)
    }) : (tensor<2x16384xf32, #blocked>) -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc98)
    %63 = ttg.convert_layout %62 : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc53)
    %64 = tt.expand_dims %63 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1xf32, #blocked1> loc(#loc54)
    %65 = tt.expand_dims %62 {axis = 1 : i32} : tensor<2xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<2x1xf32, #blocked> loc(#loc54)
    %66 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc55)
    %67 = tt.addptr %66, %9 : tensor<2x1x!tt.ptr<bf16>, #blocked1>, tensor<2x1xi32, #blocked1> loc(#loc55)
    %68 = arith.truncf %60 : tensor<2x1xf32, #blocked1> to tensor<2x1xbf16, #blocked1> loc(#loc47)
    tt.store %67, %68, %11 : tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc47)
    %69 = tt.splat %arg3 : !tt.ptr<bf16> -> tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc56)
    %70 = tt.addptr %69, %9 : tensor<2x1x!tt.ptr<bf16>, #blocked1>, tensor<2x1xi32, #blocked1> loc(#loc56)
    %71 = arith.truncf %64 : tensor<2x1xf32, #blocked1> to tensor<2x1xbf16, #blocked1> loc(#loc53)
    tt.store %70, %71, %11 : tensor<2x1x!tt.ptr<bf16>, #blocked1> loc(#loc53)
    %72 = tt.load %22, %27, %cst_12 evictionPolicy = evict_last : tensor<2x16384x!tt.ptr<bf16>, #blocked> loc(#loc57)
    %73 = arith.extf %72 : tensor<2x16384xbf16, #blocked> to tensor<2x16384xf32, #blocked> loc(#loc58)
    %74 = tt.load %37, %39, %cst_1 evictionPolicy = evict_last : tensor<2x16384x!tt.ptr<f32>, #blocked> loc(#loc59)
    %75 = arith.mulf %74, %cst_2 : tensor<2x16384xf32, #blocked> loc(#loc60)
    %76 = arith.mulf %74, %74 : tensor<2x16384xf32, #blocked> loc(#loc61)
    %77 = arith.mulf %76, %74 : tensor<2x16384xf32, #blocked> loc(#loc62)
    %78 = arith.mulf %77, %cst_3 : tensor<2x16384xf32, #blocked> loc(#loc63)
    %79 = arith.addf %74, %78 : tensor<2x16384xf32, #blocked> loc(#loc64)
    %80 = arith.mulf %79, %cst_4 : tensor<2x16384xf32, #blocked> loc(#loc65)
    %81 = tt.extern_elementwise %80 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<2x16384xf32, #blocked>) -> tensor<2x16384xf32, #blocked> loc(#loc66)
    %82 = arith.addf %81, %cst_5 : tensor<2x16384xf32, #blocked> loc(#loc67)
    %83 = arith.mulf %75, %82 : tensor<2x16384xf32, #blocked> loc(#loc68)
    %84 = arith.select %38, %83, %cst_1 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc69)
    %85 = arith.select %26, %73, %84 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc70)
    %86 = arith.cmpf olt, %61, %cst_6 : tensor<2x1xf32, #blocked> loc(#loc104)
    %87 = arith.cmpf une, %61, %61 : tensor<2x1xf32, #blocked> loc(#loc105)
    %88 = arith.ori %86, %87 : tensor<2x1xi1, #blocked> loc(#loc106)
    %89 = arith.select %88, %61, %cst_6 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc107)
    %90 = arith.subf %cst_6, %89 : tensor<2x1xf32, #blocked> loc(#loc72)
    %91 = arith.cmpf ogt, %65, %cst_6 : tensor<2x1xf32, #blocked> loc(#loc108)
    %92 = arith.cmpf une, %65, %65 : tensor<2x1xf32, #blocked> loc(#loc109)
    %93 = arith.ori %91, %92 : tensor<2x1xi1, #blocked> loc(#loc110)
    %94 = arith.select %93, %65, %cst_6 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc111)
    %95 = arith.cmpf ogt, %90, %94 : tensor<2x1xf32, #blocked> loc(#loc112)
    %96 = arith.cmpf une, %90, %90 : tensor<2x1xf32, #blocked> loc(#loc113)
    %97 = arith.ori %95, %96 : tensor<2x1xi1, #blocked> loc(#loc114)
    %98 = arith.select %97, %90, %94 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc115)
    %99 = arith.mulf %98, %cst_7 : tensor<2x1xf32, #blocked> loc(#loc75)
    %100 = arith.cmpf ogt, %99, %cst_9 : tensor<2x1xf32, #blocked> loc(#loc116)
    %101 = arith.cmpf une, %99, %99 : tensor<2x1xf32, #blocked> loc(#loc117)
    %102 = arith.ori %100, %101 : tensor<2x1xi1, #blocked> loc(#loc118)
    %103 = arith.select %102, %99, %cst_9 : tensor<2x1xi1, #blocked>, tensor<2x1xf32, #blocked> loc(#loc119)
    %104 = arith.divf %cst_8, %103 : tensor<2x1xf32, #blocked> loc(#loc77)
    %105 = tt.broadcast %104 : tensor<2x1xf32, #blocked> -> tensor<2x16384xf32, #blocked> loc(#loc78)
    %106 = arith.mulf %85, %105 : tensor<2x16384xf32, #blocked> loc(#loc78)
    %107 = tt.extern_elementwise %106 {libname = "", libpath = "", pure = true, symbol = "__nv_nearbyintf"} : (tensor<2x16384xf32, #blocked>) -> tensor<2x16384xf32, #blocked> loc(#loc79)
    %108 = arith.cmpf ogt, %107, %cst_10 : tensor<2x16384xf32, #blocked> loc(#loc120)
    %109 = arith.cmpf une, %107, %107 : tensor<2x16384xf32, #blocked> loc(#loc121)
    %110 = arith.ori %108, %109 : tensor<2x16384xi1, #blocked> loc(#loc122)
    %111 = arith.select %110, %107, %cst_10 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc123)
    %112 = arith.cmpf olt, %111, %cst_11 : tensor<2x16384xf32, #blocked> loc(#loc124)
    %113 = arith.cmpf une, %111, %111 : tensor<2x16384xf32, #blocked> loc(#loc125)
    %114 = arith.ori %112, %113 : tensor<2x16384xi1, #blocked> loc(#loc126)
    %115 = arith.select %114, %111, %cst_11 : tensor<2x16384xi1, #blocked>, tensor<2x16384xf32, #blocked> loc(#loc127)
    %116 = arith.fptosi %115 : tensor<2x16384xf32, #blocked> to tensor<2x16384xi8, #blocked> loc(#loc82)
    %117 = arith.muli %8, %cst_20 : tensor<2x1xi32, #blocked> loc(#loc83)
    %118 = tt.broadcast %117 : tensor<2x1xi32, #blocked> -> tensor<2x16384xi32, #blocked> loc(#loc84)
    %119 = arith.addi %19, %118 : tensor<2x16384xi32, #blocked> loc(#loc84)
    %120 = tt.splat %arg4 : !tt.ptr<i8> -> tensor<2x16384x!tt.ptr<i8>, #blocked> loc(#loc85)
    %121 = tt.addptr %120, %119 : tensor<2x16384x!tt.ptr<i8>, #blocked>, tensor<2x16384xi32, #blocked> loc(#loc85)
    tt.store %121, %116, %25 : tensor<2x16384x!tt.ptr<i8>, #blocked> loc(#loc86)
    tt.return loc(#loc87)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:28)
#loc3 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":23:33)
#loc4 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:44)
#loc5 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":24:23)
#loc6 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":25:21)
#loc7 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":26:37)
#loc8 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":33:29)
#loc9 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":41:22)
#loc10 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:39)
#loc11 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:45)
#loc12 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:34)
#loc13 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:63)
#loc14 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:71)
#loc15 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:53)
#loc16 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":42:121)
#loc17 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":43:23)
#loc18 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:40)
#loc19 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:56)
#loc20 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:46)
#loc21 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:34)
#loc22 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:82)
#loc23 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":46:64)
#loc24 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":48:23)
#loc25 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":49:23)
#loc26 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":50:24)
#loc27 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":52:24)
#loc28 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":53:23)
#loc29 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":55:24)
#loc30 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":56:31)
#loc31 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":58:24)
#loc32 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":59:24)
#loc33 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":62:38)
#loc34 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":63:37)
#loc35 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":94:15)
#loc36 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":65:47)
#loc37 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":97:29)
#loc38 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":66:50)
#loc39 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":102:15)
#loc40 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":67:47)
#loc41 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":105:29)
#loc42 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":68:50)
#loc43 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":110:29)
#loc45 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:21)
#loc46 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":96:16)
#loc47 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:37)
#loc48 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":69:43)
#loc49 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":115:29)
#loc51 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:21)
#loc52 = loc("/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime/triton_helpers.py":104:16)
#loc53 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:37)
#loc54 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":70:43)
#loc55 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":71:25)
#loc56 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":72:25)
#loc57 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:54)
#loc58 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":84:123)
#loc59 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":88:65)
#loc60 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":90:24)
#loc61 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":91:24)
#loc62 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":92:24)
#loc63 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":94:24)
#loc64 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":95:24)
#loc65 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":97:24)
#loc66 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":98:31)
#loc67 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":100:24)
#loc68 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":101:24)
#loc69 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":104:39)
#loc70 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":105:39)
#loc71 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":107:46)
#loc72 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":108:17)
#loc73 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":109:46)
#loc74 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":110:46)
#loc75 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":112:24)
#loc76 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":115:46)
#loc77 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":118:25)
#loc78 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":121:24)
#loc79 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":122:36)
#loc80 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":125:46)
#loc81 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":127:46)
#loc82 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":129:25)
#loc83 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:42)
#loc84 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:36)
#loc85 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:29)
#loc86 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":130:54)
#loc87 = loc("/tmp/torchinductor_root/tv/ctv732aq76geyr7p3gclneox6hl2lefctbk4uxv56pawut6us5co.py":73:4)
#loc88 = loc(callsite(#loc35 at #loc36))
#loc89 = loc(callsite(#loc37 at #loc36))
#loc90 = loc(callsite(#loc39 at #loc40))
#loc91 = loc(callsite(#loc41 at #loc40))
#loc92 = loc(callsite(#loc43 at #loc44))
#loc94 = loc(callsite(#loc35 at #loc43))
#loc95 = loc(callsite(#loc45 at #loc43))
#loc96 = loc(callsite(#loc46 at #loc43))
#loc97 = loc(callsite(#loc37 at #loc43))
#loc98 = loc(callsite(#loc49 at #loc50))
#loc100 = loc(callsite(#loc39 at #loc49))
#loc101 = loc(callsite(#loc51 at #loc49))
#loc102 = loc(callsite(#loc52 at #loc49))
#loc103 = loc(callsite(#loc41 at #loc49))
#loc104 = loc(callsite(#loc35 at #loc71))
#loc105 = loc(callsite(#loc45 at #loc71))
#loc106 = loc(callsite(#loc46 at #loc71))
#loc107 = loc(callsite(#loc37 at #loc71))
#loc108 = loc(callsite(#loc39 at #loc73))
#loc109 = loc(callsite(#loc51 at #loc73))
#loc110 = loc(callsite(#loc52 at #loc73))
#loc111 = loc(callsite(#loc41 at #loc73))
#loc112 = loc(callsite(#loc39 at #loc74))
#loc113 = loc(callsite(#loc51 at #loc74))
#loc114 = loc(callsite(#loc52 at #loc74))
#loc115 = loc(callsite(#loc41 at #loc74))
#loc116 = loc(callsite(#loc39 at #loc76))
#loc117 = loc(callsite(#loc51 at #loc76))
#loc118 = loc(callsite(#loc52 at #loc76))
#loc119 = loc(callsite(#loc41 at #loc76))
#loc120 = loc(callsite(#loc39 at #loc80))
#loc121 = loc(callsite(#loc51 at #loc80))
#loc122 = loc(callsite(#loc52 at #loc80))
#loc123 = loc(callsite(#loc41 at #loc80))
#loc124 = loc(callsite(#loc35 at #loc81))
#loc125 = loc(callsite(#loc45 at #loc81))
#loc126 = loc(callsite(#loc46 at #loc81))
#loc127 = loc(callsite(#loc37 at #loc81))
#loc128 = loc(callsite(#loc94 at #loc44))
#loc129 = loc(callsite(#loc95 at #loc44))
#loc130 = loc(callsite(#loc96 at #loc44))
#loc131 = loc(callsite(#loc97 at #loc44))
#loc132 = loc(callsite(#loc100 at #loc50))
#loc133 = loc(callsite(#loc101 at #loc50))
#loc134 = loc(callsite(#loc102 at #loc50))
#loc135 = loc(callsite(#loc103 at #loc50))
