//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_tem_fused_bmm_3  // -- Begin function triton_tem_fused_bmm_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_tem_fused_bmm_3
.visible .entry triton_tem_fused_bmm_3(
	.param .u64 .ptr .global .align 1 triton_tem_fused_bmm_3_param_0,
	.param .u64 .ptr .global .align 1 triton_tem_fused_bmm_3_param_1,
	.param .u64 .ptr .global .align 1 triton_tem_fused_bmm_3_param_2,
	.param .u64 .ptr .global .align 1 triton_tem_fused_bmm_3_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<458>;
	.reg .f32 	%f<154>;
	.reg .b64 	%rd<65>;
	.loc	1 17 0                          // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:17:0

// %bb.0:
	ld.param.u64 	%rd20, [triton_tem_fused_bmm_3_param_2];
	ld.param.u64 	%rd64, [triton_tem_fused_bmm_3_param_1];
	ld.param.u64 	%rd29, [triton_tem_fused_bmm_3_param_0];
$L__tmp0:
	.loc	1 41 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:41:24
	mov.u32 	%r56, %ctaid.x;
	.loc	1 47 22                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:47:22
	shr.s32 	%r57, %r56, 31;
	shr.u32 	%r58, %r57, 28;
	add.s32 	%r59, %r56, %r58;
	shr.s32 	%r60, %r59, 4;
	.loc	1 48 41                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:48:41
	shl.b32 	%r61, %r60, 3;
	.loc	1 48 30                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:48:30
	sub.s32 	%r62, 16, %r61;
	.loc	1 48 50                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:48:50
	min.s32 	%r63, %r62, 8;
	.loc	1 49 40                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:49:40
	rem.s32 	%r64, %r56, %r63;
	.loc	1 49 34                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:49:34
	add.s32 	%r65, %r64, %r61;
	.loc	1 50 19                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:50:19
	and.b32  	%r66, %r59, -16;
	sub.s32 	%r67, %r56, %r66;
	.loc	1 50 30                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:50:30
	div.s32 	%r68, %r67, %r63;
	.loc	1 52 17                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:52:17
	shl.b32 	%r1, %r65, 5;
	.loc	1 52 40                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 16;
	and.b32  	%r4, %r2, 64;
	bfe.u32 	%r69, %r2, 4, 3;
	and.b32  	%r70, %r2, 4;
	shr.u32 	%r71, %r2, 2;
	and.b32  	%r5, %r71, 8;
	bfe.u32 	%r72, %r2, 2, 4;
	shr.u32 	%r73, %r4, 2;
	or.b32  	%r6, %r72, %r73;
	shl.b32 	%r7, %r2, 3;
	and.b32  	%r74, %r7, 8;
	and.b32  	%r75, %r2, 2;
	shl.b32 	%r76, %r75, 3;
	or.b32  	%r77, %r74, %r76;
	.loc	1 52 27                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:52:27
	or.b32  	%r78, %r1, %r69;
	or.b32  	%r79, %r78, 8;
	or.b32  	%r80, %r78, 16;
	or.b32  	%r81, %r78, 24;
	.loc	1 53 17                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:53:17
	shl.b32 	%r82, %r68, 5;
	.loc	1 53 27                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:53:27
	or.b32  	%r8, %r82, %r77;
	.loc	1 55 52                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:55:52
	bfe.s32 	%r83, %r65, 26, 1;
	shr.u32 	%r84, %r83, 23;
	add.s32 	%r85, %r78, %r84;
	and.b32  	%r86, %r85, 8388096;
	sub.s32 	%r87, %r78, %r86;
	add.s32 	%r88, %r79, %r84;
	and.b32  	%r89, %r88, 8388096;
	sub.s32 	%r90, %r79, %r89;
	add.s32 	%r91, %r80, %r84;
	and.b32  	%r92, %r91, 8388096;
	sub.s32 	%r93, %r80, %r92;
	add.s32 	%r94, %r81, %r84;
	and.b32  	%r95, %r94, 8388096;
	sub.s32 	%r96, %r81, %r95;
	.loc	1 61 19                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:61:19
	bfe.s32 	%r97, %r68, 26, 1;
	shr.u32 	%r98, %r97, 26;
	add.s32 	%r99, %r8, %r98;
	and.b32  	%r100, %r99, -64;
	sub.s32 	%r101, %r8, %r100;
	.loc	1 65 26                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:65:26
	mov.u32 	%r9, %ctaid.y;
	.loc	1 66 28                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:28
	shl.b32 	%r102, %r87, 9;
	shl.b32 	%r103, %r90, 9;
	shl.b32 	%r104, %r93, 9;
	shl.b32 	%r105, %r96, 9;
	.loc	1 66 43                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:43
	shl.b32 	%r10, %r70, 3;
	or.b32  	%r106, %r77, %r10;
	and.b32  	%r11, %r7, 64;
	or.b32  	%r12, %r106, %r11;
	.loc	1 66 72                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:72
	shl.b32 	%r107, %r9, 18;
	.loc	1 66 40                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:40
	or.b32  	%r108, %r12, %r107;
	.loc	1 66 66                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:66
	add.s32 	%r109, %r108, %r102;
	add.s32 	%r110, %r108, %r103;
	add.s32 	%r111, %r108, %r104;
	add.s32 	%r112, %r108, %r105;
	.loc	1 66 13                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:66:13
	mul.wide.s32 	%rd30, %r109, 2;
	add.s64 	%rd21, %rd29, %rd30;
	mul.wide.s32 	%rd31, %r110, 2;
	add.s64 	%rd22, %rd29, %rd31;
	mul.wide.s32 	%rd32, %r111, 2;
	add.s64 	%rd23, %rd29, %rd32;
	mul.wide.s32 	%rd33, %r112, 2;
	add.s64 	%rd24, %rd29, %rd33;
	.loc	1 67 27                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:67:27
	shl.b32 	%r113, %r6, 12;
	.loc	1 67 72                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:67:72
	shl.b32 	%r114, %r9, 6;
	.loc	1 67 39                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:67:39
	add.s32 	%r115, %r101, %r114;
	.loc	1 67 66                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:67:66
	add.s32 	%r116, %r115, %r113;
	add.s32 	%r117, %r116, 131072;
	add.s32 	%r118, %r116, 262144;
	add.s32 	%r119, %r116, 393216;
	.loc	1 67 13                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:67:13
	mul.wide.s32 	%rd34, %r116, 2;
	add.s64 	%rd25, %rd64, %rd34;
	mul.wide.s32 	%rd35, %r117, 2;
	add.s64 	%rd26, %rd64, %rd35;
	mul.wide.s32 	%rd36, %r118, 2;
	add.s64 	%rd27, %rd64, %rd36;
	mul.wide.s32 	%rd37, %r119, 2;
	add.s64 	%rd28, %rd64, %rd37;
	.loc	1 72 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:72:24
	shr.u32 	%r120, %r3, 1;
	shr.u32 	%r121, %r2, 1;
	and.b32  	%r122, %r121, 56;
	xor.b32  	%r123, %r12, %r122;
	shl.b32 	%r124, %r123, 1;
	shl.b32 	%r125, %r69, 8;
	or.b32  	%r126, %r125, %r124;
	mov.u32 	%r127, global_smem;
	add.s32 	%r372, %r127, %r126;
	or.b32  	%r128, %r126, 2048;
	add.s32 	%r374, %r127, %r128;
	or.b32  	%r129, %r126, 4096;
	add.s32 	%r376, %r127, %r129;
	or.b32  	%r130, %r126, 6144;
	add.s32 	%r378, %r127, %r130;
	mov.b32 	%r39, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r372 + 0 ], [ %rd21 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r374 + 0 ], [ %rd22 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r376 + 0 ], [ %rd23 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r378 + 0 ], [ %rd24 + 0 ], 0x10, %r39;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:73:24
	and.b32  	%r131, %r2, 24;
	xor.b32  	%r132, %r77, %r131;
	shl.b32 	%r133, %r6, 6;
	shl.b32 	%r134, %r132, 1;
	or.b32  	%r135, %r133, %r134;
	add.s32 	%r136, %r127, %r135;
	add.s32 	%r46, %r136, 8192;
	add.s32 	%r48, %r136, 10240;
	add.s32 	%r50, %r136, 12288;
	add.s32 	%r52, %r136, 14336;
	// begin inline asm
	cp.async.cg.shared.global [ %r46 + 0 ], [ %rd25 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd26 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r50 + 0 ], [ %rd27 + 0 ], 0x10, %r39;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r52 + 0 ], [ %rd28 + 0 ], 0x10, %r39;
	// end inline asm
	cp.async.commit_group;
	and.b32  	%r137, %r2, 15;
	xor.b32  	%r138, %r106, %r120;
	or.b32  	%r139, %r73, %r137;
	shl.b32 	%r140, %r139, 7;
	or.b32  	%r21, %r138, %r140;
	or.b32  	%r141, %r74, 16;
	xor.b32  	%r142, %r141, %r76;
	or.b32  	%r143, %r142, %r10;
	xor.b32  	%r144, %r143, %r120;
	or.b32  	%r22, %r144, %r140;
	or.b32  	%r145, %r77, 32;
	or.b32  	%r146, %r120, %r10;
	xor.b32  	%r147, %r146, %r145;
	or.b32  	%r23, %r147, %r140;
	or.b32  	%r148, %r74, 48;
	or.b32  	%r149, %r146, %r76;
	xor.b32  	%r150, %r149, %r148;
	or.b32  	%r24, %r150, %r140;
	or.b32  	%r151, %r106, 64;
	xor.b32  	%r152, %r151, %r120;
	or.b32  	%r25, %r152, %r140;
	or.b32  	%r153, %r74, 80;
	xor.b32  	%r154, %r153, %r76;
	or.b32  	%r155, %r154, %r10;
	xor.b32  	%r156, %r155, %r120;
	or.b32  	%r26, %r156, %r140;
	or.b32  	%r157, %r77, 96;
	xor.b32  	%r158, %r146, %r157;
	or.b32  	%r27, %r158, %r140;
	or.b32  	%r159, %r74, 112;
	xor.b32  	%r160, %r149, %r159;
	or.b32  	%r28, %r160, %r140;
	shl.b32 	%r161, %r75, 2;
	shl.b32 	%r162, %r70, 2;
	or.b32  	%r163, %r161, %r162;
	xor.b32  	%r29, %r163, %r5;
	shl.b32 	%r164, %r2, 5;
	and.b32  	%r30, %r164, 992;
	or.b32  	%r31, %r29, %r30;
	or.b32  	%r165, %r161, 16;
	or.b32  	%r166, %r5, %r162;
	xor.b32  	%r32, %r166, %r165;
	or.b32  	%r33, %r32, %r30;
	.loc	1 70 25                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:70:25
	shl.b32 	%r167, %r2, 10;
	and.b32  	%r168, %r167, 65536;
	add.s32 	%r169, %r101, %r168;
	shl.b32 	%r170, %r72, 12;
	add.s32 	%r171, %r169, %r170;
	add.s32 	%r172, %r171, %r114;
	add.s32 	%r173, %r172, 393216;
	mul.wide.s32 	%rd38, %r173, 2;
	add.s64 	%rd1, %rd38, 1048576;
	add.s32 	%r174, %r172, 262144;
	mul.wide.s32 	%rd39, %r174, 2;
	add.s64 	%rd2, %rd39, 1048576;
	add.s32 	%r175, %r172, 131072;
	mul.wide.s32 	%rd40, %r175, 2;
	add.s64 	%rd3, %rd40, 1048576;
	mul.wide.s32 	%rd41, %r172, 2;
	add.s64 	%rd4, %rd41, 1048576;
	add.s32 	%r176, %r107, %r105;
	or.b32  	%r177, %r176, %r11;
	or.b32  	%r178, %r177, %r10;
	or.b32  	%r179, %r178, %r76;
	or.b32  	%r180, %r179, %r74;
	mul.wide.s32 	%rd42, %r180, 2;
	add.s64 	%rd43, %rd42, %rd29;
	add.s64 	%rd63, %rd43, 256;
	add.s32 	%r181, %r107, %r104;
	or.b32  	%r182, %r181, %r11;
	or.b32  	%r183, %r182, %r10;
	or.b32  	%r184, %r183, %r76;
	or.b32  	%r185, %r184, %r74;
	mul.wide.s32 	%rd44, %r185, 2;
	add.s64 	%rd45, %rd44, %rd29;
	add.s64 	%rd62, %rd45, 256;
	add.s32 	%r186, %r107, %r103;
	or.b32  	%r187, %r186, %r11;
	or.b32  	%r188, %r187, %r10;
	or.b32  	%r189, %r188, %r76;
	or.b32  	%r190, %r189, %r74;
	mul.wide.s32 	%rd46, %r190, 2;
	add.s64 	%rd47, %rd46, %rd29;
	add.s64 	%rd61, %rd47, 256;
	add.s32 	%r191, %r107, %r102;
	or.b32  	%r192, %r191, %r11;
	or.b32  	%r193, %r192, %r10;
	or.b32  	%r194, %r193, %r76;
	or.b32  	%r195, %r194, %r74;
	mul.wide.s32 	%rd48, %r195, 2;
	add.s64 	%rd49, %rd48, %rd29;
	add.s64 	%rd60, %rd49, 256;
	mov.b32 	%r457, 0;
	mov.f32 	%f146, 0f00000000;
	mov.b32 	%r456, -1;
	shl.b32 	%r392, %r21, 1;
	shl.b32 	%r393, %r22, 1;
	shl.b32 	%r394, %r23, 1;
	shl.b32 	%r395, %r24, 1;
	shl.b32 	%r396, %r25, 1;
	shl.b32 	%r397, %r26, 1;
	shl.b32 	%r398, %r27, 1;
	shl.b32 	%r399, %r28, 1;
	shl.b32 	%r401, %r31, 1;
	shl.b32 	%r405, %r33, 1;
	mov.f32 	%f147, %f146;
	mov.f32 	%f148, %f146;
	mov.f32 	%f149, %f146;
	mov.f32 	%f150, %f146;
	mov.f32 	%f151, %f146;
	mov.f32 	%f152, %f146;
	mov.f32 	%f153, %f146;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u32 	%p1, %r457, 384;
	add.s32 	%r388, %r456, 1;
	setp.gt.u32 	%p2, %r456, 2147483646;
	selp.b32 	%r456, %r388, 0, %p2;
	.loc	1 72 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:72:24
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r389, %r456, 13;
	add.s32 	%r391, %r127, %r389;
	add.s32 	%r200, %r391, %r392;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r276, %r277, %r278, %r279}, [%r200];
	// end inline asm
	add.s32 	%r205, %r391, %r393;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r288, %r289, %r290, %r291}, [%r205];
	// end inline asm
	add.s32 	%r210, %r391, %r394;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r300, %r301, %r302, %r303}, [%r210];
	// end inline asm
	add.s32 	%r215, %r391, %r395;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r312, %r313, %r314, %r315}, [%r215];
	// end inline asm
	add.s32 	%r220, %r391, %r396;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r324, %r325, %r326, %r327}, [%r220];
	// end inline asm
	add.s32 	%r225, %r391, %r397;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r336, %r337, %r338, %r339}, [%r225];
	// end inline asm
	add.s32 	%r230, %r391, %r398;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r348, %r349, %r350, %r351}, [%r230];
	// end inline asm
	add.s32 	%r235, %r391, %r399;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r360, %r361, %r362, %r363}, [%r235];
	// end inline asm
	.loc	1 73 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:73:24
	add.s32 	%r400, %r391, 8192;
	add.s32 	%r240, %r400, %r401;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r236, %r237, %r238, %r239}, [%r240];
	// end inline asm
	add.s32 	%r402, %r29, %r30;
	shl.b32 	%r403, %r402, 1;
	add.s32 	%r404, %r400, %r403;
	add.s32 	%r245, %r404, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r241, %r242, %r243, %r244}, [%r245];
	// end inline asm
	add.s32 	%r250, %r404, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r246, %r247, %r248, %r249}, [%r250];
	// end inline asm
	add.s32 	%r255, %r404, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r251, %r252, %r253, %r254}, [%r255];
	// end inline asm
	add.s32 	%r260, %r400, %r405;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r256, %r257, %r258, %r259}, [%r260];
	// end inline asm
	add.s32 	%r406, %r32, %r30;
	shl.b32 	%r407, %r406, 1;
	add.s32 	%r408, %r400, %r407;
	add.s32 	%r265, %r408, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r261, %r262, %r263, %r264}, [%r265];
	// end inline asm
	add.s32 	%r270, %r408, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r266, %r267, %r268, %r269}, [%r270];
	// end inline asm
	add.s32 	%r275, %r408, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r271, %r272, %r273, %r274}, [%r275];
	// end inline asm
	.loc	1 77 25                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r276, %r277, %r278, %r279 }, { %r236, %r237 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r276, %r277, %r278, %r279 }, { %r256, %r257 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r288, %r289, %r290, %r291 }, { %r238, %r239 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r288, %r289, %r290, %r291 }, { %r258, %r259 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r300, %r301, %r302, %r303 }, { %r241, %r242 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r300, %r301, %r302, %r303 }, { %r261, %r262 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r312, %r313, %r314, %r315 }, { %r243, %r244 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r312, %r313, %r314, %r315 }, { %r263, %r264 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r324, %r325, %r326, %r327 }, { %r246, %r247 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r324, %r325, %r326, %r327 }, { %r266, %r267 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r336, %r337, %r338, %r339 }, { %r248, %r249 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r336, %r337, %r338, %r339 }, { %r268, %r269 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r348, %r349, %r350, %r351 }, { %r251, %r252 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r348, %r349, %r350, %r351 }, { %r271, %r272 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f146, %f147, %f148, %f149 }, { %r360, %r361, %r362, %r363 }, { %r253, %r254 }, { %f146, %f147, %f148, %f149 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f150, %f151, %f152, %f153 }, { %r360, %r361, %r362, %r363 }, { %r273, %r274 }, { %f150, %f151, %f152, %f153 };
	// end inline asm
	.loc	1 79 13                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:79:13
	add.s64 	%rd54, %rd64, %rd4;
	add.s64 	%rd55, %rd64, %rd3;
	add.s64 	%rd56, %rd64, %rd2;
	.loc	1 72 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:72:24
	add.s64 	%rd57, %rd64, %rd1;
	bar.sync 	0;
	selp.b32 	%r373, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r372 + 0 ], [ %rd60 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r374 + 0 ], [ %rd61 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r376 + 0 ], [ %rd62 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r378 + 0 ], [ %rd63 + 0 ], 0x10, %r373;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r46 + 0 ], [ %rd54 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd55 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r50 + 0 ], [ %rd56 + 0 ], 0x10, %r373;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r52 + 0 ], [ %rd57 + 0 ], 0x10, %r373;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:70:25
	add.s32 	%r457, %r457, 128;
	add.s64 	%rd64, %rd64, 1048576;
	add.s64 	%rd63, %rd63, 256;
	add.s64 	%rd62, %rd62, 256;
	add.s64 	%rd61, %rd61, 256;
	add.s64 	%rd60, %rd60, 256;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 27                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:52:27
	or.b32  	%r417, %r1, %r6;
	.loc	1 70 25                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:87:20
	setp.lt.s32 	%p8, %r417, 512;
	.loc	1 87 34                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:87:34
	setp.lt.s32 	%p9, %r8, 64;
	.loc	1 87 26                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:87:26
	and.pred  	%p7, %p8, %p9;
	.loc	1 90 24                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:90:24
	shl.b32 	%r418, %r417, 6;
	.loc	1 90 38                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:90:38
	shl.b32 	%r419, %r9, 15;
	.loc	1 90 21                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:90:21
	add.s32 	%r420, %r8, %r419;
	.loc	1 90 32                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:90:32
	add.s32 	%r421, %r420, %r418;
	.loc	1 91 25                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:91:25
	mul.wide.s32 	%rd59, %r421, 2;
	add.s64 	%rd58, %rd20, %rd59;
	.loc	1 91 67                         // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f146;
	cvt.rn.bf16.f32 	%rs2, %f147;
	cvt.rn.bf16.f32 	%rs3, %f148;
	cvt.rn.bf16.f32 	%rs4, %f149;
	cvt.rn.bf16.f32 	%rs5, %f150;
	cvt.rn.bf16.f32 	%rs6, %f151;
	cvt.rn.bf16.f32 	%rs7, %f152;
	cvt.rn.bf16.f32 	%rs8, %f153;
	shl.b32 	%r422, %r2, 1;
	and.b32  	%r423, %r422, 6;
	or.b32  	%r424, %r423, %r10;
	or.b32  	%r425, %r424, %r11;
	shl.b32 	%r426, %r3, 3;
	or.b32  	%r427, %r425, %r426;
	or.b32  	%r428, %r427, %r5;
	shl.b32 	%r429, %r4, 3;
	xor.b32  	%r430, %r428, %r429;
	or.b32  	%r431, %r12, %r426;
	and.b32  	%r432, %r7, 768;
	or.b32  	%r433, %r432, %r431;
	shr.u32 	%r434, %r430, 1;
	and.b32  	%r435, %r434, 2147483632;
	add.s32 	%r437, %r127, %r435;
	shl.b32 	%r438, %r430, 1;
	add.s32 	%r409, %r437, %r438;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r409 + 0 ], { %rs1, %rs2 };
	// end inline asm
	xor.b32  	%r439, %r430, 256;
	shr.u32 	%r440, %r439, 1;
	and.b32  	%r441, %r440, 2147483632;
	add.s32 	%r442, %r127, %r441;
	shl.b32 	%r443, %r439, 1;
	add.s32 	%r410, %r442, %r443;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r410 + 0 ], { %rs3, %rs4 };
	// end inline asm
	xor.b32  	%r444, %r430, 16;
	shl.b32 	%r445, %r444, 1;
	add.s32 	%r411, %r437, %r445;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r411 + 0 ], { %rs5, %rs6 };
	// end inline asm
	xor.b32  	%r446, %r430, 272;
	shr.u32 	%r447, %r446, 1;
	and.b32  	%r448, %r447, 2147483632;
	add.s32 	%r449, %r127, %r448;
	shl.b32 	%r450, %r446, 1;
	add.s32 	%r412, %r449, %r450;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r412 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r451, %r433, 1;
	and.b32  	%r452, %r451, 496;
	add.s32 	%r453, %r127, %r452;
	shl.b32 	%r454, %r433, 1;
	add.s32 	%r455, %r453, %r454;
	ld.shared.v4.u32 	{%r413, %r414, %r415, %r416}, [%r455];
	// begin inline asm
	@%p7 st.global.v4.b32 [ %rd58 + 0 ], { %r413, %r414, %r415, %r416 };
	// end inline asm
	.loc	1 91 4                          // cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/kt/cktqysrbm6hgnjilxjmz64wh45jur3yvz2xwufg3mvxg3oyhstk6.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 116
.b8 113
.b8 121
.b8 115
.b8 114
.b8 98
.b8 109
.b8 54
.b8 104
.b8 103
.b8 110
.b8 106
.b8 105
.b8 108
.b8 120
.b8 106
.b8 109
.b8 122
.b8 54
.b8 52
.b8 119
.b8 104
.b8 52
.b8 53
.b8 106
.b8 117
.b8 114
.b8 51
.b8 121
.b8 118
.b8 122
.b8 50
.b8 120
.b8 119
.b8 117
.b8 102
.b8 103
.b8 51
.b8 109
.b8 118
.b8 120
.b8 103
.b8 51
.b8 111
.b8 121
.b8 104
.b8 115
.b8 116
.b8 107
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 107
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
