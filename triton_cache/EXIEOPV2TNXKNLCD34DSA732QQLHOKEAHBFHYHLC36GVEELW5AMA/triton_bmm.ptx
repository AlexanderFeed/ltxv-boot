//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_bmm              // -- Begin function triton_bmm
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_bmm
.visible .entry triton_bmm(
	.param .u64 .ptr .global .align 1 triton_bmm_param_0,
	.param .u64 .ptr .global .align 1 triton_bmm_param_1,
	.param .u64 .ptr .global .align 1 triton_bmm_param_2,
	.param .u64 .ptr .global .align 1 triton_bmm_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<363>;
	.reg .f32 	%f<226>;
	.reg .b64 	%rd<46>;
	.loc	1 17 0                          // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:17:0
$L__func_begin0:
	.loc	1 17 0                          // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:17:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_bmm_param_2];
	ld.param.u64 	%rd18, [triton_bmm_param_0];
	ld.param.u64 	%rd19, [triton_bmm_param_1];
$L__tmp0:
	.loc	1 41 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:41:24
	mov.u32 	%r37, %ctaid.x;
	.loc	1 47 22                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:47:22
	shr.s32 	%r38, %r37, 31;
	shr.u32 	%r39, %r38, 29;
	add.s32 	%r40, %r37, %r39;
	.loc	1 48 41                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:48:41
	and.b32  	%r41, %r40, -8;
	.loc	1 48 30                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:48:30
	sub.s32 	%r42, 8, %r41;
	.loc	1 48 50                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:48:50
	min.s32 	%r43, %r42, 8;
	.loc	1 49 40                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:49:40
	rem.s32 	%r44, %r37, %r43;
	.loc	1 49 34                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:49:34
	add.s32 	%r45, %r44, %r41;
	.loc	1 50 19                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:50:19
	sub.s32 	%r46, %r37, %r41;
	.loc	1 50 30                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:50:30
	div.s32 	%r47, %r46, %r43;
	.loc	1 52 17                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:52:17
	shl.b32 	%r1, %r45, 6;
	.loc	1 52 40                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:52:40
	mov.u32 	%r2, %tid.x;
	and.b32  	%r48, %r2, 4;
	shr.u32 	%r49, %r2, 2;
	and.b32  	%r3, %r49, 8;
	and.b32  	%r50, %r49, 16;
	bfe.u32 	%r51, %r2, 2, 5;
	bfe.u32 	%r4, %r2, 3, 4;
	or.b32  	%r5, %r4, 16;
	shl.b32 	%r6, %r2, 3;
	and.b32  	%r52, %r6, 8;
	and.b32  	%r53, %r2, 2;
	shl.b32 	%r54, %r53, 3;
	or.b32  	%r55, %r52, %r54;
	shl.b32 	%r56, %r48, 3;
	or.b32  	%r7, %r55, %r56;
	.loc	1 52 27                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:52:27
	or.b32  	%r57, %r1, %r51;
	or.b32  	%r58, %r57, 32;
	.loc	1 53 17                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:53:17
	shl.b32 	%r59, %r47, 6;
	.loc	1 53 27                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:53:27
	or.b32  	%r8, %r59, %r7;
	.loc	1 55 52                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:55:52
	bfe.s32 	%r60, %r45, 25, 1;
	shr.u32 	%r61, %r60, 23;
	add.s32 	%r62, %r57, %r61;
	and.b32  	%r63, %r62, 8388096;
	sub.s32 	%r64, %r57, %r63;
	add.s32 	%r65, %r58, %r61;
	and.b32  	%r66, %r65, 8388096;
	sub.s32 	%r67, %r58, %r66;
	.loc	1 61 19                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:61:19
	bfe.s32 	%r68, %r47, 25, 1;
	shr.u32 	%r69, %r68, 26;
	add.s32 	%r70, %r8, %r69;
	and.b32  	%r71, %r70, -64;
	sub.s32 	%r72, %r8, %r71;
	.loc	1 65 26                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:65:26
	mov.u32 	%r9, %ctaid.y;
	.loc	1 66 28                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:66:28
	shl.b32 	%r73, %r64, 9;
	shl.b32 	%r74, %r67, 9;
	.loc	1 66 72                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:66:72
	shl.b32 	%r75, %r9, 18;
	.loc	1 66 40                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:66:40
	or.b32  	%r76, %r55, %r75;
	.loc	1 66 66                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:66:66
	add.s32 	%r77, %r76, %r73;
	add.s32 	%r78, %r76, %r74;
	.loc	1 66 13                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:66:13
	mul.wide.s32 	%rd20, %r77, 2;
	add.s64 	%rd14, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r78, 2;
	add.s64 	%rd15, %rd18, %rd21;
	.loc	1 67 27                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:67:27
	shl.b32 	%r79, %r4, 12;
	shl.b32 	%r80, %r5, 12;
	.loc	1 67 72                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:67:72
	shl.b32 	%r81, %r9, 6;
	.loc	1 67 39                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:67:39
	add.s32 	%r82, %r72, %r81;
	.loc	1 67 66                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:67:66
	add.s32 	%r83, %r82, %r79;
	add.s32 	%r84, %r82, %r80;
	.loc	1 67 13                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:67:13
	mul.wide.s32 	%rd22, %r83, 2;
	add.s64 	%rd16, %rd19, %rd22;
	mul.wide.s32 	%rd23, %r84, 2;
	add.s64 	%rd17, %rd19, %rd23;
	.loc	1 72 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:72:24
	and.b32  	%r85, %r2, 24;
	xor.b32  	%r86, %r55, %r85;
	shl.b32 	%r87, %r86, 1;
	shl.b32 	%r88, %r51, 6;
	or.b32  	%r89, %r88, %r87;
	mov.u32 	%r90, global_smem;
	add.s32 	%r264, %r90, %r89;
	add.s32 	%r266, %r264, 2048;
	mov.b32 	%r28, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd14 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd15 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:73:24
	and.b32  	%r91, %r2, 56;
	xor.b32  	%r92, %r7, %r91;
	shl.b32 	%r93, %r92, 1;
	add.s32 	%r94, %r90, %r93;
	shl.b32 	%r95, %r4, 7;
	add.s32 	%r96, %r94, %r95;
	add.s32 	%r31, %r96, 4096;
	add.s32 	%r33, %r96, 6144;
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd16 + 0 ], 0x10, %r28;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd17 + 0 ], 0x10, %r28;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r97, %r53, 2;
	shl.b32 	%r98, %r48, 2;
	or.b32  	%r99, %r97, %r98;
	and.b32  	%r100, %r2, 15;
	shr.u32 	%r101, %r2, 1;
	and.b32  	%r102, %r101, 8;
	xor.b32  	%r14, %r99, %r102;
	or.b32  	%r103, %r50, %r100;
	shl.b32 	%r15, %r103, 5;
	or.b32  	%r16, %r14, %r15;
	or.b32  	%r104, %r97, 16;
	or.b32  	%r105, %r102, %r98;
	xor.b32  	%r17, %r105, %r104;
	or.b32  	%r18, %r17, %r15;
	xor.b32  	%r106, %r7, %r3;
	shl.b32 	%r107, %r2, 6;
	and.b32  	%r108, %r107, 1984;
	or.b32  	%r19, %r106, %r108;
	or.b32  	%r109, %r52, 16;
	xor.b32  	%r110, %r109, %r54;
	or.b32  	%r111, %r110, %r56;
	xor.b32  	%r112, %r111, %r3;
	or.b32  	%r20, %r112, %r108;
	or.b32  	%r113, %r55, 32;
	or.b32  	%r114, %r3, %r56;
	xor.b32  	%r115, %r114, %r113;
	or.b32  	%r21, %r115, %r108;
	or.b32  	%r116, %r52, 48;
	or.b32  	%r117, %r114, %r54;
	xor.b32  	%r118, %r117, %r116;
	or.b32  	%r22, %r118, %r108;
	.loc	1 70 25                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:70:25
	add.s32 	%r119, %r72, %r79;
	add.s32 	%r120, %r119, %r81;
	add.s32 	%r121, %r120, 65536;
	mul.wide.s32 	%rd24, %r121, 2;
	add.s64 	%rd25, %rd24, %rd19;
	add.s64 	%rd45, %rd25, 262144;
	add.s64 	%rd44, %rd16, 262144;
	add.s32 	%r122, %r75, %r74;
	or.b32  	%r123, %r122, %r54;
	or.b32  	%r124, %r123, %r52;
	mul.wide.s32 	%rd26, %r124, 2;
	add.s64 	%rd27, %rd26, %rd18;
	add.s64 	%rd43, %rd27, 64;
	add.s32 	%r125, %r75, %r73;
	or.b32  	%r126, %r125, %r54;
	or.b32  	%r127, %r126, %r52;
	mul.wide.s32 	%rd28, %r127, 2;
	add.s64 	%rd29, %rd28, %rd18;
	add.s64 	%rd42, %rd29, 64;
	mov.b32 	%r362, 0;
	mov.f32 	%f194, 0f00000000;
	mov.b32 	%r361, -1;
	shl.b32 	%r276, %r16, 1;
	shl.b32 	%r277, %r18, 1;
	shl.b32 	%r285, %r19, 1;
	shl.b32 	%r286, %r20, 1;
	shl.b32 	%r287, %r21, 1;
	shl.b32 	%r288, %r22, 1;
	mov.f32 	%f195, %f194;
	mov.f32 	%f196, %f194;
	mov.f32 	%f197, %f194;
	mov.f32 	%f198, %f194;
	mov.f32 	%f199, %f194;
	mov.f32 	%f200, %f194;
	mov.f32 	%f201, %f194;
	mov.f32 	%f202, %f194;
	mov.f32 	%f203, %f194;
	mov.f32 	%f204, %f194;
	mov.f32 	%f205, %f194;
	mov.f32 	%f206, %f194;
	mov.f32 	%f207, %f194;
	mov.f32 	%f208, %f194;
	mov.f32 	%f209, %f194;
	mov.f32 	%f210, %f194;
	mov.f32 	%f211, %f194;
	mov.f32 	%f212, %f194;
	mov.f32 	%f213, %f194;
	mov.f32 	%f214, %f194;
	mov.f32 	%f215, %f194;
	mov.f32 	%f216, %f194;
	mov.f32 	%f217, %f194;
	mov.f32 	%f218, %f194;
	mov.f32 	%f219, %f194;
	mov.f32 	%f220, %f194;
	mov.f32 	%f221, %f194;
	mov.f32 	%f222, %f194;
	mov.f32 	%f223, %f194;
	mov.f32 	%f224, %f194;
	mov.f32 	%f225, %f194;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u32 	%p1, %r362, 480;
	add.s32 	%r272, %r361, 1;
	setp.gt.u32 	%p2, %r361, 2147483646;
	selp.b32 	%r361, %r272, 0, %p2;
	.loc	1 72 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:72:24
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r273, %r361, 12;
	add.s32 	%r275, %r90, %r273;
	add.s32 	%r132, %r275, %r276;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r168, %r169, %r170, %r171}, [%r132];
	// end inline asm
	add.s32 	%r137, %r275, %r277;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r216, %r217, %r218, %r219}, [%r137];
	// end inline asm
	add.s32 	%r278, %r15, %r14;
	shl.b32 	%r279, %r278, 1;
	add.s32 	%r280, %r275, %r279;
	add.s32 	%r142, %r280, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r192, %r193, %r194, %r195}, [%r142];
	// end inline asm
	add.s32 	%r281, %r17, %r15;
	shl.b32 	%r282, %r281, 1;
	add.s32 	%r283, %r275, %r282;
	add.s32 	%r147, %r283, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r240, %r241, %r242, %r243}, [%r147];
	// end inline asm
	.loc	1 73 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:73:24
	add.s32 	%r284, %r275, 4096;
	add.s32 	%r152, %r284, %r285;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r172, %r173, %r220, %r221}, [%r152];
	// end inline asm
	add.s32 	%r157, %r284, %r286;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r178, %r179, %r226, %r227}, [%r157];
	// end inline asm
	add.s32 	%r162, %r284, %r287;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r184, %r185, %r232, %r233}, [%r162];
	// end inline asm
	add.s32 	%r167, %r284, %r288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r190, %r191, %r238, %r239}, [%r167];
	// end inline asm
	.loc	1 77 25                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:77:25
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r168, %r169, %r170, %r171 }, { %r172, %r173 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r168, %r169, %r170, %r171 }, { %r178, %r179 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r168, %r169, %r170, %r171 }, { %r184, %r185 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r168, %r169, %r170, %r171 }, { %r190, %r191 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r192, %r193, %r194, %r195 }, { %r172, %r173 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r192, %r193, %r194, %r195 }, { %r178, %r179 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r192, %r193, %r194, %r195 }, { %r184, %r185 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r192, %r193, %r194, %r195 }, { %r190, %r191 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f194, %f195, %f196, %f197 }, { %r216, %r217, %r218, %r219 }, { %r220, %r221 }, { %f194, %f195, %f196, %f197 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f198, %f199, %f200, %f201 }, { %r216, %r217, %r218, %r219 }, { %r226, %r227 }, { %f198, %f199, %f200, %f201 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f202, %f203, %f204, %f205 }, { %r216, %r217, %r218, %r219 }, { %r232, %r233 }, { %f202, %f203, %f204, %f205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f206, %f207, %f208, %f209 }, { %r216, %r217, %r218, %r219 }, { %r238, %r239 }, { %f206, %f207, %f208, %f209 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f210, %f211, %f212, %f213 }, { %r240, %r241, %r242, %r243 }, { %r220, %r221 }, { %f210, %f211, %f212, %f213 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f214, %f215, %f216, %f217 }, { %r240, %r241, %r242, %r243 }, { %r226, %r227 }, { %f214, %f215, %f216, %f217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f218, %f219, %f220, %f221 }, { %r240, %r241, %r242, %r243 }, { %r232, %r233 }, { %f218, %f219, %f220, %f221 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f222, %f223, %f224, %f225 }, { %r240, %r241, %r242, %r243 }, { %r238, %r239 }, { %f222, %f223, %f224, %f225 };
	// end inline asm
	.loc	1 72 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:72:24
	bar.sync 	0;
	selp.b32 	%r265, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd42 + 0 ], 0x10, %r265;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd43 + 0 ], 0x10, %r265;
	// end inline asm
	cp.async.commit_group;
	.loc	1 73 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:73:24
	// begin inline asm
	cp.async.cg.shared.global [ %r31 + 0 ], [ %rd44 + 0 ], 0x10, %r265;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r33 + 0 ], [ %rd45 + 0 ], 0x10, %r265;
	// end inline asm
	cp.async.commit_group;
	.loc	1 70 25                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:70:25
	add.s32 	%r362, %r362, 32;
	add.s64 	%rd45, %rd45, 262144;
	add.s64 	%rd44, %rd44, 262144;
	add.s64 	%rd43, %rd43, 64;
	add.s64 	%rd42, %rd42, 64;
	@%p1 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 52 40                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:52:40
	or.b32  	%r321, %r1, %r4;
	.loc	1 52 27                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:52:27
	or.b32  	%r322, %r321, 48;
	or.b32  	%r323, %r321, 32;
	or.b32  	%r324, %r1, %r5;
	.loc	1 70 25                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:70:25
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 87 20                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:87:20
	setp.lt.s32 	%p23, %r321, 512;
	setp.lt.s32 	%p24, %r324, 512;
	setp.lt.s32 	%p25, %r323, 512;
	setp.lt.s32 	%p26, %r322, 512;
	.loc	1 87 34                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:87:34
	setp.lt.s32 	%p27, %r8, 64;
	.loc	1 87 26                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:87:26
	and.pred  	%p19, %p23, %p27;
	and.pred  	%p20, %p24, %p27;
	and.pred  	%p21, %p25, %p27;
	and.pred  	%p22, %p26, %p27;
	.loc	1 90 24                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:24
	shl.b32 	%r325, %r321, 6;
	shl.b32 	%r326, %r324, 6;
	shl.b32 	%r327, %r323, 6;
	shl.b32 	%r328, %r322, 6;
	.loc	1 90 38                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:38
	shl.b32 	%r329, %r9, 15;
	.loc	1 90 21                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:21
	add.s32 	%r330, %r8, %r329;
	.loc	1 90 32                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:32
	add.s32 	%r331, %r330, %r325;
	add.s32 	%r332, %r330, %r326;
	.loc	1 90 21                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:21
	add.s32 	%r333, %r327, %r329;
	.loc	1 90 32                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:32
	add.s32 	%r334, %r333, %r8;
	.loc	1 90 21                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:21
	add.s32 	%r335, %r328, %r329;
	.loc	1 90 32                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:90:32
	add.s32 	%r336, %r335, %r8;
	.loc	1 91 25                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:91:25
	mul.wide.s32 	%rd38, %r331, 2;
	add.s64 	%rd34, %rd13, %rd38;
	mul.wide.s32 	%rd39, %r332, 2;
	add.s64 	%rd35, %rd13, %rd39;
	mul.wide.s32 	%rd40, %r334, 2;
	add.s64 	%rd36, %rd13, %rd40;
	mul.wide.s32 	%rd41, %r336, 2;
	add.s64 	%rd37, %rd13, %rd41;
	.loc	1 91 67                         // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:91:67
	cvt.rn.bf16.f32 	%rs1, %f194;
	cvt.rn.bf16.f32 	%rs2, %f195;
	cvt.rn.bf16.f32 	%rs3, %f196;
	cvt.rn.bf16.f32 	%rs4, %f197;
	cvt.rn.bf16.f32 	%rs5, %f198;
	cvt.rn.bf16.f32 	%rs6, %f199;
	cvt.rn.bf16.f32 	%rs7, %f200;
	cvt.rn.bf16.f32 	%rs8, %f201;
	cvt.rn.bf16.f32 	%rs9, %f202;
	cvt.rn.bf16.f32 	%rs10, %f203;
	cvt.rn.bf16.f32 	%rs11, %f204;
	cvt.rn.bf16.f32 	%rs12, %f205;
	cvt.rn.bf16.f32 	%rs13, %f206;
	cvt.rn.bf16.f32 	%rs14, %f207;
	cvt.rn.bf16.f32 	%rs15, %f208;
	cvt.rn.bf16.f32 	%rs16, %f209;
	cvt.rn.bf16.f32 	%rs17, %f210;
	cvt.rn.bf16.f32 	%rs18, %f211;
	cvt.rn.bf16.f32 	%rs19, %f212;
	cvt.rn.bf16.f32 	%rs20, %f213;
	cvt.rn.bf16.f32 	%rs21, %f214;
	cvt.rn.bf16.f32 	%rs22, %f215;
	cvt.rn.bf16.f32 	%rs23, %f216;
	cvt.rn.bf16.f32 	%rs24, %f217;
	cvt.rn.bf16.f32 	%rs25, %f218;
	cvt.rn.bf16.f32 	%rs26, %f219;
	cvt.rn.bf16.f32 	%rs27, %f220;
	cvt.rn.bf16.f32 	%rs28, %f221;
	cvt.rn.bf16.f32 	%rs29, %f222;
	cvt.rn.bf16.f32 	%rs30, %f223;
	cvt.rn.bf16.f32 	%rs31, %f224;
	cvt.rn.bf16.f32 	%rs32, %f225;
	shl.b32 	%r337, %r2, 1;
	and.b32  	%r338, %r337, 6;
	shl.b32 	%r339, %r2, 4;
	and.b32  	%r340, %r339, 1472;
	or.b32  	%r341, %r340, %r338;
	or.b32  	%r342, %r341, %r3;
	and.b32  	%r343, %r6, 960;
	or.b32  	%r344, %r7, %r343;
	shr.u32 	%r345, %r340, 2;
	add.s32 	%r347, %r90, %r345;
	shl.b32 	%r348, %r342, 1;
	add.s32 	%r289, %r347, %r348;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r289 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r349, %r340, 512;
	shr.u32 	%r350, %r349, 2;
	add.s32 	%r351, %r90, %r350;
	add.s32 	%r352, %r351, %r348;
	add.s32 	%r290, %r352, 1024;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r290 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r291, %r289, 32;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r291 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r292, %r352, 1056;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r292 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r293, %r289, 64;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r293 + 0 ], { %rs9, %rs10 };
	// end inline asm
	add.s32 	%r294, %r352, 1088;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r294 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r295, %r289, 96;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r295 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r296, %r352, 1120;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r296 + 0 ], { %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r353, %r343, 2;
	add.s32 	%r354, %r90, %r353;
	shl.b32 	%r355, %r344, 1;
	add.s32 	%r356, %r354, %r355;
	ld.shared.v4.u32 	{%r305, %r306, %r307, %r308}, [%r356];
	or.b32  	%r357, %r343, 1024;
	shr.u32 	%r358, %r357, 2;
	add.s32 	%r359, %r90, %r358;
	add.s32 	%r360, %r359, %r355;
	ld.shared.v4.u32 	{%r309, %r310, %r311, %r312}, [%r360+2048];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r289 + 0 ], { %rs17, %rs18 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r290 + 0 ], { %rs19, %rs20 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r291 + 0 ], { %rs21, %rs22 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r292 + 0 ], { %rs23, %rs24 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r293 + 0 ], { %rs25, %rs26 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r294 + 0 ], { %rs27, %rs28 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r295 + 0 ], { %rs29, %rs30 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b16 [ %r296 + 0 ], { %rs31, %rs32 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r313, %r314, %r315, %r316}, [%r356];
	ld.shared.v4.u32 	{%r317, %r318, %r319, %r320}, [%r360+2048];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd34 + 0 ], { %r305, %r306, %r307, %r308 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd35 + 0 ], { %r309, %r310, %r311, %r312 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd36 + 0 ], { %r313, %r314, %r315, %r316 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd37 + 0 ], { %r317, %r318, %r319, %r320 };
	// end inline asm
	.loc	1 91 4                          // ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py:91:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/tp/ctpbqtabm66yco6p4jrnqfigogizsvycslglto6yexfd2j6c7uui.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 104                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x61 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 112
.b8 98
.b8 113
.b8 116
.b8 97
.b8 98
.b8 109
.b8 54
.b8 54
.b8 121
.b8 99
.b8 111
.b8 54
.b8 112
.b8 52
.b8 106
.b8 114
.b8 110
.b8 113
.b8 102
.b8 105
.b8 103
.b8 111
.b8 103
.b8 105
.b8 122
.b8 115
.b8 118
.b8 121
.b8 99
.b8 115
.b8 108
.b8 103
.b8 108
.b8 116
.b8 111
.b8 54
.b8 121
.b8 101
.b8 120
.b8 102
.b8 100
.b8 50
.b8 106
.b8 54
.b8 99
.b8 55
.b8 117
.b8 117
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 116
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
