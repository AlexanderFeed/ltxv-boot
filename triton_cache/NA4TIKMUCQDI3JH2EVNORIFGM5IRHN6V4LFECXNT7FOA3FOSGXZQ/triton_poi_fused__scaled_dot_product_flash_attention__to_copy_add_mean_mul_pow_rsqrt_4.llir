; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused__scaled_dot_product_flash_attention__to_copy_add_mean_mul_pow_rsqrt_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr !dbg !6 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %10 = shl i32 %9, 10, !dbg !10
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %12 = shl i32 %11, 1, !dbg !11
  %13 = and i32 %12, 1022, !dbg !11
  %14 = or disjoint i32 %13, %10, !dbg !12
  %15 = sdiv i32 %14, 3072, !dbg !13
  %16 = mul i32 %15, 3072, !dbg !14
  %.decomposed = sub i32 %14, %16, !dbg !14
  %17 = sext i32 %14 to i64, !dbg !15
  %18 = getelementptr i32, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %18) #1, !dbg !16
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !16
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !16
  %22 = sext i32 %15 to i64, !dbg !17
  %23 = getelementptr bfloat, ptr addrspace(1) %1, i64 %22, !dbg !17
  %24 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %23) #1, !dbg !18
  %25 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %23) #1, !dbg !18
  %26 = getelementptr bfloat, ptr addrspace(1) %2, i64 %22, !dbg !19
  %27 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %26) #1, !dbg !20
  %28 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %26) #1, !dbg !20
  %29 = sext i32 %.decomposed to i64, !dbg !21
  %30 = getelementptr bfloat, ptr addrspace(1) %3, i64 %29, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %30) #1, !dbg !22
  %32 = bitcast i32 %31 to <2 x bfloat>, !dbg !22
  %33 = getelementptr bfloat, ptr addrspace(1) %4, i64 %29, !dbg !23
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %33) #1, !dbg !24
  %35 = bitcast i32 %34 to <2 x bfloat>, !dbg !24
  %36 = insertelement <2 x i16> poison, i16 %24, i64 0, !dbg !18
  %37 = insertelement <2 x i16> %36, i16 %25, i64 1, !dbg !18
  %38 = bitcast <2 x i16> %37 to <2 x bfloat>, !dbg !18
  %39 = fcmp oge <2 x bfloat> %38, zeroinitializer, !dbg !25
  %40 = select <2 x i1> %39, <2 x bfloat> zeroinitializer, <2 x bfloat> %38, !dbg !25
  %41 = insertelement <2 x i16> poison, i16 %27, i64 0, !dbg !20
  %42 = insertelement <2 x i16> %41, i16 %28, i64 1, !dbg !20
  %43 = bitcast <2 x i16> %42 to <2 x bfloat>, !dbg !20
  %44 = fcmp ole <2 x bfloat> %43, zeroinitializer, !dbg !29
  %45 = getelementptr bfloat, ptr addrspace(1) %5, i64 %17, !dbg !31
  %46 = fpext <2 x bfloat> %32 to <2 x float>, !dbg !32
  %47 = fpext <2 x bfloat> %35 to <2 x float>, !dbg !33
  %48 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !34
  %49 = insertelement <2 x i32> %48, i32 %21, i64 1, !dbg !34
  %50 = sitofp <2 x i32> %49 to <2 x float>, !dbg !34
  %51 = fpext <2 x bfloat> %40 to <2 x float>, !dbg !25
  %52 = fsub <2 x float> zeroinitializer, %51, !dbg !35
  %53 = select <2 x i1> %44, <2 x bfloat> zeroinitializer, <2 x bfloat> %43, !dbg !29
  %54 = fpext <2 x bfloat> %53 to <2 x float>, !dbg !29
  %55 = fcmp ogt <2 x float> %52, %54, !dbg !36
  %56 = fcmp uno <2 x float> %52, zeroinitializer, !dbg !38
  %57 = or <2 x i1> %56, %55, !dbg !39
  %58 = select <2 x i1> %57, <2 x float> %52, <2 x float> %54, !dbg !40
  %59 = fmul <2 x float> %58, splat (float 0x3F80204080000000), !dbg !41
  %60 = fcmp ogt <2 x float> %59, splat (float 0x3EE4F8B580000000), !dbg !42
  %61 = fcmp uno <2 x float> %59, zeroinitializer, !dbg !44
  %62 = or <2 x i1> %60, %61, !dbg !45
  %63 = select <2 x i1> %62, <2 x float> %59, <2 x float> splat (float 0x3EE4F8B580000000), !dbg !46
  %64 = fmul <2 x float> %63, %50, !dbg !47
  %65 = fmul <2 x float> %64, %46, !dbg !48
  %66 = fadd <2 x float> %65, %47, !dbg !49
  %67 = fptrunc <2 x float> %66 to <2 x bfloat>, !dbg !50
  %68 = bitcast <2 x bfloat> %67 to i32, !dbg !50
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %68, ptr addrspace(1) %45) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cj3uddafanikudmhbsgsjy64tmb4n7dzlojhwgduxm5brnfxazxs.py", directory: "/tmp/torchinductor_root/j3")
!4 = !{ptr @triton_poi_fused__scaled_dot_product_flash_attention__to_copy_add_mean_mul_pow_rsqrt_4, !"reqntidx", i32 512}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused__scaled_dot_product_flash_attention__to_copy_add_mean_mul_pow_rsqrt_4", linkageName: "triton_poi_fused__scaled_dot_product_flash_attention__to_copy_add_mean_mul_pow_rsqrt_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 20, column: 28, scope: !6)
!10 = !DILocation(line: 20, column: 33, scope: !6)
!11 = !DILocation(line: 21, column: 36, scope: !6)
!12 = !DILocation(line: 21, column: 23, scope: !6)
!13 = !DILocation(line: 24, column: 19, scope: !6)
!14 = !DILocation(line: 25, column: 19, scope: !6)
!15 = !DILocation(line: 26, column: 30, scope: !6)
!16 = !DILocation(line: 26, column: 35, scope: !6)
!17 = !DILocation(line: 27, column: 30, scope: !6)
!18 = !DILocation(line: 27, column: 35, scope: !6)
!19 = !DILocation(line: 28, column: 30, scope: !6)
!20 = !DILocation(line: 28, column: 35, scope: !6)
!21 = !DILocation(line: 29, column: 31, scope: !6)
!22 = !DILocation(line: 29, column: 36, scope: !6)
!23 = !DILocation(line: 30, column: 31, scope: !6)
!24 = !DILocation(line: 30, column: 36, scope: !6)
!25 = !DILocation(line: 97, column: 29, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !6, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/usr/local/lib/python3.10/dist-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 33, column: 40, scope: !6)
!29 = !DILocation(line: 105, column: 29, scope: !26, inlinedAt: !30)
!30 = !DILocation(line: 35, column: 40, scope: !6)
!31 = !DILocation(line: 46, column: 25, scope: !6)
!32 = !DILocation(line: 29, column: 75, scope: !6)
!33 = !DILocation(line: 30, column: 75, scope: !6)
!34 = !DILocation(line: 31, column: 19, scope: !6)
!35 = !DILocation(line: 34, column: 12, scope: !6)
!36 = !DILocation(line: 102, column: 15, scope: !26, inlinedAt: !37)
!37 = !DILocation(line: 36, column: 40, scope: !6)
!38 = !DILocation(line: 104, column: 21, scope: !26, inlinedAt: !37)
!39 = !DILocation(line: 104, column: 16, scope: !26, inlinedAt: !37)
!40 = !DILocation(line: 105, column: 29, scope: !26, inlinedAt: !37)
!41 = !DILocation(line: 38, column: 19, scope: !6)
!42 = !DILocation(line: 102, column: 15, scope: !26, inlinedAt: !43)
!43 = !DILocation(line: 41, column: 42, scope: !6)
!44 = !DILocation(line: 104, column: 21, scope: !26, inlinedAt: !43)
!45 = !DILocation(line: 104, column: 16, scope: !26, inlinedAt: !43)
!46 = !DILocation(line: 105, column: 29, scope: !26, inlinedAt: !43)
!47 = !DILocation(line: 43, column: 19, scope: !6)
!48 = !DILocation(line: 44, column: 20, scope: !6)
!49 = !DILocation(line: 45, column: 20, scope: !6)
!50 = !DILocation(line: 46, column: 37, scope: !6)
!51 = !DILocation(line: 46, column: 4, scope: !6)
